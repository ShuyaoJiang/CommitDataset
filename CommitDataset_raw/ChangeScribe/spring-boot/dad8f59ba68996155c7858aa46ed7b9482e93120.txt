BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (.gitignore, .settings-template.xml, .travis.yml, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package cli.command:  

1.1. Rename type CustomCommand with CustomCommand

1.2. Rename type CustomCommandFactory with CustomCommandFactory

2. Changes to package com.example:  

2.1. Add a class for boot run application. It allows to:

	Instantiate boot run application;
	Handle main

2.2. Rename type ControllerOne with ControllerOne

2.3. Rename type DevToolsTestApplication with DevToolsTestApplication

2.4. Add a class for resource handling application. It allows to:

	Handle main;
	Get resource servlet registration;
	Get http servlet request

3. Changes to package org.springframework.boot:  

3.1. Rename type AdhocTestSuite with AdhocTestSuite

3.2. Rename type ApplicationArguments with ApplicationArguments

3.3. Add an interface declaration  for application runner. It allows to:

	Run args application arguments

3.4. Add an interface declaration  for banner. It allows to:

	Print banner

3.5. Rename type BeanDefinitionLoaderTests with BeanDefinitionLoaderTests

3.6. Rename type ClearCachesApplicationListener with ClearCachesApplicationListener

3.7. Add an interface declaration  for command line runner. It allows to:

	Run command line runner

3.8. Add a class for default application arguments tests. It allows to:

	Handle arguments must not be null;
	Get args;
	Handle option names;
	Check if default application arguments tests contains option;
	Get option values;
	Get non option args;
	Get no non option args

3.9. Add a class for environment converter. It allows to:

	Instantiate environment converter  with class loader;
	Convert environment  if necessary;
	Convert environment;
	Create environment;
	Copy property sources;
	Check if environment converter is servlet environment;
	Remove property sources

3.10. Rename type EnvironmentConverterTests with EnvironmentConverterTests

3.11. Rename type ExitCodeEvent with ExitCodeEvent

3.12. Add an interface declaration  for exit code exception mapper. It allows to:

	Get exit code

3.13. Add an interface declaration  for exit code generator. It allows to:

	Get exit code

3.14. Add a class for exit code generators tests. It allows to:

	Add all when generators is null should throw exception;
	Add when generator is null should throw exception;
	Get exit code when no generators should return zero;
	Get exit code when generator throws should return one;
	Get exit code when all negative should return lowest value;
	Get exit code when all positive should return highest value;
	Get exit code when using exit code exception mapper should call mapper;
	Handle mock generator;
	Handle mock mapper

3.15. Rename type ImageBannerTests with ImageBannerTests

3.16. Add a class for resource banner. It allows to:

	Instantiate resource banner  with resource;
	Print banner;
	Get property resolvers;
	Get version resolver;
	Get versions map;
	Get application version;
	Get boot version;
	Get version string;
	Get ansi resolver;
	Get title resolver;
	Get application title

3.17. Add a class for simple main tests. It allows to:

	Handle empty application context;
	Handle base package scan;
	Handle config class context;
	Handle xml context;
	Handle mixed context;
	Get args;
	Get output

3.18. Add a class for spring application. It allows to:

	Instantiate spring application  with primary sources class;
	Instantiate spring application  with resource loader, primary sources class and primary sources class;
	Deduce main application class;
	Run spring application;
	Prepare environment;
	Deduce environment class;
	Prepare context;
	Refresh context;
	Configure headless property;
	Get run listeners;
	Get spring factories instances;
	Create spring factories instances;
	Get or create environment;
	Configure environment;
	Configure property sources;
	Configure profiles;
	Configure ignore bean info;
	Convert bind;
	Print banner;
	Create application context;
	Post process application context;
	Apply initializers;
	Log startup info;
	Log startup profile info;
	Get application log;
	Handle load;
	Get resource loader;
	Get class loader;
	Get bean definition registry;
	Create bean definition loader;
	Refresh application context;
	Process spring application spring application after refresh;
	Call runners;
	Call runner;
	Handle run failure;
	Report failure;
	Register logged exception;
	Handle exit code;
	Get exit code  from exception;
	Get exit code  from mapped exception;
	Get exit code  from exit code generator exception;
	Get spring boot exception handler;
	Check if spring application is main thread;
	Get main application class;
	Set main application class;
	Get web application type;
	Set web application type;
	Set allow bean definition overriding;
	Set lazy initialization;
	Set headless;
	Set register shutdown hook;
	Set banner;
	Set banner mode;
	Set log startup info;
	Set add command line properties;
	Set add conversion service;
	Set default properties;
	Set additional profiles;
	Set bean name generator;
	Set environment;
	Add primary sources;
	Get sources;
	Set sources;
	Get all sources;
	Set resource loader;
	Set application context class;
	Set initializers;
	Add initializers;
	Get initializers;
	Set listeners;
	Add listeners;
	Get listeners;
	Run primary source class;
	Run primary sources class;
	Handle main;
	Get exit;
	Close spring application;
	Process spring application spring application as unmodifiable ordered set

3.19. Rename type SpringApplicationRunListener with SpringApplicationRunListener

3.20. Add a class for spring application run listeners. It allows to:

	Instantiate spring application run listeners  with log, listeners collection and listeners collection;
	Starting spring application run listeners;
	Handle environment prepared;
	Handle context prepared;
	Handle context loaded;
	Get started;
	Running configurable application context;
	Get failed;
	Call failed listener

3.21. Rename type SpringBootBanner with SpringBootBanner

3.22. Add an interface declaration  for spring boot exception reporter. It allows to:

	Report exception

3.23. Add a class for spring boot version. It allows to:

	Instantiate spring boot version;
	Get version

3.24. Add a class for start up logger tests. It allows to:

	Handle source class included

3.25. Add a class for startup info logger. It allows to:

	Instantiate startup info logger  with source class;
	Starting log;
	Started log;
	Get startup message;
	Get running message;
	Get started message;
	Get application name;
	Get version;
	Get startup info logger on;
	Get pid;
	Get context;
	Get value;

4. Changes to package org.springframework.boot.actuate:  

4.1. Add a class for actuator configuration class tests

4.2. Add a class for adhoc test suite

5. Changes to package org.springframework.boot.actuate.amqp:  

5.1. Add a class for rabbit health indicator. It allows to:

	Instantiate rabbit health indicator  with rabbit template;
	Do health check;
	Get version

5.2. Add a class for rabbit health indicator tests. It allows to:

	Handle setup;
	Create when rabbit template is null should throw exception;
	Handle health when connection succeeds should return up with version;
	Handle health when connection fails should return down

6. Changes to package org.springframework.boot.actuate.audit:  

6.1. Add a class for audit event. It allows to:

	Instantiate audit event  with data map;
	Instantiate audit event;
	Instantiate audit event  with timestamp instant, data map and data map;
	Convert audit event;
	Get timestamp;
	Get principal;
	Get type;
	Get data;
	Convert audit event to string

6.2. Rename type AuditEventRepository with AuditEventRepository

6.3. Rename type AuditEventTests with AuditEventTests

6.4. Add a class for audit events endpoint tests. It allows to:

	Handle events with type;
	Handle events created after;
	Handle events with principal

6.5. Add a class for in memory audit event repository. It allows to:

	Instantiate in memory audit event repository;
	Set capacity;
	Add audit event;
	Find after instant;
	Check if in memory audit event repository is match;
	Resolve tail event

6.6. Add a class for in memory audit event repository tests. It allows to:

	Handle less than capacity;
	Handle capacity;
	Add null audit event;
	Find in memory audit event repository tests by principal;
	Find in memory audit event repository tests by principal and type;
	Find in memory audit event repository tests by date

7. Changes to package org.springframework.boot.actuate.audit.listener:  

7.1. Rename type AbstractAuditListener with AbstractAuditListener

7.2. Rename type AuditApplicationEvent with AuditApplicationEvent

7.3. Rename type AuditListener with AuditListener

7.4. Rename type AuditListenerTests with AuditListenerTests

8. Changes to package org.springframework.boot.actuate.autoconfigure:  

8.1. Add an object creator class for on endpoint element condition. It allows to:

	Instantiate on endpoint element condition  with annotation type class;
	Get match outcome;
	Get endpoint outcome;
	Get default endpoints outcome

9. Changes to package org.springframework.boot.actuate.autoconfigure.amqp:  

9.1. Add a class for rabbit health indicator auto configuration. It allows to:

	Get rabbit health indicator

9.2. Add a class for rabbit health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

10. Changes to package org.springframework.boot.actuate.autoconfigure.audit:  

10.1. Add an object creator class for audit events endpoint auto configuration. It allows to:

	Audit events endpoint

10.2. Add a class for audit events endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint

11. Changes to package org.springframework.boot.actuate.autoconfigure.beans:  

11.1. Add an object creator class for beans endpoint auto configuration. It allows to:

	Get beans endpoint

11.2. Add a class for beans endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint bean

12. Changes to package org.springframework.boot.actuate.autoconfigure.cassandra:  

12.1. Add a class for cassandra health indicator auto configuration. It allows to:

	Get cassandra health indicator

13. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry:  

13.1. Add a class for access level tests. It allows to:

	Handle access to health endpoint should not be restricted;
	Handle access to info endpoint should not be restricted;
	Handle access to discovery endpoint should not be restricted;
	Handle access to any other endpoint should be restricted

13.2. Add a class for cloud foundry authorization exception. It allows to:

	Instantiate cloud foundry authorization exception  with reason;
	Instantiate cloud foundry authorization exception  with reason, cause throwable and cause throwable;
	Get status code;
	Get reason;
	Get status

13.3. Add a class for cloud foundry authorization exception tests. It allows to:

	Handle status code for invalid token reason should be 401;
	Handle status code for invalid issuer reason should be 401;
	Handle status code for invalid audience reason should be 401;
	Handle status code for invalid signature reason should be 401;
	Handle status code for missing authorization reason should be 401;
	Handle status code for unsupported signature algorithm reason should be 401;
	Handle status code for token expired reason should be 401;
	Handle status code for access denied reason should be 403;
	Handle status code for service unavailable reason should be 503;
	Create exception

13.4. Add a class for token. It allows to:

	Instantiate token;
	Parse json;
	Get content;
	Get signature;
	Get signature algorithm;
	Get issuer;
	Get expiry;
	Get scope;
	Get key id;
	Required map;
	Convert token to string

13.5. Add a class for token tests. It allows to:

	Handle invalid jwt should throw exception;
	Handle invalid jwt claims should throw exception;
	Handle invalid jwt header should throw exception;
	Handle empty jwt signature should throw exception;
	Handle valid jwt;
	Get signature algorithm when alg is null should throw exception;
	Get issuer when iss is null should throw exception;
	Get kid when kid is null should throw exception;
	Get expiry when exp is null should throw exception;
	Create token;
	Get reason requirement

14. Changes to package org.springframework.boot.actuate.autoconfigure.context:  

14.1. Add an object creator class for shutdown endpoint auto configuration. It allows to:

	Get shutdown endpoint

14.2. Add a class for shutdown endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint bean

15. Changes to package org.springframework.boot.actuate.autoconfigure.context.properties:  

15.1. Add a class for configuration properties report endpoint auto configuration. It allows to:

	Get configuration properties report endpoint

15.2. Add a class for configuration properties report endpoint properties. It allows to:

	Get keys  to sanitize;
	Set keys  to sanitize

16. Changes to package org.springframework.boot.actuate.autoconfigure.couchbase:  

16.1. Add a class for couchbase health indicator auto configuration. It allows to:

	Handle couchbase health indicator;
	Create health indicator

16.2. Add a class for couchbase health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

17. Changes to package org.springframework.boot.actuate.autoconfigure.elasticsearch:  

17.1. Add a class for elasticsearch health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when using jest client should create indicator;
	Run when disabled should  not create indicator

17.2. Add a class for elasticsearch health indicator properties. It allows to:

	Get indices;
	Set indices;
	Get response timeout;
	Set response timeout

18. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint:  

18.1. Add an object creator class for endpoint auto configuration. It allows to:

	Get endpoint operation parameter mapper;
	Get endpoint caching operation invoker advisor

19. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.condition:  

19.1. Add a class for on enabled endpoint condition. It allows to:

	Get match outcome;
	Check if on enabled endpoint condition is enabled by default

20. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.jmx:  

20.1. Add a class for default endpoint object name factory. It allows to:

	Instantiate default endpoint object name factory  with jmx endpoint properties, environment, M bean server and M bean server;
	Get object name;
	Determine domain;
	Check if default endpoint object name factory has M bean;
	Get static names

20.2. Add a class for default endpoint object name factory tests. It allows to:

	Generate object name;
	Generate object name  with capitalized id;
	Generate object name  with custom domain;
	Generate object name  with unique names;
	Assert unique object name;
	Generate object name  with static names;
	Generate object name  with duplicate;
	Get endpoint

20.3. Add an object creator class for jmx endpoint auto configuration. It allows to:

	Instantiate jmx endpoint auto configuration  with application context, jmx endpoint properties and jmx endpoint properties;
	Get jmx annotation endpoint discoverer;
	Jmx M bean exporter;
	Get jmx include exclude property endpoint filter

21. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web.jersey:  

21.1. Add a class for jersey web endpoint management context configuration. It allows to:

	Get web endpoint registrar

22. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive:  

22.1. Add an object creator class for web flux endpoint management context configuration. It allows to:

	Get web endpoint reactive handler mapping;
	Get controller endpoint handler mapping

23. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet:  

23.1. Add an object creator class for web mvc endpoint management context configuration. It allows to:

	Get web endpoint servlet handler mapping;
	Get controller endpoint handler mapping

24. Changes to package org.springframework.boot.actuate.autoconfigure.env:  

24.1. Add a class for environment endpoint auto configuration. It allows to:

	Get environment endpoint;
	Get environment endpoint web extension

24.2. Add a class for environment endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when enabled property is false should  not have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Convert keys;
	Validate system properties;
	Get source

24.3. Add a class for environment endpoint properties. It allows to:

	Get keys  to sanitize;
	Set keys  to sanitize

25. Changes to package org.springframework.boot.actuate.autoconfigure.flyway:  

25.1. Add an object creator class for flyway endpoint auto configuration. It allows to:

	Flyway endpoint

25.2. Add a class for flyway endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when enabled property is false should  not have endpoint bean;
	Run when  not exposed should not have endpoint bean

26. Changes to package org.springframework.boot.actuate.autoconfigure.health:  

26.1. Add a class for composite health indicator configuration. It allows to:

	Create health indicator;

26.2. Add a class for composite reactive health indicator configuration. It allows to:

	Create health indicator;

26.3. Add a class for health endpoint auto configuration

26.4. Add a class for health endpoint auto configuration tests. It allows to:

	Handle health endpoint show details default;
	Handle health endpoint adapt reactive health indicator;
	Handle health endpoint merge regular and reactive;
	Handle simple health indicator;
	Handle reactive health indicator

26.5. Add a class for health indicator properties. It allows to:

	Get order;
	Get set order;
	Get http mapping

26.6. Add a class for on enabled health indicator condition. It allows to:

	Instantiate on enabled health indicator condition

27. Changes to package org.springframework.boot.actuate.autoconfigure.info:  

27.1. Add an object creator class for info contributor auto configuration. It allows to:

	Env info contributor;
	Git info contributor;
	Build info contributor

27.2. Add an object creator class for info endpoint auto configuration. It allows to:

	Info endpoint

27.3. Add a class for info endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run should have endpoint bean  even if default is disabled;
	Run when enabled property is false should  not have endpoint bean

27.4. Add a class for on enabled info contributor condition. It allows to:

	Instantiate on enabled info contributor condition

28. Changes to package org.springframework.boot.actuate.autoconfigure.integrationtest:  

28.1. Add a class for endpoint auto configuration classes. It allows to:

	Instantiate endpoint auto configuration classes

28.2. Add a class for jmx endpoint integration tests. It allows to:

	Handle jmx endpoints are exposed;
	Handle jmx endpoints can be excluded;
	Handle single jmx endpoint can be exposed;
	Check endpoint M beans;
	Check if jmx endpoint integration tests is registered;
	Get M bean info;
	Get default object name;
	Get object name

29. Changes to package org.springframework.boot.actuate.autoconfigure.jdbc:  

29.1. Add a class for data source health indicator auto configuration. It allows to:

	Instantiate data source health indicator auto configuration  with data sources map, metadata providers and metadata providers;
	Handle after properties set;
	Db health indicator;
	Get filter data sources;
	Create health indicator;
	Get validation query

30. Changes to package org.springframework.boot.actuate.autoconfigure.jms:  

30.1. Add a class for jms health indicator auto configuration. It allows to:

	Get jms health indicator

30.2. Add a class for jms health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

31. Changes to package org.springframework.boot.actuate.autoconfigure.jolokia:  

31.1. Add a class for jolokia properties. It allows to:

	Get config

32. Changes to package org.springframework.boot.actuate.autoconfigure.ldap:  

32.1. Add a class for ldap health indicator auto configuration. It allows to:

	Handle ldap health indicator

32.2. Add a class for ldap health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

33. Changes to package org.springframework.boot.actuate.autoconfigure.liquibase:  

33.1. Add a class for liquibase endpoint auto configuration. It allows to:

	Get liquibase endpoint;
	Prevent data source  close bean post processor;
	Post process  before initialization;
	Post process  after initialization

34. Changes to package org.springframework.boot.actuate.autoconfigure.logging:  

34.1. Add a class for log file web endpoint properties. It allows to:

	Get external file;
	Set external file

35. Changes to package org.springframework.boot.actuate.autoconfigure.mail:  

35.1. Add a class for mail health indicator auto configuration. It allows to:

	Get mail health indicator

35.2. Add a class for mail health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

36. Changes to package org.springframework.boot.actuate.autoconfigure.management:  

36.1. Add an object creator class for thread dump endpoint auto configuration. It allows to:

	Dump endpoint

36.2. Add a class for thread dump endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint bean

37. Changes to package org.springframework.boot.actuate.autoconfigure.metrics:  

37.1. Add a class for meter registry configurer. It allows to:

	Instantiate meter registry configurer  with customizers object provider, filters object provider, binders object provider and binders object provider;
	Configure meter registry;
	Customize meter registry;
	Add filters;
	Add binders;
	Process meter registry configurer meter registry configurer as ordered list

37.2. Add a class for meter registry configurer tests. It allows to:

	Handle setup;
	Configure when composite should apply customizer;
	Configure should apply customizer;
	Configure should apply filter;
	Configure should apply binder;
	Configure should be called  in order customizer filter binder;
	Configure when add  to global registry should add to global registry;
	Configure when  not add to global registry should add to global registry;
	Create object provider

37.3. Add an object creator class for metrics auto configuration. It allows to:

	Get micrometer clock;
	Get meter registry post processor;
	Get properties meter filter

38. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.atlas:  

38.1. Add a class for atlas properties. It allows to:

	Get uri;
	Set uri;
	Get meter time  to live;
	Set meter time  to live;
	Check if atlas properties is lwc enabled;
	Set lwc enabled;
	Get config refresh frequency;
	Set config refresh frequency;
	Get config time  to live;
	Set config time  to live;
	Get config uri;
	Set config uri;
	Get eval uri;
	Set eval uri

38.2. Add a class for atlas properties config adapter. It allows to:

	Instantiate atlas properties config adapter  with atlas properties;
	Get atlas properties config adapter;
	Step atlas properties config adapter;
	Get enabled;
	Connect timeout;
	Read timeout;
	Handle num threads;
	Get batch size;
	Get uri;
	Get meter TTL;
	Handle lwc enabled;
	Get config refresh frequency;
	Get config TTL;
	Get config uri;
	Handle eval uri

39. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.datadog:  

39.1. Add a class for datadog properties. It allows to:

	Get api key;
	Set api key;
	Get application key;
	Set application key;
	Check if datadog properties is descriptions;
	Set descriptions;
	Get host tag;
	Set host tag;
	Get uri;
	Set uri

39.2. Add a class for datadog properties config adapter. It allows to:

	Instantiate datadog properties config adapter  with datadog properties;
	Api key;
	Get application key;
	Get host tag;
	Get uri;
	Handle descriptions

40. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia:  

40.1. Add a class for ganglia properties. It allows to:

	Check if ganglia properties is enabled;
	Enabled ganglia properties;
	Step ganglia properties;
	Set step;
	Get rate units;
	Set rate units;
	Get duration units;
	Set duration units;
	Get protocol version;
	Set protocol version;
	Get addressing mode;
	Set addressing mode;
	Get time  to live;
	Set time  to live;
	Get host;
	Set host;
	Get port;
	Set port

40.2. Add a class for ganglia properties config adapter. It allows to:

	Instantiate ganglia properties config adapter  with ganglia properties;
	Get ganglia properties config adapter;
	Get enabled;
	Step ganglia properties config adapter;
	Get rate units;
	Get duration units;
	Get protocol version;
	Addressing mode;
	Get ttl;
	Get host;
	Get port

41. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.graphite:  

41.1. Add a class for graphite properties. It allows to:

	Check if graphite properties is enabled;
	Enabled graphite properties;
	Step graphite properties;
	Set step;
	Get rate units;
	Set rate units;
	Get duration units;
	Set duration units;
	Get host;
	Set host;
	Get port;
	Set port;
	Get protocol;
	Set protocol;
	Get tags  as prefix;
	Set tags  as prefix

41.2. Add a class for graphite properties config adapter. It allows to:

	Instantiate graphite properties config adapter  with graphite properties;
	Get graphite properties config adapter;
	Get enabled;
	Step graphite properties config adapter;
	Get rate units;
	Get duration units;
	Get host;
	Get port;
	Get protocol;
	Get tags as prefix

42. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.influx:  

42.1. Add a class for influx properties. It allows to:

	Get influx properties;
	Set db;
	Get consistency;
	Set consistency;
	Get user name;
	Set user name;
	Get password;
	Set password;
	Get retention policy;
	Set retention policy;
	Get retention duration;
	Set retention duration;
	Get retention replication factor;
	Set retention replication factor;
	Get retention shard duration;
	Set retention shard duration;
	Get uri;
	Set uri;
	Check if influx properties is compressed;
	Compressed influx properties;
	Check if influx properties is auto create db;
	Set auto create db

42.2. Add a class for influx properties config adapter. It allows to:

	Instantiate influx properties config adapter  with influx properties;
	D influx properties config adapter;
	Get consistency;
	Get user name;
	Get password;
	Get retention policy;
	Get retention replication factor;
	Get retention duration;
	Get retention shard duration;
	Get uri;
	Get compressed;
	Handle auto create db

43. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus:  

43.1. Add a class for prometheus properties config adapter. It allows to:

	Instantiate prometheus properties config adapter  with prometheus properties;
	Get prometheus properties config adapter;
	Handle descriptions;
	Step prometheus properties config adapter

44. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.simple:  

44.1. Add a class for simple properties. It allows to:

	Step simple properties;
	Set step;
	Get mode;
	Set mode

45. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.statsd:  

45.1. Add a class for statsd properties. It allows to:

	Check if statsd properties is enabled;
	Enabled statsd properties;
	Get flavor;
	Set flavor;
	Get host;
	Set host;
	Get port;
	Set port;
	Get max packet length;
	Set max packet length;
	Get polling frequency;
	Set polling frequency;
	Check if statsd properties is publish unchanged meters;
	Set publish unchanged meters

45.2. Add a class for statsd properties config adapter. It allows to:

	Instantiate statsd properties config adapter  with statsd properties;
	Get statsd properties config adapter;
	Get flavor;
	Get enabled;
	Get host;
	Get port;
	Max packet length;
	Get polling frequency;
	Publish unchanged meters

46. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.web.client:  

46.1. Add an object creator class for rest template metrics configuration. It allows to:

	Rest template exchange tags provider;
	Get metrics rest template customizer

47. Changes to package org.springframework.boot.actuate.autoconfigure.mongo:  

47.1. Add a class for mongo health indicator auto configuration. It allows to:

	Mongo health indicator

47.2. Add a class for mongo health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

48. Changes to package org.springframework.boot.actuate.autoconfigure.neo4j:  

48.1. Add a class for neo 4 j health indicator auto configuration. It allows to:

	Get neo 4 j health indicator

49. Changes to package org.springframework.boot.actuate.autoconfigure.redis:  

49.1. Add a class for redis health indicator auto configuration. It allows to:

	Handle redis health indicator

49.2. Add a class for redis health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

50. Changes to package org.springframework.boot.actuate.autoconfigure.session:  

50.1. Add an object creator class for sessions endpoint auto configuration. It allows to:

	Get session endpoint

51. Changes to package org.springframework.boot.actuate.autoconfigure.solr:  

51.1. Add a class for solr health indicator auto configuration. It allows to:

	Handle solr health indicator

51.2. Add a class for solr health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

52. Changes to package org.springframework.boot.actuate.autoconfigure.system:  

52.1. Add an object creator class for disk space health indicator auto configuration. It allows to:

	Get disk space health indicator;
	Get disk space health indicator properties

52.2. Add a class for disk space health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Handle threshold must be positive;
	Handle threshold can be customized;
	Run when disabled should  not create indicator

52.3. Add a class for disk space health indicator properties. It allows to:

	Get path;
	Set path;
	Get threshold;
	Set threshold

53. Changes to package org.springframework.boot.actuate.autoconfigure.web:  

53.1. Add an interface declaration  for management context factory. It allows to:

	Create management context

54. Changes to package org.springframework.boot.actuate.autoconfigure.web.reactive:  

54.1. Add an object creator class for reactive management context auto configuration. It allows to:

	Handle reactive web child context factory

54.2. Add a class for reactive management context factory. It allows to:

	Create management context;
	Register reactive web server factory;
	Determine reactive web server factory class;
	Can factory class not be instantiated

55. Changes to package org.springframework.boot.actuate.autoconfigure.web.server:  

55.1. Add a class for enable child management context configuration

55.2. Add a class for management server properties tests. It allows to:

	Handle default management server properties;
	Get defined management server properties;
	Trailing slash  of context path is removed;
	Slash management server properties tests of context path is default value

55.3. Add a class for on management port condition. It allows to:

	Get match outcome;
	Check if on management port condition is web application context

56. Changes to package org.springframework.boot.actuate.autoconfigure.web.servlet:  

56.1. Add a class for composite handler adapter. It allows to:

	Instantiate composite handler adapter  with listable bean factory;
	Handle supports;
	Handle http servlet request;
	Get last modified;
	Get adapter;
	Extract adapters

56.2. Add a class for composite handler exception resolver. It allows to:

	Resolve exception;
	Extract resolvers

56.3. Add a class for composite handler mapping. It allows to:

	Get handler;
	Extract mappings

56.4. Add a class for management error endpoint. It allows to:

	Instantiate management error endpoint  with error attributes;
	Invoke servlet web request

56.5. Add an interface declaration  for management servlet context. It allows to:

	Get servlet path

56.6. Add a class for servlet management context factory. It allows to:

	Create management context;
	Register servlet web server factory;
	Determine servlet web server factory class;
	Can factory class not be instantiated

56.7. Add an object creator class for web mvc endpoint child context configuration. It allows to:

	Get error endpoint;
	Get dispatcher servlet;
	Get dispatcher servlet registration bean;
	Handle composite handler mapping;
	Handle composite handler adapter;
	Handle composite handler exception resolver;
	Get request context filter

57. Changes to package org.springframework.boot.actuate.cassandra:  

57.1. Add a class for cassandra health indicator. It allows to:

	Instantiate cassandra health indicator;
	Instantiate cassandra health indicator  with cassandra operations;
	Do health check

58. Changes to package org.springframework.boot.actuate.context:  

58.1. Add a class for shutdown endpoint. It allows to:

	Get shutdown;
	Perform shutdown;
	Set application context

59. Changes to package org.springframework.boot.actuate.couchbase:  

59.1. Add a class for couchbase health indicator. It allows to:

	Instantiate couchbase health indicator  with cluster;
	Do health check

60. Changes to package org.springframework.boot.actuate.elasticsearch:  

60.1. Add a class for elasticsearch health indicator. It allows to:

	Instantiate elasticsearch health indicator  with client, indices list and indices list;
	Instantiate elasticsearch health indicator  with client;
	Do health check

60.2. Add a class for elasticsearch jest health indicator. It allows to:

	Instantiate elasticsearch jest health indicator  with jest client;
	Do health check

60.3. Add a class for elasticsearch jest health indicator tests. It allows to:

	Handle elasticsearch is up;
	Elasticsearch elasticsearch jest health indicator tests with yellow status is up;
	Handle elasticsearch is down;
	Handle elasticsearch is down when query did not succeed;
	Handle elasticsearch is down by response code;
	Handle elasticsearch is out of service by status;
	Assert health details  with status;
	Create jest result

61. Changes to package org.springframework.boot.actuate.endpoint:  

61.1. Add an interface declaration  for operation. It allows to:

	Get type;
	Invoke invocation context

61.2. Add a class for sanitizer. It allows to:

	Instantiate sanitizer;
	Set keys  to sanitize;
	Get pattern;
	Check if sanitizer is regex;
	Sanitize sanitizer

61.3. Rename type SanitizerTests with SanitizerTests

62. Changes to package org.springframework.boot.actuate.endpoint.http:  

62.1. Add a class for actuator media type. It allows to:

	Instantiate actuator media type

63. Changes to package org.springframework.boot.actuate.endpoint.jmx:  

63.1. Add a class for endpoint M bean tests. It allows to:

	Create when response mapper is null should throw exception;
	Create when endpoint is null should throw exception;
	Get M bean info should return M bean info;
	Invoke should invoke jmx operation;
	Invoke when operation failed should translate exception;
	Invoke when operation failed  with jdk exception should reuse exception;
	Invoke when action name is  not an operation should throw exception;
	Invoke should invoke jmx operation  with bean class loader;
	Invoke when operation is invalid should throw exception;
	Invoke invocation context;
	Invoke when mono result should block  on mono;
	Invoke should call response mapper;
	Get attribute should throw exception;
	Set attribute should throw exception;
	Get attributes should return empty attribute list;
	Set attributes should return empty attribute list;
	Create endpoint M bean

63.2. Add an interface declaration  for endpoint object name factory. It allows to:

	Get object name

63.3. Add an interface declaration  for jmx operation response mapper. It allows to:

	Map response type;
	Map response

64. Changes to package org.springframework.boot.actuate.endpoint.web:  

64.1. Add a class for endpoint links resolver. It allows to:

	Instantiate endpoint links resolver  with endpoints collection;
	Resolve links;
	Normalize request url;
	Collect links;
	Create link;

64.2. Add a class for endpoint links resolver tests. It allows to:

	Link resolution  with trailing slash strips slash on self link;
	Link resolution  without trailing slash;
	Get resolved links contains A link for each web endpoint operation;
	Get resolved links contains A link for servlet endpoint;
	Get resolved links contains A link for controller endpoint;
	Get operation with path;
	Get link with href

64.3. Add a class for link. It allows to:

	Instantiate link;
	Get href;
	Check if link is templated;
	Convert link to string

64.4. Add a class for web endpoint response. It allows to:

	Instantiate web endpoint response;
	Instantiate web endpoint response  with body;
	Get body;
	Get status

65. Changes to package org.springframework.boot.actuate.endpoint.web.test:  

65.1. Add an interface declaration  for context factory. It allows to:

	Create context

65.2. Add a class for port holder. It allows to:

	Get port;
	Set port

65.3. Add a class for web endpoint runners. It allows to:

	Instantiate web endpoint runners  with test class;
	Create runners

66. Changes to package org.springframework.boot.actuate.flyway:  

66.1. Add a class for flyway endpoint tests. It allows to:

	Flyway report is produced;
	Handle when flyway has been baselined flyway report is produced

67. Changes to package org.springframework.boot.actuate.health:  

67.1. Add an object creator class for abstract health aggregator. It allows to:

	Handle aggregate;
	Handle aggregate status;
	Handle aggregate details

67.2. Rename type AbstractHealthIndicator with AbstractHealthIndicator

67.3. Add a class for abstract reactive health indicator. It allows to:

	Get health;
	Handle failure;
	Do health check

67.4. Rename type ApplicationHealthIndicator with ApplicationHealthIndicator

67.5. Rename type ApplicationHealthIndicatorTests with ApplicationHealthIndicatorTests

67.6. Add a class for composite health indicator. It allows to:

	Instantiate composite health indicator  with health aggregator, indicators map and indicators map;
	Instantiate composite health indicator  with health aggregator, health indicator registry and health indicator registry;
	Get registry;
	Get health

67.7. Add a class for composite health indicator tests. It allows to:

	Handle setup;
	Create composite health indicator tests with indicators;
	Handle test serialization

67.8. Add a class for composite reactive health indicator. It allows to:

	Instantiate composite reactive health indicator  with health aggregator, reactive health indicator registry and reactive health indicator registry;
	Get timeout strategy;
	Get registry;
	Get health

67.9. Add an interface declaration  for health aggregator. It allows to:

	Handle aggregate

67.10. Add a class for health endpoint. It allows to:

	Instantiate health endpoint  with health indicator;
	Get health;
	Get health for component;
	Get health for component instance;
	Get nested health indicator

67.11. Add a class for health endpoint tests. It allows to:

	Handle status and full details are exposed;
	Handle status for component is exposed;
	Handle status for unknown component return null;
	Handle status for component instance is exposed;
	Handle status for unknown component instance return null;
	Handle status for component instance that is not A composite return null;
	Create health indicator

67.12. Add an interface declaration  for health indicator. It allows to:

	Get health

67.13. Add a class for health indicator name factory. It allows to:

	Apply health indicator name factory

67.14. Add a class for health indicator reactive adapter. It allows to:

	Instantiate health indicator reactive adapter  with delegate health indicator;
	Get health;
	Invoke mono sink

67.15. Add a class for health indicator reactive adapter tests. It allows to:

	Delegate returns health;
	Delegate throw error;
	Delegate runs  on the elastic scheduler

67.16. Add a class for health status http mapper. It allows to:

	Instantiate health status http mapper;
	Handle setup default status mapping;
	Set status mapping;
	Add status mapping;
	Get status mapping;
	Map status;
	Get uniform value

67.17. Rename type HealthTests with HealthTests

67.18. Add a class for ordered health aggregator tests. It allows to:

	Handle setup;
	Handle default order;
	Handle custom order;
	Handle default order with custom status;
	Handle custom order with custom status

67.19. Add an interface declaration  for reactive health indicator. It allows to:

	Get health

67.20. Rename type Status with Status

68. Changes to package org.springframework.boot.actuate.info:  

68.1. Rename type BuildInfoContributor with BuildInfoContributor

68.2. Add a class for environment info contributor. It allows to:

	Instantiate environment info contributor  with configurable environment;
	Contribute info builder

68.3. Add a class for environment info contributor tests. It allows to:

	Extract environment info contributor tests only info property;
	Extract no entry;
	Handle properties from environment should bind correctly;
	Contribute  from configurable environment

68.4. Rename type GitInfoContributor with GitInfoContributor

68.5. Rename type GitInfoContributorTests with GitInfoContributorTests

68.6. Add an interface declaration  for info contributor. It allows to:

	Contribute info builder

68.7. Add a class for info endpoint. It allows to:

	Instantiate info endpoint  with info contributors list;
	Info info endpoint

68.8. Add a class for info endpoint tests. It allows to:

	Info info endpoint tests;
	Info info endpoint tests with no contributors produces empty map

68.9. Add a class for info properties info contributor. It allows to:

	Instantiate info properties info contributor  with properties, mode and mode;
	Get properties;
	Get mode;
	Convert info properties info contributor to simple property source;
	Generate content;
	Extract content;
	Post process content;
	Convert info properties info contributor to property source;
	Copy target properties if set;
	Replace value;
	Get nested map

68.10. Rename type InfoTests with InfoTests

68.11. Add a class for map info contributor. It allows to:

	Instantiate map info contributor  with info map;
	Contribute info builder

68.12. Rename type SimpleInfoContributor with SimpleInfoContributor

68.13. Rename type SimpleInfoContributorTests with SimpleInfoContributorTests

69. Changes to package org.springframework.boot.actuate.jdbc:  

69.1. Add a class for data source health indicator tests. It allows to:

	Handle init;
	Close data source health indicator tests;
	Handle health indicator with default settings;
	Handle health indicator with custom validation query;
	Handle health indicator with invalid validation query;
	Handle health indicator close connection

70. Changes to package org.springframework.boot.actuate.ldap:  

70.1. Add a class for ldap health indicator tests. It allows to:

	Handle ldap is up;
	Handle ldap is down

71. Changes to package org.springframework.boot.actuate.logging:  

71.1. Add a class for log file web endpoint. It allows to:

	Instantiate log file web endpoint  with environment, external file and external file;
	Instantiate log file web endpoint  with environment;
	Log file;
	Get log file resource

71.2. Add a class for log file web endpoint tests. It allows to:

	Before log file web endpoint tests;
	Handle null response without log file;
	Handle null response with missing log file;
	Handle resource response with log file;
	Handle resource response with log file and deprecated property;
	Handle resource response with external log file

71.3. Add a class for loggers endpoint tests. It allows to:

	Handle loggers should return logger configurations;
	Handle logger levels when name specified should return levels;
	Configure log level should set level  on logging system;
	Configure log level  with null sets level on logging system to null

72. Changes to package org.springframework.boot.actuate.mail:  

72.1. Add a class for mail health indicator. It allows to:

	Instantiate mail health indicator  with java mail sender impl;
	Do health check

73. Changes to package org.springframework.boot.actuate.management:  

73.1. Add a class for heap dump web endpoint tests. It allows to:

	Parallel request produces  too many requests response;
	Create heap dumper

73.2. Add a class for thread dump endpoint tests. It allows to:

	Dump threads

74. Changes to package org.springframework.boot.actuate.metrics:  

74.1. Add a class for metrics endpoint tests. It allows to:

	Handle list names handles empty list of meters;
	Handle list names produces list of unique meter names;
	Handle list names recurses over composite registries;
	Handle metric values are the sum of all time series matching tags;
	Find first matching meters  from nested registries;
	Matching meter  not found in nested registries;
	Handle metric tag values are deduplicated;
	Handle metric with space in tag value;
	Handle metric with invalid tag;
	Handle metric present in one registry of A composite and not another;
	Non existent metric;
	Max aggregation;
	Count aggregation;
	Assert metric has statistic equal  to meter registry;
	Get count;
	Handle available tag keys

75. Changes to package org.springframework.boot.actuate.metrics.export.prometheus:  

75.1. Add a class for prometheus scrape endpoint. It allows to:

	Instantiate prometheus scrape endpoint  with collector registry;
	Scrape prometheus scrape endpoint

76. Changes to package org.springframework.boot.actuate.metrics.web.client:  

76.1. Add a class for default rest template exchange tags provider. It allows to:

	Get tags

76.2. Add a class for metrics client http request interceptor. It allows to:

	Instantiate metrics client http request interceptor  with meter registry, tags provider and tags provider;
	Intercept http request;
	Create uri template handler;
	Expand arguments map;
	Expand;
	Get time builder

76.3. Add a class for metrics rest template customizer. It allows to:

	Instantiate metrics rest template customizer  with meter registry, tags provider and tags provider;
	Customize rest template

76.4. Add a class for metrics rest template customizer tests. It allows to:

	Handle setup;
	Intercept rest template;
	Avoid duplicate registration;
	Normalize uri  to contain leading slash;
	Intercept rest template  with uri

76.5. Add a class for rest template exchange tags. It allows to:

	Instantiate rest template exchange tags;
	Get method;
	Get uri;
	Get strip uri;
	Ensure rest template exchange tags;
	Get status;
	Get status message;
	Get client name;
	Get outcome

76.6. Add an interface declaration  for rest template exchange tags provider. It allows to:

	Get tags

77. Changes to package org.springframework.boot.actuate.metrics.web.reactive.server:  

77.1. Add a class for default web flux tags provider. It allows to:

	Http request tags

77.2. Add a class for metrics web filter. It allows to:

	Instantiate metrics web filter  with meter registry, web flux tags provider and web flux tags provider;
	Get filter;
	Handle success;
	Handle error

77.3. Add a class for web flux tags. It allows to:

	Instantiate web flux tags;
	Get method;
	Get status;
	Get uri;
	Get path info;
	Get exception;
	Get outcome

77.4. Add an interface declaration  for web flux tags provider. It allows to:

	Http request tags

78. Changes to package org.springframework.boot.actuate.metrics.web.servlet:  

78.1. Add a class for default web mvc tags provider. It allows to:

	Get tags;
	Get http servlet request long request tags

78.2. Add a class for web mvc tags. It allows to:

	Instantiate web mvc tags;
	Get method;
	Get status;
	Get uri;
	Extract status;
	Get matching pattern;
	Get path info;
	Get exception;
	Get outcome

78.3. Add an interface declaration  for web mvc tags provider. It allows to:

	Get tags;
	Get http servlet request long request tags

79. Changes to package org.springframework.boot.actuate.mongo:  

79.1. Add a class for mongo health indicator. It allows to:

	Instantiate mongo health indicator  with mongo template;
	Do health check

79.2. Add a class for mongo health indicator tests. It allows to:

	Close mongo health indicator tests;
	Handle mongo is up;
	Handle mongo is down

80. Changes to package org.springframework.boot.actuate.neo4j:  

80.1. Add a class for neo 4 j health indicator. It allows to:

	Instantiate neo 4 j health indicator  with session factory;
	Do health check;
	Extract result

80.2. Add a class for neo 4 j health indicator tests. It allows to:

	Before neo 4 j health indicator tests;
	Handle neo 4 j up;
	Handle neo 4 j down

81. Changes to package org.springframework.boot.actuate.redis:  

81.1. Add a class for redis health indicator. It allows to:

	Instantiate redis health indicator  with redis connection factory;
	Do health check

81.2. Add a class for redis health indicator tests. It allows to:

	Handle redis is up;
	Handle redis is down;
	Create health indicator;
	Handle redis cluster is up

81.3. Add a class for redis reactive health indicator. It allows to:

	Instantiate redis reactive health indicator  with reactive redis connection factory;
	Do health check;
	U health builder

81.4. Add a class for redis reactive health indicator tests. It allows to:

	Handle redis is up;
	Handle redis command is down;
	Handle redis connection is down;
	Create health indicator

82. Changes to package org.springframework.boot.actuate.security:  

82.1. Rename type AbstractAuthenticationAuditListener with AbstractAuthenticationAuditListener

82.2. Rename type AbstractAuthorizationAuditListener with AbstractAuthorizationAuditListener

82.3. Add a class for authentication audit listener tests. It allows to:

	Handle init;
	Handle test authentication success;
	Handle test other authentication success;
	Handle test authentication failed;
	Handle test authentication switch;
	Convert test authentication switch back;
	Handle test details are included in audit event;
	Handle authentication event

82.4. Add a class for authorization audit listener. It allows to:

	Process authorization audit listener authorization audit listener on application event;
	Process authorization audit listener authorization audit listener on authentication credentials not found event;
	Process authorization audit listener authorization audit listener on authorization failure event

82.5. Rename type AuthorizationAuditListenerTests with AuthorizationAuditListenerTests

83. Changes to package org.springframework.boot.actuate.session:  

83.1. Add a class for sessions endpoint tests. It allows to:

	Handle sessions for username;
	Get session;
	Get session  with id not found;
	Delete session

84. Changes to package org.springframework.boot.actuate.solr:  

84.1. Add a class for solr health indicator. It allows to:

	Instantiate solr health indicator  with solr client;
	Do health check

84.2. Add a class for solr health indicator tests. It allows to:

	Close solr health indicator tests;
	Handle solr is up;
	Handle solr is up and request failed;
	Handle solr is down;
	Handle mock response

85. Changes to package org.springframework.boot.actuate.system:  

85.1. Add a class for disk space health indicator. It allows to:

	Instantiate disk space health indicator  with path file, threshold data size and threshold data size;
	Do health check

85.2. Add a class for disk space health indicator tests. It allows to:

	Set disk space health indicator tests;
	Handle disk space is up;
	Handle disk space is down

86. Changes to package org.springframework.boot.admin:  

86.1. Add an interface declaration  for spring application admin MX bean. It allows to:

	Check if spring application admin MX bean is ready;
	Check if spring application admin MX bean is embedded web application;
	Get property;
	Handle shutdown

87. Changes to package org.springframework.boot.ansi:  

87.1. Rename type AnsiColorsTests with AnsiColorsTests

87.2. Rename type AnsiElement with AnsiElement

87.3. Rename type AnsiOutput with AnsiOutput

87.4. Rename type AnsiOutputEnabledValue with AnsiOutputEnabledValue

87.5. Rename type AnsiOutputTests with AnsiOutputTests

87.6. Rename type AnsiPropertySourceTests with AnsiPropertySourceTests

88. Changes to package org.springframework.boot.ant:  

88.1. Rename type FindMainClass with FindMainClass

88.2. Rename type ShareAntlibLoader with ShareAntlibLoader

89. Changes to package org.springframework.boot.autoconfigure:  

89.1. Add a class for abstract depends on bean factory post processor. It allows to:

	Instantiate abstract depends on bean factory post processor  with bean class, factory bean class and factory bean class;
	Instantiate abstract depends on bean factory post processor  with bean class;
	Post process bean factory;
	Get bean names;
	Get bean definition

89.2. Add a class for adhoc test suite

89.3. Rename type AutoConfigurationExcludeFilter with AutoConfigurationExcludeFilter

89.4. Rename type AutoConfigurationImportEvent with AutoConfigurationImportEvent

89.5. Add an interface declaration  for auto configuration import filter. It allows to:

	Match auto configuration metadata

89.6. Add an interface declaration  for auto configuration import listener. It allows to:

	Process auto configuration import listener auto configuration import listener on auto configuration import event

89.7. Rename type AutoConfigurationMetadata with AutoConfigurationMetadata

89.8. Rename type AutoConfigurationMetadataLoaderTests with AutoConfigurationMetadataLoaderTests

89.9. Add a class for auto configurations. It allows to:

	Instantiate auto configurations  with classes collection;
	Get sort;
	Get order;
	Merge merged classes set;
	O classes

89.10. Add a class for auto configure configuration class tests

89.11. Rename type EarlyInitFactoryBean with EarlyInitFactoryBean

89.12. Add a class for import auto configuration import selector. It allows to:

	Determine imports;
	Get attributes;
	Get candidate configurations;
	Collect candidate configurations;
	Get configurations  for annotation;
	Load factory names;
	Get exclusions;
	Get annotations;
	Collect annotations;
	Get order;
	Handle invalid excludes

89.13. Add a class for test auto configuration package registrar. It allows to:

	Register bean definitions

89.14. Rename type TestAutoConfigurationSorter with TestAutoConfigurationSorter

90. Changes to package org.springframework.boot.autoconfigure.admin:  

90.1. Rename type SpringApplicationAdminJmxAutoConfiguration with SpringApplicationAdminJmxAutoConfiguration

91. Changes to package org.springframework.boot.autoconfigure.amqp:  

91.1. Add a class for abstract rabbit listener container factory configurer. It allows to:

	Set message converter;
	Set message recoverer;
	Set retry template customizers;
	Set rabbit properties;
	Get rabbit properties;
	Configure factory;

91.2. Add a class for direct rabbit listener container factory configurer. It allows to:

	Configure direct rabbit listener container factory

91.3. Rename type RabbitPropertiesTests with RabbitPropertiesTests

91.4. Add a class for simple rabbit listener container factory configurer. It allows to:

	Configure simple rabbit listener container factory

92. Changes to package org.springframework.boot.autoconfigure.batch:  

92.1. Add a class for basic batch configurer. It allows to:

	Instantiate basic batch configurer  with batch properties, data source, transaction manager customizers and transaction manager customizers;
	Get job repository;
	Get transaction manager;
	Get job launcher;
	Get job explorer;
	Initialize basic batch configurer;
	Create job explorer;
	Create job launcher;
	Create job repository;
	Determine isolation level;
	Create transaction manager;
	Build transaction manager

92.2. Add a class for batch auto configuration. It allows to:

	Instantiate batch auto configuration  with batch properties;
	Get batch data source initializer;
	Get job launcher command line runner;
	Get job execution exit code generator;
	Get job operator

92.3. Rename type JobExecutionEvent with JobExecutionEvent

92.4. Add a class for job execution exit code generator. It allows to:

	Process job execution exit code generator job execution exit code generator on application event;
	Get exit code

92.5. Rename type JobExecutionExitCodeGeneratorTests with JobExecutionExitCodeGeneratorTests

92.6. Add a class for job launcher command line runner. It allows to:

	Instantiate job launcher command line runner  with job launcher, job explorer, job repository and job repository;
	Get set order;
	Get order;
	Set application event publisher;
	Set job registry;
	Set job names;
	Set job parameters converter;
	Set jobs;
	Run job launcher command line runner;
	Launch job  from properties;
	Execute local jobs;
	Execute registered jobs;
	Execute job;
	Get next job parameters;
	Get next job parameters  for existing;
	Check if job launcher command line runner is stopped or failed;
	Get job parameters;
	Merge job parameters

92.7. Add a class for jpa batch configurer. It allows to:

	Instantiate jpa batch configurer  with batch properties, data source, transaction manager customizers, entity manager factory and entity manager factory;
	Determine isolation level;
	Create transaction manager

93. Changes to package org.springframework.boot.autoconfigure.cache:  

93.1. Add a class for cache condition. It allows to:

	Get match outcome

93.2. Add a class for cache configurations. It allows to:

	Instantiate cache configurations;
	Get configuration class;
	Get type

93.3. Add an interface declaration  for cache manager customizer. It allows to:

	Customize cache manager

93.4. Add a class for cache manager customizers. It allows to:

	Instantiate cache manager customizers  with customizers list;
	Customize cache manager

93.5. Rename type CaffeineCacheConfiguration with CaffeineCacheConfiguration

93.6. Rename type CouchbaseCacheConfiguration with CouchbaseCacheConfiguration

93.7. Rename type GenericCacheConfiguration with GenericCacheConfiguration

93.8. Add a class for hazelcast cache configuration. It allows to:

	Get cache manager

93.9. Add a class for infinispan cache configuration. It allows to:

	Get cache manager;
	Handle infinispan cache manager;
	Create embedded cache manager;
	Get default cache configuration

93.10. Add an interface declaration  for j cache manager customizer. It allows to:

	Customize cache manager

93.11. Rename type JCachePropertiesCustomizer with JCachePropertiesCustomizer

93.12. Rename type NoOpCacheConfiguration with NoOpCacheConfiguration

93.13. Add a class for redis cache configuration. It allows to:

	Get cache manager;
	Determine configuration;
	Create configuration

93.14. Rename type SimpleCacheConfiguration with SimpleCacheConfiguration

94. Changes to package org.springframework.boot.autoconfigure.cache.support:  

94.1. Add a class for mock caching provider. It allows to:

	Get cache manager;
	Get default class loader;
	Get default URI;
	Get default properties;
	Close mock caching provider;
	Check if mock caching provider is supported

95. Changes to package org.springframework.boot.autoconfigure.cassandra:  

95.1. Add a class for cassandra auto configuration. It allows to:

	Get cassandra cluster;
	Get query options;
	Get socket options;
	Get pooling options

95.2. Add an interface declaration  for cluster builder customizer. It allows to:

	Customize cluster builder

96. Changes to package org.springframework.boot.autoconfigure.condition:  

96.1. Add a class for all nested conditions. It allows to:

	Instantiate all nested conditions  with configuration phase;
	Get final match outcome;
	Check if all nested conditions has same size

96.2. Add an object creator class for any nested condition. It allows to:

	Instantiate any nested condition  with configuration phase;
	Get final match outcome

96.3. Rename type ConditionEvaluationReportAutoConfigurationImportListener with ConditionEvaluationReportAutoConfigurationImportListener

96.4. Rename type ConditionEvaluationReportAutoConfigurationImportListenerTests with ConditionEvaluationReportAutoConfigurationImportListenerTests

96.5. Add a class for condition message tests. It allows to:

	Check if condition message tests is empty when empty should return true;
	Check if condition message tests is empty when not empty should return false;
	Convert condition message tests to string when empty should return empty string;
	Convert condition message tests to string when has message should return message;
	Append when has existing message should add space;
	Append when appending null should do nothing;
	Append when no message should  not add space;
	And condition when using class should include condition;
	And condition when using string should include condition;
	And condition when including details should include condition;
	Process condition message tests condition message tests of collection should combine;
	Process condition message tests condition message tests of collection when null should return empty;
	Process condition message tests condition message tests for condition should include condition;
	Process condition message tests condition message tests for condition should not add extra space with empty condition;
	Process condition message tests condition message tests for condition when class should include condition;
	Get found exactly should construct message;
	Get found when single element should use singular;
	Get found none at all should construct message;
	Get found when multiple elements should use plural;
	Get found when quote style should quote;
	Get did not find when single element should use singular;
	Get did not find when multiple elements should use plural;
	Get resulted in should construct message;
	Not available should construct message;
	Handle available should construct message

96.6. Add a class for condition outcome. It allows to:

	Instantiate condition outcome;
	Instantiate condition outcome  with condition message;
	Match condition outcome;
	Match condition message;
	No match;
	Check if condition outcome is match;
	Get message;
	Get condition message;
	Check if condition outcome equals;
	Hash code;
	Convert condition outcome to string;
	Handle inverse

96.7. Add an object creator class for none nested conditions. It allows to:

	Instantiate none nested conditions  with configuration phase;
	Get final match outcome

96.8. Rename type OnClassConditionAutoConfigurationImportFilterTests with OnClassConditionAutoConfigurationImportFilterTests

96.9. Rename type OnCloudPlatformCondition with OnCloudPlatformCondition

96.10. Add a class for on expression condition. It allows to:

	Get match outcome;
	Evaluate expression;
	Wrap on expression condition if necessary

96.11. Add a class for on java condition. It allows to:

	Get match outcome;
	Check if on java condition is within

96.12. Add a class for on resource condition. It allows to:

	Get match outcome;
	Collect values

96.13. Add a class for on web application condition. It allows to:

	Get outcomes;
	Get outcome;
	Get match outcome;
	Check if on web application condition is web application;
	Check if on web application condition is any web application;
	Check if on web application condition is servlet web application;
	Check if on web application condition is reactive web application;
	Deduce type

96.14. Add a class for resource condition. It allows to:

	Instantiate resource condition;
	Get match outcome;
	Get resource outcome;
	Start condition message

96.15. Rename type SpringBootCondition with SpringBootCondition

97. Changes to package org.springframework.boot.autoconfigure.condition.scan:  

97.1. Rename type ScannedFactoryBeanConfiguration with ScannedFactoryBeanConfiguration

98. Changes to package org.springframework.boot.autoconfigure.context:  

98.1. Rename type ConfigurationPropertiesAutoConfiguration with ConfigurationPropertiesAutoConfiguration

98.2. Add a class for message source properties. It allows to:

	Get basename;
	Set basename;
	Encoding message source properties;
	Set encoding;
	Get cache duration;
	Set cache duration;
	Check if message source properties is fallback to system locale;
	Set fallback  to system locale;
	Check if message source properties is always use message format;
	Set message source properties always use message format;
	Check if message source properties is use code as default message;
	Get set use code as default message

98.3. Rename type PropertyPlaceholderAutoConfiguration with PropertyPlaceholderAutoConfiguration

99. Changes to package org.springframework.boot.autoconfigure.context.filtersample:  

99.1. Rename type ExampleConfiguration with ExampleConfiguration

99.2. Rename type ExampleFilteredAutoConfiguration with ExampleFilteredAutoConfiguration

100. Changes to package org.springframework.boot.autoconfigure.couchbase:  

100.1. Rename type CouchbaseTestConfigurer with CouchbaseTestConfigurer

100.2. Add a class for on bootstrap hosts condition. It allows to:

	Instantiate on bootstrap hosts condition

101. Changes to package org.springframework.boot.autoconfigure.dao:  

101.1. Add a class for persistence exception translation auto configuration. It allows to:

	Get persistence exception translation post processor

102. Changes to package org.springframework.boot.autoconfigure.data:  

102.1. Add a class for abstract repository configuration source support. It allows to:

	Register bean definitions;
	Get configuration source;
	Get base packages;
	Get bootstrap mode;
	Get annotation;
	Get configuration;
	Get repository configuration extension;
	Set resource loader;
	Set bean factory;
	Set environment

103. Changes to package org.springframework.boot.autoconfigure.data.alt.cassandra:  

103.1. Rename type CityCassandraRepository with CityCassandraRepository

103.2. Add an interface declaration  for reactive city cassandra repository

104. Changes to package org.springframework.boot.autoconfigure.data.alt.couchbase:  

104.1. Rename type CityCouchbaseRepository with CityCouchbaseRepository

105. Changes to package org.springframework.boot.autoconfigure.data.alt.elasticsearch:  

105.1. Rename type CityElasticsearchDbRepository with CityElasticsearchDbRepository

106. Changes to package org.springframework.boot.autoconfigure.data.alt.jpa:  

106.1. Rename type CityJpaRepository with CityJpaRepository

107. Changes to package org.springframework.boot.autoconfigure.data.alt.ldap:  

107.1. Rename type PersonLdapRepository with PersonLdapRepository

108. Changes to package org.springframework.boot.autoconfigure.data.alt.mongo:  

108.1. Rename type CityMongoDbRepository with CityMongoDbRepository

108.2. Add an interface declaration  for reactive city mongo db repository

109. Changes to package org.springframework.boot.autoconfigure.data.alt.neo4j:  

109.1. Add an interface declaration  for city neo 4 j repository

110. Changes to package org.springframework.boot.autoconfigure.data.alt.redis:  

110.1. Rename type CityRedisRepository with CityRedisRepository

111. Changes to package org.springframework.boot.autoconfigure.data.alt.solr:  

111.1. Rename type CitySolrRepository with CitySolrRepository

112. Changes to package org.springframework.boot.autoconfigure.data.cassandra:  

112.1. Add a class for cassandra data auto configuration. It allows to:

	Instantiate cassandra data auto configuration  with bean factory, cassandra properties, cluster, environment and environment;
	Get cassandra mapping;
	Create simple user type resolver;
	Get cassandra converter;
	Get cassandra session;
	Get cassandra template;
	Cassandra custom conversions

112.2. Add a class for cassandra data auto configuration integration tests. It allows to:

	Set cassandra data auto configuration integration tests;
	Close cassandra data auto configuration integration tests;
	Check if cassandra data auto configuration integration tests has default schema action set;
	Check if cassandra data auto configuration integration tests has recreate schema action set;
	Create test keyspace  if not exists

112.3. Add an object creator class for cassandra reactive data auto configuration. It allows to:

	Handle reactive cassandra session;
	Handle reactive cassandra session factory;
	Handle reactive cassandra template

112.4. Add a class for cassandra reactive repositories auto configuration

112.5. Rename type CassandraRepositoriesAutoConfiguration with CassandraRepositoriesAutoConfiguration

113. Changes to package org.springframework.boot.autoconfigure.data.cassandra.city:  

113.1. Add a class for city. It allows to:

	Get id;
	Set id;
	Get name;
	Set name;
	Get state;
	Set state;
	Get country;
	Set country;
	Get map;
	Set map

113.2. Rename type CityRepository with CityRepository

113.3. Add an interface declaration  for reactive city repository

114. Changes to package org.springframework.boot.autoconfigure.data.couchbase:  

114.1. Rename type CouchbaseConfigurerAdapterConfiguration with CouchbaseConfigurerAdapterConfiguration

114.2. Rename type CouchbaseDataProperties with CouchbaseDataProperties

114.3. Rename type CouchbaseRepositoriesAutoConfiguration with CouchbaseRepositoriesAutoConfiguration

114.4. Rename type SpringBootCouchbaseConfigurer with SpringBootCouchbaseConfigurer

114.5. Add a class for spring boot couchbase data configuration. It allows to:

	Instantiate spring boot couchbase data configuration  with application context, couchbase data properties, couchbase configurer object provider and couchbase configurer object provider;
	Get couchbase configurer;
	Get default consistency;
	Get initial entity set;
	Handle couchbase template;
	Get custom conversions;
	Get index manager

115. Changes to package org.springframework.boot.autoconfigure.data.couchbase.city:  

115.1. Rename type City with City

115.2. Rename type CityRepository with CityRepository

116. Changes to package org.springframework.boot.autoconfigure.data.elasticsearch:  

116.1. Add a class for elasticsearch auto configuration. It allows to:

	Instantiate elasticsearch auto configuration  with elasticsearch properties;
	Handle elasticsearch client;
	Create properties

116.2. Rename type ElasticsearchDataAutoConfiguration with ElasticsearchDataAutoConfiguration

116.3. Add a class for elasticsearch data auto configuration tests. It allows to:

	Close elasticsearch data auto configuration tests;
	Template elasticsearch data auto configuration tests back off with no client;
	Handle template exists;
	Mapping context exists;
	Handle converter exists;
	Assert has single bean

116.4. Add a class for elasticsearch properties. It allows to:

	Get cluster name;
	Set cluster name;
	Get cluster nodes;
	Set cluster nodes;
	Get properties;
	Set properties

116.5. Rename type ElasticsearchRepositoriesAutoConfiguration with ElasticsearchRepositoriesAutoConfiguration

117. Changes to package org.springframework.boot.autoconfigure.data.elasticsearch.city:  

117.1. Rename type City with City

117.2. Rename type CityRepository with CityRepository

118. Changes to package org.springframework.boot.autoconfigure.data.empty:  

118.1. Rename type EmptyDataPackage with EmptyDataPackage

119. Changes to package org.springframework.boot.autoconfigure.data.jpa:  

119.1. Rename type EntityManagerFactoryDependsOnPostProcessor with EntityManagerFactoryDependsOnPostProcessor

120. Changes to package org.springframework.boot.autoconfigure.data.jpa.city:  

120.1. Rename type City with City

120.2. Rename type CityRepository with CityRepository

121. Changes to package org.springframework.boot.autoconfigure.data.ldap:  

121.1. Rename type LdapRepositoriesAutoConfiguration with LdapRepositoriesAutoConfiguration

122. Changes to package org.springframework.boot.autoconfigure.data.ldap.person:  

122.1. Rename type Person with Person

122.2. Rename type PersonRepository with PersonRepository

123. Changes to package org.springframework.boot.autoconfigure.data.mongo:  

123.1. Rename type MongoClientDependsOnBeanFactoryPostProcessor with MongoClientDependsOnBeanFactoryPostProcessor

123.2. Add an object creator class for mongo reactive data auto configuration. It allows to:

	Handle reactive mongo database factory;
	Handle reactive mongo template;
	Mapping mongo converter

123.3. Add a class for mongo reactive data auto configuration tests. It allows to:

	Handle template exists;
	Handle backs off if mongo client bean is not present

123.4. Add a class for mongo reactive repositories auto configuration

123.5. Rename type MongoRepositoriesAutoConfiguration with MongoRepositoriesAutoConfiguration

123.6. Add a class for reactive streams mongo client depends on bean factory post processor. It allows to:

	Instantiate reactive streams mongo client depends on bean factory post processor

124. Changes to package org.springframework.boot.autoconfigure.data.mongo.city:  

124.1. Rename type City with City

124.2. Rename type CityRepository with CityRepository

124.3. Add an interface declaration  for reactive city repository. It allows to:

	Find reactive city repository

125. Changes to package org.springframework.boot.autoconfigure.data.mongo.country:  

125.1. Rename type Country with Country

125.2. Rename type CountryRepository with CountryRepository

126. Changes to package org.springframework.boot.autoconfigure.data.neo4j:  

126.1. Add a class for neo 4 j repositories auto configuration

127. Changes to package org.springframework.boot.autoconfigure.data.neo4j.city:  

127.1. Rename type City with City

127.2. Add an interface declaration  for city repository. It allows to:

	Find pageable

128. Changes to package org.springframework.boot.autoconfigure.data.neo4j.country:  

128.1. Rename type Country with Country

128.2. Add an interface declaration  for country repository

129. Changes to package org.springframework.boot.autoconfigure.data.neo4j.empty:  

129.1. Rename type EmptyMarker with EmptyMarker

130. Changes to package org.springframework.boot.autoconfigure.data.redis:  

130.1. Add an interface declaration  for jedis client configuration builder customizer. It allows to:

	Customize jedis client configuration builder

130.2. Add a class for jedis connection configuration. It allows to:

	Instantiate jedis connection configuration  with redis properties, sentinel configuration object provider, cluster configuration object provider and cluster configuration object provider;
	Handle redis connection factory;
	Create jedis connection factory;
	Get jedis client configuration;
	Apply properties;
	Pooling redis properties pool;
	Get jedis pool config;
	Customize configuration  from url

130.3. Add an interface declaration  for lettuce client configuration builder customizer. It allows to:

	Customize lettuce client configuration builder

130.4. Add a class for redis auto configuration. It allows to:

	Handle redis template;
	String redis template

130.5. Add an object creator class for redis reactive auto configuration. It allows to:

	Handle reactive redis template

130.6. Add a class for redis reactive auto configuration tests. It allows to:

	Handle test default redis configuration

130.7. Add a class for redis repositories auto configuration

131. Changes to package org.springframework.boot.autoconfigure.data.redis.city:  

131.1. Rename type City with City

131.2. Rename type CityRepository with CityRepository

132. Changes to package org.springframework.boot.autoconfigure.data.rest:  

132.1. Add an object creator class for repository rest mvc auto configuration. It allows to:

	Get spring boot repository rest configurer

132.2. Rename type RepositoryRestProperties with RepositoryRestProperties

132.3. Rename type SpringBootRepositoryRestConfigurer with SpringBootRepositoryRestConfigurer

133. Changes to package org.springframework.boot.autoconfigure.data.solr:  

133.1. Rename type SolrRepositoriesAutoConfiguration with SolrRepositoriesAutoConfiguration

134. Changes to package org.springframework.boot.autoconfigure.data.solr.city:  

134.1. Rename type City with City

134.2. Rename type CityRepository with CityRepository

135. Changes to package org.springframework.boot.autoconfigure.data.web:  

135.1. Add a class for spring data web auto configuration. It allows to:

	Instantiate spring data web auto configuration  with spring data web properties;
	Handle pageable customizer;
	Sort customizer

135.2. Add a class for spring data web auto configuration tests. It allows to:

	Handle web support is auto configured in web application contexts;
	Handle auto configuration backs off in non web application contexts;
	Customize pageable;
	Handle default pageable;
	Customize sort

136. Changes to package org.springframework.boot.autoconfigure.domain:  

136.1. Add a class for entity scanner. It allows to:

	Instantiate entity scanner  with application context;
	Scan annotation types class;
	Get packages

137. Changes to package org.springframework.boot.autoconfigure.domain.scan.a:  

137.1. Rename type EmbeddableA with EmbeddableA

137.2. Rename type EntityA with EntityA

138. Changes to package org.springframework.boot.autoconfigure.domain.scan.b:  

138.1. Rename type EmbeddableB with EmbeddableB

138.2. Rename type EntityB with EntityB

139. Changes to package org.springframework.boot.autoconfigure.domain.scan.c:  

139.1. Rename type EmbeddableC with EmbeddableC

139.2. Rename type EntityC with EntityC

140. Changes to package org.springframework.boot.autoconfigure.elasticsearch.jest:  

140.1. Add an interface declaration  for http client config builder customizer. It allows to:

	Customize builder

140.2. Rename type JestAutoConfiguration with JestAutoConfiguration

141. Changes to package org.springframework.boot.autoconfigure.flyway:  

141.1. Rename type FlywayMigrationInitializer with FlywayMigrationInitializer

141.2. Add an interface declaration  for flyway migration strategy. It allows to:

	Migrate flyway

141.3. Add a class for flyway properties. It allows to:

	Check if flyway properties is enabled;
	Enabled flyway properties;
	Check if flyway properties is check location;
	Set check location;
	Get locations;
	Set locations;
	Encoding flyway properties;
	Set encoding;
	Get connect retries;
	Set connect retries;
	Get schemas;
	Set schemas;
	Get table;
	Set table;
	Get baseline description;
	Set baseline description;
	Get baseline version;
	Set baseline version;
	Get installed  by;
	Set installed  by;
	Get placeholders;
	Set placeholders;
	Get placeholder prefix;
	Set placeholder prefix;
	Get placeholder suffix;
	Set placeholder suffix;
	Check if flyway properties is placeholder replacement;
	Set placeholder replacement;
	Get flyway properties sql migration prefix;
	Set sql migration prefix;
	Get flyway properties sql migration suffixes;
	Set sql migration suffixes;
	Get flyway properties sql migration separator;
	Set sql migration separator;
	Get repeatable sql migration prefix;
	Set repeatable sql migration prefix;
	Get target;
	Set target;
	Check if flyway properties is create data source;
	Get url;
	Set url;
	Get user;
	Set user;
	Get password;
	Set password;
	Get init sqls;
	Set init sqls;
	Check if flyway properties is baseline on migrate;
	Set baseline  on migrate;
	Check if flyway properties is clean disabled;
	Set clean disabled;
	Check if flyway properties is clean on validation error;
	Set clean  on validation error;
	Check if flyway properties is group;
	Set group;
	Check if flyway properties is ignore missing migrations;
	Set ignore missing migrations;
	Check if flyway properties is ignore ignored migrations;
	Set ignore ignored migrations;
	Check if flyway properties is ignore pending migrations;
	Set ignore pending migrations;
	Check if flyway properties is ignore future migrations;
	Set ignore future migrations;
	Check if flyway properties is mixed;
	Set mixed;
	Check if flyway properties is out of order;
	Set flyway properties out of order;
	Check if flyway properties is skip default callbacks;
	Set skip default callbacks;
	Check if flyway properties is skip default resolvers;
	Set skip default resolvers;
	Check if flyway properties is validate on migrate;
	Set validate  on migrate

141.4. Add a class for flyway schema management provider. It allows to:

	Instantiate flyway schema management provider  with flyway instances iterable;
	Get schema management

142. Changes to package org.springframework.boot.autoconfigure.freemarker:  

142.1. Add a class for free marker auto configuration. It allows to:

	Instantiate free marker auto configuration  with application context, free marker properties and free marker properties;
	Check template location exists;
	Get locations;
	Handle location exists

142.2. Add a class for free marker auto configuration tests. It allows to:

	Render non web app template;
	Greeting free marker auto configuration tests;
	Non existent template location;
	Handle empty template location;
	Non existent location and empty location

142.3. Add a class for free marker properties. It allows to:

	Instantiate free marker properties;
	Get settings;
	Set settings;
	Get template loader path;
	Check if free marker properties is prefer file system access;
	Set prefer file system access;
	Set template loader path

142.4. Rename type FreeMarkerTemplateAvailabilityProviderTests with FreeMarkerTemplateAvailabilityProviderTests

143. Changes to package org.springframework.boot.autoconfigure.groovy.template:  

143.1. Add a class for groovy template auto configuration tests. It allows to:

	Handle setup context;
	Close groovy template auto configuration tests;
	Handle default configuration;
	Handle empty template location;
	Handle default view resolution;
	Check if groovy template auto configuration tests includes view resolution;
	Disable view resolution;
	Handle locale view resolution;
	Handle custom content type;
	Handle custom prefix;
	Handle custom suffix;
	Handle custom template loader path;
	Disable cache;
	Render template;
	Handle custom configuration;
	Register and refresh context;
	Render groovy template auto configuration tests;
	Render locale

143.2. Rename type GroovyTemplateAvailabilityProviderTests with GroovyTemplateAvailabilityProviderTests

143.3. Rename type GroovyTemplateProperties with GroovyTemplateProperties

144. Changes to package org.springframework.boot.autoconfigure.h2:  

144.1. Add a class for h 2 console auto configuration. It allows to:

	H 2 console

144.2. Add a class for h 2 console auto configuration tests. It allows to:

	Handle setup context;
	Close h 2 console auto configuration tests;
	Handle console is disabled by default;
	Handle property can enable console;
	Handle custom path must begin with A slash;
	Handle custom path with trailing slash;
	Handle custom path;
	Handle custom init parameters

145. Changes to package org.springframework.boot.autoconfigure.hateoas:  

145.1. Rename type HateoasProperties with HateoasProperties

146. Changes to package org.springframework.boot.autoconfigure.hazelcast:  

146.1. Add a class for hazelcast auto configuration

146.2. Add a class for hazelcast auto configuration tests. It allows to:

	Handle default config file

146.3. Add a class for hazelcast client factory. It allows to:

	Instantiate hazelcast client factory  with client config location resource;
	Instantiate hazelcast client factory  with client config;
	Get client config;
	Get hazelcast instance

146.4. Add a class for hazelcast config resource condition. It allows to:

	Instantiate hazelcast config resource condition;
	Get resource outcome

146.5. Add a class for hazelcast instance factory. It allows to:

	Instantiate hazelcast instance factory  with config location resource;
	Instantiate hazelcast instance factory  with config;
	Get config;
	Get hazelcast instance

146.6. Rename type HazelcastProperties with HazelcastProperties

147. Changes to package org.springframework.boot.autoconfigure.http:  

147.1. Add a class for http message converters. It allows to:

	Instantiate http message converters  with additional converters;
	Instantiate http message converters  with additional converters collection;
	Instantiate http message converters  with converters collection;
	Get combined converters;
	Check if http message converters is replacement;
	Configure part converters;
	Extract part converters;
	Post process converters;
	Post process part converters;
	Get default converters;
	Get default message converters;
	Reorder xml converters  to end;
	Get iterator;
	Get converters;
	Add class  if exists

147.2. Add a class for http message converters auto configuration without jackson tests. It allows to:

	Close http message converters auto configuration without jackson tests;
	Handle auto configuration works with spring hateoas but without jackson

147.3. Add a class for http message converters tests. It allows to:

	Check if http message converters tests contains defaults;
	Add http message converters tests before existing converter;
	Add new converters;
	Convert converters are added;
	Post process converters;
	Post process part converters;
	Extract form part converters;
	Find form converter

148. Changes to package org.springframework.boot.autoconfigure.influx:  

148.1. Add an object creator class for influx db auto configuration. It allows to:

	Get influx db;
	Determine builder

148.2. Add a class for influx db properties. It allows to:

	Get url;
	Set url;
	Get user;
	Set user;
	Get password;
	Set password

149. Changes to package org.springframework.boot.autoconfigure.jackson:  

149.1. Add an interface declaration  for jackson 2 object mapper builder customizer. It allows to:

	Customize jackson 2 object mapper builder

149.2. Add a class for jackson properties. It allows to:

	Get date format;
	Set date format;
	Get joda date time format;
	Set joda date time format;
	Get property naming strategy;
	Set property naming strategy;
	Get visibility;
	Get serialization;
	Get deserialization;
	Get mapper;
	Get parser;
	Get generator;
	Get default property inclusion;
	Set default property inclusion;
	Get time zone;
	Set time zone;
	Get locale;
	Set locale

150. Changes to package org.springframework.boot.autoconfigure.jdbc:  

150.1. Rename type DataSourceBeanCreationFailureAnalyzer with DataSourceBeanCreationFailureAnalyzer

150.2. Add a class for data source initializer. It allows to:

	Instantiate data source initializer  with data source, data source properties, resource loader and resource loader;
	Instantiate data source initializer  with data source, data source properties and data source properties;
	Get data source;
	Create schema;
	Handle init schema;
	Check if data source initializer is enabled;
	Check if data source initializer is embedded;
	Get scripts;
	Get resources;
	Do get resources;
	Run scripts

150.3. Add a class for data source initializer invoker. It allows to:

	Instantiate data source initializer invoker  with data source object provider, data source properties, application context and application context;
	Handle after properties set;
	Initialize data source initializer;
	Process data source initializer invoker data source initializer invoker on application event;
	Get data source initializer

150.4. Add a class for data source initializer post processor. It allows to:

	Get order;
	Post process  before initialization;
	Post process  after initialization

150.5. Add a class for data source properties tests. It allows to:

	Determine driver;
	Determine driver  with explicit config;
	Determine url;
	Determine url  with no embedded support;
	Determine url  with explicit config;
	Determine url  with generate unique name;
	Determine username;
	Determine username  with explicit config;
	Determine password;
	Determine password  with explicit config;
	Determine credentials  for schema scripts;
	Determine credentials  for data scripts

150.6. Add a class for data source schema created event. It allows to:

	Instantiate data source schema created event  with data source

150.7. Add a class for embedded data source configuration. It allows to:

	Set bean class loader;
	Get data source

150.8. Add a class for embedded data source configuration tests. It allows to:

	Close context;
	Handle default embedded database;
	Generate unique name;
	Get database name;
	Get load

150.9. Add a class for hikari data source configuration tests. It allows to:

	Handle test data source exists;
	Handle test data source properties overridden;
	Handle test data source generic properties overridden;
	Handle test data source defaults preserved;
	Convert name is aliased;
	Handle pool name takes precedence over name

150.10. Add an object creator class for hikari driver configuration failure analyzer. It allows to:

	Analyze root failure throwable

150.11. Rename type JndiDataSourceAutoConfiguration with JndiDataSourceAutoConfiguration

150.12. Rename type MultiDataSourceConfiguration with MultiDataSourceConfiguration

150.13. Rename type MultiDataSourceUsingPrimaryConfiguration with MultiDataSourceUsingPrimaryConfiguration

150.14. Add a class for test data source. It allows to:

	Instantiate test data source;

150.15. Add a class for xA data source auto configuration. It allows to:

	Get data source;
	Set bean class loader;
	Create xa data source;
	Create xa data source instance;
	Handle bind xa properties;
	Get binder source

151. Changes to package org.springframework.boot.autoconfigure.jersey:  

151.1. Add an interface declaration  for resource config customizer. It allows to:

	Customize resource config

152. Changes to package org.springframework.boot.autoconfigure.jms:  

152.1. Rename type DefaultJmsListenerContainerFactoryConfigurer with DefaultJmsListenerContainerFactoryConfigurer

152.2. Rename type JmsPropertiesTests with JmsPropertiesTests

153. Changes to package org.springframework.boot.autoconfigure.jms.activemq:  

153.1. Rename type ActiveMQAutoConfiguration with ActiveMQAutoConfiguration

153.2. Add an interface declaration  for active MQ connection factory customizer. It allows to:

	Customize active MQ connection factory

153.3. Rename type ActiveMQConnectionFactoryFactory with ActiveMQConnectionFactoryFactory

153.4. Rename type ActiveMQPropertiesTests with ActiveMQPropertiesTests

153.5. Rename type ActiveMQXAConnectionFactoryConfiguration with ActiveMQXAConnectionFactoryConfiguration

154. Changes to package org.springframework.boot.autoconfigure.jms.artemis:  

154.1. Rename type ArtemisAutoConfiguration with ArtemisAutoConfiguration

154.2. Add an interface declaration  for artemis configuration customizer. It allows to:

	Customize configuration

154.3. Add a class for artemis connection factory factory. It allows to:

	Instantiate artemis connection factory factory  with listable bean factory, artemis properties and artemis properties;
	Create connection factory;
	Start embedded jms;
	Do create connection factory;
	Deduce mode;
	Create embedded connection factory;
	Create native connection factory

154.4. Rename type ArtemisEmbeddedConfigurationFactory with ArtemisEmbeddedConfigurationFactory

154.5. Rename type ArtemisEmbeddedConfigurationFactoryTests with ArtemisEmbeddedConfigurationFactoryTests

154.6. Rename type ArtemisEmbeddedServerConfiguration with ArtemisEmbeddedServerConfiguration

154.7. Rename type ArtemisNoOpBindingRegistry with ArtemisNoOpBindingRegistry

154.8. Rename type ArtemisXAConnectionFactoryConfiguration with ArtemisXAConnectionFactoryConfiguration

155. Changes to package org.springframework.boot.autoconfigure.jmx:  

155.1. Add a class for jmx auto configuration. It allows to:

	Instantiate jmx auto configuration  with environment;
	Handle mbean exporter;
	Object naming strategy;
	Handle mbean server

155.2. Add a class for parent aware naming strategy. It allows to:

	Instantiate parent aware naming strategy  with jmx attribute source;
	Set ensure unique runtime object names;
	Get object name;
	Set application context;
	Handle parent context contains same bean

156. Changes to package org.springframework.boot.autoconfigure.jndi:  

156.1. Rename type JndiPropertiesHidingClassLoader with JndiPropertiesHidingClassLoader

157. Changes to package org.springframework.boot.autoconfigure.jooq:  

157.1. Rename type JooqExceptionTranslator with JooqExceptionTranslator

157.2. Rename type JooqExceptionTranslatorTests with JooqExceptionTranslatorTests

157.3. Add a class for jooq properties. It allows to:

	Get jooq properties sql dialect;
	Set SQL dialect sql dialect;
	Determine data source sql dialect

157.4. Rename type SpringTransaction with SpringTransaction

157.5. Rename type SpringTransactionProvider with SpringTransactionProvider

157.6. Add a class for sql dialect lookup. It allows to:

	Instantiate sql dialect lookup;
	Get dialect

157.7. Add a class for sql dialect lookup tests. It allows to:

	Get sql dialect lookup tests sql dialect when data source is null should return default;
	Get sql dialect lookup tests sql dialect when data source is unknown should return default;
	Get sql dialect lookup tests sql dialect when derby should return derby;
	Get sql dialect lookup tests sql dialect when H 2 should return H 2;
	Get sql dialect lookup tests sql dialect when hsqldb should return hsqldb;
	Get sql dialect lookup tests sql dialect when mysql should return mysql;
	Get sql dialect lookup tests sql dialect when oracle should return default;
	Get sql dialect lookup tests sql dialect when postgres should return postgres;
	Get sql dialect lookup tests sql dialect when sqlserver should return default;
	Get sql dialect lookup tests sql dialect when db 2 should return default;
	Get sql dialect lookup tests sql dialect when informix should return default;
	Handle test get sql dialect

158. Changes to package org.springframework.boot.autoconfigure.jsonb:  

158.1. Add a class for jsonb auto configuration. It allows to:

	Get jsonb

159. Changes to package org.springframework.boot.autoconfigure.kafka:  

159.1. Add a class for concurrent kafka listener container factory configurer. It allows to:

	Set kafka properties;
	Set message converter;
	Set reply template;
	Set transaction manager;
	Set error handler;
	Get set after rollback processor;
	Configure listener container factory;
	Configure listener factory;
	Configure container

159.2. Add a class for kafka auto configuration. It allows to:

	Instantiate kafka auto configuration  with kafka properties;
	Kafka template;
	Kafka producer listener;
	Kafka consumer factory;
	Kafka producer factory;
	Kafka transaction manager;
	Kafka kafka auto configuration;
	Kafka kafka auto configuration admin

160. Changes to package org.springframework.boot.autoconfigure.ldap:  

160.1. Rename type LdapAutoConfiguration with LdapAutoConfiguration

160.2. Add a class for ldap properties. It allows to:

	Get urls;
	Set urls;
	Get base;
	Set base;
	Get username;
	Set username;
	Get password;
	Set password;
	Get anonymous read  only;
	Set anonymous read  only;
	Get base environment;
	Determine urls;
	Determine port

161. Changes to package org.springframework.boot.autoconfigure.liquibase:  

161.1. Add a class for liquibase properties. It allows to:

	Get liquibase properties;
	Set change log;
	Check if liquibase properties is check change log location;
	Set check change log location;
	Get contexts;
	Set contexts;
	Get default schema;
	Set default schema;
	Get liquibase schema;
	Set liquibase schema;
	Get liquibase tablespace;
	Set liquibase tablespace;
	Get database change log table;
	Set database change log table;
	Get database change log lock table;
	Set database change log lock table;
	Check if liquibase properties is drop first;
	Set drop  first;
	Check if liquibase properties is enabled;
	Enabled liquibase properties;
	Get user;
	Set user;
	Get password;
	Set password;
	Get url;
	Set url;
	Get labels;
	Set labels;
	Get parameters;
	Set parameters;
	Get rollback file;
	Set rollback file;
	Check if liquibase properties is test rollback on update;
	Set test rollback  on update

161.2. Add a class for liquibase schema management provider. It allows to:

	Instantiate liquibase schema management provider  with liquibases object provider;
	Get schema management

162. Changes to package org.springframework.boot.autoconfigure.logging:  

162.1. Add a class for condition evaluation report message. It allows to:

	Instantiate condition evaluation report message  with condition evaluation report;
	Get log message;
	Log positive matches;
	Log negative matches;
	Log exclusions;
	Log unconditional classes;
	Get order by name;
	Map key set to fully qualified names;
	Add match log message;
	Add non match log message;
	Log condition and outcome;
	Convert condition evaluation report message to string

163. Changes to package org.springframework.boot.autoconfigure.mail:  

163.1. Add a class for mail properties. It allows to:

	Get host;
	Set host;
	Get port;
	Set port;
	Get username;
	Set username;
	Get password;
	Set password;
	Get protocol;
	Set protocol;
	Get default encoding;
	Set default encoding;
	Get properties;
	Set jndi name;
	Get jndi name

163.2. Rename type MailSenderValidatorAutoConfiguration with MailSenderValidatorAutoConfiguration

164. Changes to package org.springframework.boot.autoconfigure.mongo:  

164.1. Add an object creator class for mongo auto configuration. It allows to:

	Get mongo

164.2. Add a class for mongo client factory. It allows to:

	Instantiate mongo client factory  with mongo properties, environment and environment;
	Create mongo client;
	Get embedded port;
	Create embedded mongo client;
	Create network mongo client;
	Get value;
	Check if mongo client factory has custom address;
	Get credentials;
	Check if mongo client factory has custom credentials;
	Get builder

164.3. Add an interface declaration  for mongo client settings builder customizer. It allows to:

	Customize client settings builder

164.4. Add a class for mongo properties. It allows to:

	Get host;
	Set host;
	Get database;
	Set database;
	Get authentication database;
	Set authentication database;
	Get username;
	Set username;
	Get password;
	Set password;
	Get field naming strategy;
	Set field naming strategy;
	Get uri;
	Determine uri;
	Set uri;
	Get port;
	Set port;
	Get grid fs database;
	Set grid fs database;
	Get mongo client database

164.5. Add a class for reactive mongo client factory. It allows to:

	Instantiate reactive mongo client factory  with mongo properties, environment, builder customizers list and builder customizers list;
	Create mongo client;
	Get embedded port;
	Create embedded mongo client;
	Create network mongo client;
	Create credential network mongo client;
	Apply credentials;
	Get value;
	Create builder;
	Customize mongo client settings builder;
	Check if reactive mongo client factory has custom address;
	Check if reactive mongo client factory has custom credentials;
	Get builder

164.6. Add a class for reactive mongo client factory tests. It allows to:

	Handle port can be customized;
	Handle host can be customized;
	Handle credentials can be customized;
	Handle database can be customized;
	Handle authentication database can be customized;
	Handle uri can be customized;
	Retry writes is propagated  from uri;
	Handle uri can not be set with credentials;
	Handle uri can not be set with host port;
	Handle uri is ignored in embedded mode;
	Handle customizer is invoked;
	Handle customizer is invoked when host is set;
	Handle customizer is invoked for embedded mongo;
	Create mongo client;
	Extract server addresses;
	Extract mongo credentials;
	Get settings;
	Assert server address;
	Assert mongo credential

165. Changes to package org.springframework.boot.autoconfigure.mustache:  

165.1. Add a class for mustache auto configuration. It allows to:

	Instantiate mustache auto configuration  with mustache properties, application context and application context;
	Check template location exists;
	Handle mustache compiler;
	Get collector;
	Get mustache template loader

165.2. Add a class for mustache properties. It allows to:

	Instantiate mustache properties;
	Get prefix;
	Set prefix;
	Get suffix;
	Set suffix

165.3. Add a class for mustache reactive web configuration. It allows to:

	Handle mustache view resolver

165.4. Add a class for mustache resource template loader. It allows to:

	Instantiate mustache resource template loader;
	Set charset;
	Set resource loader;
	Get template

165.5. Add a class for mustache servlet web configuration. It allows to:

	Handle mustache view resolver

165.6. Add a class for mustache template availability provider. It allows to:

	Check if mustache template availability provider is template available

166. Changes to package org.springframework.boot.autoconfigure.orm.jpa:  

166.1. Add a class for database lookup. It allows to:

	Instantiate database lookup;
	Get database

166.2. Rename type DatabaseLookupTests with DatabaseLookupTests

166.3. Add a class for hibernate default ddl auto provider. It allows to:

	Instantiate hibernate default ddl auto provider  with providers iterable;
	Get default ddl auto;
	Get schema management

166.4. Add a class for hibernate default ddl auto provider tests. It allows to:

	Handle default D dl auto for embedded;
	Handle default D dl auto for embedded with positive contributor;
	Handle default D dl auto for embedded with negative contributor

166.5. Add a class for jpa properties. It allows to:

	Get properties;
	Set properties;
	Get mapping resources;
	Get database platform;
	Set database platform;
	Get database;
	Set database;
	Check if jpa properties is generate ddl;
	Set generate ddl;
	Check if jpa properties is show sql;
	Set show sql;
	Get open  in view;
	Set open  in view;
	Determine database

167. Changes to package org.springframework.boot.autoconfigure.orm.jpa.test:  

167.1. Rename type City with City

168. Changes to package org.springframework.boot.autoconfigure.packagestest.one:  

168.1. Rename type FirstConfiguration with FirstConfiguration

169. Changes to package org.springframework.boot.autoconfigure.packagestest.two:  

169.1. Rename type SecondConfiguration with SecondConfiguration

170. Changes to package org.springframework.boot.autoconfigure.quartz:  

170.1. Add an interface declaration  for scheduler factory bean customizer. It allows to:

	Customize scheduler factory bean

171. Changes to package org.springframework.boot.autoconfigure.reactor.core:  

171.1. Add a class for reactor core auto configuration. It allows to:

	Initialize reactor core properties

172. Changes to package org.springframework.boot.autoconfigure.security:  

172.1. Rename type SecurityDataConfiguration with SecurityDataConfiguration

172.2. Add a class for security properties tests. It allows to:

	Set security properties tests;
	Validate default filter order matches metadata;
	Handle filter order should bind;
	Handle user when not configured should use default name and generated password;
	Handle user should bind properly;
	Handle password autogenerated if empty

173. Changes to package org.springframework.boot.autoconfigure.security.oauth2.client:  

173.1. Add a class for o auth 2 client properties registration adapter. It allows to:

	Instantiate o auth 2 client properties registration adapter;
	Get client registrations;
	Get client registration;
	Get builder  from issuer if possible;
	Get builder;
	Get error message;
	Get common provider

173.2. Add a class for o auth 2 client properties registration adapter tests. It allows to:

	Handle cleanup;
	Get client registrations when using defined provider should adapt;
	Get client registrations when using common provider should adapt;
	Get client registrations when using common provider  with override should adapt;
	Get client registrations when unknown provider should throw exception;
	Get client registrations when provider  not specified should use registration id;
	Get client registrations when provider  not specified and unknown provider should throw exception;
	Handle oidc provider configuration when provider not specified on registration;
	Handle oidc provider configuration when provider specified on registration;
	Handle oidc provider configuration with custom configuration overrides provider defaults;
	Create provider;
	Create registration;
	Handle test oidc configuration;
	Handle setup mock response;
	Get response

173.3. Add a class for o auth 2 client properties tests. It allows to:

	Handle client id absent throws exception;
	Handle client secret absent should not throw exception

174. Changes to package org.springframework.boot.autoconfigure.security.user:  

174.1. Rename type User with User

174.2. Rename type UserRepository with UserRepository

175. Changes to package org.springframework.boot.autoconfigure.sendgrid:  

175.1. Add an object creator class for send grid auto configuration. It allows to:

	Send grid

176. Changes to package org.springframework.boot.autoconfigure.session:  

176.1. Add a class for abstract session auto configuration tests. It allows to:

	Validate session repository;

176.2. Add a class for hazelcast session properties. It allows to:

	Get map name;
	Set map name;
	Get flush mode;
	Set flush mode

176.3. Add a class for jdbc session properties. It allows to:

	Get schema;
	Set schema;
	Get table name;
	Set table name;
	Get cleanup cron;
	Set cleanup cron;
	Get initialize schema;
	Set initialize schema

176.4. Add a class for mongo session properties. It allows to:

	Get collection name;
	Set collection name

176.5. Rename type NoOpSessionConfiguration with NoOpSessionConfiguration

176.6. Add a class for non unique session repository exception. It allows to:

	Instantiate non unique session repository exception  with available candidates list;
	Get available candidates

176.7. Add an object creator class for non unique session repository failure analyzer. It allows to:

	Analyze root failure throwable

176.8. Add a class for non unique session repository failure analyzer tests. It allows to:

	Handle failure analysis with multiple candidates;
	Create failure;
	Analyze failure

176.9. Add a class for redis session properties. It allows to:

	Get namespace;
	Set namespace;
	Get flush mode;
	Set flush mode;
	Get cleanup cron;
	Set cleanup cron

176.10. Add a class for session auto configuration jdbc tests. It allows to:

	Handle default config;
	Handle default config with unique store implementation;
	Validate default config;
	Handle filter order can be customized;
	Disable data source initializer;
	Handle custom table name;
	Handle custom cleanup cron

176.11. Add a class for session auto configuration mongo tests. It allows to:

	Handle default config;
	Handle default config with unique store implementation;
	Mongo session store  with customizations;
	Validate spring session uses mongo

176.12. Add a class for session auto configuration redis tests. It allows to:

	Handle default config;
	Handle default config with unique store implementation;
	Handle redis session store with customizations;
	Validate spring session uses redis

176.13. Add a class for session repository filter configuration. It allows to:

	Get session repository filter registration;
	Get dispatcher types

176.14. Add a class for session repository unavailable exception. It allows to:

	Instantiate session repository unavailable exception  with store type;
	Get store type

177. Changes to package org.springframework.boot.autoconfigure.solr:  

177.1. Add an object creator class for solr auto configuration. It allows to:

	Handle solr client

177.2. Rename type SolrProperties with SolrProperties

178. Changes to package org.springframework.boot.autoconfigure.template:  

178.1. Rename type AbstractTemplateViewResolverProperties with AbstractTemplateViewResolverProperties

178.2. Add a class for abstract view resolver properties. It allows to:

	Enabled abstract view resolver properties;
	Check if abstract view resolver properties is enabled;
	Set check template location;
	Check if abstract view resolver properties is check template location;
	Get view names;
	Set view names;
	Check if abstract view resolver properties is cache;
	Set cache;
	Get content type;
	Set content type;
	Get charset;
	Get charset name;
	Set charset

178.3. Add an interface declaration  for template availability provider. It allows to:

	Check if template availability provider is template available

178.4. Rename type TemplateAvailabilityProvidersTests with TemplateAvailabilityProvidersTests

178.5. Rename type TemplateLocation with TemplateLocation

179. Changes to package org.springframework.boot.autoconfigure.thymeleaf:  

179.1. Add a class for thymeleaf template availability provider. It allows to:

	Check if thymeleaf template availability provider is template available

179.2. Rename type ThymeleafTemplateAvailabilityProviderTests with ThymeleafTemplateAvailabilityProviderTests

180. Changes to package org.springframework.boot.autoconfigure.transaction:  

180.1. Add an interface declaration  for platform transaction manager customizer. It allows to:

	Customize transaction manager

180.2. Add a class for transaction manager customizers. It allows to:

	Instantiate transaction manager customizers  with customizers collection;
	Customize platform transaction manager

180.3. Rename type TransactionProperties with TransactionProperties

181. Changes to package org.springframework.boot.autoconfigure.transaction.jta:  

181.1. Rename type JndiJtaConfiguration with JndiJtaConfiguration

181.2. Rename type JtaAutoConfiguration with JtaAutoConfiguration

181.3. Rename type JtaProperties with JtaProperties

182. Changes to package org.springframework.boot.autoconfigure.validation:  

182.1. Rename type PrimaryDefaultValidatorPostProcessor with PrimaryDefaultValidatorPostProcessor

182.2. Add a class for validation auto configuration. It allows to:

	Get default validator;
	Get method validation post processor

182.3. Add a class for validation auto configuration with hibernate validator missing el impl tests. It allows to:

	Close validation auto configuration with hibernate validator missing el impl tests;
	Missing el dependency is tolerated

182.4. Add a class for validation auto configuration without validator tests. It allows to:

	Close validation auto configuration without validator tests;
	Handle validation is disabled

182.5. Add a class for validator adapter. It allows to:

	Instantiate validator adapter  with target smart validator;
	Get target;
	Handle supports;
	Validate errors;
	Set application context;
	Handle after properties set;
	Destroy validator adapter;
	Get application context;
	Existing application context;
	Create validator adapter;
	Wrap validator

183. Changes to package org.springframework.boot.autoconfigure.web:  

183.1. Add a class for on enabled resource chain condition. It allows to:

	Get match outcome;
	Get enabled property

183.2. Add a class for resource properties tests. It allows to:

	Handle resource chain no customization;
	Handle resource chain strategy enabled;
	Handle resource chain enabled;
	Handle resource chain disabled;
	Handle default static locations all end with trailing slash;
	Convert custom static locations are normalized;
	Handle empty cache control;
	Handle cache control all properties set;
	Handle invalid cache control combination

183.3. Add a class for server properties tests. It allows to:

	Handle test address binding;
	Handle test port binding;
	Handle test server header default;
	Handle test server header;
	Handle test connection timeout;
	Handle test tomcat binding;
	Handle test trailing slash of context path is removed;
	Handle test slash of context path is default value;
	Handle test context path with leading whitespace;
	Handle test context path with trailing whitespace;
	Handle test context path with leading and trailing whitespace;
	Handle test context path with leading and trailing whitespace and context with space;
	Handle test customize uri encoding;
	Handle test customize header size;
	Handle test customize header size use bytes by default;
	Handle test customize jetty acceptors;
	Handle test customize jetty selectors;
	Handle test customize jetty access log;
	Tomcat accept count matches protocol default;
	Tomcat processor cache matches protocol default;
	Tomcat max connections matches protocol default;
	Tomcat max threads matches protocol default;
	Tomcat min spare threads matches protocol default;
	Tomcat max http post size matches connector default;
	Tomcat background processor delay matches engine default;
	Tomcat uri encoding matches connector default;
	Tomcat redirect context root matches default;
	Handle tomcat access log rename on rotate matches default;
	Handle tomcat access log request attributes enabled matches default;
	Tomcat internal proxies matches default;
	Handle jetty max http post size matches default;
	Process  on dispatch failure;
	Check if  has error;
	Handle error;
	Handle undertow max http post size matches default;
	Get default connector;
	Get default protocol;
	Handle bind;

184. Changes to package org.springframework.boot.autoconfigure.web.reactive:  

184.1. Add a class for web flux properties. It allows to:

	Get date format;
	Set date format;
	Get static path pattern;
	Set static path pattern

185. Changes to package org.springframework.boot.autoconfigure.web.reactive.function.client:  

185.1. Add a class for web client codec customizer. It allows to:

	Instantiate web client codec customizer  with codec customizers list;
	Customize web client builder

186. Changes to package org.springframework.boot.autoconfigure.web.servlet:  

186.1. Add a class for jsp template availability provider. It allows to:

	Check if jsp template availability provider is template available;
	Get resource name

186.2. Add a class for jsp template availability provider tests. It allows to:

	Handle availability of template that does not exist;
	Handle availability of template with custom prefix;
	Handle availability of template with custom suffix;
	Check if jsp template availability provider tests is template available

186.3. Add a class for multipart auto configuration. It allows to:

	Instantiate multipart auto configuration  with multipart properties;
	Handle multipart config element;
	Handle multipart resolver

186.4. Add a class for multipart properties. It allows to:

	Enabled multipart properties;
	Get location;
	Set location;
	Get max file size;
	Set max file size;
	Get max request size;
	Set max request size;
	Get file size threshold;
	Set file size threshold;
	Check if multipart properties is resolve lazily;
	Set resolve  lazily;
	Create multipart config

186.5. Add an interface declaration  for web mvc registrations. It allows to:

	Get request mapping handler mapping;
	Get request mapping handler adapter;
	Get exception handler exception resolver

187. Changes to package org.springframework.boot.autoconfigure.web.servlet.error:  

187.1. Add a class for abstract error controller. It allows to:

	Instantiate abstract error controller  with error attributes;
	Instantiate abstract error controller  with error attributes, error view resolvers list and error view resolvers list;
	Sort error view resolvers;
	Get error attributes;
	Get trace parameter;
	Get status;
	Resolve error view

187.2. Add a class for basic error controller. It allows to:

	Instantiate basic error controller  with error attributes, error properties and error properties;
	Instantiate basic error controller  with error attributes, error properties, error view resolvers list and error view resolvers list;
	Get error path;
	Get error html;
	Get error;
	Check if basic error controller is include stack trace;
	Get error properties

187.3. Add an interface declaration  for error view resolver. It allows to:

	Resolve error view

188. Changes to package org.springframework.boot.autoconfigure.webservices:  

188.1. Add a class for web services auto configuration tests. It allows to:

	Handle default configuration;
	Handle custom path must begin with A slash;
	Handle custom path;
	Handle custom path with trailing slash;
	Handle custom load on startup;
	Handle custom init parameters;
	Process web services auto configuration tests web services auto configuration tests with wsdl beans;
	Process web services auto configuration tests web services auto configuration tests with wsdl beans as list;
	Get url mappings;
	Get servlet registration bean

189. Changes to package org.springframework.boot.autoconfigure.websocket.reactive:  

189.1. Add a class for tomcat web socket reactive web server customizer. It allows to:

	Customize tomcat reactive web server factory;
	Get order

190. Changes to package org.springframework.boot.autoconfigure.websocket.servlet:  

190.1. Add a class for jetty web socket servlet web server customizer. It allows to:

	Customize jetty servlet web server factory;
	Configure web app context;
	Get order

190.2. Add a class for tomcat web socket servlet web server customizer. It allows to:

	Customize tomcat servlet web server factory;
	Get order

191. Changes to package org.springframework.boot.autoconfigureprocessor:  

191.1. Add a class for auto configure annotation processor tests. It allows to:

	Create compiler;
	Handle annotated class;
	Handle annotated class with on bean that has name;
	Handle annotated method;
	Handle annotated class with order;
	Compile types class

191.2. Rename type TestMethodConfiguration with TestMethodConfiguration

191.3. Rename type TestOrderedClassConfiguration with TestOrderedClassConfiguration

192. Changes to package org.springframework.boot.builder:  

192.1. Add a class for spring application builder. It allows to:

	Instantiate spring application builder  with sources class;
	Create spring application;
	Get context;
	Get application;
	Run spring application builder;
	Configure spring application builder as child if necessary;
	Build spring application builder;
	Get child;
	Get parent;
	Run and extract parent;
	Sibling sources class;
	Get context class;
	Get sources;
	Get web;
	Log startup info;
	Get banner;
	Get banner mode;
	Handle headless;
	Register shutdown hook;
	Handle main;
	Add command line properties;
	Set add conversion service;
	Get properties;
	Handle lazy initialization;
	Get map  from key value pairs;
	Handle lowest index of;
	Get map  from properties;
	Get profiles;
	Handle additional profiles;
	Get bean name generator;
	Get environment;
	Get resource loader;
	Get initializers;
	Get listeners

193. Changes to package org.springframework.boot.cli:  

193.1. Rename type ClassLoaderIntegrationTests with ClassLoaderIntegrationTests

193.2. Add a class for cli tester spring application. It allows to:

	Instantiate cli tester spring application  with sources class;
	Post process application context

193.3. Add a class for command line IT. It allows to:

	Handle hint produces list of valid commands;
	Invoking command line IT with no arguments displays help;
	Handle unrecognized commands are handled gracefully;
	Handle version;
	Help command line IT

193.4. Add a class for default command factory. It allows to:

	Get commands

193.5. Add a class for directory sources integration tests. It allows to:

	Run directory;
	Run directory recursive;
	Run path pattern

193.6. Rename type GrabCommandIntegrationTests with GrabCommandIntegrationTests

193.7. Add a class for jar command IT. It allows to:

	No arguments;
	No sources;
	Handle jar creation with grab resolver;
	Handle jar creation;
	Handle jar creation with includes;
	Check if jar command IT is class present

193.8. Add a class for repro integration tests. It allows to:

	Grab ant builder;
	Handle security dependencies;
	Handle data jpa dependencies;
	Handle jar file extension needed

193.9. Add a class for run command integration tests. It allows to:

	Capture system properties;
	Restore system properties;
	Handle banner and logging is output by default;
	Handle quiet mode suppresses all cli output

193.10. Add a class for sample integration tests. It allows to:

	Handle app sample;
	Retry sample;
	Handle beans sample;
	Template sample;
	Handle job sample;
	Handle job web sample;
	Handle web sample;
	Handle ui sample;
	Handle actuator sample;
	Http sample;
	Handle integration sample;
	Handle xml sample;
	Tx sample;
	Handle jms sample;
	Handle rabbit sample;
	Handle caching

193.11. Add a class for spring cli. It allows to:

	Instantiate spring cli;
	Handle main;
	Add service loader commands;
	Create extended class loader;
	Get extension UR ls

193.12. Add a class for war command IT. It allows to:

	Handle war creation

194. Changes to package org.springframework.boot.cli.app:  

194.1. Add a class for spring application launcher. It allows to:

	Instantiate spring application launcher  with class loader;
	Get launch;
	Get spring application class name;
	Get environment variable

194.2. Add a class for spring application web application initializer. It allows to:

	Process spring application web application initializer spring application web application initializer on startup;
	Get sources;
	Get manifest;
	Configure spring application builder

195. Changes to package org.springframework.boot.cli.archive:  

195.1. Add a class for packaged spring application launcher. It allows to:

	Instantiate packaged spring application launcher;
	Run packaged spring application launcher;
	Get sources;
	Check if packaged spring application launcher is cli packaged;
	Load classes;
	Handle main

196. Changes to package org.springframework.boot.cli.command:  

196.1. Rename type AbstractCommand with AbstractCommand

196.2. Rename type Command with Command

196.3. Rename type CommandException with CommandException

196.4. Add an interface declaration  for command factory. It allows to:

	Get commands

196.5. Add a class for command runner. It allows to:

	Instantiate command runner;
	Get name;
	Add commands;
	Add command;
	Set option commands;
	Set hidden commands;
	Check if command runner is option command;
	Check if command runner is hidden command;
	Check if command runner is command instance of;
	Get iterator;
	Get commands;
	Find command;
	Run and handle errors;
	Remove debug flags;
	Run command runner;
	Process command runner command runner before run;
	Process command runner command runner after run;
	Handle error;
	Handle error message;
	Show usage;
	Print exception

196.6. Rename type CommandRunnerIntegrationTests with CommandRunnerIntegrationTests

196.7. Add a class for command runner tests. It allows to:

	Close command runner tests;
	Handle setup;
	Show usage;
	Handle error message;
	Print exception;
	Run command runner tests without arguments;
	Run command;
	Missing command;
	Handle app arguments;
	Check if command runner tests handles success;
	Check if command runner tests handles no such command;
	Check if command runner tests handles regular exception with message;
	Check if command runner tests handles regular exception without message;
	Check if command runner tests handles exception with dash D;
	Check if command runner tests handles exception with dash dash debug;
	Handle exception messages;
	Help command runner tests;
	Help no command;
	Help unknown command

196.8. Rename type HelpExample with HelpExample

196.9. Rename type NoArgumentsException with NoArgumentsException

196.10. Rename type NoHelpCommandArgumentsException with NoHelpCommandArgumentsException

196.11. Rename type NoSuchCommandException with NoSuchCommandException

196.12. Rename type OptionParsingCommand with OptionParsingCommand

197. Changes to package org.springframework.boot.cli.command.archive:  

197.1. Add a class for resource matcher tests. It allows to:

	Non existent root;
	Handle defaults;
	Get excluded wins;
	Handle matches;
	Get included deltas;
	Get included deltas and new entries;
	Get excluded deltas;
	Handle jar file always matches;
	Handle resource matching

198. Changes to package org.springframework.boot.cli.command.core:  

198.1. Add a class for help command. It allows to:

	Instantiate help command  with command runner;
	Get usage help;
	Get help;
	Get options help;
	Get options;
	Check if help command is help shown;
	Run help command

198.2. Add a class for hint command. It allows to:

	Instantiate hint command  with command runner;
	Run hint command;
	Show command hints;
	Check if hint command is hint match;
	Show command option hints;
	Handle already used

198.3. Rename type VersionCommand with VersionCommand

199. Changes to package org.springframework.boot.cli.command.init:  

199.1. Rename type Dependency with Dependency

199.2. Rename type InitializrService with InitializrService

199.3. Add a class for initializr service metadata tests. It allows to:

	Parse defaults;
	Parse dependencies;
	Parse types;
	Create instance;
	Read json

199.4. Add a class for initializr service tests. It allows to:

	Load metadata;
	Generate simple project;
	Generate project custom target filename;
	Generate project no default file name;
	Generate project bad request;
	Generate project bad request no extra message;
	Generate project no content;
	Load metadata bad request;
	Load metadata invalid json;
	Load metadata no content;
	Generate project;
	Assert project entity

199.5. Add a class for project generation request. It allows to:

	Get service url;
	Set service url;
	Get output;
	Set output;
	Check if project generation request is extract;
	Extract project generation request;
	Get group id;
	Set group id;
	Get artifact id;
	Set artifact id;
	Get version;
	Get set version;
	Get name;
	Set name;
	Get description;
	Set description;
	Get package name;
	Set package name;
	Get type;
	Set type;
	Get packaging;
	Set packaging;
	Build project generation request;
	Get format;
	Set format;
	Check if project generation request is detect type;
	Set detect type;
	Get java version;
	Set java version;
	Get language;
	Set language;
	Get boot version;
	Set boot version;
	Get dependencies;
	Generate url;
	Determine project type;
	Resolve artifact id;
	Handle filter

199.6. Rename type ProjectGenerationRequestTests with ProjectGenerationRequestTests

199.7. Rename type ProjectGenerationResponse with ProjectGenerationResponse

199.8. Add a class for project generator. It allows to:

	Instantiate project generator  with initializr service;
	Generate project;
	Extract project generation request;
	Check if project generator is zip archive;
	Extract project;
	Extract zip input stream from stream;
	Write project;
	Fix executable flag

199.9. Add a class for project type. It allows to:

	Instantiate project type  with tags map;
	Get id;
	Get name;
	Get action;
	Check if project type is default type;
	Get tags

199.10. Rename type ReportableException with ReportableException

199.11. Add a class for service capabilities report generator. It allows to:

	Instantiate service capabilities report generator  with initializr service;
	Generate service capabilities report generator;
	Generate help;
	Report available dependencies;
	Get sorted dependencies;
	Report available project types;
	Report tags;
	Report defaults;
	Get repeat

199.12. Rename type ServiceCapabilitiesReportGeneratorTests with ServiceCapabilitiesReportGeneratorTests

200. Changes to package org.springframework.boot.cli.command.install:  

200.1. Add an interface declaration  for dependency resolver. It allows to:

	Resolve artifact identifiers list

200.2. Add a class for groovy grab dependency resolver. It allows to:

	Instantiate groovy grab dependency resolver  with groovy compiler configuration;
	Resolve artifact identifiers list;
	Get class path urls;
	Create sources;
	Convert groovy grab dependency resolver to file

200.3. Add a class for groovy grab dependency resolver tests. It allows to:

	Handle setup resolver;
	Check if  is guess imports;
	Check if  is guess dependencies;
	Check if  is autoconfigure;
	Get scope;
	Get repository configuration;
	Get classpath;
	Check if  is quiet;
	Resolve artifact  with no dependencies;
	Resolve artifact  with dependencies;
	Resolve shorthand artifact  with dependencies;
	Resolve multiple artifacts;
	Get names

200.4. Add a class for installer. It allows to:

	Instantiate installer  with options set, compiler option handler and compiler option handler;
	Instantiate installer  with dependency resolver;
	Create compiler configuration;
	Check if  is autoconfigure;
	Load install counts;
	Save install counts;
	Install artifact identifiers list;
	Get install count;
	Set install count;
	Handle uninstall;
	Uninstall installer;
	Get default ext directory;
	Installed installer

200.5. Add a class for installer tests. It allows to:

	Set installer tests;
	Clean installer tests;
	Install new dependency;
	Install installer tests;
	Install and uninstall  with common dependencies;
	Uninstall installer tests;
	Get names  of files in lib ext;
	Create temporary file

201. Changes to package org.springframework.boot.cli.command.options:  

201.1. Rename type CompilerOptionHandler with CompilerOptionHandler

201.2. Rename type OptionHelp with OptionHelp

201.3. Rename type OptionSetGroovyCompilerConfiguration with OptionSetGroovyCompilerConfiguration

201.4. Add a class for source options. It allows to:

	Instantiate source options  with options set;
	Instantiate source options  with arguments list;
	Instantiate source options  with option set, class loader and class loader;
	Instantiate source options  with non option arguments list, class loader and class loader;
	Check if source options is absolute windows file;
	Check if source options is windows;
	Check if source options is source;
	Get args;
	Get args array;
	Process source options source options as string;
	Get sources;
	Get sources array

202. Changes to package org.springframework.boot.cli.command.run:  

202.1. Rename type SpringApplicationRunnerConfiguration with SpringApplicationRunnerConfiguration

202.2. Rename type SpringApplicationRunnerTests with SpringApplicationRunnerTests

203. Changes to package org.springframework.boot.cli.command.shell:  

203.1. Rename type AnsiString with AnsiString

203.2. Rename type ClearCommand with ClearCommand

203.3. Rename type EscapeAwareWhiteSpaceArgumentDelimiter with EscapeAwareWhiteSpaceArgumentDelimiter

203.4. Rename type EscapeAwareWhiteSpaceArgumentDelimiterTests with EscapeAwareWhiteSpaceArgumentDelimiterTests

203.5. Rename type ExitCommand with ExitCommand

203.6. Add a class for fork process command. It allows to:

	Instantiate fork process command  with command;
	Get name;
	Get description;
	Get usage help;
	Get help;
	Get options help;
	Run fork process command

203.7. Rename type PromptCommand with PromptCommand

203.8. Rename type RunProcessCommand with RunProcessCommand

203.9. Rename type ShellCommand with ShellCommand

203.10. Rename type ShellExitException with ShellExitException

203.11. Add a class for shell prompts. It allows to:

	Push prompt;
	Pop prompt;
	Get prompt

204. Changes to package org.springframework.boot.cli.command.status:  

204.1. Rename type ExitStatus with ExitStatus

205. Changes to package org.springframework.boot.cli.compiler:  

205.1. Add a class for ast utils. It allows to:

	Check if ast utils has at least one annotation;
	Check if ast utils has at least one field or method;
	Handle subclasses;
	Check if ast utils has at least one interface;
	Get closure;
	Get expression statements;

205.2. Rename type CompilerAutoConfiguration with CompilerAutoConfiguration

205.3. Rename type DependencyAutoConfigurationTransformation with DependencyAutoConfigurationTransformation

205.4. Rename type DependencyCustomizer with DependencyCustomizer

205.5. Rename type DependencyCustomizerTests with DependencyCustomizerTests

205.6. Add a class for extended groovy class loader tests. It allows to:

	Handle setup;
	Handle loads groovy from same class loader;
	Handle filters non groovy;
	Handle loads java types;
	Handle loads sql types

205.7. Add a class for generic bom ast transformation. It allows to:

	Handle visit;
	Get bom module;
	Visit module;
	Add dependency management bom;
	Get annotation;
	Get annotated node;
	Get constant expressions;

205.8. Add a class for generic bom ast transformation tests. It allows to:

	Get order;
	Get bom module;
	Handle transformation of empty package;
	Handle transformation of class;
	Handle transformation of class with existing managed dependencies;
	Get value;
	Find annotation

205.9. Rename type GroovyCompilerConfiguration with GroovyCompilerConfiguration

205.10. Add a class for repository configuration factory. It allows to:

	Instantiate repository configuration factory;
	Create default repository configuration;
	Add default cache  as repository;
	Add active profile repositories;
	Get repository configuration;
	Interpolate interpolator;
	Get local repository directory;
	Get M 2 home directory

205.11. Add a class for repository configuration factory tests. It allows to:

	Handle default repositories;
	Handle snapshot repositories disabled;
	Handle active by default profile repositories;
	Handle active by property profile repositories;
	Handle interpolation profile repositories;
	Assert repository configuration

205.12. Add a class for resolve dependency coordinates transformation. It allows to:

	Instantiate resolve dependency coordinates transformation  with dependency resolution context;
	Handle process annotation nodes;
	Transform grab annotation;
	Get value;
	Check if resolve dependency coordinates transformation is convenience form;
	Apply group and version;
	Set member

205.13. Rename type ResolveDependencyCoordinatesTransformationTests with ResolveDependencyCoordinatesTransformationTests

205.14. Rename type SmartImportCustomizer with SmartImportCustomizer

205.15. Add an interface declaration  for spring boot ast transformation

206. Changes to package org.springframework.boot.cli.compiler.autoconfigure:  

206.1. Rename type CachingCompilerAutoConfiguration with CachingCompilerAutoConfiguration

206.2. Rename type GroovyTemplatesCompilerAutoConfiguration with GroovyTemplatesCompilerAutoConfiguration

206.3. Rename type JdbcCompilerAutoConfiguration with JdbcCompilerAutoConfiguration

206.4. Add a class for jms compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

206.5. Rename type RabbitCompilerAutoConfiguration with RabbitCompilerAutoConfiguration

206.6. Rename type SpringBatchCompilerAutoConfiguration with SpringBatchCompilerAutoConfiguration

206.7. Rename type SpringBootCompilerAutoConfiguration with SpringBootCompilerAutoConfiguration

206.8. Rename type SpringIntegrationCompilerAutoConfiguration with SpringIntegrationCompilerAutoConfiguration

206.9. Rename type SpringMvcCompilerAutoConfiguration with SpringMvcCompilerAutoConfiguration

206.10. Rename type SpringRetryCompilerAutoConfiguration with SpringRetryCompilerAutoConfiguration

206.11. Rename type SpringSecurityCompilerAutoConfiguration with SpringSecurityCompilerAutoConfiguration

206.12. Rename type SpringTestCompilerAutoConfiguration with SpringTestCompilerAutoConfiguration

206.13. Rename type SpringWebsocketCompilerAutoConfiguration with SpringWebsocketCompilerAutoConfiguration

206.14. Rename type TransactionManagementCompilerAutoConfiguration with TransactionManagementCompilerAutoConfiguration

207. Changes to package org.springframework.boot.cli.compiler.dependencies:  

207.1. Rename type ArtifactCoordinatesResolver with ArtifactCoordinatesResolver

207.2. Add a class for composite dependency management. It allows to:

	Instantiate composite dependency management  with delegates dependency management;
	Get dependencies;
	Get spring boot version;
	Find composite dependency management

207.3. Rename type CompositeDependencyManagementTests with CompositeDependencyManagementTests

207.4. Rename type DependencyManagement with DependencyManagement

207.5. Rename type DependencyManagementArtifactCoordinatesResolver with DependencyManagementArtifactCoordinatesResolver

207.6. Add a class for dependency management artifact coordinates resolver tests. It allows to:

	Handle setup;
	Get group id  for boot artifact;
	Get group id found;
	Get group id  not found

207.7. Add a class for maven model dependency management. It allows to:

	Instantiate maven model dependency management  with model;
	Extract dependencies  from model;
	Get dependencies;
	Get spring boot version;
	Find maven model dependency management

207.8. Rename type SpringBootDependenciesDependencyManagement with SpringBootDependenciesDependencyManagement

207.9. Rename type SpringBootDependenciesDependencyManagementTests with SpringBootDependenciesDependencyManagementTests

208. Changes to package org.springframework.boot.cli.compiler.grape:  

208.1. Add a class for aether grape engine. It allows to:

	Instantiate aether grape engine  with groovy class loader, repository system, default repository system session, remote repositories list, dependency resolution context and dependency resolution context;
	Get progress reporter;
	Grab args map;
	Create exclusions;
	Create exclusion;
	Create dependencies;
	Create dependency;
	Create artifact;
	Determine type;
	Check if aether grape engine is transitive;
	Get dependencies;
	Get files;
	Get class loader;
	Add resolver;
	Add repository;
	Get possible mirror;
	Apply proxy;
	Apply authentication;
	Enumerate grapes;
	Resolve args map;
	Resolve dependencies list;
	Get collect request;
	Get dependency request;
	Add managed dependencies;
	Get list dependencies;
	Grab aether grape engine

208.2. Add a class for aether grape engine factory. It allows to:

	Create groovy class loader;
	Create service locator;
	Create repositories

208.3. Add a class for aether grape engine tests. It allows to:

	Create grape engine;
	Handle dependency resolution;
	Handle proxy selector;
	Handle repository mirrors;
	Handle repository authentication;
	Handle dependency resolution with exclusions;
	Non transitive dependency resolution;
	Handle dependency resolution with custom class loader;
	Handle resolution with custom resolver;
	Differing type and ext;
	Handle pom dependency resolution via type;
	Handle pom dependency resolution via ext;
	Handle resolution with classifier;
	Get repositories;
	Create dependency;
	Create resolver;
	Create exclusion;
	Do action runnable with custom user home;
	Do action runnable with system property;
	Set or clear system property

208.4. Add a class for composite proxy selector. It allows to:

	Instantiate composite proxy selector  with selectors list;
	Get proxy

208.5. Rename type DefaultRepositorySystemSessionAutoConfiguration with DefaultRepositorySystemSessionAutoConfiguration

208.6. Add a class for dependency resolution context. It allows to:

	Get identifier;
	Get artifact coordinates resolver;
	Get managed version;
	Get managed dependencies;
	Get managed dependency;
	Add managed dependencies;
	Add dependency management

208.7. Rename type DependencyResolutionContextTests with DependencyResolutionContextTests

208.8. Rename type DependencyResolutionFailedException with DependencyResolutionFailedException

208.9. Rename type DetailedProgressReporter with DetailedProgressReporter

208.10. Rename type DetailedProgressReporterTests with DetailedProgressReporterTests

208.11. Rename type GrapeEngineInstaller with GrapeEngineInstaller

208.12. Rename type GrapeRootRepositorySystemSessionAutoConfiguration with GrapeRootRepositorySystemSessionAutoConfiguration

208.13. Add an interface declaration  for progress reporter. It allows to:

	Finished progress reporter

208.14. Add a class for repository configuration. It allows to:

	Instantiate repository configuration  with URI;
	Get name;
	Get uri;
	Get snapshots enabled;
	Check if repository configuration equals;
	Hash code;
	Convert repository configuration to string

208.15. Add an interface declaration  for repository system session auto configuration. It allows to:

	Apply default repository system session

208.16. Rename type SettingsXmlRepositorySystemSessionAutoConfiguration with SettingsXmlRepositorySystemSessionAutoConfiguration

208.17. Add a class for settings xml repository system session auto configuration tests. It allows to:

	Handle setup;
	Handle basic session customization;
	Handle encrypted settings session customization;
	Handle property interpolation;
	Assert session customization;
	Assert proxy selector configuration;
	Assert mirror selector configuration;
	Assert authentication selector configuration

208.18. Rename type SummaryProgressReporter with SummaryProgressReporter

209. Changes to package org.springframework.boot.cli.util:  

209.1. Rename type Log with Log

209.2. Rename type ResourceUtilsTests with ResourceUtilsTests

210. Changes to package org.springframework.boot.cloud:  

210.1. Rename type CloudFoundryVcapEnvironmentPostProcessor with CloudFoundryVcapEnvironmentPostProcessor

210.2. Add a class for cloud platform tests. It allows to:

	Get active when environment is null should return null;
	Get active when  not in cloud should return null;
	Get active when has vcap application should return cloud foundry;
	Get active when has vcap services should return cloud foundry;
	Get active when has dyno should return heroku;
	Get active when has hc landscape should return sap;
	Get active when has service host and service port should return kubernetes;
	Get active when has service host and no service port should  not return kubernetes

211. Changes to package org.springframework.boot.cloud.cloudfoundry:  

211.1. Rename type CloudFoundryVcapEnvironmentPostProcessorTests with CloudFoundryVcapEnvironmentPostProcessorTests

212. Changes to package org.springframework.boot.configurationmetadata:  

212.1. Rename type AbstractConfigurationMetadataTests with AbstractConfigurationMetadataTests

212.2. Add a class for configuration metadata group. It allows to:

	Instantiate configuration metadata group;
	Get id;
	Get sources;
	Get properties

212.3. Add a class for configuration metadata hint. It allows to:

	Check if configuration metadata hint is map key hints;
	Check if configuration metadata hint is map value hints;
	Resolve id;
	Get id;
	Set id;
	Get value hints;
	Get value providers

212.4. Rename type ConfigurationMetadataItem with ConfigurationMetadataItem

212.5. Rename type ConfigurationMetadataProperty with ConfigurationMetadataProperty

212.6. Rename type ConfigurationMetadataRepository with ConfigurationMetadataRepository

212.7. Add a class for configuration metadata repository json builder. It allows to:

	Instantiate configuration metadata repository json builder  with default charset;
	Process configuration metadata repository json builder configuration metadata repository json builder with json resource;
	Build configuration metadata repository json builder;
	Add input stream;
	Create raw configuration metadata;
	Add value hints;
	Add map hints;
	Get source;
	Create input streams;
	Create configuration metadata repository json builder;
	Create default charset

212.8. Add a class for configuration metadata repository json builder tests. It allows to:

	Handle null resource;
	Handle simple repository;
	Handle hints on maps;
	Handle several repositories no conflict;
	Handle repository with root;
	Handle several repositories identical groups;
	Handle empty groups;
	Handle builder instances are isolated;
	Validate foo;
	Validate bar;
	Validate map;
	Validate empty group;
	Validate property hints;
	Check if configuration metadata repository json builder tests contains

212.9. Add a class for configuration metadata source. It allows to:

	Get group id;
	Set group id;
	Get type;
	Set type;
	Get description;
	Set description;
	Get short description;
	Set short description;
	Get source type;
	Set source type;
	Get source method;
	Set source method;
	Get properties

212.10. Rename type Deprecation with Deprecation

212.11. Add a class for hints. It allows to:

	Get key hints;
	Get key providers;
	Get value hints;
	Get value providers

212.12. Add a class for json reader. It allows to:

	Read input stream;
	Parse all sources;
	Parse all items;
	Parse all hints;
	Parse source;
	Parse item;
	Parse hint;
	Parse deprecation;
	Parse deprecation level;
	Read item value;
	Read json

212.13. Rename type JsonReaderTests with JsonReaderTests

212.14. Add a class for raw configuration metadata. It allows to:

	Instantiate raw configuration metadata  with sources list, items list, hints list and hints list;
	Get sources;
	Get source;
	Get items;
	Get hints;
	Resolve name;
	Check if raw configuration metadata has length

212.15. Add a class for simple configuration metadata repository. It allows to:

	Get all groups;
	Get all properties;
	Add sources collection;
	Add configuration metadata property;
	Include configuration metadata repository;
	Get group;
	Put map if absent

212.16. Rename type ValueHint with ValueHint

212.17. Add a class for value provider. It allows to:

	Get name;
	Set name;
	Get parameters;
	Convert value provider to string

213. Changes to package org.springframework.boot.configurationprocessor:  

213.1. Add a class for configuration metadata annotation processor. It allows to:

	Get configuration properties annotation;
	Handle nested configuration property annotation;
	Get deprecated configuration property annotation;
	Get default value annotation;
	Get endpoint annotation;
	Read operation annotation;
	Get supported source version;
	Get supported options;
	Handle init;
	Handle process;
	Get elements annotated or meta annotated  with round environment;
	Collect elements annotated or meta annotated  with annotation type;
	Handle process element;
	Handle process annotated type element;
	Handle process executable element;
	Handle process type element;
	Handle process endpoint;
	Check if configuration metadata annotation processor has main read operation;
	Check if configuration metadata annotation processor has no or optional parameters;
	Get prefix;
	Write meta data;
	Merge additional metadata;
	Get exception;
	Log warning;
	Log kind

213.2. Add a class for configuration metadata annotation processor tests. It allows to:

	Handle not annotated;
	Handle simple properties;
	Handle simple prefix value properties;
	Handle simple type properties;
	Handle hierarchical properties;
	Handle description properties;
	Get deprecated properties;
	Handle single deprecated property;
	Get deprecated on unrelated setter;
	Boxing configuration metadata annotation processor tests on setter;
	Parse collection config;
	Parse array config;
	Handle annotated getter;
	Handle static accessor;
	Handle inner class root config;
	Handle inner class properties;
	Handle inner class properties hierarchical;
	Handle inner class annotated getter config;
	Handle nested class child properties;
	Handle builder pojo;
	Get excluded types pojo;
	Handle invalid accessor;
	Handle double registration;
	Handle invalid double registration;
	Handle constructor parameter property with invalid default value on number;
	Handle constructor parameter property with invalid default value on floating point;
	Handle constructor parameter property with invalid default value on character

213.3. Add a class for metadata collector. It allows to:

	Instantiate metadata collector  with processing environment, previous metadata and previous metadata;
	Handle processing;
	Handle mark as processed;
	Add item metadata;
	Check if metadata collector has similar group;
	Get metadata;
	Handle should be merged;
	Get deleted in current build;
	Get processed in current build

213.4. Add a class for metadata store. It allows to:

	Instantiate metadata store  with processing environment;
	Read metadata;
	Write metadata;
	Read additional metadata;
	Get metadata resource;
	Create metadata resource;
	Get additional metadata stream;
	Locate additional metadata file;
	Locate gradle resources folder

213.5. Rename type MetadataStoreTests with MetadataStoreTests

213.6. Add a class for test project. It allows to:

	Instantiate test project  with temporary folder, classes and classes;
	Get source folder;
	Copy sources;
	Get source file;
	Handle full build;
	Handle incremental build;
	Delete folder contents;
	Get output file;
	Add source code;
	Delete type class;
	Revert type class;
	Add type class;
	Replace text;
	Get original source file;
	Put contents;
	Get contents

213.7. Add a class for type element members. It allows to:

	Instantiate type element members  with metadata generation environment, type element and type element;
	Handle process;
	Handle process method;
	Check if type element members is public;
	Get matching setter;
	Check if type element members is getter;
	Check if type element members is setter;
	Check if type element members is setter return type;
	Get accessor name;
	Handle process field;
	Get fields;
	Get public getters;
	Get public getter;
	Get public setter

214. Changes to package org.springframework.boot.configurationprocessor.fieldvalues:  

214.1. Add an interface declaration  for field values parser. It allows to:

	Get field values

215. Changes to package org.springframework.boot.configurationprocessor.fieldvalues.javac:  

215.1. Add a class for expression tree. It allows to:

	Instantiate expression tree;
	Get kind;
	Get literal value;
	Get factory value;
	Get array expression

215.2. Rename type JavaCompilerFieldValuesProcessorTests with JavaCompilerFieldValuesProcessorTests

215.3. Add a class for reflection wrapper. It allows to:

	Instantiate reflection wrapper;
	Get instance;
	Convert reflection wrapper to string;
	Find class;
	Find method;

215.4. Add an interface declaration  for tree visitor. It allows to:

	Visit variable

215.5. Add an object creator class for trees. It allows to:

	Instantiate trees;
	Get tree;
	Get instance

215.6. Add a class for variable tree. It allows to:

	Instantiate variable tree;
	Get name;
	Get type;
	Get initializer;
	Get modifier flags

216. Changes to package org.springframework.boot.configurationprocessor.metadata:  

216.1. Add a class for configuration metadata. It allows to:

	Instantiate configuration metadata;
	Instantiate configuration metadata  with configuration metadata;
	Add item metadata;
	Add item hint;
	Merge configuration metadata;
	Get items;
	Get hints;
	Merge item metadata;
	Add map;
	Find matching item metadata;
	Handle null safe equals;
	Handle nested prefix;
	Convert configuration metadata to dashed case;
	Flatten values;
	Convert configuration metadata to string

216.2. Rename type ConfigurationMetadataTests with ConfigurationMetadataTests

216.3. Rename type InvalidConfigurationMetadataException with InvalidConfigurationMetadataException

216.4. Rename type ItemDeprecation with ItemDeprecation

216.5. Add a class for item metadata. It allows to:

	Instantiate item metadata  with item type, item deprecation and item deprecation;
	Build name;
	Check if item metadata is of item type;
	Check if item metadata has same type;
	Get name;
	Set name;
	Get type;
	Set type;
	Get description;
	Set description;
	Get source type;
	Set source type;
	Get source method;
	Set source method;
	Get default value;
	Set default value;
	Get deprecation;
	Set deprecation;
	Check if item metadata equals;
	Hash code;
	Handle null safe equals;
	Handle null safe hash code;
	Convert item metadata to string;
	Build string builder to string property;
	Compare  to o item metadata;
	Handle new group;
	Handle new property;
	Handle new item metadata prefix

216.6. Add a class for json marshaller. It allows to:

	Write configuration metadata;
	Read input stream;
	Convert json marshaller to item metadata;
	Convert json marshaller to item deprecation;
	Convert json marshaller to item hint;
	Convert json marshaller to value hint;
	Convert json marshaller to value provider;
	Read item value;
	Convert json marshaller to string

216.7. Add a class for json marshaller tests. It allows to:

	Handle marshall and unmarshal;
	Handle marshall order items;
	Handle marshall put deprecated items at the end

216.8. Rename type TestJsonConverter with TestJsonConverter

217. Changes to package org.springframework.boot.configurationsample.endpoint:  

217.1. Add a class for custom properties endpoint. It allows to:

	Get name;
	Set name

217.2. Add a class for disabled endpoint

217.3. Add a class for enabled endpoint. It allows to:

	Some method;
	Retrieve another parameter integer

217.4. Add a class for simple endpoint. It allows to:

	Invoke simple endpoint

218. Changes to package org.springframework.boot.configurationsample.endpoint.incremental:  

218.1. Add a class for incremental endpoint. It allows to:

	Invoke incremental endpoint

219. Changes to package org.springframework.boot.configurationsample.fieldvalues:  

219.1. Rename type FieldValues with FieldValues

220. Changes to package org.springframework.boot.configurationsample.incremental:  

220.1. Rename type BarProperties with BarProperties

220.2. Rename type FooProperties with FooProperties

220.3. Rename type RenamedBarProperties with RenamedBarProperties

221. Changes to package org.springframework.boot.configurationsample.lombok:  

221.1. Add a class for lombok explicit properties

221.2. Add a class for lombok simple data properties

221.3. Add a class for lombok simple properties

221.4. Rename type SimpleLombokPojo with SimpleLombokPojo

222. Changes to package org.springframework.boot.configurationsample.method:  

222.1. Rename type InvalidMethodConfig with InvalidMethodConfig

223. Changes to package org.springframework.boot.configurationsample.simple:  

223.1. Rename type DeprecatedProperties with DeprecatedProperties

223.2. Rename type DeprecatedSingleProperty with DeprecatedSingleProperty

223.3. Rename type HierarchicalProperties with HierarchicalProperties

223.4. Rename type HierarchicalPropertiesGrandparent with HierarchicalPropertiesGrandparent

223.5. Rename type HierarchicalPropertiesParent with HierarchicalPropertiesParent

223.6. Rename type NotAnnotated with NotAnnotated

223.7. Rename type SimplePrefixValueProperties with SimplePrefixValueProperties

223.8. Rename type SimpleProperties with SimpleProperties

223.9. Rename type SimpleTypeProperties with SimpleTypeProperties

224. Changes to package org.springframework.boot.configurationsample.specific:  

224.1. Rename type BoxingPojo with BoxingPojo

224.2. Rename type BuilderPojo with BuilderPojo

224.3. Rename type DeprecatedUnrelatedMethodPojo with DeprecatedUnrelatedMethodPojo

224.4. Rename type DoubleRegistrationProperties with DoubleRegistrationProperties

224.5. Rename type ExcludedTypesPojo with ExcludedTypesPojo

224.6. Rename type InvalidAccessorProperties with InvalidAccessorProperties

224.7. Rename type SimplePojo with SimplePojo

225. Changes to package org.springframework.boot.context:  

225.1. Rename type ContextIdApplicationContextInitializerTests with ContextIdApplicationContextInitializerTests

225.2. Add a class for file encoding application listener. It allows to:

	Get order;
	Process file encoding application listener file encoding application listener on application event

225.3. Add a class for file encoding application listener tests. It allows to:

	Handle test illegal state;
	Handle test sunny day nothing mandated;
	Handle test sunny day mandated

225.4. Rename type TypeExcludeFilter with TypeExcludeFilter

226. Changes to package org.springframework.boot.context.annotation:  

226.1. Add a class for configurations. It allows to:

	Instantiate configurations  with classes collection;
	Get sort;
	Get classes;
	Merge other configurations;
	Merge merged classes set;
	Get stream classes;
	Collate ordered configurations list

226.2. Add an interface declaration  for determinable imports. It allows to:

	Determine imports

226.3. Add an object creator class for user configurations. It allows to:

	Instantiate user configurations  with classes collection;
	Get order;
	Merge merged classes set;
	O classes

226.4. Add a class for user configurations tests. It allows to:

	Process user configurations tests user configurations tests of should create unordered configurations

227. Changes to package org.springframework.boot.context.config:  

227.1. Add a class for ansi output application listener. It allows to:

	Process ansi output application listener ansi output application listener on application event;
	Get order

227.2. Add a class for delegating application context initializer. It allows to:

	Initialize configurable application context;
	Get initializer classes;
	Get initializer class;
	Apply initializer classes;
	Handle instantiate initializer;
	Apply initializers;
	Get set order;
	Get order

227.3. Add a class for delegating application listener. It allows to:

	Process delegating application listener delegating application listener on application event;
	Get listeners;
	Get set order;
	Get order

228. Changes to package org.springframework.boot.context.configwarnings.dflt:  

228.1. Rename type InDefaultPackageConfiguration with InDefaultPackageConfiguration

228.2. Rename type InDefaultPackageWithBasePackageClassesConfiguration with InDefaultPackageWithBasePackageClassesConfiguration

228.3. Rename type InDefaultPackageWithBasePackagesConfiguration with InDefaultPackageWithBasePackagesConfiguration

228.4. Rename type InDefaultPackageWithMetaAnnotationConfiguration with InDefaultPackageWithMetaAnnotationConfiguration

228.5. Rename type InDefaultPackageWithValueConfiguration with InDefaultPackageWithValueConfiguration

228.6. Rename type InDefaultPackageWithoutScanConfiguration with InDefaultPackageWithoutScanConfiguration

229. Changes to package org.springframework.boot.context.configwarnings.orgspring:  

229.1. Rename type InOrgSpringPackageConfiguration with InOrgSpringPackageConfiguration

230. Changes to package org.springframework.boot.context.configwarnings.real:  

230.1. Rename type InRealButScanningProblemPackages with InRealButScanningProblemPackages

230.2. Rename type InRealPackageConfiguration with InRealPackageConfiguration

231. Changes to package org.springframework.boot.context.configwarnings.real.nested:  

231.1. Rename type ExampleBean with ExampleBean

232. Changes to package org.springframework.boot.context.embedded:  

232.1. Add a class for abstract embedded servlet container integration tests. It allows to:

	Delete;
	Get parameters;
	Create parameters;
	Instantiate abstract embedded servlet container integration tests  with abstract application launcher;
	Check if  has error;
	Handle error;
	Expand;
	Expand uri variables map

232.2. Add a class for application builder. It allows to:

	Instantiate application builder  with temporary folder;
	Build application;
	Do build application;
	Create resources jar;
	Write pom;
	Write settings  xml app folder file;
	Copy application source;
	Package application

232.3. Add a class for boot run application launcher. It allows to:

	Instantiate boot run application launcher  with application builder, build output and build output;
	Get arguments;
	Delete launcher classes;
	Populate target classes;
	Populate dependencies;
	Populate src main webapp;
	Get classes path;
	Get lib paths;
	Explode archive;
	Get working directory;
	Get description

232.4. Rename type EmbeddedServletContainerJarDevelopmentIntegrationTests with EmbeddedServletContainerJarDevelopmentIntegrationTests

232.5. Rename type EmbeddedServletContainerJarPackagingIntegrationTests with EmbeddedServletContainerJarPackagingIntegrationTests

232.6. Rename type EmbeddedServletContainerWarDevelopmentIntegrationTests with EmbeddedServletContainerWarDevelopmentIntegrationTests

232.7. Add a class for embedded servlet container war packaging integration tests. It allows to:

	Get parameters;
	Instantiate embedded servlet container war packaging integration tests  with abstract application launcher;
	Get nested meta inf resource is available via http;
	Get nested meta inf resource is available via servlet context;
	Handle nested jar is not available via http;
	Handle application classes are not available via http;
	Handle webapp resources are available via http;
	Handle loader classes are not available via http

232.8. Rename type ExplodedApplicationLauncher with ExplodedApplicationLauncher

232.9. Add a class for ide application launcher. It allows to:

	Instantiate ide application launcher  with application builder, build output and build output;
	Get working directory;
	Get description;
	Get arguments;
	Populate built classes;
	Populate dependencies;
	Get exploded resources project;
	Populate src main webapp;
	Delete launcher classes;
	Get classes path;
	Get lib paths;
	Explode archive

232.10. Rename type PackagedApplicationLauncher with PackagedApplicationLauncher

232.11. Add a class for versions. It allows to:

	Instantiate versions;
	Get boot version;
	Evaluate expression

233. Changes to package org.springframework.boot.context.event:  

233.1. Rename type ApplicationEnvironmentPreparedEvent with ApplicationEnvironmentPreparedEvent

233.2. Rename type ApplicationFailedEvent with ApplicationFailedEvent

233.3. Rename type ApplicationPreparedEvent with ApplicationPreparedEvent

233.4. Rename type ApplicationReadyEvent with ApplicationReadyEvent

233.5. Rename type ApplicationStartingEvent with ApplicationStartingEvent

233.6. Rename type SpringApplicationEvent with SpringApplicationEvent

234. Changes to package org.springframework.boot.context.filtersample:  

234.1. Rename type ExampleComponent with ExampleComponent

234.2. Rename type ExampleFilteredComponent with ExampleFilteredComponent

234.3. Rename type SampleTypeExcludeFilter with SampleTypeExcludeFilter

235. Changes to package org.springframework.boot.context.logging:  

235.1. Add a class for classpath logging application listener. It allows to:

	Process classpath logging application listener classpath logging application listener on application event;
	Get order;
	Check if classpath logging application listener supports event type;
	Get classpath

235.2. Add a class for logging application listener. It allows to:

	Check if logging application listener supports event type;
	Check if logging application listener supports source type;
	Check if logging application listener is assignable from;
	Process logging application listener logging application listener on application event;
	Process logging application listener logging application listener on application starting event;
	Process logging application listener logging application listener on application environment prepared event;
	Process logging application listener logging application listener on application prepared event;
	Process logging application listener logging application listener on context closed event;
	Process logging application listener logging application listener on application failed event;
	Initialize configurable environment;
	Initialize early logging level;
	Check if logging application listener is set;
	Initialize system;
	Ignore log config;
	Initialize final logging levels;
	Initialize log level;
	Set log levels;
	Get groups;
	Set log level;
	Coerce log level;
	Register shutdown hook  if necessary;
	Register shutdown hook;
	Get set order;
	Get order;
	Set spring boot logging;
	Set parse args

236. Changes to package org.springframework.boot.context.properties:  

236.1. Add a class for configuration bean factory metadata. It allows to:

	Get beans  with factory annotation;
	Find factory annotation;
	Find factory method;
	Set application context

236.2. Add a class for configuration properties binder. It allows to:

	Instantiate configuration properties binder;
	Set application context;
	Get bind;
	Get configuration properties validator;
	Get validators;
	Get jsr 303 validator;
	Get bind handler;
	Get bind handler advisors;
	Get binder;
	Get configuration property sources;
	Get property sources placeholders resolver;
	Get conversion service;
	Get property editor initializer

236.3. Add a class for configuration properties binding post processor. It allows to:

	Set application context;
	Handle after properties set;
	Get order;
	Post process  before initialization;
	Check if configuration properties binding post processor has been bound;
	Handle bind;
	Get bean type;
	Get annotation

236.4. Add a class for configuration properties binding post processor registrar. It allows to:

	Register bean definitions;
	Register configuration properties binder;
	Register configuration properties binding post processor;
	Register configuration bean factory metadata

237. Changes to package org.springframework.boot.context.properties.bind:  

237.1. Add a class for abstract bind handler. It allows to:

	Instantiate abstract bind handler;
	Instantiate abstract bind handler  with parent bind handler;
	Process abstract bind handler abstract bind handler on start;
	Process abstract bind handler abstract bind handler on success;
	Process abstract bind handler abstract bind handler on failure;
	Process abstract bind handler abstract bind handler on finish

237.2. Add an interface declaration  for aggregate element binder. It allows to:

	Get bind;

237.3. Add a class for array binder. It allows to:

	Instantiate array binder  with context;
	Get bind aggregate;
	Merge existing supplier

237.4. Add a class for array binder tests. It allows to:

	Handle setup;
	Convert bind;

237.5. Add an interface declaration  for bean binder. It allows to:

	Get bind

237.6. Add an interface declaration  for bean property binder. It allows to:

	Get bind property

237.7. Add a class for bean property name. It allows to:

	Instantiate bean property name;
	Convert bean property name to dashed form;

237.8. Add a class for bean property name tests. It allows to:

	Convert bean property name tests to dashed case should convert value

237.9. Add an interface declaration  for bind context. It allows to:

	Get binder;
	Get depth;
	Get sources;
	Get configuration property

237.10. Add a class for bind exception. It allows to:

	Instantiate bind exception  with configuration property name, target bindable, configuration property, cause throwable and cause throwable;
	Get name;
	Get target;
	Get property;
	Get origin;
	Build message

237.11. Add an interface declaration  for bind handler. It allows to:

	Process bind handler bind handler on start;
	Process bind handler bind handler on success;
	Process bind handler bind handler on failure;
	Process bind handler bind handler on finish

237.12. Add a class for bind result. It allows to:

	Instantiate bind result  with value;
	Get bind result;
	Check if bind result is bound;
	Handle if bound;
	Map mapper function;
	Or other else;
	Or other supplier else get;
	Or type class else create;
	Or exception supplier else throw;
	Check if bind result equals;
	Hash code;
	O value

237.13. Add a class for bindable. It allows to:

	Instantiate bindable  with resolvable type, boxed type, value supplier, annotations and annotations;
	Get type;
	Get boxed type;
	Get value;
	Get annotations;
	Get annotation;
	Check if bindable equals;
	Hash code;
	Convert bindable to string;
	Handle null safe equals;
	Process bindable bindable with annotations;
	Process bindable bindable with existing value;
	Process bindable bindable with supplied value;
	Process bindable bindable of instance;
	O type class;
	Get list of;
	Set  of element type class;
	Map  of key type class;
	O resolvable type;
	Get box

237.14. Add a class for collection binder. It allows to:

	Instantiate collection binder  with context;
	Get bind aggregate;
	Merge existing supplier;
	Get existing  if possible;
	Copy collection if possible;
	Create new collection

237.15. Add an interface declaration  for placeholders resolver. It allows to:

	Resolve placeholders

237.16. Add a class for property sources placeholders resolver. It allows to:

	Instantiate property sources placeholders resolver  with environment;
	Instantiate property sources placeholders resolver  with sources iterable;
	Instantiate property sources placeholders resolver  with sources iterable, property placeholder helper and property placeholder helper;
	Resolve placeholders;
	Resolve placeholder;
	Get sources

237.17. Add a class for unbound configuration properties exception. It allows to:

	Instantiate unbound configuration properties exception  with unbound properties set;
	Get unbound properties;
	Build message

238. Changes to package org.springframework.boot.context.properties.bind.handler:  

238.1. Add a class for ignore errors bind handler. It allows to:

	Instantiate ignore errors bind handler;
	Instantiate ignore errors bind handler  with parent bind handler;
	Process ignore errors bind handler ignore errors bind handler on failure

238.2. Add a class for no unbound elements bind handler. It allows to:

	Instantiate no unbound elements bind handler;
	Instantiate no unbound elements bind handler  with parent bind handler;
	Instantiate no unbound elements bind handler  with parent bind handler, filter function and filter function;
	Process no unbound elements bind handler no unbound elements bind handler on success;
	Process no unbound elements bind handler no unbound elements bind handler on finish;
	Check no unbound elements;
	Collect unbound;
	Check if no unbound elements bind handler is unbound;
	Check if no unbound elements bind handler is overridden collection element

239. Changes to package org.springframework.boot.context.properties.bind.validation:  

239.1. Add a class for bind validation exception. It allows to:

	Instantiate bind validation exception  with validation errors;
	Get validation errors;
	Get message

239.2. Add a class for bind validation exception tests. It allows to:

	Create when validation errors is null should throw exception;
	Get validation errors should return validation errors

239.3. Add a class for origin tracked field error. It allows to:

	Instantiate origin tracked field error  with field error, origin and origin;
	Get origin;
	Convert origin tracked field error to string;
	O field error

239.4. Add a class for origin tracked field error tests. It allows to:

	Process origin tracked field error tests origin tracked field error tests of when field error is null should return null;
	Process origin tracked field error tests origin tracked field error tests of when origin is null should return field error without origin;
	Process origin tracked field error tests origin tracked field error tests of should return origin capable field error;
	Convert origin tracked field error tests to string should add origin

239.5. Add a class for validation bind handler. It allows to:

	Instantiate validation bind handler  with validators;
	Instantiate validation bind handler  with parent bind handler, validators and validators;
	Process validation bind handler validation bind handler on success;
	Process validation bind handler validation bind handler on finish;
	Process validation bind handler validation bind handler on failure;
	Validate configuration property name;
	Get validation target;
	Get bind validation exception

239.6. Add a class for validation errors. It allows to:

	Instantiate validation errors  with configuration property name, bound properties set, errors list and errors list;
	Convert errors;
	Convert error;
	Convert field error;
	Find field error origin;
	Check if validation errors is for error;
	Get name;
	Get bound properties;
	Check if validation errors has errors;
	Get all errors;
	Get iterator

239.7. Add a class for validation errors tests. It allows to:

	Create when name is null should throw exception;
	Create when bound properties is null should throw exception;
	Create when errors is null should throw exception;
	Get name should return name;
	Get bound properties should return bound properties;
	Get errors should return errors;
	Handle iterator should iterate errors;
	Get errors should adapt field errors  to be origin providers

240. Changes to package org.springframework.boot.context.properties.source:  

240.1. Add a class for abstract property mapper tests. It allows to:

	Get mapper;
	Get names from string;
	Get names from configuration

240.2. Add a class for aliased configuration property source. It allows to:

	Instantiate aliased configuration property source  with configuration property source, configuration property name aliases and configuration property name aliases;
	Get configuration property;
	Check if aliased configuration property source contains descendant of;
	Get underlying source;
	Get source;
	Get aliases

240.3. Add a class for aliased configuration property source tests. It allows to:

	Get configuration property should consider aliases;
	Get configuration property when  not aliases should return value;
	Check if aliased configuration property source tests contains descendant of when source returns unknown should return unknown;
	Check if aliased configuration property source tests contains descendant of when source returns present should return present;
	Check if aliased configuration property source tests contains descendant of when all are absent should return absent;
	Check if aliased configuration property source tests contains descendant of when any is present should return present;
	Check if aliased configuration property source tests contains descendant of when present in alias should return present;
	Get value

240.4. Add a class for aliased iterable configuration property source. It allows to:

	Instantiate aliased iterable configuration property source  with iterable configuration property source, configuration property name aliases and configuration property name aliases;
	Get stream;
	Add aliases;
	Get source

240.5. Add a class for aliased iterable configuration property source tests. It allows to:

	Handle stream should include aliases

240.6. Add a class for configuration property. It allows to:

	Instantiate configuration property  with configuration property name, origin and origin;
	Get name;
	Get value;
	Get origin;
	Check if configuration property equals;
	Hash code;
	Convert configuration property to string;
	Compare  to other configuration property;
	O configuration property name;

240.7. Add a class for configuration property name aliases. It allows to:

	Instantiate configuration property name aliases;
	Instantiate configuration property name aliases  with configuration property name, aliases configuration property name and aliases configuration property name;
	Add aliases;
	Get aliases;
	Get name  for alias;
	Get iterator

240.8. Add a class for configuration property name aliases tests. It allows to:

	Create configuration property name aliases tests with string when null name should throw exception;
	Create configuration property name aliases tests with string should add mapping;
	Create configuration property name aliases tests with name should add mapping;
	Add aliases  from string should add mapping;
	Add aliases  from name should add mapping;
	Add when has existing should add additional mappings;
	Get aliases when  not mapped should return empty list;
	Get aliases when mapped should return mapping;
	Get name  for alias when has mapping should return name;
	Get name  for alias when not mapped should return null

240.9. Add a class for configuration property name tests. It allows to:

	Process configuration property name tests configuration property name tests of name should not be null;
	Process configuration property name tests configuration property name tests of name should not start with dash;
	Process configuration property name tests configuration property name tests of name should not start with dot;
	Process configuration property name tests configuration property name tests of name should not end with dot;
	Process configuration property name tests configuration property name tests of name should not contain uppercase;
	Process configuration property name tests configuration property name tests of name should not contain invalid chars;
	Process configuration property name tests configuration property name tests of name when simple;
	Process configuration property name tests configuration property name tests of name when starts with number;
	Process configuration property name tests configuration property name tests of name when run on associative;
	Process configuration property name tests configuration property name tests of name when dot on associative;
	Process configuration property name tests configuration property name tests of name when dot and associative;
	Process configuration property name tests configuration property name tests of name when double run on and associative;
	Process configuration property name tests configuration property name tests of name when double dot and associative;
	Process configuration property name tests configuration property name tests of name when missing close bracket;
	Process configuration property name tests configuration property name tests of name when missing open bracket;
	Process configuration property name tests configuration property name tests of name when multiple mismatched brackets;
	Process configuration property name tests configuration property name tests of name when nested brackets;
	Process configuration property name tests configuration property name tests of name with whitespace in name;
	Process configuration property name tests configuration property name tests of name with whitespace in associative element;
	Process configuration property name tests configuration property name tests of name with uppercase in associative element;
	Process configuration property name tests configuration property name tests of when name is empty should return empty name;
	Adapt when name is null should throw exception;
	Adapt when element value processor is null should adapt;
	Adapt should create name;
	Adapt should strip invalid chars;
	Adapt configuration property name tests;
	Adapt should support mixed case;
	Adapt should use element value processor;
	Adapt should support indexed elements;
	Adapt underscore should return empty;
	Check if configuration property name tests is empty when empty should return true;
	Check if configuration property name tests is empty when not empty should return false;
	Check if configuration property name tests is last element indexed when indexed should return true;
	Check if configuration property name tests is last element indexed when not indexed should return false;
	Get last element should get last element;
	Get last element when empty should return empty string;
	Get element should  not include angle brackets;
	Get element  in uniform form should not include dashes;
	Get element  in original form should return element;
	Get element  in uniform form should return element;
	Get elements;
	Get number  of elements should return number of element;
	Append when  not indexed should append with dot;
	Append when indexed should append  with brackets;
	Append when element name is  not valid should throw exception;
	Append when element name multi dot should throw exception;
	Append when element name is null should return name;
	Chop when less  then size should return chopped;
	Chop when greater  than size should return existing;
	Chop when equal  to size should return existing;
	Check if configuration property name tests is parent of when same should return false;
	Check if configuration property name tests is parent of when parent should return true;
	Check if configuration property name tests is parent of when grandparent should return false;
	Check if configuration property name tests is parent of when root return true;
	Check if configuration property name tests is ancestor of when same should return false;
	Check if configuration property name tests is ancestor of when parent should return true;
	Check if configuration property name tests is ancestor of when grandparent should return true;
	Check if configuration property name tests is ancestor of when root should return true;
	Compare should sort names;
	Compare different lengths should sort names;
	Handle to string should be lower case dashed;
	Handle to string from of should be lower case dashed;
	Check if configuration property name tests equals and hash code;
	Check if configuration property name tests equals when starts with;
	Check if configuration property name tests equals when starts with of adapted name;
	Check if configuration property name tests equals when starts with of adapted name of illegal chars;
	Check if configuration property name tests is valid when valid should return true;
	Check if configuration property name tests is valid when not valid should return false

240.10. Add an interface declaration  for configuration property source. It allows to:

	Get configuration property;
	Check if configuration property source contains descendant of;
	Get filter;
	Process configuration property source configuration property source with aliases;
	Get underlying source

240.11. Add a class for configuration property sources. It allows to:

	Instantiate configuration property sources;
	Check if configuration property sources is attached configuration property source;
	Attach environment;
	Get environment;
	Process configuration property sources configuration property sources from;
	Get stream property sources;
	Flatten property source;
	Check if configuration property sources is included

240.12. Add a class for configuration property sources property source. It allows to:

	Instantiate configuration property sources property source  with source iterable;
	Get property;
	Get origin;
	Find configuration property;

240.13. Add a class for configuration property sources property source tests. It allows to:

	Get property should return value;
	Get property when name is  not valid should return null;
	Get property when multiple should return  first;
	Get property when none should return  first;
	Get property origin should return origin;
	Get property origin when missing should return null;
	Get name should return name;
	Get source should return source

240.14. Add a class for configuration property sources tests. It allows to:

	Attach should add adapter  at beginning;
	Attach should re attach  in merged setup;
	Get when  not attached should return adapted;
	Get configuration property sources tests;
	Handle environment property expansion should work when attached;
	Process configuration property sources tests configuration property sources tests from property source should return spring configuration property source;
	Process configuration property sources tests configuration property sources tests from property source should flatten property sources;
	Get property

240.15. Add a class for configuration property state tests. It allows to:

	Handle search when iterable is null should throw exception;
	Handle search when predicate is null should throw exception;
	Handle search when contains item should return present;
	Handle search when contains no item should return absent

240.16. Add a class for configuration property tests. It allows to:

	Create when name is null should throw exception;
	Create when value is null should throw exception;
	Get name should return name;
	Get value should return value;
	Get property origin should return value property origin;
	Check if configuration property tests equals and hash code;
	Convert configuration property tests to string should return value

240.17. Add a class for default property mapper tests. It allows to:

	Get mapper;
	Map default property mapper tests from string should return best guess;
	Map default property mapper tests from configuration should return best guess

240.18. Add an interface declaration  for element char predicate. It allows to:

	Handle test

240.19. Add a class for filtered configuration properties source. It allows to:

	Instantiate filtered configuration properties source  with configuration property source, filter predicate and filter predicate;
	Get configuration property;
	Check if filtered configuration properties source contains descendant of;
	Get underlying source;
	Get source;
	Get filter;
	Convert filtered configuration properties source to string

240.20. Add a class for filtered configuration properties source tests. It allows to:

	Create when source is null should throw exception;
	Create when filter is null should throw exception;
	Get value should filter names;
	Check if filtered configuration properties source tests contains descendant of when source returns empty should return empty;
	Check if filtered configuration properties source tests contains descendant of when source returns false should return false;
	Check if filtered configuration properties source tests contains descendant of when source returns true should return empty;
	Create test source;
	Convert source;
	No brackets

240.21. Add a class for filtered iterable configuration properties source. It allows to:

	Instantiate filtered iterable configuration properties source  with iterable configuration property source, filter predicate and filter predicate;
	Get stream;
	Get source;
	Check if filtered iterable configuration properties source contains descendant of

240.22. Add a class for filtered iterable configuration properties source tests. It allows to:

	Handle iterator should filter names;
	Convert source;
	Check if filtered iterable configuration properties source tests contains descendant of should use contents;
	No brackets

240.23. Add a class for invalid configuration property name exception. It allows to:

	Instantiate invalid configuration property name exception  with name char sequence, invalid characters list and invalid characters list;
	Get invalid characters;
	Get name;
	Throw name char sequence if has invalid chars

240.24. Add an interface declaration  for iterable configuration property source. It allows to:

	Get iterator;
	Get stream;
	Check if iterable configuration property source contains descendant of;
	Get filter;
	Process iterable configuration property source iterable configuration property source with aliases

240.25. Add a class for map configuration property source. It allows to:

	Instantiate map configuration property source;
	Instantiate map configuration property source  with map;
	Put map;
	Put map configuration property source;
	Get underlying source;
	Get configuration property;
	Get iterator;
	Get stream;
	Assert map not read only system attributes map

240.26. Add a class for map configuration property source tests. It allows to:

	Create when map is null should throw exception;
	Create when map has entries should adapt map;
	Put all when map is null should throw exception;
	Put all should put entries;
	Put should put entry;
	Get configuration property should get  from memory;
	Handle iterator should get from memory;
	Handle stream should get from memory;
	Get value

240.27. Add an interface declaration  for property mapper. It allows to:

	Map configuration property name;
	Map property mapper

240.28. Add a class for property mapping. It allows to:

	Instantiate property mapping  with configuration property name;
	Get property source name;
	Get configuration property name;
	Check if property mapping is applicable

240.29. Add a class for spring configuration property sources tests. It allows to:

	Create when property sources is null should throw exception;
	Should adapt property source;
	Should adapt system environment property source;
	Should extended adapt system environment property source;
	Should spring configuration property sources tests not adapt system environment property override source;
	Should adapt system environment property source  with underscore value;
	Should adapt multiple property sources;
	Should flatten environment;
	Get property;
	Should track changes;
	Should track when source has identical name

240.30. Add a class for system environment property mapper. It allows to:

	Map configuration property name;
	Map system environment property mapper;
	Convert name;
	Convert legacy name;
	Convert legacy name element;
	Get process element value;
	Check if system environment property mapper is number

240.31. Add a class for system environment property mapper tests. It allows to:

	Get mapper;
	Map system environment property mapper tests from string should return best guess;
	Map system environment property mapper tests from configuration should return best guess;
	Underscore should  not map to empty string;
	Underscore system environment property mapper tests with whitespace should not map to empty string

240.32. Add a class for test property mapper. It allows to:

	Add test property mapper from property source;
	Add from configuration property name from configuration property;
	Map test property mapper;
	Map configuration property name

240.33. Add a class for unbound elements source filter. It allows to:

	Apply configuration property source

240.34. Add a class for unbound elements source filter tests. It allows to:

	Set unbound elements source filter tests;
	Handle filter when source is system properties property source should return false;
	Handle filter when source is system environment property source should return false;
	Handle filter when source is not system should return true

241. Changes to package org.springframework.boot.devtools:  

241.1. Add a class for remote spring application. It allows to:

	Instantiate remote spring application;
	Run remote spring application;
	Get initializers;
	Get listeners;
	Get banner;
	Wait remote spring application indefinitely;
	Handle main

241.2. Rename type RemoteUrlPropertyExtractor with RemoteUrlPropertyExtractor

242. Changes to package org.springframework.boot.devtools.autoconfigure:  

242.1. Add a class for dev tools data source condition. It allows to:

	Get configuration phase;
	Get match outcome

242.2. Add a class for dev tools embedded data source auto configuration tests. It allows to:

	Handle auto configured data source is not shutdown

242.3. Add a class for dev tools pooled data source auto configuration tests. It allows to:

	Before dev tools pooled data source auto configuration tests;
	Process dev tools pooled data source auto configuration tests dev tools pooled data source auto configuration tests after;
	Handle auto configured in memory data source is shutdown;
	Handle auto configured external data source is not shutdown;
	H 2 server is  not shutdown;
	Process dev tools pooled data source auto configuration tests dev tools pooled data source auto configuration tests in memory H 2 is shutdown;
	Handle hsql server is not shutdown;
	Process dev tools pooled data source auto configuration tests dev tools pooled data source auto configuration tests in memory hsql is shutdown;
	Handle derby client is not shutdown;
	Process dev tools pooled data source auto configuration tests dev tools pooled data source auto configuration tests in memory derby is shutdown

242.4. Rename type DevToolsPropertiesTests with DevToolsPropertiesTests

242.5. Add a class for hateoas objenesis cache disabler. It allows to:

	Handle after properties set;
	Disable caching;
	Do disable caching;
	Remove objenesis cache

242.6. Add a class for optional live reload server. It allows to:

	Instantiate optional live reload server  with live reload server;
	Handle after properties set;
	Start server;
	Trigger reload

242.7. Rename type OptionalLiveReloadServerTests with OptionalLiveReloadServerTests

242.8. Rename type TriggerFileFilter with TriggerFileFilter

242.9. Rename type TriggerFileFilterTests with TriggerFileFilterTests

243. Changes to package org.springframework.boot.devtools.classpath:  

243.1. Rename type ClassPathChangedEvent with ClassPathChangedEvent

243.2. Add a class for class path changed event tests. It allows to:

	Change set must  not be null;
	Get change set;
	Get class path changed event tests

243.3. Rename type ClassPathFileChangeListener with ClassPathFileChangeListener

243.4. Add a class for class path file change listener tests. It allows to:

	Handle setup;
	Handle event publisher must not be null;
	Restart strategy must  not be null;
	Check if class path file change listener tests sends event without restart;
	Check if class path file change listener tests sends event with restart;
	Handle test sends event

243.5. Rename type ClassPathFileSystemWatcher with ClassPathFileSystemWatcher

243.6. Add a class for class path folders. It allows to:

	Instantiate class path folders  with urls;
	Add urls;
	Add url;
	Get iterator

243.7. Add an interface declaration  for class path restart strategy. It allows to:

	Check if class path restart strategy is restart required

243.8. Rename type PatternClassPathRestartStrategy with PatternClassPathRestartStrategy

243.9. Rename type PatternClassPathRestartStrategyTests with PatternClassPathRestartStrategyTests

244. Changes to package org.springframework.boot.devtools.env:  

244.1. Rename type DevToolsHomePropertiesPostProcessor with DevToolsHomePropertiesPostProcessor

244.2. Add a class for dev tools property defaults post processor. It allows to:

	Post process environment;
	Check if dev tools property defaults post processor is local application;
	Can add properties;
	Check if dev tools property defaults post processor is restarter initialized;
	Check if dev tools property defaults post processor is remote restart enabled;
	Check if dev tools property defaults post processor is web application;
	Resolve class name

245. Changes to package org.springframework.boot.devtools.filewatch:  

245.1. Rename type ChangedFile with ChangedFile

245.2. Rename type ChangedFileTests with ChangedFileTests

245.3. Rename type ChangedFiles with ChangedFiles

245.4. Add an interface declaration  for file change listener. It allows to:

	Process file change listener file change listener on change

245.5. Add a class for file snapshot. It allows to:

	Instantiate file snapshot  with file;
	Get file;
	Check if file snapshot equals;
	Hash code;
	Convert file snapshot to string

245.6. Rename type FileSnapshotTests with FileSnapshotTests

245.7. Add an interface declaration  for file system watcher factory. It allows to:

	Get file system watcher

245.8. Add a class for file system watcher tests. It allows to:

	Handle setup;
	Handle poll interval must be positive;
	Handle quiet period must be positive;
	Handle poll interval must be greater than quiet period;
	Handle listener must not be null;
	Handle can not add listener to started listener;
	Handle source folder must not be null;
	Handle source folder must not be A file;
	Handle can not add source folder to started listener;
	Add file;
	Add nested file;
	Create source folder and add file;
	Check if file system watcher tests waits for polling interval;
	Check if file system watcher tests waits for quiet period;
	Process file system watcher tests file system watcher tests with existing files;
	Handle multiple sources;
	Handle multiple listeners;
	Modify file system watcher tests;
	Process file system watcher tests file system watcher tests with trigger filter;
	Handle setup watcher;
	Start file system watcher tests with new folder;
	Get single changed files;
	Get single  on change;
	Touch file

245.9. Add a class for folder snapshot. It allows to:

	Instantiate folder snapshot  with folder file;
	Collect files;
	Get changed files;
	Accept changed file;
	Get files map;
	Check if folder snapshot equals;
	Get filter;
	Hash code;
	Get folder;
	Convert folder snapshot to string

245.10. Rename type FolderSnapshotTests with FolderSnapshotTests

246. Changes to package org.springframework.boot.devtools.livereload:  

246.1. Rename type Connection with Connection

246.2. Rename type ConnectionClosedException with ConnectionClosedException

246.3. Rename type ConnectionInputStream with ConnectionInputStream

246.4. Rename type ConnectionOutputStream with ConnectionOutputStream

246.5. Rename type ConnectionOutputStreamTests with ConnectionOutputStreamTests

246.6. Rename type Frame with Frame

246.7. Rename type FrameTests with FrameTests

247. Changes to package org.springframework.boot.devtools.remote.client:  

247.1. Add a class for class path change uploader. It allows to:

	Instantiate class path change uploader  with client http request factory;
	Process class path change uploader class path change uploader on application event;
	Perform upload;
	Log upload;
	Serialize class loader files;
	Get class loader files;
	Process class path change uploader class path change uploader as class loader file

247.2. Add a class for class path change uploader tests. It allows to:

	Handle setup;
	Handle url must not be null;
	Handle url must not be empty;
	Handle request factory must not be null;
	Handle url must not be malformed;
	Check if class path change uploader tests sends class loader files;
	Handle retries on socket exception;
	Verify upload request;
	Assert class file;
	Create class path changed event;
	Create file;
	Get deserialize

247.3. Rename type DelayedLiveReloadTrigger with DelayedLiveReloadTrigger

247.4. Rename type DelayedLiveReloadTriggerTests with DelayedLiveReloadTriggerTests

247.5. Rename type HttpHeaderInterceptor with HttpHeaderInterceptor

247.6. Rename type HttpHeaderInterceptorTests with HttpHeaderInterceptorTests

248. Changes to package org.springframework.boot.devtools.remote.server:  

248.1. Add an interface declaration  for access manager. It allows to:

	Check if access manager is allowed

248.2. Add a class for dispatcher. It allows to:

	Instantiate dispatcher  with access manager, mappers collection and mappers collection;
	Handle server http request;
	Handle handler

248.3. Rename type DispatcherFilter with DispatcherFilter

248.4. Add a class for dispatcher filter tests. It allows to:

	Handle setup;
	Handle dispatcher must not be null;
	Check if dispatcher filter tests ignores not servlet requests;
	Get ignored by dispatcher;
	Get handled by dispatcher

248.5. Add a class for dispatcher tests. It allows to:

	Handle setup;
	Handle access manager must not be null;
	Handle mappers must not be null;
	Handle access manager veto request;
	Handle access manager allow request;
	Handle orders mappers

248.6. Add an interface declaration  for handler. It allows to:

	Handle server http request

248.7. Add an interface declaration  for handler mapper. It allows to:

	Get handler

248.8. Rename type HttpHeaderAccessManager with HttpHeaderAccessManager

248.9. Rename type HttpHeaderAccessManagerTests with HttpHeaderAccessManagerTests

248.10. Rename type HttpStatusHandler with HttpStatusHandler

248.11. Rename type HttpStatusHandlerTests with HttpStatusHandlerTests

248.12. Rename type UrlHandlerMapper with UrlHandlerMapper

248.13. Rename type UrlHandlerMapperTests with UrlHandlerMapperTests

249. Changes to package org.springframework.boot.devtools.restart:  

249.1. Add a class for agent reloader. It allows to:

	Instantiate agent reloader;
	Check if agent reloader is active;

249.2. Add a class for changeable urls. It allows to:

	Instantiate changeable urls  with urls;
	Check if changeable urls is folder url;
	Get iterator;
	Get size;
	Convert changeable urls to array;
	Convert changeable urls to list;
	Convert changeable urls to string;
	Process changeable urls changeable urls from class loader;
	Get urls from class loader;
	Convert changeable urls to URL;
	Get urls  from class path of jar manifest if possible;
	Get jar file  if possible;
	Get urls  from manifest class path attribute;
	Process changeable urls changeable urls from urls;

249.3. Add a class for changeable urls tests. It allows to:

	Handle folder url;
	File url;
	Http url;
	Handle https url;
	Handle skips urls;
	Handle urls from jar class path are considered;
	Make url;
	Make jar file  with urls in manifest class path;
	Make jar file  with no manifest

249.4. Add a class for class loader files resource pattern resolver tests. It allows to:

	Handle setup;
	Get class loader should return class loader;
	Get resource should return resource;
	Get resource when has servlet context should return servlet resource;
	Get resource when deleted should return deleted resource;
	Get resources should return resources;
	Get resources when deleted should filter deleted;
	Handle custom resource loader is used in non web application;
	Handle custom protocol resolver is used in non web application;
	Handle custom resource loader is used in web application;
	Handle custom protocol resolver is used in web application;
	Handle mock protocol resolver;
	Create file

249.5. Add a class for default restart initializer. It allows to:

	Get initial urls;
	Check if default restart initializer is main;
	Check if default restart initializer is skipped stack element;
	Get urls

249.6. Add an interface declaration  for failure handler. It allows to:

	Handle failure throwable

249.7. Rename type MainMethod with MainMethod

249.8. Rename type MockRestartInitializer with MockRestartInitializer

249.9. Add a class for mock restarter. It allows to:

	Apply base statement;
	Evaluate;
	Handle setup;
	Handle cleanup;
	Get mock

249.10. Rename type OnInitializedRestarterCondition with OnInitializedRestarterCondition

249.11. Rename type RestartApplicationListener with RestartApplicationListener

249.12. Rename type RestartApplicationListenerTests with RestartApplicationListenerTests

249.13. Add an interface declaration  for restart initializer. It allows to:

	Get initial urls

249.14. Rename type RestartLauncher with RestartLauncher

249.15. Add an interface declaration  for restart listener. It allows to:

	Restart restart

249.16. Rename type Restarter with Restarter

250. Changes to package org.springframework.boot.devtools.restart.classloader:  

250.1. Rename type ClassLoaderFile with ClassLoaderFile

250.2. Add an interface declaration  for class loader file repository. It allows to:

	Get file

250.3. Rename type ClassLoaderFileTests with ClassLoaderFileTests

250.4. Rename type ClassLoaderFilesTests with ClassLoaderFilesTests

250.5. Add a class for restart class loader tests. It allows to:

	Handle setup;
	Create sample jar file;
	Handle parent must not be null;
	Get updated files must not be null;
	Get resource  from reloadable url;
	Get resource  from parent;
	Get resources filters duplicates;
	Load class  from reloadable url;
	Load class  from parent;
	Get deleted resource;
	Get deleted resource  as stream;
	Get updated resource;
	Get resources  with deleted;
	Get resources  with updated;
	Get deleted class;
	Get updated class;
	Get added class;
	Read string;
	Convert restart class loader tests to list

250.6. Rename type Sample with Sample

250.7. Rename type SampleParent with SampleParent

251. Changes to package org.springframework.boot.devtools.restart.server:  

251.1. Add a class for default source folder url filter. It allows to:

	Check if default source folder url filter is match;
	Get jar name;
	Check if default source folder url filter is folder match;
	Get strip trailing slash;
	Get strip common ends

251.2. Add a class for default source folder url filter tests. It allows to:

	Handle maven source folder;
	Gradle eclipse source folder;
	Handle unusual source folder;
	Get skipped projects;
	Do test;
	Get urls

251.3. Rename type HttpRestartServer with HttpRestartServer

251.4. Rename type HttpRestartServerHandler with HttpRestartServerHandler

251.5. Rename type HttpRestartServerHandlerTests with HttpRestartServerHandlerTests

251.6. Rename type HttpRestartServerTests with HttpRestartServerTests

251.7. Add a class for restart server. It allows to:

	Instantiate restart server  with source folder url filter;
	Instantiate restart server  with source folder url filter, class loader and class loader;
	Update class loader files;
	Update file system;
	Check if restart server is folder url;
	Get matching urls;
	Get class loader urls;
	Update time stamp;
	Restart urls set

251.8. Add an interface declaration  for source folder url filter. It allows to:

	Check if source folder url filter is match

252. Changes to package org.springframework.boot.devtools.settings:  

252.1. Add a class for dev tools settings. It allows to:

	Instantiate dev tools settings;
	Add properties map;
	Get patterns;
	Check if dev tools settings is restart include;
	Check if dev tools settings is restart exclude;
	Check if dev tools settings is match;
	Get dev tools settings;
	Get load;

252.2. Rename type DevToolsSettingsTests with DevToolsSettingsTests

253. Changes to package org.springframework.boot.devtools.tests:  

253.1. Rename type ApplicationLauncher with ApplicationLauncher

253.2. Add a class for exploded remote application launcher. It allows to:

	Instantiate exploded remote application launcher  with directories;
	Create application class path;
	Convert exploded remote application launcher to string

253.3. Add a class for jar file remote application launcher. It allows to:

	Instantiate jar file remote application launcher  with directories;
	Create application class path;
	Add jar output stream to jar;
	Convert jar file remote application launcher to string

253.4. Add a class for launched application. It allows to:

	Instantiate launched application  with classes directory file, standard out file, standard error file, local process, remote process, remote process restarter bi function and remote process restarter bi function;
	Restart remote;
	Stop launched application;
	Stop process;
	Get standard  out;
	Get standard error;
	Get classes directory

253.5. Add a class for local application launcher. It allows to:

	Instantiate local application launcher  with directories;
	Launch application;
	Create application class path;
	Convert local application launcher to string

253.6. Add a class for remote application launcher. It allows to:

	Instantiate remote application launcher  with directories;
	Launch application;
	Get remote restarter;
	Create application class path;
	Create remote spring application class path;
	Await server port;
	Await remote spring application

254. Changes to package org.springframework.boot.devtools.tunnel.client:  

254.1. Rename type TunnelClientListener with TunnelClientListener

254.2. Add a class for tunnel client listeners. It allows to:

	Add listener;
	Remove listener;
	Handle fire open event;
	Handle fire close event

254.3. Add an interface declaration  for tunnel connection. It allows to:

	Handle open

255. Changes to package org.springframework.boot.devtools.tunnel.payload:  

255.1. Rename type HttpTunnelPayload with HttpTunnelPayload

255.2. Add a class for http tunnel payload forwarder. It allows to:

	Instantiate http tunnel payload forwarder  with target channel;
	Forward http tunnel payload forwarder

255.3. Rename type HttpTunnelPayloadForwarderTests with HttpTunnelPayloadForwarderTests

255.4. Add a class for http tunnel payload tests. It allows to:

	Handle sequence must be positive;
	Handle data must not be null;
	Get sequence;
	Get data;
	Assign http tunnel payload tests to;
	Get no data;
	Get http tunnel payload tests with missing header;
	Get http tunnel payload tests with data;
	Get payload data;
	Get payload data  with timeout;

256. Changes to package org.springframework.boot.devtools.tunnel.server:  

256.1. Rename type HttpTunnelServerHandler with HttpTunnelServerHandler

256.2. Rename type HttpTunnelServerHandlerTests with HttpTunnelServerHandlerTests

256.3. Add an interface declaration  for port provider. It allows to:

	Get port

256.4. Rename type StaticPortProvider with StaticPortProvider

256.5. Rename type StaticPortProviderTests with StaticPortProviderTests

256.6. Add an interface declaration  for target server connection. It allows to:

	Handle open

257. Changes to package org.springframework.boot.diagnostics:  

257.1. Add a class for abstract failure analyzer. It allows to:

	Analyze failure throwable;
	Analyze root failure throwable;
	Get cause type;
	Find cause

257.2. Rename type FailureAnalysis with FailureAnalysis

257.3. Add an interface declaration  for failure analysis reporter. It allows to:

	Handle report

257.4. Add an interface declaration  for failure analyzer. It allows to:

	Analyze failure throwable

257.5. Add a class for failure analyzers. It allows to:

	Instantiate failure analyzers  with configurable application context;
	Instantiate failure analyzers  with configurable application context, class loader and class loader;
	Load failure analyzers;
	Prepare failure analyzers;
	Prepare analyzer;
	Report exception;
	Analyze failure throwable;
	Handle report

257.6. Rename type LoggingFailureAnalysisReporter with LoggingFailureAnalysisReporter

258. Changes to package org.springframework.boot.diagnostics.analyzer:  

258.1. Add a class for abstract injection failure analyzer. It allows to:

	Analyze root failure throwable;
	Get description;
	Find root throwable most nested cause;

258.2. Rename type BeanNotOfRequiredTypeFailureAnalyzer with BeanNotOfRequiredTypeFailureAnalyzer

258.3. Add a class for bind failure analyzer. It allows to:

	Analyze root failure throwable;
	Analyze generic bind exception;
	Build description;
	Get message;
	Get failure analysis;
	Find valid values

258.4. Add an object creator class for connector start failure analyzer. It allows to:

	Analyze root failure throwable

258.5. Add a class for invalid configuration property name failure analyzer. It allows to:

	Analyze root failure throwable;
	Build description;
	Quote character

258.6. Rename type NoUniqueBeanDefinitionFailureAnalyzer with NoUniqueBeanDefinitionFailureAnalyzer

258.7. Add an object creator class for port in use failure analyzer. It allows to:

	Analyze root failure throwable

258.8. Add a class for unbound configuration property failure analyzer. It allows to:

	Analyze root failure throwable;
	Analyze unbound configuration properties exception;
	Build description;
	Get failure analysis

258.9. Rename type ValidationExceptionFailureAnalyzer with ValidationExceptionFailureAnalyzer

259. Changes to package org.springframework.boot.diagnostics.analyzer.nounique:  

259.1. Rename type BarTestBean with BarTestBean

259.2. Rename type FooTestBean with FooTestBean

259.3. Rename type TestBean with TestBean

259.4. Rename type TestBeanConsumer with TestBeanConsumer

260. Changes to package org.springframework.boot.env:  

260.1. Add an interface declaration  for environment post processor. It allows to:

	Post process environment

260.2. Add a class for no snake yaml property source loader tests. It allows to:

	Handle load

260.3. Add a class for origin tracked map property source. It allows to:

	Instantiate origin tracked map property source  with source map;
	Get property;
	Get origin

260.4. Add a class for origin tracked map property source tests. It allows to:

	Get property when missing should return null;
	Get property when  non tracked should return value;
	Get property when tracked should return value;
	Get property origin when missing should return null;
	Get property origin when  non tracked should return null;
	Get property origin when tracked should return origin

260.5. Add a class for origin tracked properties loader tests. It allows to:

	Set origin tracked properties loader tests;
	Compare origin tracked properties loader tests to java properties;
	Get simple property;
	Get simple property  with colon separator;
	Get property  with separator surrounded by spaces;
	Get unicode property;
	Get malformed unicode property;
	Get escaped property;
	Get property  with tab;
	Get property  with bang;
	Get property  with value comment;
	Get property  with multiline immediate bang;
	Get property  with carriage return;
	Get property  with new line;
	Get property  with form feed;
	Get property  with white space;
	Get commented out property should be null;
	Get multiline;
	Get immediate multiline;
	Get property  with whitespace after key;
	Get property  with space separator;
	Get property  with backslash escaped;
	Get property  with empty value;
	Get property  with backslash escaped in value;
	Get property  with separator in value;
	Get list property;
	Get property  with ISO 88591 character;
	Get property  with trailing space;
	Get value;
	Get location

260.6. Add a class for origin tracked yaml loader tests. It allows to:

	Set origin tracked yaml loader tests;
	Handle process simple key;
	Handle process map;
	Handle process collection;
	Handle process multiline;
	Handle process list of maps;
	Handle process empty and null values;
	Get value;
	Get location

260.7. Add a class for properties property source loader. It allows to:

	Get file extensions;
	Get load;
	Load properties

260.8. Add a class for properties property source loader tests. It allows to:

	Get file extensions;
	Load properties;
	Load xml

260.9. Rename type PropertySourceLoader with PropertySourceLoader

260.10. Add a class for random value property source. It allows to:

	Instantiate random value property source;
	Get property;
	Get random value;
	Get range;
	Get next int  in range;
	Get next  long in range;
	Get random bytes;
	Add configurable environment to environment

260.11. Add a class for random value property source tests. It allows to:

	Not random;
	Handle string;
	Handle int value;
	Handle uuid value;
	Handle int range;
	Handle int max;
	Handle long value;
	Handle long range;
	Long max;
	Long overflow;
	Handle next long

260.12. Add a class for spring application json environment post processor tests. It allows to:

	Handle error;
	Missing spring application json environment post processor tests;
	Handle empty;
	Handle period separated;
	Env var;
	Get nested;
	Get prefixed;
	Handle list;
	Handle list of object;
	Handle property source should track origin

260.13. Add a class for system environment property source environment post processor tests. It allows to:

	Set system environment property source environment post processor tests;
	Post process should replace system environment property source;
	Get replaced property source should be origin aware;
	Get replaced property source when property absent should return null origin;
	Get replaced property source should resolve property

260.14. Add a class for yaml property source loader. It allows to:

	Get file extensions;
	Get load

260.15. Add a class for yaml property source loader tests. It allows to:

	Handle load;
	Get ordered items;
	Merge items;
	Timestamp yaml property source loader tests like items do not become dates;
	Load origin aware

261. Changes to package org.springframework.boot.gradle.docs:  

261.1. Add a class for getting started documentation tests. It allows to:

	Handle typical plugins applies excepted plugins

261.2. Add a class for integrating with actuator documentation tests. It allows to:

	Handle basic build info;
	Build info custom values;
	Build info additional;
	Build info properties

261.3. Add a class for managing dependencies documentation tests. It allows to:

	Handle dependencies example evaluates successfully;
	Handle custom managed versions;
	Handle dependency management in isolation;
	Handle dependency management in isolation with plugins block

261.4. Add a class for packaging documentation tests. It allows to:

	Handle war container dependency evaluates successfully;
	Handle boot jar main class;
	Handle boot jar manifest main class;
	Handle application plugin main class;
	Spring boot dsl main class;
	Handle boot war include devtools;
	Handle boot jar requires unpack;
	Handle boot jar include launch script;
	Handle boot jar launch script properties;
	Handle boot jar custom launch script;
	Handle boot war properties launcher;
	Handle boot jar and jar;
	Handle jar file

261.5. Add a class for publishing documentation tests. It allows to:

	Handle maven upload;
	Handle maven publish

261.6. Add a class for running documentation tests. It allows to:

	Handle boot run main;
	Handle application plugin main class name;
	Spring boot dsl main class name;
	Handle boot run source resources

262. Changes to package org.springframework.boot.gradle.dsl:  

262.1. Add a class for build info dsl integration tests. It allows to:

	Handle basic jar;
	Handle jar with custom name;
	Handle basic war;
	Handle war with custom name;
	Handle additional properties;
	Handle classes dependency;
	Build info properties

262.2. Add a class for spring boot extension. It allows to:

	Instantiate spring boot extension  with project;
	Get main class name;
	Set main class name;
	Build info;
	Determine main source set resources output dir;
	Determine artifact base name;
	Find artifact task

263. Changes to package org.springframework.boot.gradle.plugin:  

263.1. Add a class for application plugin action. It allows to:

	Execute project;
	Get plugin class;
	Load resource

263.2. Add a class for application plugin action integration tests. It allows to:

	Handle no boot distribution without application plugin applied;
	Applying application plugin creates boot distribution;
	Handle no boot start scripts task without application plugin applied;
	Applying application plugin creates boot start scripts task;
	Check if application plugin action integration tests creates boot start scripts task uses application plugins default jvm opts;
	Zip distribution  for jar can be built;
	Handle tar distribution for jar can be built;
	Zip distribution  for war can be built;
	Handle tar distribution for war can be built;
	Convert application name can be used;
	Handle scripts have correct permissions;
	Zip entry names;
	Get tar entry names;
	Handle tar entries

263.3. Add a class for dependency management plugin action. It allows to:

	Execute project;
	Get plugin class

263.4. Add a class for dependency management plugin action integration tests. It allows to:

	No dependency management is applied  by default;
	Handle bom is imported when dependency management plugin is applied;
	Handle helpful error when versionless dependency fails to resolve

263.5. Add a class for java plugin action integration tests. It allows to:

	Handle no boot jar task without java plugin applied;
	Applying java plugin creates boot jar task;
	Handle no boot run task without java plugin applied;
	Applying java plugin creates boot run task;
	Handle java compile tasks use utf 8 encoding;
	Handle java compile tasks use parameters compiler flag by default;
	Handle java compile tasks use parameters and additional compiler flags;
	Handle java compile tasks can override default parameters compiler flag;
	Assemble runs boot jar and jar is skipped;
	Handle error message is helpful when main class can not be resolved;
	Handle jar and boot jar can both be built;
	Handle additional metadata locations configured when processor is present;
	Handle additional metadata locations not configured when processor is absent;
	Create minimal main source

263.6. Add a class for main class convention. It allows to:

	Instantiate main class convention  with project, classpath supplier and classpath supplier;
	Call main class convention;
	Resolve main class;
	Find main class

263.7. Add a class for maven plugin action. It allows to:

	Instantiate maven plugin action;
	Get plugin class;
	Execute project;
	Handle clear configuration mappings

263.8. Add a class for maven plugin action integration tests. It allows to:

	Check if maven plugin action integration tests clears conf 2 scope mappings of upload boot archives task

263.9. Add an interface declaration  for plugin application action. It allows to:

	Get plugin class

263.10. Add a class for single published artifact. It allows to:

	Instantiate single published artifact  with artifacts set;
	Add candidate;
	Get build dependencies

263.11. Add a class for spring boot plugin. It allows to:

	Apply project;
	Verify gradle version;
	Create extension;
	Create boot archives configuration;
	Register plugin actions;
	Handle unregister unresolved dependencies analyzer;
	Determine spring boot version;
	Get implementation version

263.12. Add a class for spring boot plugin integration tests. It allows to:

	Fail spring boot plugin integration tests fast with version of gradle lower than required;
	Succeed spring boot plugin integration tests with version of gradle higher than required;
	Succeed spring boot plugin integration tests with version of gradle matching what is required;
	Handle unresolved dependencies are analyzed when dependency resolution fails;
	Create minimal main source

263.13. Add a class for unresolved dependencies analyzer. It allows to:

	Analyze unresolved dependencies set;
	Finished project;
	Check if unresolved dependencies analyzer has no version

263.14. Add a class for war plugin action. It allows to:

	Instantiate war plugin action  with single published artifact;
	Get plugin class;
	Execute project;
	Get provided runtime configuration

263.15. Add a class for war plugin action integration tests. It allows to:

	Handle no boot war task without war plugin applied;
	Applying war plugin creates boot war task;
	Assemble runs boot war and war is skipped;
	Handle war and boot war can both be built;
	Handle error message is helpful when main class can not be resolved

264. Changes to package org.springframework.boot.gradle.tasks.application:  

264.1. Add a class for create boot start scripts. It allows to:

	Get main class name

265. Changes to package org.springframework.boot.gradle.tasks.buildinfo:  

265.1. Add a class for build info. It allows to:

	Generate build properties;
	Get destination dir;
	Set destination dir;
	Get properties;
	Handle properties;
	Coerce input map to string values

265.2. Add a class for build info integration tests. It allows to:

	Handle default values;
	Handle basic execution;
	Convert not up;
	Convert up;
	Build info properties

265.3. Add a class for build info properties. It allows to:

	Instantiate build info properties  with project;
	Get group;
	Set group;
	Get artifact;
	Set artifact;
	Get version;
	Get set version;
	Get name;
	Set name;
	Get time;
	Set time;
	Get additional;
	Set additional;
	Check if build info properties equals;
	Handle null safe equals;
	Hash code

265.4. Add a class for build info tests. It allows to:

	Handle basic execution;
	Handle custom artifact is reflected in properties;
	Handle project group is reflected in properties;
	Handle custom group is reflected in properties;
	Handle custom name is reflected in properties;
	Handle project version is reflected in properties;
	Handle custom version is reflected in properties;
	Handle time is set in properties;
	Handle time can be removed from properties;
	Handle time can be customized in properties;
	Handle additional properties are reflected in properties;
	Create project;
	Create task;
	Build info properties;

266. Changes to package org.springframework.boot.gradle.tasks.bundling:  

266.1. Add a class for abstract boot archive integration tests. It allows to:

	Instantiate abstract boot archive integration tests;
	Handle basic build;
	Handle reproducible archive;
	Convert up;
	Handle up to date when built twice with launch script included;
	Handle not up to date when launch script was not included and then is included;
	Handle not up to date when launch script was included and then is not included;
	Convert not up;
	Handle application plugin main class name is used;
	Handle spring boot extension main class name is used;
	Handle duplicates are handled gracefully

266.2. Add a class for abstract boot archive tests. It allows to:

	Instantiate abstract boot archive tests  with task class;
	Create task;
	Handle basic archive creation;
	Handle classpath jars are packaged beneath lib path;
	Handle classpath folders are packaged beneath classes path;
	Module info class is packaged  in the root of the archive;
	Handle classpath can be set using A file collection;
	Handle classpath can be set using an object;
	Handle files on the classpath that are not zip files are skipped;
	Convert loader is written;
	Unpack comment is added  to entry identified by A pattern;
	Unpack comment is added  to entry identified by A spec;
	Launch script can be prepended;
	Handle custom launch script can be prepended;
	Launch script init info properties can be customized;
	Handle custom main class in the manifest is honored;
	Handle custom start class in the manifest is honored;
	File timestamp preservation can be disabled;
	Handle reproducible ordering can be enabled;
	Handle devtools jar is excluded by default;
	Handle devtools jar can be included;
	All entries use unix platform and utf 8 name encoding;
	Handle loader is written first then application classes then libraries;
	Get jar file;
	Configure task;
	Execute task;
	Get task;
	Get entry names

266.3. Add an interface declaration  for boot archive. It allows to:

	Get main class name;
	Set main class name;
	Check if boot archive requires unpack;
	Get launch script;
	Launch script;
	Get classpath;
	Handle classpath;
	Set classpath;
	Check if boot archive is exclude devtools;
	Set exclude devtools

266.4. Add a class for boot jar. It allows to:

	Instantiate boot jar;
	Handle classpath files;
	Handle copy;
	Create copy action;
	Get main class name;
	Set main class name;
	Check if boot jar requires unpack;
	Get launch script;
	Launch script;
	Get classpath;
	Handle classpath;
	Set classpath;
	Check if boot jar is exclude devtools;
	Set exclude devtools;
	Get boot inf;
	Resolve zip compression;
	Enable launch script  if necessary

266.5. Add a class for boot jar integration tests. It allows to:

	Instantiate boot jar integration tests

266.6. Add a class for boot jar tests. It allows to:

	Instantiate boot jar tests;
	Convert content can be added;
	Execute task

266.7. Add a class for boot war. It allows to:

	Instantiate boot war;
	Handle copy;
	Create copy action;
	Get main class name;
	Set main class name;
	Check if boot war requires unpack;
	Get launch script;
	Launch script;
	Get provided classpath;
	Set provided classpath;
	Check if boot war is exclude devtools;
	Set exclude devtools;
	Resolve zip compression;
	Enable launch script  if necessary

266.8. Add a class for boot war integration tests. It allows to:

	Instantiate boot war integration tests

266.9. Add a class for boot war tests. It allows to:

	Instantiate boot war tests;
	Get provided classpath jars are packaged in web inf lib provided;
	Get provided classpath can be set using A file collection;
	Get provided classpath can be set using an object;
	Handle devtools jar is excluded by default when its on the provided classpath;
	Handle devtools jar can be included when its on the provided classpath;
	Handle webapp resources in directories that overlap with loader can be packaged;
	Lib provided entries are written  after lib entries;
	Execute task

266.10. Add a class for launch script configuration. It allows to:

	Instantiate launch script configuration;
	Instantiate launch script configuration  with abstract archive task;
	Get properties;
	Handle properties;
	Get script;
	Set script;
	Check if launch script configuration equals;
	Handle equal contents;
	Hash code;
	Remove line breaks;
	Augment line breaks;
	Put properties map if missing

266.11. Add a class for maven integration tests. It allows to:

	Handle boot jar can be uploaded;
	Handle boot war can be uploaded;
	Get artifact with suffix;
	Get pom with

266.12. Add a class for maven publishing integration tests. It allows to:

	Handle boot jar can be published;
	Handle boot war can be published;
	Get artifact with suffix;
	Get pom with

266.13. Add a class for pom condition. It allows to:

	Instantiate pom condition;
	Instantiate pom condition  with expected contents set, not expected contents set and not expected contents set;
	Handle matches;
	Get description;
	Get group id;
	Get artifact id;
	Get version;
	Get packaging;
	No dependencies;
	No packaging

267. Changes to package org.springframework.boot.gradle.tasks.run:  

267.1. Add a class for boot run. It allows to:

	Handle source resources;
	Handle exec

267.2. Add a class for boot run integration tests. It allows to:

	Handle basic execution;
	Handle source resources can be used;
	Handle spring boot extension main class name is used;
	Handle application plugin main class name is used;
	Handle application plugin main class name is not used when it is null;
	Handle application plugin jvm arguments are used;
	Copy application;
	Handle canonical path of

268. Changes to package org.springframework.boot.gradle.testkit:  

268.1. Add a class for gradle build. It allows to:

	Instantiate gradle build;
	Instantiate gradle build  with dsl;
	Get dsl;
	Apply base statement;
	Evaluate;
	Find default script;
	Get script  for test method;
	Remove gradle version;
	Get script  for test class;
	Before gradle build;
	Process gradle build gradle build after;
	Plugin classpath;
	Get path of jar containing;
	Get script;
	Build gradle build;
	Prepare runner;
	Get project dir;
	Set project dir;
	Gradle version;
	Get gradle version;
	Get boot version;
	Get dependency management plugin version

269. Changes to package org.springframework.boot.groovy:  

269.1. Rename type GroovyTemplate with GroovyTemplate

270. Changes to package org.springframework.boot.info:  

270.1. Rename type BuildProperties with BuildProperties

270.2. Rename type BuildPropertiesTests with BuildPropertiesTests

270.3. Rename type GitProperties with GitProperties

270.4. Rename type GitPropertiesTests with GitPropertiesTests

271. Changes to package org.springframework.boot.jackson:  

271.1. Rename type JsonComponentModule with JsonComponentModule

271.2. Rename type JsonObjectDeserializer with JsonObjectDeserializer

271.3. Rename type JsonObjectSerializer with JsonObjectSerializer

271.4. Rename type JsonObjectSerializerTests with JsonObjectSerializerTests

271.5. Rename type NameAndAge with NameAndAge

272. Changes to package org.springframework.boot.jdbc:  

272.1. Add a class for data source builder. It allows to:

	Create data source builder;
	Create class loader;
	Instantiate data source builder  with class loader;
	Build data source builder;
	Maybe get driver class name;
	Handle bind;
	Get type;
	Get url;
	Get driver class name;
	Username data source builder;
	Get password;
	Find type;

272.2. Add a class for database driver class name tests. It allows to:

	Get parameters;
	Instantiate database driver class name tests  with database driver, required type class and required type class;
	Handle database class is of required type;
	Get interface names

272.3. Rename type DatabaseDriverTests with DatabaseDriverTests

272.4. Add a class for embedded database connection tests. It allows to:

	H 2 custom database name;
	Handle derby custom database name;
	Handle hsql custom database name;
	Get url  with null database name;
	Get url  with empty database name

272.5. Add a class for is embedded. It allows to:

	Do connection in connection

272.6. Add an interface declaration  for schema management provider. It allows to:

	Get schema management

273. Changes to package org.springframework.boot.jdbc.metadata:  

273.1. Add a class for abstract data source pool metadata. It allows to:

	Instantiate abstract data source pool metadata  with data source;
	Get usage;
	Get data source

273.2. Add a class for abstract data source pool metadata tests. It allows to:

	Get data source metadata;
	Get max pool size;
	Get min pool size;
	Get pool size no connection;
	Get pool size one connection;
	Get pool size two connections;
	Get validation query;
	Get default auto commit;
	Initialize builder

273.3. Add a class for commons dbcp 2 data source pool metadata. It allows to:

	Instantiate commons dbcp 2 data source pool metadata  with basic data source;
	Get active;
	Get max;
	Get min;
	Get validation query;
	Get default auto commit

273.4. Add a class for commons dbcp 2 data source pool metadata tests. It allows to:

	Handle setup;
	Get data source metadata;
	Get pool usage  with no current;
	Get active;
	Get pool usage  with no max;
	Get max;
	Get pool usage  with unlimited pool;
	Get validation query;
	Get default auto commit;
	Create data source metadata;
	Create data source

273.5. Add a class for composite data source pool metadata provider. It allows to:

	Instantiate composite data source pool metadata provider  with providers collection;
	Get data source pool metadata

273.6. Add a class for composite data source pool metadata provider tests. It allows to:

	Handle setup;
	Create composite data source pool metadata provider tests with providers

273.7. Add an interface declaration  for data source pool metadata. It allows to:

	Get usage;
	Get active;
	Get max;
	Get min;
	Get validation query;
	Get default auto commit

273.8. Add an interface declaration  for data source pool metadata provider. It allows to:

	Get data source pool metadata

273.9. Add a class for hikari data source pool metadata. It allows to:

	Instantiate hikari data source pool metadata  with hikari data source;
	Get active;
	Get hikari pool;
	Get max;
	Get min;
	Get validation query;
	Get default auto commit

273.10. Add a class for hikari data source pool metadata tests. It allows to:

	Handle setup;
	Get data source metadata;
	Get validation query;
	Get default auto commit;
	Create data source

273.11. Add a class for tomcat data source pool metadata. It allows to:

	Instantiate tomcat data source pool metadata  with data source;
	Get active;
	Get max;
	Get min;
	Get validation query;
	Get default auto commit

273.12. Add a class for tomcat data source pool metadata tests. It allows to:

	Handle setup;
	Get data source metadata;
	Get validation query;
	Get default auto commit;
	Create data source

274. Changes to package org.springframework.boot.json:  

274.1. Rename type AbstractJsonParserTests with AbstractJsonParserTests

274.2. Add a class for basic json parser. It allows to:

	Parse map;
	Parse list;
	Parse list internal;
	Parse internal;
	Handle trim trailing character;
	Handle trim leading character;
	Parse map internal;
	Tokenize basic json parser

274.3. Rename type BasicJsonParserTests with BasicJsonParserTests

274.4. Rename type GsonJsonParserTests with GsonJsonParserTests

274.5. Rename type JacksonJsonParserTests with JacksonJsonParserTests

274.6. Rename type JsonParser with JsonParser

274.7. Add an object creator class for json parser factory. It allows to:

	Get json parser

274.8. Rename type YamlJsonParser with YamlJsonParser

274.9. Rename type YamlJsonParserTests with YamlJsonParserTests

275. Changes to package org.springframework.boot.jta.atomikos:  

275.1. Rename type AtomikosConnectionFactoryBean with AtomikosConnectionFactoryBean

275.2. Rename type AtomikosDataSourceBean with AtomikosDataSourceBean

275.3. Add a class for atomikos depends on bean factory post processor. It allows to:

	Post process bean factory;
	Add transaction manager dependencies;
	Add message driven container dependencies;
	Add dependencies;
	Get bean names  for type;
	Process atomikos depends on bean factory post processor atomikos depends on bean factory post processor as list;
	Get order;
	Get set order

275.4. Add a class for atomikos properties tests. It allows to:

	Handle test properties;
	Handle test default properties;
	Get default of;
	Load default settings;
	Assert property

275.5. Rename type AtomikosXAConnectionFactoryWrapper with AtomikosXAConnectionFactoryWrapper

275.6. Rename type AtomikosXAConnectionFactoryWrapperTests with AtomikosXAConnectionFactoryWrapperTests

275.7. Rename type AtomikosXADataSourceWrapper with AtomikosXADataSourceWrapper

275.8. Rename type AtomikosXADataSourceWrapperTests with AtomikosXADataSourceWrapperTests

276. Changes to package org.springframework.boot.jta.bitronix:  

276.1. Add a class for bitronix dependent bean factory post processor. It allows to:

	Post process bean factory;
	Add transaction manager dependencies;
	Get bean names  for type;
	Get order;
	Get set order

276.2. Rename type BitronixXAConnectionFactoryWrapper with BitronixXAConnectionFactoryWrapper

276.3. Rename type BitronixXAConnectionFactoryWrapperTests with BitronixXAConnectionFactoryWrapperTests

276.4. Rename type BitronixXADataSourceWrapper with BitronixXADataSourceWrapper

276.5. Rename type BitronixXADataSourceWrapperTests with BitronixXADataSourceWrapperTests

276.6. Add a class for pooling connection factory bean tests. It allows to:

	Handle init;
	Handle sensible defaults;
	Handle sets unique name if null;
	Check if pooling connection factory bean tests does not set unique name if not null;
	Set connection factory

276.7. Rename type PoolingDataSourceBeanTests with PoolingDataSourceBeanTests

277. Changes to package org.springframework.boot.launcher.it.props:  

277.1. Rename type EmbeddedJarStarter with EmbeddedJarStarter

277.2. Add a class for spring configuration. It allows to:

	Handle after properties set;
	Run spring configuration

278. Changes to package org.springframework.boot.launchscript:  

278.1. Rename type LaunchScriptTestApplication with LaunchScriptTestApplication

278.2. Rename type LaunchVerificationController with LaunchVerificationController

279. Changes to package org.springframework.boot.liquibase:  

279.1. Add a class for spring package scan class resolver. It allows to:

	Instantiate spring package scan class resolver  with logger;
	Find all classes;
	Scan class loader;
	Load class;
	Handle failure

279.2. Rename type SpringPackageScanClassResolverTests with SpringPackageScanClassResolverTests

280. Changes to package org.springframework.boot.load.it.jar:  

280.1. Rename type EmbeddedJarStarter with EmbeddedJarStarter

280.2. Rename type ExampleController with ExampleController

280.3. Rename type SpringConfiguration with SpringConfiguration

281. Changes to package org.springframework.boot.load.it.props:  

281.1. Rename type EmbeddedJarStarter with EmbeddedJarStarter

281.2. Add a class for spring configuration. It allows to:

	Handle after properties set;
	Run spring configuration

282. Changes to package org.springframework.boot.load.it.war:  

282.1. Rename type ExampleController with ExampleController

282.2. Rename type SpringConfiguration with SpringConfiguration

282.3. Rename type SpringInitializer with SpringInitializer

283. Changes to package org.springframework.boot.load.it.war.embedded:  

283.1. Rename type EmbeddedWarStarter with EmbeddedWarStarter

283.2. Rename type WebApplicationInitializersConfiguration with WebApplicationInitializersConfiguration

284. Changes to package org.springframework.boot.loader:  

284.1. Add a class for abstract executable archive launcher tests. It allows to:

	Create jar archive;
	Explode archive file;
	Get urls

284.2. Add a class for executable archive launcher. It allows to:

	Instantiate executable archive launcher;
	Instantiate executable archive launcher  with archive;
	Get archive;
	Get main class;
	Get class path archives;
	Check if executable archive launcher is nested archive;
	Post process class path archives

284.3. Rename type JarLauncher with JarLauncher

284.4. Rename type JarLauncherTests with JarLauncherTests

284.5. Rename type LaunchedURLClassLoaderTests with LaunchedURLClassLoaderTests

284.6. Add a class for launcher. It allows to:

	Handle launch;
	Create class loader;
	Create main method runner;
	Get main class;
	Get class path archives;
	Create archive

284.7. Rename type MainMethodRunner with MainMethodRunner

284.8. Add a class for test jar creator. It allows to:

	Create test jar;
	Write nested entry;
	Write nested multi release entry;
	Get nested jar data;
	Write manifest;
	Write dir entry;
	Write entry

284.9. Rename type WarLauncher with WarLauncher

284.10. Rename type WarLauncherTests with WarLauncherTests

285. Changes to package org.springframework.boot.loader.archive:  

285.1. Add a class for exploded archive tests. It allows to:

	Handle setup;
	Create archive;
	Handle copy;
	Get manifest;
	Get entries;
	Get url;
	Get url  with space in path;
	Get nested archive;
	Handle nested dir archive;
	Get non recursive entries  for root;
	Get non recursive manifest;
	Get non recursive manifest  even if non recursive;
	Get resource  as stream;
	Get resource  as stream non recursive;
	Get entries map

285.2. Add a class for jar file archive tests. It allows to:

	Handle setup;
	Get manifest;
	Get entries;
	Get url;
	Get nested archive;
	Get nested unpacked archive;
	Handle unpacked locations are unique per archive;
	Handle unpacked locations from same archive share same parent;
	Zip 64 archives are handled  gracefully;
	Handle nested zip 64 archives are handled gracefully;
	Write zip 64 jar;
	Get entries map

286. Changes to package org.springframework.boot.loader.data:  

286.1. Rename type RandomAccessData with RandomAccessData

286.2. Add a class for random access data file tests. It allows to:

	Handle setup;
	Handle cleanup;
	File random access data file tests not null;
	Exists random access data file tests;
	Read random access data file tests with offset and length should read;
	Read when offset is  beyond EOF should throw exception;
	Read when offset is  beyond end of subsection should throw exception;
	Read when offset plus length greater  than EOF should throw exception;
	Read when offset plus length greater  than end of subsection should throw exception;
	Handle input stream read;
	Handle input stream read null bytes;
	Handle input stream read null bytes with offset;
	Handle input stream read bytes;
	Handle input stream read offset bytes;
	Handle input stream read more bytes than available;
	Handle input stream read past end;
	Handle input stream read zero length;
	Handle input stream skip;
	Handle input stream skip more than available;
	Handle input stream skip past end;
	Handle subsection negative offset;
	Handle subsection negative length;
	Handle subsection zero length;
	Handle subsection too big;
	Handle subsection too big with offset;
	Handle subsection;
	Handle input stream read past subsection;
	Handle input stream read bytes past subsection;
	Handle input stream skip past subsection;
	Handle input stream skip negative;
	Get file;
	Handle concurrent reads

287. Changes to package org.springframework.boot.loader.jar:  

287.1. Rename type AsciiBytes with AsciiBytes

287.2. Rename type AsciiBytesTests with AsciiBytesTests

287.3. Add a class for bytes. It allows to:

	Instantiate bytes;
	Handle little endian value

287.4. Rename type CentralDirectoryEndRecord with CentralDirectoryEndRecord

287.5. Rename type CentralDirectoryFileHeader with CentralDirectoryFileHeader

287.6. Add a class for central directory parser. It allows to:

	Add visitor;
	Parse random access data;
	Parse entries;
	Get archive data;
	Visit start;
	Visit file header;
	Visit end

287.7. Rename type CentralDirectoryVisitor with CentralDirectoryVisitor

287.8. Rename type FileHeader with FileHeader

287.9. Add a class for handler. It allows to:

	Instantiate handler;
	Instantiate handler  with jar file;
	Handle open connection;
	Check if handler is url in jar file;
	Handle open fallback connection;
	Log cause exception;
	Get fallback handler;
	Parse URL;
	Get file  from spec;
	Get file  from context;
	Trim handler to jar root;
	Set file;
	Normalize handler;
	Replace parent dir;
	Replace current dir;
	Hash code;
	Handle same file;
	Get canonicalize;
	Get root jar file  from url;
	Get root jar file;
	Add source file to root file cache;
	Get set use fast connection exceptions

287.10. Add a class for handler tests. It allows to:

	Parse url  with jar root context and absolute spec that uses context;
	Parse url  with directory entry context and absolute spec that uses context;
	Parse url  with jar root context and relative spec that uses context;
	Parse url  with directory entry context and relative spec that uses context;
	Parse url  with file entry context and relative spec that uses context;
	Parse url  with spec that ignores context;
	Handle same file returns false for urls with different protocols;
	Handle same file returns false for different file in same jar;
	Handle same file returns false for same file in different jars;
	Handle same file returns true for same file in same jar;
	Handle same file returns true for urls that reference same file via nested archive and from root of jar;
	Hash codes are equal  for urls that reference same file via nested archive and from root of jar;
	Handle url with spec referencing parent directory;
	Handle url with spec referencing ancestor directory outside jar stops at jar root;
	Handle url with spec referencing current directory;
	Handle url with ref;
	Handle url with query;
	Handle fallback to jdks jar url stream handler;
	Assert standard and custom handler urls are equal;
	Create url

287.11. Rename type JarEntry with JarEntry

287.12. Add an interface declaration  for jar entry filter. It allows to:

	Apply name ascii bytes

287.13. Add a class for jar file. It allows to:

	Instantiate jar file  with file;
	Instantiate jar file  with random access data file;
	Instantiate jar file  with root file, random access data, jar file type and jar file type;
	Instantiate jar file  with root file, random access data, jar entry filter, jar file type, manifest supplier and manifest supplier;
	Handle central directory visitor;
	Visit start;
	Visit file header;
	Visit end;
	Get root jar file;
	Get data;
	Get manifest;
	Get entries;
	Check if  has more elements;
	Handle next element;
	Get jar entry;
	Check if jar file contains entry;
	Get entry;
	Get input stream;
	Get nested jar file;
	Create jar file  from entry;
	Create jar file  from directory entry;
	Create jar file  from file entry;
	Get size;
	Close jar file;
	Get url string;
	Get url;
	Convert jar file to string;
	Get name;
	Check if jar file is signed;
	Handle setup entry certificates;
	Set certificates;
	Handle clear cache;
	Get path  from root;
	Get type;
	Register url protocol handler;
	Reset cached url handlers

287.14. Rename type JarFileTests with JarFileTests

287.15. Add a class for jar URL connection tests. It allows to:

	Handle setup;
	Convert connection;
	Get content length returns length  of underlying entry;
	Get content length long returns length  of underlying entry;
	Get last modified returns last modified time  of jar entry;
	Handle jar entry basic name;
	Handle jar entry name with single byte encoded characters;
	Handle jar entry name with double byte encoded characters;
	Handle jar entry name with mixture of encoded and unencoded double byte characters;
	Get absolute path;
	Get relative path

287.16. Rename type ZipInflaterInputStream with ZipInflaterInputStream

288. Changes to package org.springframework.boot.loader.tools:  

288.1. Add an interface declaration  for custom loader layout. It allows to:

	Write loaded classes

288.2. Add a class for default launch script. It allows to:

	Instantiate default launch script  with file, properties map and properties map;
	Load content;
	Handle copy;
	Expand placeholders;
	Parse file property value;
	Convert default launch script to byte array

288.3. Add a class for default launch script tests. It allows to:

	Handle loads default script;
	Log filename can be replaced;
	Handle pid filename can be replaced;
	Init info provides can be replaced;
	Init info required start can be replaced;
	Init info required stop can be replaced;
	Handle init info default start can be replaced;
	Handle init info default stop can be replaced;
	Init info short description can be replaced;
	Init info description can be replaced;
	Init info chkconfig can be replaced;
	Handle mode can be replaced;
	Use start stop daemon can be replaced;
	Log folder can be replaced;
	Handle pid folder can be replaced;
	Conf folder can be replaced;
	Stop wait time can be replaced;
	Handle inlined conf script file load;
	Handle default for use start stop daemon is true;
	Handle default for mode is auto;
	Handle default for stop wait time is 60;
	Handle load from file;
	Expand variables;
	Expand variables multi line;
	Expand variables  with defaults;
	Expand variables can default  to blank;
	Expand variables  with defaults override;
	Expand variables missing are unchanged;
	Assert that placeholder can be replaced;
	Create properties

288.4. Rename type DefaultLayoutFactory with DefaultLayoutFactory

288.5. Add a class for file utils. It allows to:

	Remove duplicates  from output directory;
	Get sha 1 hash;
	Convert bytes

288.6. Add a class for file utils tests. It allows to:

	Handle init;
	Handle simple duplicate file;
	Handle nested duplicate file;
	Handle nested non duplicate file;
	Non duplicate file;
	Hash file utils tests

288.7. Rename type JavaExecutable with JavaExecutable

288.8. Add an interface declaration  for launch script. It allows to:

	Convert launch script to byte array

288.9. Rename type Layout with Layout

288.10. Add an interface declaration  for layout factory. It allows to:

	Get layout

288.11. Add a class for layouts tests. It allows to:

	Handle jar file;
	Handle war file;
	Handle unknown file;
	Handle jar layout;
	Handle war layout

288.12. Add an interface declaration  for libraries. It allows to:

	Do library callback with libraries

288.13. Rename type Library with Library

288.14. Add an interface declaration  for library callback. It allows to:

	Handle library

288.15. Rename type LibraryScope with LibraryScope

288.16. Rename type LoaderClassesWriter with LoaderClassesWriter

288.17. Rename type RepackagingLayout with RepackagingLayout

288.18. Add a class for run process. It allows to:

	Instantiate run process;
	Instantiate run process  with working directory file;
	Run run process;
	Run args collection;
	Get running process;
	Handle sig int;
	Kill run process;
	Check if run process has just ended

288.19. Add a class for signal utils. It allows to:

	Instantiate signal utils;
	Attach signal handler

288.20. Add a class for test jar file. It allows to:

	Instantiate test jar file  with temporary folder;
	Add class;
	Add file;
	Add manifest;
	Get file path;
	Copy input stream to file;
	Handle copy;
	Get jar file;
	Get jar source;
	Get file;

289. Changes to package org.springframework.boot.loader.tools.sample:  

289.1. Rename type AnnotatedClassWithMainMethod with AnnotatedClassWithMainMethod

289.2. Rename type ClassWithMainMethod with ClassWithMainMethod

289.3. Rename type ClassWithoutMainMethod with ClassWithoutMainMethod

290. Changes to package org.springframework.boot.loader.util:  

290.1. Add a class for system property utils. It allows to:

	Resolve placeholders;
	Parse string value;
	Resolve placeholder;
	Get property;
	Find placeholder end index;
	Substring match

290.2. Rename type SystemPropertyUtilsTests with SystemPropertyUtilsTests

291. Changes to package org.springframework.boot.logging:  

291.1. Rename type AbstractLoggingSystemTests with AbstractLoggingSystemTests

291.2. Rename type DeferredLogTests with DeferredLogTests

291.3. Add a class for log file. It allows to:

	Instantiate log file;
	Apply log file to system properties;
	Apply  to properties;
	Put properties;
	Convert log file to string;
	Get property resolver;
	Get log file property

291.4. Add a class for log file tests. It allows to:

	No properties;
	Logging file;
	Logging file  with deprecated properties;
	Handle test logging file;
	Logging path;
	Logging path  with deprecated properties;
	Handle test logging path;
	Logging file and path;
	Logging file and path  with deprecated properties;
	Handle test logging file and path;
	Get property resolver

291.5. Rename type LoggerConfiguration with LoggerConfiguration

291.6. Rename type LoggerConfigurationComparator with LoggerConfigurationComparator

291.7. Rename type LoggerConfigurationComparatorTests with LoggerConfigurationComparatorTests

291.8. Rename type LoggingInitializationContext with LoggingInitializationContext

291.9. Add a class for logging system properties. It allows to:

	Instantiate logging system properties  with environment;
	Apply logging system properties;
	Apply log file;
	Get property resolver;
	Set system property;

291.10. Rename type Slf4JLoggingSystem with Slf4JLoggingSystem

292. Changes to package org.springframework.boot.logging.java:  

292.1. Add a class for java logging system tests. It allows to:

	Handle init;
	Handle clear locale;
	Reset logger;
	No file;
	Process java logging system tests java logging system tests with file;
	Handle test custom formatter;
	Handle test system property initializes format;
	Handle test non default config location;
	Handle test nonexistent config location;
	Get supported levels;
	Set level;
	Set level  to null;
	Get logging configurations;
	Get logging configuration

292.2. Rename type SimpleFormatter with SimpleFormatter

292.3. Rename type TestFormatter with TestFormatter

293. Changes to package org.springframework.boot.logging.log4j2:  

293.1. Add a class for color converter. It allows to:

	Instantiate color converter  with formatters list, styling ansi element and styling ansi element;
	Handle new instance;
	Check if color converter handles throwable;
	Handle format;
	Append ansi string

293.2. Add a class for extended whitespace throwable pattern converter. It allows to:

	Instantiate extended whitespace throwable pattern converter  with configuration;
	Handle format;
	Handle new instance

293.3. Add a class for extended whitespace throwable pattern converter tests. It allows to:

	No extended whitespace throwable pattern converter tests;
	Process extended whitespace throwable pattern converter tests extended whitespace throwable pattern converter tests with stack trace

293.4. Add a class for whitespace throwable pattern converter. It allows to:

	Instantiate whitespace throwable pattern converter  with configuration;
	Handle format;
	Handle new instance

293.5. Add a class for whitespace throwable pattern converter tests. It allows to:

	No whitespace throwable pattern converter tests;
	Process whitespace throwable pattern converter tests whitespace throwable pattern converter tests with stack trace

294. Changes to package org.springframework.boot.logging.logback:  

294.1. Add a class for color converter. It allows to:

	Transform I logging event;
	Convert color converter to ansi string

294.2. Rename type ColorConverterTests with ColorConverterTests

294.3. Add a class for default logback configuration. It allows to:

	Instantiate default logback configuration  with logging initialization context, log file and log file;
	Get patterns resolver;
	Apply logback configurator;
	Handle base;
	Console appender;
	File appender;
	Set rolling policy;
	Set max file size;
	Get data size

294.4. Rename type ExtendedWhitespaceThrowableProxyConverter with ExtendedWhitespaceThrowableProxyConverter

294.5. Rename type ExtendedWhitespaceThrowableProxyConverterTests with ExtendedWhitespaceThrowableProxyConverterTests

294.6. Rename type LogbackConfigurationTests with LogbackConfigurationTests

294.7. Add a class for logback configurator. It allows to:

	Instantiate logback configurator  with logger context;
	Get context;
	Get configuration lock;
	Handle conversion rule;
	Handle appender;
	Handle logger;
	Handle root;
	Start life cycle

294.8. Add a class for logback logging system tests. It allows to:

	Handle setup;
	Handle clear;
	No file;
	Process logback logging system tests logback logging system tests with file;
	Handle default config configures A console appender;
	Handle test non default config location;
	Handle test logback specific system property;
	Handle test nonexistent config location;
	Get supported levels;
	Set level;
	Set level  to null;
	Get logging configurations;
	Get logging configuration;
	Get logging configuration  for ALL;
	Handle system level trace should return native level trace not all;
	Logging logback logging system tests that uses jul is captured;
	Logging level is propagated  to jul;
	Bridge handler lifecycle;
	Handle standard config locations;
	Handle spring config locations;
	Bridge handler installed;
	Handle test console pattern property;
	Handle test level pattern property;
	Handle test file pattern property;
	Handle test clean history on start property;
	Handle test clean history on start property with xml configuration;
	Handle test max file size property with logback file size;
	Handle test max file size property with data size;
	Handle test max file size property with bytes value;
	Handle test max file size property;
	Handle test max file size property with xml configuration;
	Handle test max history property;
	Handle test max history property with xml configuration;
	Handle test total size cap property with logback file size;
	Handle test total size cap property with data size;
	Handle test total size cap property with bytes value;
	Handle test total size cap property;
	Handle test total size cap property with xml configuration;
	Handle exceptions include class packaging;
	Handle custom exception conversion word;
	Initialize should set system property;
	Handle initialization is only performed once until cleaned up;
	Handle test dateformat pattern property;
	Get root logger;
	Get console appender;
	Get file appender;
	Get rolling policy;
	Get line  with text;

294.9. Rename type SpringBootJoranConfigurator with SpringBootJoranConfigurator

294.10. Add a class for spring boot joran configurator tests. It allows to:

	Handle setup;
	Reset spring boot joran configurator tests;
	Profile active;
	Handle multiple names first profile active;
	Handle multiple names second profile active;
	Profile spring boot joran configurator tests not active;
	Profile expression match  first;
	Profile expression match second;
	Profile expression no match;
	Profile nested active active;
	Profile nested active  not active;
	Profile nested  not active active;
	Profile nested  not active not active;
	Handle spring property;
	Get relaxed spring property;
	Handle spring property no value;
	Get relaxed spring property no value;
	Handle spring property with default value;
	Get relaxed spring property with default value;
	Do test nested profile;
	Initialize spring boot joran configurator tests

294.11. Add a class for spring profile action. It allows to:

	Instantiate spring profile action  with environment;
	Begin ic interpretation context;
	Check if spring profile action accepts profiles;
	End ic interpretation context;
	Verify ic interpretation context;
	Add events  to player;
	Process spring profile action spring profile action in play

294.12. Add a class for spring property action. It allows to:

	Instantiate spring property action  with environment;
	Begin interpretation context;
	Get value;
	End interpretation context

294.13. Rename type WhitespaceThrowableProxyConverter with WhitespaceThrowableProxyConverter

294.14. Rename type WhitespaceThrowableProxyConverterTests with WhitespaceThrowableProxyConverterTests

295. Changes to package org.springframework.boot.maven:  

295.1. Add a class for abstract dependency filter mojo. It allows to:

	Excludes excludes list;
	Includes includes list;
	Set exclude group ids;
	Get filter dependencies;
	Get filters;
	Handle clean filter config

295.2. Add a class for artifacts libraries. It allows to:

	Instantiate artifacts libraries  with artifacts set, unpacks collection, log and log;
	Do library callback with libraries;
	Get duplicates;
	Check if artifacts libraries is unpack required;
	Get file name

295.3. Add a class for artifacts libraries tests. It allows to:

	Handle setup;
	Handle callback for jars;
	Handle callback with unpack;
	Check if artifacts libraries tests renames duplicates

295.4. Rename type BuildInfoMojo with BuildInfoMojo

295.5. Rename type DependencyFilter with DependencyFilter

295.6. Rename type Exclude with Exclude

295.7. Rename type ExcludeFilter with ExcludeFilter

295.8. Add a class for exclude filter tests. It allows to:

	Exclude simple;
	Exclude group id no match;
	Exclude artifact id no match;
	Exclude classifier;
	Exclude classifier no target classifier;
	Exclude classifier no match;
	Exclude multi;
	Exclude exclude filter tests;
	Create artifact;

295.9. Rename type FilterableDependency with FilterableDependency

295.10. Rename type Include with Include

295.11. Rename type IncludeFilter with IncludeFilter

295.12. Add a class for include filter tests. It allows to:

	Include simple;
	Include group id no match;
	Include artifact id no match;
	Include classifier;
	Include classifier no target classifier;
	Include classifier no match;
	Include multi;
	Include include filter tests;
	Create artifact;

295.13. Rename type MatchingGroupIdFilter with MatchingGroupIdFilter

295.14. Rename type PropertiesMergingResourceTransformer with PropertiesMergingResourceTransformer

295.15. Rename type PropertiesMergingResourceTransformerTests with PropertiesMergingResourceTransformerTests

295.16. Add a class for run arguments. It allows to:

	Instantiate run arguments;
	Get args;
	Process run arguments run arguments as array;
	Parse args

295.17. Add a class for run arguments tests. It allows to:

	Parse null;
	Parse null array;
	Parse array containing null value;
	Parse array containing empty value;
	Parse empty;
	Parse debug flags;
	Parse run arguments tests with extra spaces;
	Parse run arguments tests with new lines and tabs;
	Quote handled  properly;
	Parse args

295.18. Add a class for spring application admin client. It allows to:

	Instantiate spring application admin client  with M bean server connection;
	Check if spring application admin client is ready;
	Stop spring application admin client;
	Convert spring application admin client to object name;
	Connect spring application admin client

295.19. Add a class for stop mojo. It allows to:

	Execute stop mojo;
	Check if stop mojo is forked;
	Stop forked process;
	Stop stop mojo;
	Stop M bean server connection

296. Changes to package org.springframework.boot.maven.sample:  

296.1. Rename type ClassWithMainMethod with ClassWithMainMethod

296.2. Rename type ClassWithoutMainMethod with ClassWithoutMainMethod

297. Changes to package org.springframework.boot.origin:  

297.1. Add a class for mock origin. It allows to:

	Instantiate mock origin;
	Check if mock origin equals;
	Hash code;
	Convert mock origin to string;
	O mock origin

297.2. Add an interface declaration  for origin. It allows to:

	Process origin origin from

297.3. Add an interface declaration  for origin lookup. It allows to:

	Get origin;

297.4. Add a class for origin lookup tests. It allows to:

	Get origin when source is null should return null;
	Get origin when source is  not lookup should return lookup origin;
	Get origin when source is lookup should return lookup origin;
	Get origin when source lookup throws and error should return null

297.5. Add an interface declaration  for origin provider. It allows to:

	Get origin

297.6. Add a class for origin tracked value tests. It allows to:

	Get value should return value;
	Get origin should return origin;
	Convert origin tracked value tests to string should return value to string;
	Hash code and equals should ignore origin;
	Process origin tracked value tests origin tracked value tests of when value is null should return null;
	Process origin tracked value tests origin tracked value tests of when value is char sequence should return char sequence

297.7. Add a class for property source origin. It allows to:

	Instantiate property source origin  with property source;
	Get property source;
	Get property name;
	Convert property source origin to string;

297.8. Add a class for property source origin tests. It allows to:

	Create when property source is null should throw exception;
	Create when property name is null should throw exception;
	Create when property name is empty should throw exception;
	Get property source should return property source;
	Get property name should return property name;
	Convert property source origin tests to string should show details;
	Get when property source supports origin lookup should return origin;
	Get when property source supports origin lookup but no origin should wrap;
	Get when property source is  not origin aware should wrap

297.9. Add a class for system environment origin. It allows to:

	Instantiate system environment origin;
	Get property;
	Check if system environment origin equals;
	Hash code;
	Convert system environment origin to string

297.10. Add a class for system environment origin tests. It allows to:

	Create when property is null should throw exception;
	Create when property name is empty should throw exception;
	Get property should return property;
	Convert system environment origin tests to string should return string with details

297.11. Add a class for text resource origin tests. It allows to:

	Create text resource origin tests with null resource should set null resource;
	Create text resource origin tests with null location should set null location;
	Get resource should return resource;
	Get location should return location;
	Get location line should return line;
	Get location column should return column;
	Convert location;
	Convert text resource origin tests to string should return nice string;
	Convert text resource origin tests to string when resource is null should return nice string;
	Convert text resource origin tests to string when location is null should return nice string;
	Handle location equals and hash code should use line and column;
	Check if text resource origin tests equals and hash code should resource and location

298. Changes to package org.springframework.boot.orm.jpa.hibernate:  

298.1. Rename type SpringImplicitNamingStrategy with SpringImplicitNamingStrategy

298.2. Rename type SpringJtaPlatform with SpringJtaPlatform

298.3. Add a class for spring physical naming strategy. It allows to:

	Convert spring physical naming strategy to physical catalog name;
	Convert spring physical naming strategy to physical schema name;
	Convert spring physical naming strategy to physical table name;
	Convert spring physical naming strategy to physical sequence name;
	Convert spring physical naming strategy to physical column name;
	Apply name identifier;
	Get identifier;
	Check if spring physical naming strategy is case insensitive;
	Check if spring physical naming strategy is underscore required

298.4. Rename type TelephoneNumber with TelephoneNumber

299. Changes to package org.springframework.boot.sampleconfig:  

299.1. Rename type MyComponent with MyComponent

300. Changes to package org.springframework.boot.system:  

300.1. Add a class for java version tests. It allows to:

	Get java version should be available;
	Compare java version tests to when comparing smaller to greater should be less than zero;
	Compare java version tests to when comparing greater to smaller should be greater than zero;
	Compare java version tests to when comparing same should be zero;
	Check if java version tests is equal or newer than when comparing same should be true;
	Check if java version tests is equal or newer than when smaller to greater should be false;
	Check if java version tests is equal or newer than when greater to smaller should be true;
	Check if java version tests is older than than when comparing same should be false;
	Check if java version tests is older than when smaller to greater should be true;
	Check if java version tests is older than when greater to smaller should be false

300.2. Rename type SystemProperties with SystemProperties

301. Changes to package org.springframework.boot.test.autoconfigure:  

301.1. Rename type AutoConfigurationImportedCondition with AutoConfigurationImportedCondition

301.2. Rename type ExampleSpringBootApplication with ExampleSpringBootApplication

301.3. Rename type ExampleTestConfig with ExampleTestConfig

302. Changes to package org.springframework.boot.test.autoconfigure.data.ldap:  

302.1. Add a class for data ldap test integration tests. It allows to:

	Handle test repository;
	Get did not inject example service

302.2. Add a class for data ldap test with include filter integration tests. It allows to:

	Handle test service

302.3. Add a class for data ldap type exclude filter. It allows to:

	Instantiate data ldap type exclude filter  with test class;
	Check if data ldap type exclude filter has annotation;
	Get filters;
	Check if data ldap type exclude filter is use default filters;
	Get default includes;
	Get component includes

302.4. Add a class for example entry. It allows to:

	Get example entry;
	Set dn

302.5. Add a class for example ldap application

302.6. Add an interface declaration  for example repository

302.7. Add a class for example service. It allows to:

	Instantiate example service  with ldap template;
	Check if example service has entry

303. Changes to package org.springframework.boot.test.autoconfigure.data.mongo:  

303.1. Rename type DataMongoTestIntegrationTests with DataMongoTestIntegrationTests

303.2. Add a class for data mongo test reactive integration tests. It allows to:

	Handle test repository

303.3. Rename type DataMongoTestWithIncludeFilterIntegrationTests with DataMongoTestWithIncludeFilterIntegrationTests

303.4. Rename type DataMongoTypeExcludeFilter with DataMongoTypeExcludeFilter

303.5. Rename type ExampleDocument with ExampleDocument

303.6. Rename type ExampleMongoApplication with ExampleMongoApplication

303.7. Add an interface declaration  for example reactive repository

303.8. Rename type ExampleRepository with ExampleRepository

303.9. Rename type ExampleService with ExampleService

304. Changes to package org.springframework.boot.test.autoconfigure.data.neo4j:  

304.1. Add a class for data neo 4 j type exclude filter. It allows to:

	Instantiate data neo 4 j type exclude filter  with test class;
	Check if data neo 4 j type exclude filter has annotation;
	Get filters;
	Check if data neo 4 j type exclude filter is use default filters;
	Get default includes;
	Get component includes

304.2. Add a class for example graph. It allows to:

	Get id;
	Set id;
	Get description;
	Set description

304.3. Add a class for example neo 4 j application

304.4. Add an interface declaration  for example repository

304.5. Add a class for example service. It allows to:

	Instantiate example service  with session;
	Check if example service has node

305. Changes to package org.springframework.boot.test.autoconfigure.data.redis:  

305.1. Add a class for data redis type exclude filter. It allows to:

	Instantiate data redis type exclude filter  with test class;
	Check if data redis type exclude filter has annotation;
	Get filters;
	Check if data redis type exclude filter is use default filters;
	Get default includes;
	Get component includes

305.2. Add a class for example redis application

305.3. Add an interface declaration  for example repository

305.4. Add a class for example service. It allows to:

	Instantiate example service  with redis operations;
	Check if example service has record

305.5. Add a class for person hash. It allows to:

	Get id;
	Set id;
	Get description;
	Set description

306. Changes to package org.springframework.boot.test.autoconfigure.filter:  

306.1. Add a class for annotation customizable type exclude filter. It allows to:

	Set bean class loader;
	Match metadata reader;
	Include metadata reader;
	Handle default include;
	Exclude metadata reader;
	Check if annotation customizable type exclude filter is type or annotated;
	Check if annotation customizable type exclude filter has annotation;
	Get filters;
	Check if annotation customizable type exclude filter is use default filters;
	Get default includes;
	Get component includes;
	Check if annotation customizable type exclude filter equals;
	Hash code

306.2. Add a class for filter annotations. It allows to:

	Instantiate filter annotations  with class loader, filters and filters;
	Create type filters;
	Create type filter;
	Get iterator;
	Any matches

306.3. Add a class for type exclude filters context customizer. It allows to:

	Instantiate type exclude filters context customizer  with test class, filter classes set and filter classes set;
	Handle instantiate type exclude filters;
	Handle instantiate type exclude filter;
	Check if type exclude filters context customizer equals;
	Hash code;
	Customize context;
	Create delegating type exclude filter;
	Match metadata reader;
	Get type exclude filter constructor

306.4. Add an object creator class for type exclude filters context customizer factory. It allows to:

	Create context customizer

307. Changes to package org.springframework.boot.test.autoconfigure.jdbc:  

307.1. Rename type ExampleEntity with ExampleEntity

307.2. Rename type ExampleJdbcApplication with ExampleJdbcApplication

307.3. Rename type JdbcTestIntegrationTests with JdbcTestIntegrationTests

307.4. Rename type JdbcTestWithAutoConfigureTestDatabaseReplaceAutoConfiguredWithoutOverrideIntegrationTests with JdbcTestWithAutoConfigureTestDatabaseReplaceAutoConfiguredWithoutOverrideIntegrationTests

307.5. Rename type JdbcTestWithAutoConfigureTestDatabaseReplaceNoneIntegrationTests with JdbcTestWithAutoConfigureTestDatabaseReplaceNoneIntegrationTests

307.6. Rename type JdbcTestWithAutoConfigureTestDatabaseReplacePropertyNoneIntegrationTests with JdbcTestWithAutoConfigureTestDatabaseReplacePropertyNoneIntegrationTests

307.7. Rename type JdbcTestWithIncludeFilterIntegrationTests with JdbcTestWithIncludeFilterIntegrationTests

307.8. Rename type JdbcTypeExcludeFilter with JdbcTypeExcludeFilter

308. Changes to package org.springframework.boot.test.autoconfigure.jooq:  

308.1. Add an object creator class for example jooq application. It allows to:

	Get data source

308.2. Add a class for jooq test integration tests. It allows to:

	Handle test DSL context;
	Use defined data source;
	Get did not inject example component;
	Handle flyway auto configuration was imported;
	Handle liquibase auto configuration was imported

308.3. Add a class for jooq test with auto configure test database integration tests. It allows to:

	Check if jooq test with auto configure test database integration tests replaces auto configured data source

308.4. Add a class for jooq type exclude filter. It allows to:

	Instantiate jooq type exclude filter  with test class;
	Check if jooq type exclude filter has annotation;
	Get filters;
	Check if jooq type exclude filter is use default filters;
	Get default includes;
	Get component includes

309. Changes to package org.springframework.boot.test.autoconfigure.json:  

309.1. Add a class for json exclude filter. It allows to:

	Instantiate json exclude filter  with test class;
	Check if json exclude filter has annotation;
	Get filters;
	Check if json exclude filter is use default filters;
	Get default includes;
	Get component includes

309.2. Add a class for json test integration tests. It allows to:

	Handle basic json;
	Handle jackson basic;
	Handle jackson custom;
	Handle gson;
	Handle jsonb;
	Handle custom view

309.3. Add a class for json test with auto configure json testers tests. It allows to:

	Handle basic json;
	Handle jackson;
	Handle gson;
	Handle jsonb

309.4. Add a class for spring boot test with auto configure json testers tests. It allows to:

	Handle context loads

310. Changes to package org.springframework.boot.test.autoconfigure.json.app:  

310.1. Rename type ExampleBasicObject with ExampleBasicObject

310.2. Rename type ExampleCustomObject with ExampleCustomObject

310.3. Rename type ExampleJsonApplication with ExampleJsonApplication

311. Changes to package org.springframework.boot.test.autoconfigure.orm.jpa:  

311.1. Add a class for data jpa test integration tests. It allows to:

	Handle test entity manager;
	Handle test entity manager persist and get id;
	Handle test repository;
	Check if data jpa test integration tests replaces defined data source with embedded default;
	Get did not inject example component;
	Handle flyway auto configuration was imported;
	Handle liquibase auto configuration was imported

311.2. Rename type DataJpaTypeExcludeFilter with DataJpaTypeExcludeFilter

311.3. Rename type ExampleComponent with ExampleComponent

311.4. Rename type ExampleDataJpaApplication with ExampleDataJpaApplication

311.5. Rename type ExampleEntity with ExampleEntity

311.6. Rename type ExampleRepository with ExampleRepository

311.7. Rename type TestEntityManager with TestEntityManager

311.8. Rename type TestEntityManagerAutoConfiguration with TestEntityManagerAutoConfiguration

312. Changes to package org.springframework.boot.test.autoconfigure.properties:  

312.1. Add a class for annotations property source. It allows to:

	Instantiate annotations property source  with source class;
	Get properties;
	Collect properties;
	Get merged annotations;
	Find merged annotation;
	Get mapping type;
	Get name;
	Convert annotations property source to kebab case;
	Dot append;
	Put properties;
	Check if annotations property source contains property;
	Get property;
	Get property names;
	Check if annotations property source is empty;
	Check if annotations property source equals;
	Hash code

312.2. Rename type PropertyMappingContextCustomizerFactory with PropertyMappingContextCustomizerFactory

312.3. Rename type PropertyMappingTests with PropertyMappingTests

313. Changes to package org.springframework.boot.test.autoconfigure.restdocs:  

313.1. Add a class for mock mvc rest docs auto configuration integration tests. It allows to:

	Delete snippets;
	Handle default snippets are written

313.2. Add a class for rest assured rest docs auto configuration integration tests. It allows to:

	Delete snippets;
	Handle default snippets are written

313.3. Rename type RestDocsMockMvcBuilderCustomizer with RestDocsMockMvcBuilderCustomizer

313.4. Add an interface declaration  for rest docs mock mvc configuration customizer. It allows to:

	Customize mock mvc rest documentation configurer

313.5. Add a class for rest docs rest assured builder customizer. It allows to:

	Instantiate rest docs rest assured builder customizer  with rest docs properties, delegate request specification and delegate request specification;
	Handle after properties set

313.6. Add an interface declaration  for rest docs rest assured configuration customizer. It allows to:

	Customize rest assured rest documentation configurer

313.7. Add a class for rest docs test application

313.8. Add a class for rest docs test controller. It allows to:

	Get index

313.9. Add a class for rest documentation context provider registrar. It allows to:

	Register bean definitions

314. Changes to package org.springframework.boot.test.autoconfigure.web.client:  

314.1. Rename type AnotherExampleRestClient with AnotherExampleRestClient

314.2. Rename type AutoConfigureMockRestServiceServerEnabledFalseIntegrationTests with AutoConfigureMockRestServiceServerEnabledFalseIntegrationTests

314.3. Rename type ExampleRestClient with ExampleRestClient

314.4. Rename type ExampleWebClientApplication with ExampleWebClientApplication

314.5. Rename type MockRestServiceServerResetTestExecutionListener with MockRestServiceServerResetTestExecutionListener

314.6. Add a class for rest client exclude filter. It allows to:

	Instantiate rest client exclude filter  with test class;
	Check if rest client exclude filter has annotation;
	Get filters;
	Check if rest client exclude filter is use default filters;
	Get default includes;
	Get component includes

314.7. Rename type RestClientRestIntegrationTests with RestClientRestIntegrationTests

314.8. Rename type RestClientTestNoComponentIntegrationTests with RestClientTestNoComponentIntegrationTests

314.9. Rename type RestClientTestTwoComponentsIntegrationTests with RestClientTestTwoComponentsIntegrationTests

314.10. Rename type RestClientTestWithComponentIntegrationTests with RestClientTestWithComponentIntegrationTests

314.11. Add a class for rest client test without jackson integration tests. It allows to:

	Rest client test can be used when jackson is  not on the class path

314.12. Add a class for web client rest template auto configuration. It allows to:

	Rest template

315. Changes to package org.springframework.boot.test.autoconfigure.web.reactive:  

315.1. Add a class for web flux test context bootstrapper. It allows to:

	Get process merged context configuration;
	Get properties

315.2. Add a class for web flux type exclude filter. It allows to:

	Instantiate web flux type exclude filter  with test class;
	Check if web flux type exclude filter has annotation;
	Get filters;
	Check if web flux type exclude filter is use default filters;
	Get default includes;
	Get component includes

315.3. Add a class for web test client auto configuration. It allows to:

	Get web test client;
	Get spring boot web test client builder customizer

316. Changes to package org.springframework.boot.test.autoconfigure.web.reactive.webclient:  

316.1. Add a class for example controller 1. It allows to:

	One example controller 1;
	Get error

316.2. Add a class for example controller 2. It allows to:

	Two example controller 2;
	Two example id

316.3. Add a class for example real service

316.4. Add a class for example web flux application

316.5. Add a class for web flux test all controllers integration tests. It allows to:

	Should find controller 1;
	Convert should find controller;
	Handle web exception handling;
	Should find json controller

316.6. Add a class for web flux test auto configuration integration tests. It allows to:

	Handle message source auto configuration is imported;
	Handle validation auto configuration is imported;
	Handle mustache auto configuration is imported;
	Handle freemarker auto configuration is imported;
	Handle thymeleaf auto configuration is imported;
	Handle error web flux auto configuration is imported

316.7. Add a class for web flux test message source integration tests. It allows to:

	Handle message source has been auto configured

316.8. Add a class for web flux test one controller integration tests. It allows to:

	Should find controller;
	Should web flux test one controller integration tests not scan other controller

317. Changes to package org.springframework.boot.test.autoconfigure.web.servlet:  

317.1. Add an interface declaration  for mock mvc builder customizer. It allows to:

	Customize configurable mock mvc builder

317.2. Rename type MockMvcPrintOnlyOnFailureTestExecutionListener with MockMvcPrintOnlyOnFailureTestExecutionListener

317.3. Rename type MockMvcWebClientAutoConfiguration with MockMvcWebClientAutoConfiguration

317.4. Rename type MockMvcWebDriverAutoConfiguration with MockMvcWebDriverAutoConfiguration

317.5. Add a class for web driver scope. It allows to:

	Get object factory;
	Remove web driver scope;
	Register destruction callback;
	Resolve contextual object;
	Get conversation id;
	Reset web driver scope;
	Register  with configurable application context;
	Post process bean factory;
	Get  from application context

317.6. Rename type WebDriverTestExecutionListener with WebDriverTestExecutionListener

317.7. Rename type WebMvcTestAutoConfigurationIntegrationTests with WebMvcTestAutoConfigurationIntegrationTests

317.8. Rename type WebMvcTestContextBootstrapper with WebMvcTestContextBootstrapper

317.9. Add a class for web mvc type exclude filter. It allows to:

	Instantiate web mvc type exclude filter  with test class;
	Check if web mvc type exclude filter has annotation;
	Get filters;
	Check if web mvc type exclude filter is use default filters;
	Get default includes;
	Get component includes

318. Changes to package org.springframework.boot.test.autoconfigure.web.servlet.mockmvc:  

318.1. Add a class for example argument. It allows to:

	Instantiate example argument;
	Convert example argument to string

318.2. Add a class for example controller 1. It allows to:

	One example controller 1;
	Get error;
	Get html

318.3. Add a class for example controller 2. It allows to:

	Two example argument;
	Two example id;
	Get paged

318.4. Add a class for example controller 3. It allows to:

	Three example controller 3

318.5. Add a class for example controller advice. It allows to:

	Process example controller advice example controller advice on example error;
	No handler found handler

318.6. Add a class for example exception

318.7. Add a class for example filter. It allows to:

	Handle init;
	Do filter;
	Destroy example filter

318.8. Add a class for example mockable service. It allows to:

	Instantiate example mockable service

318.9. Add a class for example real service

318.10. Add a class for example web mvc application

318.11. Add a class for example web mvc configurer. It allows to:

	Add argument resolvers;
	Check if  supports parameter;
	Resolve argument

318.12. Add an object creator class for hateoas controller. It allows to:

	Get resource;
	Plain hateoas controller

318.13. Add a class for mock mvc spring boot test integration tests. It allows to:

	Should find controller 1;
	Convert should find controller;
	Should find controller advice;
	Should have real service

318.14. Add a class for web mvc test all controllers integration tests. It allows to:

	Should find controller 1;
	Convert should find controller;
	Should find controller advice;
	Should run validation success;
	Should run validation failure;
	Should web mvc test all controllers integration tests not filter error attributes

318.15. Add a class for web mvc test custom dispatcher servlet integration tests. It allows to:

	Handle dispatcher servlet is customized

318.16. Add a class for web mvc test hateoas integration tests. It allows to:

	Handle plain response;
	Handle hateoas response

318.17. Add a class for web mvc test message source integration tests. It allows to:

	Handle message source has been auto configured

318.18. Add a class for web mvc test one controller integration tests. It allows to:

	Should web mvc test one controller integration tests not find controller 1;
	Convert should find controller

318.19. Add a class for web mvc test print always integration tests. It allows to:

	Print web mvc test print always integration tests

318.20. Add a class for web mvc test print default integration tests. It allows to:

	Should web mvc test print default integration tests not print;
	Print web mvc test print default integration tests

318.21. Add a class for web mvc test print default override integration tests. It allows to:

	Should find controller 1

318.22. Add a class for web mvc test print override integration tests. It allows to:

	Should web mvc test print override integration tests not print

318.23. Add a class for web mvc test servlet filter integration tests. It allows to:

	Should apply filter

318.24. Add a class for web mvc test web client integration tests. It allows to:

	Should auto configure web client

318.25. Add a class for web mvc test web driver integration tests. It allows to:

	Should auto configure web client;
	Should be A different web client

318.26. Add a class for web mvc test with auto configure mock mvc integration tests. It allows to:

	Should web mvc test with auto configure mock mvc integration tests not add filters;
	Should web mvc test with auto configure mock mvc integration tests not have web driver;
	Should web mvc test with auto configure mock mvc integration tests not have web client

319. Changes to package org.springframework.boot.test.context:  

319.1. Rename type ConfigFileApplicationContextInitializer with ConfigFileApplicationContextInitializer

319.2. Add an interface declaration  for default test execution listeners post processor. It allows to:

	Post process default test execution listeners

319.3. Add a class for imports context customizer factory. It allows to:

	Create context customizer;
	Assert has no bean methods;

319.4. Add a class for reactive web merged context configuration. It allows to:

	Instantiate reactive web merged context configuration  with merged context configuration

319.5. Add a class for spring boot test context bootstrapper. It allows to:

	Build test context;
	Get default test execution listener classes;
	Resolve context loader;
	Add config attributes classes;
	Get default context loader class;
	Get process merged context configuration;
	Get web application type;
	Deduce web application type;
	Check if spring boot test context bootstrapper is web environment supported;
	Check if spring boot test context bootstrapper is from configuration;
	Get or find configuration classes;
	Check if spring boot test context bootstrapper contains non test component;
	Merge head class;
	Get and process property source properties;
	Get differentiator property source property;
	Handle process property source properties;
	Get web environment;
	Get classes;
	Get properties;
	Get annotation;
	Verify configuration;
	Create modified config;

319.6. Rename type SpringBootTestGroovyConfigurationTests with SpringBootTestGroovyConfigurationTests

319.7. Rename type SpringBootTestGroovyConventionConfigurationTests with SpringBootTestGroovyConventionConfigurationTests

319.8. Rename type SpringBootTestXmlConventionConfigurationTests with SpringBootTestXmlConventionConfigurationTests

320. Changes to package org.springframework.boot.test.context.assertj:  

320.1. Add a class for application context assert. It allows to:

	Instantiate application context assert  with application context, startup failure throwable and startup failure throwable;
	Check if application context assert has bean;
	Check if application context assert has single bean;
	Check if application context assert does not have bean;
	Get bean names;
	Get bean;
	Get primary;
	Check if application context assert is primary;
	Find bean;
	Get beans;
	Get failure;
	Check if application context assert has failed;
	Check if application context assert has not failed;
	Get application context;
	Get startup failure;
	Convert context failed;
	Get bean names  for type;
	Get beans  of type;

Add a local a class for context failed to start. It allows to:

	Instantiate context failed to start  with context, ex throwable and ex throwable;
	Combine arguments;
	Get indented stack trace  as string;
	Get stack trace  as string;
	Indent context failed to start

320.2. Add an interface declaration  for application context assert provider. It allows to:

	Assert application context assert provider;
	Get source application context;
	Get startup failure;
	Close application context assert provider;
	Get type class

320.3. Add a class for assert provider application context invocation handler. It allows to:

	Instantiate assert provider application context invocation handler  with application context type class, context supplier and context supplier;
	Get context or startup failure;
	Invoke method;
	Check if assert provider application context invocation handler is to string;
	Convert assert provider application context invocation handler to string;
	Check if assert provider application context invocation handler is get source context;
	Get source context;
	Check if assert provider application context invocation handler is get startup failure;
	Get startup failure;
	Check if assert provider application context invocation handler is assert that;
	Get assert provider application context invocation handler;
	Check if assert provider application context invocation handler is close method;
	Invoke assert provider application context invocation handler close;
	Invoke application context method;
	Get started application context

320.4. Add an interface declaration  for assertable application context. It allows to:

	Get context supplier

320.5. Add a class for assertable application context tests. It allows to:

	Get should return proxy

320.6. Add an interface declaration  for assertable reactive web application context. It allows to:

	Get context supplier

320.7. Add a class for assertable reactive web application context tests. It allows to:

	Get should return proxy

320.8. Add an interface declaration  for assertable web application context. It allows to:

	Get context supplier

320.9. Add a class for assertable web application context tests. It allows to:

	Get should return proxy

321. Changes to package org.springframework.boot.test.context.bootstrap:  

321.1. Rename type SpringBootTestContextBootstrapperExampleConfig with SpringBootTestContextBootstrapperExampleConfig

321.2. Rename type SpringBootTestContextBootstrapperWithContextConfigurationTests with SpringBootTestContextBootstrapperWithContextConfigurationTests

322. Changes to package org.springframework.boot.test.context.example:  

322.1. Rename type ExampleConfig with ExampleConfig

323. Changes to package org.springframework.boot.test.context.example.scan:  

323.1. Rename type Example with Example

324. Changes to package org.springframework.boot.test.context.example.scan.sub:  

324.1. Rename type SubExampleConfig with SubExampleConfig

325. Changes to package org.springframework.boot.test.context.filter:  

325.1. Rename type ExcludeFilterContextCustomizer with ExcludeFilterContextCustomizer

325.2. Rename type ExcludeFilterContextCustomizerFactory with ExcludeFilterContextCustomizerFactory

325.3. Add a class for jupiter repeated test example. It allows to:

	Get repeated test

325.4. Add a class for jupiter test example. It allows to:

	Get repeated test

325.5. Add a class for jupiter test factory example. It allows to:

	Get test factory

325.6. Rename type SampleConfig with SampleConfig

325.7. Rename type SampleTestConfig with SampleTestConfig

325.8. Add a class for test type exclude filter. It allows to:

	Match metadata reader;
	Check if test type exclude filter is test configuration;
	Check if test type exclude filter is test class

326. Changes to package org.springframework.boot.test.context.runner:  

326.1. Add a class for abstract application context runner. It allows to:

	Instantiate abstract application context runner  with context factory supplier;
	Instantiate abstract application context runner  with context factory supplier, initializers list, environment properties test property values, system properties test property values, class loader, parent application context, configurations list and configurations list;
	Process abstract application context runner abstract application context runner with initializer;
	Process abstract application context runner abstract application context runner with property values;
	Process abstract application context runner abstract application context runner with system properties;
	Process abstract application context runner abstract application context runner with class loader;
	Process abstract application context runner abstract application context runner with parent;
	Process abstract application context runner abstract application context runner with bean;
	Get bean definition registrar;
	Process abstract application context runner abstract application context runner with user configuration;
	Process abstract application context runner abstract application context runner with configuration;
	Process abstract application context runner abstract application context runner with;
	Add list;
	Handle new instance;
	Run context consumer;
	Process abstract application context runner abstract application context runner with context class loader;
	Create assertable context;
	Create and load context;
	Configure context;
	Accept context consumer;
	Handle rethrow

326.2. Add an object creator class for application context runner. It allows to:

	Instantiate application context runner;
	Instantiate application context runner  with context factory supplier;
	Instantiate application context runner  with context factory supplier, initializers list, environment properties test property values, system properties test property values, class loader, parent application context, configurations list and configurations list;
	Handle new instance

326.3. Add an object creator class for application context runner tests. It allows to:

	Get application context runner tests

326.4. Add an interface declaration  for context consumer. It allows to:

	Accept context

326.5. Add an object creator class for reactive web application context runner. It allows to:

	Instantiate reactive web application context runner;
	Instantiate reactive web application context runner  with context factory supplier;
	Instantiate reactive web application context runner  with context factory supplier, initializers list, environment properties test property values, system properties test property values, class loader, parent application context, configurations list and configurations list;
	Handle new instance

326.6. Add an object creator class for reactive web application context runner tests. It allows to:

	Get reactive web application context runner tests

326.7. Add a class for web application context runner. It allows to:

	Instantiate web application context runner;
	Instantiate web application context runner  with context factory supplier;
	Instantiate web application context runner  with context factory supplier, initializers list, environment properties test property values, system properties test property values, class loader, parent application context, configurations list and configurations list;
	Handle new instance;
	Process web application context runner web application context runner with mock servlet context

326.8. Add a class for web application context runner tests. It allows to:

	Handle context should have mock servlet context;
	Get web application context runner tests

327. Changes to package org.springframework.boot.test.json:  

327.1. Add a class for basic json tester. It allows to:

	Instantiate basic json tester;
	Instantiate basic json tester  with resource load class;
	Instantiate basic json tester  with resource load class, charset and charset;
	Initialize resource load class;
	Process basic json tester basic json tester from;
	Verify basic json tester;
	Get json content

327.2. Rename type BasicJsonTesterTests with BasicJsonTesterTests

327.3. Add a class for duplicate json object context customizer factory tests. It allows to:

	Warning duplicate json object context customizer factory tests for multiple versions

327.4. Rename type ExampleObject with ExampleObject

327.5. Add a class for jackson tester integration tests. It allows to:

	Handle setup;
	Handle typical test;
	Handle typical list test;
	Handle typical map test;
	Write jackson tester integration tests with view;
	Read jackson tester integration tests with resource and view;
	Read jackson tester integration tests with reader and view

327.6. Add a class for json content. It allows to:

	Instantiate json content  with resource load class, resolvable type and resolvable type;
	Assert json content;
	Get json;
	Convert json content to string

327.7. Add a class for json content assert tests. It allows to:

	Check if json content assert tests is equal to when string is matching should pass;
	Check if json content assert tests is equal to when null actual should fail;
	Check if json content assert tests is equal to when string is not matching should fail;
	Check if json content assert tests is equal to when resource path is matching should pass;
	Check if json content assert tests is equal to when resource path is not matching should fail;
	Check if json content assert tests is equal to when bytes are matching should pass;
	Check if json content assert tests is equal to when bytes are not matching should fail;
	Check if json content assert tests is equal to when file is matching should pass;
	Check if json content assert tests is equal to when file is not matching should fail;
	Check if json content assert tests is equal to when input stream is matching should pass;
	Check if json content assert tests is equal to when input stream is not matching should fail;
	Check if json content assert tests is equal to when resource is matching should pass;
	Check if json content assert tests is equal to when resource is not matching should fail;
	Check if json content assert tests is equal to json when string is matching should pass;
	Check if json content assert tests is equal to json when null actual should fail;
	Check if json content assert tests is equal to json when string is not matching should fail;
	Check if json content assert tests is equal to json when resource path is matching should pass;
	Check if json content assert tests is equal to json when resource path is not matching should fail;
	Check if json content assert tests is equal to json when resource path and class is matching should pass;
	Check if json content assert tests is equal to json when resource path and class is not matching should fail;
	Check if json content assert tests is equal to json when bytes are matching should pass;
	Check if json content assert tests is equal to json when bytes are not matching should fail;
	Check if json content assert tests is equal to json when file is matching should pass;
	Check if json content assert tests is equal to json when file is not matching should fail;
	Check if json content assert tests is equal to json when input stream is matching should pass;
	Check if json content assert tests is equal to json when input stream is not matching should fail;
	Check if json content assert tests is equal to json when resource is matching should pass;
	Check if json content assert tests is equal to json when resource is not matching should fail;
	Check if json content assert tests is strictly equal to json when string is matching should pass;
	Check if json content assert tests is strictly equal to json when string is not matching should fail;
	Check if json content assert tests is strictly equal to json when resource path is matching should pass;
	Check if json content assert tests is strictly equal to json when resource path is not matching should fail;
	Check if json content assert tests is strictly equal to json when resource path and class is matching should pass;
	Check if json content assert tests is strictly equal to json when resource path and class is not matching should fail;
	Check if json content assert tests is strictly equal to json when bytes are matching should pass;
	Check if json content assert tests is strictly equal to json when bytes are not matching should fail;
	Check if json content assert tests is strictly equal to json when file is matching should pass;
	Check if json content assert tests is strictly equal to json when file is not matching should fail;
	Check if json content assert tests is strictly equal to json when input stream is matching should pass;
	Check if json content assert tests is strictly equal to json when input stream is not matching should fail;
	Check if json content assert tests is strictly equal to json when resource is matching should pass;
	Check if json content assert tests is strictly equal to json when resource is not matching should fail;
	Check if json content assert tests is equal to json when string is matching and lenient should pass;
	Check if json content assert tests is equal to json when string is not matching and lenient should fail;
	Check if json content assert tests is equal to json when resource path is matching and lenient should pass;
	Check if json content assert tests is equal to json when resource path is not matching and lenient should fail;
	Check if json content assert tests is equal to json when resource path and class is matching and lenient should pass;
	Check if json content assert tests is equal to json when resource path and class is not matching and lenient should fail;
	Check if json content assert tests is equal to json when bytes are matching and lenient should pass;
	Check if json content assert tests is equal to json when bytes are not matching and lenient should fail;
	Check if json content assert tests is equal to json when file is matching and lenient should pass;
	Check if json content assert tests is equal to json when file is not matching and lenient should fail;
	Check if json content assert tests is equal to json when input stream is matching and lenient should pass;
	Check if json content assert tests is equal to json when input stream is not matching and lenient should fail;
	Check if json content assert tests is equal to json when resource is matching and lenient should pass;
	Check if json content assert tests is equal to json when resource is not matching and lenient should fail;
	Check if json content assert tests is equal to json when string is matching and comparator should pass;
	Check if json content assert tests is equal to json when string is not matching and comparator should fail;
	Check if json content assert tests is equal to json when resource path is matching and comparator should pass;
	Check if json content assert tests is equal to json when resource path is not matching and comparator should fail;
	Check if json content assert tests is equal to json when resource path and class are matching and comparator should pass;
	Check if json content assert tests is equal to json when resource path and class are not matching and comparator should fail;
	Check if json content assert tests is equal to json when bytes are matching and comparator should pass;
	Check if json content assert tests is equal to json when bytes are not matching and comparator should fail;
	Check if json content assert tests is equal to json when file is matching and comparator should pass;
	Check if json content assert tests is equal to json when file is not matching and comparator should fail;
	Check if json content assert tests is equal to json when input stream is matching and comparator should pass;
	Check if json content assert tests is equal to json when input stream is not matching and comparator should fail;
	Check if json content assert tests is equal to json when resource is matching and comparator should pass;
	Check if json content assert tests is equal to json when resource is not matching and comparator should fail;
	Check if json content assert tests is not equal to when string is matching should fail;
	Check if json content assert tests is not equal to when null actual should pass;
	Check if json content assert tests is not equal to when string is not matching should pass;
	Check if json content assert tests is not equal to when resource path is matching should fail;
	Check if json content assert tests is not equal to when resource path is not matching should pass;
	Check if json content assert tests is not equal to when bytes are matching should fail;
	Check if json content assert tests is not equal to when bytes are not matching should pass;
	Check if json content assert tests is not equal to when file is matching should fail;
	Check if json content assert tests is not equal to when file is not matching should pass;
	Check if json content assert tests is not equal to when input stream is matching should fail;
	Check if json content assert tests is not equal to when input stream is not matching should pass;
	Check if json content assert tests is not equal to when resource is matching should fail;
	Check if json content assert tests is not equal to when resource is not matching should pass;
	Check if json content assert tests is not equal to json when string is matching should fail;
	Check if json content assert tests is not equal to json when null actual should pass;
	Check if json content assert tests is not equal to json when string is not matching should pass;
	Check if json content assert tests is not equal to json when resource path is matching should fail;
	Check if json content assert tests is not equal to json when resource path is not matching should pass;
	Check if json content assert tests is not equal to json when resource path and class are matching should fail;
	Check if json content assert tests is not equal to json when resource path and class are not matching should pass;
	Check if json content assert tests is not equal to json when bytes are matching should fail;
	Check if json content assert tests is not equal to json when bytes are not matching should pass;
	Check if json content assert tests is not equal to json when file is matching should fail;
	Check if json content assert tests is not equal to json when file is not matching should pass;
	Check if json content assert tests is not equal to json when input stream is matching should fail;
	Check if json content assert tests is not equal to json when input stream is not matching should pass;
	Check if json content assert tests is not equal to json when resource is matching should fail;
	Check if json content assert tests is not equal to json when resource is not matching should pass;
	Check if json content assert tests is not strictly equal to json when string is matching should fail;
	Check if json content assert tests is not strictly equal to json when string is not matching should pass;
	Check if json content assert tests is not strictly equal to json when resource path is matching should fail;
	Check if json content assert tests is not strictly equal to json when resource path is not matching should pass;
	Check if json content assert tests is not strictly equal to json when resource path and class are matching should fail;
	Check if json content assert tests is not strictly equal to json when resource path and class are not matching should pass;
	Check if json content assert tests is not strictly equal to json when bytes are matching should fail;
	Check if json content assert tests is not strictly equal to json when bytes are not matching should pass;
	Check if json content assert tests is not strictly equal to json when file is matching should fail;
	Check if json content assert tests is not strictly equal to json when file is not matching should pass;
	Check if json content assert tests is not strictly equal to json when input stream is matching should fail;
	Check if json content assert tests is not strictly equal to json when input stream is not matching should pass;
	Check if json content assert tests is not strictly equal to json when resource is matching should fail;
	Check if json content assert tests is not strictly equal to json when resource is not matching should pass;
	Check if json content assert tests is not equal to json when string is matching and lenient should fail;
	Check if json content assert tests is not equal to json when string is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when resource path is matching and lenient should fail;
	Check if json content assert tests is not equal to json when resource path is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when resource path and class are matching and lenient should fail;
	Check if json content assert tests is not equal to json when resource path and class are not matching and lenient should pass;
	Check if json content assert tests is not equal to json when bytes are matching and lenient should fail;
	Check if json content assert tests is not equal to json when bytes are not matching and lenient should pass;
	Check if json content assert tests is not equal to json when file is matching and lenient should fail;
	Check if json content assert tests is not equal to json when file is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when input stream is matching and lenient should fail;
	Check if json content assert tests is not equal to json when input stream is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when resource is matching and lenient should fail;
	Check if json content assert tests is not equal to json when resource is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when string is matching and comparator should fail;
	Check if json content assert tests is not equal to json when string is not matching and comparator should pass;
	Check if json content assert tests is not equal to json when resource path is matching and comparator should fail;
	Check if json content assert tests is not equal to json when resource path is not matching and comparator should pass;
	Check if json content assert tests is not equal to json when resource path and class are matching and comparator should fail;
	Check if json content assert tests is not equal to json when resource path and class are not matching and comparator should pass;
	Check if json content assert tests is not equal to json when bytes are matching and comparator should fail;
	Check if json content assert tests is not equal to json when bytes are not matching and comparator should pass;
	Check if json content assert tests is not equal to json when file is matching and comparator should fail;
	Check if json content assert tests is not equal to json when file is not matching and comparator should pass;
	Check if json content assert tests is not equal to json when input stream is matching and comparator should fail;
	Check if json content assert tests is not equal to json when input stream is not matching and comparator should pass;
	Check if json content assert tests is not equal to json when resource is matching and comparator should fail;
	Check if json content assert tests is not equal to json when resource is not matching and comparator should pass;
	Check if json content assert tests has json path value;
	Check if json content assert tests has json path value for an empty array;
	Check if json content assert tests has json path value for an empty map;
	Check if json content assert tests has json path value for indefinite path with results;
	Check if json content assert tests has json path value for indefinite path with empty results;
	Check if json content assert tests does not have json path value;
	Check if json content assert tests does not have json path value for an empty array;
	Check if json content assert tests does not have json path value for an empty map;
	Check if json content assert tests does not have json path value for indefinite path with results;
	Check if json content assert tests does not have json path value for indefinite path with empty results;
	Check if json content assert tests has empty json path value for an empty string;
	Check if json content assert tests has empty json path value for an empty array;
	Check if json content assert tests has empty json path value for an empty map;
	Check if json content assert tests has empty json path value for indefinite path with empty results;
	Check if json content assert tests has empty json path value for indefinite path with results;
	Check if json content assert tests has empty json path value for whitespace;
	Check if json content assert tests does not have empty json path value for string;
	Check if json content assert tests does not have empty json path value for number;
	Check if json content assert tests does not have empty json path value for boolean;
	Check if json content assert tests does not have empty json path value for array;
	Check if json content assert tests does not have empty json path value for map;
	Check if json content assert tests does not have empty json path value for indefinite path with results;
	Check if json content assert tests does not have empty json path value for indefinite path with empty results;
	Check if json content assert tests does not have empty json path value for an empty string;
	Check if json content assert tests does not have empty json path value for for an empty array;
	Check if json content assert tests does not have empty json path value for an empty map;
	Check if json content assert tests has json path string value;
	Check if json content assert tests has json path string value for an empty string;
	Check if json content assert tests has json path string value for non string;
	Check if json content assert tests has json path number value;
	Check if json content assert tests has json path number value for non number;
	Check if json content assert tests has json path boolean value;
	Check if json content assert tests has json path boolean value for non boolean;
	Check if json content assert tests has json path array value;
	Check if json content assert tests has json path array value for an empty array;
	Check if json content assert tests has json path array value for non array;
	Check if json content assert tests has json path map value;
	Check if json content assert tests has json path map value for an empty map;
	Check if json content assert tests has json path map value for non map;
	Extracting json path value;
	Extracting json path value  for missing;
	Extracting json path string value;
	Extracting json path string value  for missing;
	Extracting json path string value  for empty string;
	Extracting json path string value  for wrong type;
	Extracting json path number value;
	Extracting json path number value  for missing;
	Extracting json path number value  for wrong type;
	Extracting json path boolean value;
	Extracting json path boolean value  for missing;
	Extracting json path boolean value  for wrong type;
	Extracting json path array value;
	Extracting json path array value  for missing;
	Extracting json path array value  for empty;
	Extracting json path array value  for wrong type;
	Extracting json path map value;
	Extracting json path map value  for missing;
	Extracting json path map value  for empty;
	Extracting json path map value  for wrong type;
	Check if json content assert tests is null when actual is null should pass;
	Create file;
	Create input stream;
	Create resource;
	Load json;
	Process json content assert tests json content assert tests for json

327.8. Add a class for json content tests. It allows to:

	Create when resource load class is null should throw exception;
	Create when json is null should throw exception;
	Create when type is null should create content;
	Assert that should return json content assert;
	Get json should return json;
	Convert json content tests to string when has type should return string;
	Convert json content tests to string when has no type should return string

327.9. Rename type JsonLoader with JsonLoader

327.10. Add a class for object content. It allows to:

	Instantiate object content  with resolvable type, object and object;
	Assert object content;
	Get object;
	Convert object content to string

327.11. Rename type ObjectContentAssert with ObjectContentAssert

327.12. Add a class for object content assert tests. It allows to:

	Check if object content assert tests is equal to when objects are equal should pass;
	Check if object content assert tests is equal to when objects are different should fail;
	Process object content assert tests object content assert tests as array for array should return object array assert;
	Process object content assert tests object content assert tests as array for non array should fail;
	Process object content assert tests object content assert tests as map for map should return map assert;
	Process object content assert tests object content assert tests as map for non map should fail;
	Process object content assert tests object content assert tests for object

327.13. Add a class for object content tests. It allows to:

	Create when object is null should throw exception;
	Create when type is null should create content;
	Assert that should return object content assert;
	Get object should return object;
	Convert object content tests to string when has type should return string;
	Convert object content tests to string when has no type should return string

328. Changes to package org.springframework.boot.test.mock.mockito:  

328.1. Rename type Definition with Definition

328.2. Add a class for definitions parser. It allows to:

	Instantiate definitions parser;
	Instantiate definitions parser  with existing collection;
	Parse source class;
	Parse element;
	Parse mock bean annotation;
	Parse spy bean annotation;
	Add definition;
	Get or deduce types;
	Get definitions;
	Get field

328.3. Rename type MockBeanOnTestFieldForExistingBeanCacheIntegrationTests with MockBeanOnTestFieldForExistingBeanCacheIntegrationTests

328.4. Rename type MockBeanOnTestFieldForExistingBeanConfig with MockBeanOnTestFieldForExistingBeanConfig

328.5. Rename type MockBeanOnTestFieldForExistingBeanIntegrationTests with MockBeanOnTestFieldForExistingBeanIntegrationTests

328.6. Add a class for mock definition. It allows to:

	Instantiate mock definition  with type, extra interfaces class, answers, mock reset, qualifier definition and qualifier definition;
	Process mock definition mock definition as class set;
	Get type  to mock;
	Get extra interfaces;
	Get answer;
	Check if mock definition is serializable;
	Check if mock definition equals;
	Hash code;
	Convert mock definition to string;
	Create mock;

328.7. Add a class for mock definition tests. It allows to:

	Convert class;
	Create mock definition tests with defaults;
	Create explicit;
	Create mock

328.8. Rename type MockResetTests with MockResetTests

328.9. Add a class for mockito beans. It allows to:

	Add mockito beans;
	Get iterator

328.10. Add a class for mockito context customizer. It allows to:

	Instantiate mockito context customizer  with definitions set;
	Customize context;
	Check if mockito context customizer equals;
	Hash code

328.11. Rename type MockitoContextCustomizerFactory with MockitoContextCustomizerFactory

328.12. Add a class for mockito context customizer tests. It allows to:

	Hash code and equals;
	Create test mock definition

328.13. Add a class for qualifier definition. It allows to:

	Instantiate qualifier definition  with field, annotations set and annotations set;
	Handle matches;
	Apply  to root bean definition;
	Check if qualifier definition equals;
	Hash code;
	Process qualifier definition qualifier definition for element;
	Get qualifier annotations;
	Check if qualifier definition is mock or spy annotation

328.14. Add a class for reset invocation listener. It allows to:

	Instantiate reset invocation listener  with mock reset;
	Reset reset invocation listener;
	Report invocation

328.15. Add a class for reset mocks test execution listener. It allows to:

	Get order;
	Process reset mocks test execution listener reset mocks test execution listener before test method;
	Process reset mocks test execution listener reset mocks test execution listener after test method;
	Reset mocks;

328.16. Rename type SpyBeanOnTestFieldForExistingBeanCacheIntegrationTests with SpyBeanOnTestFieldForExistingBeanCacheIntegrationTests

328.17. Rename type SpyBeanOnTestFieldForExistingBeanConfig with SpyBeanOnTestFieldForExistingBeanConfig

328.18. Rename type SpyBeanOnTestFieldForExistingBeanIntegrationTests with SpyBeanOnTestFieldForExistingBeanIntegrationTests

328.19. Add a class for spy definition tests. It allows to:

	Convert class;
	Create spy definition tests with defaults;
	Create explicit;
	Create spy;
	Create spy when null instance should throw exception;
	Create spy when wrong instance should throw exception;
	Create spy  twice

329. Changes to package org.springframework.boot.test.mock.mockito.example:  

329.1. Rename type CustomQualifierExampleService with CustomQualifierExampleService

329.2. Rename type ExampleExtraInterface with ExampleExtraInterface

329.3. Rename type ExampleGenericService with ExampleGenericService

329.4. Rename type ExampleGenericServiceCaller with ExampleGenericServiceCaller

329.5. Rename type ExampleGenericStringServiceCaller with ExampleGenericStringServiceCaller

329.6. Rename type ExampleService with ExampleService

329.7. Rename type ExampleServiceCaller with ExampleServiceCaller

329.8. Rename type FailingExampleService with FailingExampleService

329.9. Rename type RealExampleService with RealExampleService

329.10. Rename type SimpleExampleIntegerGenericService with SimpleExampleIntegerGenericService

329.11. Rename type SimpleExampleService with SimpleExampleService

329.12. Rename type SimpleExampleStringGenericService with SimpleExampleStringGenericService

330. Changes to package org.springframework.boot.test.mock.web:  

330.1. Rename type SpringBootMockServletContext with SpringBootMockServletContext

331. Changes to package org.springframework.boot.test.rule:  

331.1. Rename type OutputCaptureTests with OutputCaptureTests

332. Changes to package org.springframework.boot.test.util:  

332.1. Rename type ApplicationContextTestUtils with ApplicationContextTestUtils

332.2. Rename type ApplicationContextTestUtilsTests with ApplicationContextTestUtilsTests

332.3. Add a class for test property values. It allows to:

	Instantiate test property values  with properties map;
	And test property values;
	And pairs stream;
	Apply  to configurable application context;
	Apply  to configurable environment;
	Apply callable to system properties;
	Handle rethrow;
	Add mutable property sources to sources;
	O test property values;
	O pairs iterable;
	O pairs stream;
	Handle empty;
	Get type;
	Get source class;
	Apply suffix

Add a local a class for pair. It allows to:

	Instantiate pair;
	Add  to properties map;
	Parse pair;
	Get separator index;
	O pair

Add a local a class for system properties handler. It allows to:

	Instantiate system properties handler;
	Apply properties map;
	Close system properties handler;
	Get set or clear

332.4. Add a class for test property values tests. It allows to:

	Apply test property values tests to environment should attach configuration property source;
	Apply test property values tests to default property source;
	Apply test property values tests to system property source;
	Apply test property values tests to with specific name;
	Apply test property values tests to existing name and different type should override existing one;
	Apply test property values tests to existing name and same type should merge;
	And should chain and add single key value;
	Apply test property values tests to system properties should set system properties;
	Apply test property values tests to system properties should restore system properties;
	Apply test property values tests to system properties when value is null should remove property

333. Changes to package org.springframework.boot.test.web.client:  

333.1. Add a class for local host uri template handler. It allows to:

	Instantiate local host uri template handler  with environment;
	Instantiate local host uri template handler  with environment, uri template handler and uri template handler;
	Get root uri

333.2. Add a class for local host uri template handler tests. It allows to:

	Create when environment is null should throw exception;
	Create when scheme is null should throw exception;
	Create when handler is null should throw exception;
	Get root uri should use local server port;
	Get root uri when local server port missing should use port 8080;
	Get root uri uses custom scheme;
	Get root uri should use context path;
	Expand should use custom handler

333.3. Add a class for mock server rest template customizer. It allows to:

	Instantiate mock server rest template customizer;
	Instantiate mock server rest template customizer  with expectation manager class;
	Set detect root uri;
	Customize rest template;
	Create expectation manager;
	Get server;
	Get expectation managers;
	Get servers

333.4. Rename type MockServerRestTemplateCustomizerTests with MockServerRestTemplateCustomizerTests

333.5. Add a class for root uri request expectation manager tests. It allows to:

	Handle setup;
	Create when root uri is null should throw exception;
	Create when expectation manager is null should throw exception;
	Expect request should delegate  to expectation manager;
	Validate request when uri does  not start with root uri should delegate to expectation manager;
	Validate request when uri starts  with root uri should replace uri;
	Validate request when request uri assertion is thrown should replace uri  in message;
	Reset request should delegate  to expectation manager;
	Convert bind;
	Process root uri request expectation manager tests root uri request expectation manager tests for rest template when using root uri template handler should return root uri request expectation manager;
	Process root uri request expectation manager tests root uri request expectation manager tests for rest template when not using root uri template handler should return original request expectation manager;
	Get bound rest template should prefix root uri;
	Get bound rest template when url includes domain should not prefix root uri

334. Changes to package org.springframework.boot.test.web.htmlunit:  

334.1. Rename type LocalHostWebClient with LocalHostWebClient

334.2. Add a class for local host web client tests. It allows to:

	Instantiate local host web client tests;
	Create when environment is null will throw exception;
	Get page when url is relative and no port will use localhost 8080;
	Get page when url is relative and has port will use localhost port;
	Handle mock connection

335. Changes to package org.springframework.boot.test.web.htmlunit.webdriver:  

335.1. Rename type LocalHostWebConnectionHtmlUnitDriver with LocalHostWebConnectionHtmlUnitDriver

336. Changes to package org.springframework.boot.testsupport.assertj:  

336.1. Add a class for matched. It allows to:

	Instantiate matched  with matcher;
	Handle matches;
	When matcher;
	Get b

336.2. Add a class for matched tests. It allows to:

	Process matched tests matched tests by matcher matches;
	Process matched tests matched tests by matcher does not match;
	When matcher matches;
	When matcher does  not match

337. Changes to package org.springframework.boot.testsupport.context:  

337.1. Add a class for abstract configuration class tests. It allows to:

	All bean methods are public;
	Find configuration classes;
	Check if abstract configuration class tests is test class;
	Check if abstract configuration class tests is public

338. Changes to package org.springframework.boot.testsupport.runner.classpath:  

338.1. Add a class for modified class path runner exclusions tests. It allows to:

	Handle entries are filtered from test class class loader;
	Handle entries are filtered from thread context class loader;
	Handle tests that use hamcrest work correctly

338.2. Add a class for modified class path runner overrides tests. It allows to:

	Handle classes are loaded from override;
	Handle classes are loaded from transitive dependency of override

339. Changes to package org.springframework.boot.testsupport.web.servlet:  

339.1. Add a class for example filter. It allows to:

	Handle init;
	Destroy example filter;
	Do filter

339.2. Add a class for example servlet. It allows to:

	Instantiate example servlet;
	Handle service

340. Changes to package org.springframework.boot.type.classreading:  

340.1. Add a class for concurrent reference caching metadata reader factory. It allows to:

	Instantiate concurrent reference caching metadata reader factory;
	Instantiate concurrent reference caching metadata reader factory  with resource loader;
	Instantiate concurrent reference caching metadata reader factory  with class loader;
	Get metadata reader;
	Create metadata reader;
	Handle clear cache

341. Changes to package org.springframework.boot.validation:  

341.1. Add a class for message interpolator factory. It allows to:

	Get object;
	Get fallback;

341.2. Rename type MessageInterpolatorFactoryTests with MessageInterpolatorFactoryTests

341.3. Add a class for message interpolator factory without el integration tests. It allows to:

	Handle default message interpolator should fail;
	Get object should use fallback

342. Changes to package org.springframework.boot.web.client:  

342.1. Add an interface declaration  for rest template customizer. It allows to:

	Customize rest template

342.2. Add a class for root uri template handler. It allows to:

	Instantiate root uri template handler  with uri template handler;
	Instantiate root uri template handler;
	Expand uri variables map;
	Expand root uri template handler;
	Apply root uri template handler;
	Get root uri;
	Add  to rest template

342.3. Add a class for root uri template handler tests. It allows to:

	Handle setup;
	Create root uri template handler tests with null root uri should throw exception;
	Create root uri template handler tests with null handler should throw exception;
	Expand map variables should prefix root;
	Expand map variables when path does  not start with slash should not prefix root;
	Expand array variables should prefix root;
	Expand array variables when path does  not start with slash should not prefix root;
	Apply should wrap existing template

343. Changes to package org.springframework.boot.web.codec:  

343.1. Add an interface declaration  for codec customizer. It allows to:

	Customize codec configurer

344. Changes to package org.springframework.boot.web.context:  

344.1. Add a class for server port info application context initializer. It allows to:

	Initialize configurable application context;
	Process server port info application context initializer server port info application context initializer on application event;
	Get name;
	Set port property;

344.2. Add a class for web server initialized event. It allows to:

	Instantiate web server initialized event  with web server;
	Get web server;
	Get application context;
	Get source

345. Changes to package org.springframework.boot.web.embedded.jetty:  

345.1. Add a class for jetty reactive web server factory. It allows to:

	Instantiate jetty reactive web server factory;
	Get set use forward headers;
	Set acceptors;
	Get web server;
	Add server customizers;
	Set server customizers;
	Get server customizers;
	Get thread pool;
	Set thread pool;
	Set selectors;
	Set resource factory;
	Get resource factory;
	Create jetty server;
	Create connector;
	Add handler wrappers;
	Apply wrapper;
	Customize ssl

345.2. Add a class for jetty reactive web server factory tests. It allows to:

	Get factory;
	Set null server customizers should throw exception;
	Add null server customizers should throw exception;
	Handle jetty customizers should be invoked;
	Handle specific IP address not reverse resolved;
	Use forwarded headers;
	Use server resources

345.3. Add an interface declaration  for jetty server customizer. It allows to:

	Customize server

345.4. Add a class for jetty servlet web server factory tests. It allows to:

	Get factory;
	Handle jetty configurations;
	Handle jetty customizations;
	Handle session timeout;
	Handle session timeout in mins;
	Handle ssl ciphers configuration;
	Stop called  without start;
	Add connector;
	Handle ssl enabled multi protocols configuration;
	Handle ssl enabled protocols configuration;
	Get ssl settings;
	Assert timeout;
	Get wrapped handlers;
	Handle basic ssl classpath key store;
	Use jetty servlet web server factory tests forward headers;
	Handle default thread pool;
	Handle custom thread pool;
	Start fails when thread pool is  too small;
	Handle specific IP address not reverse resolved;
	Handle specific IP address with ssl is not reverse resolved;
	Handle faulty listener causes start failure;
	Get jsp servlet;
	Get actual mime mappings;
	Get charset;
	Handle exception caused  by blocked port

345.5. Add a class for jetty web server. It allows to:

	Instantiate jetty web server  with server;
	Initialize jetty web server;
	Start;
	Stop jetty web server silently;
	Start jetty web server;
	Find bind exception;
	Get actual ports description;
	Get local port;
	Get protocols;
	Get context path;
	Handle deferred initialize;
	Stop jetty web server;
	Get port;
	Get server

345.6. Add a class for servlet context initializer configuration. It allows to:

	Instantiate servlet context initializer configuration  with initializers;
	Configure web app context;
	Call initializers;
	Set extended listener types

346. Changes to package org.springframework.boot.web.embedded.netty:  

346.1. Add a class for netty reactive web server factory. It allows to:

	Instantiate netty reactive web server factory;
	Get web server;
	Get server customizers;
	Set server customizers;
	Add server customizers;
	Set lifecycle timeout;
	Get set use forward headers;
	Set resource factory;
	Create http server;
	Get list protocols;
	Get listen address;
	Apply customizers

346.2. Add a class for netty reactive web server factory tests. It allows to:

	Get factory;
	Handle exception is thrown when port is already in use;
	Handle port matches requirement;
	Handle netty customizers;
	Use forwarded headers

346.3. Add a class for netty web server. It allows to:

	Instantiate netty web server  with http server, reactor http handler adapter, lifecycle timeout duration and lifecycle timeout duration;
	Start netty web server;
	Start http server;
	Find bind exception;
	Start daemon await thread;
	Run;
	Stop netty web server;
	Get port

347. Changes to package org.springframework.boot.web.embedded.tomcat:  

347.1. Add a class for connector start failed exception. It allows to:

	Instantiate connector start failed exception;
	Get port

347.2. Add a class for lazy session id generator. It allows to:

	Start internal

347.3. Add a class for tld skip patterns. It allows to:

	Instantiate tld skip patterns

347.4. Add an interface declaration  for tomcat connector customizer. It allows to:

	Customize connector

347.5. Add an interface declaration  for tomcat context customizer. It allows to:

	Customize context

347.6. Add a class for tomcat embedded context. It allows to:

	Load children container on startup;
	Set manager;
	Get deferred load on startup;
	Get load  on startup wrappers;
	Handle load;
	Do class loader with thread context class loader;
	Set starter;
	Get starter

347.7. Add a class for tomcat embedded webapp class loader. It allows to:

	Instantiate tomcat embedded webapp class loader;
	Instantiate tomcat embedded webapp class loader  with parent class loader;
	Find resource;
	Find resources;
	Load class;
	Find existing loaded class;
	Do load class;
	Resolve result class if necessary;
	Add URL;
	Get load from parent;
	Find class ignoring  not found;
	Check package access

347.8. Add a class for tomcat error page. It allows to:

	Instantiate tomcat error page  with error page;
	Create native page;
	Add context to context;
	Call method

347.9. Add a class for tomcat reactive web server factory. It allows to:

	Instantiate tomcat reactive web server factory;
	Get default lifecycle listeners;
	Get web server;
	Configure engine;
	Prepare context;
	Skip all tld scanning;
	Configure context;
	Customize connector;
	Invoke protocol handler customizers;
	Customize protocol;
	Customize ssl;
	Set base directory;
	Set background processor delay;
	Set tomcat context customizers;
	Get tomcat context customizers;
	Add context customizers;
	Set tomcat connector customizers;
	Add connector customizers;
	Get tomcat connector customizers;
	Set tomcat protocol handler customizers;
	Add protocol handler customizers;
	Get tomcat protocol handler customizers;
	Add engine valves;
	Get engine valves;
	Set uri encoding;
	Get uri encoding;
	Set context lifecycle listeners;
	Get context lifecycle listeners;
	Add context lifecycle listeners;
	Get tomcat web server;
	Set protocol

347.10. Add a class for tomcat reactive web server factory tests. It allows to:

	Get factory;
	Tomcat customizers;
	Handle context is added to host before customizers are called;
	Handle default tomcat listeners;
	Handle tomcat listeners;
	Set null connector customizers should throw exception;
	Add null add connector customizers should throw exception;
	Set null protocol handler customizers should throw exception;
	Add null protocol handler customizers should throw exception;
	Tomcat connector customizers should be invoked;
	Tomcat protocol handler customizers should be invoked;
	Use forwarded headers;
	Handle reference clearing is disabled

347.11. Add a class for tomcat servlet web server factory tests. It allows to:

	Get factory;
	Restore tccl;
	Tomcat engine names;
	Handle default tomcat listeners;
	Handle tomcat listeners;
	Tomcat customizers;
	Handle context is added to host before customizers are called;
	Tomcat connector customizers;
	Tomcat protocol handler customizers should be invoked;
	Tomcat protocol handler can be customized;
	Tomcat additional connectors;
	Add null additional connector throws;
	Handle session timeout;
	Handle session timeout in mins;
	No session timeout;
	Handle valve;
	Set null tomcat context customizers throws;
	Add null context customizers throws;
	Set null tomcat connector customizers throws;
	Add null connector customizers throws;
	Set null tomcat protocol handler customizers throws;
	Add null tomcat protocol handler customizers throws;
	Handle uri encoding;
	Handle default uri encoding;
	Handle primary connector port clash throws web server exception;
	Handle startup failure does not result in unstopped threads being reported;
	Stop called  without start;
	Add connector;
	Use tomcat servlet web server factory tests forward headers;
	Disable does  not save session files;
	Handle jndi lookups can be performed during application context refresh;
	Get tomcat web server;
	Handle default locale charset mappings are overridden;
	Handle session id generator is configured with attributes from the manager;
	Tld skip patterns should be applied  to context jar scanner;
	Handle custom tomcat http only cookie;
	Handle exception thrown on load failure when fail ctx if servlet start fails is true;
	Handle exception thrown on load failure when fail ctx if servlet start fails is false;
	Handle reference clearing is disabled;
	Non existent upload directory is created  upon multipart upload;
	Process  on startup;
	Do post;
	Get jsp servlet;
	Get actual mime mappings;
	Get charset;
	Assert timeout;
	Get  tomcat tomcat servlet web server factory;
	Handle exception caused  by blocked port

347.12. Add a class for tomcat starter. It allows to:

	Instantiate tomcat starter  with initializers;
	Process tomcat starter tomcat starter on startup;
	Get start up exception

347.13. Add a class for tomcat web server. It allows to:

	Instantiate tomcat web server  with tomcat;
	Initialize tomcat web server;
	Find context;
	Add instance id  to engine name;
	Remove service connectors;
	Rethrow deferred startup exceptions;
	Start daemon await thread;
	Run;
	Start tomcat web server;
	Check that connectors have started;
	Check connector has started;
	Stop tomcat web server silently;
	Stop tomcat;
	Add tomcat web server previously removed connectors;
	Stop protocol handler;
	Perform deferred load  on startup;
	Get service connectors;
	Stop tomcat web server;
	Get ports description;
	Get port;
	Get context path;
	Get tomcat web server tomcat

348. Changes to package org.springframework.boot.web.embedded.undertow:  

348.1. Add a class for composite resource manager. It allows to:

	Instantiate composite resource manager  with resource managers;
	Close composite resource manager;
	Get resource;
	Check if composite resource manager is resource change listener supported;
	Register resource change listener;
	Remove resource change listener

348.2. Add a class for file session persistence tests. It allows to:

	Handle setup;
	Handle loads null for missing file;
	Persist file session persistence tests;
	Handle dont restore expired;
	Delete file  on clear

348.3. Add a class for jar resource manager. It allows to:

	Instantiate jar resource manager  with jar file;
	Instantiate jar resource manager;
	Get resource;
	Check if jar resource manager is resource change listener supported;
	Register resource change listener;
	Remove resource change listener;
	Close jar resource manager

348.4. Add a class for jar resource manager tests. It allows to:

	Create jar;
	Handle empty path is handled correctly;
	Root path is handled  correctly;
	Handle resource is found in jar file;
	Handle resource is found in jar file without leading slash

348.5. Add an interface declaration  for undertow builder customizer. It allows to:

	Customize builder

348.6. Add an interface declaration  for undertow deployment info customizer. It allows to:

	Customize deployment info

348.7. Add a class for undertow reactive web server factory. It allows to:

	Instantiate undertow reactive web server factory;
	Get web server;
	Create builder;
	Configure handler;
	Configure access log handler;
	Create access log directory  if necessary;
	Create worker;
	Customize ssl;
	Get listen address;
	Set deployment info customizers;
	Get deployment info customizers;
	Add deployment info customizers;
	Set access log directory;
	Set access log pattern;
	Set access log prefix;
	Set access log suffix;
	Check if undertow reactive web server factory is access log enabled;
	Set access log enabled;
	Set access log rotate;
	Check if undertow reactive web server factory is use forward headers;
	Get set use forward headers;
	Set buffer size;
	Set io threads;
	Set worker threads;
	Get set use direct buffers;
	Set builder customizers;
	Get builder customizers;
	Add builder customizers

348.8. Add a class for undertow reactive web server factory tests. It allows to:

	Get factory;
	Set null builder customizers should throw exception;
	Add null builder customizers should throw exception;
	Handle builder customizers should be invoked;
	Use forwarded headers;
	Handle access log can be enabled;
	Handle access log can be customized;
	Handle test access log;
	Await file

348.9. Add a class for undertow servlet web server factory tests. It allows to:

	Get factory;
	Handle error page 404;
	Set null builder customizers throws;
	Add null add builder customizers throws;
	Handle builder customizers;
	Set null deployment info customizers throws;
	Add null add deployment info customizers throws;
	Handle deployment info;
	Handle basic ssl classpath key store;
	Handle default context path;
	Use undertow servlet web server factory tests forward headers;
	Each factory uses A discrete servlet container;
	Handle access log can be enabled;
	Handle access log can be customized;
	Handle test access log;
	Add connector;
	Handle ssl restricted protocols empty cipher failure;
	Handle ssl restricted protocols ECDHETLS 1 failure;
	Handle ssl restricted protocols ECDHE success;
	Handle ssl restricted protocols RSATLS 12 success;
	Handle ssl restricted protocols RSATLS 11 failure;
	Get jsp servlet;
	Await file;
	Get servlet container  from new factory;
	Get actual mime mappings;
	Get expected mime mappings;
	Get charset;
	Handle exception caused  by blocked port

349. Changes to package org.springframework.boot.web.reactive.context:  

349.1. Add an interface declaration  for configurable reactive web application context

349.2. Add an object creator class for generic reactive web application context. It allows to:

	Instantiate generic reactive web application context;
	Instantiate generic reactive web application context  with default listable bean factory;
	Create environment;
	Get resource  by path

349.3. Add a class for generic reactive web application context tests. It allows to:

	Get resource  by path

349.4. Add an interface declaration  for reactive web application context

349.5. Add a class for reactive web server initialized event. It allows to:

	Instantiate reactive web server initialized event  with web server, reactive web server application context and reactive web server application context;
	Get application context

350. Changes to package org.springframework.boot.web.reactive.function.client:  

350.1. Add an interface declaration  for web client customizer. It allows to:

	Customize web client builder

351. Changes to package org.springframework.boot.web.reactive.result.view:  

351.1. Add a class for mustache view. It allows to:

	Set compiler;
	Set charset;
	Check resource exists;
	Render internal;
	Resolve resource;
	Get reader;
	Get charset

351.2. Add a class for mustache view resolver. It allows to:

	Instantiate mustache view resolver;
	Instantiate mustache view resolver  with compiler;
	Set charset;
	Get required view class;
	Create view

351.3. Add a class for mustache view resolver tests. It allows to:

	Handle init;
	Resolve mustache view resolver tests non existent;
	Existing mustache view resolver tests

351.4. Add a class for mustache view tests. It allows to:

	Handle init;
	View resolves handlebars

352. Changes to package org.springframework.boot.web.reactive.server:  

352.1. Add a class for abstract reactive web server factory. It allows to:

	Instantiate abstract reactive web server factory;

352.2. Add an interface declaration  for configurable reactive web server factory

352.3. Add an interface declaration  for reactive web server factory. It allows to:

	Get web server

353. Changes to package org.springframework.boot.web.server:  

353.1. Add a class for abstract configurable web server factory. It allows to:

	Instantiate abstract configurable web server factory;
	Get port;
	Set port;
	Get address;
	Set address;
	Get error pages;
	Set error pages;
	Add error pages;
	Get ssl;
	Set ssl;
	Get ssl store provider;
	Set ssl store provider;
	Get abstract configurable web server factory;
	Set http 2;
	Get compression;
	Set compression;
	Get server header;
	Set server header;
	Create temp dir

353.2. Add a class for compression. It allows to:

	Enabled compression;
	Get mime types;
	Set mime types;
	Get excluded user agents;
	Set excluded user agents;
	Get min response size;
	Set min response size

353.3. Add a class for compression tests. It allows to:

	Handle default compressable mime types matches tomcats default;
	Get tomcat default compressable mime types

353.4. Add an interface declaration  for configurable web server factory. It allows to:

	Set port;
	Set address;
	Set error pages;
	Set ssl;
	Set ssl store provider;
	Set http 2;
	Set compression;
	Set server header

353.5. Add a class for error page. It allows to:

	Instantiate error page;
	Instantiate error page  with http status;
	Instantiate error page  with exception class;
	Get path;
	Get exception;
	Get status;
	Get status code;
	Get exception name;
	Check if error page is global;
	Check if error page equals;
	Hash code

353.6. Add an interface declaration  for error page registrar. It allows to:

	Register error pages

353.7. Add a class for error page registrar bean post processor. It allows to:

	Set bean factory;
	Post process  before initialization;
	Post process  after initialization;
	Get registrars

353.8. Add an interface declaration  for error page registry. It allows to:

	Add error pages

353.9. Add a class for mime mappings tests. It allows to:

	Handle defaults can not be modified;
	Create mime mappings tests from existing;
	Create mime mappings tests from map;
	Iterate mime mappings tests;
	Get mime mappings tests;
	Add new;
	Add mime mappings tests;
	Remove mime mappings tests;
	Missing mime mappings tests;
	Make unmodifiable

353.10. Add a class for port in use exception. It allows to:

	Instantiate port in use exception;
	Get port

353.11. Add a class for ssl. It allows to:

	Check if ssl is enabled;
	Enabled ssl;
	Get client  auth;
	Set client  auth client auth;
	Get ciphers;
	Set ciphers;
	Get enabled protocols;
	Set enabled protocols;
	Get key alias;
	Set key alias;
	Get key password;
	Set key password;
	Get key store;
	Set key store;
	Get key store password;
	Set key store password;
	Get key store type;
	Set key store type;
	Get key store provider;
	Set key store provider;
	Get trust store;
	Set trust store;
	Get trust store password;
	Set trust store password;
	Get trust store type;
	Set trust store type;
	Get trust store provider;
	Set trust store provider;
	Get protocol;
	Set protocol

353.12. Add an interface declaration  for ssl store provider. It allows to:

	Get key store;
	Get trust store

353.13. Add an interface declaration  for web server. It allows to:

	Start web server;
	Stop web server;
	Get port

353.14. Add a class for web server exception. It allows to:

	Instantiate web server exception  with cause throwable

353.15. Add an interface declaration  for web server factory

353.16. Add an interface declaration  for web server factory customizer. It allows to:

	Customize factory

353.17. Add a class for web server factory customizer bean post processor. It allows to:

	Set bean factory;
	Post process  before initialization;
	Post process  after initialization;
	Get customizers;
	Get web server factory customizer beans

354. Changes to package org.springframework.boot.web.servlet:  

354.1. Add a class for abstract filter registration bean. It allows to:

	Instantiate abstract filter registration bean  with servlet registration beans;
	Set servlet registration beans;
	Get servlet registration beans;
	Add servlet registration beans;
	Set servlet names;
	Get servlet names;
	Add servlet names;
	Set url patterns;
	Get url patterns;
	Add url patterns;
	Set dispatcher types;
	Set match  after;
	Check if abstract filter registration bean is match after;
	Get description;
	Add registration;
	Configure filter registration dynamic;
	Get filter;
	Convert abstract filter registration bean to string

354.2. Add a class for abstract filter registration bean tests. It allows to:

	Handle setup mocks;
	Handle startup with defaults;
	Handle startup with specified values;
	Handle specific name;
	Get deduced name;
	Disable abstract filter registration bean tests;
	Set servlet registration bean must  not be null;
	Add servlet registration bean must  not be null;
	Set servlet registration bean replaces value;
	Modify init parameters;
	Set url pattern must  not be null;
	Add url pattern must  not be null;
	Set servlet name must  not be null;
	Add servlet name must  not be null;
	Process abstract filter registration bean tests abstract filter registration bean tests with specific dispatcher types;
	Process abstract filter registration bean tests abstract filter registration bean tests with specific dispatcher types enum set;
	Get expected filter;
	Create filter registration bean;
	Handle mock servlet registration

354.3. Add a class for delegating filter proxy registration bean. It allows to:

	Instantiate delegating filter proxy registration bean  with servlet registration beans;
	Set application context;
	Get target bean name;
	Get filter;
	Handle init filter bean;
	Get web application context

354.4. Add a class for filter registration bean. It allows to:

	Instantiate filter registration bean;
	Instantiate filter registration bean  with filter, servlet registration beans and servlet registration beans;
	Get filter;
	Set filter

354.5. Add a class for filter registration bean tests. It allows to:

	Set filter;
	Set filter must  not be null;
	Construct filter must  not be null;
	Create servlet registration bean must  not be null;
	Create filter registration bean;
	Get expected filter

354.6. Rename type MultipartConfigFactory with MultipartConfigFactory

354.7. Rename type MultipartConfigFactoryTests with MultipartConfigFactoryTests

354.8. Add a class for registration bean. It allows to:

	Process registration bean registration bean on startup;
	Get description;
	Register servlet context;
	Enabled registration bean;
	Check if registration bean is enabled;
	Get set order;
	Get order

354.9. Add a class for servlet component handler. It allows to:

	Instantiate servlet component handler  with annotation type class;
	Get type filter;
	Extract url patterns;
	Extract init parameters;
	Handle scanned generic bean definition;
	Handle attributes map

354.10. Add a class for servlet component registering post processor. It allows to:

	Instantiate servlet component registering post processor  with packages to scan set;
	Post process bean factory;
	Scan package;
	Check if servlet component registering post processor is running in embedded web server;
	Create component provider;
	Get packages  to scan;
	Set application context

354.11. Add a class for servlet component scan registrar. It allows to:

	Register bean definitions;
	Update post processor;
	Add post processor;
	Get packages  to scan

354.12. Add an interface declaration  for servlet context initializer. It allows to:

	Process servlet context initializer servlet context initializer on startup

354.13. Add a class for servlet listener registration bean. It allows to:

	Instantiate servlet listener registration bean;
	Instantiate servlet listener registration bean  with listener;
	Set listener;
	Get listener;
	Get description;
	Register servlet context;
	Check if servlet listener registration bean is supported type;
	Get supported types

354.14. Add a class for servlet listener registration bean tests. It allows to:

	Handle setup mocks;
	Handle startup with defaults;
	Disable servlet listener registration bean tests;
	Can servlet listener registration bean tests not register unsupported type

354.15. Add a class for servlet registration bean. It allows to:

	Instantiate servlet registration bean;
	Instantiate servlet registration bean  with servlet;
	Set servlet;
	Get servlet;
	Set url mappings;
	Get url mappings;
	Add url mappings;
	Set load  on startup;
	Set multipart config;
	Get multipart config;
	Get description;
	Add registration;
	Configure servlet registration dynamic;
	Get servlet name;
	Convert servlet registration bean to string

354.16. Add a class for servlet registration bean tests. It allows to:

	Handle setup mocks;
	Handle startup with defaults;
	Handle startup with double registration;
	Handle startup with specified values;
	Handle specific name;
	Get deduced name;
	Disable servlet registration bean tests;
	Set servlet must  not be null;
	Create servlet must  not be null;
	Set mapping must  not be null;
	Create mapping must  not be null;
	Add mapping must  not be null;
	Set mapping replaces value;
	Modify init parameters;
	Process servlet registration bean tests servlet registration bean tests without default mappings

354.17. Rename type WebFilterHandler with WebFilterHandler

354.18. Rename type WebListenerHandler with WebListenerHandler

354.19. Rename type WebServletHandler with WebServletHandler

355. Changes to package org.springframework.boot.web.servlet.context:  

355.1. Add a class for annotation config servlet web server application context. It allows to:

	Instantiate annotation config servlet web server application context;
	Instantiate annotation config servlet web server application context  with default listable bean factory;
	Instantiate annotation config servlet web server application context  with annotated classes;
	Set environment;
	Set bean name generator;
	Set scope metadata resolver;
	Register annotated classes;
	Scan annotation config servlet web server application context;
	Refresh annotation config servlet web server application context;
	Post process bean factory

355.2. Add a class for servlet web server initialized event. It allows to:

	Instantiate servlet web server initialized event  with web server, servlet web server application context and servlet web server application context;
	Get application context

355.3. Add a class for web application context servlet context aware processor. It allows to:

	Instantiate web application context servlet context aware processor  with configurable web application context;
	Get servlet context;
	Get servlet config

355.4. Add a class for xml servlet web server application context. It allows to:

	Instantiate xml servlet web server application context;
	Instantiate xml servlet web server application context  with resources;
	Instantiate xml servlet web server application context  with relative class;
	Validating xml servlet web server application context;
	Set environment;
	Handle load;

355.5. Add a class for xml servlet web server application context tests. It allows to:

	Create xml servlet web server application context tests from resource;
	Create xml servlet web server application context tests from resource location;
	Create xml servlet web server application context tests from relative resource location;
	Handle load and refresh from resource;
	Handle load and refresh from resource location;
	Handle load and refresh from relative resource location;
	Verify context

356. Changes to package org.springframework.boot.web.servlet.context.config:  

356.1. Add an object creator class for example servlet web server application configuration. It allows to:

	Get web server factory;
	Get servlet

357. Changes to package org.springframework.boot.web.servlet.error:  

357.1. Add a class for default error attributes. It allows to:

	Instantiate default error attributes;
	Get order;
	Resolve exception;
	Handle store error attributes;
	Get error attributes;
	Add status;
	Add error details;
	Add error message;
	Extract binding result;
	Add error attributes map;
	Add path;
	Get error;
	Get attribute

357.2. Add a class for default error attributes tests. It allows to:

	Include time stamp;
	Handle specific status code;
	Missing status code;
	Handle mvc error;
	Handle servlet error;
	Handle servlet message;
	Handle null message;
	Handle unwrap servlet exception;
	Get error;
	Extract binding result errors;
	Extract method argument  not valid exception binding result errors;
	Handle test binding result;
	Process default error attributes tests default error attributes tests with exception attribute;
	Trace default error attributes tests;
	Handle path

357.3. Add an interface declaration  for error attributes. It allows to:

	Get error attributes;
	Get error

357.4. Add an interface declaration  for error controller. It allows to:

	Get error path

358. Changes to package org.springframework.boot.web.servlet.filter:  

358.1. Add a class for application context header filter. It allows to:

	Instantiate application context header filter  with application context;
	Do filter internal

358.2. Add a class for ordered character encoding filter. It allows to:

	Get order;
	Get set order

358.3. Add a class for ordered hidden http method filter. It allows to:

	Get order;
	Get set order

358.4. Add a class for ordered request context filter. It allows to:

	Get order;
	Get set order

359. Changes to package org.springframework.boot.web.servlet.mock:  

359.1. Add a class for mock filter. It allows to:

	Handle init;
	Do filter;
	Destroy mock filter

359.2. Add a class for mock servlet. It allows to:

	Handle service

360. Changes to package org.springframework.boot.web.servlet.server:  

360.1. Add an interface declaration  for configurable servlet web server factory. It allows to:

	Set context path;
	Set display name;
	Set session;
	Set register default servlet;
	Set mime mappings;
	Set document root;
	Set initializers;
	Add initializers;
	Set jsp;
	Set locale charset mappings;
	Set init parameters

360.2. Add a class for document root. It allows to:

	Instantiate document root  with logger;
	Get directory;
	Set directory;
	Get valid directory;
	Get war file document root;
	Get archive file document root;
	Get exploded war file document root;
	Get code source archive;
	Get common document root;
	Log no document roots

360.3. Add a class for document root tests. It allows to:

	Get exploded war file document root when running from exploded war;
	Get exploded war file document root when running from packaged war;
	Code source archive path;
	Code source archive path containing spaces

360.4. Add a class for jsp. It allows to:

	Instantiate jsp;
	Get class name;
	Set class name;
	Get init parameters;
	Set init parameters;
	Registered jsp;

360.5. Add an interface declaration  for servlet web server factory. It allows to:

	Get web server

360.6. Add a class for session store directory. It allows to:

	Get directory;
	Set directory;
	Get valid directory;
	Assert directory

360.7. Add a class for static resource jars. It allows to:

	Get urls;
	Get urls  from urls;
	Convert static resource jars to url;
	Convert static resource jars to file;
	Add url;
	Add url file;
	Add url connection;
	Check if static resource jars is resources jar;

361. Changes to package org.springframework.boot.web.servlet.support:  

361.1. Add an object creator class for error page filter configuration. It allows to:

	Get error page filter

361.2. Add a class for servlet context application context initializer. It allows to:

	Instantiate servlet context application context initializer  with servlet context;
	Get set order;
	Get order;
	Initialize configurable web application context

361.3. Add a class for servlet context application context initializer tests. It allows to:

	Handle servlet context is set on the application context;
	Handle application context is not stored in servlet context by default;
	Handle application context can be stored in servlet context

362. Changes to package org.springframework.boot.web.servlet.testcomponents:  

362.1. Rename type TestFilter with TestFilter

362.2. Rename type TestListener with TestListener

362.3. Rename type TestMultipartServlet with TestMultipartServlet

362.4. Rename type TestServlet with TestServlet

363. Changes to package org.springframework.boot.web.servlet.view:  

363.1. Add a class for mustache view. It allows to:

	Set compiler;
	Set charset;
	Check resource;
	Render merged template model;
	Create template;
	Get reader

363.2. Add a class for mustache view resolver. It allows to:

	Instantiate mustache view resolver;
	Instantiate mustache view resolver  with compiler;
	Get required view class;
	Set charset;
	Build view

363.3. Add a class for mustache view resolver tests. It allows to:

	Handle init;
	Resolve mustache view resolver tests non existent;
	Existing mustache view resolver tests;
	Handle sets content type

363.4. Add a class for mustache view tests. It allows to:

	Handle init;
	View resolves handlebars

364. Changes to package org.test:  

364.1. Rename type SampleApplication with SampleApplication

365. Changes to package sample:  

365.1. Add a class for message controller. It allows to:

	Hello message controller

365.2. Rename type SampleController with SampleController

365.3. Add a class for sample glassfish deploy application

365.4. Rename type SampleGlassfishDeployApplicationIT with SampleGlassfishDeployApplicationIT

365.5. Add a class for sample junit jupiter application. It allows to:

	Handle main

365.6. Add a class for sample junit jupiter application tests. It allows to:

	Handle test message

365.7. Add a class for sample tom EE deploy application. It allows to:

	Configure spring application builder

365.8. Rename type SampleTomEEDeployApplicationIT with SampleTomEEDeployApplicationIT

365.9. Add a class for sample tomcat deploy application

365.10. Rename type SampleTomcatDeployApplicationIT with SampleTomcatDeployApplicationIT

365.11. Add a class for sample wild fly deploy application

365.12. Rename type SampleWildFlyDeployApplicationIT with SampleWildFlyDeployApplicationIT

365.13. Add a class for sample wlp deploy application

365.14. Rename type SampleWlpDeployApplicationIT with SampleWlpDeployApplicationIT

366. Changes to package sample.actuator:  

366. Changes to package sample.actuator.customsecurity:  

366.1. Add a class for cors sample actuator application tests. It allows to:

	Set cors sample actuator application tests;
	Handle endpoint should return unauthorized;
	Handle preflight request to endpoint should return ok;
	Handle preflight request when cors config invalid should return forbidden

366.2. Add a class for example controller. It allows to:

	Get home;
	Get foo

366.3. Add a class for sample actuator custom security application. It allows to:

	Handle main

366.4. Add a class for sample actuator custom security application tests. It allows to:

	Handle home is secure;
	Handle test insecure application path;
	Handle test insecure static resources;
	Handle actuator insecure endpoint;
	Handle actuator links is secure;
	Handle actuator secure endpoint with anonymous;
	Handle actuator secure endpoint with unauthorized user;
	Handle actuator secure endpoint with authorized user;
	Handle actuator custom mvc secure endpoint with anonymous;
	Handle actuator custom mvc secure endpoint with unauthorized user;
	Handle actuator custom mvc secure endpoint with authorized user;
	Handle actuator excluded from endpoint request matcher;
	Handle mvc matchers can be used to secure actuators;
	Rest template;
	Admin rest template;
	Get user rest template;
	Get beans rest template;
	Configure test rest template

366.5. Add a class for security configuration. It allows to:

	Process security configuration security configuration in memory user details manager;
	Configure http security

367. Changes to package sample.actuator.log4j2:  

367. Changes to package sample.actuator.noweb:  

367. Changes to package sample.actuator.ui:  

367. Changes to package sample.data.cassandra:  

367. Changes to package sample.data.couchbase:  

367. Changes to package sample.data.elasticsearch:  

367. Changes to package sample.data.jpa:  

367. Changes to package sample.data.jpa.domain:  

367. Changes to package sample.data.jpa.service:  

367. Changes to package sample.data.neo4j:  

367. Changes to package sample.data.rest:  

367. Changes to package sample.data.rest.domain:  

367. Changes to package sample.data.rest.service:  

367. Changes to package sample.flyway:  

367. Changes to package sample.freemarker:  

367. Changes to package sample.groovytemplates:  

367. Changes to package sample.groovytemplates.mvc:  

367. Changes to package sample.hateoas.domain:  

367. Changes to package sample.hateoas.web:  

367. Changes to package sample.integration.consumer:  

367. Changes to package sample.jersey:  

367. Changes to package sample.jetty:  

367. Changes to package sample.jetty.jsp:  

367. Changes to package sample.jetty.ssl:  

367. Changes to package sample.jndi:  

367. Changes to package sample.jpa:  

367. Changes to package sample.jpa.domain:  

367. Changes to package sample.jpa.repository:  

367. Changes to package sample.jsp:  

367. Changes to package sample.layout:  

367. Changes to package sample.mustache:  

367. Changes to package sample.oauth2.client:  

367.1. Add a class for example controller. It allows to:

	Email principal

367.2. Add a class for sample O auth 2 client application. It allows to:

	Handle main

367.3. Add a class for sample O auth 2 client application tests. It allows to:

	Convert everything should redirect;
	Convert login should have all O auth

368. Changes to package sample.parent.consumer:  

368. Changes to package sample.propertyvalidation:  

368. Changes to package sample.quartz:  

368.1. Add a class for sample job. It allows to:

	Set name;
	Execute internal

368.2. Add a class for sample quartz application. It allows to:

	Handle main;
	Get sample job detail;
	Get sample job trigger

369. Changes to package sample.secure:  

369. Changes to package sample.secure.webflux:  

369.1. Add a class for echo handler. It allows to:

	Echo server request

369.2. Add a class for sample secure web flux application. It allows to:

	Handle main;
	Get mono router function

369.3. Add a class for sample secure web flux application tests. It allows to:

	Handle user defined mappings secure by default;
	Handle health insecure by default;
	Info insecure  by default;
	Handle other actuators secure by default;
	Handle user defined mappings accessible on login;
	Handle actuators accessible on login;
	Get basic auth

369.4. Add a class for welcome controller. It allows to:

	Welcome principal

370. Changes to package sample.security.method:  

370. Changes to package sample.servlet:  

370. Changes to package sample.session:  

370.1. Add a class for hello rest controller. It allows to:

	Get uid

370.2. Add a class for sample session application. It allows to:

	Handle main

370.3. Add a class for sample session application tests. It allows to:

	Handle session expiry;
	Create context;
	First request;
	Handle next request

371. Changes to package sample.test.web:  

371. Changes to package sample.tomcat:  

371. Changes to package sample.tomcat.jsp:  

371. Changes to package sample.tomcat.multiconnector:  

371. Changes to package sample.traditional.config:  

371. Changes to package sample.undertow:  

371. Changes to package sample.war:  

371. Changes to package sample.web.secure:  

371. Changes to package sample.web.secure.custom:  

371. Changes to package sample.web.secure.jdbc:  

371. Changes to package sample.web.staticcontent:  

371. Changes to package sample.web.ui:  

371. Changes to package sample.webflux:  

371.1. Add a class for echo handler. It allows to:

	Echo server request

371.2. Add a class for sample web flux application. It allows to:

	Handle main;
	Get mono router function

371.3. Add a class for sample web flux application tests. It allows to:

	Handle test welcome;
	Handle test echo;
	Handle test actuator status

371.4. Add a class for welcome controller. It allows to:

	Welcome welcome controller

372. Changes to package sample.webservices:  

372. Changes to package sample.xml:  

372. Changes to package sampleconfig:  

372.1. Rename type MyComponentInPackageWithoutDot with MyComponentInPackageWithoutDot

373. Changes to package samples.websocket.jetty:  

373. Changes to package samples.websocket.jetty.snake:  

373. Changes to package samples.websocket.tomcat:  

373. Changes to package samples.websocket.tomcat.snake:  

373. Changes to package samples.websocket.undertow:  

373. Changes to package samples.websocket.undertow.snake:  

