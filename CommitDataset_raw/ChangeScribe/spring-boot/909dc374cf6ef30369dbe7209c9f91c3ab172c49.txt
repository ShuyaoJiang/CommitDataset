BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (.gitignore, .travis.yml, pom.xml, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package sample.activemq:  

1.1. Add a class for consumer. It allows to:

	Receive queue

1.2. Add a class for producer. It allows to:

	Run producer;
	Send producer

1.3. Add a class for sample active MQ application. It allows to:

	Queue sample active MQ application;
	Handle main

1.4. Add a class for sample active mq tests. It allows to:

	Send simple message

2. Changes to package sample.actuator:  

2. Changes to package sample.actuator.noweb:  

2.1. Add a class for hello world service. It allows to:

	Instantiate hello world service  with configuration service properties;
	Get hello message

2.2. Add a class for sample actuator no web application. It allows to:

	Handle main

2.3. Add a class for sample actuator no web application tests. It allows to:

	Handle context loads

2.4. Add a class for service properties. It allows to:

	Get name;
	Set name

3. Changes to package sample.actuator.ui:  

3. Changes to package sample.amqp:  

3. Changes to package sample.aop:  

3. Changes to package sample.atmosphere:  

3.1. Add a class for message. It allows to:

	Get message;
	Set message;
	Get author;
	Set author;
	Get time;
	Set time

4. Changes to package sample.batch:  

4. Changes to package sample.cache:  

4.1. Add a class for cache manager check. It allows to:

	Instantiate cache manager check  with cache manager;
	Run cache manager check

4.2. Add a class for country. It allows to:

	Instantiate country;
	Get code;
	Check if country equals;
	Hash code

4.3. Add an object creator class for country repository. It allows to:

	Find country repository by code

4.4. Add a class for sample cache application. It allows to:

	Handle main

4.5. Add a class for sample cache application tests. It allows to:

	Validate cache

4.6. Add a class for sample client. It allows to:

	Instantiate sample client  with country repository;
	Retrieve country

5. Changes to package sample.data.elasticsearch:  

5. Changes to package sample.data.mongo:  

5. Changes to package sample.data.redis:  

5. Changes to package sample.devtools:  

5.1. Add a class for message. It allows to:

	Instantiate message

5.2. Add a class for my controller. It allows to:

	Restart my controller;
	Get http session

5.3. Add a class for sample dev tools application. It allows to:

	Handle main

6. Changes to package sample.flyway:  

6.1. Add a class for person. It allows to:

	Get person first name;
	Set first name;
	Get last name;
	Get set last name;
	Convert person to string

6.2. Add an interface declaration  for person repository

7. Changes to package sample.groovytemplates:  

7.1. Add a class for message. It allows to:

	Get id;
	Set id;
	Created message;
	Created created date;
	Get text;
	Set text;
	Get summary;
	Set summary

7.2. Add an interface declaration  for message repository. It allows to:

	Find message repository;
	Save message;
	Find message

7.3. Add a class for sample groovy template application. It allows to:

	Get message repository;
	Get message converter;
	Convert;
	Handle main

7.4. Add a class for sample groovy template application tests. It allows to:

	Handle test home;
	Handle test create;
	Handle test css

8. Changes to package sample.groovytemplates.mvc:  

8.1. Add a class for message controller. It allows to:

	Instantiate message controller  with message repository;
	Get list;
	View message;
	Create form;
	Create message;
	Get field errors;
	Get foo

9. Changes to package sample.hateoas:  

9.1. Add a class for sample hateoas application. It allows to:

	Handle main

9.2. Add a class for sample hateoas application tests. It allows to:

	Check if sample hateoas application tests has hal links;
	Check if sample hateoas application tests produces json when xml is preferred

10. Changes to package sample.hateoas.domain:  

10.1. Add a class for customer. It allows to:

	Instantiate customer;
	Get id;
	Get customer first name;
	Get last name

10.2. Add an interface declaration  for customer repository. It allows to:

	Find customer repository;

10.3. Add a class for in memory customer repository. It allows to:

	Instantiate in memory customer repository;
	Find in memory customer repository;

11. Changes to package sample.hateoas.web:  

11.1. Add an object creator class for customer controller. It allows to:

	Instantiate customer controller  with customer repository, entity links and entity links;
	Show customers;
	Show customer

12. Changes to package sample.jetty.ssl:  

12.1. Add a class for sample jetty ssl application. It allows to:

	Handle main

12.2. Add a class for sample jetty ssl application tests. It allows to:

	Handle test ssl;
	Handle test home

13. Changes to package sample.jetty.ssl.web:  

13.1. Add a class for sample controller. It allows to:

	Hello world

14. Changes to package sample.jooq:  

14.1. Add a class for jooq examples. It allows to:

	Instantiate jooq examples  with DSL context, jdbc template and jdbc template;
	Run jooq examples;
	Handle jooq fetch;
	Handle jooq sql;
	Map row

14.2. Add a class for sample jooq application. It allows to:

	Handle main

14.3. Add a class for sample jooq application tests. It allows to:

	Handle output results

15. Changes to package sample.jooq.domain:  

15.1. Add a class for public. It allows to:

	Instantiate public;
	Get catalog;
	Get tables;
	Get tables 0

15.2. Add a class for tables

16. Changes to package sample.profile:  

16. Changes to package sample.security.method:  

16.1. Add a class for sample method security application tests. It allows to:

	Handle test home;
	Handle test login;
	Handle test denied;
	Handle test management protected;
	Handle test management authorized access;
	Get csrf

17. Changes to package sample.servlet:  

17. Changes to package sample.simple:  

17. Changes to package sample.tomcat.jsp:  

17.1. Add a class for sample tomcat jsp application. It allows to:

	Configure spring application builder;
	Handle main

17.2. Add a class for sample web jsp application tests. It allows to:

	Handle test jsp with el

17.3. Add a class for welcome controller. It allows to:

	Welcome model map;
	Fail welcome controller;
	Handle my runtime exception

18. Changes to package sample.tomcat.multiconnector:  

18.1. Add a class for sample tomcat two connectors application. It allows to:

	Get servlet container;
	Create standard connector;
	Handle main

19. Changes to package sample.tomcat.multiconnector.web:  

19.1. Add a class for sample controller. It allows to:

	Hello world

20. Changes to package sample.tomcat.ssl:  

20.1. Add a class for sample tomcat ssl application. It allows to:

	Handle main

21. Changes to package sample.tomcat.ssl.web:  

21.1. Add a class for sample controller. It allows to:

	Hello world

22. Changes to package sample.undertow.ssl:  

22.1. Add a class for sample undertow ssl application. It allows to:

	Handle main

22.2. Add a class for sample undertow ssl application tests. It allows to:

	Handle test ssl;
	Handle test home

23. Changes to package sample.undertow.ssl.web:  

23.1. Add a class for sample controller. It allows to:

	Hello world

24. Changes to package sample.web.secure:  

24.1. Add a class for sample secure application tests. It allows to:

	Handle test home;
	Handle test login page;
	Handle test login;
	Get headers;
	Handle test css

25. Changes to package sample.web.staticcontent:  

25.1. Add a class for sample web static application. It allows to:

	Configure spring application builder;
	Handle main

26. Changes to package sample.web.ui:  

26.1. Add a class for in memory message repository. It allows to:

	Find in memory message repository;
	Save message;
	Find message;
	Delete message

26.2. Add a class for message. It allows to:

	Get id;
	Set id;
	Created message;
	Created created calendar;
	Get text;
	Set text;
	Get summary;
	Set summary

26.3. Add an interface declaration  for message repository. It allows to:

	Find message repository;
	Save message;
	Find message;
	Delete message

26.4. Add a class for sample web ui application. It allows to:

	Get message repository;
	Get message converter;
	Convert;
	Handle main

27. Changes to package sample.web.ui.mvc:  

27.1. Add an object creator class for message controller. It allows to:

	Instantiate message controller  with message repository;
	Get list;
	View message;
	Create form;
	Create message;
	Get foo;
	Delete message controller;
	Modify form

28. Changes to package sample.xml:  

28. Changes to package samples.websocket.jetty:  

28.1. Add an object creator class for sample jetty web sockets application. It allows to:

	Register web socket handlers;
	Configure spring application builder;
	Echo service;
	Greeting service;
	Echo web socket handler;
	Get snake web socket handler;
	Reverse web socket endpoint;
	Handle server endpoint exporter;
	Handle main

29. Changes to package samples.websocket.jetty.client:  

29.1. Add an interface declaration  for greeting service. It allows to:

	Greeting greeting service

29.2. Add a class for simple client web socket handler. It allows to:

	Instantiate simple client web socket handler  with greeting service, count down latch, message atomic reference and message atomic reference;
	Handle after connection established;
	Handle text message

29.3. Add a class for simple greeting service. It allows to:

	Greeting simple greeting service

30. Changes to package samples.websocket.jetty.echo:  

30.1. Add a class for default echo service. It allows to:

	Instantiate default echo service;
	Get message

30.2. Add an interface declaration  for echo service. It allows to:

	Get message

30.3. Add a class for echo web socket handler. It allows to:

	Instantiate echo web socket handler  with echo service;
	Handle after connection established;
	Handle text message;
	Handle transport error

31. Changes to package samples.websocket.jetty.reverse:  

31.1. Add a class for reverse web socket endpoint. It allows to:

	Handle message

32. Changes to package samples.websocket.jetty.snake:  

32.1. Add a class for location. It allows to:

	Instantiate location;
	Get adjacent location;
	Check if location equals;
	Hash code

32.2. Add a class for snake. It allows to:

	Instantiate snake  with web socket session;
	Reset state;
	Kill snake;
	Reward snake;
	Send message;
	Update snakes collection;
	Handle collisions;
	Get head;
	Get tail;
	Set direction;
	Get locations json;
	Get id;
	Get hex color

32.3. Add a class for snake timer. It allows to:

	Instantiate snake timer;
	Add snake;
	Get snakes;
	Remove snake;
	Tick snake timer;
	Handle broadcast;
	Start timer;
	Run;
	Stop timer

32.4. Add a class for snake timer tests. It allows to:

	Remove dysfunctional snakes

32.5. Add a class for snake utils. It allows to:

	Instantiate snake utils;
	Get random hex color;
	Get random location;
	Get round by grid size

32.6. Add a class for snake web socket handler. It allows to:

	Get random hex color;
	Get random location;
	Get round by grid size;
	Instantiate snake web socket handler;
	Handle after connection established;
	Handle text message;
	Handle after connection closed

33. Changes to package samples.websocket.tomcat:  

33.1. Add an object creator class for sample tomcat web socket application. It allows to:

	Register web socket handlers;
	Configure spring application builder;
	Echo service;
	Greeting service;
	Echo web socket handler;
	Get snake web socket handler;
	Reverse web socket endpoint;
	Handle server endpoint exporter;
	Handle main

34. Changes to package samples.websocket.tomcat.client:  

34.1. Add an interface declaration  for greeting service. It allows to:

	Greeting greeting service

34.2. Add a class for simple client web socket handler. It allows to:

	Instantiate simple client web socket handler  with greeting service, count down latch, message atomic reference and message atomic reference;
	Handle after connection established;
	Handle text message

34.3. Add a class for simple greeting service. It allows to:

	Greeting simple greeting service

35. Changes to package samples.websocket.tomcat.echo:  

35.1. Add a class for default echo service. It allows to:

	Instantiate default echo service;
	Get message

35.2. Add an interface declaration  for echo service. It allows to:

	Get message

35.3. Add a class for echo web socket handler. It allows to:

	Instantiate echo web socket handler  with echo service;
	Handle after connection established;
	Handle text message;
	Handle transport error

36. Changes to package samples.websocket.tomcat.reverse:  

36.1. Add a class for reverse web socket endpoint. It allows to:

	Handle message

37. Changes to package samples.websocket.tomcat.snake:  

37.1. Add a class for location. It allows to:

	Instantiate location;
	Get adjacent location;
	Check if location equals;
	Hash code

37.2. Add a class for snake. It allows to:

	Instantiate snake  with web socket session;
	Reset state;
	Kill snake;
	Reward snake;
	Send message;
	Update snakes collection;
	Handle collisions;
	Get head;
	Get tail;
	Set direction;
	Get locations json;
	Get id;
	Get hex color

37.3. Add a class for snake timer. It allows to:

	Instantiate snake timer;
	Add snake;
	Get snakes;
	Remove snake;
	Tick snake timer;
	Handle broadcast;
	Start timer;
	Run;
	Stop timer

37.4. Add a class for snake timer tests. It allows to:

	Remove dysfunctional snakes

37.5. Add a class for snake utils. It allows to:

	Instantiate snake utils;
	Get random hex color;
	Get random location;
	Get round by grid size

37.6. Add a class for snake web socket handler. It allows to:

	Get random hex color;
	Get random location;
	Get round by grid size;
	Instantiate snake web socket handler;
	Handle after connection established;
	Handle text message;
	Handle after connection closed

38. Changes to package samples.websocket.undertow:  

38.1. Add an object creator class for sample undertow web sockets application. It allows to:

	Register web socket handlers;
	Configure spring application builder;
	Echo service;
	Greeting service;
	Echo web socket handler;
	Get snake web socket handler;
	Reverse web socket endpoint;
	Handle server endpoint exporter;
	Handle main

39. Changes to package samples.websocket.undertow.client:  

39.1. Add an interface declaration  for greeting service. It allows to:

	Greeting greeting service

39.2. Add a class for simple client web socket handler. It allows to:

	Instantiate simple client web socket handler  with greeting service, count down latch, message atomic reference and message atomic reference;
	Handle after connection established;
	Handle text message

39.3. Add a class for simple greeting service. It allows to:

	Greeting simple greeting service

40. Changes to package samples.websocket.undertow.echo:  

40.1. Add a class for default echo service. It allows to:

	Instantiate default echo service;
	Get message

40.2. Add an interface declaration  for echo service. It allows to:

	Get message

40.3. Add a class for echo web socket handler. It allows to:

	Instantiate echo web socket handler  with echo service;
	Handle after connection established;
	Handle text message;
	Handle transport error

41. Changes to package samples.websocket.undertow.reverse:  

41.1. Add a class for reverse web socket endpoint. It allows to:

	Handle message

42. Changes to package samples.websocket.undertow.snake:  

42.1. Add a class for location. It allows to:

	Instantiate location;
	Get adjacent location;
	Check if location equals;
	Hash code

42.2. Add a class for snake. It allows to:

	Instantiate snake  with web socket session;
	Reset state;
	Kill snake;
	Reward snake;
	Send message;
	Update snakes collection;
	Handle collisions;
	Get head;
	Get tail;
	Set direction;
	Get locations json;
	Get id;
	Get hex color

42.3. Add a class for snake timer. It allows to:

	Instantiate snake timer;
	Add snake;
	Get snakes;
	Remove snake;
	Tick snake timer;
	Handle broadcast;
	Start timer;
	Run;
	Stop timer

42.4. Add a class for snake timer tests. It allows to:

	Remove dysfunctional snakes

42.5. Add a class for snake utils. It allows to:

	Instantiate snake utils;
	Get random hex color;
	Get random location;
	Get round by grid size

42.6. Add a class for snake web socket handler. It allows to:

	Get random hex color;
	Get random location;
	Get round by grid size;
	Instantiate snake web socket handler;
	Handle after connection established;
	Handle text message;
	Handle after connection closed

