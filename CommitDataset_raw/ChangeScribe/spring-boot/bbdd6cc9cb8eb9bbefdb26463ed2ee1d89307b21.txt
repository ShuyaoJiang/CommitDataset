BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (.gitignore, .settings-template.xml, .travis.yml, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package cli.command:  

1.1. Add a class for custom command. It allows to:

	Instantiate custom command;
	Run custom command

1.2. Add a class for custom command factory. It allows to:

	Get commands

2. Changes to package com.example:  

2.1. Add a class for boot run application. It allows to:

	Instantiate boot run application;
	Handle main

2.2. Add a class for controller one. It allows to:

	One controller one

2.3. Add a class for dev tools test application. It allows to:

	Handle main

2.4. Add a class for resource handling application. It allows to:

	Handle main;
	Get resource servlet registration;
	Get http servlet request

3. Changes to package org.springframework.boot:  

3.1. Add a class for adhoc test suite

3.2. Add an interface declaration  for application arguments. It allows to:

	Get source args;
	Get option names;
	Check if application arguments contains option;
	Get option values;
	Get non option args

3.3. Add an interface declaration  for application runner. It allows to:

	Run args application arguments

3.4. Add an interface declaration  for banner. It allows to:

	Print banner

3.5. Add a class for bean definition loader tests. It allows to:

	Handle setup;
	Clean bean definition loader tests;
	Load class;
	Load xml resource;
	Load groovy resource;
	Load groovy resource  with namespace;
	Load package;
	Load class name;
	Load resource name;
	Load groovy name;
	Load package name;
	Load package name  without dot;
	Load package and class does  not double add

3.6. Add a class for clear caches application listener. It allows to:

	Process clear caches application listener clear caches application listener on application event;
	Handle clear class loader caches

3.7. Add an interface declaration  for command line runner. It allows to:

	Run command line runner

3.8. Add a class for default application arguments tests. It allows to:

	Handle arguments must not be null;
	Get args;
	Handle option names;
	Check if default application arguments tests contains option;
	Get option values;
	Get non option args;
	Get no non option args

3.9. Add a class for environment converter. It allows to:

	Instantiate environment converter  with class loader;
	Convert environment  if necessary;
	Convert environment;
	Create environment;
	Copy property sources;
	Check if environment converter is servlet environment;
	Remove property sources

3.10. Add a class for environment converter tests. It allows to:

	Handle converted environment has same active profiles;
	Handle converted environment has same conversion service;
	Env class same should return environment unconverted;
	Handle standard servlet environment is converted;
	Handle servlet property sources are not copied over if not web environment;
	Env class same should return environment unconverted  even for web;
	Handle servlet property sources are present when type to convert is web

3.11. Add a class for exit code event. It allows to:

	Instantiate exit code event;
	Get exit code

3.12. Add an interface declaration  for exit code exception mapper. It allows to:

	Get exit code

3.13. Add an interface declaration  for exit code generator. It allows to:

	Get exit code

3.14. Add a class for exit code generators tests. It allows to:

	Add all when generators is null should throw exception;
	Add when generator is null should throw exception;
	Get exit code when no generators should return zero;
	Get exit code when generator throws should return one;
	Get exit code when all negative should return lowest value;
	Get exit code when all positive should return highest value;
	Get exit code when using exit code exception mapper should call mapper;
	Handle mock generator;
	Handle mock mapper

3.15. Add a class for image banner tests. It allows to:

	Handle setup;
	Handle cleanup;
	Print banner should reset foreground and background;
	Print banner when inverted should reset foreground and background;
	Print banner should print white  as bright white high luminance;
	Print banner when inverted should print white  as bright white low luminance;
	Print banner should print black  as black low luminance;
	Print banner when inverted should print black  as black high luminance;
	Print banner when should print all colors;
	Print banner should render gradient;
	Print banner should calculate height;
	Print banner when has height property should set height;
	Print banner should cap width and calculate height;
	Print banner should print margin;
	Print banner when has margin property should print sized margin;
	Print banner when animates should print all frames;
	Get banner height;
	Get banner width;
	Print banner

3.16. Add a class for resource banner. It allows to:

	Instantiate resource banner  with resource;
	Print banner;
	Get property resolvers;
	Get version resolver;
	Get versions map;
	Get application version;
	Get boot version;
	Get version string;
	Get ansi resolver;
	Get title resolver;
	Get application title

3.17. Add a class for simple main tests. It allows to:

	Handle empty application context;
	Handle base package scan;
	Handle config class context;
	Handle xml context;
	Handle mixed context;
	Get args;
	Get output

3.18. Add a class for spring application. It allows to:

	Instantiate spring application  with primary sources class;
	Instantiate spring application  with resource loader, primary sources class and primary sources class;
	Deduce main application class;
	Run spring application;
	Prepare environment;
	Deduce environment class;
	Prepare context;
	Refresh context;
	Configure headless property;
	Get run listeners;
	Get spring factories instances;
	Create spring factories instances;
	Get or create environment;
	Configure environment;
	Configure property sources;
	Configure profiles;
	Configure ignore bean info;
	Convert bind;
	Print banner;
	Create application context;
	Post process application context;
	Apply initializers;
	Log startup info;
	Log startup profile info;
	Get application log;
	Handle load;
	Get resource loader;
	Get class loader;
	Get bean definition registry;
	Create bean definition loader;
	Refresh application context;
	Process spring application spring application after refresh;
	Call runners;
	Call runner;
	Handle run failure;
	Report failure;
	Register logged exception;
	Handle exit code;
	Get exit code  from exception;
	Get exit code  from mapped exception;
	Get exit code  from exit code generator exception;
	Get spring boot exception handler;
	Check if spring application is main thread;
	Get main application class;
	Set main application class;
	Get web application type;
	Set web application type;
	Set allow bean definition overriding;
	Set lazy initialization;
	Set headless;
	Set register shutdown hook;
	Set banner;
	Set banner mode;
	Set log startup info;
	Set add command line properties;
	Set add conversion service;
	Set default properties;
	Set additional profiles;
	Set bean name generator;
	Set environment;
	Add primary sources;
	Get sources;
	Set sources;
	Get all sources;
	Set resource loader;
	Set application context class;
	Set initializers;
	Add initializers;
	Get initializers;
	Set listeners;
	Add listeners;
	Get listeners;
	Run primary source class;
	Run primary sources class;
	Handle main;
	Get exit;
	Close spring application;
	Process spring application spring application as unmodifiable ordered set

3.19. Add an interface declaration  for spring application run listener. It allows to:

	Starting spring application run listener;
	Handle environment prepared;
	Handle context prepared;
	Handle context loaded;
	Get started;
	Running configurable application context;
	Get failed

3.20. Add a class for spring application run listeners. It allows to:

	Instantiate spring application run listeners  with log, listeners collection and listeners collection;
	Starting spring application run listeners;
	Handle environment prepared;
	Handle context prepared;
	Handle context loaded;
	Get started;
	Running configurable application context;
	Get failed;
	Call failed listener

3.21. Add a class for spring boot banner. It allows to:

	Print banner

3.22. Add a class for spring boot exception handler tests. It allows to:

	Handle uncaught exception does not forward logged error to parent;
	Handle uncaught exception forwards log configuration error to parent;
	Handle uncaught exception forwards wrapped log configuration error to parent

3.23. Add an interface declaration  for spring boot exception reporter. It allows to:

	Report exception

3.24. Add a class for spring boot version. It allows to:

	Instantiate spring boot version;
	Get version

3.25. Add a class for start up logger tests. It allows to:

	Handle source class included

3.26. Add a class for startup info logger. It allows to:

	Instantiate startup info logger  with source class;
	Starting log;
	Started log;
	Get startup message;
	Get running message;
	Get started message;
	Get application name;
	Get version;
	Get startup info logger on;
	Get pid;
	Get context;
	Get value;

4. Changes to package org.springframework.boot.actuate:  

4.1. Add a class for actuator configuration class tests

4.2. Add a class for adhoc test suite

5. Changes to package org.springframework.boot.actuate.amqp:  

5.1. Add a class for rabbit health indicator. It allows to:

	Instantiate rabbit health indicator  with rabbit template;
	Do health check;
	Get version

5.2. Add a class for rabbit health indicator tests. It allows to:

	Handle setup;
	Create when rabbit template is null should throw exception;
	Handle health when connection succeeds should return up with version;
	Handle health when connection fails should return down

6. Changes to package org.springframework.boot.actuate.audit:  

6.1. Add a class for audit event. It allows to:

	Instantiate audit event  with data map;
	Instantiate audit event;
	Instantiate audit event  with timestamp instant, data map and data map;
	Convert audit event;
	Get timestamp;
	Get principal;
	Get type;
	Get data;
	Convert audit event to string

6.2. Add an interface declaration  for audit event repository. It allows to:

	Add audit event;
	Find after instant

6.3. Add a class for audit event tests. It allows to:

	Now event;
	Convert strings  to data;
	Handle null principal is mapped to empty string;
	Handle null timestamp;
	Handle null type;
	Handle json format

6.4. Add a class for audit events endpoint tests. It allows to:

	Handle events with type;
	Handle events created after;
	Handle events with principal

6.5. Add a class for in memory audit event repository. It allows to:

	Instantiate in memory audit event repository;
	Set capacity;
	Add audit event;
	Find after instant;
	Check if in memory audit event repository is match;
	Resolve tail event

6.6. Add a class for in memory audit event repository tests. It allows to:

	Handle less than capacity;
	Handle capacity;
	Add null audit event;
	Find in memory audit event repository tests by principal;
	Find in memory audit event repository tests by principal and type;
	Find in memory audit event repository tests by date

7. Changes to package org.springframework.boot.actuate.audit.listener:  

7.1. Add a class for abstract audit listener. It allows to:

	Process abstract audit listener abstract audit listener on application event;
	Process abstract audit listener abstract audit listener on audit event

7.2. Add a class for audit application event. It allows to:

	Instantiate audit application event  with data map;
	Instantiate audit application event;
	Instantiate audit application event  with timestamp instant, data map and data map;
	Instantiate audit application event  with audit event;
	Get audit event

7.3. Add a class for audit listener. It allows to:

	Instantiate audit listener  with audit event repository;
	Process audit listener audit listener on audit event

7.4. Add a class for audit listener tests. It allows to:

	Handle test stored events

8. Changes to package org.springframework.boot.actuate.autoconfigure:  

8.1. Add an object creator class for on endpoint element condition. It allows to:

	Instantiate on endpoint element condition  with annotation type class;
	Get match outcome;
	Get endpoint outcome;
	Get default endpoints outcome

9. Changes to package org.springframework.boot.actuate.autoconfigure.amqp:  

9.1. Add a class for rabbit health indicator auto configuration. It allows to:

	Get rabbit health indicator

9.2. Add a class for rabbit health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

10. Changes to package org.springframework.boot.actuate.autoconfigure.audit:  

10.1. Add an object creator class for audit events endpoint auto configuration. It allows to:

	Audit events endpoint

10.2. Add a class for audit events endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint

11. Changes to package org.springframework.boot.actuate.autoconfigure.beans:  

11.1. Add an object creator class for beans endpoint auto configuration. It allows to:

	Get beans endpoint

11.2. Add a class for beans endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint bean

12. Changes to package org.springframework.boot.actuate.autoconfigure.cassandra:  

12.1. Add a class for cassandra health indicator auto configuration. It allows to:

	Get cassandra health indicator

13. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry:  

13.1. Add a class for access level tests. It allows to:

	Handle access to health endpoint should not be restricted;
	Handle access to info endpoint should not be restricted;
	Handle access to discovery endpoint should not be restricted;
	Handle access to any other endpoint should be restricted

13.2. Add a class for cloud foundry authorization exception. It allows to:

	Instantiate cloud foundry authorization exception  with reason;
	Instantiate cloud foundry authorization exception  with reason, cause throwable and cause throwable;
	Get status code;
	Get reason;
	Get status

13.3. Add a class for cloud foundry authorization exception tests. It allows to:

	Handle status code for invalid token reason should be 401;
	Handle status code for invalid issuer reason should be 401;
	Handle status code for invalid audience reason should be 401;
	Handle status code for invalid signature reason should be 401;
	Handle status code for missing authorization reason should be 401;
	Handle status code for unsupported signature algorithm reason should be 401;
	Handle status code for token expired reason should be 401;
	Handle status code for access denied reason should be 403;
	Handle status code for service unavailable reason should be 503;
	Create exception

13.4. Add a class for cloud foundry endpoint filter. It allows to:

	Instantiate cloud foundry endpoint filter

13.5. Add a class for cloud foundry endpoint filter tests. It allows to:

	Match cloud foundry endpoint filter tests if discoverer cloud foundry should return false;
	Match cloud foundry endpoint filter tests if discoverer not cloud foundry should return false

13.6. Add a class for cloud foundry web endpoint discoverer. It allows to:

	Instantiate cloud foundry web endpoint discoverer  with application context, parameter value mapper, endpoint media types, endpoint path mappers list, invoker advisors collection, filters collection and filters collection;
	Check if cloud foundry web endpoint discoverer is extension exposed;
	Check if cloud foundry web endpoint discoverer is health endpoint extension;
	Check if cloud foundry web endpoint discoverer is cloud foundry health endpoint extension

13.7. Add a class for security response. It allows to:

	Instantiate security response  with http status;
	Get status;
	Get message;
	Get success

13.8. Add a class for token. It allows to:

	Instantiate token;
	Parse json;
	Get content;
	Get signature;
	Get signature algorithm;
	Get issuer;
	Get expiry;
	Get scope;
	Get key id;
	Required map;
	Convert token to string

13.9. Add a class for token tests. It allows to:

	Handle invalid jwt should throw exception;
	Handle invalid jwt claims should throw exception;
	Handle invalid jwt header should throw exception;
	Handle empty jwt signature should throw exception;
	Handle valid jwt;
	Get signature algorithm when alg is null should throw exception;
	Get issuer when iss is null should throw exception;
	Get kid when kid is null should throw exception;
	Get expiry when exp is null should throw exception;
	Create token;
	Get reason requirement

14. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive:  

14.1. Add a class for cloud foundry reactive health endpoint web extension. It allows to:

	Instantiate cloud foundry reactive health endpoint web extension  with delegate reactive health endpoint web extension;
	Get health

14.2. Add a class for cloud foundry reactive health endpoint web extension tests. It allows to:

	Handle health details always present

14.3. Add a class for cloud foundry security interceptor. It allows to:

	Instantiate cloud foundry security interceptor  with reactive token validator, reactive cloud foundry security service and reactive cloud foundry security service;
	Handle server web exchange;
	Log error;
	Check server web exchange;
	Get error response;
	Get token

14.4. Add a class for reactive cloud foundry security interceptor tests. It allows to:

	Handle setup;
	Pre handle when request is pre flight should be ok;
	Pre handle when token is missing should return missing authorization;
	Pre handle when token is  not bearer should return missing authorization;
	Pre handle when application id is null should return error;
	Pre handle when cloud foundry security service is null should return error;
	Pre handle when access is  not allowed should return access denied;
	Pre handle successful  with full access;
	Pre handle successful  with restricted access;
	Handle mock access token

14.5. Add a class for reactive cloud foundry security service. It allows to:

	Instantiate reactive cloud foundry security service  with web client builder;
	Build trust all ssl connector;
	Create ssl context;
	Get access level;
	Map error;
	Get permissions uri;
	Fetch token keys;
	Extract token keys;
	Get uaa url

14.6. Add a class for reactive cloud foundry security service tests. It allows to:

	Handle setup;
	Handle shutdown;
	Get access level when space developer should return full;
	Get access level when  not space developer should return restricted;
	Get access level when token is  not valid should throw exception;
	Get access level when forbidden should throw exception;
	Get access level when cloud controller is  not reachable throws exception;
	Fetch token keys when successful should return list  of keys from UAA;
	Fetch token keys when no keys returned  from UAA;
	Fetch token keys when unsuccessful should throw exception;
	Get uaa url should call cloud controller info  only once;
	Get uaa url when cloud controller url is  not reachable should throw exception;
	Prepare response;
	Expect request;
	Expect request count

14.7. Add a class for reactive token validator. It allows to:

	Instantiate reactive token validator  with reactive cloud foundry security service;
	Validate token;
	Validate algorithm;
	Validate key id and signature;
	Get token key;
	Handle cache token keys;
	Check if reactive token validator has valid signature;
	Get public key;
	Validate expiry;
	Validate issuer;
	Validate audience

14.8. Add a class for reactive token validator tests. It allows to:

	Handle setup;
	Validate token when kid validation fails  twice should throw exception;
	Validate token when kid validation succeeds  in the second attempt;
	Validate token when cache is empty should fetch token keys;
	Validate token when cache empty and invalid key should throw exception;
	Validate token when cache valid should  not fetch token keys;
	Validate token when signature invalid should throw exception;
	Validate token when token algorithm is  not RS 256 should throw exception;
	Validate token when expired should throw exception;
	Validate token when issuer is  not valid should throw exception;
	Validate token when audience is  not valid should throw exception;
	Get signed token;
	Get private key;
	Dot concat

15. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet:  

15.1. Add a class for cloud foundry health endpoint web extension. It allows to:

	Instantiate cloud foundry health endpoint web extension  with delegate health endpoint web extension;
	Get health

15.2. Add a class for cloud foundry health endpoint web extension tests. It allows to:

	Handle health details always present

15.3. Add an object creator class for cloud foundry security interceptor. It allows to:

	Instantiate cloud foundry security interceptor  with token validator, cloud foundry security service and cloud foundry security service;
	Handle http servlet request;
	Check http servlet request;
	Get token

15.4. Add a class for cloud foundry security interceptor tests. It allows to:

	Handle setup;
	Pre handle when request is pre flight should return true;
	Pre handle when token is missing should return false;
	Pre handle when token is  not bearer should return false;
	Pre handle when application id is null should return false;
	Pre handle when cloud foundry security service is null should return false;
	Pre handle when access is  not allowed should return false;
	Pre handle successful  with full access;
	Pre handle successful  with restricted access;
	Handle mock access token

15.5. Add a class for cloud foundry security service. It allows to:

	Instantiate cloud foundry security service  with rest template builder;
	Get access level;
	Get permissions uri;
	Fetch token keys;
	Extract token keys;
	Get uaa url

15.6. Add a class for cloud foundry security service tests. It allows to:

	Handle setup;
	Skip ssl validation when true;
	Do notskip ssl validation when false;
	Get access level when space developer should return full;
	Get access level when  not space developer should return restricted;
	Get access level when token is  not valid should throw exception;
	Get access level when forbidden should throw exception;
	Get access level when cloud controller is  not reachable throws exception;
	Fetch token keys when successful should return list  of keys from UAA;
	Fetch token keys when no keys returned  from UAA;
	Fetch token keys when unsuccessful should throw exception;
	Get uaa url should call cloud controller info  only once;
	Get uaa url when cloud controller url is  not reachable should throw exception;
	Get reason requirement

15.7. Add a class for skip ssl verification http request factory tests. It allows to:

	Handle shutdown container;
	Rest call  to self signed server should not throw ssl exception;
	Get https url;
	Get ssl

15.8. Add a class for token validator. It allows to:

	Instantiate token validator  with cloud foundry security service;
	Validate token;
	Validate algorithm;
	Validate key id and signature;
	Check if token validator has valid key id;
	Check if token validator has valid signature;
	Get public key;
	Validate expiry;
	Validate issuer;
	Validate audience

15.9. Add a class for token validator tests. It allows to:

	Handle setup;
	Validate token when kid validation fails  twice should throw exception;
	Validate token when kid validation succeeds  in the second attempt;
	Validate token should fetch token keys  if null;
	Validate token when valid should  not fetch token keys;
	Validate token when signature invalid should throw exception;
	Validate token when token algorithm is  not RS 256 should throw exception;
	Validate token when expired should throw exception;
	Validate token when issuer is  not valid should throw exception;
	Validate token when audience is  not valid should throw exception;
	Get signed token;
	Get private key;
	Dot concat;
	Get reason requirement

16. Changes to package org.springframework.boot.actuate.autoconfigure.condition:  

16.1. Add an object creator class for conditions report endpoint auto configuration. It allows to:

	Get conditions report endpoint

16.2. Add a class for conditions report endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint bean

17. Changes to package org.springframework.boot.actuate.autoconfigure.context:  

17.1. Add an object creator class for shutdown endpoint auto configuration. It allows to:

	Get shutdown endpoint

17.2. Add a class for shutdown endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint bean

18. Changes to package org.springframework.boot.actuate.autoconfigure.context.properties:  

18.1. Add a class for configuration properties report endpoint auto configuration. It allows to:

	Get configuration properties report endpoint

18.2. Add a class for configuration properties report endpoint properties. It allows to:

	Get keys  to sanitize;
	Set keys  to sanitize

19. Changes to package org.springframework.boot.actuate.autoconfigure.couchbase:  

19.1. Add a class for couchbase health indicator auto configuration. It allows to:

	Handle couchbase health indicator;
	Create health indicator

19.2. Add a class for couchbase health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

20. Changes to package org.springframework.boot.actuate.autoconfigure.elasticsearch:  

20.1. Add a class for elasticsearch health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when using jest client should create indicator;
	Run when disabled should  not create indicator

20.2. Add a class for elasticsearch health indicator properties. It allows to:

	Get indices;
	Set indices;
	Get response timeout;
	Set response timeout

21. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint:  

21.1. Add an object creator class for endpoint auto configuration. It allows to:

	Get endpoint operation parameter mapper;
	Get endpoint caching operation invoker advisor

21.2. Add a class for endpoint id time to live property function. It allows to:

	Instantiate endpoint id time to live property function  with environment;
	Apply endpoint id

21.3. Add a class for endpoint id time to live property function tests. It allows to:

	Handle default configuration;
	Handle user configuration;
	Handle mixed case user configuration

21.4. Add a class for expose exclude property endpoint filter. It allows to:

	Instantiate expose exclude property endpoint filter  with endpoint type class, environment and environment;
	Instantiate expose exclude property endpoint filter  with endpoint type class, include collection, exclude collection and exclude collection;
	Get bind;
	Get cleanup;
	Handle as set;
	Match endpoint;
	Check if expose exclude property endpoint filter is exposed;
	Check if expose exclude property endpoint filter is excluded;
	Check if expose exclude property endpoint filter contains

22. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.condition:  

22.1. Add a class for on enabled endpoint condition. It allows to:

	Get match outcome;
	Check if on enabled endpoint condition is enabled by default

23. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.jmx:  

23.1. Add a class for default endpoint object name factory. It allows to:

	Instantiate default endpoint object name factory  with jmx endpoint properties, environment, M bean server and M bean server;
	Get object name;
	Determine domain;
	Check if default endpoint object name factory has M bean;
	Get static names

23.2. Add a class for default endpoint object name factory tests. It allows to:

	Generate object name;
	Generate object name  with capitalized id;
	Generate object name  with custom domain;
	Generate object name  with unique names;
	Assert unique object name;
	Generate object name  with static names;
	Generate object name  with duplicate;
	Get endpoint

23.3. Add an object creator class for jmx endpoint auto configuration. It allows to:

	Instantiate jmx endpoint auto configuration  with application context, jmx endpoint properties and jmx endpoint properties;
	Get jmx annotation endpoint discoverer;
	Jmx M bean exporter;
	Get jmx include exclude property endpoint filter

24. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web:  

24.1. Add a class for cors endpoint properties. It allows to:

	Get allowed origins;
	Set allowed origins;
	Get allowed methods;
	Set allowed methods;
	Get allowed headers;
	Set allowed headers;
	Get exposed headers;
	Set exposed headers;
	Get allow credentials;
	Set allow credentials;
	Get max age;
	Set max age;
	Convert cors endpoint properties to cors configuration

24.2. Add a class for mapping web endpoint path mapper. It allows to:

	Instantiate mapping web endpoint path mapper  with path mapping;
	Get root path

24.3. Add a class for mapping web endpoint path mapper tests. It allows to:

	Handle default configuration;
	Handle user configuration;
	Handle mixed case default configuration;
	Handle mixed case user configuration

24.4. Add a class for web endpoint properties tests. It allows to:

	Handle default base path should be application;
	Handle base path should be cleaned;
	Handle base path must start with slash;
	Handle base path can be empty

25. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web.documentation:  

25.1. Add a class for mock mvc endpoint documentation tests. It allows to:

	Handle setup;
	Get application context

26. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web.jersey:  

26.1. Add a class for jersey web endpoint management context configuration. It allows to:

	Get web endpoint registrar

27. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive:  

27.1. Add an object creator class for web flux endpoint management context configuration. It allows to:

	Get web endpoint reactive handler mapping;
	Get controller endpoint handler mapping

28. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet:  

28.1. Add an object creator class for web mvc endpoint management context configuration. It allows to:

	Get web endpoint servlet handler mapping;
	Get controller endpoint handler mapping

29. Changes to package org.springframework.boot.actuate.autoconfigure.env:  

29.1. Add a class for environment endpoint auto configuration. It allows to:

	Get environment endpoint;
	Get environment endpoint web extension

29.2. Add a class for environment endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when enabled property is false should  not have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Convert keys;
	Validate system properties;
	Get source

29.3. Add a class for environment endpoint properties. It allows to:

	Get keys  to sanitize;
	Set keys  to sanitize

30. Changes to package org.springframework.boot.actuate.autoconfigure.flyway:  

30.1. Add an object creator class for flyway endpoint auto configuration. It allows to:

	Flyway endpoint

30.2. Add a class for flyway endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when enabled property is false should  not have endpoint bean;
	Run when  not exposed should not have endpoint bean

31. Changes to package org.springframework.boot.actuate.autoconfigure.health:  

31.1. Add a class for composite health indicator configuration. It allows to:

	Create health indicator;

31.2. Add a class for composite reactive health indicator configuration. It allows to:

	Create health indicator;

31.3. Add a class for health endpoint auto configuration

31.4. Add a class for health endpoint auto configuration tests. It allows to:

	Handle health endpoint show details default;
	Handle health endpoint adapt reactive health indicator;
	Handle health endpoint merge regular and reactive;
	Handle simple health indicator;
	Handle reactive health indicator

31.5. Add an object creator class for health endpoint configuration. It allows to:

	Get health endpoint

31.6. Add a class for health endpoint properties. It allows to:

	Get show details;
	Set show details;
	Get roles;
	Set roles

31.7. Add a class for health indicator properties. It allows to:

	Get order;
	Get set order;
	Get http mapping

31.8. Add a class for on enabled health indicator condition. It allows to:

	Instantiate on enabled health indicator condition

32. Changes to package org.springframework.boot.actuate.autoconfigure.influx:  

32.1. Add a class for influx db health indicator auto configuration. It allows to:

	Get influx db health indicator

32.2. Add a class for influx db health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

33. Changes to package org.springframework.boot.actuate.autoconfigure.info:  

33.1. Add an object creator class for info contributor auto configuration. It allows to:

	Env info contributor;
	Git info contributor;
	Build info contributor

33.2. Add an object creator class for info endpoint auto configuration. It allows to:

	Info endpoint

33.3. Add a class for info endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run should have endpoint bean  even if default is disabled;
	Run when enabled property is false should  not have endpoint bean

33.4. Add a class for on enabled info contributor condition. It allows to:

	Instantiate on enabled info contributor condition

34. Changes to package org.springframework.boot.actuate.autoconfigure.integrationtest:  

34.1. Add a class for endpoint auto configuration classes. It allows to:

	Instantiate endpoint auto configuration classes

34.2. Add a class for jmx endpoint integration tests. It allows to:

	Handle jmx endpoints are exposed;
	Handle jmx endpoints can be excluded;
	Handle single jmx endpoint can be exposed;
	Check endpoint M beans;
	Check if jmx endpoint integration tests is registered;
	Get M bean info;
	Get default object name;
	Get object name

34.3. Add a class for web flux endpoint cors integration tests. It allows to:

	Handle cors is disabled by default;
	Setting allowed origins enables cors;
	Max age defaults  to 30 minutes;
	Handle max age can be configured;
	Handle requests with disallowed headers are rejected;
	Get allowed headers can be configured;
	Handle requests with disallowed methods are rejected;
	Get allowed methods can be configured;
	Handle credentials can be allowed;
	Handle credentials can be disabled;
	Process web flux endpoint cors integration tests web flux endpoint cors integration tests with web test client;
	Perform accepted cors request

35. Changes to package org.springframework.boot.actuate.autoconfigure.jdbc:  

35.1. Add a class for data source health indicator auto configuration. It allows to:

	Instantiate data source health indicator auto configuration  with data sources map, metadata providers and metadata providers;
	Handle after properties set;
	Db health indicator;
	Get filter data sources;
	Create health indicator;
	Get validation query

36. Changes to package org.springframework.boot.actuate.autoconfigure.jms:  

36.1. Add a class for jms health indicator auto configuration. It allows to:

	Get jms health indicator

36.2. Add a class for jms health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

37. Changes to package org.springframework.boot.actuate.autoconfigure.jolokia:  

37.1. Add an object creator class for jolokia endpoint. It allows to:

	Instantiate jolokia endpoint  with init parameters map;
	Get jolokia endpoint

37.2. Add an object creator class for jolokia endpoint auto configuration. It allows to:

	Handle jolokia endpoint

37.3. Add a class for jolokia properties. It allows to:

	Get config

38. Changes to package org.springframework.boot.actuate.autoconfigure.ldap:  

38.1. Add a class for ldap health indicator auto configuration. It allows to:

	Handle ldap health indicator

38.2. Add a class for ldap health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

39. Changes to package org.springframework.boot.actuate.autoconfigure.liquibase:  

39.1. Add a class for liquibase endpoint auto configuration. It allows to:

	Get liquibase endpoint;
	Prevent data source  close bean post processor;
	Post process  before initialization;
	Post process  after initialization

40. Changes to package org.springframework.boot.actuate.autoconfigure.logging:  

40.1. Add a class for log file web endpoint auto configuration tests. It allows to:

	Run log file web endpoint auto configuration tests with only exposed should not have endpoint bean;
	Run when logging file is set and  not exposed should not have endpoint bean;
	Run when logging file is set and exposed should have endpoint bean;
	Run when logging file is set  with deprecated property and exposed should have endpoint bean;
	Run when logging path is set and  not exposed should not have endpoint bean;
	Run when logging path is set and exposed should have endpoint bean;
	Run when logging path is set  with deprecated property and exposed should have endpoint bean;
	Log file web endpoint is auto configured when external file is set;
	Log file web endpoint can be disabled;
	Log file web endpoint uses configured external file

40.2. Add a class for log file web endpoint properties. It allows to:

	Get external file;
	Set external file

41. Changes to package org.springframework.boot.actuate.autoconfigure.mail:  

41.1. Add a class for mail health indicator auto configuration. It allows to:

	Get mail health indicator

41.2. Add a class for mail health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

42. Changes to package org.springframework.boot.actuate.autoconfigure.management:  

42.1. Add an object creator class for heap dump web endpoint auto configuration. It allows to:

	Get heap dump web endpoint

42.2. Add a class for heap dump web endpoint auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

42.3. Add an object creator class for thread dump endpoint auto configuration. It allows to:

	Dump endpoint

42.4. Add a class for thread dump endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint bean

43. Changes to package org.springframework.boot.actuate.autoconfigure.metrics:  

43.1. Add a class for composite meter registry auto configuration

43.2. Add a class for meter registry configurer. It allows to:

	Instantiate meter registry configurer  with customizers object provider, filters object provider, binders object provider and binders object provider;
	Configure meter registry;
	Customize meter registry;
	Add filters;
	Add binders;
	Process meter registry configurer meter registry configurer as ordered list

43.3. Add a class for meter registry configurer tests. It allows to:

	Handle setup;
	Configure when composite should apply customizer;
	Configure should apply customizer;
	Configure should apply filter;
	Configure should apply binder;
	Configure should be called  in order customizer filter binder;
	Configure when add  to global registry should add to global registry;
	Configure when  not add to global registry should add to global registry;
	Create object provider

43.4. Add an interface declaration  for meter registry customizer. It allows to:

	Customize registry

43.5. Add a class for meter registry post processor. It allows to:

	Instantiate meter registry post processor  with meter binders object provider, meter filters object provider, meter registry customizers object provider, metrics properties object provider and metrics properties object provider;
	Post process  after initialization;
	Get configurer

43.6. Add an object creator class for metrics auto configuration. It allows to:

	Get micrometer clock;
	Get meter registry post processor;
	Get properties meter filter

43.7. Add a class for metrics auto configuration with log 4 j 2 and logback tests. It allows to:

	Check if metrics auto configuration with log 4 j 2 and logback tests does not configure logback metrics

43.8. Add an object creator class for metrics endpoint auto configuration. It allows to:

	Get metrics endpoint

43.9. Add an object creator class for missing required configuration failure analyzer. It allows to:

	Analyze root failure throwable

43.10. Add an object creator class for no op meter registry configuration. It allows to:

	No op meter registry

43.11. Add a class for only once logging deny meter filter. It allows to:

	Instantiate only once logging deny meter filter  with message supplier;
	Accept id

43.12. Add a class for properties meter filter. It allows to:

	Instantiate properties meter filter  with metrics properties;
	Create map filter;
	Accept meter id;
	Map id;
	Configure meter id;
	Convert sla;
	Convert meter value;
	Get lookup;
	Lookup values map with fallback to all;
	Do lookup

43.13. Add an object creator class for service level agreement boundary. It allows to:

	Instantiate service level agreement boundary  with meter value;
	Get value;
	Get value of;

43.14. Add a class for service level agreement boundary tests. It allows to:

	Get value  for timer when from long should return ms to nanos value;
	Get value  for timer when from number string should ms to nanos value;
	Get value  for timer when from duration string should return duration nanos

44. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.amqp:  

44.1. Add a class for rabbit connection factory metrics post processor. It allows to:

	Instantiate rabbit connection factory metrics post processor  with application context;
	Post process  after initialization;
	Convert bind connection factory;
	Get connection factory name;
	Get meter registry;
	Get order

44.2. Add an object creator class for rabbit metrics auto configuration. It allows to:

	Get rabbit connection factory metrics post processor

44.3. Add a class for rabbit metrics auto configuration tests. It allows to:

	Handle auto configured connection factory is instrumented;
	Handle rabbitmq native connection factory instrumentation can be disabled

45. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.cache:  

45.1. Add a class for cache metrics auto configuration

45.2. Add a class for cache metrics registrar configuration. It allows to:

	Instantiate cache metrics registrar configuration  with meter registry, binder providers collection, cache managers map and cache managers map;
	Handle cache metrics registrar;
	Convert bind caches;
	Convert bind cache manager;
	Convert bind cache;
	Get cache manager name

46. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.atlas:  

46.1. Add an object creator class for atlas metrics export auto configuration. It allows to:

	Handle atlas config;
	Handle atlas meter registry

46.2. Add a class for atlas properties. It allows to:

	Get uri;
	Set uri;
	Get meter time  to live;
	Set meter time  to live;
	Check if atlas properties is lwc enabled;
	Set lwc enabled;
	Get config refresh frequency;
	Set config refresh frequency;
	Get config time  to live;
	Set config time  to live;
	Get config uri;
	Set config uri;
	Get eval uri;
	Set eval uri

46.3. Add a class for atlas properties config adapter. It allows to:

	Instantiate atlas properties config adapter  with atlas properties;
	Get atlas properties config adapter;
	Step atlas properties config adapter;
	Get enabled;
	Connect timeout;
	Read timeout;
	Handle num threads;
	Get batch size;
	Get uri;
	Get meter TTL;
	Handle lwc enabled;
	Get config refresh frequency;
	Get config TTL;
	Get config uri;
	Handle eval uri

46.4. Add a class for atlas properties tests. It allows to:

	Handle default values are consistent

47. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.datadog:  

47.1. Add a class for datadog metrics export auto configuration. It allows to:

	Instantiate datadog metrics export auto configuration  with datadog properties;
	Handle datadog config;
	Handle datadog meter registry

47.2. Add a class for datadog properties. It allows to:

	Get api key;
	Set api key;
	Get application key;
	Set application key;
	Check if datadog properties is descriptions;
	Set descriptions;
	Get host tag;
	Set host tag;
	Get uri;
	Set uri

47.3. Add a class for datadog properties config adapter. It allows to:

	Instantiate datadog properties config adapter  with datadog properties;
	Api key;
	Get application key;
	Get host tag;
	Get uri;
	Handle descriptions

47.4. Add a class for datadog properties config adapter tests. It allows to:

	Handle uri can be set

47.5. Add a class for datadog properties tests. It allows to:

	Handle default values are consistent

48. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia:  

48.1. Add an object creator class for ganglia metrics export auto configuration. It allows to:

	Get ganglia config;
	Get ganglia meter registry

48.2. Add a class for ganglia properties. It allows to:

	Check if ganglia properties is enabled;
	Enabled ganglia properties;
	Step ganglia properties;
	Set step;
	Get rate units;
	Set rate units;
	Get duration units;
	Set duration units;
	Get protocol version;
	Set protocol version;
	Get addressing mode;
	Set addressing mode;
	Get time  to live;
	Set time  to live;
	Get host;
	Set host;
	Get port;
	Set port

48.3. Add a class for ganglia properties config adapter. It allows to:

	Instantiate ganglia properties config adapter  with ganglia properties;
	Get ganglia properties config adapter;
	Get enabled;
	Step ganglia properties config adapter;
	Get rate units;
	Get duration units;
	Get protocol version;
	Addressing mode;
	Get ttl;
	Get host;
	Get port

48.4. Add a class for ganglia properties tests. It allows to:

	Handle default values are consistent

49. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.graphite:  

49.1. Add an object creator class for graphite metrics export auto configuration. It allows to:

	Get graphite config;
	Get graphite meter registry

49.2. Add a class for graphite properties. It allows to:

	Check if graphite properties is enabled;
	Enabled graphite properties;
	Step graphite properties;
	Set step;
	Get rate units;
	Set rate units;
	Get duration units;
	Set duration units;
	Get host;
	Set host;
	Get port;
	Set port;
	Get protocol;
	Set protocol;
	Get tags  as prefix;
	Set tags  as prefix

49.3. Add a class for graphite properties config adapter. It allows to:

	Instantiate graphite properties config adapter  with graphite properties;
	Get graphite properties config adapter;
	Get enabled;
	Step graphite properties config adapter;
	Get rate units;
	Get duration units;
	Get host;
	Get port;
	Get protocol;
	Get tags as prefix

49.4. Add a class for graphite properties tests. It allows to:

	Handle default values are consistent

50. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.influx:  

50.1. Add a class for influx metrics export auto configuration. It allows to:

	Instantiate influx metrics export auto configuration  with influx properties;
	Get influx config;
	Get influx meter registry

50.2. Add a class for influx properties. It allows to:

	Get influx properties;
	Set db;
	Get consistency;
	Set consistency;
	Get user name;
	Set user name;
	Get password;
	Set password;
	Get retention policy;
	Set retention policy;
	Get retention duration;
	Set retention duration;
	Get retention replication factor;
	Set retention replication factor;
	Get retention shard duration;
	Set retention shard duration;
	Get uri;
	Set uri;
	Check if influx properties is compressed;
	Compressed influx properties;
	Check if influx properties is auto create db;
	Set auto create db

50.3. Add a class for influx properties config adapter. It allows to:

	Instantiate influx properties config adapter  with influx properties;
	D influx properties config adapter;
	Get consistency;
	Get user name;
	Get password;
	Get retention policy;
	Get retention replication factor;
	Get retention duration;
	Get retention shard duration;
	Get uri;
	Get compressed;
	Handle auto create db

50.4. Add a class for influx properties tests. It allows to:

	Handle default values are consistent

51. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.jmx:  

51.1. Add an object creator class for jmx metrics export auto configuration. It allows to:

	Handle jmx config;
	Get jmx meter registry

51.2. Add a class for jmx properties. It allows to:

	Get domain;
	Set domain;
	Step jmx properties;
	Set step

51.3. Add a class for jmx properties config adapter. It allows to:

	Instantiate jmx properties config adapter  with jmx properties;
	Get jmx properties config adapter;
	Get domain;
	Step jmx properties config adapter

51.4. Add a class for jmx properties tests. It allows to:

	Handle default values are consistent

52. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic:  

52.1. Add a class for new relic metrics export auto configuration. It allows to:

	Instantiate new relic metrics export auto configuration  with new relic properties;
	Handle new relic config;
	Handle new relic meter registry

52.2. Add a class for new relic properties. It allows to:

	Get api key;
	Set api key;
	Get account id;
	Set account id;
	Get uri;
	Set uri

52.3. Add a class for new relic properties config adapter. It allows to:

	Instantiate new relic properties config adapter  with new relic properties;
	Api key;
	Account id;
	Get uri

52.4. Add a class for new relic properties tests. It allows to:

	Handle default values are consistent

53. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus:  

53.1. Add a class for prometheus properties config adapter. It allows to:

	Instantiate prometheus properties config adapter  with prometheus properties;
	Get prometheus properties config adapter;
	Handle descriptions;
	Step prometheus properties config adapter

53.2. Add a class for prometheus properties tests. It allows to:

	Handle default values are consistent

54. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.properties:  

54.1. Add a class for properties config adapter. It allows to:

	Instantiate properties config adapter  with properties;
	Get getter function

54.2. Add a class for step registry properties. It allows to:

	Step step registry properties;
	Set step;
	Check if step registry properties is enabled;
	Enabled step registry properties;
	Get connect timeout;
	Set connect timeout;
	Get read timeout;
	Set read timeout;
	Get num threads;
	Set num threads;
	Get batch size;
	Set batch size

54.3. Add a class for step registry properties config adapter. It allows to:

	Instantiate step registry properties config adapter  with properties;
	Prefix step registry properties config adapter;
	Get step registry properties config adapter;
	Step step registry properties config adapter;
	Get enabled;
	Handle num threads;
	Get batch size

54.4. Add a class for step registry properties tests. It allows to:

	Assert step registry default values;
	Handle default values are consistent

55. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx:  

55.1. Add an object creator class for signal fx metrics export auto configuration. It allows to:

	Handle signalfx config;
	Signal fx meter registry

55.2. Add a class for signal fx properties. It allows to:

	Step signal fx properties;
	Set step;
	Get access token;
	Set access token;
	Get uri;
	Set uri;
	Get source;
	Set source

55.3. Add a class for signal fx properties config adapter. It allows to:

	Instantiate signal fx properties config adapter  with signal fx properties;
	Get access token;
	Get uri;
	Get source

55.4. Add a class for signal fx properties tests. It allows to:

	Handle default values are consistent

56. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.simple:  

56.1. Add an object creator class for simple metrics export auto configuration. It allows to:

	Handle simple meter registry;
	Handle simple config

56.2. Add a class for simple properties. It allows to:

	Step simple properties;
	Set step;
	Get mode;
	Set mode

56.3. Add a class for simple properties config adapter. It allows to:

	Instantiate simple properties config adapter  with simple properties;
	Get simple properties config adapter;
	Step simple properties config adapter;
	Get mode

56.4. Add a class for simple properties tests. It allows to:

	Handle default values are consistent

57. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.statsd:  

57.1. Add an object creator class for statsd metrics export auto configuration. It allows to:

	Handle statsd config;
	Handle statsd meter registry;
	Handle statsd metrics

57.2. Add a class for statsd properties. It allows to:

	Check if statsd properties is enabled;
	Enabled statsd properties;
	Get flavor;
	Set flavor;
	Get host;
	Set host;
	Get port;
	Set port;
	Get max packet length;
	Set max packet length;
	Get polling frequency;
	Set polling frequency;
	Check if statsd properties is publish unchanged meters;
	Set publish unchanged meters

57.3. Add a class for statsd properties config adapter. It allows to:

	Instantiate statsd properties config adapter  with statsd properties;
	Get statsd properties config adapter;
	Get flavor;
	Get enabled;
	Get host;
	Get port;
	Max packet length;
	Get polling frequency;
	Publish unchanged meters

57.4. Add a class for statsd properties tests. It allows to:

	Handle default values are consistent

58. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront:  

58.1. Add a class for wavefront metrics export auto configuration. It allows to:

	Instantiate wavefront metrics export auto configuration  with wavefront properties;
	Handle wavefront config;
	Handle wavefront meter registry

58.2. Add a class for wavefront properties. It allows to:

	Get uri;
	Set uri;
	Step wavefront properties;
	Set step;
	Get source;
	Set source;
	Get api token;
	Set api token;
	Get global prefix;
	Set global prefix

58.3. Add a class for wavefront properties config adapter. It allows to:

	Instantiate wavefront properties config adapter  with wavefront properties;
	Get wavefront properties config adapter;
	Get uri;
	Get source;
	Api token;
	Handle global prefix;
	Get wavefront properties uri as string

58.4. Add a class for wavefront properties tests. It allows to:

	Handle default values are consistent

59. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.test:  

59.1. Add a class for metrics run. It allows to:

	Instantiate metrics run;
	Handle simple;
	Get limited to;
	Apply context runner

60. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.web:  

60.1. Add a class for test controller. It allows to:

	Get test 0;
	Get test 1;
	Convert test

61. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.web.reactive:  

61.1. Add an object creator class for web flux metrics auto configuration. It allows to:

	Instantiate web flux metrics auto configuration  with metrics properties;
	Handle webflux tag configurer;
	Handle webflux metrics;
	Get metrics http server uri tag filter

62. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat:  

62.1. Add an object creator class for tomcat metrics auto configuration. It allows to:

	Handle tomcat metrics binder

63. Changes to package org.springframework.boot.actuate.autoconfigure.mongo:  

63.1. Add a class for mongo health indicator auto configuration. It allows to:

	Mongo health indicator

63.2. Add a class for mongo health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

64. Changes to package org.springframework.boot.actuate.autoconfigure.neo4j:  

64.1. Add a class for neo 4 j health indicator auto configuration. It allows to:

	Get neo 4 j health indicator

65. Changes to package org.springframework.boot.actuate.autoconfigure.redis:  

65.1. Add a class for redis health indicator auto configuration. It allows to:

	Handle redis health indicator

65.2. Add a class for redis health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

66. Changes to package org.springframework.boot.actuate.autoconfigure.scheduling:  

66.1. Add an object creator class for scheduled tasks endpoint auto configuration. It allows to:

	Get scheduled tasks endpoint

67. Changes to package org.springframework.boot.actuate.autoconfigure.session:  

67.1. Add an object creator class for sessions endpoint auto configuration. It allows to:

	Get session endpoint

68. Changes to package org.springframework.boot.actuate.autoconfigure.solr:  

68.1. Add a class for solr health indicator auto configuration. It allows to:

	Handle solr health indicator

68.2. Add a class for solr health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

69. Changes to package org.springframework.boot.actuate.autoconfigure.system:  

69.1. Add an object creator class for disk space health indicator auto configuration. It allows to:

	Get disk space health indicator;
	Get disk space health indicator properties

69.2. Add a class for disk space health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Handle threshold must be positive;
	Handle threshold can be customized;
	Run when disabled should  not create indicator

69.3. Add a class for disk space health indicator properties. It allows to:

	Get path;
	Set path;
	Get threshold;
	Set threshold

70. Changes to package org.springframework.boot.actuate.autoconfigure.trace.http:  

70.1. Add an object creator class for http trace endpoint auto configuration. It allows to:

	Http trace endpoint

70.2. Add a class for http trace properties. It allows to:

	Include http trace properties;
	Include include set

71. Changes to package org.springframework.boot.actuate.autoconfigure.web:  

71.1. Add an interface declaration  for management context factory. It allows to:

	Create management context

72. Changes to package org.springframework.boot.actuate.autoconfigure.web.reactive:  

72.1. Add an object creator class for reactive management context auto configuration. It allows to:

	Handle reactive web child context factory

72.2. Add a class for reactive management context factory. It allows to:

	Create management context;
	Register reactive web server factory;
	Determine reactive web server factory class;
	Can factory class not be instantiated

73. Changes to package org.springframework.boot.actuate.autoconfigure.web.server:  

73.1. Add a class for enable child management context configuration

73.2. Add a class for management context auto configuration tests. It allows to:

	Handle child management context should start for embedded server;
	Get tomcat started occurences in

73.3. Add a class for management server properties tests. It allows to:

	Handle default management server properties;
	Get defined management server properties;
	Trailing slash  of context path is removed;
	Slash management server properties tests of context path is default value

73.4. Add a class for management web server factory customizer. It allows to:

	Instantiate management web server factory customizer  with listable bean factory, customizer classes and customizer classes;
	Get order;
	Customize factory;
	Customize same  as parent context;
	Get customizer;
	Invoke customizers;

73.5. Add a class for on management port condition. It allows to:

	Get match outcome;
	Check if on management port condition is web application context

74. Changes to package org.springframework.boot.actuate.autoconfigure.web.servlet:  

74.1. Add a class for composite handler adapter. It allows to:

	Instantiate composite handler adapter  with listable bean factory;
	Handle supports;
	Handle http servlet request;
	Get last modified;
	Get adapter;
	Extract adapters

74.2. Add a class for composite handler exception resolver. It allows to:

	Resolve exception;
	Extract resolvers

74.3. Add a class for composite handler mapping. It allows to:

	Get handler;
	Extract mappings

74.4. Add a class for management error endpoint. It allows to:

	Instantiate management error endpoint  with error attributes;
	Invoke servlet web request

74.5. Add an interface declaration  for management servlet context. It allows to:

	Get servlet path

74.6. Add a class for servlet management context factory. It allows to:

	Create management context;
	Register servlet web server factory;
	Determine servlet web server factory class;
	Can factory class not be instantiated

74.7. Add an object creator class for web mvc endpoint child context configuration. It allows to:

	Get error endpoint;
	Get dispatcher servlet;
	Get dispatcher servlet registration bean;
	Handle composite handler mapping;
	Handle composite handler adapter;
	Handle composite handler exception resolver;
	Get request context filter

75. Changes to package org.springframework.boot.actuate.autoconfigure.web.trace:  

75.1. Add a class for http trace endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint bean;
	Handle endpoint backs off when repository is not available

76. Changes to package org.springframework.boot.actuate.cassandra:  

76.1. Add a class for cassandra health indicator. It allows to:

	Instantiate cassandra health indicator;
	Instantiate cassandra health indicator  with cassandra operations;
	Do health check

77. Changes to package org.springframework.boot.actuate.context:  

77.1. Add a class for shutdown endpoint. It allows to:

	Get shutdown;
	Perform shutdown;
	Set application context

78. Changes to package org.springframework.boot.actuate.couchbase:  

78.1. Add a class for couchbase health indicator. It allows to:

	Instantiate couchbase health indicator  with cluster;
	Do health check

78.2. Add a class for couchbase health indicator tests. It allows to:

	Handle couchbase cluster is up;
	Handle couchbase cluster is down

79. Changes to package org.springframework.boot.actuate.elasticsearch:  

79.1. Add a class for elasticsearch health indicator. It allows to:

	Instantiate elasticsearch health indicator  with client, indices list and indices list;
	Instantiate elasticsearch health indicator  with client;
	Do health check

79.2. Add a class for elasticsearch jest health indicator. It allows to:

	Instantiate elasticsearch jest health indicator  with jest client;
	Do health check

79.3. Add a class for elasticsearch jest health indicator tests. It allows to:

	Handle elasticsearch is up;
	Elasticsearch elasticsearch jest health indicator tests with yellow status is up;
	Handle elasticsearch is down;
	Handle elasticsearch is down when query did not succeed;
	Handle elasticsearch is down by response code;
	Handle elasticsearch is out of service by status;
	Assert health details  with status;
	Create jest result

80. Changes to package org.springframework.boot.actuate.endpoint:  

80.1. Add a class for abstract exposable endpoint. It allows to:

	Instantiate abstract exposable endpoint  with endpoint id, operations collection and operations collection;
	Get endpoint id;
	Check if abstract exposable endpoint is enable by default;
	Get operations

80.2. Add an interface declaration  for endpoint filter. It allows to:

	Match endpoint

80.3. Add an interface declaration  for endpoints supplier. It allows to:

	Get endpoints

80.4. Add an interface declaration  for exposable endpoint. It allows to:

	Get endpoint id;
	Check if exposable endpoint is enable by default;
	Get operations

80.5. Add a class for invalid endpoint request exception. It allows to:

	Instantiate invalid endpoint request exception;
	Instantiate invalid endpoint request exception  with cause throwable;
	Get reason

80.6. Add a class for invocation context. It allows to:

	Instantiate invocation context  with security context, arguments map and arguments map;
	Get security context;
	Get arguments

80.7. Add an interface declaration  for operation. It allows to:

	Get type;
	Invoke invocation context

80.8. Add a class for sanitizer. It allows to:

	Instantiate sanitizer;
	Set keys  to sanitize;
	Get pattern;
	Check if sanitizer is regex;
	Sanitize sanitizer

80.9. Add a class for sanitizer tests. It allows to:

	Handle defaults;
	Handle regex

80.10. Add an interface declaration  for security context. It allows to:

	Get principal;
	Check if  is user in role;
	Check if security context is user in role

81. Changes to package org.springframework.boot.actuate.endpoint.annotation:  

81.1. Add a class for abstract discovered endpoint. It allows to:

	Instantiate abstract discovered endpoint  with endpoint discoverer, endpoint id, operations collection and operations collection;
	Get endpoint bean;
	Get was discovered by;
	Convert abstract discovered endpoint to string;
	Append fields

81.2. Add a class for abstract discovered operation. It allows to:

	Instantiate abstract discovered operation  with discovered operation method, operation invoker and operation invoker;
	Get operation method;
	Get type;
	Invoke invocation context;
	Convert abstract discovered operation to string;
	Append fields

81.3. Add an interface declaration  for discovered endpoint. It allows to:

	Get was discovered by;
	Get endpoint bean

81.4. Add a class for discovered operation method. It allows to:

	Instantiate discovered operation method  with method, operation type, annotation attributes and annotation attributes;
	Get produces media types

81.5. Add a class for discovered operation method tests. It allows to:

	Create when annotation attributes is null should throw exception;
	Get produces media types should return media types;
	Handle example

81.6. Add a class for discovered operations factory. It allows to:

	Instantiate discovered operations factory  with parameter value mapper, invoker advisors collection and invoker advisors collection;
	Create operations;
	Create operation;
	Apply advisors;

81.7. Add a class for discoverer endpoint filter. It allows to:

	Instantiate discoverer endpoint filter  with discoverer class;
	Match discovered endpoint

82. Changes to package org.springframework.boot.actuate.endpoint.http:  

82.1. Add a class for actuator media type. It allows to:

	Instantiate actuator media type

83. Changes to package org.springframework.boot.actuate.endpoint.invoke:  

83.1. Add a class for missing parameters exception. It allows to:

	Instantiate missing parameters exception  with missing parameters set;
	Get missing parameters

83.2. Add an interface declaration  for operation invoker. It allows to:

	Invoke invocation context

83.3. Add an interface declaration  for operation invoker advisor. It allows to:

	Apply endpoint id

83.4. Add an interface declaration  for operation parameter. It allows to:

	Get name;
	Get type;
	Check if operation parameter is mandatory

83.5. Add an interface declaration  for operation parameters. It allows to:

	Check if operation parameters has parameters;
	Get parameter count;
	Check if operation parameters has mandatory parameter;
	Get operation parameters;
	Get stream

83.6. Add a class for parameter mapping exception. It allows to:

	Instantiate parameter mapping exception  with operation parameter, cause throwable and cause throwable;
	Get parameter;
	Get value

83.7. Add an interface declaration  for parameter value mapper. It allows to:

	Map parameter value

84. Changes to package org.springframework.boot.actuate.endpoint.invoke.convert:  

84.1. Add a class for conversion service parameter value mapper. It allows to:

	Instantiate conversion service parameter value mapper;
	Instantiate conversion service parameter value mapper  with conversion service;
	Map parameter value

84.2. Add a class for iso offset date time converter. It allows to:

	Convert iso offset date time converter;
	Register converter

84.3. Add a class for iso offset date time converter tests. It allows to:

	Convert should convert iso date;
	Register converter should register

85. Changes to package org.springframework.boot.actuate.endpoint.invoke.reflect:  

85.1. Add a class for operation method. It allows to:

	Instantiate operation method  with method, operation type and operation type;
	Get method;
	Get operation type;
	Get parameters;
	Convert operation method to string

85.2. Add a class for operation method parameter. It allows to:

	Instantiate operation method parameter  with parameter;
	Get name;
	Get type;
	Check if operation method parameter is mandatory;
	Convert operation method parameter to string

85.3. Add a class for operation method parameter tests. It allows to:

	Get name should return name;
	Get type should return type;
	Check if operation method parameter tests is mandatory when no annotation should return true;
	Check if operation method parameter tests is mandatory when nullable annotation should return false;
	Handle example

85.4. Add a class for operation method parameters. It allows to:

	Instantiate operation method parameters  with method, parameter name discoverer and parameter name discoverer;
	Get operation parameters;
	Get parameter count;
	Get operation method parameters;
	Get iterator;
	Get stream

85.5. Add a class for operation method parameters tests. It allows to:

	Create when method is null should throw exception;
	Create when parameter name discoverer is null should throw exception;
	Create when parameter name discoverer returns null should throw exception;
	Check if operation method parameters tests has parameters when has parameters should return true;
	Check if operation method parameters tests has parameters when has no parameters should return false;
	Get parameter count should return parameter count;
	Handle iterator should iterate operation parameters;
	Handle stream should stream operation parameters;
	Assert parameters;
	Get example;
	Get example no params

85.6. Add a class for operation method tests. It allows to:

	Create when method is null should throw exception;
	Create when operation type is null should throw exception;
	Get method should return method;
	Get operation type should return operation type;
	Get parameters should return parameters;
	Get example

85.7. Add a class for reflective operation invoker. It allows to:

	Instantiate reflective operation invoker  with operation method, parameter value mapper and parameter value mapper;
	Invoke invocation context;
	Validate required parameters;
	Check if reflective operation invoker is missing;
	Resolve arguments;
	Resolve argument;
	Convert reflective operation invoker to string

86. Changes to package org.springframework.boot.actuate.endpoint.invoker.cache:  

86.1. Add a class for caching operation invoker advisor. It allows to:

	Instantiate caching operation invoker advisor  with endpoint id time to live function;
	Apply endpoint id;
	Check if caching operation invoker advisor has mandatory parameter

86.2. Add a class for caching operation invoker tests. It allows to:

	Create instance  with ttl set to zero;
	Handle cache in ttl range with no parameter;
	Handle cache in ttl with null parameters;
	Assert cache is used;
	Target caching operation invoker tests always invoked with parameters;
	Target caching operation invoker tests always invoked with principal;
	Target invoked when cache expires

87. Changes to package org.springframework.boot.actuate.endpoint.jmx:  

87.1. Add a class for endpoint M bean tests. It allows to:

	Create when response mapper is null should throw exception;
	Create when endpoint is null should throw exception;
	Get M bean info should return M bean info;
	Invoke should invoke jmx operation;
	Invoke when operation failed should translate exception;
	Invoke when operation failed  with jdk exception should reuse exception;
	Invoke when action name is  not an operation should throw exception;
	Invoke should invoke jmx operation  with bean class loader;
	Invoke when operation is invalid should throw exception;
	Invoke invocation context;
	Invoke when mono result should block  on mono;
	Invoke should call response mapper;
	Get attribute should throw exception;
	Set attribute should throw exception;
	Get attributes should return empty attribute list;
	Set attributes should return empty attribute list;
	Create endpoint M bean

87.2. Add an interface declaration  for endpoint object name factory. It allows to:

	Get object name

87.3. Add an interface declaration  for exposable jmx endpoint

87.4. Add a class for jackson jmx operation response mapper. It allows to:

	Instantiate jackson jmx operation response mapper  with object mapper;
	Map response type;
	Map response

87.5. Add a class for jmx endpoint exporter. It allows to:

	Instantiate jmx endpoint exporter  with M bean server, endpoint object name factory, jmx operation response mapper, endpoints collection and endpoints collection;
	Set bean class loader;
	Handle after properties set;
	Destroy jmx endpoint exporter;
	Register jmx endpoint exporter;
	Register exposable jmx endpoint;
	Handle unregister;
	Get endpoint description

87.6. Add an interface declaration  for jmx endpoints supplier

87.7. Add an interface declaration  for jmx operation. It allows to:

	Get name;
	Get output type;
	Get description;
	Get parameters

87.8. Add an interface declaration  for jmx operation parameter. It allows to:

	Get name;
	Get type;
	Get description

87.9. Add an interface declaration  for jmx operation response mapper. It allows to:

	Map response type;
	Map response

87.10. Add a class for m bean info factory. It allows to:

	Instantiate m bean info factory  with jmx operation response mapper;
	Get M bean info;
	Get description;
	Get M bean operations;
	Get M bean operation;
	Get signature;
	Get M bean parameter;
	Get impact;
	Get type

87.11. Add a class for m bean info factory tests. It allows to:

	Get M bean info should return M bean info;
	Get M bean info when read operation should have info impact;
	Get M bean info when write operation should have action impact;
	Get M bean info when delete operation should have action impact;
	Get M bean info should use jmx operation response mapper;
	Get M bean should map operation parameters;
	Handle mock parameter

87.12. Add a class for test exposable jmx endpoint. It allows to:

	Instantiate test exposable jmx endpoint  with operations;
	Instantiate test exposable jmx endpoint  with operations collection;
	Get endpoint id;
	Check if test exposable jmx endpoint is enable by default;
	Get operations

87.13. Add a class for test jmx operation. It allows to:

	Instantiate test jmx operation;
	Instantiate test jmx operation  with operation type;
	Instantiate test jmx operation  with invoke function;
	Instantiate test jmx operation  with parameters list;
	Get type;
	Invoke invocation context;
	Get name;
	Get output type;
	Get description;
	Get parameters

87.14. Add a class for test jmx operation response mapper. It allows to:

	Map response;
	Map response type

88. Changes to package org.springframework.boot.actuate.endpoint.jmx.annotation:  

88.1. Add a class for discovered jmx endpoint. It allows to:

	Instantiate discovered jmx endpoint  with endpoint discoverer, endpoint id, operations collection and operations collection

88.2. Add an object creator class for jmx endpoint discoverer. It allows to:

	Instantiate jmx endpoint discoverer  with application context, parameter value mapper, invoker advisors collection, filters collection and filters collection;
	Create endpoint;
	Create operation;
	Create operation key

88.3. Add a class for jmx endpoint filter. It allows to:

	Instantiate jmx endpoint filter

89. Changes to package org.springframework.boot.actuate.endpoint.web:  

89.1. Add a class for endpoint links resolver. It allows to:

	Instantiate endpoint links resolver  with endpoints collection;
	Resolve links;
	Normalize request url;
	Collect links;
	Create link;

89.2. Add a class for endpoint links resolver tests. It allows to:

	Link resolution  with trailing slash strips slash on self link;
	Link resolution  without trailing slash;
	Get resolved links contains A link for each web endpoint operation;
	Get resolved links contains A link for servlet endpoint;
	Get resolved links contains A link for controller endpoint;
	Get operation with path;
	Get link with href

89.3. Add a class for endpoint mapping. It allows to:

	Instantiate endpoint mapping;
	Get path;
	Create sub path;
	Normalize path

89.4. Add a class for endpoint mapping tests. It allows to:

	Handle normalization turns A slash into an empty string;
	Handle normalization leaves an empty string as is;
	Handle normalization removes A trailing slash;
	Handle normalization adds A leading slash;
	Handle normalization adds A leading slash and removes A trailing slash;
	Handle normalization leaves A path with A leading slash and no trailing slash as is;
	Sub path  for an empty string returns base path;
	Sub path  with A leading slash is separated from base path by single slash;
	Sub path  without A leading slash is separated from base path by single slash;
	Trailing slash is removed  from A sub path

89.5. Add a class for endpoint media types. It allows to:

	Instantiate endpoint media types  with produced list, consumed list and consumed list;
	Produced endpoint media types;
	Consumed endpoint media types

89.6. Add a class for endpoint media types tests. It allows to:

	Create when produced is null should throw exception;
	Create when consumed is null should throw exception;
	Get endpoint media types tests;

89.7. Add a class for endpoint servlet. It allows to:

	Instantiate endpoint servlet  with servlet class;
	Handle instantiate class;
	Instantiate endpoint servlet  with servlet;
	Instantiate endpoint servlet  with servlet, init parameters map and init parameters map;
	Process endpoint servlet endpoint servlet with init parameter;
	Process endpoint servlet endpoint servlet with init parameters;
	Process endpoint servlet endpoint servlet with load on startup;
	Get servlet;
	Get init parameters;
	Get load  on startup

89.8. Add an interface declaration  for exposable servlet endpoint. It allows to:

	Get endpoint servlet

89.9. Add an interface declaration  for exposable web endpoint

89.10. Add a class for link. It allows to:

	Instantiate link;
	Get href;
	Check if link is templated;
	Convert link to string

89.11. Add a class for link tests. It allows to:

	Create when href is null should throw exception;
	Get href should return href;
	Check if link tests is templated when contains placeholder should return true;
	Check if link tests is templated when contains no placeholder should return false

89.12. Add an interface declaration  for path mapped endpoint. It allows to:

	Get root path

89.13. Add a class for path mapped endpoints. It allows to:

	Instantiate path mapped endpoints  with endpoints supplier;
	Instantiate path mapped endpoints  with suppliers collection;
	Get endpoints;
	Get base path;
	Get root path;
	Get path;
	Get all root paths;
	Get all paths;
	Get endpoint;
	Get stream;
	Get iterator;
	Process path mapped endpoints path mapped endpoints as list

89.14. Add an interface declaration  for path mapper. It allows to:

	Get root path;

89.15. Add a class for servlet endpoint registrar. It allows to:

	Instantiate servlet endpoint registrar  with servlet endpoints collection;
	Handle clean base path;
	Process servlet endpoint registrar servlet endpoint registrar on startup;
	Register servlet context

89.16. Add a class for web endpoint response. It allows to:

	Instantiate web endpoint response;
	Instantiate web endpoint response  with body;
	Get body;
	Get status

89.17. Add a class for web endpoint response tests. It allows to:

	Create web endpoint response tests with no params should return 200;
	Create web endpoint response tests with status should return status;
	Create web endpoint response tests with body should return body;
	Create web endpoint response tests with body and status should return status and body

89.18. Add an interface declaration  for web endpoints supplier

89.19. Add an interface declaration  for web operation. It allows to:

	Get id;
	Check if web operation is blocking;
	Get request predicate

89.20. Add a class for web operation request predicate. It allows to:

	Instantiate web operation request predicate  with web endpoint http method, consumes collection, produces collection and produces collection;
	Get path;
	Get http method;
	Get consumes;
	Produces web operation request predicate;
	Check if web operation request predicate equals;
	Hash code;
	Convert web operation request predicate to string

89.21. Add a class for web operation request predicate tests. It allows to:

	Handle predicates with identical paths are equal;
	Handle predicates with different paths are not equal;
	Handle predicates with identical paths with variables are equal;
	Handle predicates where one has A path and the other has A variable are not equal;
	Handle predicates with single path variables in the sample place are equal;
	Handle predicates with multiple path variables in the sample place are equal;
	Predicate web operation request predicate tests with path

90. Changes to package org.springframework.boot.actuate.endpoint.web.annotation:  

90.1. Add an object creator class for base configuration. It allows to:

	Get endpoint delegate;
	Get endpoint media types;
	Get web endpoint discoverer;
	Get property placeholder configurer

90.2. Add a class for controller endpoint discoverer. It allows to:

	Instantiate controller endpoint discoverer  with application context, endpoint path mappers list, filters collection and filters collection;
	Check if controller endpoint discoverer is endpoint exposed;
	Create endpoint;
	Create operation;
	Create operation key

90.3. Add a class for controller endpoint filter. It allows to:

	Instantiate controller endpoint filter

90.4. Add an interface declaration  for controller endpoints supplier

90.5. Add a class for discovered controller endpoint. It allows to:

	Instantiate discovered controller endpoint  with endpoint discoverer, endpoint id and endpoint id;
	Get controller;
	Get root path

90.6. Add a class for discovered servlet endpoint. It allows to:

	Instantiate discovered servlet endpoint  with endpoint discoverer, endpoint id and endpoint id;
	Get root path;
	Get endpoint servlet

90.7. Add a class for discovered web endpoint. It allows to:

	Instantiate discovered web endpoint  with endpoint discoverer, endpoint id, operations collection and operations collection;
	Get root path

90.8. Add a class for discovered web operation. It allows to:

	Instantiate discovered web operation  with endpoint id, discovered operation method, operation invoker, web operation request predicate and web operation request predicate;
	Get id;
	Check if discovered web operation has selector;
	Dash name;
	Blocking method;
	Check if discovered web operation is blocking;
	Get request predicate;
	Append fields

90.9. Add an interface declaration  for exposable controller endpoint. It allows to:

	Get controller

90.10. Add a class for request predicate factory. It allows to:

	Instantiate request predicate factory  with endpoint media types;
	Get request predicate;
	Get path;
	Check if request predicate factory has selector;
	Slash name;
	Get consumes;
	Produces discovered operation method;
	Check if request predicate factory produces resource;
	Check if request predicate factory consumes request body;
	Determine http method

90.11. Add a class for servlet endpoint discoverer. It allows to:

	Instantiate servlet endpoint discoverer  with application context, endpoint path mappers list, filters collection and filters collection;
	Check if servlet endpoint discoverer is endpoint exposed;
	Create endpoint;
	Create operation;
	Create operation key

90.12. Add a class for servlet endpoint filter. It allows to:

	Instantiate servlet endpoint filter

90.13. Add an interface declaration  for servlet endpoints supplier

90.14. Add an object creator class for web endpoint discoverer. It allows to:

	Instantiate web endpoint discoverer  with application context, parameter value mapper, endpoint media types, endpoint path mappers list, invoker advisors collection, filters collection and filters collection;
	Create endpoint;
	Create operation;
	Create operation key

90.15. Add a class for web endpoint filter. It allows to:

	Instantiate web endpoint filter

91. Changes to package org.springframework.boot.actuate.endpoint.web.reactive:  

91.1. Add a class for controller endpoint handler mapping. It allows to:

	Instantiate controller endpoint handler mapping  with endpoint mapping, endpoints collection, cors configuration and cors configuration;
	Get handlers;
	Handle init handler methods;
	Register handler method;
	Process controller endpoint handler mapping controller endpoint handler mapping with endpoint mapped patterns;
	Get endpoint mapped pattern;
	Process controller endpoint handler mapping controller endpoint handler mapping with new patterns;
	Check if controller endpoint handler mapping has cors configuration source;
	Handle init cors configuration

92. Changes to package org.springframework.boot.actuate.endpoint.web.servlet:  

92.1. Add a class for controller endpoint handler mapping. It allows to:

	Instantiate controller endpoint handler mapping  with endpoint mapping, endpoints collection, cors configuration and cors configuration;
	Get handlers;
	Handle init handler methods;
	Register handler method;
	Process controller endpoint handler mapping controller endpoint handler mapping with endpoint mapped patterns;
	Get endpoint mapped pattern;
	Process controller endpoint handler mapping controller endpoint handler mapping with new patterns;
	Check if controller endpoint handler mapping has cors configuration source;
	Handle init cors configuration;
	Extend interceptors

92.2. Add a class for skip path extension content negotiation. It allows to:

	Handle http servlet request

92.3. Add a class for web mvc tags tests. It allows to:

	Uri tag is data rests effective repository lookup path when available;
	Uri tag value is best matching pattern when available;
	Uri tag value is root when request has no pattern or path info;
	Uri tag value is root when request has no pattern and slash path info;
	Uri tag value is unknown when request has no pattern and non root path info;
	Uri tag value is redirection when response status is 3 xx;
	Uri tag value is  not found when response status is 404;
	Uri tag tolerates custom response status;
	Uri tag is unknown when request is null;
	Handle outcome tag is unknown when response is null;
	Handle outcome tag is informational when response is 1 xx;
	Convert outcome tag is success when response is;
	Handle outcome tag is redirection when response is 3 xx;
	Handle outcome tag is client error when response is 4 xx;
	Handle outcome tag is server error when response is 5 xx

93. Changes to package org.springframework.boot.actuate.endpoint.web.test:  

93.1. Add an interface declaration  for context factory. It allows to:

	Create context

93.2. Add a class for port holder. It allows to:

	Get port;
	Set port

93.3. Add a class for web endpoint runners. It allows to:

	Instantiate web endpoint runners  with test class;
	Create runners

94. Changes to package org.springframework.boot.actuate.env:  

94.1. Add a class for environment endpoint web extension. It allows to:

	Instantiate environment endpoint web extension  with delegate environment endpoint;
	Get environment entry;
	Get status

95. Changes to package org.springframework.boot.actuate.flyway:  

95.1. Add a class for flyway endpoint tests. It allows to:

	Flyway report is produced;
	Handle when flyway has been baselined flyway report is produced

96. Changes to package org.springframework.boot.actuate.health:  

96.1. Add an object creator class for abstract health aggregator. It allows to:

	Handle aggregate;
	Handle aggregate status;
	Handle aggregate details

96.2. Add a class for abstract health indicator. It allows to:

	Instantiate abstract health indicator;
	Instantiate abstract health indicator  with health check failed message function;
	Get health;
	Do health check

96.3. Add a class for abstract reactive health indicator. It allows to:

	Get health;
	Handle failure;
	Do health check

96.4. Add a class for application health indicator. It allows to:

	Instantiate application health indicator;
	Do health check

96.5. Add a class for application health indicator tests. It allows to:

	Check if application health indicator tests indicates up

96.6. Add a class for composite health indicator. It allows to:

	Instantiate composite health indicator  with health aggregator, indicators map and indicators map;
	Instantiate composite health indicator  with health aggregator, health indicator registry and health indicator registry;
	Get registry;
	Get health

96.7. Add a class for composite health indicator tests. It allows to:

	Handle setup;
	Create composite health indicator tests with indicators;
	Handle test serialization

96.8. Add a class for composite reactive health indicator. It allows to:

	Instantiate composite reactive health indicator  with health aggregator, reactive health indicator registry and reactive health indicator registry;
	Get timeout strategy;
	Get registry;
	Get health

96.9. Add an interface declaration  for health aggregator. It allows to:

	Handle aggregate

96.10. Add a class for health endpoint. It allows to:

	Instantiate health endpoint  with health indicator;
	Get health;
	Get health for component;
	Get health for component instance;
	Get nested health indicator

96.11. Add a class for health endpoint tests. It allows to:

	Handle status and full details are exposed;
	Handle status for component is exposed;
	Handle status for unknown component return null;
	Handle status for component instance is exposed;
	Handle status for unknown component instance return null;
	Handle status for component instance that is not A composite return null;
	Create health indicator

96.12. Add a class for health endpoint web extension. It allows to:

	Instantiate health endpoint web extension  with delegate health endpoint, health web endpoint response mapper and health web endpoint response mapper;
	Get health;
	Get health for component;
	Get health for component instance;

96.13. Add an interface declaration  for health indicator. It allows to:

	Get health

96.14. Add a class for health indicator name factory. It allows to:

	Apply health indicator name factory

96.15. Add a class for health indicator reactive adapter. It allows to:

	Instantiate health indicator reactive adapter  with delegate health indicator;
	Get health;
	Invoke mono sink

96.16. Add a class for health indicator reactive adapter tests. It allows to:

	Delegate returns health;
	Delegate throw error;
	Delegate runs  on the elastic scheduler

96.17. Add a class for health status http mapper. It allows to:

	Instantiate health status http mapper;
	Handle setup default status mapping;
	Set status mapping;
	Add status mapping;
	Get status mapping;
	Map status;
	Get uniform value

96.18. Add a class for health tests. It allows to:

	Handle status must not be null;
	Create health tests with status;
	Create health tests with details;
	Check if health tests equals and hash code;
	Process health tests health tests with exception;
	Process health tests health tests with details;
	Process health tests health tests with details map;
	Process health tests health tests with details map duplicate keys;
	Process health tests health tests with details multiple maps;
	Handle unknown with details;
	Handle unknown;
	Up health tests with details;
	U health tests;
	Down health tests with exception;
	Down health tests;
	Process health tests health tests out of service;
	Handle status code;
	Handle status

96.19. Add a class for health web endpoint response mapper. It allows to:

	Instantiate health web endpoint response mapper  with health status http mapper, show details, authorized roles set and authorized roles set;
	Map details;
	Map health;
	Create web endpoint response;
	Can see details;
	Check if health web endpoint response mapper is user in role

96.20. Add a class for ordered health aggregator tests. It allows to:

	Handle setup;
	Handle default order;
	Handle custom order;
	Handle default order with custom status;
	Handle custom order with custom status

96.21. Add a class for reactive health endpoint web extension. It allows to:

	Instantiate reactive health endpoint web extension  with delegate reactive health indicator, health web endpoint response mapper and health web endpoint response mapper;
	Get health;
	Get health for component;
	Get health for component instance;
	Get response from indicator;
	Get nested health indicator

96.22. Add an interface declaration  for reactive health indicator. It allows to:

	Get health

96.23. Rename type Status with Status

97. Changes to package org.springframework.boot.actuate.influx:  

97.1. Add a class for influx db health indicator. It allows to:

	Instantiate influx db health indicator  with influx DB;
	Do health check

97.2. Add a class for influx db health indicator tests. It allows to:

	Handle influx db is up;
	Handle influx db is down

98. Changes to package org.springframework.boot.actuate.info:  

98.1. Add a class for build info contributor. It allows to:

	Instantiate build info contributor  with build properties;
	Contribute info builder;
	Convert build info contributor to simple property source;
	Post process content

98.2. Add a class for environment info contributor. It allows to:

	Instantiate environment info contributor  with configurable environment;
	Contribute info builder

98.3. Add a class for environment info contributor tests. It allows to:

	Extract environment info contributor tests only info property;
	Extract no entry;
	Handle properties from environment should bind correctly;
	Contribute  from configurable environment

98.4. Add a class for git info contributor. It allows to:

	Instantiate git info contributor  with git properties;
	Instantiate git info contributor  with git properties, mode and mode;
	Contribute info builder;
	Convert git info contributor to simple property source;
	Post process content

98.5. Add a class for git info contributor tests. It allows to:

	Coerce date;
	Shorten commit id;
	Process git info contributor tests git info contributor tests with git id and abbrev

98.6. Add an interface declaration  for info contributor. It allows to:

	Contribute info builder

98.7. Add a class for info endpoint. It allows to:

	Instantiate info endpoint  with info contributors list;
	Info info endpoint

98.8. Add a class for info endpoint tests. It allows to:

	Info info endpoint tests;
	Info info endpoint tests with no contributors produces empty map

98.9. Add a class for info properties info contributor. It allows to:

	Instantiate info properties info contributor  with properties, mode and mode;
	Get properties;
	Get mode;
	Convert info properties info contributor to simple property source;
	Generate content;
	Extract content;
	Post process content;
	Convert info properties info contributor to property source;
	Copy target properties if set;
	Replace value;
	Get nested map

98.10. Add a class for info tests. It allows to:

	Handle info is immutable;
	Info takes copy  of map

98.11. Add a class for map info contributor. It allows to:

	Instantiate map info contributor  with info map;
	Contribute info builder

98.12. Add a class for simple info contributor. It allows to:

	Instantiate simple info contributor;
	Contribute info builder

98.13. Add a class for simple info contributor tests. It allows to:

	Prefix is mandatory;
	Map simple object;
	Contribute simple info contributor tests from

99. Changes to package org.springframework.boot.actuate.jdbc:  

99.1. Add a class for data source health indicator tests. It allows to:

	Handle init;
	Close data source health indicator tests;
	Handle health indicator with default settings;
	Handle health indicator with custom validation query;
	Handle health indicator with invalid validation query;
	Handle health indicator close connection

100. Changes to package org.springframework.boot.actuate.ldap:  

100.1. Add a class for ldap health indicator tests. It allows to:

	Handle ldap is up;
	Handle ldap is down

101. Changes to package org.springframework.boot.actuate.logging:  

101.1. Add a class for log file web endpoint. It allows to:

	Instantiate log file web endpoint  with environment, external file and external file;
	Instantiate log file web endpoint  with environment;
	Log file;
	Get log file resource

101.2. Add a class for log file web endpoint tests. It allows to:

	Before log file web endpoint tests;
	Handle null response without log file;
	Handle null response with missing log file;
	Handle resource response with log file;
	Handle resource response with log file and deprecated property;
	Handle resource response with external log file

101.3. Add a class for loggers endpoint tests. It allows to:

	Handle loggers should return logger configurations;
	Handle logger levels when name specified should return levels;
	Configure log level should set level  on logging system;
	Configure log level  with null sets level on logging system to null

102. Changes to package org.springframework.boot.actuate.mail:  

102.1. Add a class for mail health indicator. It allows to:

	Instantiate mail health indicator  with java mail sender impl;
	Do health check

103. Changes to package org.springframework.boot.actuate.management:  

103.1. Add a class for heap dump web endpoint tests. It allows to:

	Parallel request produces  too many requests response;
	Create heap dumper

103.2. Add a class for thread dump endpoint tests. It allows to:

	Dump threads

104. Changes to package org.springframework.boot.actuate.metrics:  

104.1. Add a class for metrics endpoint tests. It allows to:

	Handle list names handles empty list of meters;
	Handle list names produces list of unique meter names;
	Handle list names recurses over composite registries;
	Handle metric values are the sum of all time series matching tags;
	Find first matching meters  from nested registries;
	Matching meter  not found in nested registries;
	Handle metric tag values are deduplicated;
	Handle metric with space in tag value;
	Handle metric with invalid tag;
	Handle metric present in one registry of A composite and not another;
	Non existent metric;
	Max aggregation;
	Count aggregation;
	Assert metric has statistic equal  to meter registry;
	Get count;
	Handle available tag keys

105. Changes to package org.springframework.boot.actuate.metrics.amqp:  

105.1. Add a class for rabbit metrics. It allows to:

	Instantiate rabbit metrics  with connection factory, tags iterable and tags iterable;
	Convert bind

105.2. Add a class for rabbit metrics tests. It allows to:

	Handle connection factory is instrumented;
	Handle connection factory with tags is instrumented

106. Changes to package org.springframework.boot.actuate.metrics.cache:  

106.1. Add an interface declaration  for cache meter binder provider. It allows to:

	Get meter binder

106.2. Add a class for cache metrics registrar tests. It allows to:

	Convert bind;

106.3. Add an object creator class for caffeine cache meter binder provider. It allows to:

	Get meter binder

106.4. Add a class for caffeine cache meter binder provider tests. It allows to:

	Handle caffeine cache provider

106.5. Add an object creator class for eh cache 2 cache meter binder provider. It allows to:

	Get meter binder

106.6. Add a class for eh cache 2 cache meter binder provider tests. It allows to:

	Eh cache 2 cache provider

106.7. Add an object creator class for hazelcast cache meter binder provider. It allows to:

	Get meter binder

106.8. Add a class for hazelcast cache meter binder provider tests. It allows to:

	Handle hazelcast cache provider

106.9. Add an object creator class for j cache cache meter binder provider. It allows to:

	Get meter binder

106.10. Add a class for j cache cache meter binder provider tests. It allows to:

	Handle j cache cache provider

107. Changes to package org.springframework.boot.actuate.metrics.export.prometheus:  

107.1. Add a class for prometheus scrape endpoint. It allows to:

	Instantiate prometheus scrape endpoint  with collector registry;
	Scrape prometheus scrape endpoint

108. Changes to package org.springframework.boot.actuate.metrics.web.client:  

108.1. Add a class for default rest template exchange tags provider. It allows to:

	Get tags

108.2. Add a class for metrics client http request interceptor. It allows to:

	Instantiate metrics client http request interceptor  with meter registry, tags provider and tags provider;
	Intercept http request;
	Create uri template handler;
	Expand arguments map;
	Expand;
	Get time builder

108.3. Add a class for metrics rest template customizer. It allows to:

	Instantiate metrics rest template customizer  with meter registry, tags provider and tags provider;
	Customize rest template

108.4. Add a class for metrics rest template customizer tests. It allows to:

	Handle setup;
	Intercept rest template;
	Avoid duplicate registration;
	Normalize uri  to contain leading slash;
	Intercept rest template  with uri

108.5. Add a class for rest template exchange tags. It allows to:

	Instantiate rest template exchange tags;
	Get method;
	Get uri;
	Get strip uri;
	Ensure rest template exchange tags;
	Get status;
	Get status message;
	Get client name;
	Get outcome

108.6. Add an interface declaration  for rest template exchange tags provider. It allows to:

	Get tags

109. Changes to package org.springframework.boot.actuate.metrics.web.reactive.server:  

109.1. Add a class for default web flux tags provider. It allows to:

	Http request tags

109.2. Add a class for metrics web filter. It allows to:

	Instantiate metrics web filter  with meter registry, web flux tags provider and web flux tags provider;
	Get filter;
	Handle success;
	Handle error

109.3. Add a class for metrics web filter tests. It allows to:

	Handle setup;
	Convert filter adds tags;
	Convert filter adds non empty tags;
	Create exchange;
	Assert metrics contains tag

109.4. Add a class for web flux tags. It allows to:

	Instantiate web flux tags;
	Get method;
	Get status;
	Get uri;
	Get path info;
	Get exception;
	Get outcome

109.5. Add an interface declaration  for web flux tags provider. It allows to:

	Http request tags

109.6. Add a class for web flux tags tests. It allows to:

	Handle setup;
	Uri tag value is best matching pattern when available;
	Uri tag value is redirection when response status is 3 xx;
	Uri tag value is  not found when response status is 404;
	Uri tag tolerates custom response status;
	Uri tag value is root when request has no pattern or path info;
	Uri tag value is root when request has no pattern and slash path info;
	Uri tag value is unknown when request has no pattern and non root path info;
	Handle method tag tolerates non standard http methods;
	Handle outcome tag is unknown when response status is null;
	Handle outcome tag is informational when response is 1 xx;
	Convert outcome tag is success when response is;
	Handle outcome tag is redirection when response is 3 xx;
	Handle outcome tag is client error when response is 4 xx;
	Handle outcome tag is server error when response is 5 xx

110. Changes to package org.springframework.boot.actuate.metrics.web.servlet:  

110.1. Add a class for default web mvc tags provider. It allows to:

	Get tags;
	Get http servlet request long request tags

110.2. Add a class for web mvc tags. It allows to:

	Instantiate web mvc tags;
	Get method;
	Get status;
	Get uri;
	Extract status;
	Get matching pattern;
	Get path info;
	Get exception;
	Get outcome

110.3. Add an interface declaration  for web mvc tags provider. It allows to:

	Get tags;
	Get http servlet request long request tags

111. Changes to package org.springframework.boot.actuate.mongo:  

111.1. Add a class for mongo health indicator. It allows to:

	Instantiate mongo health indicator  with mongo template;
	Do health check

111.2. Add a class for mongo health indicator tests. It allows to:

	Close mongo health indicator tests;
	Handle mongo is up;
	Handle mongo is down

111.3. Add a class for mongo reactive health indicator. It allows to:

	Instantiate mongo reactive health indicator  with reactive mongo template;
	Do health check;
	U health builder

111.4. Add a class for mongo reactive health indicator tests. It allows to:

	Handle test mongo is up;
	Handle test mongo is down

112. Changes to package org.springframework.boot.actuate.neo4j:  

112.1. Add a class for neo 4 j health indicator. It allows to:

	Instantiate neo 4 j health indicator  with session factory;
	Do health check;
	Extract result

112.2. Add a class for neo 4 j health indicator tests. It allows to:

	Before neo 4 j health indicator tests;
	Handle neo 4 j up;
	Handle neo 4 j down

113. Changes to package org.springframework.boot.actuate.redis:  

113.1. Add a class for redis health indicator. It allows to:

	Instantiate redis health indicator  with redis connection factory;
	Do health check

113.2. Add a class for redis health indicator tests. It allows to:

	Handle redis is up;
	Handle redis is down;
	Create health indicator;
	Handle redis cluster is up

113.3. Add a class for redis reactive health indicator. It allows to:

	Instantiate redis reactive health indicator  with reactive redis connection factory;
	Do health check;
	U health builder

113.4. Add a class for redis reactive health indicator tests. It allows to:

	Handle redis is up;
	Handle redis command is down;
	Handle redis connection is down;
	Create health indicator

114. Changes to package org.springframework.boot.actuate.security:  

114.1. Add a class for abstract authentication audit listener. It allows to:

	Set application event publisher;
	Get publisher;
	Publish audit event

114.2. Add a class for abstract authorization audit listener. It allows to:

	Set application event publisher;
	Get publisher;
	Publish audit event

114.3. Add a class for authentication audit listener tests. It allows to:

	Handle init;
	Handle test authentication success;
	Handle test other authentication success;
	Handle test authentication failed;
	Handle test authentication switch;
	Convert test authentication switch back;
	Handle test details are included in audit event;
	Handle authentication event

114.4. Add a class for authorization audit listener. It allows to:

	Process authorization audit listener authorization audit listener on application event;
	Process authorization audit listener authorization audit listener on authentication credentials not found event;
	Process authorization audit listener authorization audit listener on authorization failure event

114.5. Add a class for authorization audit listener tests. It allows to:

	Handle init;
	Handle test authentication credentials not found;
	Handle test authorization failure;
	Handle test details are included in audit event;
	Handle authorization event

115. Changes to package org.springframework.boot.actuate.session:  

115.1. Add a class for sessions endpoint tests. It allows to:

	Handle sessions for username;
	Get session;
	Get session  with id not found;
	Delete session

116. Changes to package org.springframework.boot.actuate.solr:  

116.1. Add a class for solr health indicator. It allows to:

	Instantiate solr health indicator  with solr client;
	Do health check

116.2. Add a class for solr health indicator tests. It allows to:

	Close solr health indicator tests;
	Handle solr is up;
	Handle solr is up and request failed;
	Handle solr is down;
	Handle mock response

117. Changes to package org.springframework.boot.actuate.system:  

117.1. Add a class for disk space health indicator. It allows to:

	Instantiate disk space health indicator  with path file, threshold data size and threshold data size;
	Do health check

117.2. Add a class for disk space health indicator tests. It allows to:

	Set disk space health indicator tests;
	Handle disk space is up;
	Handle disk space is down

118. Changes to package org.springframework.boot.actuate.trace.http:  

118.1. Add a class for http trace endpoint tests. It allows to:

	Trace http trace endpoint tests;
	Create request

118.2. Add an interface declaration  for http trace repository. It allows to:

	Find http trace repository;
	Add http trace

118.3. Add a class for in memory http trace repository. It allows to:

	Set reverse;
	Set capacity;
	Find in memory http trace repository;
	Add http trace

118.4. Add a class for in memory http trace repository tests. It allows to:

	Handle capacity limited;
	Reverse false;
	Create request

118.5. Add an interface declaration  for traceable request. It allows to:

	Get method;
	Get uri;
	Get headers;
	Get remote address

118.6. Add an interface declaration  for traceable response. It allows to:

	Get status;
	Get headers

119. Changes to package org.springframework.boot.actuate.trace.http.reactive:  

119.1. Add a class for http trace web filter tests. It allows to:

	Handle filter traces exchange;
	Handle filter captures session id when session is used;
	Handle filter does not capture id of unused session;
	Handle filter captures principal;
	Get principal;
	Execute filter

120. Changes to package org.springframework.boot.actuate.trace.http.servlet:  

120.1. Add a class for http trace filter tests. It allows to:

	Handle filter traces exchange;
	Handle filter captures session id;
	Handle service;
	Handle filter captures principal;
	Convert status is assumed;
	Handle filter rejects invalid requests

121. Changes to package org.springframework.boot.actuate.web.mappings:  

121.1. Add a class for handler method description. It allows to:

	Instantiate handler method description  with handler method;
	Get name;
	Get descriptor;
	Get class name

121.2. Add an interface declaration  for mapping description provider. It allows to:

	Get mapping name;
	Describe mappings

122. Changes to package org.springframework.boot.actuate.web.mappings.reactive:  

122.1. Add a class for dispatcher handler mapping description. It allows to:

	Instantiate dispatcher handler mapping description  with dispatcher handler mapping details;
	Get handler;
	Predicate dispatcher handler mapping description;
	Get details

122.2. Add a class for dispatcher handler mapping details. It allows to:

	Get handler method;
	Set handler method;
	Get handler function;
	Set handler function;
	Get request mapping conditions;
	Set request mapping conditions

122.3. Add a class for handler function description. It allows to:

	Instantiate handler function description  with handler function;
	Get class name

123. Changes to package org.springframework.boot.actuate.web.mappings.servlet:  

123.1. Add a class for dispatcher servlet mapping description. It allows to:

	Instantiate dispatcher servlet mapping description  with dispatcher servlet mapping details;
	Get handler;
	Predicate dispatcher servlet mapping description;
	Get details

123.2. Add a class for dispatcher servlet mapping details. It allows to:

	Get handler method;
	Set handler method;
	Get request mapping conditions;
	Set request mapping conditions

123.3. Add a class for filter registration mapping description. It allows to:

	Instantiate filter registration mapping description  with filter registration;
	Get servlet name mappings;
	Get url pattern mappings

123.4. Add a class for filters mapping description provider. It allows to:

	Describe mappings;
	Get mapping name

123.5. Add a class for registration mapping description. It allows to:

	Instantiate registration mapping description  with registration;
	Get name;
	Get class name;
	Get registration

123.6. Add a class for servlet registration mapping description. It allows to:

	Instantiate servlet registration mapping description  with servlet registration;
	Get mappings

123.7. Add a class for servlets mapping description provider. It allows to:

	Describe mappings;
	Get mapping name

124. Changes to package org.springframework.boot.actuate.web.trace.reactive:  

124.1. Add a class for http trace web filter. It allows to:

	Instantiate http trace web filter  with http trace repository, http exchange tracer, includes set and includes set;
	Get order;
	Get set order;
	Get filter;
	Process http trace web filter http trace web filter as type;
	Get started session id

124.2. Add a class for server web exchange traceable request. It allows to:

	Instantiate server web exchange traceable request  with server web exchange;
	Get remote address;
	Get method;
	Get uri;
	Get headers;

124.3. Add a class for traceable server http response. It allows to:

	Instantiate traceable server http response  with server http response;
	Get status;
	Get headers

125. Changes to package org.springframework.boot.actuate.web.trace.servlet:  

125.1. Add a class for traceable http servlet request. It allows to:

	Instantiate traceable http servlet request  with http servlet request;
	Get method;
	Get uri;
	Append query string;
	Get headers;
	Get remote address;
	Extract headers

125.2. Add a class for traceable http servlet request tests. It allows to:

	Handle setup;
	Get uri  without query string should return uri;
	Get uri should return uri  with query string;
	Get uri  with special characters in query string should encode;
	Get uri  with special characters encoded should not double encode;
	Validate traceable http servlet request tests

125.3. Add a class for traceable http servlet response. It allows to:

	Instantiate traceable http servlet response  with http servlet response;
	Get status;
	Get headers;
	Extract headers

126. Changes to package org.springframework.boot.admin:  

126.1. Add an interface declaration  for spring application admin MX bean. It allows to:

	Check if spring application admin MX bean is ready;
	Check if spring application admin MX bean is embedded web application;
	Get property;
	Handle shutdown

127. Changes to package org.springframework.boot.ansi:  

127.1. Add a class for ansi colors tests. It allows to:

	Get closest when exact match should return ansi color;
	Get closest when  close should return ansi color;
	Get closest

127.2. Add an interface declaration  for ansi element. It allows to:

	Convert ansi element to string

127.3. Add a class for ansi output. It allows to:

	Enabled enabled;
	Set console available;
	Enabled ansi output;
	Encode ansi element;
	Convert ansi output to string;
	Enabled sb string builder;
	Build disabled;
	Check if ansi output is enabled;
	Detect ansi output if ansi capable

127.4. Add a class for ansi output enabled value. It allows to:

	Instantiate ansi output enabled value;
	Get ansi output enabled value

127.5. Add a class for ansi output tests. It allows to:

	Enable ansi output tests;
	Reset ansi output tests;
	Encoding ansi output tests

127.6. Add a class for ansi property source tests. It allows to:

	Reset ansi property source tests;
	Get ansi style;
	Get ansi color;
	Get ansi background;
	Get ansi;
	Missing ansi property source tests;
	Enabled ansi property source tests;
	Encode disabled

128. Changes to package org.springframework.boot.ant:  

128.1. Add a class for find main class. It allows to:

	Instantiate find main class  with project;
	Execute find main class;
	Find main class;
	Handle find main class;
	Set main class;
	Set classes root;
	Set property

128.2. Add a class for share antlib loader. It allows to:

	Instantiate share antlib loader  with project;
	Execute share antlib loader;
	Set refid

129. Changes to package org.springframework.boot.autoconfigure:  

129.1. Add a class for abstract depends on bean factory post processor. It allows to:

	Instantiate abstract depends on bean factory post processor  with bean class, factory bean class and factory bean class;
	Instantiate abstract depends on bean factory post processor  with bean class;
	Post process bean factory;
	Get bean names;
	Get bean definition

129.2. Add a class for adhoc test suite

129.3. Add a class for auto configuration exclude filter. It allows to:

	Set bean class loader;
	Match metadata reader;
	Check if auto configuration exclude filter is configuration;
	Check if auto configuration exclude filter is auto configuration;
	Get auto configurations

129.4. Rename type AutoConfigurationImportEvent with AutoConfigurationImportEvent

129.5. Add an interface declaration  for auto configuration import filter. It allows to:

	Match auto configuration metadata

129.6. Add an interface declaration  for auto configuration import listener. It allows to:

	Process auto configuration import listener auto configuration import listener on auto configuration import event

129.7. Rename type AutoConfigurationMetadata with AutoConfigurationMetadata

129.8. Add a class for auto configuration metadata loader tests. It allows to:

	Handle load should load properties;
	Get was processed when processed should return true;
	Get was processed when not processed should return false;
	Get integer should return value;
	Get integer when missing should return null;
	Get integer  with default when missing should return default;
	Get set should return value;
	Get set when missing should return null;
	Get set  with default when missing should return default;
	Get should return value;
	Get when missing should return null;
	Get auto configuration metadata loader tests with default when missing should return default;
	Get load

129.9. Add a class for auto configurations. It allows to:

	Instantiate auto configurations  with classes collection;
	Get sort;
	Get order;
	Merge merged classes set;
	O classes

129.10. Add a class for auto configure configuration class tests

129.11. Add a class for early init factory bean. It allows to:

	Set property  from config;
	Check if early init factory bean is singleton;
	Get object type;
	Get object

129.12. Add a class for import auto configuration import selector. It allows to:

	Determine imports;
	Get attributes;
	Get candidate configurations;
	Collect candidate configurations;
	Get configurations  for annotation;
	Load factory names;
	Get exclusions;
	Get annotations;
	Collect annotations;
	Get order;
	Handle invalid excludes

129.13. Add a class for test auto configuration package registrar. It allows to:

	Register bean definitions

129.14. Rename type TestAutoConfigurationSorter with TestAutoConfigurationSorter

130. Changes to package org.springframework.boot.autoconfigure.admin:  

130.1. Rename type SpringApplicationAdminJmxAutoConfiguration with SpringApplicationAdminJmxAutoConfiguration

131. Changes to package org.springframework.boot.autoconfigure.amqp:  

131.1. Add a class for abstract rabbit listener container factory configurer. It allows to:

	Set message converter;
	Set message recoverer;
	Set retry template customizers;
	Set rabbit properties;
	Get rabbit properties;
	Configure factory;

131.2. Add a class for direct rabbit listener container factory configurer. It allows to:

	Configure direct rabbit listener container factory

131.3. Add a class for rabbit properties tests. It allows to:

	Convert host defaults;
	Handle custom host;
	Handle host is determined from first address;
	Determine host returns host property when no addresses;
	Handle port defaults to 5672;
	Handle custom port;
	Determine port returns port  of first address;
	Determine port returns port property when no addresses;
	Determine port returns default amqp port when first address has no explicit port;
	Handle virtual host defaults to null;
	Handle custom virtual host;
	Handle virtual host retains A leading slash;
	Determine virtual host returns virtual host  of first address;
	Determine virtual host returns property when no addresses;
	Determine virtual host returns property when first address has no virtual host;
	Determine virtual host is slash when address has trailing slash;
	Handle empty virtual host is coerced to A slash;
	Username defaults  to guest;
	Handle custom username;
	Determine username returns username  of first address;
	Determine username returns property when no addresses;
	Determine username returns property when first address has no username;
	Convert password defaults;
	Handle custom password;
	Determine password returns password  of first address;
	Determine password returns property when no addresses;
	Determine password returns property when first address has no password;
	Convert addresses defaults;
	Handle custom addresses;
	Determine addresses returns addresses  with just host and port;
	Determine addresses uses host and port properties when no addresses set;
	Handle simple container use consistent default values;
	Handle direct container use consistent default values

131.4. Add a class for simple rabbit listener container factory configurer. It allows to:

	Configure simple rabbit listener container factory

132. Changes to package org.springframework.boot.autoconfigure.batch:  

132.1. Add a class for basic batch configurer. It allows to:

	Instantiate basic batch configurer  with batch properties, data source, transaction manager customizers and transaction manager customizers;
	Get job repository;
	Get transaction manager;
	Get job launcher;
	Get job explorer;
	Initialize basic batch configurer;
	Create job explorer;
	Create job launcher;
	Create job repository;
	Determine isolation level;
	Create transaction manager;
	Build transaction manager

132.2. Add a class for batch auto configuration. It allows to:

	Instantiate batch auto configuration  with batch properties;
	Get batch data source initializer;
	Get job launcher command line runner;
	Get job execution exit code generator;
	Get job operator

132.3. Add a class for batch data source initializer. It allows to:

	Instantiate batch data source initializer  with data source, resource loader, batch properties and batch properties;
	Get mode;
	Get schema location;
	Get database name

132.4. Add a class for job execution event. It allows to:

	Instantiate job execution event  with job execution;
	Get job execution

132.5. Add a class for job execution exit code generator. It allows to:

	Process job execution exit code generator job execution exit code generator on application event;
	Get exit code

132.6. Add a class for job execution exit code generator tests. It allows to:

	Handle test exit code for running;
	Handle test exit code for completed;
	Handle test exit code for failed

132.7. Add a class for job launcher command line runner. It allows to:

	Instantiate job launcher command line runner  with job launcher, job explorer, job repository and job repository;
	Get set order;
	Get order;
	Set application event publisher;
	Set job registry;
	Set job names;
	Set job parameters converter;
	Set jobs;
	Run job launcher command line runner;
	Launch job  from properties;
	Execute local jobs;
	Execute registered jobs;
	Execute job;
	Get next job parameters;
	Get next job parameters  for existing;
	Check if job launcher command line runner is stopped or failed;
	Get job parameters;
	Merge job parameters

132.8. Add a class for jpa batch configurer. It allows to:

	Instantiate jpa batch configurer  with batch properties, data source, transaction manager customizers, entity manager factory and entity manager factory;
	Determine isolation level;
	Create transaction manager

133. Changes to package org.springframework.boot.autoconfigure.cache:  

133.1. Add a class for cache condition. It allows to:

	Get match outcome

133.2. Add a class for cache configurations. It allows to:

	Instantiate cache configurations;
	Get configuration class;
	Get type

133.3. Add an interface declaration  for cache manager customizer. It allows to:

	Customize cache manager

133.4. Add a class for cache manager customizers. It allows to:

	Instantiate cache manager customizers  with customizers list;
	Customize cache manager

133.5. Add a class for caffeine cache configuration. It allows to:

	Get cache manager;
	Create cache manager;
	Set cache builder

133.6. Add a class for couchbase cache configuration. It allows to:

	Get cache manager

133.7. Add a class for eh cache 2 cache auto configuration tests. It allows to:

	Eh cache  with caches;
	Eh cache  with customizers;
	Eh cache  with config;
	Eh cache  with existing cache manager

133.8. Add a class for eh cache 3 cache auto configuration tests. It allows to:

	Ehcache 3  as J cache with caches;
	Ehcache 3  as J cache with config

133.9. Add a class for generic cache configuration. It allows to:

	Get cache manager

133.10. Add a class for hazelcast cache configuration. It allows to:

	Get cache manager

133.11. Add a class for infinispan cache configuration. It allows to:

	Get cache manager;
	Handle infinispan cache manager;
	Create embedded cache manager;
	Get default cache configuration

133.12. Add an interface declaration  for j cache manager customizer. It allows to:

	Customize cache manager

133.13. Rename type JCachePropertiesCustomizer with JCachePropertiesCustomizer

133.14. Add an object creator class for no op cache configuration. It allows to:

	Get cache manager

133.15. Add a class for redis cache configuration. It allows to:

	Get cache manager;
	Determine configuration;
	Create configuration

133.16. Add a class for simple cache configuration. It allows to:

	Get cache manager

134. Changes to package org.springframework.boot.autoconfigure.cache.support:  

134.1. Add a class for mock caching provider. It allows to:

	Get cache manager;
	Get default class loader;
	Get default URI;
	Get default properties;
	Close mock caching provider;
	Check if mock caching provider is supported

135. Changes to package org.springframework.boot.autoconfigure.cassandra:  

135.1. Add a class for cassandra auto configuration. It allows to:

	Get cassandra cluster;
	Get query options;
	Get socket options;
	Get pooling options

135.2. Add an interface declaration  for cluster builder customizer. It allows to:

	Customize cluster builder

136. Changes to package org.springframework.boot.autoconfigure.condition:  

136.1. Add a class for all nested conditions. It allows to:

	Instantiate all nested conditions  with configuration phase;
	Get final match outcome;
	Check if all nested conditions has same size

136.2. Add an object creator class for any nested condition. It allows to:

	Instantiate any nested condition  with configuration phase;
	Get final match outcome

136.3. Rename type ConditionEvaluationReportAutoConfigurationImportListener with ConditionEvaluationReportAutoConfigurationImportListener

136.4. Add a class for condition evaluation report auto configuration import listener tests. It allows to:

	Handle setup;
	Should be  in spring factories;
	Process condition evaluation report auto configuration import listener tests condition evaluation report auto configuration import listener tests on auto configuration import event should record candidates;
	Process condition evaluation report auto configuration import listener tests condition evaluation report auto configuration import listener tests on auto configuration import event should record exclusions;
	Process condition evaluation report auto configuration import listener tests condition evaluation report auto configuration import listener tests on auto configuration import event should apply exclusions globally;
	Handle on auto configuration import event should apply exclusions globally when exclusion is already applied

136.5. Add a class for condition message tests. It allows to:

	Check if condition message tests is empty when empty should return true;
	Check if condition message tests is empty when not empty should return false;
	Convert condition message tests to string when empty should return empty string;
	Convert condition message tests to string when has message should return message;
	Append when has existing message should add space;
	Append when appending null should do nothing;
	Append when no message should  not add space;
	And condition when using class should include condition;
	And condition when using string should include condition;
	And condition when including details should include condition;
	Process condition message tests condition message tests of collection should combine;
	Process condition message tests condition message tests of collection when null should return empty;
	Process condition message tests condition message tests for condition should include condition;
	Process condition message tests condition message tests for condition should not add extra space with empty condition;
	Process condition message tests condition message tests for condition when class should include condition;
	Get found exactly should construct message;
	Get found when single element should use singular;
	Get found none at all should construct message;
	Get found when multiple elements should use plural;
	Get found when quote style should quote;
	Get did not find when single element should use singular;
	Get did not find when multiple elements should use plural;
	Get resulted in should construct message;
	Not available should construct message;
	Handle available should construct message

136.6. Add a class for condition outcome. It allows to:

	Instantiate condition outcome;
	Instantiate condition outcome  with condition message;
	Match condition outcome;
	Match condition message;
	No match;
	Check if condition outcome is match;
	Get message;
	Get condition message;
	Check if condition outcome equals;
	Hash code;
	Convert condition outcome to string;
	Handle inverse

136.7. Add an object creator class for none nested conditions. It allows to:

	Instantiate none nested conditions  with configuration phase;
	Get final match outcome

136.8. Add a class for on class condition auto configuration import filter tests. It allows to:

	Handle setup;
	Handle should be registered;
	Match should match classes;
	Match should record outcome;
	Get auto configuration metadata

136.9. Add a class for on cloud platform condition. It allows to:

	Get match outcome;

136.10. Add a class for on expression condition. It allows to:

	Get match outcome;
	Evaluate expression;
	Wrap on expression condition if necessary

136.11. Add a class for on java condition. It allows to:

	Get match outcome;
	Check if on java condition is within

136.12. Add a class for on property list condition. It allows to:

	Instantiate on property list condition  with message builder supplier;
	Get match outcome

136.13. Add a class for on resource condition. It allows to:

	Get match outcome;
	Collect values

136.14. Add a class for on web application condition. It allows to:

	Get outcomes;
	Get outcome;
	Get match outcome;
	Check if on web application condition is web application;
	Check if on web application condition is any web application;
	Check if on web application condition is servlet web application;
	Check if on web application condition is reactive web application;
	Deduce type

136.15. Add a class for resource condition. It allows to:

	Instantiate resource condition;
	Get match outcome;
	Get resource outcome;
	Start condition message

136.16. Rename type SpringBootCondition with SpringBootCondition

137. Changes to package org.springframework.boot.autoconfigure.condition.config.first:  

137.1. Add a class for sample auto configuration. It allows to:

	One sample auto configuration

138. Changes to package org.springframework.boot.autoconfigure.condition.config.second:  

138.1. Add a class for sample auto configuration. It allows to:

	Two sample auto configuration

139. Changes to package org.springframework.boot.autoconfigure.condition.scan:  

139.1. Add an object creator class for scanned factory bean configuration. It allows to:

	Get example bean factory bean

140. Changes to package org.springframework.boot.autoconfigure.context:  

140.1. Add a class for configuration properties auto configuration

140.2. Add a class for message source properties. It allows to:

	Get basename;
	Set basename;
	Encoding message source properties;
	Set encoding;
	Get cache duration;
	Set cache duration;
	Check if message source properties is fallback to system locale;
	Set fallback  to system locale;
	Check if message source properties is always use message format;
	Set message source properties always use message format;
	Check if message source properties is use code as default message;
	Get set use code as default message

140.3. Rename type PropertyPlaceholderAutoConfiguration with PropertyPlaceholderAutoConfiguration

141. Changes to package org.springframework.boot.autoconfigure.context.filtersample:  

141.1. Add a class for example configuration. It allows to:

	Get example

141.2. Add a class for example filtered auto configuration. It allows to:

	Another example

142. Changes to package org.springframework.boot.autoconfigure.couchbase:  

142.1. Add a class for couchbase test configurer. It allows to:

	Handle couchbase environment;
	Handle couchbase cluster;
	Handle couchbase cluster info;
	Handle couchbase client

142.2. Add a class for on bootstrap hosts condition. It allows to:

	Instantiate on bootstrap hosts condition

143. Changes to package org.springframework.boot.autoconfigure.dao:  

143.1. Add a class for persistence exception translation auto configuration. It allows to:

	Get persistence exception translation post processor

144. Changes to package org.springframework.boot.autoconfigure.data:  

144.1. Add a class for abstract repository configuration source support. It allows to:

	Register bean definitions;
	Get configuration source;
	Get base packages;
	Get bootstrap mode;
	Get annotation;
	Get configuration;
	Get repository configuration extension;
	Set resource loader;
	Set bean factory;
	Set environment

144.2. Add a class for on repository type condition. It allows to:

	Get match outcome;
	Get type property

145. Changes to package org.springframework.boot.autoconfigure.data.alt.cassandra:  

145.1. Add an interface declaration  for city cassandra repository

145.2. Add an interface declaration  for reactive city cassandra repository

146. Changes to package org.springframework.boot.autoconfigure.data.alt.couchbase:  

146.1. Add an interface declaration  for city couchbase repository

146.2. Add an interface declaration  for reactive city couchbase repository

147. Changes to package org.springframework.boot.autoconfigure.data.alt.elasticsearch:  

147.1. Add an interface declaration  for city elasticsearch db repository

148. Changes to package org.springframework.boot.autoconfigure.data.alt.jpa:  

148.1. Add an interface declaration  for city jpa repository

149. Changes to package org.springframework.boot.autoconfigure.data.alt.ldap:  

149.1. Rename type PersonLdapRepository with PersonLdapRepository

150. Changes to package org.springframework.boot.autoconfigure.data.alt.mongo:  

150.1. Add an interface declaration  for city mongo db repository

150.2. Add an interface declaration  for reactive city mongo db repository

151. Changes to package org.springframework.boot.autoconfigure.data.alt.neo4j:  

151.1. Add an interface declaration  for city neo 4 j repository

152. Changes to package org.springframework.boot.autoconfigure.data.alt.redis:  

152.1. Add an interface declaration  for city redis repository

153. Changes to package org.springframework.boot.autoconfigure.data.alt.solr:  

153.1. Add an interface declaration  for city solr repository

154. Changes to package org.springframework.boot.autoconfigure.data.cassandra:  

154.1. Add a class for cassandra data auto configuration. It allows to:

	Instantiate cassandra data auto configuration  with bean factory, cassandra properties, cluster, environment and environment;
	Get cassandra mapping;
	Create simple user type resolver;
	Get cassandra converter;
	Get cassandra session;
	Get cassandra template;
	Cassandra custom conversions

154.2. Add a class for cassandra data auto configuration integration tests. It allows to:

	Set cassandra data auto configuration integration tests;
	Close cassandra data auto configuration integration tests;
	Check if cassandra data auto configuration integration tests has default schema action set;
	Check if cassandra data auto configuration integration tests has recreate schema action set;
	Create test keyspace  if not exists

154.3. Add an object creator class for cassandra reactive data auto configuration. It allows to:

	Handle reactive cassandra session;
	Handle reactive cassandra session factory;
	Handle reactive cassandra template

154.4. Add a class for cassandra reactive repositories auto configuration

154.5. Add a class for cassandra repositories auto configuration

155. Changes to package org.springframework.boot.autoconfigure.data.cassandra.city:  

155.1. Add a class for city. It allows to:

	Get id;
	Set id;
	Get name;
	Set name;
	Get state;
	Set state;
	Get country;
	Set country;
	Get map;
	Set map

155.2. Add an interface declaration  for city repository

155.3. Add an interface declaration  for reactive city repository

156. Changes to package org.springframework.boot.autoconfigure.data.couchbase:  

156.1. Add an object creator class for couchbase configurer adapter configuration. It allows to:

	Instantiate couchbase configurer adapter configuration  with couchbase configuration;
	Get spring boot couchbase configurer

156.2. Add a class for couchbase data properties. It allows to:

	Check if couchbase data properties is auto index;
	Set auto index;
	Get consistency;
	Set consistency

156.3. Add a class for couchbase reactive data auto configuration

156.4. Add a class for couchbase reactive repositories auto configuration

156.5. Add a class for couchbase repositories auto configuration

156.6. Add a class for spring boot couchbase configurer. It allows to:

	Instantiate spring boot couchbase configurer  with couchbase environment, cluster, cluster info, bucket and bucket;
	Handle couchbase environment;
	Handle couchbase cluster;
	Handle couchbase cluster info;
	Handle couchbase client

156.7. Add a class for spring boot couchbase data configuration. It allows to:

	Instantiate spring boot couchbase data configuration  with application context, couchbase data properties, couchbase configurer object provider and couchbase configurer object provider;
	Get couchbase configurer;
	Get default consistency;
	Get initial entity set;
	Handle couchbase template;
	Get custom conversions;
	Get index manager

156.8. Add a class for spring boot couchbase reactive data configuration. It allows to:

	Instantiate spring boot couchbase reactive data configuration  with couchbase data properties, couchbase configurer and couchbase configurer;
	Get couchbase configurer;
	Get default consistency;
	Handle reactive couchbase template;
	Handle reactive repository operations mapping

157. Changes to package org.springframework.boot.autoconfigure.data.couchbase.city:  

157.1. Add a class for city

157.2. Add an interface declaration  for city repository

157.3. Add an interface declaration  for reactive city repository. It allows to:

	Save city;
	Find reactive city repository by id

158. Changes to package org.springframework.boot.autoconfigure.data.elasticsearch:  

158.1. Add a class for elasticsearch auto configuration. It allows to:

	Instantiate elasticsearch auto configuration  with elasticsearch properties;
	Handle elasticsearch client;
	Create properties

158.2. Add an object creator class for elasticsearch data auto configuration. It allows to:

	Handle elasticsearch template;
	Handle elasticsearch converter;
	Mapping context

158.3. Add a class for elasticsearch data auto configuration tests. It allows to:

	Close elasticsearch data auto configuration tests;
	Template elasticsearch data auto configuration tests back off with no client;
	Handle template exists;
	Mapping context exists;
	Handle converter exists;
	Assert has single bean

158.4. Add a class for elasticsearch properties. It allows to:

	Get cluster name;
	Set cluster name;
	Get cluster nodes;
	Set cluster nodes;
	Get properties;
	Set properties

158.5. Add a class for elasticsearch repositories auto configuration

159. Changes to package org.springframework.boot.autoconfigure.data.elasticsearch.city:  

159.1. Add a class for city. It allows to:

	Instantiate city;
	Get name;
	Get state;
	Get country;
	Get map;
	Convert city to string

159.2. Add an interface declaration  for city repository. It allows to:

	Find pageable;
	Find pageable by name like and country like all ignoring case;
	Find city repository by name and country all ignoring case

160. Changes to package org.springframework.boot.autoconfigure.data.empty:  

160.1. Add a class for empty data package

161. Changes to package org.springframework.boot.autoconfigure.data.jpa:  

161.1. Add a class for entity manager factory depends on post processor. It allows to:

	Instantiate entity manager factory depends on post processor

162. Changes to package org.springframework.boot.autoconfigure.data.jpa.city:  

162.1. Add a class for city. It allows to:

	Instantiate city;
	Get name;
	Get state;
	Get country;
	Get map;
	Convert city to string

162.2. Add an interface declaration  for city repository. It allows to:

	Find pageable;
	Find pageable by name like and country like all ignoring case;
	Find city repository by name and country all ignoring case

163. Changes to package org.springframework.boot.autoconfigure.data.ldap:  

163.1. Rename type LdapRepositoriesAutoConfiguration with LdapRepositoriesAutoConfiguration

164. Changes to package org.springframework.boot.autoconfigure.data.ldap.person:  

164.1. Rename type Person with Person

164.2. Rename type PersonRepository with PersonRepository

165. Changes to package org.springframework.boot.autoconfigure.data.mongo:  

165.1. Add a class for mongo client depends on bean factory post processor. It allows to:

	Instantiate mongo client depends on bean factory post processor

165.2. Add an object creator class for mongo reactive data auto configuration. It allows to:

	Handle reactive mongo database factory;
	Handle reactive mongo template;
	Mapping mongo converter

165.3. Add a class for mongo reactive data auto configuration tests. It allows to:

	Handle template exists;
	Handle backs off if mongo client bean is not present

165.4. Add a class for mongo reactive repositories auto configuration

165.5. Add a class for mongo repositories auto configuration

165.6. Add a class for reactive streams mongo client depends on bean factory post processor. It allows to:

	Instantiate reactive streams mongo client depends on bean factory post processor

166. Changes to package org.springframework.boot.autoconfigure.data.mongo.city:  

166.1. Add a class for city. It allows to:

	Instantiate city;
	Get name;
	Get state;
	Get country;
	Get map;
	Convert city to string

166.2. Add an interface declaration  for city repository. It allows to:

	Find pageable;
	Find pageable by name like and country like all ignoring case;
	Find city repository by name and country all ignoring case

166.3. Add an interface declaration  for reactive city repository. It allows to:

	Find reactive city repository

167. Changes to package org.springframework.boot.autoconfigure.data.mongo.country:  

167.1. Add a class for country. It allows to:

	Instantiate country;
	Get name;
	Convert country to string

167.2. Add an interface declaration  for country repository

168. Changes to package org.springframework.boot.autoconfigure.data.neo4j:  

168.1. Add a class for neo 4 j repositories auto configuration

169. Changes to package org.springframework.boot.autoconfigure.data.neo4j.city:  

169.1. Add a class for city. It allows to:

	Instantiate city;
	Instantiate city  with country;
	Get name;
	Get state;
	Get country;
	Get map;
	Convert city to string

169.2. Add an interface declaration  for city repository. It allows to:

	Find pageable

170. Changes to package org.springframework.boot.autoconfigure.data.neo4j.country:  

170.1. Add a class for country. It allows to:

	Instantiate country;
	Get name;
	Convert country to string

170.2. Add an interface declaration  for country repository

171. Changes to package org.springframework.boot.autoconfigure.data.neo4j.empty:  

171.1. Add a class for empty marker

172. Changes to package org.springframework.boot.autoconfigure.data.redis:  

172.1. Add an interface declaration  for jedis client configuration builder customizer. It allows to:

	Customize jedis client configuration builder

172.2. Add a class for jedis connection configuration. It allows to:

	Instantiate jedis connection configuration  with redis properties, sentinel configuration object provider, cluster configuration object provider and cluster configuration object provider;
	Handle redis connection factory;
	Create jedis connection factory;
	Get jedis client configuration;
	Apply properties;
	Pooling redis properties pool;
	Get jedis pool config;
	Customize configuration  from url

172.3. Add an interface declaration  for lettuce client configuration builder customizer. It allows to:

	Customize lettuce client configuration builder

172.4. Add a class for redis auto configuration. It allows to:

	Handle redis template;
	String redis template

172.5. Add an object creator class for redis reactive auto configuration. It allows to:

	Handle reactive redis template

172.6. Add a class for redis reactive auto configuration tests. It allows to:

	Handle test default redis configuration

172.7. Add a class for redis repositories auto configuration

173. Changes to package org.springframework.boot.autoconfigure.data.redis.city:  

173.1. Add a class for city. It allows to:

	Instantiate city;
	Get name;
	Get state;
	Get country;
	Get map;
	Convert city to string

173.2. Add an interface declaration  for city repository. It allows to:

	Find pageable;
	Find pageable by name like and country like all ignoring case;
	Find city repository by name and country all ignoring case

174. Changes to package org.springframework.boot.autoconfigure.data.rest:  

174.1. Add an object creator class for repository rest mvc auto configuration. It allows to:

	Get spring boot repository rest configurer

174.2. Add a class for repository rest properties. It allows to:

	Get base path;
	Set base path;
	Get default page size;
	Set default page size;
	Get max page size;
	Set max page size;
	Get page param name;
	Set page param name;
	Get limit param name;
	Set limit param name;
	Get sort param name;
	Set sort param name;
	Get detection strategy;
	Set detection strategy;
	Get default media type;
	Set default media type;
	Get return body  on create;
	Set return body  on create;
	Get return body  on update;
	Set return body  on update;
	Get enable enum translation;
	Set enable enum translation;
	Apply  to repository rest configuration

174.3. Rename type SpringBootRepositoryRestConfigurer with SpringBootRepositoryRestConfigurer

175. Changes to package org.springframework.boot.autoconfigure.data.solr:  

175.1. Add a class for solr repositories auto configuration

176. Changes to package org.springframework.boot.autoconfigure.data.solr.city:  

176.1. Add a class for city. It allows to:

	Get id;
	Set id;
	Get name;
	Set name

176.2. Add an interface declaration  for city repository. It allows to:

	Find  by name starting with pageable

177. Changes to package org.springframework.boot.autoconfigure.data.web:  

177.1. Add a class for spring data web auto configuration. It allows to:

	Instantiate spring data web auto configuration  with spring data web properties;
	Handle pageable customizer;
	Sort customizer

177.2. Add a class for spring data web auto configuration tests. It allows to:

	Handle web support is auto configured in web application contexts;
	Handle auto configuration backs off in non web application contexts;
	Customize pageable;
	Handle default pageable;
	Customize sort

178. Changes to package org.springframework.boot.autoconfigure.domain:  

178.1. Add a class for entity scanner. It allows to:

	Instantiate entity scanner  with application context;
	Scan annotation types class;
	Get packages

179. Changes to package org.springframework.boot.autoconfigure.domain.scan.a:  

179.1. Add a class for embeddable A

179.2. Add a class for entity A

180. Changes to package org.springframework.boot.autoconfigure.domain.scan.b:  

180.1. Add a class for embeddable B

180.2. Add a class for entity B

181. Changes to package org.springframework.boot.autoconfigure.domain.scan.c:  

181.1. Add a class for embeddable C

181.2. Add a class for entity C

182. Changes to package org.springframework.boot.autoconfigure.elasticsearch.jest:  

182.1. Add an interface declaration  for http client config builder customizer. It allows to:

	Customize builder

182.2. Add a class for jest auto configuration. It allows to:

	Handle jest client;
	Create http client config

183. Changes to package org.springframework.boot.autoconfigure.flyway:  

183.1. Add a class for flyway migration initializer. It allows to:

	Instantiate flyway migration initializer  with flyway;
	Instantiate flyway migration initializer  with flyway, flyway migration strategy and flyway migration strategy;
	Handle after properties set;
	Get order;
	Get set order

183.2. Add an interface declaration  for flyway migration strategy. It allows to:

	Migrate flyway

183.3. Add a class for flyway properties. It allows to:

	Check if flyway properties is enabled;
	Enabled flyway properties;
	Check if flyway properties is check location;
	Set check location;
	Get locations;
	Set locations;
	Encoding flyway properties;
	Set encoding;
	Get connect retries;
	Set connect retries;
	Get schemas;
	Set schemas;
	Get table;
	Set table;
	Get baseline description;
	Set baseline description;
	Get baseline version;
	Set baseline version;
	Get installed  by;
	Set installed  by;
	Get placeholders;
	Set placeholders;
	Get placeholder prefix;
	Set placeholder prefix;
	Get placeholder suffix;
	Set placeholder suffix;
	Check if flyway properties is placeholder replacement;
	Set placeholder replacement;
	Get flyway properties sql migration prefix;
	Set sql migration prefix;
	Get flyway properties sql migration suffixes;
	Set sql migration suffixes;
	Get flyway properties sql migration separator;
	Set sql migration separator;
	Get repeatable sql migration prefix;
	Set repeatable sql migration prefix;
	Get target;
	Set target;
	Check if flyway properties is create data source;
	Get url;
	Set url;
	Get user;
	Set user;
	Get password;
	Set password;
	Get init sqls;
	Set init sqls;
	Check if flyway properties is baseline on migrate;
	Set baseline  on migrate;
	Check if flyway properties is clean disabled;
	Set clean disabled;
	Check if flyway properties is clean on validation error;
	Set clean  on validation error;
	Check if flyway properties is group;
	Set group;
	Check if flyway properties is ignore missing migrations;
	Set ignore missing migrations;
	Check if flyway properties is ignore ignored migrations;
	Set ignore ignored migrations;
	Check if flyway properties is ignore pending migrations;
	Set ignore pending migrations;
	Check if flyway properties is ignore future migrations;
	Set ignore future migrations;
	Check if flyway properties is mixed;
	Set mixed;
	Check if flyway properties is out of order;
	Set flyway properties out of order;
	Check if flyway properties is skip default callbacks;
	Set skip default callbacks;
	Check if flyway properties is skip default resolvers;
	Set skip default resolvers;
	Check if flyway properties is validate on migrate;
	Set validate  on migrate

183.4. Add a class for flyway schema management provider. It allows to:

	Instantiate flyway schema management provider  with flyway instances iterable;
	Get schema management

184. Changes to package org.springframework.boot.autoconfigure.freemarker:  

184.1. Add a class for abstract free marker configuration. It allows to:

	Instantiate abstract free marker configuration  with free marker properties;
	Get properties;
	Apply properties

184.2. Add a class for free marker auto configuration. It allows to:

	Instantiate free marker auto configuration  with application context, free marker properties and free marker properties;
	Check template location exists;
	Get locations;
	Handle location exists

184.3. Add a class for free marker auto configuration reactive integration tests. It allows to:

	Handle default configuration;
	Handle default view resolution;
	Handle custom prefix;
	Handle custom suffix;
	Handle custom template loader path;
	Handle custom free marker settings;
	Render template;
	Greeting free marker auto configuration reactive integration tests;
	Render application context

184.4. Add a class for free marker auto configuration tests. It allows to:

	Render non web app template;
	Greeting free marker auto configuration tests;
	Non existent template location;
	Handle empty template location;
	Non existent location and empty location

184.5. Add a class for free marker non web configuration. It allows to:

	Instantiate free marker non web configuration  with free marker properties;
	Handle free marker configuration

184.6. Add a class for free marker properties. It allows to:

	Instantiate free marker properties;
	Get settings;
	Set settings;
	Get template loader path;
	Check if free marker properties is prefer file system access;
	Set prefer file system access;
	Set template loader path

184.7. Add a class for free marker reactive web configuration. It allows to:

	Instantiate free marker reactive web configuration  with free marker properties;
	Handle free marker configurer;
	Handle free marker configuration;
	Handle free marker view resolver

184.8. Add a class for free marker servlet web configuration. It allows to:

	Instantiate free marker servlet web configuration  with free marker properties;
	Handle free marker configurer;
	Handle free marker configuration;
	Handle free marker view resolver;
	Get resource url encoding filter

184.9. Rename type FreeMarkerTemplateAvailabilityProviderTests with FreeMarkerTemplateAvailabilityProviderTests

185. Changes to package org.springframework.boot.autoconfigure.groovy.template:  

185.1. Add a class for groovy template auto configuration tests. It allows to:

	Handle setup context;
	Close groovy template auto configuration tests;
	Handle default configuration;
	Handle empty template location;
	Handle default view resolution;
	Check if groovy template auto configuration tests includes view resolution;
	Disable view resolution;
	Handle locale view resolution;
	Handle custom content type;
	Handle custom prefix;
	Handle custom suffix;
	Handle custom template loader path;
	Disable cache;
	Render template;
	Handle custom configuration;
	Register and refresh context;
	Render groovy template auto configuration tests;
	Render locale

185.2. Rename type GroovyTemplateAvailabilityProviderTests with GroovyTemplateAvailabilityProviderTests

185.3. Add a class for groovy template properties. It allows to:

	Instantiate groovy template properties;
	Get resource loader path;
	Set resource loader path

186. Changes to package org.springframework.boot.autoconfigure.gson:  

186.1. Add an interface declaration  for gson builder customizer. It allows to:

	Customize gson builder

186.2. Add a class for gson properties. It allows to:

	Get generate non executable json;
	Set generate non executable json;
	Get exclude fields  without expose annotation;
	Set exclude fields  without expose annotation;
	Get serialize nulls;
	Set serialize nulls;
	Get enable complex map key serialization;
	Set enable complex map key serialization;
	Get disable inner class serialization;
	Set disable inner class serialization;
	Get gson properties long serialization policy;
	Set long serialization policy;
	Get field naming policy;
	Set field naming policy;
	Get gson properties pretty printing;
	Set pretty printing boolean pretty printing;
	Get lenient;
	Set lenient;
	Get disable html escaping;
	Set disable html escaping;
	Get date format;
	Set date format

187. Changes to package org.springframework.boot.autoconfigure.h2:  

187.1. Add a class for h 2 console auto configuration. It allows to:

	H 2 console

187.2. Add a class for h 2 console auto configuration tests. It allows to:

	Handle setup context;
	Close h 2 console auto configuration tests;
	Handle console is disabled by default;
	Handle property can enable console;
	Handle custom path must begin with A slash;
	Handle custom path with trailing slash;
	Handle custom path;
	Handle custom init parameters

187.3. Add a class for h 2 console properties tests. It allows to:

	Handle path must not be empty;
	Handle path must have length greater than one;
	Handle custom path must begin with A slash

188. Changes to package org.springframework.boot.autoconfigure.hateoas:  

188.1. Add a class for hateoas properties. It allows to:

	Get use hal  as default json media type;
	Get set use hal as default json media type

189. Changes to package org.springframework.boot.autoconfigure.hazelcast:  

189.1. Add a class for hazelcast auto configuration

189.2. Add a class for hazelcast auto configuration tests. It allows to:

	Handle default config file

189.3. Add a class for hazelcast client factory. It allows to:

	Instantiate hazelcast client factory  with client config location resource;
	Instantiate hazelcast client factory  with client config;
	Get client config;
	Get hazelcast instance

189.4. Add a class for hazelcast config resource condition. It allows to:

	Instantiate hazelcast config resource condition;
	Get resource outcome

189.5. Add a class for hazelcast instance factory. It allows to:

	Instantiate hazelcast instance factory  with config location resource;
	Instantiate hazelcast instance factory  with config;
	Get config;
	Get hazelcast instance

189.6. Add a class for hazelcast properties. It allows to:

	Get config;
	Set config;
	Resolve config location

190. Changes to package org.springframework.boot.autoconfigure.http:  

190.1. Add a class for http message converters. It allows to:

	Instantiate http message converters  with additional converters;
	Instantiate http message converters  with additional converters collection;
	Instantiate http message converters  with converters collection;
	Get combined converters;
	Check if http message converters is replacement;
	Configure part converters;
	Extract part converters;
	Post process converters;
	Post process part converters;
	Get default converters;
	Get default message converters;
	Reorder xml converters  to end;
	Get iterator;
	Get converters;
	Add class  if exists

190.2. Add a class for http message converters auto configuration without jackson tests. It allows to:

	Close http message converters auto configuration without jackson tests;
	Handle auto configuration works with spring hateoas but without jackson

190.3. Add a class for http message converters tests. It allows to:

	Check if http message converters tests contains defaults;
	Add http message converters tests before existing converter;
	Add new converters;
	Convert converters are added;
	Post process converters;
	Post process part converters;
	Extract form part converters;
	Find form converter

191. Changes to package org.springframework.boot.autoconfigure.influx:  

191.1. Add an object creator class for influx db auto configuration. It allows to:

	Get influx db;
	Determine builder

191.2. Add a class for influx db properties. It allows to:

	Get url;
	Set url;
	Get user;
	Set user;
	Get password;
	Set password

192. Changes to package org.springframework.boot.autoconfigure.integration:  

192.1. Add a class for integration data source initializer. It allows to:

	Instantiate integration data source initializer  with data source, resource loader, integration properties and integration properties;
	Get mode;
	Get schema location

193. Changes to package org.springframework.boot.autoconfigure.jackson:  

193.1. Add an interface declaration  for jackson 2 object mapper builder customizer. It allows to:

	Customize jackson 2 object mapper builder

193.2. Add a class for jackson properties. It allows to:

	Get date format;
	Set date format;
	Get joda date time format;
	Set joda date time format;
	Get property naming strategy;
	Set property naming strategy;
	Get visibility;
	Get serialization;
	Get deserialization;
	Get mapper;
	Get parser;
	Get generator;
	Get default property inclusion;
	Set default property inclusion;
	Get time zone;
	Set time zone;
	Get locale;
	Set locale

194. Changes to package org.springframework.boot.autoconfigure.jdbc:  

194.1. Add a class for data source bean creation failure analyzer. It allows to:

	Set environment;
	Analyze root failure throwable;
	Get failure analysis;
	Get description;
	Get action;
	Get active profiles

194.2. Add a class for data source initializer. It allows to:

	Instantiate data source initializer  with data source, data source properties, resource loader and resource loader;
	Instantiate data source initializer  with data source, data source properties and data source properties;
	Get data source;
	Create schema;
	Handle init schema;
	Check if data source initializer is enabled;
	Check if data source initializer is embedded;
	Get scripts;
	Get resources;
	Do get resources;
	Run scripts

194.3. Add a class for data source initializer invoker. It allows to:

	Instantiate data source initializer invoker  with data source object provider, data source properties, application context and application context;
	Handle after properties set;
	Initialize data source initializer;
	Process data source initializer invoker data source initializer invoker on application event;
	Get data source initializer

194.4. Add a class for data source initializer post processor. It allows to:

	Get order;
	Post process  before initialization;
	Post process  after initialization

194.5. Add a class for data source initializer tests. It allows to:

	Initialize embedded  by default;
	Initialize data source initializer tests with mode always;
	Assert number  of rows;
	Initialize data source initializer tests with mode never;
	Initialize data source initializer tests only embedded by default;
	Create data source

194.6. Add a class for data source properties tests. It allows to:

	Determine driver;
	Determine driver  with explicit config;
	Determine url;
	Determine url  with no embedded support;
	Determine url  with explicit config;
	Determine url  with generate unique name;
	Determine username;
	Determine username  with explicit config;
	Determine password;
	Determine password  with explicit config;
	Determine credentials  for schema scripts;
	Determine credentials  for data scripts

194.7. Add a class for data source schema created event. It allows to:

	Instantiate data source schema created event  with data source

194.8. Add a class for embedded data source configuration. It allows to:

	Set bean class loader;
	Get data source

194.9. Add a class for embedded data source configuration tests. It allows to:

	Close context;
	Handle default embedded database;
	Generate unique name;
	Get database name;
	Get load

194.10. Add a class for hikari data source configuration tests. It allows to:

	Handle test data source exists;
	Handle test data source properties overridden;
	Handle test data source generic properties overridden;
	Handle test data source defaults preserved;
	Convert name is aliased;
	Handle pool name takes precedence over name

194.11. Add an object creator class for hikari driver configuration failure analyzer. It allows to:

	Analyze root failure throwable

194.12. Add a class for jdbc operations depends on post processor. It allows to:

	Instantiate jdbc operations depends on post processor

194.13. Rename type JndiDataSourceAutoConfiguration with JndiDataSourceAutoConfiguration

194.14. Add an object creator class for multi data source configuration. It allows to:

	Get test 1 data source;
	Convert test

194.15. Add an object creator class for multi data source using primary configuration. It allows to:

	Get test 1 data source;
	Convert test

194.16. Add a class for test data source. It allows to:

	Instantiate test data source;

194.17. Add a class for xA data source auto configuration. It allows to:

	Get data source;
	Set bean class loader;
	Create xa data source;
	Create xa data source instance;
	Handle bind xa properties;
	Get binder source

195. Changes to package org.springframework.boot.autoconfigure.jersey:  

195.1. Add an interface declaration  for resource config customizer. It allows to:

	Customize resource config

196. Changes to package org.springframework.boot.autoconfigure.jms:  

196.1. Add a class for default jms listener container factory configurer. It allows to:

	Set destination resolver;
	Set message converter;
	Set transaction manager;
	Set jms properties;
	Configure default jms listener container factory

196.2. Add a class for jms properties tests. It allows to:

	Handle format concurrency null;
	Handle format concurrency only lower bound;
	Handle format concurrency only higher bound;
	Handle format concurrency both bounds;
	Set delivery mode enables qo S;
	Set priority enables qo S;
	Set time  to live enables qo S

196.3. Add a class for jndi connection factory auto configuration tests. It allows to:

	Handle setup jndi;
	Clean jndi connection factory auto configuration tests;
	Detect no available candidates;
	Detect jndi connection factory auto configuration tests with jms XA connection factory;
	Detect jndi connection factory auto configuration tests with XA connection factory;
	Handle jndi name property set;
	Handle jndi name property set with resource ref;
	Handle jndi name property set with wrong value;
	Assert connection factory;
	Configure connection factory

197. Changes to package org.springframework.boot.autoconfigure.jms.activemq:  

197.1. Add a class for active MQ auto configuration

197.2. Add an interface declaration  for active MQ connection factory customizer. It allows to:

	Customize active MQ connection factory

197.3. Add a class for active MQ connection factory factory. It allows to:

	Instantiate active MQ connection factory factory  with active MQ properties, factory customizers list and factory customizers list;
	Create connection factory;
	Do create connection factory;
	Create connection factory instance;
	Customize active MQ connection factory;
	Determine broker url

197.4. Add a class for active MQ properties tests. It allows to:

	Get broker url is  in memory by default;
	Get broker url use explicit broker url;
	Get broker url  with in memory set to false;
	Get explicit broker url  always wins;
	Set trust all packages;
	Set trusted packages;
	Create factory

197.5. Add a class for active MQXA connection factory configuration. It allows to:

	Get jms connection factory;
	Non xa jms connection factory

198. Changes to package org.springframework.boot.autoconfigure.jms.artemis:  

198.1. Add a class for artemis auto configuration

198.2. Add an interface declaration  for artemis configuration customizer. It allows to:

	Customize configuration

198.3. Add a class for artemis connection factory factory. It allows to:

	Instantiate artemis connection factory factory  with listable bean factory, artemis properties and artemis properties;
	Create connection factory;
	Start embedded jms;
	Do create connection factory;
	Deduce mode;
	Create embedded connection factory;
	Create native connection factory

198.4. Add an object creator class for artemis embedded configuration factory. It allows to:

	Instantiate artemis embedded configuration factory  with artemis properties;
	Create configuration;
	Create address configuration;
	Get data dir

198.5. Add a class for artemis embedded configuration factory tests. It allows to:

	Handle default data dir;
	Handle persistence setup;
	Get generated cluster password;
	Handle specific cluster password;
	Check if artemis embedded configuration factory tests has dlq expiry queue address settings configured;
	Check if artemis embedded configuration factory tests has dlq expiry queue configured

198.6. Add a class for artemis embedded server configuration. It allows to:

	Instantiate artemis embedded server configuration  with artemis properties;
	Get artemis configuration;
	Get artemis server;
	Get artemis jms configuration;
	Add list;
	Add queues;
	Add topics

198.7. Add a class for artemis no op binding registry. It allows to:

	Get lookup;
	Handle bind;
	Unbind artemis no op binding registry;
	Close artemis no op binding registry

198.8. Add a class for artemis XA connection factory configuration. It allows to:

	Get jms connection factory;
	Non xa jms connection factory

199. Changes to package org.springframework.boot.autoconfigure.jmx:  

199.1. Add a class for jmx auto configuration. It allows to:

	Instantiate jmx auto configuration  with environment;
	Handle mbean exporter;
	Object naming strategy;
	Handle mbean server

199.2. Add a class for parent aware naming strategy. It allows to:

	Instantiate parent aware naming strategy  with jmx attribute source;
	Set ensure unique runtime object names;
	Get object name;
	Set application context;
	Handle parent context contains same bean

200. Changes to package org.springframework.boot.autoconfigure.jndi:  

200.1. Add a class for jndi properties hiding class loader. It allows to:

	Instantiate jndi properties hiding class loader  with parent class loader;
	Get resources

201. Changes to package org.springframework.boot.autoconfigure.jooq:  

201.1. Rename type JooqExceptionTranslator with JooqExceptionTranslator

201.2. Rename type JooqExceptionTranslatorTests with JooqExceptionTranslatorTests

201.3. Add a class for jooq properties. It allows to:

	Get jooq properties sql dialect;
	Set SQL dialect sql dialect;
	Determine data source sql dialect

201.4. Add a class for spring transaction. It allows to:

	Instantiate spring transaction  with transaction status;
	Get tx status

201.5. Add a class for spring transaction provider. It allows to:

	Instantiate spring transaction provider  with platform transaction manager;
	Begin transaction context;
	Commit ctx transaction context;
	Handle rollback;
	Get transaction status

201.6. Add a class for sql dialect lookup. It allows to:

	Instantiate sql dialect lookup;
	Get dialect

201.7. Add a class for sql dialect lookup tests. It allows to:

	Get sql dialect lookup tests sql dialect when data source is null should return default;
	Get sql dialect lookup tests sql dialect when data source is unknown should return default;
	Get sql dialect lookup tests sql dialect when derby should return derby;
	Get sql dialect lookup tests sql dialect when H 2 should return H 2;
	Get sql dialect lookup tests sql dialect when hsqldb should return hsqldb;
	Get sql dialect lookup tests sql dialect when mysql should return mysql;
	Get sql dialect lookup tests sql dialect when oracle should return default;
	Get sql dialect lookup tests sql dialect when postgres should return postgres;
	Get sql dialect lookup tests sql dialect when sqlserver should return default;
	Get sql dialect lookup tests sql dialect when db 2 should return default;
	Get sql dialect lookup tests sql dialect when informix should return default;
	Handle test get sql dialect

202. Changes to package org.springframework.boot.autoconfigure.jsonb:  

202.1. Add a class for jsonb auto configuration. It allows to:

	Get jsonb

202.2. Add a class for jsonb auto configuration with no provider tests. It allows to:

	Handle jsonb backs off when there is no provider

203. Changes to package org.springframework.boot.autoconfigure.kafka:  

203.1. Add a class for concurrent kafka listener container factory configurer. It allows to:

	Set kafka properties;
	Set message converter;
	Set reply template;
	Set transaction manager;
	Set error handler;
	Get set after rollback processor;
	Configure listener container factory;
	Configure listener factory;
	Configure container

203.2. Add a class for kafka auto configuration. It allows to:

	Instantiate kafka auto configuration  with kafka properties;
	Kafka template;
	Kafka producer listener;
	Kafka consumer factory;
	Kafka producer factory;
	Kafka transaction manager;
	Kafka kafka auto configuration;
	Kafka kafka auto configuration admin

204. Changes to package org.springframework.boot.autoconfigure.ldap:  

204.1. Add a class for ldap auto configuration. It allows to:

	Get ldap context source;
	Get ldap template

204.2. Add a class for ldap properties. It allows to:

	Get urls;
	Set urls;
	Get base;
	Set base;
	Get username;
	Set username;
	Get password;
	Set password;
	Get anonymous read  only;
	Set anonymous read  only;
	Get base environment;
	Determine urls;
	Determine port

205. Changes to package org.springframework.boot.autoconfigure.liquibase:  

205.1. Add a class for liquibase properties. It allows to:

	Get liquibase properties;
	Set change log;
	Check if liquibase properties is check change log location;
	Set check change log location;
	Get contexts;
	Set contexts;
	Get default schema;
	Set default schema;
	Get liquibase schema;
	Set liquibase schema;
	Get liquibase tablespace;
	Set liquibase tablespace;
	Get database change log table;
	Set database change log table;
	Get database change log lock table;
	Set database change log lock table;
	Check if liquibase properties is drop first;
	Set drop  first;
	Check if liquibase properties is enabled;
	Enabled liquibase properties;
	Get user;
	Set user;
	Get password;
	Set password;
	Get url;
	Set url;
	Get labels;
	Set labels;
	Get parameters;
	Set parameters;
	Get rollback file;
	Set rollback file;
	Check if liquibase properties is test rollback on update;
	Set test rollback  on update

205.2. Add a class for liquibase schema management provider. It allows to:

	Instantiate liquibase schema management provider  with liquibases object provider;
	Get schema management

206. Changes to package org.springframework.boot.autoconfigure.logging:  

206.1. Add a class for condition evaluation report message. It allows to:

	Instantiate condition evaluation report message  with condition evaluation report;
	Get log message;
	Log positive matches;
	Log negative matches;
	Log exclusions;
	Log unconditional classes;
	Get order by name;
	Map key set to fully qualified names;
	Add match log message;
	Add non match log message;
	Log condition and outcome;
	Convert condition evaluation report message to string

207. Changes to package org.springframework.boot.autoconfigure.mail:  

207.1. Add a class for mail properties. It allows to:

	Get host;
	Set host;
	Get port;
	Set port;
	Get username;
	Set username;
	Get password;
	Set password;
	Get protocol;
	Set protocol;
	Get default encoding;
	Set default encoding;
	Get properties;
	Set jndi name;
	Get jndi name

207.2. Rename type MailSenderJndiConfiguration with MailSenderJndiConfiguration

207.3. Rename type MailSenderPropertiesConfiguration with MailSenderPropertiesConfiguration

207.4. Add a class for mail sender validator auto configuration. It allows to:

	Instantiate mail sender validator auto configuration  with java mail sender impl;
	Validate connection

208. Changes to package org.springframework.boot.autoconfigure.mongo:  

208.1. Add an object creator class for mongo auto configuration. It allows to:

	Get mongo

208.2. Add a class for mongo client factory. It allows to:

	Instantiate mongo client factory  with mongo properties, environment and environment;
	Create mongo client;
	Get embedded port;
	Create embedded mongo client;
	Create network mongo client;
	Get value;
	Check if mongo client factory has custom address;
	Get credentials;
	Check if mongo client factory has custom credentials;
	Get builder

208.3. Add an interface declaration  for mongo client settings builder customizer. It allows to:

	Customize client settings builder

208.4. Add a class for mongo properties. It allows to:

	Get host;
	Set host;
	Get database;
	Set database;
	Get authentication database;
	Set authentication database;
	Get username;
	Set username;
	Get password;
	Set password;
	Get field naming strategy;
	Set field naming strategy;
	Get uri;
	Determine uri;
	Set uri;
	Get port;
	Set port;
	Get grid fs database;
	Set grid fs database;
	Get mongo client database

208.5. Add a class for reactive mongo client factory. It allows to:

	Instantiate reactive mongo client factory  with mongo properties, environment, builder customizers list and builder customizers list;
	Create mongo client;
	Get embedded port;
	Create embedded mongo client;
	Create network mongo client;
	Create credential network mongo client;
	Apply credentials;
	Get value;
	Create builder;
	Customize mongo client settings builder;
	Check if reactive mongo client factory has custom address;
	Check if reactive mongo client factory has custom credentials;
	Get builder

208.6. Add a class for reactive mongo client factory tests. It allows to:

	Handle port can be customized;
	Handle host can be customized;
	Handle credentials can be customized;
	Handle database can be customized;
	Handle authentication database can be customized;
	Handle uri can be customized;
	Retry writes is propagated  from uri;
	Handle uri can not be set with credentials;
	Handle uri can not be set with host port;
	Handle uri is ignored in embedded mode;
	Handle customizer is invoked;
	Handle customizer is invoked when host is set;
	Handle customizer is invoked for embedded mongo;
	Create mongo client;
	Extract server addresses;
	Extract mongo credentials;
	Get settings;
	Assert server address;
	Assert mongo credential

209. Changes to package org.springframework.boot.autoconfigure.mustache:  

209.1. Add a class for mustache auto configuration. It allows to:

	Instantiate mustache auto configuration  with mustache properties, application context and application context;
	Check template location exists;
	Handle mustache compiler;
	Get collector;
	Get mustache template loader

209.2. Add a class for mustache properties. It allows to:

	Instantiate mustache properties;
	Get prefix;
	Set prefix;
	Get suffix;
	Set suffix

209.3. Add a class for mustache reactive web configuration. It allows to:

	Handle mustache view resolver

209.4. Add a class for mustache resource template loader. It allows to:

	Instantiate mustache resource template loader;
	Set charset;
	Set resource loader;
	Get template

209.5. Add a class for mustache servlet web configuration. It allows to:

	Handle mustache view resolver

209.6. Add a class for mustache template availability provider. It allows to:

	Check if mustache template availability provider is template available

210. Changes to package org.springframework.boot.autoconfigure.orm.jpa:  

210.1. Add a class for database lookup. It allows to:

	Instantiate database lookup;
	Get database

210.2. Add a class for database lookup tests. It allows to:

	Get database when data source is null should return default;
	Get database when data source is unknown should return default;
	Get database when derby should return derby;
	Get database when H 2 should return H 2;
	Get database when hsqldb should return hsqldb;
	Get database when mysql should return mysql;
	Get database when oracle should return oracle;
	Get database when postgres should return postgres;
	Get database when sqlserver should return sqlserver;
	Get database when db 2 should return db 2;
	Get database when informix should return informix;
	Get database when sap should return hana;
	Handle test get database

210.3. Add a class for hibernate default ddl auto provider. It allows to:

	Instantiate hibernate default ddl auto provider  with providers iterable;
	Get default ddl auto;
	Get schema management

210.4. Add a class for hibernate default ddl auto provider tests. It allows to:

	Handle default D dl auto for embedded;
	Handle default D dl auto for embedded with positive contributor;
	Handle default D dl auto for embedded with negative contributor

210.5. Add an interface declaration  for hibernate properties customizer. It allows to:

	Customize hibernate properties map

210.6. Add a class for hibernate settings. It allows to:

	Get ddl auto;
	Hibernate properties customizers;
	Get hibernate properties customizers

210.7. Add a class for jpa properties. It allows to:

	Get properties;
	Set properties;
	Get mapping resources;
	Get database platform;
	Set database platform;
	Get database;
	Set database;
	Check if jpa properties is generate ddl;
	Set generate ddl;
	Check if jpa properties is show sql;
	Set show sql;
	Get open  in view;
	Set open  in view;
	Determine database

211. Changes to package org.springframework.boot.autoconfigure.orm.jpa.mapping:  

211.1. Add a class for non annotated entity. It allows to:

	Instantiate non annotated entity;
	Get id;
	Set id;
	Get value;
	Get set value

212. Changes to package org.springframework.boot.autoconfigure.orm.jpa.test:  

212.1. Add a class for city. It allows to:

	Instantiate city;
	Get name;
	Get state;
	Get country;
	Get map;
	Convert city to string

213. Changes to package org.springframework.boot.autoconfigure.packagestest.one:  

213.1. Add a class for first configuration

214. Changes to package org.springframework.boot.autoconfigure.packagestest.two:  

214.1. Add a class for second configuration

215. Changes to package org.springframework.boot.autoconfigure.quartz:  

215.1. Add a class for quartz data source initializer. It allows to:

	Instantiate quartz data source initializer  with data source, resource loader, quartz properties and quartz properties;
	Customize resource database populator;
	Get mode;
	Get schema location;
	Get database name

215.2. Add an interface declaration  for scheduler factory bean customizer. It allows to:

	Customize scheduler factory bean

216. Changes to package org.springframework.boot.autoconfigure.reactor.core:  

216.1. Add a class for reactor core auto configuration. It allows to:

	Initialize reactor core properties

217. Changes to package org.springframework.boot.autoconfigure.security:  

217.1. Add an object creator class for security data configuration. It allows to:

	Get security evaluation context extension

217.2. Add a class for security properties tests. It allows to:

	Set security properties tests;
	Validate default filter order matches metadata;
	Handle filter order should bind;
	Handle user when not configured should use default name and generated password;
	Handle user should bind properly;
	Handle password autogenerated if empty

218. Changes to package org.springframework.boot.autoconfigure.security.oauth2.client:  

218.1. Add a class for o auth 2 client properties registration adapter. It allows to:

	Instantiate o auth 2 client properties registration adapter;
	Get client registrations;
	Get client registration;
	Get builder  from issuer if possible;
	Get builder;
	Get error message;
	Get common provider

218.2. Add a class for o auth 2 client properties registration adapter tests. It allows to:

	Handle cleanup;
	Get client registrations when using defined provider should adapt;
	Get client registrations when using common provider should adapt;
	Get client registrations when using common provider  with override should adapt;
	Get client registrations when unknown provider should throw exception;
	Get client registrations when provider  not specified should use registration id;
	Get client registrations when provider  not specified and unknown provider should throw exception;
	Handle oidc provider configuration when provider not specified on registration;
	Handle oidc provider configuration when provider specified on registration;
	Handle oidc provider configuration with custom configuration overrides provider defaults;
	Create provider;
	Create registration;
	Handle test oidc configuration;
	Handle setup mock response;
	Get response

218.3. Add a class for o auth 2 client properties tests. It allows to:

	Handle client id absent throws exception;
	Handle client secret absent should not throw exception

219. Changes to package org.springframework.boot.autoconfigure.security.reactive:  

219.1. Add a class for path request. It allows to:

	Instantiate path request;
	Convert path request to static resources

219.2. Add a class for path request tests. It allows to:

	Convert path request tests to static resources should return static resource request

219.3. Add a class for reactive user details service auto configuration. It allows to:

	Handle reactive user details service;
	Get user details;
	Get or deduce password

220. Changes to package org.springframework.boot.autoconfigure.security.servlet:  

220.1. Add an object creator class for mvc request matcher provider. It allows to:

	Instantiate mvc request matcher provider  with handler mapping introspector;
	Get request matcher

220.2. Add an interface declaration  for request matcher provider. It allows to:

	Get request matcher

220.3. Add an object creator class for security auto configuration. It allows to:

	Get authentication event publisher

220.4. Add a class for security filter auto configuration. It allows to:

	Get security filter chain registration;
	Get dispatcher types

220.5. Add a class for user details service auto configuration. It allows to:

	Process user details service auto configuration user details service auto configuration in memory user details manager;
	Get or deduce password

220.6. Add a class for web security enabler configuration

221. Changes to package org.springframework.boot.autoconfigure.security.user:  

221.1. Add a class for user. It allows to:

	Instantiate user;
	Get id;
	Set id;
	Email user;
	Set email;
	Convert user to string

221.2. Add an interface declaration  for user repository. It allows to:

	Find user repository by email

222. Changes to package org.springframework.boot.autoconfigure.sendgrid:  

222.1. Add an object creator class for send grid auto configuration. It allows to:

	Send grid

223. Changes to package org.springframework.boot.autoconfigure.session:  

223.1. Add a class for abstract session auto configuration tests. It allows to:

	Validate session repository;

223.2. Add a class for abstract session condition. It allows to:

	Instantiate abstract session condition  with web application type;
	Get match outcome

223.3. Add a class for hazelcast session properties. It allows to:

	Get map name;
	Set map name;
	Get flush mode;
	Set flush mode

223.4. Add a class for jdbc session data source initializer. It allows to:

	Instantiate jdbc session data source initializer  with data source, resource loader, jdbc session properties and jdbc session properties;
	Get mode;
	Get schema location

223.5. Add a class for jdbc session properties. It allows to:

	Get schema;
	Set schema;
	Get table name;
	Set table name;
	Get cleanup cron;
	Set cleanup cron;
	Get initialize schema;
	Set initialize schema

223.6. Add a class for mongo session properties. It allows to:

	Get collection name;
	Set collection name

223.7. Add a class for no op reactive session configuration

223.8. Add a class for no op session configuration

223.9. Add a class for non unique session repository exception. It allows to:

	Instantiate non unique session repository exception  with available candidates list;
	Get available candidates

223.10. Add an object creator class for non unique session repository failure analyzer. It allows to:

	Analyze root failure throwable

223.11. Add a class for non unique session repository failure analyzer tests. It allows to:

	Handle failure analysis with multiple candidates;
	Create failure;
	Analyze failure

223.12. Add a class for reactive session auto configuration mongo tests. It allows to:

	Handle default config;
	Handle default config with unique store implementation;
	Mongo session store  with customizations;
	Validate spring session uses mongo

223.13. Add a class for reactive session auto configuration redis tests. It allows to:

	Handle default config;
	Handle default config with unique store implementation;
	Handle redis session store with customizations;
	Validate spring session uses redis

223.14. Add a class for reactive session condition. It allows to:

	Instantiate reactive session condition

223.15. Add a class for redis session properties. It allows to:

	Get namespace;
	Set namespace;
	Get flush mode;
	Set flush mode;
	Get cleanup cron;
	Set cleanup cron

223.16. Add a class for servlet session condition. It allows to:

	Instantiate servlet session condition

223.17. Add a class for session auto configuration jdbc tests. It allows to:

	Handle default config;
	Handle default config with unique store implementation;
	Validate default config;
	Handle filter order can be customized;
	Disable data source initializer;
	Handle custom table name;
	Handle custom cleanup cron

223.18. Add a class for session auto configuration mongo tests. It allows to:

	Handle default config;
	Handle default config with unique store implementation;
	Mongo session store  with customizations;
	Validate spring session uses mongo

223.19. Add a class for session auto configuration redis tests. It allows to:

	Handle default config;
	Handle default config with unique store implementation;
	Handle redis session store with customizations;
	Validate spring session uses redis

223.20. Add a class for session repository filter configuration. It allows to:

	Get session repository filter registration;
	Get dispatcher types

223.21. Add a class for session repository unavailable exception. It allows to:

	Instantiate session repository unavailable exception  with store type;
	Get store type

224. Changes to package org.springframework.boot.autoconfigure.solr:  

224.1. Add an object creator class for solr auto configuration. It allows to:

	Handle solr client

224.2. Add a class for solr properties. It allows to:

	Get host;
	Set host;
	Get zk host;
	Set zk host

225. Changes to package org.springframework.boot.autoconfigure.template:  

225.1. Add a class for abstract template view resolver properties. It allows to:

	Instantiate abstract template view resolver properties;
	Get prefix;
	Set prefix;
	Get suffix;
	Set suffix;
	Get request context attribute;
	Set request context attribute;
	Check if abstract template view resolver properties is expose request attributes;
	Set expose request attributes;
	Check if abstract template view resolver properties is expose session attributes;
	Set expose session attributes;
	Check if abstract template view resolver properties is allow request override;
	Set allow request override;
	Check if abstract template view resolver properties is allow session override;
	Set allow session override;
	Check if abstract template view resolver properties is expose spring macro helpers;
	Set expose spring macro helpers;
	Apply abstract template view resolver properties to mvc view resolver

225.2. Add a class for abstract view resolver properties. It allows to:

	Enabled abstract view resolver properties;
	Check if abstract view resolver properties is enabled;
	Set check template location;
	Check if abstract view resolver properties is check template location;
	Get view names;
	Set view names;
	Check if abstract view resolver properties is cache;
	Set cache;
	Get content type;
	Set content type;
	Get charset;
	Get charset name;
	Set charset

225.3. Add an interface declaration  for template availability provider. It allows to:

	Check if template availability provider is template available

225.4. Add a class for template availability providers tests. It allows to:

	Handle setup;
	Create when application context is null should throw exception;
	Create when using application context should load providers;
	Create when class loader is null should throw exception;
	Create when using class loader should load providers;
	Create when providers is null should throw exception;
	Create when using providers should use providers;
	Get provider when application context is null should throw exception;
	Get provider when view is null should throw exception;
	Get provider when environment is null should throw exception;
	Get provider when class loader is null should throw exception;
	Get provider when resource loader is null should throw exception;
	Get provider when none match should return null;
	Get provider when match should return provider;
	Get provider should cache match result;
	Get provider should cache no match result;
	Get provider when cache disabled should  not use cache

225.5. Add a class for template location. It allows to:

	Instantiate template location;
	Check if template location exists;
	Exists resource pattern resolver;
	Convert template location to string

226. Changes to package org.springframework.boot.autoconfigure.thymeleaf:  

226.1. Add a class for thymeleaf template availability provider. It allows to:

	Check if thymeleaf template availability provider is template available

226.2. Add a class for thymeleaf template availability provider tests. It allows to:

	Handle availability of template in default location;
	Handle availability of template that does not exist;
	Handle availability of template with custom prefix;
	Handle availability of template with custom suffix

227. Changes to package org.springframework.boot.autoconfigure.transaction:  

227.1. Add an interface declaration  for platform transaction manager customizer. It allows to:

	Customize transaction manager

227.2. Add a class for transaction manager customizers. It allows to:

	Instantiate transaction manager customizers  with customizers collection;
	Customize platform transaction manager

227.3. Add a class for transaction properties. It allows to:

	Get default timeout;
	Set default timeout;
	Get rollback  on commit failure;
	Set rollback  on commit failure;
	Customize abstract platform transaction manager

228. Changes to package org.springframework.boot.autoconfigure.transaction.jta:  

228.1. Add a class for jndi jta configuration. It allows to:

	Get transaction manager

228.2. Add a class for jta auto configuration

228.3. Add a class for jta properties. It allows to:

	Set log dir;
	Get log dir;
	Get transaction manager id;
	Set transaction manager id

229. Changes to package org.springframework.boot.autoconfigure.validation:  

229.1. Rename type PrimaryDefaultValidatorPostProcessor with PrimaryDefaultValidatorPostProcessor

229.2. Add a class for validation auto configuration. It allows to:

	Get default validator;
	Get method validation post processor

229.3. Add a class for validation auto configuration with hibernate validator missing el impl tests. It allows to:

	Close validation auto configuration with hibernate validator missing el impl tests;
	Missing el dependency is tolerated

229.4. Add a class for validation auto configuration without validator tests. It allows to:

	Close validation auto configuration without validator tests;
	Handle validation is disabled

229.5. Add a class for validator adapter. It allows to:

	Instantiate validator adapter  with target smart validator;
	Get target;
	Handle supports;
	Validate errors;
	Set application context;
	Handle after properties set;
	Destroy validator adapter;
	Get application context;
	Existing application context;
	Create validator adapter;
	Wrap validator

230. Changes to package org.springframework.boot.autoconfigure.web:  

230.1. Add a class for on enabled resource chain condition. It allows to:

	Get match outcome;
	Get enabled property

230.2. Add a class for resource properties tests. It allows to:

	Handle resource chain no customization;
	Handle resource chain strategy enabled;
	Handle resource chain enabled;
	Handle resource chain disabled;
	Handle default static locations all end with trailing slash;
	Convert custom static locations are normalized;
	Handle empty cache control;
	Handle cache control all properties set;
	Handle invalid cache control combination

230.3. Add a class for server properties tests. It allows to:

	Handle test address binding;
	Handle test port binding;
	Handle test server header default;
	Handle test server header;
	Handle test connection timeout;
	Handle test tomcat binding;
	Handle test trailing slash of context path is removed;
	Handle test slash of context path is default value;
	Handle test context path with leading whitespace;
	Handle test context path with trailing whitespace;
	Handle test context path with leading and trailing whitespace;
	Handle test context path with leading and trailing whitespace and context with space;
	Handle test customize uri encoding;
	Handle test customize header size;
	Handle test customize header size use bytes by default;
	Handle test customize jetty acceptors;
	Handle test customize jetty selectors;
	Handle test customize jetty access log;
	Tomcat accept count matches protocol default;
	Tomcat processor cache matches protocol default;
	Tomcat max connections matches protocol default;
	Tomcat max threads matches protocol default;
	Tomcat min spare threads matches protocol default;
	Tomcat max http post size matches connector default;
	Tomcat background processor delay matches engine default;
	Tomcat uri encoding matches connector default;
	Tomcat redirect context root matches default;
	Handle tomcat access log rename on rotate matches default;
	Handle tomcat access log request attributes enabled matches default;
	Tomcat internal proxies matches default;
	Handle jetty max http post size matches default;
	Process  on dispatch failure;
	Check if  has error;
	Handle error;
	Handle undertow max http post size matches default;
	Get default connector;
	Get default protocol;
	Handle bind;

231. Changes to package org.springframework.boot.autoconfigure.web.embedded:  

231.1. Add a class for jetty web server factory customizer tests. It allows to:

	Handle setup;
	Deduce use  forward headers;
	Handle default use forward headers;
	Handle access log can be customized;
	Handle access log can be enabled;
	Get NCSA request log;
	Get set use forward headers;
	Customize max http header size;
	Handle custom max http header size ignored if negative;
	Handle custom max http header size ignored if zero;
	Get request header sizes;
	Handle bind;
	Customize and get server;
	Customize and get factory

231.2. Add a class for tomcat web server factory customizer. It allows to:

	Instantiate tomcat web server factory customizer  with environment, server properties and server properties;
	Get order;
	Customize configurable tomcat web server factory;
	Check if tomcat web server factory customizer is positive;
	Customize accept count;
	Customize processor cache;
	Customize max connections;
	Customize connection timeout;
	Customize remote ip valve;
	Get or deduce use  forward headers;
	Customize max threads;
	Customize min threads;
	Customize max http header size;
	Customize max swallow size;
	Customize max http post size;
	Customize access log;
	Customize static resources;
	Customize error report valve

231.3. Add a class for tomcat web server factory customizer tests. It allows to:

	Handle setup;
	Handle defaults are consistent;
	Handle custom accept count;
	Handle custom processor cache;
	Handle unlimited processor cache;
	Handle custom background processor delay;
	Handle custom disable max http post size;
	Handle custom max connections;
	Handle custom max http post size;
	Handle custom max http header size;
	Handle custom max http header size ignored if negative;
	Handle custom max http header size ignored if zero;
	Handle custom max swallow size;
	Handle custom remote ip valve;
	Handle custom static resource allow caching;
	Handle custom static resource cache ttl;
	Deduce use  forward headers;
	Handle default remote ip valve;
	Get set use forward headers;
	Handle test remote ip valve configured;
	Handle default background processor delay;
	Disable remote ip valve;
	Convert error report valve is configured;
	Handle test customize min spare threads;
	Handle access log buffering can be disabled;
	Handle access log can be enabled;
	Handle access log file date format by default;
	Handle access log file date format can be redefined;
	Handle access log is buffered by default;
	Handle access log is disabled by default;
	Handle access log max days default;
	Handle access log condition can be specified;
	Handle access log encoding is null when not specified;
	Handle access log encoding can be specified;
	Handle access log with default locale;
	Handle access log locale can be specified;
	Handle access log check exists default;
	Handle access log check exists specified;
	Handle access log max days can be redefined;
	Handle access log does not use ipv 6 canonical format by default;
	Handle access logwith ipv 6 canonical set;
	Handle ajp connector can be customized;
	Handle bind;
	Customize and run server;
	Customize and get server;
	Customize and get factory

231.4. Add a class for undertow web server factory customizer. It allows to:

	Instantiate undertow web server factory customizer  with environment, server properties and server properties;
	Get order;
	Customize configurable undertow web server factory;
	Check if undertow web server factory customizer is positive;
	Customize connection timeout;
	Customize max http header size;
	Customize max http post size;
	Get or deduce use  forward headers

231.5. Add a class for undertow web server factory customizer tests. It allows to:

	Handle setup;
	Customize undertow access log;
	Deduce use  forward headers;
	Handle default use forward headers;
	Get set use forward headers;
	Customize max http header size;
	Handle custom max http header size ignored if negative;
	Handle custom max http header size ignored if zero;
	Handle custom connection timeout;
	Handle mock factory;
	Handle bind

232. Changes to package org.springframework.boot.autoconfigure.web.format:  

232.1. Add a class for web conversion service. It allows to:

	Instantiate web conversion service;
	Add formatters;
	Register jsr 310;
	Register joda time;
	Register java date

232.2. Add a class for web conversion service tests. It allows to:

	Handle custom date format;
	Convert web conversion service tests from string to date

233. Changes to package org.springframework.boot.autoconfigure.web.reactive:  

233.1. Add a class for reactive web server factory customizer. It allows to:

	Instantiate reactive web server factory customizer  with server properties;
	Get order;
	Customize configurable reactive web server factory

233.2. Add a class for reactive web server factory customizer tests. It allows to:

	Handle setup;
	Handle test customize server port;
	Handle test customize server address;
	Handle test customize server ssl

233.3. Add a class for web flux properties. It allows to:

	Get date format;
	Set date format;
	Get static path pattern;
	Set static path pattern

234. Changes to package org.springframework.boot.autoconfigure.web.reactive.error:  

234.1. Add a class for default error web exception handler. It allows to:

	Instantiate default error web exception handler  with error attributes, resource properties, error properties, application context and application context;
	Get routing function;
	Render error view;
	Render error response;
	Check if default error web exception handler is include stack trace;
	Get http status;
	Check if default error web exception handler accepts text html

234.2. Add a class for dummy body. It allows to:

	Get content;
	Set content

234.3. Add a class for error web flux auto configuration. It allows to:

	Instantiate error web flux auto configuration  with server properties;
	Get error web exception handler;
	Get error attributes

235. Changes to package org.springframework.boot.autoconfigure.web.reactive.function.client:  

235.1. Add a class for web client codec customizer. It allows to:

	Instantiate web client codec customizer  with codec customizers list;
	Customize web client builder

236. Changes to package org.springframework.boot.autoconfigure.web.servlet:  

236.1. Add an interface declaration  for dispatcher servlet path. It allows to:

	Get path;
	Get relative path;
	Get prefix;
	Get servlet url mapping

236.2. Add a class for dispatcher servlet path tests. It allows to:

	Get relative path returns relative path;
	Get prefix when has simple path return path;
	Get prefix when has pattern removes pattern;
	Get path when path ends  with slash removes slash;
	Get servlet url mapping when path is empty returns slash;
	Get servlet url mapping when path is slash returns slash;
	Get servlet url mapping when path contains star returns path;
	Get servlet url mapping when has path  not ending slash returns slash star pattern;
	Get servlet url mapping when has path ending  with slash returns slash star pattern

236.3. Add a class for dispatcher servlet registration bean. It allows to:

	Instantiate dispatcher servlet registration bean  with dispatcher servlet;
	Get path;
	Set url mappings;
	Add url mappings

236.4. Add a class for dispatcher servlet registration bean tests. It allows to:

	Create when path is null throws exception;
	Get path returns path;
	Get url mappings returns single path mapped pattern;
	Set url mappings can  not be called;
	Add url mappings can  not be called

236.5. Add a class for jsp template availability provider. It allows to:

	Check if jsp template availability provider is template available;
	Get resource name

236.6. Add a class for jsp template availability provider tests. It allows to:

	Handle availability of template that does not exist;
	Handle availability of template with custom prefix;
	Handle availability of template with custom suffix;
	Check if jsp template availability provider tests is template available

236.7. Add a class for multipart auto configuration. It allows to:

	Instantiate multipart auto configuration  with multipart properties;
	Handle multipart config element;
	Handle multipart resolver

236.8. Add a class for multipart properties. It allows to:

	Enabled multipart properties;
	Get location;
	Set location;
	Get max file size;
	Set max file size;
	Get max request size;
	Set max request size;
	Get file size threshold;
	Set file size threshold;
	Check if multipart properties is resolve lazily;
	Set resolve  lazily;
	Create multipart config

236.9. Add a class for servlet web server factory customizer. It allows to:

	Instantiate servlet web server factory customizer  with server properties;
	Get order;
	Customize configurable servlet web server factory

236.10. Add a class for servlet web server factory customizer tests. It allows to:

	Handle setup;
	Handle test default display name;
	Handle test customize display name;
	Handle test customize ssl;
	Handle test customize jsp;
	Customize session properties;
	Handle test customize tomcat port;
	Customize servlet display name;
	Handle test customize tomcat min spare threads;
	Handle session store dir;
	Handle bind properties

236.11. Add a class for tomcat servlet web server factory customizer. It allows to:

	Instantiate tomcat servlet web server factory customizer  with server properties;
	Get order;
	Customize tomcat servlet web server factory;
	Customize redirect context root;
	Customize use relative redirects

236.12. Add a class for tomcat servlet web server factory customizer tests. It allows to:

	Handle setup;
	Handle custom tld skip;
	Handle custom tld skip as list;
	Handle test custom tld skip;
	Redirect context root can be configured;
	Use relative redirects can be configured;
	Handle bind;
	Customize and get server;
	Customize and get factory

236.13. Add an interface declaration  for web mvc registrations. It allows to:

	Get request mapping handler mapping;
	Get request mapping handler adapter;
	Get exception handler exception resolver

236.14. Add a class for welcome page handler mapping. It allows to:

	Instantiate welcome page handler mapping  with template availability providers, application context, welcome page optional and welcome page optional;
	Handle welcome template exists;
	Set root view name;
	Get handler internal;
	Get accepted media types

237. Changes to package org.springframework.boot.autoconfigure.web.servlet.error:  

237.1. Add a class for abstract error controller. It allows to:

	Instantiate abstract error controller  with error attributes;
	Instantiate abstract error controller  with error attributes, error view resolvers list and error view resolvers list;
	Sort error view resolvers;
	Get error attributes;
	Get trace parameter;
	Get status;
	Resolve error view

237.2. Add a class for basic error controller. It allows to:

	Instantiate basic error controller  with error attributes, error properties and error properties;
	Instantiate basic error controller  with error attributes, error properties, error view resolvers list and error view resolvers list;
	Get error path;
	Get error html;
	Get error;
	Check if basic error controller is include stack trace;
	Get error properties

237.3. Add a class for error mvc auto configuration tests. It allows to:

	Render contains view  with exception details;
	Render when  already committed logs message;
	Create web request

237.4. Add an interface declaration  for error view resolver. It allows to:

	Resolve error view

238. Changes to package org.springframework.boot.autoconfigure.webservices:  

238.1. Add a class for on wsdl locations condition. It allows to:

	Instantiate on wsdl locations condition

238.2. Add a class for web services auto configuration tests. It allows to:

	Handle default configuration;
	Handle custom path must begin with A slash;
	Handle custom path;
	Handle custom path with trailing slash;
	Handle custom load on startup;
	Handle custom init parameters;
	Process web services auto configuration tests web services auto configuration tests with wsdl beans;
	Process web services auto configuration tests web services auto configuration tests with wsdl beans as list;
	Get url mappings;
	Get servlet registration bean

238.3. Add a class for web services properties tests. It allows to:

	Handle path must not be empty;
	Handle path must have length greater than one;
	Handle custom path must begin with A slash

239. Changes to package org.springframework.boot.autoconfigure.websocket.reactive:  

239.1. Add a class for tomcat web socket reactive web server customizer. It allows to:

	Customize tomcat reactive web server factory;
	Get order

240. Changes to package org.springframework.boot.autoconfigure.websocket.servlet:  

240.1. Add a class for jetty web socket servlet web server customizer. It allows to:

	Customize jetty servlet web server factory;
	Configure web app context;
	Get order

240.2. Add a class for tomcat web socket servlet web server customizer. It allows to:

	Customize tomcat servlet web server factory;
	Get order

241. Changes to package org.springframework.boot.autoconfigureprocessor:  

241.1. Add a class for auto configure annotation processor tests. It allows to:

	Create compiler;
	Handle annotated class;
	Handle annotated class with on bean that has name;
	Handle annotated method;
	Handle annotated class with order;
	Compile types class

241.2. Rename type TestMethodConfiguration with TestMethodConfiguration

241.3. Rename type TestOrderedClassConfiguration with TestOrderedClassConfiguration

242. Changes to package org.springframework.boot.builder:  

242.1. Add a class for spring application builder. It allows to:

	Instantiate spring application builder  with sources class;
	Create spring application;
	Get context;
	Get application;
	Run spring application builder;
	Configure spring application builder as child if necessary;
	Build spring application builder;
	Get child;
	Get parent;
	Run and extract parent;
	Sibling sources class;
	Get context class;
	Get sources;
	Get web;
	Log startup info;
	Get banner;
	Get banner mode;
	Handle headless;
	Register shutdown hook;
	Handle main;
	Add command line properties;
	Set add conversion service;
	Get properties;
	Handle lazy initialization;
	Get map  from key value pairs;
	Handle lowest index of;
	Get map  from properties;
	Get profiles;
	Handle additional profiles;
	Get bean name generator;
	Get environment;
	Get resource loader;
	Get initializers;
	Get listeners

243. Changes to package org.springframework.boot.cli:  

243.1. Add a class for class loader integration tests. It allows to:

	Run class loader integration tests with isolated class loader

243.2. Add a class for cli tester spring application. It allows to:

	Instantiate cli tester spring application  with sources class;
	Post process application context

243.3. Add a class for command line IT. It allows to:

	Handle hint produces list of valid commands;
	Invoking command line IT with no arguments displays help;
	Handle unrecognized commands are handled gracefully;
	Handle version;
	Help command line IT

243.4. Add a class for default command factory. It allows to:

	Get commands

243.5. Add a class for directory sources integration tests. It allows to:

	Run directory;
	Run directory recursive;
	Run path pattern

243.6. Add a class for grab command integration tests. It allows to:

	Delete local repository;
	Grab grab command integration tests;
	Duplicate dependency management bom annotations produces an error;
	Handle custom metadata

243.7. Add a class for jar command IT. It allows to:

	No arguments;
	No sources;
	Handle jar creation with grab resolver;
	Handle jar creation;
	Handle jar creation with includes;
	Check if jar command IT is class present

243.8. Add a class for repro integration tests. It allows to:

	Grab ant builder;
	Handle security dependencies;
	Handle data jpa dependencies;
	Handle jar file extension needed

243.9. Add a class for run command integration tests. It allows to:

	Capture system properties;
	Restore system properties;
	Handle banner and logging is output by default;
	Handle quiet mode suppresses all cli output

243.10. Add a class for sample integration tests. It allows to:

	Handle app sample;
	Retry sample;
	Handle beans sample;
	Template sample;
	Handle job sample;
	Handle job web sample;
	Handle web sample;
	Handle ui sample;
	Handle actuator sample;
	Http sample;
	Handle integration sample;
	Handle xml sample;
	Tx sample;
	Handle jms sample;
	Handle rabbit sample;
	Handle caching

243.11. Add a class for spring cli. It allows to:

	Instantiate spring cli;
	Handle main;
	Add service loader commands;
	Create extended class loader;
	Get extension UR ls

243.12. Add a class for war command IT. It allows to:

	Handle war creation

244. Changes to package org.springframework.boot.cli.app:  

244.1. Add a class for spring application launcher. It allows to:

	Instantiate spring application launcher  with class loader;
	Get launch;
	Get spring application class name;
	Get environment variable

244.2. Add a class for spring application web application initializer. It allows to:

	Process spring application web application initializer spring application web application initializer on startup;
	Get sources;
	Get manifest;
	Configure spring application builder

245. Changes to package org.springframework.boot.cli.archive:  

245.1. Add a class for packaged spring application launcher. It allows to:

	Instantiate packaged spring application launcher;
	Run packaged spring application launcher;
	Get sources;
	Check if packaged spring application launcher is cli packaged;
	Load classes;
	Handle main

246. Changes to package org.springframework.boot.cli.command:  

246.1. Add a class for abstract command. It allows to:

	Instantiate abstract command;
	Get name;
	Get description;
	Get usage help;
	Get help;
	Get options help;
	Get examples

246.2. Add an interface declaration  for command. It allows to:

	Get name;
	Get description;
	Get usage help;
	Get help;
	Get options help;
	Get examples;
	Run command

246.3. Add a class for command exception. It allows to:

	Instantiate command exception  with options;
	Instantiate command exception  with cause throwable, options and options;
	As enum set;
	Get options

246.4. Add an interface declaration  for command factory. It allows to:

	Get commands

246.5. Add a class for command runner. It allows to:

	Instantiate command runner;
	Get name;
	Add commands;
	Add command;
	Set option commands;
	Set hidden commands;
	Check if command runner is option command;
	Check if command runner is hidden command;
	Check if command runner is command instance of;
	Get iterator;
	Get commands;
	Find command;
	Run and handle errors;
	Remove debug flags;
	Run command runner;
	Process command runner command runner before run;
	Process command runner command runner after run;
	Handle error;
	Handle error message;
	Show usage;
	Print exception

246.6. Add a class for command runner integration tests. It allows to:

	Debug adds autoconfig report;
	Debug switched off  for app args

246.7. Add a class for command runner tests. It allows to:

	Close command runner tests;
	Handle setup;
	Show usage;
	Handle error message;
	Print exception;
	Run command runner tests without arguments;
	Run command;
	Missing command;
	Handle app arguments;
	Check if command runner tests handles success;
	Check if command runner tests handles no such command;
	Check if command runner tests handles regular exception with message;
	Check if command runner tests handles regular exception without message;
	Check if command runner tests handles exception with dash D;
	Check if command runner tests handles exception with dash dash debug;
	Handle exception messages;
	Help command runner tests;
	Help no command;
	Help unknown command

246.8. Rename type HelpExample with HelpExample

246.9. Add a class for no arguments exception

246.10. Add a class for no help command arguments exception. It allows to:

	Instantiate no help command arguments exception

246.11. Add a class for no such command exception. It allows to:

	Instantiate no such command exception

246.12. Add a class for option parsing command. It allows to:

	Instantiate option parsing command  with option handler;
	Get help;
	Get options help;
	Run option parsing command;
	Get handler

247. Changes to package org.springframework.boot.cli.command.archive:  

247.1. Add a class for resource matcher tests. It allows to:

	Non existent root;
	Handle defaults;
	Get excluded wins;
	Handle matches;
	Get included deltas;
	Get included deltas and new entries;
	Get excluded deltas;
	Handle jar file always matches;
	Handle resource matching

248. Changes to package org.springframework.boot.cli.command.core:  

248.1. Add a class for help command. It allows to:

	Instantiate help command  with command runner;
	Get usage help;
	Get help;
	Get options help;
	Get options;
	Check if help command is help shown;
	Run help command

248.2. Add a class for hint command. It allows to:

	Instantiate hint command  with command runner;
	Run hint command;
	Show command hints;
	Check if hint command is hint match;
	Show command option hints;
	Handle already used

248.3. Add a class for version command. It allows to:

	Instantiate version command;
	Run version command

249. Changes to package org.springframework.boot.cli.command.encodepassword:  

249.1. Add a class for encode password command tests. It allows to:

	Handle setup;
	Handle cleanup;
	Encode encode password command tests with no algorithm should use bcrypt;
	Encode encode password command tests with B crypt should use B crypt;
	Encode encode password command tests with pbkdf 2 should use pbkdf 2;
	Encode encode password command tests with unknown algorithm should exit with error

250. Changes to package org.springframework.boot.cli.command.init:  

250.1. Add a class for dependency. It allows to:

	Instantiate dependency;
	Get id;
	Get name;
	Get description

250.2. Add a class for initializr service. It allows to:

	Instantiate initializr service;
	Instantiate initializr service  with closeable http client;
	Http initializr service;
	Generate project generation request;
	Load metadata;
	Load service capabilities;
	Parse json metadata;
	Validate response;
	Create response;
	Execute project generation request;
	Execute initializr metadata retrieval;
	Execute http uri request;
	Create exception;
	Extract message;
	Get content  as json;
	Get content;
	Extract file name

250.3. Add a class for initializr service metadata tests. It allows to:

	Parse defaults;
	Parse dependencies;
	Parse types;
	Create instance;
	Read json

250.4. Add a class for initializr service tests. It allows to:

	Load metadata;
	Generate simple project;
	Generate project custom target filename;
	Generate project no default file name;
	Generate project bad request;
	Generate project bad request no extra message;
	Generate project no content;
	Load metadata bad request;
	Load metadata invalid json;
	Load metadata no content;
	Generate project;
	Assert project entity

250.5. Add a class for project generation request. It allows to:

	Get service url;
	Set service url;
	Get output;
	Set output;
	Check if project generation request is extract;
	Extract project generation request;
	Get group id;
	Set group id;
	Get artifact id;
	Set artifact id;
	Get version;
	Get set version;
	Get name;
	Set name;
	Get description;
	Set description;
	Get package name;
	Set package name;
	Get type;
	Set type;
	Get packaging;
	Set packaging;
	Build project generation request;
	Get format;
	Set format;
	Check if project generation request is detect type;
	Set detect type;
	Get java version;
	Set java version;
	Get language;
	Set language;
	Get boot version;
	Set boot version;
	Get dependencies;
	Generate url;
	Determine project type;
	Resolve artifact id;
	Handle filter

250.6. Add a class for project generation request tests. It allows to:

	Handle default settings;
	Handle custom server;
	Handle custom boot version;
	Handle single dependency;
	Handle multiple dependencies;
	Handle custom java version;
	Handle custom package name;
	Handle custom type;
	Handle custom packaging;
	Handle custom language;
	Handle custom project info;
	Handle output customize artifact id;
	Handle output archive customize artifact id;
	Handle output archive with dots customize artifact id;
	Handle output does not override custom artifact id;
	Build no match;
	Build multiple match;
	Build one match;
	Handle type and build and format;
	Handle invalid type;
	No type and no default;
	Create url;
	Create default url;
	Set build and format;
	Create default metadata;
	Read metadata;

250.7. Add a class for project generation response. It allows to:

	Instantiate project generation response  with content type;
	Get content type;
	Get content;
	Set content;
	Get file name;
	Set file name

250.8. Add a class for project generator. It allows to:

	Instantiate project generator  with initializr service;
	Generate project;
	Extract project generation request;
	Check if project generator is zip archive;
	Extract project;
	Extract zip input stream from stream;
	Write project;
	Fix executable flag

250.9. Add a class for project type. It allows to:

	Instantiate project type  with tags map;
	Get id;
	Get name;
	Get action;
	Check if project type is default type;
	Get tags

250.10. Add a class for reportable exception. It allows to:

	Instantiate reportable exception;
	Instantiate reportable exception  with cause throwable

250.11. Add a class for service capabilities report generator. It allows to:

	Instantiate service capabilities report generator  with initializr service;
	Generate service capabilities report generator;
	Generate help;
	Report available dependencies;
	Get sorted dependencies;
	Report available project types;
	Report tags;
	Report defaults;
	Get repeat

250.12. Add a class for service capabilities report generator tests. It allows to:

	Handle list metadata from server;
	Handle list metadata;
	Convert list metadata V;
	Do test generate capabilities  from json

251. Changes to package org.springframework.boot.cli.command.install:  

251.1. Add an interface declaration  for dependency resolver. It allows to:

	Resolve artifact identifiers list

251.2. Add a class for groovy grab dependency resolver. It allows to:

	Instantiate groovy grab dependency resolver  with groovy compiler configuration;
	Resolve artifact identifiers list;
	Get class path urls;
	Create sources;
	Convert groovy grab dependency resolver to file

251.3. Add a class for groovy grab dependency resolver tests. It allows to:

	Handle setup resolver;
	Check if  is guess imports;
	Check if  is guess dependencies;
	Check if  is autoconfigure;
	Get scope;
	Get repository configuration;
	Get classpath;
	Check if  is quiet;
	Resolve artifact  with no dependencies;
	Resolve artifact  with dependencies;
	Resolve shorthand artifact  with dependencies;
	Resolve multiple artifacts;
	Get names

251.4. Add a class for installer. It allows to:

	Instantiate installer  with options set, compiler option handler and compiler option handler;
	Instantiate installer  with dependency resolver;
	Create compiler configuration;
	Check if  is autoconfigure;
	Load install counts;
	Save install counts;
	Install artifact identifiers list;
	Get install count;
	Set install count;
	Handle uninstall;
	Uninstall installer;
	Get default ext directory;
	Installed installer

251.5. Add a class for installer tests. It allows to:

	Set installer tests;
	Clean installer tests;
	Install new dependency;
	Install installer tests;
	Install and uninstall  with common dependencies;
	Uninstall installer tests;
	Get names  of files in lib ext;
	Create temporary file

252. Changes to package org.springframework.boot.cli.command.options:  

252.1. Add a class for compiler option handler. It allows to:

	Handle options;
	Do options;
	Get no guess imports option;
	Get no guess dependencies option;
	Get classpath option;
	Get autoconfigure option

252.2. Add an interface declaration  for option help. It allows to:

	Get options;
	Get usage help

252.3. Rename type OptionSetGroovyCompilerConfiguration with OptionSetGroovyCompilerConfiguration

252.4. Add a class for source options. It allows to:

	Instantiate source options  with options set;
	Instantiate source options  with arguments list;
	Instantiate source options  with option set, class loader and class loader;
	Instantiate source options  with non option arguments list, class loader and class loader;
	Check if source options is absolute windows file;
	Check if source options is windows;
	Check if source options is source;
	Get args;
	Get args array;
	Process source options source options as string;
	Get sources;
	Get sources array

253. Changes to package org.springframework.boot.cli.command.run:  

253.1. Add an interface declaration  for spring application runner configuration. It allows to:

	Check if spring application runner configuration is watch for file changes;
	Get log level

253.2. Add a class for spring application runner tests. It allows to:

	Handle exception message when sources contains no classes

254. Changes to package org.springframework.boot.cli.command.shell:  

254.1. Add a class for ansi string. It allows to:

	Instantiate ansi string  with terminal;
	Append codes;
	Apply code;
	Check if ansi string is ansi supported;
	Convert ansi string to string

254.2. Add a class for clear command. It allows to:

	Instantiate clear command  with console reader;
	Run clear command

254.3. Add a class for escape aware white space argument delimiter. It allows to:

	Check if escape aware white space argument delimiter is escaped;
	Check if escape aware white space argument delimiter is escape char;
	Check if escape aware white space argument delimiter is quoted;
	Search  backwards buffer char sequence;
	Parse arguments;
	Handle clean arguments;
	Handle clean argument;
	Replace escapes

254.4. Add a class for escape aware white space argument delimiter tests. It allows to:

	Handle simple;
	Get escaped;
	Get quoted;
	Handle double quoted;
	Handle nested quotes;
	Get escaped quotes;
	Handle escapes

254.5. Add a class for exit command. It allows to:

	Instantiate exit command;
	Run exit command

254.6. Add a class for fork process command. It allows to:

	Instantiate fork process command  with command;
	Get name;
	Get description;
	Get usage help;
	Get help;
	Get options help;
	Run fork process command

254.7. Add a class for prompt command. It allows to:

	Instantiate prompt command  with shell prompts;
	Run prompt command

254.8. Add a class for run process command. It allows to:

	Instantiate run process command;
	Run run process command;
	Run args collection;
	Handle sig int

254.9. Add a class for shell command. It allows to:

	Instantiate shell command;
	Run shell command

254.10. Add a class for shell exit exception. It allows to:

	Instantiate shell exit exception

254.11. Add a class for shell prompts. It allows to:

	Push prompt;
	Pop prompt;
	Get prompt

255. Changes to package org.springframework.boot.cli.command.status:  

255.1. Add a class for exit status. It allows to:

	Instantiate exit status;
	Get code;
	Get name;
	Check if exit status is hangup;
	Get hangup;
	Convert exit status to string

256. Changes to package org.springframework.boot.cli.compiler:  

256.1. Add a class for ast utils. It allows to:

	Check if ast utils has at least one annotation;
	Check if ast utils has at least one field or method;
	Handle subclasses;
	Check if ast utils has at least one interface;
	Get closure;
	Get expression statements;

256.2. Rename type CompilerAutoConfiguration with CompilerAutoConfiguration

256.3. Add a class for dependency auto configuration transformation. It allows to:

	Instantiate dependency auto configuration transformation  with groovy class loader, dependency resolution context, compiler auto configurations iterable and compiler auto configurations iterable;
	Handle visit;
	Visit module

256.4. Add a class for dependency customizer. It allows to:

	Instantiate dependency customizer  with groovy class loader, module node, dependency resolution context and dependency resolution context;
	Instantiate dependency customizer  with parent dependency customizer;
	Get version;
	Process dependency customizer dependency customizer if any missing classes;
	Add;
	Process dependency customizer dependency customizer if all missing classes;
	Process dependency customizer dependency customizer if all resources present;
	Process dependency customizer dependency customizer if any resources present;
	Add dependency customizer;
	Create grab annotation;
	Get dependency resolution context

256.5. Add a class for dependency customizer tests. It allows to:

	Set dependency customizer tests;
	Get artifact coordinates resolver;
	Handle basic add;
	Non transitive add;
	Handle fully customized;
	Any missing classes  with missing classes performs add;
	Any missing classes  with mixture of classes performs add;
	Any missing classes  with no missing classes does not perform add;
	All missing classes  with no missing classes does not perform add;
	All missing classes  with mixture of classes does not perform add;
	All missing classes  with all classes missing performs add;
	Assert grab annotation;
	Get member value

256.6. Add a class for extended groovy class loader tests. It allows to:

	Handle setup;
	Handle loads groovy from same class loader;
	Handle filters non groovy;
	Handle loads java types;
	Handle loads sql types

256.7. Add a class for generic bom ast transformation. It allows to:

	Handle visit;
	Get bom module;
	Visit module;
	Add dependency management bom;
	Get annotation;
	Get annotated node;
	Get constant expressions;

256.8. Add a class for generic bom ast transformation tests. It allows to:

	Get order;
	Get bom module;
	Handle transformation of empty package;
	Handle transformation of class;
	Handle transformation of class with existing managed dependencies;
	Get value;
	Find annotation

256.9. Rename type GroovyCompilerConfiguration with GroovyCompilerConfiguration

256.10. Add a class for repository configuration factory. It allows to:

	Instantiate repository configuration factory;
	Create default repository configuration;
	Add default cache  as repository;
	Add active profile repositories;
	Get repository configuration;
	Interpolate interpolator;
	Get local repository directory;
	Get M 2 home directory

256.11. Add a class for repository configuration factory tests. It allows to:

	Handle default repositories;
	Handle snapshot repositories disabled;
	Handle active by default profile repositories;
	Handle active by property profile repositories;
	Handle interpolation profile repositories;
	Assert repository configuration

256.12. Add a class for resolve dependency coordinates transformation. It allows to:

	Instantiate resolve dependency coordinates transformation  with dependency resolution context;
	Handle process annotation nodes;
	Transform grab annotation;
	Get value;
	Check if resolve dependency coordinates transformation is convenience form;
	Apply group and version;
	Set member

256.13. Add a class for resolve dependency coordinates transformation tests. It allows to:

	Get artifact coordinates resolver;
	Handle setup expectations;
	Handle transformation of annotation on import;
	Handle transformation of annotation on star import;
	Handle transformation of annotation on static import;
	Handle transformation of annotation on static star import;
	Handle transformation of annotation on package;
	Handle transformation of annotation on class;
	Handle transformation of annotation on annotation;
	Handle transformation of annotation on field;
	Handle transformation of annotation on constructor;
	Handle transformation of annotation on method;
	Handle transformation of annotation on method parameter;
	Handle transformation of annotation on local variable;
	Create grab annotation;
	Assert grab annotation has been transformed;
	Get grab annotation member  as string

256.14. Add a class for smart import customizer. It allows to:

	Instantiate smart import customizer  with source unit;
	Add import;
	Add imports

256.15. Add an interface declaration  for spring boot ast transformation

257. Changes to package org.springframework.boot.cli.compiler.autoconfigure:  

257.1. Add a class for caching compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

257.2. Add a class for groovy templates compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

257.3. Add a class for jdbc compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

257.4. Add a class for jms compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

257.5. Add a class for rabbit compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

257.6. Add a class for spring batch compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

257.7. Add a class for spring boot compiler auto configuration. It allows to:

	Apply dependencies;
	Apply imports;
	Apply groovy class loader to main class;
	Add enable auto configuration annotation;
	Check if spring boot compiler auto configuration has enable auto configure annotation

257.8. Add a class for spring integration compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

257.9. Add a class for spring mvc compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

257.10. Add a class for spring retry compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

257.11. Rename type SpringSecurityCompilerAutoConfiguration with SpringSecurityCompilerAutoConfiguration

257.12. Rename type SpringTestCompilerAutoConfiguration with SpringTestCompilerAutoConfiguration

257.13. Rename type SpringWebsocketCompilerAutoConfiguration with SpringWebsocketCompilerAutoConfiguration

257.14. Add a class for transaction management compiler auto configuration. It allows to:

	Handle matches;
	Apply dependencies;
	Apply imports

258. Changes to package org.springframework.boot.cli.compiler.dependencies:  

258.1. Rename type ArtifactCoordinatesResolver with ArtifactCoordinatesResolver

258.2. Add a class for composite dependency management. It allows to:

	Instantiate composite dependency management  with delegates dependency management;
	Get dependencies;
	Get spring boot version;
	Find composite dependency management

258.3. Add a class for composite dependency management tests. It allows to:

	Handle setup;
	Handle unknown spring boot version;
	Get known spring boot version;
	Handle unknown dependency;
	Get known dependency;
	Get dependencies

258.4. Rename type DependencyManagement with DependencyManagement

258.5. Rename type DependencyManagementArtifactCoordinatesResolver with DependencyManagementArtifactCoordinatesResolver

258.6. Add a class for dependency management artifact coordinates resolver tests. It allows to:

	Handle setup;
	Get group id  for boot artifact;
	Get group id found;
	Get group id  not found

258.7. Add a class for maven model dependency management. It allows to:

	Instantiate maven model dependency management  with model;
	Extract dependencies  from model;
	Get dependencies;
	Get spring boot version;
	Find maven model dependency management

258.8. Add a class for spring boot dependencies dependency management. It allows to:

	Instantiate spring boot dependencies dependency management;
	Read model

258.9. Add a class for spring boot dependencies dependency management tests. It allows to:

	Handle spring boot version;
	Find spring boot dependencies dependency management tests;
	Get dependencies

259. Changes to package org.springframework.boot.cli.compiler.grape:  

259.1. Add a class for aether grape engine. It allows to:

	Instantiate aether grape engine  with groovy class loader, repository system, default repository system session, remote repositories list, dependency resolution context and dependency resolution context;
	Get progress reporter;
	Grab args map;
	Create exclusions;
	Create exclusion;
	Create dependencies;
	Create dependency;
	Create artifact;
	Determine type;
	Check if aether grape engine is transitive;
	Get dependencies;
	Get files;
	Get class loader;
	Add resolver;
	Add repository;
	Get possible mirror;
	Apply proxy;
	Apply authentication;
	Enumerate grapes;
	Resolve args map;
	Resolve dependencies list;
	Get collect request;
	Get dependency request;
	Add managed dependencies;
	Get list dependencies;
	Grab aether grape engine

259.2. Add a class for aether grape engine factory. It allows to:

	Create groovy class loader;
	Create service locator;
	Create repositories

259.3. Add a class for aether grape engine tests. It allows to:

	Create grape engine;
	Handle dependency resolution;
	Handle proxy selector;
	Handle repository mirrors;
	Handle repository authentication;
	Handle dependency resolution with exclusions;
	Non transitive dependency resolution;
	Handle dependency resolution with custom class loader;
	Handle resolution with custom resolver;
	Differing type and ext;
	Handle pom dependency resolution via type;
	Handle pom dependency resolution via ext;
	Handle resolution with classifier;
	Get repositories;
	Create dependency;
	Create resolver;
	Create exclusion;
	Do action runnable with custom user home;
	Do action runnable with system property;
	Set or clear system property

259.4. Add a class for composite proxy selector. It allows to:

	Instantiate composite proxy selector  with selectors list;
	Get proxy

259.5. Rename type DefaultRepositorySystemSessionAutoConfiguration with DefaultRepositorySystemSessionAutoConfiguration

259.6. Add a class for dependency resolution context. It allows to:

	Get identifier;
	Get artifact coordinates resolver;
	Get managed version;
	Get managed dependencies;
	Get managed dependency;
	Add managed dependencies;
	Add dependency management

259.7. Add a class for dependency resolution context tests. It allows to:

	Handle default dependencies empty;
	Can add spring boot dependencies

259.8. Rename type DependencyResolutionFailedException with DependencyResolutionFailedException

259.9. Add a class for detailed progress reporter. It allows to:

	Instantiate detailed progress reporter  with default repository system session, out print stream and out print stream;
	Started transfer event;
	Succeeded transfer event;
	Get resource identifier;
	Get transfer speed;
	Finished detailed progress reporter

259.10. Add a class for detailed progress reporter tests. It allows to:

	Initialize detailed progress reporter tests;
	Downloading detailed progress reporter tests;
	Get downloaded

259.11. Add a class for grape engine installer. It allows to:

	Install grape engine

259.12. Add a class for grape root repository system session auto configuration. It allows to:

	Apply default repository system session;
	Configure local repository

259.13. Add an interface declaration  for progress reporter. It allows to:

	Finished progress reporter

259.14. Rename type RepositoryConfiguration with RepositoryConfiguration

259.15. Add an interface declaration  for repository system session auto configuration. It allows to:

	Apply default repository system session

259.16. Add a class for settings xml repository system session auto configuration. It allows to:

	Apply default repository system session;
	Get settings

259.17. Add a class for settings xml repository system session auto configuration tests. It allows to:

	Handle setup;
	Handle basic session customization;
	Handle encrypted settings session customization;
	Handle property interpolation;
	Assert session customization;
	Assert proxy selector configuration;
	Assert mirror selector configuration;
	Assert authentication selector configuration

259.18. Rename type SummaryProgressReporter with SummaryProgressReporter

260. Changes to package org.springframework.boot.cli.util:  

260.1. Add a class for log. It allows to:

	Info log;
	Info print;
	Handle error;
	Set listener

260.2. Add an interface declaration  for log listener. It allows to:

	Info log listener;
	Info print;
	Handle error;

260.3. Add an interface declaration  for mock log. It allows to:

	Attach mock log;
	Handle clear

260.4. Add a class for resource utils tests. It allows to:

	Handle explicit classpath resource;
	Duplicate resource;
	Handle explicit classpath resource with slash;
	Handle implicit classpath resource;
	Handle implicit classpath resource with slash;
	Handle nonexistent classpath resource;
	Handle explicit file;
	Handle implicit file;
	Handle nonexistent file;
	Handle recursive files;
	Handle recursive files by pattern with prefix;
	Handle recursive files by pattern;
	Handle directory of files with prefix;
	Handle directory of files

261. Changes to package org.springframework.boot.cloud:  

261.1. Add a class for cloud foundry vcap environment post processor. It allows to:

	Get set order;
	Get order;
	Post process environment;
	Add properties with prefix;
	Get properties  from application;
	Get properties  from services;
	Extract properties  from application;
	Extract properties  from services;
	Flatten properties;
	Get property name

261.2. Add a class for cloud platform tests. It allows to:

	Get active when environment is null should return null;
	Get active when  not in cloud should return null;
	Get active when has vcap application should return cloud foundry;
	Get active when has vcap services should return cloud foundry;
	Get active when has dyno should return heroku;
	Get active when has hc landscape should return sap;
	Get active when has service host and service port should return kubernetes;
	Get active when has service host and no service port should  not return kubernetes

262. Changes to package org.springframework.boot.cloud.cloudfoundry:  

262.1. Add a class for cloud foundry vcap environment post processor tests. It allows to:

	Handle test application properties;
	Handle test application uris;
	Handle test unparseable application properties;
	Handle test null application properties;
	Handle test service properties;
	Handle test service properties without NA;
	Get property

263. Changes to package org.springframework.boot.configurationmetadata:  

263.1. Rename type AbstractConfigurationMetadataTests with AbstractConfigurationMetadataTests

263.2. Add a class for configuration metadata group. It allows to:

	Instantiate configuration metadata group;
	Get id;
	Get sources;
	Get properties

263.3. Add a class for configuration metadata hint. It allows to:

	Check if configuration metadata hint is map key hints;
	Check if configuration metadata hint is map value hints;
	Resolve id;
	Get id;
	Set id;
	Get value hints;
	Get value providers

263.4. Add a class for configuration metadata item. It allows to:

	Get source type;
	Set source type;
	Get source method;
	Set source method

263.5. Add a class for configuration metadata property. It allows to:

	Get id;
	Set id;
	Get name;
	Set name;
	Get type;
	Set type;
	Get description;
	Set description;
	Get short description;
	Set short description;
	Get default value;
	Set default value;
	Get hints;
	Get deprecation;
	Set deprecation;
	Check if configuration metadata property is deprecated

263.6. Add an interface declaration  for configuration metadata repository. It allows to:

	Get all groups;
	Get all properties

263.7. Add a class for configuration metadata repository json builder. It allows to:

	Instantiate configuration metadata repository json builder  with default charset;
	Process configuration metadata repository json builder configuration metadata repository json builder with json resource;
	Build configuration metadata repository json builder;
	Add input stream;
	Create raw configuration metadata;
	Add value hints;
	Add map hints;
	Get source;
	Create input streams;
	Create configuration metadata repository json builder;
	Create default charset

263.8. Add a class for configuration metadata repository json builder tests. It allows to:

	Handle null resource;
	Handle simple repository;
	Handle hints on maps;
	Handle several repositories no conflict;
	Handle repository with root;
	Handle several repositories identical groups;
	Handle empty groups;
	Handle builder instances are isolated;
	Validate foo;
	Validate bar;
	Validate map;
	Validate empty group;
	Validate property hints;
	Check if configuration metadata repository json builder tests contains

263.9. Add a class for configuration metadata source. It allows to:

	Get group id;
	Set group id;
	Get type;
	Set type;
	Get description;
	Set description;
	Get short description;
	Set short description;
	Get source type;
	Set source type;
	Get source method;
	Set source method;
	Get properties

263.10. Add a class for deprecation. It allows to:

	Get level;
	Set level;
	Get reason;
	Set reason;
	Get short reason;
	Set short reason;
	Get replacement;
	Set replacement;
	Convert deprecation to string

263.11. Add a class for hints. It allows to:

	Get key hints;
	Get key providers;
	Get value hints;
	Get value providers

263.12. Add a class for json reader. It allows to:

	Read input stream;
	Parse all sources;
	Parse all items;
	Parse all hints;
	Parse source;
	Parse item;
	Parse hint;
	Parse deprecation;
	Parse deprecation level;
	Read item value;
	Read json

263.13. Add a class for json reader tests. It allows to:

	Handle empty metadata;
	Handle invalid metadata;
	Handle empty group name;
	Handle simple metadata;
	Handle metadata hints;
	Root metadata;
	Get deprecated metadata;
	Read json reader tests for

263.14. Add a class for raw configuration metadata. It allows to:

	Instantiate raw configuration metadata  with sources list, items list, hints list and hints list;
	Get sources;
	Get source;
	Get items;
	Get hints;
	Resolve name;
	Check if raw configuration metadata has length

263.15. Add a class for sentence extractor. It allows to:

	Get first sentence;
	Remove space  between line

263.16. Add a class for sentence extractor tests. It allows to:

	Extract first sentence;
	Extract first sentence new line  before dot;
	Extract first sentence new line  before dot with spaces;
	Extract first sentence no dot;
	Extract first sentence no dot multiple lines;
	Extract first sentence null

263.17. Add a class for simple configuration metadata repository. It allows to:

	Get all groups;
	Get all properties;
	Add sources collection;
	Add configuration metadata property;
	Include configuration metadata repository;
	Get group;
	Put map if absent

263.18. Add a class for value hint. It allows to:

	Get value;
	Get set value;
	Get description;
	Set description;
	Get short description;
	Set short description;
	Convert value hint to string

263.19. Add a class for value provider. It allows to:

	Get name;
	Set name;
	Get parameters;
	Convert value provider to string

264. Changes to package org.springframework.boot.configurationprocessor:  

264.1. Add a class for configuration metadata annotation processor. It allows to:

	Get configuration properties annotation;
	Handle nested configuration property annotation;
	Get deprecated configuration property annotation;
	Get default value annotation;
	Get endpoint annotation;
	Read operation annotation;
	Get supported source version;
	Get supported options;
	Handle init;
	Handle process;
	Get elements annotated or meta annotated  with round environment;
	Collect elements annotated or meta annotated  with annotation type;
	Handle process element;
	Handle process annotated type element;
	Handle process executable element;
	Handle process type element;
	Handle process endpoint;
	Check if configuration metadata annotation processor has main read operation;
	Check if configuration metadata annotation processor has no or optional parameters;
	Get prefix;
	Write meta data;
	Merge additional metadata;
	Get exception;
	Log warning;
	Log kind

264.2. Add a class for configuration metadata annotation processor tests. It allows to:

	Handle not annotated;
	Handle simple properties;
	Handle simple prefix value properties;
	Handle simple type properties;
	Handle hierarchical properties;
	Handle description properties;
	Get deprecated properties;
	Handle single deprecated property;
	Get deprecated on unrelated setter;
	Boxing configuration metadata annotation processor tests on setter;
	Parse collection config;
	Parse array config;
	Handle annotated getter;
	Handle static accessor;
	Handle inner class root config;
	Handle inner class properties;
	Handle inner class properties hierarchical;
	Handle inner class annotated getter config;
	Handle nested class child properties;
	Handle builder pojo;
	Get excluded types pojo;
	Handle invalid accessor;
	Handle double registration;
	Handle invalid double registration;
	Handle constructor parameter property with invalid default value on number;
	Handle constructor parameter property with invalid default value on floating point;
	Handle constructor parameter property with invalid default value on character

264.3. Add a class for metadata collector. It allows to:

	Instantiate metadata collector  with processing environment, previous metadata and previous metadata;
	Handle processing;
	Handle mark as processed;
	Add item metadata;
	Check if metadata collector has similar group;
	Get metadata;
	Handle should be merged;
	Get deleted in current build;
	Get processed in current build

264.4. Add a class for metadata store. It allows to:

	Instantiate metadata store  with processing environment;
	Read metadata;
	Write metadata;
	Read additional metadata;
	Get metadata resource;
	Create metadata resource;
	Get additional metadata stream;
	Locate additional metadata file;
	Locate gradle resources folder

264.5. Add a class for metadata store tests. It allows to:

	Handle additional metadata is located in maven build;
	Handle additional metadata is located in gradle 3 build;
	Handle additional metadata is located in gradle 4 build;
	Handle additional metadata is located using locations option

264.6. Add a class for test project. It allows to:

	Instantiate test project  with temporary folder, classes and classes;
	Get source folder;
	Copy sources;
	Get source file;
	Handle full build;
	Handle incremental build;
	Delete folder contents;
	Get output file;
	Add source code;
	Delete type class;
	Revert type class;
	Add type class;
	Replace text;
	Get original source file;
	Put contents;
	Get contents

264.7. Add a class for type element members. It allows to:

	Instantiate type element members  with metadata generation environment, type element and type element;
	Handle process;
	Handle process method;
	Check if type element members is public;
	Get matching setter;
	Check if type element members is getter;
	Check if type element members is setter;
	Check if type element members is setter return type;
	Get accessor name;
	Handle process field;
	Get fields;
	Get public getters;
	Get public getter;
	Get public setter

265. Changes to package org.springframework.boot.configurationprocessor.fieldvalues:  

265.1. Add an interface declaration  for field values parser. It allows to:

	Get field values

266. Changes to package org.springframework.boot.configurationprocessor.fieldvalues.javac:  

266.1. Add a class for expression tree. It allows to:

	Instantiate expression tree;
	Get kind;
	Get literal value;
	Get factory value;
	Get array expression

266.2. Add an object creator class for java compiler field values processor tests. It allows to:

	Create processor

266.3. Add a class for reflection wrapper. It allows to:

	Instantiate reflection wrapper;
	Get instance;
	Convert reflection wrapper to string;
	Find class;
	Find method;

266.4. Add an interface declaration  for tree visitor. It allows to:

	Visit variable

266.5. Add an object creator class for trees. It allows to:

	Instantiate trees;
	Get tree;
	Get instance

266.6. Add a class for variable tree. It allows to:

	Instantiate variable tree;
	Get name;
	Get type;
	Get initializer;
	Get modifier flags

267. Changes to package org.springframework.boot.configurationprocessor.json:  

267.1. Rename type JSON with JSON

267.2. Add a class for jSON array. It allows to:

	Instantiate jSON array;
	Instantiate jSON array  with copy from collection;
	Instantiate jSON array  with read from JSON tokener;
	Get length;
	Put jSON array;
	Check if jSON array is null;
	Get jSON array;
	Opt jSON array;
	Remove jSON array;
	Get boolean;
	Opt boolean;
	Get jSON array double;
	Opt double;
	Get int;
	Opt int;
	Get jSON array long;
	Opt jSON array long;
	Get string;
	Opt string;
	Get JSON array;
	Opt JSON array;
	Get JSON object;
	Opt JSON object;
	Convert jSON array to JSON object;
	Join jSON array;
	Convert jSON array to string;
	Write  to JSON stringer;
	Check if jSON array equals;
	Hash code

267.3. Add a class for jSON exception. It allows to:

	Instantiate jSON exception

267.4. Add a class for jSON object. It allows to:

	Check if  equals;
	Convert to string;
	Instantiate jSON object;
	Instantiate jSON object  with copy from map;
	Instantiate jSON object  with read from JSON tokener;
	Instantiate jSON object  with copy from JSON object;
	Get length;
	Put jSON object;
	Opt jSON object;
	Accumulate jSON object;
	Check name;
	Remove jSON object;
	Check if jSON object is null;
	Check if jSON object has;
	Get jSON object;
	Get boolean;
	Opt boolean;
	Get jSON object double;
	Opt double;
	Get int;
	Opt int;
	Get jSON object long;
	Opt jSON object long;
	Get string;
	Opt string;
	Get JSON array;
	Opt JSON array;
	Get JSON object;
	Opt JSON object;
	Convert jSON object to JSON array;
	Get keys;
	Get names;
	Convert jSON object to string;
	Write  to JSON stringer;
	Convert number;
	Quote jSON object;
	Wrap jSON object

267.5. Add a class for jSON stringer. It allows to:

	Instantiate jSON stringer;
	Get array;
	End array;
	Object jSON stringer;
	End object;
	Handle open;
	Close jSON stringer;
	Get peek;
	Replace top;
	Get value;
	Handle string;
	Handle newline;
	Handle key;
	Process jSON stringer jSON stringer before key;
	Process jSON stringer jSON stringer before value;
	Convert jSON stringer to string

267.6. Add a class for jSON tokener. It allows to:

	Instantiate jSON tokener;
	Handle next value;
	Handle next clean internal;
	Skip jSON tokener to end of line;
	Handle next string;
	Read escape character;
	Read literal;
	Handle next to internal;
	Read object;
	Read array;
	Get syntax error;
	Convert jSON tokener to string;
	Handle more;
	Handle next;
	Handle next clean;
	Handle next to;
	Skip past;
	Skip jSON tokener to;
	Back jSON tokener;
	Get dehexchar

268. Changes to package org.springframework.boot.configurationprocessor.metadata:  

268.1. Add a class for configuration metadata. It allows to:

	Instantiate configuration metadata;
	Instantiate configuration metadata  with configuration metadata;
	Add item metadata;
	Add item hint;
	Merge configuration metadata;
	Get items;
	Get hints;
	Merge item metadata;
	Add map;
	Find matching item metadata;
	Handle null safe equals;
	Handle nested prefix;
	Convert configuration metadata to dashed case;
	Flatten values;
	Convert configuration metadata to string

268.2. Add a class for configuration metadata tests. It allows to:

	Convert configuration metadata tests to dashed case camel case;
	Convert configuration metadata tests to dashed case upper camel case suffix;
	Convert configuration metadata tests to dashed case upper camel case middle;
	Convert configuration metadata tests to dashed case words underscore;
	Convert configuration metadata tests to dashed case words several underscores;
	Convert configuration metadata tests to dashed case lower case underscore;
	Convert configuration metadata tests to dashed case upper underscore suffix;
	Convert configuration metadata tests to dashed case upper underscore middle;
	Convert configuration metadata tests to dashed case multiple underscores;
	Convert configuration metadata tests to dashed case lowercase;
	Convert configuration metadata tests to dashed case

268.3. Add a class for invalid configuration metadata exception. It allows to:

	Instantiate invalid configuration metadata exception  with diagnostic kind;
	Get kind

268.4. Rename type ItemDeprecation with ItemDeprecation

268.5. Add a class for item metadata. It allows to:

	Instantiate item metadata  with item type, item deprecation and item deprecation;
	Build name;
	Check if item metadata is of item type;
	Check if item metadata has same type;
	Get name;
	Set name;
	Get type;
	Set type;
	Get description;
	Set description;
	Get source type;
	Set source type;
	Get source method;
	Set source method;
	Get default value;
	Set default value;
	Get deprecation;
	Set deprecation;
	Check if item metadata equals;
	Hash code;
	Handle null safe equals;
	Handle null safe hash code;
	Convert item metadata to string;
	Build string builder to string property;
	Compare  to o item metadata;
	Handle new group;
	Handle new property;
	Handle new item metadata prefix

268.6. Add a class for item metadata tests. It allows to:

	Handle new item metadata prefix with capitalized prefix;
	Handle new item metadata prefix with camel case suffix;
	Handle new item metadata prefix with upper camel case suffix;
	Handle new item metadata prefix

268.7. Add a class for json marshaller. It allows to:

	Write configuration metadata;
	Read input stream;
	Convert json marshaller to item metadata;
	Convert json marshaller to item deprecation;
	Convert json marshaller to item hint;
	Convert json marshaller to value hint;
	Convert json marshaller to value provider;
	Read item value;
	Convert json marshaller to string

268.8. Add a class for json marshaller tests. It allows to:

	Handle marshall and unmarshal;
	Handle marshall order items;
	Handle marshall put deprecated items at the end

268.9. Rename type TestJsonConverter with TestJsonConverter

269. Changes to package org.springframework.boot.configurationprocessor.tests:  

269.1. Rename type ConfigurationProcessorIntegrationTests with ConfigurationProcessorIntegrationTests

270. Changes to package org.springframework.boot.configurationsample.endpoint:  

270.1. Add a class for camel case endpoint

270.2. Add a class for custom properties endpoint. It allows to:

	Get name;
	Set name

270.3. Add a class for disabled endpoint

270.4. Add a class for enabled endpoint. It allows to:

	Some method;
	Retrieve another parameter integer

270.5. Add a class for simple endpoint. It allows to:

	Invoke simple endpoint

270.6. Add a class for specific endpoint. It allows to:

	Invoke specific endpoint

271. Changes to package org.springframework.boot.configurationsample.endpoint.incremental:  

271.1. Add a class for incremental endpoint. It allows to:

	Invoke incremental endpoint

271.2. Add a class for incremental specific endpoint

272. Changes to package org.springframework.boot.configurationsample.fieldvalues:  

272.1. Add a class for field values

273. Changes to package org.springframework.boot.configurationsample.incremental:  

273.1. Add a class for bar properties. It allows to:

	Get name;
	Set name;
	Get description;
	Set description;
	Get bar properties counter;
	Set counter

273.2. Add a class for foo properties. It allows to:

	Get name;
	Set name;
	Get description;
	Set description;
	Get foo properties counter;
	Set counter

273.3. Add a class for renamed bar properties. It allows to:

	Get name;
	Set name;
	Get description;
	Set description;
	Get renamed bar properties counter;
	Set counter

274. Changes to package org.springframework.boot.configurationsample.lombok:  

274.1. Add a class for lombok access level overwrite data properties

274.2. Rename type LombokAccessLevelOverwriteDefaultProperties with LombokAccessLevelOverwriteDefaultProperties

274.3. Rename type LombokAccessLevelOverwriteExplicitProperties with LombokAccessLevelOverwriteExplicitProperties

274.4. Rename type LombokAccessLevelProperties with LombokAccessLevelProperties

274.5. Add a class for lombok explicit properties

274.6. Add a class for lombok simple data properties

274.7. Add a class for lombok simple properties

274.8. Add a class for simple lombok pojo

275. Changes to package org.springframework.boot.configurationsample.method:  

275.1. Add a class for invalid method config. It allows to:

	Get name;
	Set name;
	Get foo

276. Changes to package org.springframework.boot.configurationsample.simple:  

276.1. Add a class for deprecated properties. It allows to:

	Get name;
	Set name;
	Get description;
	Set description

276.2. Add a class for deprecated single property. It allows to:

	Get name;
	Set name;
	Get new name;
	Set new name

276.3. Rename type DescriptionProperties with DescriptionProperties

276.4. Add a class for hierarchical properties. It allows to:

	Get third;
	Set third

276.5. Add a class for hierarchical properties grandparent. It allows to:

	Get hierarchical properties grandparent first;
	Set hierarchical properties grandparent first

276.6. Add a class for hierarchical properties parent. It allows to:

	Get second;
	Set second;
	Get hierarchical properties parent first;
	Set hierarchical properties parent first

276.7. Add a class for not annotated

276.8. Add a class for simple prefix value properties. It allows to:

	Get name;
	Set name

276.9. Add a class for simple properties. It allows to:

	Get the name;
	Set the name;
	Check if simple properties is flag;
	Set flag;
	Get comparator;
	Set comparator;
	Get feature descriptor;
	Set counter;
	Get size

276.10. Add a class for simple type properties. It allows to:

	Get my string;
	Set my string;
	Get my byte;
	Set my byte;
	Get my primitive byte;
	Set my primitive byte;
	Get my char;
	Set my char;
	Get my primitive char;
	Set my primitive char;
	Get my boolean;
	Set my boolean;
	Check if simple type properties is my primitive boolean;
	Set my primitive boolean;
	Get my short;
	Set my short;
	Get my primitive short;
	Set my primitive short;
	Get my integer;
	Set my integer;
	Get my primitive integer;
	Set my primitive integer;
	Get my long;
	Set my long;
	Get my primitive long;
	Set my primitive long;
	Get my double;
	Set my double;
	Get my primitive double;
	Set my primitive double;
	Get my float;
	Set my float;
	Get my primitive float;
	Set my primitive float

277. Changes to package org.springframework.boot.configurationsample.specific:  

277.1. Add a class for annotated getter. It allows to:

	Get name;
	Set name

277.2. Add a class for boxing pojo. It allows to:

	Check if boxing pojo is flag;
	Set flag;
	Get boxing pojo counter;
	Set counter

277.3. Add a class for builder pojo. It allows to:

	Get name;
	Set name

277.4. Add a class for deprecated unrelated method pojo. It allows to:

	Get deprecated unrelated method pojo counter;
	Set counter;
	Check if deprecated unrelated method pojo is flag;
	Set flag;

277.5. Add an object creator class for double registration properties. It allows to:

	One double registration properties;
	Two double registration properties

277.6. Add a class for excluded types pojo. It allows to:

	Get name;
	Set name;
	Get class loader;
	Set class loader;
	Get data source;
	Get set data source;
	Get print writer;
	Set print writer;
	Get writer;
	Set writer;
	Get writer array;
	Set writer array

277.7. Add a class for invalid accessor properties. It allows to:

	Set invalid accessor properties;
	Get invalid accessor properties;
	Set flag;
	I invalid accessor properties

277.8. Add a class for simple conflicting properties. It allows to:

	Get flag;
	Set flag

277.9. Add a class for simple pojo. It allows to:

	Get value;
	Get set value

277.10. Add a class for static accessor. It allows to:

	Get name;
	Set name;
	Get static accessor counter;
	Set counter

278. Changes to package org.springframework.boot.context:  

278.1. Add a class for application pid file writer tests. It allows to:

	Reset listener;
	Create pid file;
	Override pid file;
	Override pid file  with spring;
	Try environment prepared event;
	Try ready event;
	Process application pid file writer tests application pid file writer tests with no environment;
	Continue when pid file is read  only;
	Throw when pid file is read  only;
	Throw when pid file is read  only with spring;
	Create environment prepared event;
	Create prepared event;
	Create ready event;
	Create environment;
	Handle mock property source

278.2. Add a class for context id application context initializer tests. It allows to:

	Close contexts;
	Handle single context with default name;
	Handle single context with custom name;
	Handle linear hierarchy;
	Handle complex hierarchy;
	Convert context with parent with no context id falls back;
	Create context

278.3. Add a class for file encoding application listener. It allows to:

	Get order;
	Process file encoding application listener file encoding application listener on application event

278.4. Add a class for file encoding application listener tests. It allows to:

	Handle test illegal state;
	Handle test sunny day nothing mandated;
	Handle test sunny day mandated

278.5. Add a class for type exclude filter. It allows to:

	Set bean factory;
	Match metadata reader;
	Check if type exclude filter equals;
	Hash code

279. Changes to package org.springframework.boot.context.annotation:  

279.1. Add a class for configurations. It allows to:

	Instantiate configurations  with classes collection;
	Get sort;
	Get classes;
	Merge other configurations;
	Merge merged classes set;
	Get stream classes;
	Collate ordered configurations list

279.2. Add an interface declaration  for determinable imports. It allows to:

	Determine imports

279.3. Add an object creator class for user configurations. It allows to:

	Instantiate user configurations  with classes collection;
	Get order;
	Merge merged classes set;
	O classes

279.4. Add a class for user configurations tests. It allows to:

	Process user configurations tests user configurations tests of should create unordered configurations

280. Changes to package org.springframework.boot.context.config:  

280.1. Add a class for ansi output application listener. It allows to:

	Process ansi output application listener ansi output application listener on application event;
	Get order

280.2. Add a class for delegating application context initializer. It allows to:

	Initialize configurable application context;
	Get initializer classes;
	Get initializer class;
	Apply initializer classes;
	Handle instantiate initializer;
	Apply initializers;
	Get set order;
	Get order

280.3. Add a class for delegating application listener. It allows to:

	Process delegating application listener delegating application listener on application event;
	Get listeners;
	Get set order;
	Get order

280.4. Add a class for test property source loader 1. It allows to:

	Get file extensions;
	Get load

280.5. Add a class for test property source loader 2. It allows to:

	Get file extensions;
	Get load

281. Changes to package org.springframework.boot.context.configwarnings.dflt:  

281.1. Add a class for in default package configuration

281.2. Add a class for in default package with base package classes configuration

281.3. Add a class for in default package with base packages configuration

281.4. Add a class for in default package with meta annotation configuration

281.5. Add a class for in default package with value configuration

281.6. Add a class for in default package without scan configuration

282. Changes to package org.springframework.boot.context.configwarnings.orgspring:  

282.1. Add a class for in org spring package configuration

283. Changes to package org.springframework.boot.context.configwarnings.real:  

283.1. Add a class for in real but scanning problem packages

283.2. Add a class for in real package configuration

284. Changes to package org.springframework.boot.context.configwarnings.real.nested:  

284.1. Add a class for example bean

285. Changes to package org.springframework.boot.context.embedded:  

285.1. Add a class for abstract embedded servlet container integration tests. It allows to:

	Delete;
	Get parameters;
	Create parameters;
	Instantiate abstract embedded servlet container integration tests  with abstract application launcher;
	Check if  has error;
	Handle error;
	Expand;
	Expand uri variables map

285.2. Add a class for application builder. It allows to:

	Instantiate application builder  with temporary folder;
	Build application;
	Do build application;
	Create resources jar;
	Write pom;
	Write settings  xml app folder file;
	Copy application source;
	Package application

285.3. Add a class for boot run application launcher. It allows to:

	Instantiate boot run application launcher  with application builder, build output and build output;
	Get arguments;
	Delete launcher classes;
	Populate target classes;
	Populate dependencies;
	Populate src main webapp;
	Get classes path;
	Get lib paths;
	Explode archive;
	Get working directory;
	Get description

285.4. Add a class for embedded servlet container jar development integration tests. It allows to:

	Get parameters;
	Instantiate embedded servlet container jar development integration tests  with abstract application launcher;
	Handle meta inf resource from dependency is available via http;
	Handle meta inf resource from dependency is available via servlet context

285.5. Add a class for embedded servlet container jar packaging integration tests. It allows to:

	Get parameters;
	Instantiate embedded servlet container jar packaging integration tests  with abstract application launcher;
	Get nested meta inf resource is available via http;
	Get nested meta inf resource is available via servlet context;
	Handle nested jar is not available via http;
	Handle application classes are not available via http;
	Handle launcher is not available via http

285.6. Add a class for embedded servlet container war development integration tests. It allows to:

	Get parameters;
	Instantiate embedded servlet container war development integration tests  with abstract application launcher;
	Handle meta inf resource from dependency is available via http;
	Handle meta inf resource from dependency is available via servlet context;
	Handle webapp resources are available via http

285.7. Add a class for embedded servlet container war packaging integration tests. It allows to:

	Get parameters;
	Instantiate embedded servlet container war packaging integration tests  with abstract application launcher;
	Get nested meta inf resource is available via http;
	Get nested meta inf resource is available via servlet context;
	Handle nested jar is not available via http;
	Handle application classes are not available via http;
	Handle webapp resources are available via http;
	Handle loader classes are not available via http

285.8. Add a class for exploded application launcher. It allows to:

	Instantiate exploded application launcher  with application builder, build output and build output;
	Get working directory;
	Get description;
	Get arguments;
	Explode archive

285.9. Add a class for ide application launcher. It allows to:

	Instantiate ide application launcher  with application builder, build output and build output;
	Get working directory;
	Get description;
	Get arguments;
	Populate built classes;
	Populate dependencies;
	Get exploded resources project;
	Populate src main webapp;
	Delete launcher classes;
	Get classes path;
	Get lib paths;
	Explode archive

285.10. Rename type PackagedApplicationLauncher with PackagedApplicationLauncher

285.11. Add a class for versions. It allows to:

	Instantiate versions;
	Get boot version;
	Evaluate expression

286. Changes to package org.springframework.boot.context.event:  

286.1. Add a class for application environment prepared event. It allows to:

	Instantiate application environment prepared event  with spring application, configurable environment and configurable environment;
	Get environment

286.2. Add a class for application failed event. It allows to:

	Instantiate application failed event  with spring application, configurable application context, exception throwable and exception throwable;
	Get application context;
	Get exception

286.3. Add a class for application prepared event. It allows to:

	Instantiate application prepared event  with spring application, configurable application context and configurable application context;
	Get application context

286.4. Add a class for application ready event. It allows to:

	Instantiate application ready event  with spring application, configurable application context and configurable application context;
	Get application context

286.5. Add a class for application started event. It allows to:

	Instantiate application started event  with spring application, configurable application context and configurable application context;
	Get application context

286.6. Add a class for application starting event. It allows to:

	Instantiate application starting event  with spring application

286.7. Add a class for spring application event. It allows to:

	Instantiate spring application event  with spring application;
	Get spring application;
	Get args

287. Changes to package org.springframework.boot.context.filtersample:  

287.1. Add a class for example component

287.2. Add a class for example filtered component

287.3. Add a class for sample type exclude filter. It allows to:

	Match metadata reader

288. Changes to package org.springframework.boot.context.logging:  

288.1. Add a class for classpath logging application listener. It allows to:

	Process classpath logging application listener classpath logging application listener on application event;
	Get order;
	Check if classpath logging application listener supports event type;
	Get classpath

288.2. Add a class for logging application listener. It allows to:

	Check if logging application listener supports event type;
	Check if logging application listener supports source type;
	Check if logging application listener is assignable from;
	Process logging application listener logging application listener on application event;
	Process logging application listener logging application listener on application starting event;
	Process logging application listener logging application listener on application environment prepared event;
	Process logging application listener logging application listener on application prepared event;
	Process logging application listener logging application listener on context closed event;
	Process logging application listener logging application listener on application failed event;
	Initialize configurable environment;
	Initialize early logging level;
	Check if logging application listener is set;
	Initialize system;
	Ignore log config;
	Initialize final logging levels;
	Initialize log level;
	Set log levels;
	Get groups;
	Set log level;
	Coerce log level;
	Register shutdown hook  if necessary;
	Register shutdown hook;
	Get set order;
	Get order;
	Set spring boot logging;
	Set parse args

289. Changes to package org.springframework.boot.context.properties:  

289.1. Add a class for configuration bean factory metadata. It allows to:

	Get beans  with factory annotation;
	Find factory annotation;
	Find factory method;
	Set application context

289.2. Add a class for configuration properties bind exception. It allows to:

	Instantiate configuration properties bind exception  with bean type class, annotation configuration properties, cause exception and cause exception;
	Get bean type;
	Get annotation;
	Get message

289.3. Add a class for configuration properties binder. It allows to:

	Instantiate configuration properties binder;
	Set application context;
	Get bind;
	Get configuration properties validator;
	Get validators;
	Get jsr 303 validator;
	Get bind handler;
	Get bind handler advisors;
	Get binder;
	Get configuration property sources;
	Get property sources placeholders resolver;
	Get conversion service;
	Get property editor initializer

289.4. Add a class for configuration properties binding post processor. It allows to:

	Set application context;
	Handle after properties set;
	Get order;
	Post process  before initialization;
	Check if configuration properties binding post processor has been bound;
	Handle bind;
	Get bean type;
	Get annotation

289.5. Add a class for configuration properties binding post processor registrar. It allows to:

	Register bean definitions;
	Register configuration properties binder;
	Register configuration properties binding post processor;
	Register configuration bean factory metadata

289.6. Add a class for property sources deducer. It allows to:

	Instantiate property sources deducer  with application context;
	Get property sources;
	Extract environment property sources;
	Get single property sources placeholder configurer

290. Changes to package org.springframework.boot.context.properties.bind:  

290.1. Add a class for abstract bind handler. It allows to:

	Instantiate abstract bind handler;
	Instantiate abstract bind handler  with parent bind handler;
	Process abstract bind handler abstract bind handler on start;
	Process abstract bind handler abstract bind handler on success;
	Process abstract bind handler abstract bind handler on failure;
	Process abstract bind handler abstract bind handler on finish

290.2. Add an interface declaration  for aggregate element binder. It allows to:

	Get bind;

290.3. Add a class for array binder. It allows to:

	Instantiate array binder  with context;
	Get bind aggregate;
	Merge existing supplier

290.4. Add a class for array binder tests. It allows to:

	Handle setup;
	Convert bind;

290.5. Add an interface declaration  for bean binder. It allows to:

	Get bind

290.6. Add an interface declaration  for bean property binder. It allows to:

	Get bind property

290.7. Add a class for bean property name. It allows to:

	Instantiate bean property name;
	Convert bean property name to dashed form;

290.8. Add a class for bean property name tests. It allows to:

	Convert bean property name tests to dashed case should convert value

290.9. Add an interface declaration  for bind context. It allows to:

	Get binder;
	Get depth;
	Get sources;
	Get configuration property

290.10. Add a class for bind exception. It allows to:

	Instantiate bind exception  with configuration property name, target bindable, configuration property, cause throwable and cause throwable;
	Get name;
	Get target;
	Get property;
	Get origin;
	Build message

290.11. Add an interface declaration  for bind handler. It allows to:

	Process bind handler bind handler on start;
	Process bind handler bind handler on success;
	Process bind handler bind handler on failure;
	Process bind handler bind handler on finish

290.12. Add a class for bind result. It allows to:

	Instantiate bind result  with value;
	Get bind result;
	Check if bind result is bound;
	Handle if bound;
	Map mapper function;
	Or other else;
	Or other supplier else get;
	Or type class else create;
	Or exception supplier else throw;
	Check if bind result equals;
	Hash code;
	O value

290.13. Add a class for bindable. It allows to:

	Instantiate bindable  with resolvable type, boxed type, value supplier, annotations and annotations;
	Get type;
	Get boxed type;
	Get value;
	Get annotations;
	Get annotation;
	Check if bindable equals;
	Hash code;
	Convert bindable to string;
	Handle null safe equals;
	Process bindable bindable with annotations;
	Process bindable bindable with existing value;
	Process bindable bindable with supplied value;
	Process bindable bindable of instance;
	O type class;
	Get list of;
	Set  of element type class;
	Map  of key type class;
	O resolvable type;
	Get box

290.14. Add a class for collection binder. It allows to:

	Instantiate collection binder  with context;
	Get bind aggregate;
	Merge existing supplier;
	Get existing  if possible;
	Copy collection if possible;
	Create new collection

290.15. Add an interface declaration  for placeholders resolver. It allows to:

	Resolve placeholders

290.16. Add a class for property sources placeholders resolver. It allows to:

	Instantiate property sources placeholders resolver  with environment;
	Instantiate property sources placeholders resolver  with sources iterable;
	Instantiate property sources placeholders resolver  with sources iterable, property placeholder helper and property placeholder helper;
	Resolve placeholders;
	Resolve placeholder;
	Get sources

290.17. Add a class for unbound configuration properties exception. It allows to:

	Instantiate unbound configuration properties exception  with unbound properties set;
	Get unbound properties;
	Build message

291. Changes to package org.springframework.boot.context.properties.bind.handler:  

291.1. Add a class for ignore errors bind handler. It allows to:

	Instantiate ignore errors bind handler;
	Instantiate ignore errors bind handler  with parent bind handler;
	Process ignore errors bind handler ignore errors bind handler on failure

291.2. Add a class for ignore top level converter not found bind handler. It allows to:

	Instantiate ignore top level converter not found bind handler;
	Instantiate ignore top level converter not found bind handler  with parent bind handler;
	Process ignore top level converter not found bind handler ignore top level converter not found bind handler on failure

291.3. Add a class for no unbound elements bind handler. It allows to:

	Instantiate no unbound elements bind handler;
	Instantiate no unbound elements bind handler  with parent bind handler;
	Instantiate no unbound elements bind handler  with parent bind handler, filter function and filter function;
	Process no unbound elements bind handler no unbound elements bind handler on success;
	Process no unbound elements bind handler no unbound elements bind handler on finish;
	Check no unbound elements;
	Collect unbound;
	Check if no unbound elements bind handler is unbound;
	Check if no unbound elements bind handler is overridden collection element

292. Changes to package org.springframework.boot.context.properties.bind.validation:  

292.1. Add a class for bind validation exception. It allows to:

	Instantiate bind validation exception  with validation errors;
	Get validation errors;
	Get message

292.2. Add a class for bind validation exception tests. It allows to:

	Create when validation errors is null should throw exception;
	Get validation errors should return validation errors

292.3. Add a class for origin tracked field error. It allows to:

	Instantiate origin tracked field error  with field error, origin and origin;
	Get origin;
	Convert origin tracked field error to string;
	O field error

292.4. Add a class for origin tracked field error tests. It allows to:

	Process origin tracked field error tests origin tracked field error tests of when field error is null should return null;
	Process origin tracked field error tests origin tracked field error tests of when origin is null should return field error without origin;
	Process origin tracked field error tests origin tracked field error tests of should return origin capable field error;
	Convert origin tracked field error tests to string should add origin

292.5. Add a class for validation bind handler. It allows to:

	Instantiate validation bind handler  with validators;
	Instantiate validation bind handler  with parent bind handler, validators and validators;
	Process validation bind handler validation bind handler on success;
	Process validation bind handler validation bind handler on finish;
	Process validation bind handler validation bind handler on failure;
	Validate configuration property name;
	Get validation target;
	Get bind validation exception

292.6. Add a class for validation errors. It allows to:

	Instantiate validation errors  with configuration property name, bound properties set, errors list and errors list;
	Convert errors;
	Convert error;
	Convert field error;
	Find field error origin;
	Check if validation errors is for error;
	Get name;
	Get bound properties;
	Check if validation errors has errors;
	Get all errors;
	Get iterator

292.7. Add a class for validation errors tests. It allows to:

	Create when name is null should throw exception;
	Create when bound properties is null should throw exception;
	Create when errors is null should throw exception;
	Get name should return name;
	Get bound properties should return bound properties;
	Get errors should return errors;
	Handle iterator should iterate errors;
	Get errors should adapt field errors  to be origin providers

293. Changes to package org.springframework.boot.context.properties.migrator:  

293.1. Add a class for properties migration listener. It allows to:

	Process properties migration listener properties migration listener on application event;
	Process properties migration listener properties migration listener on application prepared event;
	Load repository;
	Log legacy properties report

293.2. Add a class for properties migration reporter. It allows to:

	Instantiate properties migration reporter  with configuration metadata repository, configurable environment and configurable environment;
	Get report;
	Map properties  with replacement;
	Get matching properties;
	Determine replacement metadata;
	Detect map value replacement;
	Get deprecated filter;
	Get property sources  as map;
	Determine property source name

293.3. Add a class for properties migration reporter tests. It allows to:

	Handle report is null with no matching keys;
	Handle replacement keys are remapped;
	Warning report;
	Handle error report;
	Handle error report no replacement;
	Handle duration type is handled transparently;
	Handle reason is provided if property could not be renamed;
	Handle invalid replacement handled;
	Map property sources to names;
	Get origin;
	Assert mapped property;
	Load property source;
	Load repository;
	Create warning report;
	Create error report;
	Create analyzer

293.4. Add a class for property migration. It allows to:

	Instantiate property migration  with configuration property, configuration metadata property, replacement metadata property and replacement metadata property;
	Determine line number;
	Determine compatible type;
	Determine replacement type;
	Get property;
	Get line number;
	Get metadata;
	Check if property migration is compatible type;
	Determine reason

294. Changes to package org.springframework.boot.context.properties.source:  

294.1. Add a class for abstract property mapper tests. It allows to:

	Get mapper;
	Get names from string;
	Get names from configuration

294.2. Add a class for aliased configuration property source. It allows to:

	Instantiate aliased configuration property source  with configuration property source, configuration property name aliases and configuration property name aliases;
	Get configuration property;
	Check if aliased configuration property source contains descendant of;
	Get underlying source;
	Get source;
	Get aliases

294.3. Add a class for aliased configuration property source tests. It allows to:

	Get configuration property should consider aliases;
	Get configuration property when  not aliases should return value;
	Check if aliased configuration property source tests contains descendant of when source returns unknown should return unknown;
	Check if aliased configuration property source tests contains descendant of when source returns present should return present;
	Check if aliased configuration property source tests contains descendant of when all are absent should return absent;
	Check if aliased configuration property source tests contains descendant of when any is present should return present;
	Check if aliased configuration property source tests contains descendant of when present in alias should return present;
	Get value

294.4. Add a class for aliased iterable configuration property source. It allows to:

	Instantiate aliased iterable configuration property source  with iterable configuration property source, configuration property name aliases and configuration property name aliases;
	Get stream;
	Add aliases;
	Get source

294.5. Add a class for aliased iterable configuration property source tests. It allows to:

	Handle stream should include aliases

294.6. Add a class for configuration property. It allows to:

	Instantiate configuration property  with configuration property name, origin and origin;
	Get name;
	Get value;
	Get origin;
	Check if configuration property equals;
	Hash code;
	Convert configuration property to string;
	Compare  to other configuration property;
	O configuration property name;

294.7. Add a class for configuration property name aliases. It allows to:

	Instantiate configuration property name aliases;
	Instantiate configuration property name aliases  with configuration property name, aliases configuration property name and aliases configuration property name;
	Add aliases;
	Get aliases;
	Get name  for alias;
	Get iterator

294.8. Add a class for configuration property name aliases tests. It allows to:

	Create configuration property name aliases tests with string when null name should throw exception;
	Create configuration property name aliases tests with string should add mapping;
	Create configuration property name aliases tests with name should add mapping;
	Add aliases  from string should add mapping;
	Add aliases  from name should add mapping;
	Add when has existing should add additional mappings;
	Get aliases when  not mapped should return empty list;
	Get aliases when mapped should return mapping;
	Get name  for alias when has mapping should return name;
	Get name  for alias when not mapped should return null

294.9. Add a class for configuration property name tests. It allows to:

	Process configuration property name tests configuration property name tests of name should not be null;
	Process configuration property name tests configuration property name tests of name should not start with dash;
	Process configuration property name tests configuration property name tests of name should not start with dot;
	Process configuration property name tests configuration property name tests of name should not end with dot;
	Process configuration property name tests configuration property name tests of name should not contain uppercase;
	Process configuration property name tests configuration property name tests of name should not contain invalid chars;
	Process configuration property name tests configuration property name tests of name when simple;
	Process configuration property name tests configuration property name tests of name when starts with number;
	Process configuration property name tests configuration property name tests of name when run on associative;
	Process configuration property name tests configuration property name tests of name when dot on associative;
	Process configuration property name tests configuration property name tests of name when dot and associative;
	Process configuration property name tests configuration property name tests of name when double run on and associative;
	Process configuration property name tests configuration property name tests of name when double dot and associative;
	Process configuration property name tests configuration property name tests of name when missing close bracket;
	Process configuration property name tests configuration property name tests of name when missing open bracket;
	Process configuration property name tests configuration property name tests of name when multiple mismatched brackets;
	Process configuration property name tests configuration property name tests of name when nested brackets;
	Process configuration property name tests configuration property name tests of name with whitespace in name;
	Process configuration property name tests configuration property name tests of name with whitespace in associative element;
	Process configuration property name tests configuration property name tests of name with uppercase in associative element;
	Process configuration property name tests configuration property name tests of when name is empty should return empty name;
	Adapt when name is null should throw exception;
	Adapt when element value processor is null should adapt;
	Adapt should create name;
	Adapt should strip invalid chars;
	Adapt configuration property name tests;
	Adapt should support mixed case;
	Adapt should use element value processor;
	Adapt should support indexed elements;
	Adapt underscore should return empty;
	Check if configuration property name tests is empty when empty should return true;
	Check if configuration property name tests is empty when not empty should return false;
	Check if configuration property name tests is last element indexed when indexed should return true;
	Check if configuration property name tests is last element indexed when not indexed should return false;
	Get last element should get last element;
	Get last element when empty should return empty string;
	Get element should  not include angle brackets;
	Get element  in uniform form should not include dashes;
	Get element  in original form should return element;
	Get element  in uniform form should return element;
	Get elements;
	Get number  of elements should return number of element;
	Append when  not indexed should append with dot;
	Append when indexed should append  with brackets;
	Append when element name is  not valid should throw exception;
	Append when element name multi dot should throw exception;
	Append when element name is null should return name;
	Chop when less  then size should return chopped;
	Chop when greater  than size should return existing;
	Chop when equal  to size should return existing;
	Check if configuration property name tests is parent of when same should return false;
	Check if configuration property name tests is parent of when parent should return true;
	Check if configuration property name tests is parent of when grandparent should return false;
	Check if configuration property name tests is parent of when root return true;
	Check if configuration property name tests is ancestor of when same should return false;
	Check if configuration property name tests is ancestor of when parent should return true;
	Check if configuration property name tests is ancestor of when grandparent should return true;
	Check if configuration property name tests is ancestor of when root should return true;
	Compare should sort names;
	Compare different lengths should sort names;
	Handle to string should be lower case dashed;
	Handle to string from of should be lower case dashed;
	Check if configuration property name tests equals and hash code;
	Check if configuration property name tests equals when starts with;
	Check if configuration property name tests equals when starts with of adapted name;
	Check if configuration property name tests equals when starts with of adapted name of illegal chars;
	Check if configuration property name tests is valid when valid should return true;
	Check if configuration property name tests is valid when not valid should return false

294.10. Add an interface declaration  for configuration property source. It allows to:

	Get configuration property;
	Check if configuration property source contains descendant of;
	Get filter;
	Process configuration property source configuration property source with aliases;
	Get underlying source

294.11. Add a class for configuration property sources. It allows to:

	Instantiate configuration property sources;
	Check if configuration property sources is attached configuration property source;
	Attach environment;
	Get environment;
	Process configuration property sources configuration property sources from;
	Get stream property sources;
	Flatten property source;
	Check if configuration property sources is included

294.12. Add a class for configuration property sources property source. It allows to:

	Instantiate configuration property sources property source  with source iterable;
	Get property;
	Get origin;
	Find configuration property;

294.13. Add a class for configuration property sources property source tests. It allows to:

	Get property should return value;
	Get property when name is  not valid should return null;
	Get property when multiple should return  first;
	Get property when none should return  first;
	Get property origin should return origin;
	Get property origin when missing should return null;
	Get name should return name;
	Get source should return source

294.14. Add a class for configuration property sources tests. It allows to:

	Attach should add adapter  at beginning;
	Attach should re attach  in merged setup;
	Get when  not attached should return adapted;
	Get configuration property sources tests;
	Handle environment property expansion should work when attached;
	Process configuration property sources tests configuration property sources tests from property source should return spring configuration property source;
	Process configuration property sources tests configuration property sources tests from property source should flatten property sources;
	Get property

294.15. Add a class for configuration property state tests. It allows to:

	Handle search when iterable is null should throw exception;
	Handle search when predicate is null should throw exception;
	Handle search when contains item should return present;
	Handle search when contains no item should return absent

294.16. Add a class for configuration property tests. It allows to:

	Create when name is null should throw exception;
	Create when value is null should throw exception;
	Get name should return name;
	Get value should return value;
	Get property origin should return value property origin;
	Check if configuration property tests equals and hash code;
	Convert configuration property tests to string should return value

294.17. Add a class for default property mapper tests. It allows to:

	Get mapper;
	Map default property mapper tests from string should return best guess;
	Map default property mapper tests from configuration should return best guess

294.18. Add an interface declaration  for element char predicate. It allows to:

	Handle test

294.19. Add a class for filtered configuration properties source. It allows to:

	Instantiate filtered configuration properties source  with configuration property source, filter predicate and filter predicate;
	Get configuration property;
	Check if filtered configuration properties source contains descendant of;
	Get underlying source;
	Get source;
	Get filter;
	Convert filtered configuration properties source to string

294.20. Add a class for filtered configuration properties source tests. It allows to:

	Create when source is null should throw exception;
	Create when filter is null should throw exception;
	Get value should filter names;
	Check if filtered configuration properties source tests contains descendant of when source returns empty should return empty;
	Check if filtered configuration properties source tests contains descendant of when source returns false should return false;
	Check if filtered configuration properties source tests contains descendant of when source returns true should return empty;
	Create test source;
	Convert source;
	No brackets

294.21. Add a class for filtered iterable configuration properties source. It allows to:

	Instantiate filtered iterable configuration properties source  with iterable configuration property source, filter predicate and filter predicate;
	Get stream;
	Get source;
	Check if filtered iterable configuration properties source contains descendant of

294.22. Add a class for filtered iterable configuration properties source tests. It allows to:

	Handle iterator should filter names;
	Convert source;
	Check if filtered iterable configuration properties source tests contains descendant of should use contents;
	No brackets

294.23. Add a class for invalid configuration property name exception. It allows to:

	Instantiate invalid configuration property name exception  with name char sequence, invalid characters list and invalid characters list;
	Get invalid characters;
	Get name;
	Throw name char sequence if has invalid chars

294.24. Add a class for invalid configuration property value exception. It allows to:

	Instantiate invalid configuration property value exception;
	Get name;
	Get value;
	Get reason

294.25. Add an interface declaration  for iterable configuration property source. It allows to:

	Get iterator;
	Get stream;
	Check if iterable configuration property source contains descendant of;
	Get filter;
	Process iterable configuration property source iterable configuration property source with aliases

294.26. Add a class for map configuration property source. It allows to:

	Instantiate map configuration property source;
	Instantiate map configuration property source  with map;
	Put map;
	Put map configuration property source;
	Get underlying source;
	Get configuration property;
	Get iterator;
	Get stream;
	Assert map not read only system attributes map

294.27. Add a class for map configuration property source tests. It allows to:

	Create when map is null should throw exception;
	Create when map has entries should adapt map;
	Put all when map is null should throw exception;
	Put all should put entries;
	Put should put entry;
	Get configuration property should get  from memory;
	Handle iterator should get from memory;
	Handle stream should get from memory;
	Get value

294.28. Add an interface declaration  for property mapper. It allows to:

	Map configuration property name;
	Map property mapper

294.29. Add a class for property mapping. It allows to:

	Instantiate property mapping  with configuration property name;
	Get property source name;
	Get configuration property name;
	Check if property mapping is applicable

294.30. Add a class for spring configuration property sources tests. It allows to:

	Create when property sources is null should throw exception;
	Should adapt property source;
	Should adapt system environment property source;
	Should extended adapt system environment property source;
	Should spring configuration property sources tests not adapt system environment property override source;
	Should adapt system environment property source  with underscore value;
	Should adapt multiple property sources;
	Should flatten environment;
	Get property;
	Should track changes;
	Should track when source has identical name

294.31. Add a class for system environment property mapper. It allows to:

	Map configuration property name;
	Map system environment property mapper;
	Convert name;
	Convert legacy name;
	Convert legacy name element;
	Get process element value;
	Check if system environment property mapper is number

294.32. Add a class for system environment property mapper tests. It allows to:

	Get mapper;
	Map system environment property mapper tests from string should return best guess;
	Map system environment property mapper tests from configuration should return best guess;
	Underscore should  not map to empty string;
	Underscore system environment property mapper tests with whitespace should not map to empty string

294.33. Add a class for test property mapper. It allows to:

	Add test property mapper from property source;
	Add from configuration property name from configuration property;
	Map test property mapper;
	Map configuration property name

294.34. Add a class for unbound elements source filter. It allows to:

	Apply configuration property source

294.35. Add a class for unbound elements source filter tests. It allows to:

	Set unbound elements source filter tests;
	Handle filter when source is system properties property source should return false;
	Handle filter when source is system environment property source should return false;
	Handle filter when source is not system should return true

295. Changes to package org.springframework.boot.convert:  

295.1. Add a class for application conversion service. It allows to:

	Instantiate application conversion service;
	Instantiate application conversion service  with embedded value resolver;
	Get shared instance;
	Configure formatter registry;
	Add application converters;
	Add delimited string converters;
	Add application formatters

295.2. Add a class for array to delimited string converter. It allows to:

	Instantiate array to delimited string converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

295.3. Add a class for char array formatter. It allows to:

	Get print;
	Parse locale

295.4. Add a class for char array formatter tests. It allows to:

	Instantiate char array formatter tests  with conversion service;
	Convert char array formatter tests from char array to string should convert;
	Convert char array formatter tests from string to char array should convert;
	Get conversion services

295.5. Add a class for collection to delimited string converter. It allows to:

	Instantiate collection to delimited string converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor;
	Convert source collection;
	Get delimiter;
	Convert element

295.6. Add a class for conversion service parameters. It allows to:

	Instantiate conversion service parameters  with formatter;
	Instantiate conversion service parameters  with converter factory;
	Instantiate conversion service parameters  with generic converter;
	Instantiate conversion service parameters  with initializer consumer;
	Get iterator

295.7. Add a class for delimited string to array converter. It allows to:

	Instantiate delimited string to array converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor;
	Get elements

295.8. Add a class for delimited string to collection converter. It allows to:

	Instantiate delimited string to collection converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor;
	Create collection;
	Get elements

295.9. Add a class for duration style tests. It allows to:

	Detect and parse when value is null should throw exception;
	Detect and parse when iso 8601 should return duration;
	Detect and parse when simple nanos should return duration;
	Detect and parse when simple micros should return duration;
	Detect and parse when simple millis should return duration;
	Detect and parse when simple seconds should return duration;
	Detect and parse when simple minutes should return duration;
	Detect and parse when simple hours should return duration;
	Detect and parse when simple days should return duration;
	Detect and parse when simple  without suffix should return duration;
	Detect and parse when simple  without suffix but with chrono unit should return duration;
	Detect and parse when bad format should throw exception;
	Detect when simple should return simple;
	Detect when iso 8601 should return iso 8601;
	Detect when unknown should throw exception;
	Parse iso 8601 should parse;
	Parse iso 8601  with unit should ignore unit;
	Parse iso 8601 when simple should throw exception;
	Parse simple should parse;
	Parse simple  with unit should use unit as fallback;
	Parse simple when unknown unit should throw exception;
	Parse simple when iso 8601 should throw exception;
	Handle print iso 8601 should print;
	Handle print iso 8601 should ignore unit;
	Print simple  without unit should print in ms;
	Print simple  with unit should print in unit

295.10. Add a class for duration to number converter. It allows to:

	Get convertible types;
	Convert source type descriptor;
	Get duration unit;
	Convert source duration

295.11. Add a class for duration to number converter tests. It allows to:

	Instantiate duration to number converter tests  with conversion service;
	Convert duration to number converter tests without style should return ms;
	Convert duration to number converter tests with format should use ignore format;
	Convert duration to number converter tests with format and unit should use format and unit;
	Get conversion services

295.12. Add a class for duration to string converter. It allows to:

	Get convertible types;
	Convert source type descriptor;
	Get duration unit;
	Get duration style;
	Convert source duration

295.13. Add a class for duration to string converter tests. It allows to:

	Instantiate duration to string converter tests  with conversion service;
	Convert duration to string converter tests without style should return iso 8601;
	Convert duration to string converter tests with format should use format and ms;
	Convert duration to string converter tests with format and unit should use format and unit;
	Get conversion services

295.14. Add a class for inet address formatter. It allows to:

	Get print;
	Parse locale

295.15. Add a class for inet address formatter tests. It allows to:

	Instantiate inet address formatter tests  with conversion service;
	Convert inet address formatter tests from inet address to string should convert;
	Convert inet address formatter tests from string to inet address should convert;
	Convert inet address formatter tests from string to inet address when host does not exist should throw exception;
	Resolves inet address formatter tests;
	Check if inet address formatter tests is resolvable;
	Get conversion services

295.16. Add a class for iso offset formatter. It allows to:

	Get print;
	Parse locale

295.17. Add a class for iso offset formatter tests. It allows to:

	Instantiate iso offset formatter tests  with conversion service;
	Convert should convert string  to iso date;
	Convert should convert iso date  to string;
	Get conversion services

295.18. Add a class for mock duration type descriptor. It allows to:

	Instantiate mock duration type descriptor;
	Get chrono unit

295.19. Add a class for number to duration converter. It allows to:

	Get convertible types;
	Convert source type descriptor

295.20. Add a class for number to duration converter tests. It allows to:

	Instantiate number to duration converter tests  with conversion service;
	Convert when simple  without suffix should return duration;
	Convert when simple  without suffix but with annotation should return duration;
	Convert source integer;
	Get conversion services

295.21. Add a class for string to duration converter. It allows to:

	Get convertible types;
	Convert source type descriptor;
	Get style;
	Get duration unit;
	Convert duration style

295.22. Add a class for string to duration converter tests. It allows to:

	Instantiate string to duration converter tests  with conversion service;
	Convert when iso 8601 should return duration;
	Convert when simple nanos should return duration;
	Convert when simple micros should return duration;
	Convert when simple millis should return duration;
	Convert when simple seconds should return duration;
	Convert when simple minutes should return duration;
	Convert when simple hours should return duration;
	Convert when simple days should return duration;
	Convert when simple  without suffix should return duration;
	Convert when simple  without suffix but with annotation should return duration;
	Convert when bad format should throw exception;
	Convert when style mismatch should throw exception;
	Convert when empty should return null;
	Convert string to duration converter tests;
	Convert chrono unit;
	Get conversion services

295.23. Add a class for string to enum ignoring case converter factory tests. It allows to:

	Instantiate string to enum ignoring case converter factory tests  with conversion service;
	Convert can convert from string;
	Convert string to enum ignoring case converter factory tests from string to enum when exact match should convert value;
	Convert string to enum ignoring case converter factory tests from string to enum when fuzzy match should convert value;
	Convert string to enum ignoring case converter factory tests from string to enum when using non english locale should convert value;
	Get conversion services;
	Convert string to enum ignoring case converter factory tests to string

296. Changes to package org.springframework.boot.devtools:  

296.1. Add a class for remote spring application. It allows to:

	Instantiate remote spring application;
	Run remote spring application;
	Get initializers;
	Get listeners;
	Get banner;
	Wait remote spring application indefinitely;
	Handle main

296.2. Add a class for remote url property extractor. It allows to:

	Process remote url property extractor remote url property extractor on application event;
	Handle clean remote url;
	Get order

297. Changes to package org.springframework.boot.devtools.autoconfigure:  

297.1. Add a class for condition evaluation delta logging listener. It allows to:

	Process condition evaluation delta logging listener condition evaluation delta logging listener on application event;
	Set application context

297.2. Add a class for dev tools data source condition. It allows to:

	Get configuration phase;
	Get match outcome

297.3. Add a class for dev tools embedded data source auto configuration tests. It allows to:

	Handle auto configured data source is not shutdown

297.4. Add a class for dev tools pooled data source auto configuration tests. It allows to:

	Before dev tools pooled data source auto configuration tests;
	Process dev tools pooled data source auto configuration tests dev tools pooled data source auto configuration tests after;
	Handle auto configured in memory data source is shutdown;
	Handle auto configured external data source is not shutdown;
	H 2 server is  not shutdown;
	Process dev tools pooled data source auto configuration tests dev tools pooled data source auto configuration tests in memory H 2 is shutdown;
	Handle hsql server is not shutdown;
	Process dev tools pooled data source auto configuration tests dev tools pooled data source auto configuration tests in memory hsql is shutdown;
	Handle derby client is not shutdown;
	Process dev tools pooled data source auto configuration tests dev tools pooled data source auto configuration tests in memory derby is shutdown

297.5. Add a class for dev tools properties tests. It allows to:

	Handle additional exclude keeps defaults;
	Handle additional exclude no default;
	Handle additional exclude custom default

297.6. Add a class for hateoas objenesis cache disabler. It allows to:

	Handle after properties set;
	Disable caching;
	Do disable caching;
	Remove objenesis cache

297.7. Add a class for optional live reload server. It allows to:

	Instantiate optional live reload server  with live reload server;
	Handle after properties set;
	Start server;
	Trigger reload

297.8. Add a class for optional live reload server tests. It allows to:

	Handle null server;
	Handle server wont start

297.9. Add a class for trigger file filter. It allows to:

	Instantiate trigger file filter;
	Accept file

297.10. Add a class for trigger file filter tests. It allows to:

	Name must  not be null;
	Accept name match;
	Check if trigger file filter tests does not accept name mismatch;
	Handle test name

298. Changes to package org.springframework.boot.devtools.classpath:  

298.1. Add a class for class path changed event. It allows to:

	Instantiate class path changed event  with change set;
	Get change set;
	Check if class path changed event is restart required

298.2. Add a class for class path changed event tests. It allows to:

	Change set must  not be null;
	Get change set;
	Get class path changed event tests

298.3. Add a class for class path file change listener. It allows to:

	Instantiate class path file change listener  with application event publisher, class path restart strategy, file system watcher to stop and file system watcher to stop;
	Process class path file change listener class path file change listener on change;
	Publish event;
	Check if class path file change listener is restart required

298.4. Add a class for class path file change listener tests. It allows to:

	Handle setup;
	Handle event publisher must not be null;
	Restart strategy must  not be null;
	Check if class path file change listener tests sends event without restart;
	Check if class path file change listener tests sends event with restart;
	Handle test sends event

298.5. Add a class for class path file system watcher. It allows to:

	Instantiate class path file system watcher  with file system watcher factory, class path restart strategy, urls and urls;
	Set stop watcher  on restart;
	Set application context;
	Handle after properties set;
	Destroy class path file system watcher

298.6. Add a class for class path folders. It allows to:

	Instantiate class path folders  with urls;
	Add urls;
	Add url;
	Get iterator

298.7. Add an interface declaration  for class path restart strategy. It allows to:

	Check if class path restart strategy is restart required

298.8. Add a class for pattern class path restart strategy. It allows to:

	Instantiate pattern class path restart strategy;
	Check if pattern class path restart strategy is restart required

298.9. Add a class for pattern class path restart strategy tests. It allows to:

	Handle null pattern;
	Handle empty pattern;
	Handle single pattern;
	Handle multiple patterns;
	Handle pom change;
	Handle test change;
	Create strategy;
	Assert class path restart strategy;
	Handle mock file

299. Changes to package org.springframework.boot.devtools.env:  

299.1. Rename type DevToolsHomePropertiesPostProcessor with DevToolsHomePropertiesPostProcessor

299.2. Add a class for dev tools property defaults post processor. It allows to:

	Post process environment;
	Check if dev tools property defaults post processor is local application;
	Can add properties;
	Check if dev tools property defaults post processor is restarter initialized;
	Check if dev tools property defaults post processor is remote restart enabled;
	Check if dev tools property defaults post processor is web application;
	Resolve class name

300. Changes to package org.springframework.boot.devtools.filewatch:  

300.1. Add a class for changed file. It allows to:

	Instantiate changed file  with source folder file, file, type and type;
	Get file;
	Get type;
	Get relative name;
	Check if changed file equals;
	Hash code;
	Convert changed file to string

300.2. Add a class for changed file tests. It allows to:

	Handle source folder must not be null;
	File must  not be null;
	Handle type must not be null;
	Get file;
	Get type;
	Get relative name

300.3. Rename type ChangedFiles with ChangedFiles

300.4. Add an interface declaration  for file change listener. It allows to:

	Process file change listener file change listener on change

300.5. Add a class for file snapshot. It allows to:

	Instantiate file snapshot  with file;
	Get file;
	Check if file snapshot equals;
	Hash code;
	Convert file snapshot to string

300.6. Add a class for file snapshot tests. It allows to:

	File must  not be null;
	File must  not be A folder;
	Check if file snapshot tests equals if the same;
	Handle not equals if deleted;
	Not equals  if length changes;
	Not equals  if last modified changes;
	Create new file;
	Handle setup file

300.7. Add an interface declaration  for file system watcher factory. It allows to:

	Get file system watcher

300.8. Add a class for file system watcher tests. It allows to:

	Handle setup;
	Handle poll interval must be positive;
	Handle quiet period must be positive;
	Handle poll interval must be greater than quiet period;
	Handle listener must not be null;
	Handle can not add listener to started listener;
	Handle source folder must not be null;
	Handle source folder must not be A file;
	Handle can not add source folder to started listener;
	Add file;
	Add nested file;
	Create source folder and add file;
	Check if file system watcher tests waits for polling interval;
	Check if file system watcher tests waits for quiet period;
	Process file system watcher tests file system watcher tests with existing files;
	Handle multiple sources;
	Handle multiple listeners;
	Modify file system watcher tests;
	Process file system watcher tests file system watcher tests with trigger filter;
	Handle setup watcher;
	Start file system watcher tests with new folder;
	Get single changed files;
	Get single  on change;
	Touch file

300.9. Add a class for folder snapshot. It allows to:

	Instantiate folder snapshot  with folder file;
	Collect files;
	Get changed files;
	Accept changed file;
	Get files map;
	Check if folder snapshot equals;
	Get filter;
	Hash code;
	Get folder;
	Convert folder snapshot to string

300.10. Add a class for folder snapshot tests. It allows to:

	Handle setup;
	Handle folder must not be null;
	Handle folder must not be file;
	Convert folder does not have;
	Check if folder snapshot tests equals when nothing has changed;
	Handle not equals when A file is added;
	Handle not equals when A file is deleted;
	Handle not equals when A file is modified;
	Get changed files snapshot must  not be null;
	Get changed files snapshot must be the same source folder;
	Get changed files when nothing has changed;
	Get changed files when A file is added and deleted and changed;
	Get changed file;
	Create test folder structure

301. Changes to package org.springframework.boot.devtools.livereload:  

301.1. Rename type Connection with Connection

301.2. Add a class for connection closed exception. It allows to:

	Instantiate connection closed exception

301.3. Add a class for connection input stream. It allows to:

	Instantiate connection input stream  with input stream;
	Read header;
	Read connection input stream fully;
	Get checked read;

301.4. Add a class for connection output stream. It allows to:

	Instantiate connection output stream  with output stream;
	Write connection output stream;
	Write http;
	Write headers

301.5. Add a class for connection output stream tests. It allows to:

	Write connection output stream tests;
	Write http;
	Write headers

301.6. Add a class for frame. It allows to:

	Instantiate frame;
	Instantiate frame  with type;
	Get type;
	Get payload;
	Convert frame to string;
	Write output stream;
	Read connection input stream;
	Process frame frame for code

301.7. Add a class for frame tests. It allows to:

	Handle payload must not be null;
	Handle type must not be null;
	Handle text payload;
	Get typed payload;
	Write small payload;
	Write large payload;
	Read fragmented  not supported;
	Read large frames  not supported;
	Read small text frame;
	Read masked text frame;
	Read large text frame;
	Read continuation;
	Read binary;
	Read frame tests close;
	Read ping;
	Read pong;
	Handle new connection input stream;
	Create string

302. Changes to package org.springframework.boot.devtools.remote.client:  

302.1. Add a class for class path change uploader. It allows to:

	Instantiate class path change uploader  with client http request factory;
	Process class path change uploader class path change uploader on application event;
	Perform upload;
	Log upload;
	Serialize class loader files;
	Get class loader files;
	Process class path change uploader class path change uploader as class loader file

302.2. Add a class for class path change uploader tests. It allows to:

	Handle setup;
	Handle url must not be null;
	Handle url must not be empty;
	Handle request factory must not be null;
	Handle url must not be malformed;
	Check if class path change uploader tests sends class loader files;
	Handle retries on socket exception;
	Verify upload request;
	Assert class file;
	Create class path changed event;
	Create file;
	Get deserialize

302.3. Add a class for delayed live reload trigger. It allows to:

	Instantiate delayed live reload trigger  with optional live reload server, client http request factory and client http request factory;
	Set timings;
	Run delayed live reload trigger;
	Check if delayed live reload trigger is up;
	Create request

302.4. Add a class for delayed live reload trigger tests. It allows to:

	Handle setup;
	Live reload server must  not be null;
	Handle request factory must not be null;
	Handle url must not be null;
	Handle url must not be empty;
	Trigger reload  on status;
	Handle timeout

302.5. Add a class for http header interceptor. It allows to:

	Instantiate http header interceptor;
	Intercept http request

302.6. Add a class for http header interceptor tests. It allows to:

	Handle setup;
	Handle constructor null header name;
	Handle constructor empty header name;
	Handle constructor null header value;
	Handle constructor empty header value;
	Intercept http header interceptor tests

303. Changes to package org.springframework.boot.devtools.remote.server:  

303.1. Add an interface declaration  for access manager. It allows to:

	Check if access manager is allowed

303.2. Add a class for dispatcher. It allows to:

	Instantiate dispatcher  with access manager, mappers collection and mappers collection;
	Handle server http request;
	Handle handler

303.3. Add a class for dispatcher filter. It allows to:

	Instantiate dispatcher filter  with dispatcher;
	Handle init;
	Do filter;
	Destroy dispatcher filter

303.4. Add a class for dispatcher filter tests. It allows to:

	Handle setup;
	Handle dispatcher must not be null;
	Check if dispatcher filter tests ignores not servlet requests;
	Get ignored by dispatcher;
	Get handled by dispatcher

303.5. Add a class for dispatcher tests. It allows to:

	Handle setup;
	Handle access manager must not be null;
	Handle mappers must not be null;
	Handle access manager veto request;
	Handle access manager allow request;
	Handle orders mappers

303.6. Add an interface declaration  for handler. It allows to:

	Handle server http request

303.7. Add an interface declaration  for handler mapper. It allows to:

	Get handler

303.8. Add a class for http header access manager. It allows to:

	Instantiate http header access manager;
	Check if http header access manager is allowed

303.9. Add a class for http header access manager tests. It allows to:

	Handle setup;
	Header name must  not be null;
	Header name must  not be empty;
	Get expected secret must not be null;
	Get expected secret must not be empty;
	Check if http header access manager tests allows matching;
	Check if http header access manager tests disallows wrong secret;
	Check if http header access manager tests disallows no secret;
	Check if http header access manager tests disallows wrong header

303.10. Add a class for http status handler. It allows to:

	Instantiate http status handler;
	Instantiate http status handler  with http status;
	Handle server http request

303.11. Add a class for http status handler tests. It allows to:

	Handle setup;
	Handle status must not be null;
	Check if http status handler tests responds ok;
	Check if http status handler tests responds with status

303.12. Add a class for url handler mapper. It allows to:

	Instantiate url handler mapper  with handler;
	Get handler

303.13. Add a class for url handler mapper tests. It allows to:

	Handle request uri must not be null;
	Handle request uri must not be empty;
	Handle request url must start with slash;
	Check if url handler mapper tests handles matched url;
	Check if url handler mapper tests ignores different url

304. Changes to package org.springframework.boot.devtools.restart:  

304.1. Add a class for agent reloader. It allows to:

	Instantiate agent reloader;
	Check if agent reloader is active;

304.2. Add a class for changeable urls. It allows to:

	Instantiate changeable urls  with urls;
	Check if changeable urls is folder url;
	Get iterator;
	Get size;
	Convert changeable urls to array;
	Convert changeable urls to list;
	Convert changeable urls to string;
	Process changeable urls changeable urls from class loader;
	Get urls from class loader;
	Convert changeable urls to URL;
	Get urls  from class path of jar manifest if possible;
	Get jar file  if possible;
	Get urls  from manifest class path attribute;
	Process changeable urls changeable urls from urls;

304.3. Add a class for changeable urls tests. It allows to:

	Handle folder url;
	File url;
	Http url;
	Handle https url;
	Handle skips urls;
	Handle urls from jar class path are considered;
	Make url;
	Make jar file  with urls in manifest class path;
	Make jar file  with no manifest

304.4. Add a class for class loader files resource pattern resolver tests. It allows to:

	Handle setup;
	Get class loader should return class loader;
	Get resource should return resource;
	Get resource when has servlet context should return servlet resource;
	Get resource when deleted should return deleted resource;
	Get resources should return resources;
	Get resources when deleted should filter deleted;
	Handle custom resource loader is used in non web application;
	Handle custom protocol resolver is used in non web application;
	Handle custom resource loader is used in web application;
	Handle custom protocol resolver is used in web application;
	Handle mock protocol resolver;
	Create file

304.5. Add a class for default restart initializer. It allows to:

	Get initial urls;
	Check if default restart initializer is main;
	Check if default restart initializer is skipped stack element;
	Get urls

304.6. Add an interface declaration  for failure handler. It allows to:

	Handle failure throwable

304.7. Add a class for main method. It allows to:

	Instantiate main method;
	Instantiate main method  with thread;
	Get main method;
	Get method;
	Get declaring class name

304.8. Add a class for mock restart initializer. It allows to:

	Get initial urls

304.9. Add a class for mock restarter. It allows to:

	Apply base statement;
	Evaluate;
	Handle setup;
	Handle cleanup;
	Get mock

304.10. Add a class for on initialized restarter condition. It allows to:

	Get match outcome;
	Get restarter

304.11. Add a class for restart application listener. It allows to:

	Process restart application listener restart application listener on application event;
	Process restart application listener restart application listener on application starting event;
	Process restart application listener restart application listener on application prepared event;
	Process restart application listener restart application listener on application failed event;
	Get order;
	Get set order

304.12. Add a class for restart application listener tests. It allows to:

	Handle cleanup;
	Check if restart application listener tests is highest priority;
	Initialize restart application listener tests with ready;
	Initialize restart application listener tests with fail;
	Disable restart application listener tests with system property;
	Handle test initialize

304.13. Add an interface declaration  for restart initializer. It allows to:

	Get initial urls

304.14. Add a class for restart launcher. It allows to:

	Instantiate restart launcher  with class loader, uncaught exception handler and uncaught exception handler;
	Run restart launcher;
	Get error

304.15. Add an interface declaration  for restart listener. It allows to:

	Restart restart

304.16. Add a class for restarter

305. Changes to package org.springframework.boot.devtools.restart.classloader:  

305.1. Add a class for class loader file. It allows to:

	Instantiate class loader file  with kind;
	Get kind;
	Get last modified;
	Get contents

305.2. Add an interface declaration  for class loader file repository. It allows to:

	Get file

305.3. Add a class for class loader file tests. It allows to:

	Handle kind must not be null;
	Get added contents must not be null;
	Get modified contents must not be null;
	Get deleted contents must be null;
	Get added;
	Get modified;
	Get deleted

305.4. Add a class for class loader files tests. It allows to:

	Add file name must  not be null;
	Add file file must  not be null;
	Get file  with null name;
	Add class loader files tests;
	Missing class loader files tests;
	Add class loader files tests twice;
	Add class loader files tests twice in different source folders;
	Get source folders;
	Serialize class loader files tests;
	Get size;
	Handle class loader files must not be null;
	Construct class loader files tests from existing set

305.5. Add a class for restart class loader tests. It allows to:

	Handle setup;
	Create sample jar file;
	Handle parent must not be null;
	Get updated files must not be null;
	Get resource  from reloadable url;
	Get resource  from parent;
	Get resources filters duplicates;
	Load class  from reloadable url;
	Load class  from parent;
	Get deleted resource;
	Get deleted resource  as stream;
	Get updated resource;
	Get resources  with deleted;
	Get resources  with updated;
	Get deleted class;
	Get updated class;
	Get added class;
	Read string;
	Convert restart class loader tests to list

305.6. Add a class for sample

305.7. Add a class for sample parent

306. Changes to package org.springframework.boot.devtools.restart.server:  

306.1. Add a class for default source folder url filter. It allows to:

	Check if default source folder url filter is match;
	Get jar name;
	Check if default source folder url filter is folder match;
	Get strip trailing slash;
	Get strip common ends

306.2. Add a class for default source folder url filter tests. It allows to:

	Handle maven source folder;
	Gradle eclipse source folder;
	Handle unusual source folder;
	Get skipped projects;
	Do test;
	Get urls

306.3. Add a class for http restart server. It allows to:

	Instantiate http restart server  with source folder url filter;
	Instantiate http restart server  with restart server;
	Handle server http request

306.4. Add a class for http restart server handler. It allows to:

	Instantiate http restart server handler  with http restart server;
	Handle server http request

306.5. Add a class for http restart server handler tests. It allows to:

	Handle server must not be null;
	Handle delegates  to server

306.6. Add a class for http restart server tests. It allows to:

	Handle setup;
	Handle source folder url filter must not be null;
	Restart server must  not be null;
	Send class loader files;
	Send no content;
	Send bad data;
	Serialize http restart server tests

306.7. Add a class for restart server. It allows to:

	Instantiate restart server  with source folder url filter;
	Instantiate restart server  with source folder url filter, class loader and class loader;
	Update class loader files;
	Update file system;
	Check if restart server is folder url;
	Get matching urls;
	Get class loader urls;
	Update time stamp;
	Restart urls set

306.8. Add an interface declaration  for source folder url filter. It allows to:

	Check if source folder url filter is match

307. Changes to package org.springframework.boot.devtools.settings:  

307.1. Add a class for dev tools settings. It allows to:

	Instantiate dev tools settings;
	Add properties map;
	Get patterns;
	Check if dev tools settings is restart include;
	Check if dev tools settings is restart exclude;
	Check if dev tools settings is match;
	Get dev tools settings;
	Get load;

307.2. Rename type DevToolsSettingsTests with DevToolsSettingsTests

308. Changes to package org.springframework.boot.devtools.tests:  

308.1. Add an interface declaration  for application launcher. It allows to:

	Launch application;

308.2. Add a class for exploded remote application launcher. It allows to:

	Instantiate exploded remote application launcher  with directories;
	Create application class path;
	Convert exploded remote application launcher to string

308.3. Add a class for jar file remote application launcher. It allows to:

	Instantiate jar file remote application launcher  with directories;
	Create application class path;
	Add jar output stream to jar;
	Convert jar file remote application launcher to string

308.4. Add a class for launched application. It allows to:

	Instantiate launched application  with classes directory file, standard out file, standard error file, local process, remote process, remote process restarter bi function and remote process restarter bi function;
	Restart remote;
	Stop launched application;
	Stop process;
	Get standard  out;
	Get standard error;
	Get classes directory

308.5. Add a class for local application launcher. It allows to:

	Instantiate local application launcher  with directories;
	Launch application;
	Create application class path;
	Convert local application launcher to string

308.6. Add a class for remote application launcher. It allows to:

	Instantiate remote application launcher  with directories;
	Launch application;
	Get remote restarter;
	Create application class path;
	Create remote spring application class path;
	Await server port;
	Await remote spring application

309. Changes to package org.springframework.boot.devtools.tunnel.client:  

309.1. Add an interface declaration  for tunnel client listener. It allows to:

	Process tunnel client listener tunnel client listener on open;
	Process tunnel client listener tunnel client listener on close

309.2. Add a class for tunnel client listeners. It allows to:

	Add listener;
	Remove listener;
	Handle fire open event;
	Handle fire close event

309.3. Add an interface declaration  for tunnel connection. It allows to:

	Handle open

310. Changes to package org.springframework.boot.devtools.tunnel.payload:  

310.1. Rename type HttpTunnelPayload with HttpTunnelPayload

310.2. Add a class for http tunnel payload forwarder. It allows to:

	Instantiate http tunnel payload forwarder  with target channel;
	Forward http tunnel payload forwarder

310.3. Add a class for http tunnel payload forwarder tests. It allows to:

	Target channel must  not be null;
	Forward http tunnel payload forwarder tests in sequence;
	Forward http tunnel payload forwarder tests out of sequence;
	Handle overflow;
	Get payload

310.4. Add a class for http tunnel payload tests. It allows to:

	Handle sequence must be positive;
	Handle data must not be null;
	Get sequence;
	Get data;
	Assign http tunnel payload tests to;
	Get no data;
	Get http tunnel payload tests with missing header;
	Get http tunnel payload tests with data;
	Get payload data;
	Get payload data  with timeout;

311. Changes to package org.springframework.boot.devtools.tunnel.server:  

311.1. Add a class for http tunnel server handler. It allows to:

	Instantiate http tunnel server handler  with http tunnel server;
	Handle server http request

311.2. Add a class for http tunnel server handler tests. It allows to:

	Handle server must not be null;
	Handle delegates  to server

311.3. Add an interface declaration  for port provider. It allows to:

	Get port

311.4. Add a class for static port provider. It allows to:

	Instantiate static port provider;
	Get port

311.5. Add a class for static port provider tests. It allows to:

	Handle port must be positive;
	Get port

311.6. Add an interface declaration  for target server connection. It allows to:

	Handle open

312. Changes to package org.springframework.boot.diagnostics:  

312.1. Add a class for abstract failure analyzer. It allows to:

	Analyze failure throwable;
	Analyze root failure throwable;
	Get cause type;
	Find cause

312.2. Add a class for failure analysis. It allows to:

	Instantiate failure analysis  with cause throwable;
	Get description;
	Get action;
	Get cause

312.3. Add an interface declaration  for failure analysis reporter. It allows to:

	Handle report

312.4. Add an interface declaration  for failure analyzer. It allows to:

	Analyze failure throwable

312.5. Add a class for failure analyzers. It allows to:

	Instantiate failure analyzers  with configurable application context;
	Instantiate failure analyzers  with configurable application context, class loader and class loader;
	Load failure analyzers;
	Prepare failure analyzers;
	Prepare analyzer;
	Report exception;
	Analyze failure throwable;
	Handle report

312.6. Add a class for logging failure analysis reporter. It allows to:

	Handle report;
	Build message

313. Changes to package org.springframework.boot.diagnostics.analyzer:  

313.1. Add a class for abstract injection failure analyzer. It allows to:

	Analyze root failure throwable;
	Get description;
	Find root throwable most nested cause;

313.2. Add a class for bean not of required type failure analyzer. It allows to:

	Analyze root failure throwable;
	Get description

313.3. Add a class for bind failure analyzer. It allows to:

	Analyze root failure throwable;
	Analyze generic bind exception;
	Build description;
	Get message;
	Get failure analysis;
	Find valid values

313.4. Add an object creator class for connector start failure analyzer. It allows to:

	Analyze root failure throwable

313.5. Add a class for invalid configuration property name failure analyzer. It allows to:

	Analyze root failure throwable;
	Build description;
	Quote character

313.6. Rename type NoSuchMethodFailureAnalyzer with NoSuchMethodFailureAnalyzer

313.7. Add a class for no such method failure analyzer tests. It allows to:

	Handle no such method error is analyzed;
	Create failure

313.8. Add a class for no unique bean definition failure analyzer. It allows to:

	Set bean factory;
	Analyze root failure throwable;
	Build message;
	Get definition description;
	Extract bean names

313.9. Add an object creator class for port in use failure analyzer. It allows to:

	Analyze root failure throwable

313.10. Add a class for unbound configuration property failure analyzer. It allows to:

	Analyze root failure throwable;
	Analyze unbound configuration properties exception;
	Build description;
	Get failure analysis

313.11. Add an object creator class for validation exception failure analyzer. It allows to:

	Analyze root failure throwable

314. Changes to package org.springframework.boot.diagnostics.analyzer.nounique:  

314.1. Add a class for bar test bean

314.2. Add a class for foo test bean

314.3. Add a class for test bean

314.4. Add a class for test bean consumer. It allows to:

	Instantiate test bean consumer  with test bean

315. Changes to package org.springframework.boot.docs:  

315.1. Add a class for exit code application. It allows to:

	Get exit code generator;
	Handle main

316. Changes to package org.springframework.boot.docs.actuate.metrics:  

316.1. Add a class for sample bean. It allows to:

	Instantiate sample bean  with meter registry;
	Handle message

317. Changes to package org.springframework.boot.docs.autoconfigure:  

317.1. Add a class for user service. It allows to:

	Instantiate user service;
	Get name

318. Changes to package org.springframework.boot.docs.builder:  

318.1. Add a class for spring application builder example tests. It allows to:

	Handle context hierarchy with disabled banner

319. Changes to package org.springframework.boot.docs.cloudfoundry:  

319.1. Add a class for cloud foundry custom context path example. It allows to:

	Servlet web server factory;
	Prepare context;
	Get servlet context initializer

320. Changes to package org.springframework.boot.docs.context:  

320.1. Add a class for environment post processor example. It allows to:

	Post process environment;
	Load yaml

320.2. Add a class for environment post processor example tests. It allows to:

	Apply environment post processor

321. Changes to package org.springframework.boot.docs.context.properties.bind:  

321.1. Add a class for app system properties. It allows to:

	Get session timeout;
	Set session timeout;
	Get read timeout;
	Set read timeout

322. Changes to package org.springframework.boot.docs.jdbc:  

322.1. Add a class for basic data source example tests. It allows to:

	Validate configuration

322.2. Add a class for complete two data sources example tests. It allows to:

	Validate configuration

322.3. Add a class for configurable data source example tests. It allows to:

	Validate configuration

322.4. Add a class for sample app

322.5. Add a class for simple data source example tests. It allows to:

	Validate configuration

322.6. Add a class for simple two data sources example tests. It allows to:

	Validate configuration

323. Changes to package org.springframework.boot.docs.jmx:  

323.1. Add a class for sample app

323.2. Add a class for sample jmx tests. It allows to:

	Handle example test

324. Changes to package org.springframework.boot.docs.test.autoconfigure.restdocs.restassured:  

324.1. Add a class for user documentation tests. It allows to:

	Handle list users

325. Changes to package org.springframework.boot.docs.test.web:  

325.1. Add a class for mock mvc example tests. It allows to:

	Handle example test

325.2. Add a class for mock web test client example tests. It allows to:

	Handle example test

325.3. Add a class for random port test rest template example tests. It allows to:

	Handle example test

325.4. Add a class for random port web test client example tests. It allows to:

	Handle example test

326. Changes to package org.springframework.boot.docs.web.security:  

326.1. Add a class for custom web flux security example. It allows to:

	Get spring security filter chain

327. Changes to package org.springframework.boot.env:  

327.1. Add an interface declaration  for environment post processor. It allows to:

	Post process environment

327.2. Add a class for no snake yaml property source loader tests. It allows to:

	Handle load

327.3. Add a class for origin tracked map property source. It allows to:

	Instantiate origin tracked map property source  with source map;
	Get property;
	Get origin

327.4. Add a class for origin tracked map property source tests. It allows to:

	Get property when missing should return null;
	Get property when  non tracked should return value;
	Get property when tracked should return value;
	Get property origin when missing should return null;
	Get property origin when  non tracked should return null;
	Get property origin when tracked should return origin

327.5. Add a class for origin tracked properties loader tests. It allows to:

	Set origin tracked properties loader tests;
	Compare origin tracked properties loader tests to java properties;
	Get simple property;
	Get simple property  with colon separator;
	Get property  with separator surrounded by spaces;
	Get unicode property;
	Get malformed unicode property;
	Get escaped property;
	Get property  with tab;
	Get property  with bang;
	Get property  with value comment;
	Get property  with multiline immediate bang;
	Get property  with carriage return;
	Get property  with new line;
	Get property  with form feed;
	Get property  with white space;
	Get commented out property should be null;
	Get multiline;
	Get immediate multiline;
	Get property  with whitespace after key;
	Get property  with space separator;
	Get property  with backslash escaped;
	Get property  with empty value;
	Get property  with backslash escaped in value;
	Get property  with separator in value;
	Get list property;
	Get property  with ISO 88591 character;
	Get property  with trailing space;
	Get value;
	Get location

327.6. Add a class for origin tracked yaml loader tests. It allows to:

	Set origin tracked yaml loader tests;
	Handle process simple key;
	Handle process map;
	Handle process collection;
	Handle process multiline;
	Handle process list of maps;
	Handle process empty and null values;
	Get value;
	Get location

327.7. Add a class for properties property source loader. It allows to:

	Get file extensions;
	Get load;
	Load properties

327.8. Add a class for properties property source loader tests. It allows to:

	Get file extensions;
	Load properties;
	Load xml

327.9. Add an interface declaration  for property source loader. It allows to:

	Get file extensions;
	Get load

327.10. Add a class for random value property source. It allows to:

	Instantiate random value property source;
	Get property;
	Get random value;
	Get range;
	Get next int  in range;
	Get next  long in range;
	Get random bytes;
	Add configurable environment to environment

327.11. Add a class for random value property source tests. It allows to:

	Not random;
	Handle string;
	Handle int value;
	Handle uuid value;
	Handle int range;
	Handle int max;
	Handle long value;
	Handle long range;
	Long max;
	Long overflow;
	Handle next long

327.12. Add a class for spring application json environment post processor tests. It allows to:

	Handle error;
	Missing spring application json environment post processor tests;
	Handle empty;
	Handle period separated;
	Env var;
	Get nested;
	Get prefixed;
	Handle list;
	Handle list of object;
	Handle property source should track origin

327.13. Add a class for system environment property source environment post processor tests. It allows to:

	Set system environment property source environment post processor tests;
	Post process should replace system environment property source;
	Get replaced property source should be origin aware;
	Get replaced property source when property absent should return null origin;
	Get replaced property source should resolve property

327.14. Add a class for yaml property source loader. It allows to:

	Get file extensions;
	Get load

327.15. Add a class for yaml property source loader tests. It allows to:

	Handle load;
	Get ordered items;
	Merge items;
	Timestamp yaml property source loader tests like items do not become dates;
	Load origin aware

328. Changes to package org.springframework.boot.gradle.docs:  

328.1. Add a class for getting started documentation tests. It allows to:

	Handle typical plugins applies excepted plugins

328.2. Add a class for integrating with actuator documentation tests. It allows to:

	Handle basic build info;
	Build info custom values;
	Build info additional;
	Build info properties

328.3. Add a class for managing dependencies documentation tests. It allows to:

	Handle dependencies example evaluates successfully;
	Handle custom managed versions;
	Handle dependency management in isolation;
	Handle dependency management in isolation with plugins block

328.4. Add a class for packaging documentation tests. It allows to:

	Handle war container dependency evaluates successfully;
	Handle boot jar main class;
	Handle boot jar manifest main class;
	Handle application plugin main class;
	Spring boot dsl main class;
	Handle boot war include devtools;
	Handle boot jar requires unpack;
	Handle boot jar include launch script;
	Handle boot jar launch script properties;
	Handle boot jar custom launch script;
	Handle boot war properties launcher;
	Handle boot jar and jar;
	Handle jar file

328.5. Add a class for publishing documentation tests. It allows to:

	Handle maven upload;
	Handle maven publish

328.6. Add a class for running documentation tests. It allows to:

	Handle boot run main;
	Handle application plugin main class name;
	Spring boot dsl main class name;
	Handle boot run source resources

329. Changes to package org.springframework.boot.gradle.dsl:  

329.1. Add a class for build info dsl integration tests. It allows to:

	Handle basic jar;
	Handle jar with custom name;
	Handle basic war;
	Handle war with custom name;
	Handle additional properties;
	Handle classes dependency;
	Build info properties

329.2. Add a class for spring boot extension. It allows to:

	Instantiate spring boot extension  with project;
	Get main class name;
	Set main class name;
	Build info;
	Determine main source set resources output dir;
	Determine artifact base name;
	Find artifact task

330. Changes to package org.springframework.boot.gradle.plugin:  

330.1. Add a class for application plugin action. It allows to:

	Execute project;
	Get plugin class;
	Load resource

330.2. Add a class for application plugin action integration tests. It allows to:

	Handle no boot distribution without application plugin applied;
	Applying application plugin creates boot distribution;
	Handle no boot start scripts task without application plugin applied;
	Applying application plugin creates boot start scripts task;
	Check if application plugin action integration tests creates boot start scripts task uses application plugins default jvm opts;
	Zip distribution  for jar can be built;
	Handle tar distribution for jar can be built;
	Zip distribution  for war can be built;
	Handle tar distribution for war can be built;
	Convert application name can be used;
	Handle scripts have correct permissions;
	Zip entry names;
	Get tar entry names;
	Handle tar entries

330.3. Add a class for dependency management plugin action. It allows to:

	Execute project;
	Get plugin class

330.4. Add a class for dependency management plugin action integration tests. It allows to:

	No dependency management is applied  by default;
	Handle bom is imported when dependency management plugin is applied;
	Handle helpful error when versionless dependency fails to resolve

330.5. Add a class for java plugin action integration tests. It allows to:

	Handle no boot jar task without java plugin applied;
	Applying java plugin creates boot jar task;
	Handle no boot run task without java plugin applied;
	Applying java plugin creates boot run task;
	Handle java compile tasks use utf 8 encoding;
	Handle java compile tasks use parameters compiler flag by default;
	Handle java compile tasks use parameters and additional compiler flags;
	Handle java compile tasks can override default parameters compiler flag;
	Assemble runs boot jar and jar is skipped;
	Handle error message is helpful when main class can not be resolved;
	Handle jar and boot jar can both be built;
	Handle additional metadata locations configured when processor is present;
	Handle additional metadata locations not configured when processor is absent;
	Create minimal main source

330.6. Add a class for kotlin plugin action. It allows to:

	Execute project;
	Enable java parameters option;
	Get plugin class

330.7. Add a class for kotlin plugin action integration tests. It allows to:

	No kotlin version property  without kotlin plugin;
	Kotlin version property is set;
	Kotlin compile tasks use java parameters flag  by default;
	Kotlin compile tasks can override default java parameters flag

330.8. Add a class for main class convention. It allows to:

	Instantiate main class convention  with project, classpath supplier and classpath supplier;
	Call main class convention;
	Resolve main class;
	Find main class

330.9. Add a class for main class convention tests. It allows to:

	Create convention;
	Handle main class name project property is used;
	Handle spring boot extension main class name is used;
	Convert spring boot extension main class name is used in preference

330.10. Add a class for maven plugin action. It allows to:

	Instantiate maven plugin action;
	Get plugin class;
	Execute project;
	Handle clear configuration mappings

330.11. Add a class for maven plugin action integration tests. It allows to:

	Check if maven plugin action integration tests clears conf 2 scope mappings of upload boot archives task

330.12. Add a class for only dependency management integration tests. It allows to:

	Handle dependency management can be configured using coordinates constant

330.13. Add an interface declaration  for plugin application action. It allows to:

	Get plugin class

330.14. Add a class for single published artifact. It allows to:

	Instantiate single published artifact  with artifacts set;
	Add candidate;
	Get build dependencies

330.15. Add a class for spring boot plugin. It allows to:

	Apply project;
	Verify gradle version;
	Create extension;
	Create boot archives configuration;
	Register plugin actions;
	Handle unregister unresolved dependencies analyzer;
	Determine spring boot version;
	Get implementation version

330.16. Add a class for spring boot plugin integration tests. It allows to:

	Fail spring boot plugin integration tests fast with version of gradle lower than required;
	Succeed spring boot plugin integration tests with version of gradle higher than required;
	Succeed spring boot plugin integration tests with version of gradle matching what is required;
	Handle unresolved dependencies are analyzed when dependency resolution fails;
	Create minimal main source

330.17. Add a class for unresolved dependencies analyzer. It allows to:

	Analyze unresolved dependencies set;
	Finished project;
	Check if unresolved dependencies analyzer has no version

330.18. Add a class for war plugin action. It allows to:

	Instantiate war plugin action  with single published artifact;
	Get plugin class;
	Execute project;
	Get provided runtime configuration

330.19. Add a class for war plugin action integration tests. It allows to:

	Handle no boot war task without war plugin applied;
	Applying war plugin creates boot war task;
	Assemble runs boot war and war is skipped;
	Handle war and boot war can both be built;
	Handle error message is helpful when main class can not be resolved

331. Changes to package org.springframework.boot.gradle.tasks.application:  

331.1. Add a class for create boot start scripts. It allows to:

	Get main class name

332. Changes to package org.springframework.boot.gradle.tasks.buildinfo:  

332.1. Add a class for build info. It allows to:

	Generate build properties;
	Get destination dir;
	Set destination dir;
	Get properties;
	Handle properties;
	Coerce input map to string values

332.2. Add a class for build info integration tests. It allows to:

	Handle default values;
	Handle basic execution;
	Convert not up;
	Convert up;
	Build info properties

332.3. Add a class for build info properties. It allows to:

	Instantiate build info properties  with project;
	Get group;
	Set group;
	Get artifact;
	Set artifact;
	Get version;
	Get set version;
	Get name;
	Set name;
	Get time;
	Set time;
	Get additional;
	Set additional;
	Check if build info properties equals;
	Handle null safe equals;
	Hash code

332.4. Add a class for build info tests. It allows to:

	Handle basic execution;
	Handle custom artifact is reflected in properties;
	Handle project group is reflected in properties;
	Handle custom group is reflected in properties;
	Handle custom name is reflected in properties;
	Handle project version is reflected in properties;
	Handle custom version is reflected in properties;
	Handle time is set in properties;
	Handle time can be removed from properties;
	Handle time can be customized in properties;
	Handle additional properties are reflected in properties;
	Create project;
	Create task;
	Build info properties;

333. Changes to package org.springframework.boot.gradle.tasks.bundling:  

333.1. Add a class for abstract boot archive integration tests. It allows to:

	Instantiate abstract boot archive integration tests;
	Handle basic build;
	Handle reproducible archive;
	Convert up;
	Handle up to date when built twice with launch script included;
	Handle not up to date when launch script was not included and then is included;
	Handle not up to date when launch script was included and then is not included;
	Convert not up;
	Handle application plugin main class name is used;
	Handle spring boot extension main class name is used;
	Handle duplicates are handled gracefully

333.2. Add a class for abstract boot archive tests. It allows to:

	Instantiate abstract boot archive tests  with task class;
	Create task;
	Handle basic archive creation;
	Handle classpath jars are packaged beneath lib path;
	Handle classpath folders are packaged beneath classes path;
	Module info class is packaged  in the root of the archive;
	Handle classpath can be set using A file collection;
	Handle classpath can be set using an object;
	Handle files on the classpath that are not zip files are skipped;
	Convert loader is written;
	Unpack comment is added  to entry identified by A pattern;
	Unpack comment is added  to entry identified by A spec;
	Launch script can be prepended;
	Handle custom launch script can be prepended;
	Launch script init info properties can be customized;
	Handle custom main class in the manifest is honored;
	Handle custom start class in the manifest is honored;
	File timestamp preservation can be disabled;
	Handle reproducible ordering can be enabled;
	Handle devtools jar is excluded by default;
	Handle devtools jar can be included;
	All entries use unix platform and utf 8 name encoding;
	Handle loader is written first then application classes then libraries;
	Get jar file;
	Configure task;
	Execute task;
	Get task;
	Get entry names

333.3. Add an interface declaration  for boot archive. It allows to:

	Get main class name;
	Set main class name;
	Check if boot archive requires unpack;
	Get launch script;
	Launch script;
	Get classpath;
	Handle classpath;
	Set classpath;
	Check if boot archive is exclude devtools;
	Set exclude devtools

333.4. Add a class for boot jar. It allows to:

	Instantiate boot jar;
	Handle classpath files;
	Handle copy;
	Create copy action;
	Get main class name;
	Set main class name;
	Check if boot jar requires unpack;
	Get launch script;
	Launch script;
	Get classpath;
	Handle classpath;
	Set classpath;
	Check if boot jar is exclude devtools;
	Set exclude devtools;
	Get boot inf;
	Resolve zip compression;
	Enable launch script  if necessary

333.5. Add a class for boot jar integration tests. It allows to:

	Instantiate boot jar integration tests

333.6. Add a class for boot jar tests. It allows to:

	Instantiate boot jar tests;
	Convert content can be added;
	Execute task

333.7. Add a class for boot war. It allows to:

	Instantiate boot war;
	Handle copy;
	Create copy action;
	Get main class name;
	Set main class name;
	Check if boot war requires unpack;
	Get launch script;
	Launch script;
	Get provided classpath;
	Set provided classpath;
	Check if boot war is exclude devtools;
	Set exclude devtools;
	Resolve zip compression;
	Enable launch script  if necessary

333.8. Add a class for boot war integration tests. It allows to:

	Instantiate boot war integration tests

333.9. Add a class for boot war tests. It allows to:

	Instantiate boot war tests;
	Get provided classpath jars are packaged in web inf lib provided;
	Get provided classpath can be set using A file collection;
	Get provided classpath can be set using an object;
	Handle devtools jar is excluded by default when its on the provided classpath;
	Handle devtools jar can be included when its on the provided classpath;
	Handle webapp resources in directories that overlap with loader can be packaged;
	Lib provided entries are written  after lib entries;
	Execute task

333.10. Add a class for launch script configuration. It allows to:

	Instantiate launch script configuration;
	Instantiate launch script configuration  with abstract archive task;
	Get properties;
	Handle properties;
	Get script;
	Set script;
	Check if launch script configuration equals;
	Handle equal contents;
	Hash code;
	Remove line breaks;
	Augment line breaks;
	Put properties map if missing

333.11. Add a class for maven integration tests. It allows to:

	Handle boot jar can be uploaded;
	Handle boot war can be uploaded;
	Get artifact with suffix;
	Get pom with

333.12. Add a class for maven publishing integration tests. It allows to:

	Handle boot jar can be published;
	Handle boot war can be published;
	Get artifact with suffix;
	Get pom with

333.13. Add a class for pom condition. It allows to:

	Instantiate pom condition;
	Instantiate pom condition  with expected contents set, not expected contents set and not expected contents set;
	Handle matches;
	Get description;
	Get group id;
	Get artifact id;
	Get version;
	Get packaging;
	No dependencies;
	No packaging

334. Changes to package org.springframework.boot.gradle.tasks.run:  

334.1. Add a class for boot run. It allows to:

	Handle source resources;
	Handle exec

334.2. Add a class for boot run integration tests. It allows to:

	Handle basic execution;
	Handle source resources can be used;
	Handle spring boot extension main class name is used;
	Handle application plugin main class name is used;
	Handle application plugin main class name is not used when it is null;
	Handle application plugin jvm arguments are used;
	Copy application;
	Handle canonical path of

335. Changes to package org.springframework.boot.gradle.testkit:  

335.1. Add a class for gradle build. It allows to:

	Instantiate gradle build;
	Instantiate gradle build  with dsl;
	Get dsl;
	Apply base statement;
	Evaluate;
	Find default script;
	Get script  for test method;
	Remove gradle version;
	Get script  for test class;
	Before gradle build;
	Process gradle build gradle build after;
	Plugin classpath;
	Get path of jar containing;
	Get script;
	Build gradle build;
	Prepare runner;
	Get project dir;
	Set project dir;
	Gradle version;
	Get gradle version;
	Get boot version;
	Get dependency management plugin version

336. Changes to package org.springframework.boot.groovy:  

336.1. Add a class for groovy template. It allows to:

	Get template;

337. Changes to package org.springframework.boot.info:  

337.1. Add a class for build properties. It allows to:

	Instantiate build properties  with entries properties;
	Get group;
	Get artifact;
	Get name;
	Get version;
	Get time;
	Get process entries;
	Coerce date

337.2. Add a class for build properties tests. It allows to:

	Handle basic info;
	No info;
	Create properties

337.3. Add a class for git properties. It allows to:

	Instantiate git properties  with entries properties;
	Get branch;
	Get commit id;
	Get short commit id;
	Get commit time;
	Get process entries;
	Coerce property  to epoch;
	Coerce git properties to epoch;
	Parse epoch second

337.4. Add a class for git properties tests. It allows to:

	Handle basic info;
	No info;
	Coerce epoch second;
	Coerce date string;
	Coerce unsupported format;
	Handle short commit used if present;
	Shorten commit id shorter  than 7;
	Shorten commit id longer  than 7;
	Create properties

338. Changes to package org.springframework.boot.jackson:  

338.1. Rename type JsonComponentModule with JsonComponentModule

338.2. Add a class for json object deserializer. It allows to:

	Get deserialize;
	Handle deserialize object;
	Handle null safe value;
	Get required node

338.3. Add a class for json object serializer. It allows to:

	Serialize value;
	Serialize object

338.4. Add a class for json object serializer tests. It allows to:

	Serialize object should write json

338.5. Add a class for name and age. It allows to:

	Instantiate name and age;
	Get name;
	Get age

339. Changes to package org.springframework.boot.jdbc:  

339.1. Add a class for abstract data source initializer. It allows to:

	Instantiate abstract data source initializer  with data source, resource loader and resource loader;
	Initialize abstract data source initializer;
	Check if abstract data source initializer is enabled;
	Customize resource database populator;
	Get mode;
	Get schema location;
	Get database name

339.2. Add a class for data source builder. It allows to:

	Create data source builder;
	Create class loader;
	Instantiate data source builder  with class loader;
	Build data source builder;
	Maybe get driver class name;
	Handle bind;
	Get type;
	Get url;
	Get driver class name;
	Username data source builder;
	Get password;
	Find type;

339.3. Add a class for database driver class name tests. It allows to:

	Get parameters;
	Instantiate database driver class name tests  with database driver, required type class and required type class;
	Handle database class is of required type;
	Get interface names

339.4. Add a class for database driver tests. It allows to:

	Handle class name for known database;
	Handle null class name for unknown database;
	Handle unknown on null jdbc url;
	Handle failure on malformed jdbc url;
	Handle unknown on null product name;
	Handle database product name lookups;
	Handle database jdbc url lookups

339.5. Add a class for embedded database connection tests. It allows to:

	H 2 custom database name;
	Handle derby custom database name;
	Handle hsql custom database name;
	Get url  with null database name;
	Get url  with empty database name

339.6. Add a class for is embedded. It allows to:

	Do connection in connection

339.7. Add an interface declaration  for schema management provider. It allows to:

	Get schema management

339.8. Add an interface declaration  for xA data source wrapper. It allows to:

	Wrap data source

340. Changes to package org.springframework.boot.jdbc.metadata:  

340.1. Add a class for abstract data source pool metadata. It allows to:

	Instantiate abstract data source pool metadata  with data source;
	Get usage;
	Get data source

340.2. Add a class for abstract data source pool metadata tests. It allows to:

	Get data source metadata;
	Get max pool size;
	Get min pool size;
	Get pool size no connection;
	Get pool size one connection;
	Get pool size two connections;
	Get validation query;
	Get default auto commit;
	Initialize builder

340.3. Add a class for commons dbcp 2 data source pool metadata. It allows to:

	Instantiate commons dbcp 2 data source pool metadata  with basic data source;
	Get active;
	Get max;
	Get min;
	Get validation query;
	Get default auto commit

340.4. Add a class for commons dbcp 2 data source pool metadata tests. It allows to:

	Handle setup;
	Get data source metadata;
	Get pool usage  with no current;
	Get active;
	Get pool usage  with no max;
	Get max;
	Get pool usage  with unlimited pool;
	Get validation query;
	Get default auto commit;
	Create data source metadata;
	Create data source

340.5. Add a class for composite data source pool metadata provider. It allows to:

	Instantiate composite data source pool metadata provider  with providers collection;
	Get data source pool metadata

340.6. Add a class for composite data source pool metadata provider tests. It allows to:

	Handle setup;
	Create composite data source pool metadata provider tests with providers

340.7. Add an interface declaration  for data source pool metadata. It allows to:

	Get usage;
	Get active;
	Get max;
	Get min;
	Get validation query;
	Get default auto commit

340.8. Add an interface declaration  for data source pool metadata provider. It allows to:

	Get data source pool metadata

340.9. Add a class for hikari data source pool metadata. It allows to:

	Instantiate hikari data source pool metadata  with hikari data source;
	Get active;
	Get hikari pool;
	Get max;
	Get min;
	Get validation query;
	Get default auto commit

340.10. Add a class for hikari data source pool metadata tests. It allows to:

	Handle setup;
	Get data source metadata;
	Get validation query;
	Get default auto commit;
	Create data source

340.11. Add a class for tomcat data source pool metadata. It allows to:

	Instantiate tomcat data source pool metadata  with data source;
	Get active;
	Get max;
	Get min;
	Get validation query;
	Get default auto commit

340.12. Add a class for tomcat data source pool metadata tests. It allows to:

	Handle setup;
	Get data source metadata;
	Get validation query;
	Get default auto commit;
	Create data source

341. Changes to package org.springframework.boot.jms:  

341.1. Add an interface declaration  for xA connection factory wrapper. It allows to:

	Wrap connection factory

342. Changes to package org.springframework.boot.json:  

342.1. Add a class for abstract json parser. It allows to:

	Parse map;
	Parse list;
	Handle trim parse;
	Try parse

342.2. Rename type AbstractJsonParserTests with AbstractJsonParserTests

342.3. Add a class for basic json parser. It allows to:

	Parse map;
	Parse list;
	Parse list internal;
	Parse internal;
	Handle trim trailing character;
	Handle trim leading character;
	Parse map internal;
	Tokenize basic json parser

342.4. Add an object creator class for basic json parser tests. It allows to:

	Get parser

342.5. Add an object creator class for gson json parser tests. It allows to:

	Get parser

342.6. Add a class for jackson json parser tests. It allows to:

	Get parser;
	Handle instance with specific object mapper

342.7. Add a class for json parse exception. It allows to:

	Instantiate json parse exception;
	Instantiate json parse exception  with cause throwable

342.8. Add an interface declaration  for json parser. It allows to:

	Parse map;
	Parse list

342.9. Add an object creator class for json parser factory. It allows to:

	Get json parser

342.10. Add a class for yaml json parser. It allows to:

	Parse map;
	Parse list

342.11. Add an object creator class for yaml json parser tests. It allows to:

	Get parser

343. Changes to package org.springframework.boot.jta.atomikos:  

343.1. Add a class for atomikos connection factory bean. It allows to:

	Set bean name;
	Handle after properties set;
	Destroy atomikos connection factory bean

343.2. Add a class for atomikos data source bean. It allows to:

	Set bean name;
	Handle after properties set;
	Destroy atomikos data source bean

343.3. Add a class for atomikos depends on bean factory post processor. It allows to:

	Post process bean factory;
	Add transaction manager dependencies;
	Add message driven container dependencies;
	Add dependencies;
	Get bean names  for type;
	Process atomikos depends on bean factory post processor atomikos depends on bean factory post processor as list;
	Get order;
	Get set order

343.4. Add a class for atomikos properties tests. It allows to:

	Handle test properties;
	Handle test default properties;
	Get default of;
	Load default settings;
	Assert property

343.5. Add a class for atomikos XA connection factory wrapper. It allows to:

	Wrap connection factory

343.6. Add a class for atomikos XA connection factory wrapper tests. It allows to:

	Wrap atomikos XA connection factory wrapper tests

343.7. Add a class for atomikos XA data source wrapper. It allows to:

	Wrap data source

343.8. Add a class for atomikos XA data source wrapper tests. It allows to:

	Wrap atomikos XA data source wrapper tests

344. Changes to package org.springframework.boot.jta.bitronix:  

344.1. Add a class for bitronix dependent bean factory post processor. It allows to:

	Post process bean factory;
	Add transaction manager dependencies;
	Get bean names  for type;
	Get order;
	Get set order

344.2. Add a class for bitronix XA connection factory wrapper. It allows to:

	Wrap connection factory

344.3. Add a class for bitronix XA connection factory wrapper tests. It allows to:

	Wrap bitronix XA connection factory wrapper tests

344.4. Add a class for bitronix XA data source wrapper. It allows to:

	Wrap data source

344.5. Add a class for bitronix XA data source wrapper tests. It allows to:

	Wrap bitronix XA data source wrapper tests

344.6. Add a class for pooling connection factory bean tests. It allows to:

	Handle init;
	Handle sensible defaults;
	Handle sets unique name if null;
	Check if pooling connection factory bean tests does not set unique name if not null;
	Set connection factory

344.7. Add a class for pooling data source bean tests. It allows to:

	Handle sensible defaults;
	Handle sets unique name if null;
	Check if pooling data source bean tests does not set unique name if not null;
	Get set data source

345. Changes to package org.springframework.boot.launcher.it.props:  

345.1. Rename type EmbeddedJarStarter with EmbeddedJarStarter

345.2. Add a class for spring configuration. It allows to:

	Handle after properties set;
	Run spring configuration

346. Changes to package org.springframework.boot.launchscript:  

346.1. Add a class for launch script test application. It allows to:

	Handle main

346.2. Add a class for launch verification controller. It allows to:

	Verify launch

347. Changes to package org.springframework.boot.liquibase:  

347.1. Add a class for spring package scan class resolver. It allows to:

	Instantiate spring package scan class resolver  with logger;
	Find all classes;
	Scan class loader;
	Load class;
	Handle failure

347.2. Add a class for spring package scan class resolver tests. It allows to:

	Handle test scan

348. Changes to package org.springframework.boot.load.it.jar:  

348.1. Add a class for embedded jar starter. It allows to:

	Handle main

348.2. Add a class for example controller. It allows to:

	Hello world

348.3. Add a class for spring configuration

349. Changes to package org.springframework.boot.load.it.props:  

349.1. Add a class for embedded jar starter. It allows to:

	Handle main

349.2. Add a class for spring configuration. It allows to:

	Handle after properties set;
	Run spring configuration

350. Changes to package org.springframework.boot.load.it.war:  

350.1. Add a class for example controller. It allows to:

	Hello world

350.2. Add a class for spring configuration

350.3. Add a class for spring initializer. It allows to:

	Process spring initializer spring initializer on startup

351. Changes to package org.springframework.boot.load.it.war.embedded:  

351.1. Add a class for embedded war starter. It allows to:

	Handle main

351.2. Add a class for web application initializers configuration. It allows to:

	Instantiate web application initializers configuration  with web application initializer class, web application initializers class and web application initializers class;
	Configure web app context;
	Handle context initialized;
	Handle context destroyed

352. Changes to package org.springframework.boot.loader:  

352.1. Add a class for abstract executable archive launcher tests. It allows to:

	Create jar archive;
	Explode archive file;
	Get urls

352.2. Add a class for executable archive launcher. It allows to:

	Instantiate executable archive launcher;
	Instantiate executable archive launcher  with archive;
	Get archive;
	Get main class;
	Get class path archives;
	Check if executable archive launcher is nested archive;
	Post process class path archives

352.3. Add a class for jar launcher. It allows to:

	Instantiate jar launcher;
	Instantiate jar launcher  with archive;
	Check if jar launcher is nested archive;
	Handle main

352.4. Add a class for jar launcher tests. It allows to:

	Get exploded jar has only boot inf classes and contents of boot inf lib on classpath;
	Handle archived jar has only boot inf classes and contents of boot inf lib on classpath

352.5. Add a class for launched URL class loader tests. It allows to:

	Resolve resource  from archive;
	Resolve resources  from archive;
	Resolve root path  from archive;
	Resolve root resources  from archive;
	Resolve launched URL class loader tests from nested;
	Resolve launched URL class loader tests from nested while thread is interrupted

352.6. Add a class for launcher. It allows to:

	Handle launch;
	Create class loader;
	Create main method runner;
	Get main class;
	Get class path archives;
	Create archive

352.7. Rename type MainMethodRunner with MainMethodRunner

352.8. Add a class for test jar creator. It allows to:

	Create test jar;
	Write nested entry;
	Write nested multi release entry;
	Get nested jar data;
	Write manifest;
	Write dir entry;
	Write entry

352.9. Add a class for war launcher. It allows to:

	Instantiate war launcher;
	Instantiate war launcher  with archive;
	Check if war launcher is nested archive;
	Handle main

352.10. Add a class for war launcher tests. It allows to:

	Get exploded war has only web inf classes and contents of web inf lib on classpath;
	Handle archived war has only web inf classes and contents O web inf lib on classpath

353. Changes to package org.springframework.boot.loader.archive:  

353.1. Add a class for exploded archive tests. It allows to:

	Handle setup;
	Create archive;
	Handle copy;
	Get manifest;
	Get entries;
	Get url;
	Get url  with space in path;
	Get nested archive;
	Handle nested dir archive;
	Get non recursive entries  for root;
	Get non recursive manifest;
	Get non recursive manifest  even if non recursive;
	Get resource  as stream;
	Get resource  as stream non recursive;
	Get entries map

353.2. Add a class for jar file archive tests. It allows to:

	Handle setup;
	Get manifest;
	Get entries;
	Get url;
	Get nested archive;
	Get nested unpacked archive;
	Handle unpacked locations are unique per archive;
	Handle unpacked locations from same archive share same parent;
	Zip 64 archives are handled  gracefully;
	Handle nested zip 64 archives are handled gracefully;
	Write zip 64 jar;
	Get entries map

354. Changes to package org.springframework.boot.loader.data:  

354.1. Add an interface declaration  for random access data. It allows to:

	Get input stream;
	Get subsection;
	Read random access data;
	Get size

354.2. Add a class for random access data file tests. It allows to:

	Handle setup;
	Handle cleanup;
	File random access data file tests not null;
	Exists random access data file tests;
	Read random access data file tests with offset and length should read;
	Read when offset is  beyond EOF should throw exception;
	Read when offset is  beyond end of subsection should throw exception;
	Read when offset plus length greater  than EOF should throw exception;
	Read when offset plus length greater  than end of subsection should throw exception;
	Handle input stream read;
	Handle input stream read null bytes;
	Handle input stream read null bytes with offset;
	Handle input stream read bytes;
	Handle input stream read offset bytes;
	Handle input stream read more bytes than available;
	Handle input stream read past end;
	Handle input stream read zero length;
	Handle input stream skip;
	Handle input stream skip more than available;
	Handle input stream skip past end;
	Handle subsection negative offset;
	Handle subsection negative length;
	Handle subsection zero length;
	Handle subsection too big;
	Handle subsection too big with offset;
	Handle subsection;
	Handle input stream read past subsection;
	Handle input stream read bytes past subsection;
	Handle input stream skip past subsection;
	Handle input stream skip negative;
	Get file;
	Handle concurrent reads

355. Changes to package org.springframework.boot.loader.jar:  

355.1. Add a class for ascii bytes. It allows to:

	Instantiate ascii bytes;
	Get length;
	Starts  with prefix ascii bytes;
	Handle ends with;
	Get substring;
	Handle matches;
	Get char;
	Get number  of utf bytes;
	Check if ascii bytes equals;
	Hash code;
	Convert ascii bytes to string;

355.2. Add a class for ascii bytes tests. It allows to:

	Create ascii bytes tests from bytes;
	Create ascii bytes tests from bytes with offset;
	Create ascii bytes tests from string;
	Handle length;
	Start ascii bytes tests with;
	Handle ends with;
	Substring ascii bytes tests from being index;
	Handle substring;
	Hash code and equals;
	Hash code same  as string;
	Hash code same  as string with special;
	Hash code same  as string with cyrillic characters;
	Hash code same  as string with emoji;
	Check if ascii bytes tests matches same as string;
	Check if ascii bytes tests matches same as string with special;
	Check if ascii bytes tests matches same as string with cyrillic characters;
	Check if ascii bytes tests matches different lengths;
	Check if ascii bytes tests matches suffix;
	Check if ascii bytes tests matches same as string with emoji;
	Hash code  from instance matches hash code from string;
	Handle instance created from char sequence matches same char sequence;

355.3. Add a class for bytes. It allows to:

	Instantiate bytes;
	Handle little endian value

355.4. Add a class for central directory end record. It allows to:

	Instantiate central directory end record  with random access data;
	Create block  from end of data;
	Check if central directory end record is valid;
	Get start  of archive;
	Get central directory;
	Get number  of records

355.5. Add a class for central directory file header. It allows to:

	Instantiate central directory file header;
	Instantiate central directory file header  with name ascii bytes, comment ascii bytes and comment ascii bytes;
	Handle load;
	Get name;
	Check if central directory file header has name;
	Check if central directory file header is directory;
	Get method;
	Get time;
	Decode ms dos format date time;
	Get crc;
	Get compressed size;
	Get size;
	Get extra;
	Get comment;
	Get local header offset;
	Clone central directory file header;
	Process central directory file header central directory file header from random access data

355.6. Add a class for central directory parser. It allows to:

	Add visitor;
	Parse random access data;
	Parse entries;
	Get archive data;
	Visit start;
	Visit file header;
	Visit end

355.7. Add an interface declaration  for central directory visitor. It allows to:

	Visit start;
	Visit file header;
	Visit end

355.8. Add an interface declaration  for file header. It allows to:

	Check if file header has name;
	Get local header offset;
	Get compressed size;
	Get size;
	Get method

355.9. Add a class for handler. It allows to:

	Instantiate handler;
	Instantiate handler  with jar file;
	Handle open connection;
	Check if handler is url in jar file;
	Handle open fallback connection;
	Log cause exception;
	Get fallback handler;
	Parse URL;
	Get file  from spec;
	Get file  from context;
	Trim handler to jar root;
	Set file;
	Normalize handler;
	Replace parent dir;
	Replace current dir;
	Hash code;
	Handle same file;
	Get canonicalize;
	Get root jar file  from url;
	Get root jar file;
	Add source file to root file cache;
	Get set use fast connection exceptions

355.10. Add a class for handler tests. It allows to:

	Parse url  with jar root context and absolute spec that uses context;
	Parse url  with directory entry context and absolute spec that uses context;
	Parse url  with jar root context and relative spec that uses context;
	Parse url  with directory entry context and relative spec that uses context;
	Parse url  with file entry context and relative spec that uses context;
	Parse url  with spec that ignores context;
	Handle same file returns false for urls with different protocols;
	Handle same file returns false for different file in same jar;
	Handle same file returns false for same file in different jars;
	Handle same file returns true for same file in same jar;
	Handle same file returns true for urls that reference same file via nested archive and from root of jar;
	Hash codes are equal  for urls that reference same file via nested archive and from root of jar;
	Handle url with spec referencing parent directory;
	Handle url with spec referencing ancestor directory outside jar stops at jar root;
	Handle url with spec referencing current directory;
	Handle url with ref;
	Handle url with query;
	Handle fallback to jdks jar url stream handler;
	Assert standard and custom handler urls are equal;
	Create url

355.11. Add a class for jar entry. It allows to:

	Instantiate jar entry  with jar file, central directory file header, name alias ascii bytes and name alias ascii bytes;
	Get ascii bytes name;
	Check if jar entry has name;
	Get url;
	Get attributes;
	Get certificates;
	Get code signers;
	Set certificates;
	Get local header offset

355.12. Add an interface declaration  for jar entry filter. It allows to:

	Apply name ascii bytes

355.13. Add a class for jar file. It allows to:

	Instantiate jar file  with file;
	Instantiate jar file  with random access data file;
	Instantiate jar file  with root file, random access data, jar file type and jar file type;
	Instantiate jar file  with root file, random access data, jar entry filter, jar file type, manifest supplier and manifest supplier;
	Handle central directory visitor;
	Visit start;
	Visit file header;
	Visit end;
	Get root jar file;
	Get data;
	Get manifest;
	Get entries;
	Check if  has more elements;
	Handle next element;
	Get jar entry;
	Check if jar file contains entry;
	Get entry;
	Get input stream;
	Get nested jar file;
	Create jar file  from entry;
	Create jar file  from directory entry;
	Create jar file  from file entry;
	Get size;
	Close jar file;
	Get url string;
	Get url;
	Convert jar file to string;
	Get name;
	Check if jar file is signed;
	Handle setup entry certificates;
	Set certificates;
	Handle clear cache;
	Get path  from root;
	Get type;
	Register url protocol handler;
	Reset cached url handlers

355.14. Add a class for jar file tests. It allows to:

	Handle setup;
	Handle jdk jar file;
	Create jar file tests from file;
	Get manifest;
	Get manifest entry;
	Get entries;
	Get special resource  via class loader;
	Get jar entry;
	Get input stream;
	Get name;
	Get size;
	Get entry time;
	Close jar file tests;
	Get url;
	Create entry url;
	Get missing entry url;
	Get url stream;
	Get entry url stream;
	Get nested jar file;
	Get nested jar directory;
	Get nested jar entry url;
	Create url  from string;
	Create non nested url  from string;
	Create non nested url  from path string;
	Non nested jar file  from string;
	Get directory input stream;
	Get directory input stream  without slash;
	Handle sensible to string;
	Verify signed jar;
	Handle jar file with script at the start;
	Can jar file tests not load missing jar;
	Register url protocol handler  with no existing registration;
	Register url protocol handler adds  to existing registration;
	Handle jar file can be deleted once it has been closed;
	Create url  from string with context when not found;
	Handle multi release entry;
	Get java version

355.15. Add a class for jar URL connection tests. It allows to:

	Handle setup;
	Convert connection;
	Get content length returns length  of underlying entry;
	Get content length long returns length  of underlying entry;
	Get last modified returns last modified time  of jar entry;
	Handle jar entry basic name;
	Handle jar entry name with single byte encoded characters;
	Handle jar entry name with double byte encoded characters;
	Handle jar entry name with mixture of encoded and unencoded double byte characters;
	Get absolute path;
	Get relative path

355.16. Add a class for string sequence. It allows to:

	Instantiate string sequence;
	Get sub sequence;
	Check if string sequence is empty;
	Get length;
	Char string sequence at;
	Get index of;
	Starts  with prefix char sequence;
	Check if string sequence equals;
	Hash code;
	Convert string sequence to string

355.17. Add a class for string sequence tests. It allows to:

	Create when source is null should throw exception;
	Create string sequence tests with index when source is null should throw exception;
	Create when start is less  than zero should throw exception;
	Create when end is greater  than length should throw exception;
	Create string sequence tests from string;
	Handle sub sequence with just start should return sub sequence;
	Handle sub sequence should return sub sequence;
	Handle sub sequence when called multiple times should return sub sequence;
	Handle sub sequence when end past existing end should throw exception;
	Handle sub sequence when start past existing end should throw exception;
	Check if string sequence tests is empty when empty should return true;
	Check if string sequence tests is empty when not empty should return false;
	Handle length should return length;
	Char string sequence tests at should return char;
	Handle index of char should return index of;
	Handle index of string should return index of;
	Handle index of string from index should return index of;
	Hash code should be same  as string;
	Check if string sequence tests equals when same content should match;
	Not equals when sequences  of different length;
	Starts string sequence tests with when exact match;
	Starts string sequence tests with when longer and starts with;
	Starts string sequence tests with when longer and does not start with;
	Starts string sequence tests with when shorter and does not start with;
	Starts string sequence tests with offset when exact match;
	Starts string sequence tests with offset when longer and starts with;
	Starts string sequence tests with offset when longer and does not start with;
	Starts string sequence tests with offset when shorter and does not start with

355.18. Rename type ZipInflaterInputStream with ZipInflaterInputStream

356. Changes to package org.springframework.boot.loader.tools:  

356.1. Add an interface declaration  for custom loader layout. It allows to:

	Write loaded classes

356.2. Add a class for default launch script. It allows to:

	Instantiate default launch script  with file, properties map and properties map;
	Load content;
	Handle copy;
	Expand placeholders;
	Parse file property value;
	Convert default launch script to byte array

356.3. Add a class for default launch script tests. It allows to:

	Handle loads default script;
	Log filename can be replaced;
	Handle pid filename can be replaced;
	Init info provides can be replaced;
	Init info required start can be replaced;
	Init info required stop can be replaced;
	Handle init info default start can be replaced;
	Handle init info default stop can be replaced;
	Init info short description can be replaced;
	Init info description can be replaced;
	Init info chkconfig can be replaced;
	Handle mode can be replaced;
	Use start stop daemon can be replaced;
	Log folder can be replaced;
	Handle pid folder can be replaced;
	Conf folder can be replaced;
	Stop wait time can be replaced;
	Handle inlined conf script file load;
	Handle default for use start stop daemon is true;
	Handle default for mode is auto;
	Handle default for stop wait time is 60;
	Handle load from file;
	Expand variables;
	Expand variables multi line;
	Expand variables  with defaults;
	Expand variables can default  to blank;
	Expand variables  with defaults override;
	Expand variables missing are unchanged;
	Assert that placeholder can be replaced;
	Create properties

356.4. Add a class for default layout factory. It allows to:

	Get layout

356.5. Add a class for file utils. It allows to:

	Remove duplicates  from output directory;
	Get sha 1 hash;
	Convert bytes

356.6. Add a class for file utils tests. It allows to:

	Handle init;
	Handle simple duplicate file;
	Handle nested duplicate file;
	Handle nested non duplicate file;
	Non duplicate file;
	Hash file utils tests

356.7. Add a class for java executable. It allows to:

	Instantiate java executable;
	Find java executable in java home;
	Get process builder;
	Convert java executable to string

356.8. Add an interface declaration  for launch script. It allows to:

	Convert launch script to byte array

356.9. Add an interface declaration  for layout. It allows to:

	Get launcher class name;
	Get library destination;
	Get classes location;
	Check if layout is executable

356.10. Add an interface declaration  for layout factory. It allows to:

	Get layout

356.11. Add a class for layouts tests. It allows to:

	Handle jar file;
	Handle war file;
	Handle unknown file;
	Handle jar layout;
	Handle war layout

356.12. Add an interface declaration  for libraries. It allows to:

	Do library callback with libraries

356.13. Rename type Library with Library

356.14. Add an interface declaration  for library callback. It allows to:

	Handle library

356.15. Add an interface declaration  for library scope. It allows to:

	Convert library scope to string;
	Convert to string;

356.16. Add an interface declaration  for loader classes writer. It allows to:

	Write loader classes;
	Write entry

356.17. Add an interface declaration  for repackaging layout. It allows to:

	Get repackaged classes location

356.18. Add a class for run process. It allows to:

	Instantiate run process;
	Instantiate run process  with working directory file;
	Run run process;
	Run args collection;
	Get running process;
	Handle sig int;
	Kill run process;
	Check if run process has just ended

356.19. Add a class for signal utils. It allows to:

	Instantiate signal utils;
	Attach signal handler

356.20. Add a class for test jar file. It allows to:

	Instantiate test jar file  with temporary folder;
	Add class;
	Add file;
	Add manifest;
	Get file path;
	Copy input stream to file;
	Handle copy;
	Get jar file;
	Get jar source;
	Get file;

356.21. Add a class for zip header peek input stream tests. It allows to:

	Check if zip header peek input stream tests has zip header returns true when stream starts with zip header;
	Check if zip header peek input stream tests has zip header returns false when stream does not start with zip header;
	Read individual bytes;
	Read multiple bytes;
	Reading more  than entire stream reads to end of stream;
	Read zip header peek input stream tests of some of the header then more than entire stream reads to end of stream;
	Read more  than entire stream when stream length is less than zip header length;
	Read more  than entire stream when stream length is same as header length;
	Read more  than entire stream when stream length is zero

357. Changes to package org.springframework.boot.loader.tools.sample:  

357.1. Add a class for annotated class with main method. It allows to:

	Run annotated class with main method;
	Handle main

357.2. Add a class for class with main method. It allows to:

	Run class with main method;
	Handle main

357.3. Add a class for class without main method

358. Changes to package org.springframework.boot.loader.util:  

358.1. Add a class for system property utils. It allows to:

	Resolve placeholders;
	Parse string value;
	Resolve placeholder;
	Get property;
	Find placeholder end index;
	Substring match

358.2. Add a class for system property utils tests. It allows to:

	Handle init;
	Close system property utils tests;
	Handle test vanilla placeholder;
	Handle test default value;
	Handle test nested placeholder;
	Handle test env var

359. Changes to package org.springframework.boot.logging:  

359.1. Add a class for abstract logging system tests. It allows to:

	Configure temp dir;
	Reinstate temp dir;
	Handle clear;
	Get spring config locations;
	Get log file;
	Tmp dir

359.2. Add a class for deferred log tests. It allows to:

	Check if deferred log tests is trace enabled;
	Check if deferred log tests is debug enabled;
	Check if deferred log tests is info enabled;
	Check if deferred log tests is warn enabled;
	Check if deferred log tests is error enabled;
	Check if deferred log tests is fatal enabled;
	Trace deferred log tests;
	Trace deferred log tests with throwable;
	Debug deferred log tests;
	Debug deferred log tests with throwable;
	Info deferred log tests;
	Info deferred log tests with throwable;
	Warn deferred log tests;
	Warn deferred log tests with throwable;
	Handle error;
	Handle error with throwable;
	Handle fatal;
	Handle fatal with throwable;
	Check if deferred log tests clears on replay to;
	Switch deferred log tests to

359.3. Add a class for log file. It allows to:

	Instantiate log file;
	Apply log file to system properties;
	Apply  to properties;
	Put properties;
	Convert log file to string;
	Get property resolver;
	Get log file property

359.4. Add a class for log file tests. It allows to:

	No properties;
	Logging file;
	Logging file  with deprecated properties;
	Handle test logging file;
	Logging path;
	Logging path  with deprecated properties;
	Handle test logging path;
	Logging file and path;
	Logging file and path  with deprecated properties;
	Handle test logging file and path;
	Get property resolver

359.5. Rename type LoggerConfiguration with LoggerConfiguration

359.6. Rename type LoggerConfigurationComparator with LoggerConfigurationComparator

359.7. Rename type LoggerConfigurationComparatorTests with LoggerConfigurationComparatorTests

359.8. Add a class for logging initialization context. It allows to:

	Instantiate logging initialization context  with configurable environment;
	Get environment

359.9. Add a class for logging system properties. It allows to:

	Instantiate logging system properties  with environment;
	Apply logging system properties;
	Apply log file;
	Get property resolver;
	Set system property;

359.10. Add a class for logging system properties tests. It allows to:

	Capture system property names;
	Restore system properties;
	Handle pid is set;
	Console log pattern is set;
	File log pattern is set;
	Console log pattern can reference pid;
	File log pattern can reference pid;
	Get environment

359.11. Add a class for slf 4 J logging system. It allows to:

	Instantiate slf 4 J logging system  with class loader;
	Process slf 4 J logging system slf 4 J logging system before initialize;
	Clean slf 4 J logging system;
	Load configuration;
	Configure jdk logging bridge handler;
	Check if slf 4 J logging system is bridge jul into slf 4 j;
	Check if slf 4 J logging system is bridge handler available;
	Check if slf 4 J logging system is jul using A single console handler at most;
	Remove jdk logging bridge handler;
	Remove default root handler

360. Changes to package org.springframework.boot.logging.java:  

360.1. Add a class for java logging system tests. It allows to:

	Handle init;
	Handle clear locale;
	Reset logger;
	No file;
	Process java logging system tests java logging system tests with file;
	Handle test custom formatter;
	Handle test system property initializes format;
	Handle test non default config location;
	Handle test nonexistent config location;
	Get supported levels;
	Set level;
	Set level  to null;
	Get logging configurations;
	Get logging configuration

360.2. Add a class for simple formatter. It allows to:

	Get format;
	Get throwable;
	Get thread name;
	Get or use default

360.3. Add a class for test formatter. It allows to:

	Get format

361. Changes to package org.springframework.boot.logging.log4j2:  

361.1. Add a class for color converter. It allows to:

	Instantiate color converter  with formatters list, styling ansi element and styling ansi element;
	Handle new instance;
	Check if color converter handles throwable;
	Handle format;
	Append ansi string

361.2. Add a class for extended whitespace throwable pattern converter. It allows to:

	Instantiate extended whitespace throwable pattern converter  with configuration;
	Handle format;
	Handle new instance

361.3. Add a class for extended whitespace throwable pattern converter tests. It allows to:

	No extended whitespace throwable pattern converter tests;
	Process extended whitespace throwable pattern converter tests extended whitespace throwable pattern converter tests with stack trace

361.4. Rename type SpringBootConfigurationFactoryTests with SpringBootConfigurationFactoryTests

361.5. Add a class for whitespace throwable pattern converter. It allows to:

	Instantiate whitespace throwable pattern converter  with configuration;
	Handle format;
	Handle new instance

361.6. Add a class for whitespace throwable pattern converter tests. It allows to:

	No whitespace throwable pattern converter tests;
	Process whitespace throwable pattern converter tests whitespace throwable pattern converter tests with stack trace

362. Changes to package org.springframework.boot.logging.logback:  

362.1. Add a class for color converter. It allows to:

	Transform I logging event;
	Convert color converter to ansi string

362.2. Add a class for color converter tests. It allows to:

	Handle setup ansi;
	Reset ansi;
	Handle setup;
	Handle faint;
	Handle red;
	Handle green;
	Handle yellow;
	Handle blue;
	Handle magenta;
	Handle cyan;
	Highlight error;
	Warn color converter tests;
	Highlight debug;
	Trace color converter tests

362.3. Add a class for default logback configuration. It allows to:

	Instantiate default logback configuration  with logging initialization context, log file and log file;
	Get patterns resolver;
	Apply logback configurator;
	Handle base;
	Console appender;
	File appender;
	Set rolling policy;
	Set max file size;
	Get data size

362.4. Add a class for extended whitespace throwable proxy converter. It allows to:

	Handle throwable proxy to string

362.5. Add a class for extended whitespace throwable proxy converter tests. It allows to:

	No extended whitespace throwable proxy converter tests;
	Process extended whitespace throwable proxy converter tests extended whitespace throwable proxy converter tests with stack trace

362.6. Add a class for logback configuration tests. It allows to:

	Console pattern can be overridden;
	File pattern can be overridden

362.7. Add a class for logback configurator. It allows to:

	Instantiate logback configurator  with logger context;
	Get context;
	Get configuration lock;
	Handle conversion rule;
	Handle appender;
	Handle logger;
	Handle root;
	Start life cycle

362.8. Add a class for logback logging system tests. It allows to:

	Handle setup;
	Handle clear;
	No file;
	Process logback logging system tests logback logging system tests with file;
	Handle default config configures A console appender;
	Handle test non default config location;
	Handle test logback specific system property;
	Handle test nonexistent config location;
	Get supported levels;
	Set level;
	Set level  to null;
	Get logging configurations;
	Get logging configuration;
	Get logging configuration  for ALL;
	Handle system level trace should return native level trace not all;
	Logging logback logging system tests that uses jul is captured;
	Logging level is propagated  to jul;
	Bridge handler lifecycle;
	Handle standard config locations;
	Handle spring config locations;
	Bridge handler installed;
	Handle test console pattern property;
	Handle test level pattern property;
	Handle test file pattern property;
	Handle test clean history on start property;
	Handle test clean history on start property with xml configuration;
	Handle test max file size property with logback file size;
	Handle test max file size property with data size;
	Handle test max file size property with bytes value;
	Handle test max file size property;
	Handle test max file size property with xml configuration;
	Handle test max history property;
	Handle test max history property with xml configuration;
	Handle test total size cap property with logback file size;
	Handle test total size cap property with data size;
	Handle test total size cap property with bytes value;
	Handle test total size cap property;
	Handle test total size cap property with xml configuration;
	Handle exceptions include class packaging;
	Handle custom exception conversion word;
	Initialize should set system property;
	Handle initialization is only performed once until cleaned up;
	Handle test dateformat pattern property;
	Get root logger;
	Get console appender;
	Get file appender;
	Get rolling policy;
	Get line  with text;

362.9. Add a class for spring boot joran configurator. It allows to:

	Instantiate spring boot joran configurator  with logging initialization context;
	Add instance rules

362.10. Add a class for spring boot joran configurator tests. It allows to:

	Handle setup;
	Reset spring boot joran configurator tests;
	Profile active;
	Handle multiple names first profile active;
	Handle multiple names second profile active;
	Profile spring boot joran configurator tests not active;
	Profile expression match  first;
	Profile expression match second;
	Profile expression no match;
	Profile nested active active;
	Profile nested active  not active;
	Profile nested  not active active;
	Profile nested  not active not active;
	Handle spring property;
	Get relaxed spring property;
	Handle spring property no value;
	Get relaxed spring property no value;
	Handle spring property with default value;
	Get relaxed spring property with default value;
	Do test nested profile;
	Initialize spring boot joran configurator tests

362.11. Add a class for spring profile action. It allows to:

	Instantiate spring profile action  with environment;
	Begin ic interpretation context;
	Check if spring profile action accepts profiles;
	End ic interpretation context;
	Verify ic interpretation context;
	Add events  to player;
	Process spring profile action spring profile action in play

362.12. Rename type SpringProfileActionTests with SpringProfileActionTests

362.13. Add a class for spring property action. It allows to:

	Instantiate spring property action  with environment;
	Begin interpretation context;
	Get value;
	End interpretation context

362.14. Add a class for whitespace throwable proxy converter. It allows to:

	Handle throwable proxy to string

362.15. Add a class for whitespace throwable proxy converter tests. It allows to:

	No whitespace throwable proxy converter tests;
	Process whitespace throwable proxy converter tests whitespace throwable proxy converter tests with stack trace

363. Changes to package org.springframework.boot.maven:  

363.1. Add a class for abstract dependency filter mojo. It allows to:

	Excludes excludes list;
	Includes includes list;
	Set exclude group ids;
	Get filter dependencies;
	Get filters;
	Handle clean filter config

363.2. Add a class for artifacts libraries. It allows to:

	Instantiate artifacts libraries  with artifacts set, unpacks collection, log and log;
	Do library callback with libraries;
	Get duplicates;
	Check if artifacts libraries is unpack required;
	Get file name

363.3. Add a class for artifacts libraries tests. It allows to:

	Handle setup;
	Handle callback for jars;
	Handle callback with unpack;
	Check if artifacts libraries tests renames duplicates

363.4. Add a class for build info mojo. It allows to:

	Execute build info mojo

363.5. Add a class for dependency filter. It allows to:

	Instantiate dependency filter  with dependencies list;
	Get filter;
	Handle filter;
	Check if dependency filter equals;
	Get filters

363.6. Add a class for exclude

363.7. Add a class for exclude filter. It allows to:

	Instantiate exclude filter  with excludes;
	Instantiate exclude filter  with excludes list;
	Handle filter

363.8. Add a class for exclude filter tests. It allows to:

	Exclude simple;
	Exclude group id no match;
	Exclude artifact id no match;
	Exclude classifier;
	Exclude classifier no target classifier;
	Exclude classifier no match;
	Exclude multi;
	Exclude exclude filter tests;
	Create artifact;

363.9. Add a class for filterable dependency. It allows to:

	Get group id;
	Set group id;
	Get artifact id;
	Set artifact id;
	Get classifier;
	Set classifier

363.10. Add a class for include

363.11. Add a class for include filter. It allows to:

	Instantiate include filter  with includes list;
	Handle filter

363.12. Add a class for include filter tests. It allows to:

	Include simple;
	Include group id no match;
	Include artifact id no match;
	Include classifier;
	Include classifier no target classifier;
	Include classifier no match;
	Include multi;
	Include include filter tests;
	Create artifact;

363.13. Add a class for matching group id filter. It allows to:

	Instantiate matching group id filter;
	Get artifact feature

363.14. Add a class for properties merging resource transformer. It allows to:

	Get data;
	Can transform resource;
	Handle process resource;
	Handle process;
	Check if properties merging resource transformer has transformed resource;
	Modify output stream;
	Get resource;
	Set resource

363.15. Add a class for properties merging resource transformer tests. It allows to:

	Handle test process;
	Handle test merge;
	Handle test output

363.16. Add a class for run arguments. It allows to:

	Instantiate run arguments;
	Get args;
	Process run arguments run arguments as array;
	Parse args

363.17. Add a class for run arguments tests. It allows to:

	Parse null;
	Parse null array;
	Parse array containing null value;
	Parse array containing empty value;
	Parse empty;
	Parse debug flags;
	Parse run arguments tests with extra spaces;
	Parse run arguments tests with new lines and tabs;
	Quote handled  properly;
	Parse args

363.18. Add a class for spring application admin client. It allows to:

	Instantiate spring application admin client  with M bean server connection;
	Check if spring application admin client is ready;
	Stop spring application admin client;
	Convert spring application admin client to object name;
	Connect spring application admin client

363.19. Add a class for stop mojo. It allows to:

	Execute stop mojo;
	Check if stop mojo is forked;
	Stop forked process;
	Stop stop mojo;
	Stop M bean server connection

364. Changes to package org.springframework.boot.maven.sample:  

364.1. Add a class for class with main method. It allows to:

	Run class with main method;
	Handle main

364.2. Add a class for class without main method

365. Changes to package org.springframework.boot.origin:  

365.1. Add a class for mock origin. It allows to:

	Instantiate mock origin;
	Check if mock origin equals;
	Hash code;
	Convert mock origin to string;
	O mock origin

365.2. Add an interface declaration  for origin. It allows to:

	Process origin origin from

365.3. Add an interface declaration  for origin lookup. It allows to:

	Get origin;

365.4. Add a class for origin lookup tests. It allows to:

	Get origin when source is null should return null;
	Get origin when source is  not lookup should return lookup origin;
	Get origin when source is lookup should return lookup origin;
	Get origin when source lookup throws and error should return null

365.5. Add an interface declaration  for origin provider. It allows to:

	Get origin

365.6. Add a class for origin tracked value tests. It allows to:

	Get value should return value;
	Get origin should return origin;
	Convert origin tracked value tests to string should return value to string;
	Hash code and equals should ignore origin;
	Process origin tracked value tests origin tracked value tests of when value is null should return null;
	Process origin tracked value tests origin tracked value tests of when value is char sequence should return char sequence

365.7. Add a class for property source origin. It allows to:

	Instantiate property source origin  with property source;
	Get property source;
	Get property name;
	Convert property source origin to string;

365.8. Add a class for property source origin tests. It allows to:

	Create when property source is null should throw exception;
	Create when property name is null should throw exception;
	Create when property name is empty should throw exception;
	Get property source should return property source;
	Get property name should return property name;
	Convert property source origin tests to string should show details;
	Get when property source supports origin lookup should return origin;
	Get when property source supports origin lookup but no origin should wrap;
	Get when property source is  not origin aware should wrap

365.9. Add a class for system environment origin. It allows to:

	Instantiate system environment origin;
	Get property;
	Check if system environment origin equals;
	Hash code;
	Convert system environment origin to string

365.10. Add a class for system environment origin tests. It allows to:

	Create when property is null should throw exception;
	Create when property name is empty should throw exception;
	Get property should return property;
	Convert system environment origin tests to string should return string with details

365.11. Add a class for text resource origin tests. It allows to:

	Create text resource origin tests with null resource should set null resource;
	Create text resource origin tests with null location should set null location;
	Get resource should return resource;
	Get location should return location;
	Get location line should return line;
	Get location column should return column;
	Convert location;
	Convert text resource origin tests to string should return nice string;
	Convert text resource origin tests to string when resource is null should return nice string;
	Convert text resource origin tests to string when location is null should return nice string;
	Handle location equals and hash code should use line and column;
	Check if text resource origin tests equals and hash code should resource and location

366. Changes to package org.springframework.boot.orm.jpa.hibernate:  

366.1. Add a class for spring implicit naming strategy. It allows to:

	Determine join table name

366.2. Add a class for spring jta platform. It allows to:

	Instantiate spring jta platform  with jta transaction manager;
	Locate transaction manager;
	Locate user transaction

366.3. Add a class for spring physical naming strategy. It allows to:

	Convert spring physical naming strategy to physical catalog name;
	Convert spring physical naming strategy to physical schema name;
	Convert spring physical naming strategy to physical table name;
	Convert spring physical naming strategy to physical sequence name;
	Convert spring physical naming strategy to physical column name;
	Apply name identifier;
	Get identifier;
	Check if spring physical naming strategy is case insensitive;
	Check if spring physical naming strategy is underscore required

366.4. Add a class for telephone number

367. Changes to package org.springframework.boot.sampleconfig:  

367.1. Add a class for my component

368. Changes to package org.springframework.boot.security.reactive:  

368.1. Add a class for application context server web exchange matcher. It allows to:

	Instantiate application context server web exchange matcher  with context class;
	Get matches;
	Get context;
	Get initialized;
	Create context

369. Changes to package org.springframework.boot.security.servlet:  

369.1. Add a class for application context request matcher. It allows to:

	Instantiate application context request matcher  with context class;
	Handle matches;
	Get context;
	Get initialized;
	Create context

370. Changes to package org.springframework.boot.system:  

370.1. Add a class for application home. It allows to:

	Instantiate application home;
	Instantiate application home  with source class;
	Get start class;
	Find source;
	Check if application home is unit test;
	Get root jar file;
	Find home dir;
	Find default home dir;
	Get source;
	Get dir;
	Convert application home to string

370.2. Add a class for application pid. It allows to:

	Instantiate application pid;
	Get pid;
	Check if application pid equals;
	Hash code;
	Convert application pid to string;
	Write file;
	Create parent folder;
	Assert file;
	Can write posix file

370.3. Add a class for application pid tests. It allows to:

	Convert application pid tests to string with pid;
	Convert application pid tests to string without pid;
	Throw illegal state writing missing pid;
	Write pid;
	Write new pid;
	Get pid  from jvm

370.4. Add a class for application temp. It allows to:

	Instantiate application temp;
	Instantiate application temp  with source class;
	Convert application temp to string;
	Get dir;
	Get temp directory;
	Generate hash;
	Update message digest;
	Get update source bytes;
	Convert application temp to hex string

370.5. Add a class for application temp tests. It allows to:

	Check if application temp tests generates consistent temp;
	Handle different based on user dir;
	Get sub dir

370.6. Add a class for java version tests. It allows to:

	Get java version should be available;
	Compare java version tests to when comparing smaller to greater should be less than zero;
	Compare java version tests to when comparing greater to smaller should be greater than zero;
	Compare java version tests to when comparing same should be zero;
	Check if java version tests is equal or newer than when comparing same should be true;
	Check if java version tests is equal or newer than when smaller to greater should be false;
	Check if java version tests is equal or newer than when greater to smaller should be true;
	Check if java version tests is older than than when comparing same should be false;
	Check if java version tests is older than when smaller to greater should be true;
	Check if java version tests is older than when greater to smaller should be false

370.7. Add a class for system properties. It allows to:

	Instantiate system properties;
	Get system properties

371. Changes to package org.springframework.boot.test.autoconfigure:  

371.1. Add a class for auto configuration imported condition. It allows to:

	Instantiate auto configuration imported condition  with auto configuration class;
	Handle matches;
	Get imported auto configuration

371.2. Add a class for example spring boot application

371.3. Add a class for example test config

372. Changes to package org.springframework.boot.test.autoconfigure.data.ldap:  

372.1. Add a class for data ldap test integration tests. It allows to:

	Handle test repository;
	Get did not inject example service

372.2. Add a class for data ldap test with include filter integration tests. It allows to:

	Handle test service

372.3. Add a class for data ldap type exclude filter. It allows to:

	Instantiate data ldap type exclude filter  with test class;
	Check if data ldap type exclude filter has annotation;
	Get filters;
	Check if data ldap type exclude filter is use default filters;
	Get default includes;
	Get component includes

372.4. Add a class for example entry. It allows to:

	Get example entry;
	Set dn

372.5. Add a class for example ldap application

372.6. Add an interface declaration  for example repository

372.7. Add a class for example service. It allows to:

	Instantiate example service  with ldap template;
	Check if example service has entry

373. Changes to package org.springframework.boot.test.autoconfigure.data.mongo:  

373.1. Rename type DataMongoTestIntegrationTests with DataMongoTestIntegrationTests

373.2. Add a class for data mongo test reactive integration tests. It allows to:

	Handle test repository

373.3. Rename type DataMongoTestWithIncludeFilterIntegrationTests with DataMongoTestWithIncludeFilterIntegrationTests

373.4. Add a class for data mongo type exclude filter. It allows to:

	Instantiate data mongo type exclude filter  with test class;
	Check if data mongo type exclude filter has annotation;
	Get filters;
	Check if data mongo type exclude filter is use default filters;
	Get default includes;
	Get component includes

373.5. Rename type ExampleDocument with ExampleDocument

373.6. Rename type ExampleMongoApplication with ExampleMongoApplication

373.7. Add an interface declaration  for example reactive repository

373.8. Rename type ExampleRepository with ExampleRepository

373.9. Rename type ExampleService with ExampleService

374. Changes to package org.springframework.boot.test.autoconfigure.data.neo4j:  

374.1. Add a class for data neo 4 j type exclude filter. It allows to:

	Instantiate data neo 4 j type exclude filter  with test class;
	Check if data neo 4 j type exclude filter has annotation;
	Get filters;
	Check if data neo 4 j type exclude filter is use default filters;
	Get default includes;
	Get component includes

374.2. Add a class for example graph. It allows to:

	Get id;
	Set id;
	Get description;
	Set description

374.3. Add a class for example neo 4 j application

374.4. Add an interface declaration  for example repository

374.5. Add a class for example service. It allows to:

	Instantiate example service  with session;
	Check if example service has node

375. Changes to package org.springframework.boot.test.autoconfigure.data.redis:  

375.1. Add a class for data redis type exclude filter. It allows to:

	Instantiate data redis type exclude filter  with test class;
	Check if data redis type exclude filter has annotation;
	Get filters;
	Check if data redis type exclude filter is use default filters;
	Get default includes;
	Get component includes

375.2. Add a class for example redis application

375.3. Add an interface declaration  for example repository

375.4. Add a class for example service. It allows to:

	Instantiate example service  with redis operations;
	Check if example service has record

375.5. Add a class for person hash. It allows to:

	Get id;
	Set id;
	Get description;
	Set description

376. Changes to package org.springframework.boot.test.autoconfigure.filter:  

376.1. Add a class for annotation customizable type exclude filter. It allows to:

	Set bean class loader;
	Match metadata reader;
	Include metadata reader;
	Handle default include;
	Exclude metadata reader;
	Check if annotation customizable type exclude filter is type or annotated;
	Check if annotation customizable type exclude filter has annotation;
	Get filters;
	Check if annotation customizable type exclude filter is use default filters;
	Get default includes;
	Get component includes;
	Check if annotation customizable type exclude filter equals;
	Hash code

376.2. Add a class for filter annotations. It allows to:

	Instantiate filter annotations  with class loader, filters and filters;
	Create type filters;
	Create type filter;
	Get iterator;
	Any matches

376.3. Add a class for type exclude filters context customizer. It allows to:

	Instantiate type exclude filters context customizer  with test class, filter classes set and filter classes set;
	Handle instantiate type exclude filters;
	Handle instantiate type exclude filter;
	Check if type exclude filters context customizer equals;
	Hash code;
	Customize context;
	Create delegating type exclude filter;
	Match metadata reader;
	Get type exclude filter constructor

376.4. Add an object creator class for type exclude filters context customizer factory. It allows to:

	Create context customizer

377. Changes to package org.springframework.boot.test.autoconfigure.jdbc:  

377.1. Add a class for example entity. It allows to:

	Instantiate example entity;
	Get id;
	Get name;
	Set name

377.2. Add an object creator class for example jdbc application. It allows to:

	Get data source

377.3. Add a class for jdbc test integration tests. It allows to:

	Handle test jdbc template;
	Check if jdbc test integration tests replaces defined data source with embedded default;
	Get did not inject example repository;
	Handle flyway auto configuration was imported;
	Handle liquibase auto configuration was imported

377.4. Add a class for jdbc test with auto configure test database replace auto configured without override integration tests. It allows to:

	Handle uses default embedded database

377.5. Add a class for jdbc test with auto configure test database replace none integration tests. It allows to:

	Handle uses default embedded database

377.6. Add a class for jdbc test with auto configure test database replace property none integration tests. It allows to:

	Handle uses default embedded database

377.7. Add a class for jdbc test with include filter integration tests. It allows to:

	Handle test repository

377.8. Rename type JdbcTypeExcludeFilter with JdbcTypeExcludeFilter

378. Changes to package org.springframework.boot.test.autoconfigure.jooq:  

378.1. Add an object creator class for example jooq application. It allows to:

	Get data source

378.2. Add a class for jooq test integration tests. It allows to:

	Handle test DSL context;
	Use defined data source;
	Get did not inject example component;
	Handle flyway auto configuration was imported;
	Handle liquibase auto configuration was imported

378.3. Add a class for jooq test with auto configure test database integration tests. It allows to:

	Check if jooq test with auto configure test database integration tests replaces auto configured data source

378.4. Add a class for jooq type exclude filter. It allows to:

	Instantiate jooq type exclude filter  with test class;
	Check if jooq type exclude filter has annotation;
	Get filters;
	Check if jooq type exclude filter is use default filters;
	Get default includes;
	Get component includes

379. Changes to package org.springframework.boot.test.autoconfigure.json:  

379.1. Add a class for json exclude filter. It allows to:

	Instantiate json exclude filter  with test class;
	Check if json exclude filter has annotation;
	Get filters;
	Check if json exclude filter is use default filters;
	Get default includes;
	Get component includes

379.2. Add a class for json test integration tests. It allows to:

	Handle basic json;
	Handle jackson basic;
	Handle jackson custom;
	Handle gson;
	Handle jsonb;
	Handle custom view

379.3. Add a class for json test with auto configure json testers tests. It allows to:

	Handle basic json;
	Handle jackson;
	Handle gson;
	Handle jsonb

379.4. Add a class for spring boot test with auto configure json testers tests. It allows to:

	Handle context loads

380. Changes to package org.springframework.boot.test.autoconfigure.json.app:  

380.1. Add a class for example basic object. It allows to:

	Get value;
	Get set value;
	Check if example basic object equals;
	Hash code

380.2. Add a class for example custom object. It allows to:

	Instantiate example custom object;
	Check if example custom object equals;
	Hash code;
	Convert example custom object to string

380.3. Rename type ExampleJsonApplication with ExampleJsonApplication

381. Changes to package org.springframework.boot.test.autoconfigure.orm.jpa:  

381.1. Add a class for data jpa test integration tests. It allows to:

	Handle test entity manager;
	Handle test entity manager persist and get id;
	Handle test repository;
	Check if data jpa test integration tests replaces defined data source with embedded default;
	Get did not inject example component;
	Handle flyway auto configuration was imported;
	Handle liquibase auto configuration was imported

381.2. Rename type DataJpaTypeExcludeFilter with DataJpaTypeExcludeFilter

381.3. Add a class for example component

381.4. Add an object creator class for example data jpa application. It allows to:

	Get data source

381.5. Add a class for example entity. It allows to:

	Instantiate example entity;
	Get name;
	Get reference

381.6. Add an interface declaration  for example repository. It allows to:

	Find example repository by reference

381.7. Rename type TestEntityManager with TestEntityManager

381.8. Add an object creator class for test entity manager auto configuration. It allows to:

	Get test entity manager

382. Changes to package org.springframework.boot.test.autoconfigure.properties:  

382.1. Add a class for annotations property source. It allows to:

	Instantiate annotations property source  with source class;
	Get properties;
	Collect properties;
	Get merged annotations;
	Find merged annotation;
	Get mapping type;
	Get name;
	Convert annotations property source to kebab case;
	Dot append;
	Put properties;
	Check if annotations property source contains property;
	Get property;
	Get property names;
	Check if annotations property source is empty;
	Check if annotations property source equals;
	Hash code

382.2. Add an object creator class for property mapping context customizer factory. It allows to:

	Create context customizer

382.3. Add a class for property mapping tests. It allows to:

	Check if property mapping tests has property

383. Changes to package org.springframework.boot.test.autoconfigure.restdocs:  

383.1. Add a class for mock mvc rest docs auto configuration integration tests. It allows to:

	Delete snippets;
	Handle default snippets are written

383.2. Add a class for rest assured rest docs auto configuration integration tests. It allows to:

	Delete snippets;
	Handle default snippets are written

383.3. Add a class for rest docs mock mvc builder customizer. It allows to:

	Instantiate rest docs mock mvc builder customizer  with rest docs properties, delegate mock mvc rest documentation configurer, rest documentation result handler and rest documentation result handler;
	Handle after properties set;
	Customize configurable mock mvc builder

383.4. Add an interface declaration  for rest docs mock mvc configuration customizer. It allows to:

	Customize mock mvc rest documentation configurer

383.5. Add a class for rest docs properties. It allows to:

	Get uri scheme;
	Set uri scheme;
	Get uri host;
	Set uri host;
	Get uri port;
	Set uri port

383.6. Add a class for rest docs rest assured builder customizer. It allows to:

	Instantiate rest docs rest assured builder customizer  with rest docs properties, delegate request specification and delegate request specification;
	Handle after properties set

383.7. Add an interface declaration  for rest docs rest assured configuration customizer. It allows to:

	Customize rest assured rest documentation configurer

383.8. Add a class for rest docs test application

383.9. Add a class for rest docs test controller. It allows to:

	Get index

383.10. Add a class for rest docs web test client builder customizer. It allows to:

	Instantiate rest docs web test client builder customizer  with rest docs properties, delegate web test client rest documentation configurer and delegate web test client rest documentation configurer;
	Customize web test client builder;
	Customize base url;
	Check if rest docs web test client builder customizer is standard port

383.11. Add an interface declaration  for rest docs web test client configuration customizer. It allows to:

	Customize web test client rest documentation configurer

383.12. Add a class for rest documentation context provider registrar. It allows to:

	Register bean definitions

383.13. Add a class for web test client rest docs auto configuration integration tests. It allows to:

	Delete snippets;
	Handle default snippets are written

384. Changes to package org.springframework.boot.test.autoconfigure.web.client:  

384.1. Add a class for another example rest client. It allows to:

	Instantiate another example rest client  with rest template builder;
	Get rest template;
	Get test

384.2. Add a class for auto configure mock rest service server enabled false integration tests. It allows to:

	Handle mock server rest template customizer should not be registered

384.3. Add a class for example rest client. It allows to:

	Instantiate example rest client  with rest template builder;
	Get rest template;
	Get test;
	Handle test post with body

384.4. Add a class for example web client application

384.5. Add a class for mock rest service server reset test execution listener. It allows to:

	Get order;
	Process mock rest service server reset test execution listener mock rest service server reset test execution listener after test method

384.6. Add a class for rest client exclude filter. It allows to:

	Instantiate rest client exclude filter  with test class;
	Check if rest client exclude filter has annotation;
	Get filters;
	Check if rest client exclude filter is use default filters;
	Get default includes;
	Get component includes

384.7. Add a class for rest client rest integration tests. It allows to:

	Handle mock server call 1;
	Handle mock server call 2;
	Handle mock server call with content

384.8. Add a class for rest client test no component integration tests. It allows to:

	Handle example rest client is not injected;
	Manually create bean

384.9. Add a class for rest client test two components integration tests. It allows to:

	Handle server should not work;
	Handle client 1 rest call via customizer;
	Convert client

384.10. Add a class for rest client test with component integration tests. It allows to:

	Handle mock server call

384.11. Add a class for rest client test without jackson integration tests. It allows to:

	Rest client test can be used when jackson is  not on the class path

384.12. Add a class for web client rest template auto configuration. It allows to:

	Rest template

385. Changes to package org.springframework.boot.test.autoconfigure.web.reactive:  

385.1. Add a class for spring boot web test client builder customizer. It allows to:

	Instantiate spring boot web test client builder customizer  with codec customizers collection;
	Set timeout;
	Customize builder;
	Customize web test client codecs;
	Apply customizers

385.2. Add a class for web flux test context bootstrapper. It allows to:

	Get process merged context configuration;
	Get properties

385.3. Add a class for web flux type exclude filter. It allows to:

	Instantiate web flux type exclude filter  with test class;
	Check if web flux type exclude filter has annotation;
	Get filters;
	Check if web flux type exclude filter is use default filters;
	Get default includes;
	Get component includes

385.4. Add a class for web test client auto configuration. It allows to:

	Get web test client;
	Get spring boot web test client builder customizer

385.5. Add an interface declaration  for web test client builder customizer. It allows to:

	Customize builder

386. Changes to package org.springframework.boot.test.autoconfigure.web.reactive.webclient:  

386.1. Add a class for example controller 1. It allows to:

	One example controller 1;
	Get error

386.2. Add a class for example controller 2. It allows to:

	Two example controller 2;
	Two example id

386.3. Add a class for example id. It allows to:

	Instantiate example id  with UUID;
	Get id

386.4. Add a class for example id converter. It allows to:

	Get convertible types;
	Convert source type descriptor

386.5. Add a class for example real service

386.6. Add a class for example web flux application

386.7. Add a class for web flux test all controllers integration tests. It allows to:

	Should find controller 1;
	Convert should find controller;
	Handle web exception handling;
	Should find json controller

386.8. Add a class for web flux test auto configuration integration tests. It allows to:

	Handle message source auto configuration is imported;
	Handle validation auto configuration is imported;
	Handle mustache auto configuration is imported;
	Handle freemarker auto configuration is imported;
	Handle thymeleaf auto configuration is imported;
	Handle error web flux auto configuration is imported

386.9. Add a class for web flux test converter integration tests. It allows to:

	Should find converter

386.10. Add a class for web flux test message source integration tests. It allows to:

	Handle message source has been auto configured

386.11. Add a class for web flux test one controller integration tests. It allows to:

	Should find controller;
	Should web flux test one controller integration tests not scan other controller

387. Changes to package org.springframework.boot.test.autoconfigure.web.servlet:  

387.1. Add an interface declaration  for mock mvc builder customizer. It allows to:

	Customize configurable mock mvc builder

387.2. Add a class for mock mvc print only on failure test execution listener. It allows to:

	Get order;
	Process mock mvc print only on failure test execution listener mock mvc print only on failure test execution listener after test method

387.3. Add a class for mock mvc web client auto configuration. It allows to:

	Handle mock mvc web client builder;
	Handle html unit web client

387.4. Add a class for mock mvc web driver auto configuration. It allows to:

	Handle mock mvc html unit driver builder;
	Handle html unit driver

387.5. Add a class for web driver scope. It allows to:

	Get object factory;
	Remove web driver scope;
	Register destruction callback;
	Resolve contextual object;
	Get conversation id;
	Reset web driver scope;
	Register  with configurable application context;
	Post process bean factory;
	Get  from application context

387.6. Add a class for web driver test execution listener. It allows to:

	Get order;
	Process web driver test execution listener web driver test execution listener after test method

387.7. Add a class for web mvc test auto configuration integration tests. It allows to:

	Handle freemarker auto configuration was imported;
	Handle groovy templates auto configuration was imported;
	Handle mustache auto configuration was imported;
	Handle thymeleaf auto configuration was imported;
	Handle task execution auto configuration was imported;
	Handle async task executor with application task executor

387.8. Add a class for web mvc test context bootstrapper. It allows to:

	Get process merged context configuration;
	Get properties

387.9. Add a class for web mvc type exclude filter. It allows to:

	Instantiate web mvc type exclude filter  with test class;
	Check if web mvc type exclude filter has annotation;
	Get filters;
	Check if web mvc type exclude filter is use default filters;
	Get default includes;
	Get component includes

388. Changes to package org.springframework.boot.test.autoconfigure.web.servlet.mockmvc:  

388.1. Add a class for example argument. It allows to:

	Instantiate example argument;
	Convert example argument to string

388.2. Add a class for example controller 1. It allows to:

	One example controller 1;
	Get error;
	Get html

388.3. Add a class for example controller 2. It allows to:

	Two example argument;
	Two example id;
	Get paged

388.4. Add a class for example controller 3. It allows to:

	Three example controller 3

388.5. Add a class for example controller advice. It allows to:

	Process example controller advice example controller advice on example error;
	No handler found handler

388.6. Add a class for example exception

388.7. Add a class for example filter. It allows to:

	Handle init;
	Do filter;
	Destroy example filter

388.8. Add a class for example id. It allows to:

	Instantiate example id  with UUID;
	Get id

388.9. Add an object creator class for example id converter. It allows to:

	Convert example id converter

388.10. Add a class for example mockable service. It allows to:

	Instantiate example mockable service

388.11. Add a class for example real service

388.12. Add a class for example web mvc application

388.13. Add a class for example web mvc configurer. It allows to:

	Add argument resolvers;
	Check if  supports parameter;
	Resolve argument

388.14. Add an object creator class for hateoas controller. It allows to:

	Get resource;
	Plain hateoas controller

388.15. Add a class for mock mvc spring boot test integration tests. It allows to:

	Should find controller 1;
	Convert should find controller;
	Should find controller advice;
	Should have real service

388.16. Add a class for web mvc test all controllers integration tests. It allows to:

	Should find controller 1;
	Convert should find controller;
	Should find controller advice;
	Should run validation success;
	Should run validation failure;
	Should web mvc test all controllers integration tests not filter error attributes

388.17. Add a class for web mvc test converter integration tests. It allows to:

	Should find converter

388.18. Add a class for web mvc test custom dispatcher servlet integration tests. It allows to:

	Handle dispatcher servlet is customized

388.19. Add a class for web mvc test hateoas integration tests. It allows to:

	Handle plain response;
	Handle hateoas response

388.20. Add a class for web mvc test message source integration tests. It allows to:

	Handle message source has been auto configured

388.21. Add a class for web mvc test one controller integration tests. It allows to:

	Should web mvc test one controller integration tests not find controller 1;
	Convert should find controller

388.22. Add a class for web mvc test print always integration tests. It allows to:

	Print web mvc test print always integration tests

388.23. Add a class for web mvc test print default integration tests. It allows to:

	Should web mvc test print default integration tests not print;
	Print web mvc test print default integration tests

388.24. Add a class for web mvc test print default override integration tests. It allows to:

	Should find controller 1

388.25. Add a class for web mvc test print override integration tests. It allows to:

	Should web mvc test print override integration tests not print

388.26. Add a class for web mvc test servlet filter integration tests. It allows to:

	Should apply filter

388.27. Add a class for web mvc test web client integration tests. It allows to:

	Should auto configure web client

388.28. Add a class for web mvc test web driver integration tests. It allows to:

	Should auto configure web client;
	Should be A different web client

388.29. Add a class for web mvc test with auto configure mock mvc integration tests. It allows to:

	Should web mvc test with auto configure mock mvc integration tests not add filters;
	Should web mvc test with auto configure mock mvc integration tests not have web driver;
	Should web mvc test with auto configure mock mvc integration tests not have web client

389. Changes to package org.springframework.boot.test.context:  

389.1. Add a class for config file application context initializer. It allows to:

	Initialize configurable application context;
	Apply

389.2. Add an interface declaration  for default test execution listeners post processor. It allows to:

	Post process default test execution listeners

389.3. Add a class for filtered class loader tests. It allows to:

	Load class when filtered  on package should throw class not found;
	Load class when filtered  on class should throw class not found;
	Load class when  not filtered should load class;
	Load resource when filtered  on resource should return not found;
	Load resource when  not filtered should load resource;
	Load resources when filtered  on resource should return not found;
	Load resources when  not filtered should load resource;
	Load resource  as stream when filtered on resource should return not found;
	Load resource  as stream when not filtered should load resource

389.4. Add a class for imports context customizer factory. It allows to:

	Create context customizer;
	Assert has no bean methods;

389.5. Add a class for reactive web merged context configuration. It allows to:

	Instantiate reactive web merged context configuration  with merged context configuration

389.6. Add a class for spring boot test context bootstrapper. It allows to:

	Build test context;
	Get default test execution listener classes;
	Resolve context loader;
	Add config attributes classes;
	Get default context loader class;
	Get process merged context configuration;
	Get web application type;
	Deduce web application type;
	Check if spring boot test context bootstrapper is web environment supported;
	Check if spring boot test context bootstrapper is from configuration;
	Get or find configuration classes;
	Check if spring boot test context bootstrapper contains non test component;
	Merge head class;
	Get and process property source properties;
	Get differentiator property source property;
	Handle process property source properties;
	Get web environment;
	Get classes;
	Get properties;
	Get annotation;
	Verify configuration;
	Create modified config;

389.7. Add a class for spring boot test groovy configuration tests. It allows to:

	Handle groovy config loaded

389.8. Add a class for spring boot test groovy convention configuration tests. It allows to:

	Handle groovy config loaded

389.9. Add a class for spring boot test xml convention configuration tests. It allows to:

	Handle xml config loaded

390. Changes to package org.springframework.boot.test.context.assertj:  

390.1. Add a class for application context assert. It allows to:

	Instantiate application context assert  with application context, startup failure throwable and startup failure throwable;
	Check if application context assert has bean;
	Check if application context assert has single bean;
	Check if application context assert does not have bean;
	Get bean names;
	Get bean;
	Get primary;
	Check if application context assert is primary;
	Find bean;
	Get beans;
	Get failure;
	Check if application context assert has failed;
	Check if application context assert has not failed;
	Get application context;
	Get startup failure;
	Convert context failed;
	Get bean names  for type;
	Get beans  of type;

Add a local a class for context failed to start. It allows to:

	Instantiate context failed to start  with context, ex throwable and ex throwable;
	Combine arguments;
	Get indented stack trace  as string;
	Get stack trace  as string;
	Indent context failed to start

390.2. Add an interface declaration  for application context assert provider. It allows to:

	Assert application context assert provider;
	Get source application context;
	Get startup failure;
	Close application context assert provider;
	Get type class

390.3. Add a class for assert provider application context invocation handler. It allows to:

	Instantiate assert provider application context invocation handler  with application context type class, context supplier and context supplier;
	Get context or startup failure;
	Invoke method;
	Check if assert provider application context invocation handler is to string;
	Convert assert provider application context invocation handler to string;
	Check if assert provider application context invocation handler is get source context;
	Get source context;
	Check if assert provider application context invocation handler is get startup failure;
	Get startup failure;
	Check if assert provider application context invocation handler is assert that;
	Get assert provider application context invocation handler;
	Check if assert provider application context invocation handler is close method;
	Invoke assert provider application context invocation handler close;
	Invoke application context method;
	Get started application context

390.4. Add an interface declaration  for assertable application context. It allows to:

	Get context supplier

390.5. Add a class for assertable application context tests. It allows to:

	Get should return proxy

390.6. Add an interface declaration  for assertable reactive web application context. It allows to:

	Get context supplier

390.7. Add a class for assertable reactive web application context tests. It allows to:

	Get should return proxy

390.8. Add an interface declaration  for assertable web application context. It allows to:

	Get context supplier

390.9. Add a class for assertable web application context tests. It allows to:

	Get should return proxy

391. Changes to package org.springframework.boot.test.context.bootstrap:  

391.1. Add a class for spring boot test context bootstrapper example config

391.2. Add a class for spring boot test context bootstrapper with context configuration tests. It allows to:

	Find config  automatically;
	Handle context was created via spring application

392. Changes to package org.springframework.boot.test.context.example:  

392.1. Add a class for example config

393. Changes to package org.springframework.boot.test.context.example.scan:  

393.1. Add a class for example

394. Changes to package org.springframework.boot.test.context.example.scan.sub:  

394.1. Add a class for sub example config

395. Changes to package org.springframework.boot.test.context.filter:  

395.1. Rename type ExcludeFilterContextCustomizer with ExcludeFilterContextCustomizer

395.2. Add an object creator class for exclude filter context customizer factory. It allows to:

	Create context customizer

395.3. Add a class for jupiter repeated test example. It allows to:

	Get repeated test

395.4. Add a class for jupiter test example. It allows to:

	Get repeated test

395.5. Add a class for jupiter test factory example. It allows to:

	Get test factory

395.6. Add a class for sample config

395.7. Add a class for sample test config

395.8. Add a class for test type exclude filter. It allows to:

	Match metadata reader;
	Check if test type exclude filter is test configuration;
	Check if test type exclude filter is test class

396. Changes to package org.springframework.boot.test.context.runner:  

396.1. Add a class for abstract application context runner. It allows to:

	Instantiate abstract application context runner  with context factory supplier;
	Instantiate abstract application context runner  with context factory supplier, initializers list, environment properties test property values, system properties test property values, class loader, parent application context, configurations list and configurations list;
	Process abstract application context runner abstract application context runner with initializer;
	Process abstract application context runner abstract application context runner with property values;
	Process abstract application context runner abstract application context runner with system properties;
	Process abstract application context runner abstract application context runner with class loader;
	Process abstract application context runner abstract application context runner with parent;
	Process abstract application context runner abstract application context runner with bean;
	Get bean definition registrar;
	Process abstract application context runner abstract application context runner with user configuration;
	Process abstract application context runner abstract application context runner with configuration;
	Process abstract application context runner abstract application context runner with;
	Add list;
	Handle new instance;
	Run context consumer;
	Process abstract application context runner abstract application context runner with context class loader;
	Create assertable context;
	Create and load context;
	Configure context;
	Accept context consumer;
	Handle rethrow

396.2. Add an object creator class for application context runner. It allows to:

	Instantiate application context runner;
	Instantiate application context runner  with context factory supplier;
	Instantiate application context runner  with context factory supplier, initializers list, environment properties test property values, system properties test property values, class loader, parent application context, configurations list and configurations list;
	Handle new instance

396.3. Add an object creator class for application context runner tests. It allows to:

	Get application context runner tests

396.4. Add an interface declaration  for context consumer. It allows to:

	Accept context

396.5. Add an object creator class for reactive web application context runner. It allows to:

	Instantiate reactive web application context runner;
	Instantiate reactive web application context runner  with context factory supplier;
	Instantiate reactive web application context runner  with context factory supplier, initializers list, environment properties test property values, system properties test property values, class loader, parent application context, configurations list and configurations list;
	Handle new instance

396.6. Add an object creator class for reactive web application context runner tests. It allows to:

	Get reactive web application context runner tests

396.7. Add a class for web application context runner. It allows to:

	Instantiate web application context runner;
	Instantiate web application context runner  with context factory supplier;
	Instantiate web application context runner  with context factory supplier, initializers list, environment properties test property values, system properties test property values, class loader, parent application context, configurations list and configurations list;
	Handle new instance;
	Process web application context runner web application context runner with mock servlet context

396.8. Add a class for web application context runner tests. It allows to:

	Handle context should have mock servlet context;
	Get web application context runner tests

397. Changes to package org.springframework.boot.test.json:  

397.1. Add a class for basic json tester. It allows to:

	Instantiate basic json tester;
	Instantiate basic json tester  with resource load class;
	Instantiate basic json tester  with resource load class, charset and charset;
	Initialize resource load class;
	Process basic json tester basic json tester from;
	Verify basic json tester;
	Get json content

397.2. Add a class for basic json tester tests. It allows to:

	Create when resource load class is null should throw exception;
	Process basic json tester tests basic json tester tests from json string should return json content;
	Process basic json tester tests basic json tester tests from resource string should return json content;
	Process basic json tester tests basic json tester tests from resource string with class should return json content;
	Process basic json tester tests basic json tester tests from byte array should return json content;
	Process basic json tester tests basic json tester tests from file should return json content;
	Process basic json tester tests basic json tester tests from input stream should return json content;
	Process basic json tester tests basic json tester tests from resource should return json content

397.3. Add a class for duplicate json object context customizer factory tests. It allows to:

	Warning duplicate json object context customizer factory tests for multiple versions

397.4. Rename type ExampleObject with ExampleObject

397.5. Add a class for jackson tester integration tests. It allows to:

	Handle setup;
	Handle typical test;
	Handle typical list test;
	Handle typical map test;
	Write jackson tester integration tests with view;
	Read jackson tester integration tests with resource and view;
	Read jackson tester integration tests with reader and view

397.6. Add a class for json content. It allows to:

	Instantiate json content  with resource load class, resolvable type and resolvable type;
	Assert json content;
	Get json;
	Convert json content to string

397.7. Add a class for json content assert tests. It allows to:

	Check if json content assert tests is equal to when string is matching should pass;
	Check if json content assert tests is equal to when null actual should fail;
	Check if json content assert tests is equal to when string is not matching should fail;
	Check if json content assert tests is equal to when resource path is matching should pass;
	Check if json content assert tests is equal to when resource path is not matching should fail;
	Check if json content assert tests is equal to when bytes are matching should pass;
	Check if json content assert tests is equal to when bytes are not matching should fail;
	Check if json content assert tests is equal to when file is matching should pass;
	Check if json content assert tests is equal to when file is not matching should fail;
	Check if json content assert tests is equal to when input stream is matching should pass;
	Check if json content assert tests is equal to when input stream is not matching should fail;
	Check if json content assert tests is equal to when resource is matching should pass;
	Check if json content assert tests is equal to when resource is not matching should fail;
	Check if json content assert tests is equal to json when string is matching should pass;
	Check if json content assert tests is equal to json when null actual should fail;
	Check if json content assert tests is equal to json when string is not matching should fail;
	Check if json content assert tests is equal to json when resource path is matching should pass;
	Check if json content assert tests is equal to json when resource path is not matching should fail;
	Check if json content assert tests is equal to json when resource path and class is matching should pass;
	Check if json content assert tests is equal to json when resource path and class is not matching should fail;
	Check if json content assert tests is equal to json when bytes are matching should pass;
	Check if json content assert tests is equal to json when bytes are not matching should fail;
	Check if json content assert tests is equal to json when file is matching should pass;
	Check if json content assert tests is equal to json when file is not matching should fail;
	Check if json content assert tests is equal to json when input stream is matching should pass;
	Check if json content assert tests is equal to json when input stream is not matching should fail;
	Check if json content assert tests is equal to json when resource is matching should pass;
	Check if json content assert tests is equal to json when resource is not matching should fail;
	Check if json content assert tests is strictly equal to json when string is matching should pass;
	Check if json content assert tests is strictly equal to json when string is not matching should fail;
	Check if json content assert tests is strictly equal to json when resource path is matching should pass;
	Check if json content assert tests is strictly equal to json when resource path is not matching should fail;
	Check if json content assert tests is strictly equal to json when resource path and class is matching should pass;
	Check if json content assert tests is strictly equal to json when resource path and class is not matching should fail;
	Check if json content assert tests is strictly equal to json when bytes are matching should pass;
	Check if json content assert tests is strictly equal to json when bytes are not matching should fail;
	Check if json content assert tests is strictly equal to json when file is matching should pass;
	Check if json content assert tests is strictly equal to json when file is not matching should fail;
	Check if json content assert tests is strictly equal to json when input stream is matching should pass;
	Check if json content assert tests is strictly equal to json when input stream is not matching should fail;
	Check if json content assert tests is strictly equal to json when resource is matching should pass;
	Check if json content assert tests is strictly equal to json when resource is not matching should fail;
	Check if json content assert tests is equal to json when string is matching and lenient should pass;
	Check if json content assert tests is equal to json when string is not matching and lenient should fail;
	Check if json content assert tests is equal to json when resource path is matching and lenient should pass;
	Check if json content assert tests is equal to json when resource path is not matching and lenient should fail;
	Check if json content assert tests is equal to json when resource path and class is matching and lenient should pass;
	Check if json content assert tests is equal to json when resource path and class is not matching and lenient should fail;
	Check if json content assert tests is equal to json when bytes are matching and lenient should pass;
	Check if json content assert tests is equal to json when bytes are not matching and lenient should fail;
	Check if json content assert tests is equal to json when file is matching and lenient should pass;
	Check if json content assert tests is equal to json when file is not matching and lenient should fail;
	Check if json content assert tests is equal to json when input stream is matching and lenient should pass;
	Check if json content assert tests is equal to json when input stream is not matching and lenient should fail;
	Check if json content assert tests is equal to json when resource is matching and lenient should pass;
	Check if json content assert tests is equal to json when resource is not matching and lenient should fail;
	Check if json content assert tests is equal to json when string is matching and comparator should pass;
	Check if json content assert tests is equal to json when string is not matching and comparator should fail;
	Check if json content assert tests is equal to json when resource path is matching and comparator should pass;
	Check if json content assert tests is equal to json when resource path is not matching and comparator should fail;
	Check if json content assert tests is equal to json when resource path and class are matching and comparator should pass;
	Check if json content assert tests is equal to json when resource path and class are not matching and comparator should fail;
	Check if json content assert tests is equal to json when bytes are matching and comparator should pass;
	Check if json content assert tests is equal to json when bytes are not matching and comparator should fail;
	Check if json content assert tests is equal to json when file is matching and comparator should pass;
	Check if json content assert tests is equal to json when file is not matching and comparator should fail;
	Check if json content assert tests is equal to json when input stream is matching and comparator should pass;
	Check if json content assert tests is equal to json when input stream is not matching and comparator should fail;
	Check if json content assert tests is equal to json when resource is matching and comparator should pass;
	Check if json content assert tests is equal to json when resource is not matching and comparator should fail;
	Check if json content assert tests is not equal to when string is matching should fail;
	Check if json content assert tests is not equal to when null actual should pass;
	Check if json content assert tests is not equal to when string is not matching should pass;
	Check if json content assert tests is not equal to when resource path is matching should fail;
	Check if json content assert tests is not equal to when resource path is not matching should pass;
	Check if json content assert tests is not equal to when bytes are matching should fail;
	Check if json content assert tests is not equal to when bytes are not matching should pass;
	Check if json content assert tests is not equal to when file is matching should fail;
	Check if json content assert tests is not equal to when file is not matching should pass;
	Check if json content assert tests is not equal to when input stream is matching should fail;
	Check if json content assert tests is not equal to when input stream is not matching should pass;
	Check if json content assert tests is not equal to when resource is matching should fail;
	Check if json content assert tests is not equal to when resource is not matching should pass;
	Check if json content assert tests is not equal to json when string is matching should fail;
	Check if json content assert tests is not equal to json when null actual should pass;
	Check if json content assert tests is not equal to json when string is not matching should pass;
	Check if json content assert tests is not equal to json when resource path is matching should fail;
	Check if json content assert tests is not equal to json when resource path is not matching should pass;
	Check if json content assert tests is not equal to json when resource path and class are matching should fail;
	Check if json content assert tests is not equal to json when resource path and class are not matching should pass;
	Check if json content assert tests is not equal to json when bytes are matching should fail;
	Check if json content assert tests is not equal to json when bytes are not matching should pass;
	Check if json content assert tests is not equal to json when file is matching should fail;
	Check if json content assert tests is not equal to json when file is not matching should pass;
	Check if json content assert tests is not equal to json when input stream is matching should fail;
	Check if json content assert tests is not equal to json when input stream is not matching should pass;
	Check if json content assert tests is not equal to json when resource is matching should fail;
	Check if json content assert tests is not equal to json when resource is not matching should pass;
	Check if json content assert tests is not strictly equal to json when string is matching should fail;
	Check if json content assert tests is not strictly equal to json when string is not matching should pass;
	Check if json content assert tests is not strictly equal to json when resource path is matching should fail;
	Check if json content assert tests is not strictly equal to json when resource path is not matching should pass;
	Check if json content assert tests is not strictly equal to json when resource path and class are matching should fail;
	Check if json content assert tests is not strictly equal to json when resource path and class are not matching should pass;
	Check if json content assert tests is not strictly equal to json when bytes are matching should fail;
	Check if json content assert tests is not strictly equal to json when bytes are not matching should pass;
	Check if json content assert tests is not strictly equal to json when file is matching should fail;
	Check if json content assert tests is not strictly equal to json when file is not matching should pass;
	Check if json content assert tests is not strictly equal to json when input stream is matching should fail;
	Check if json content assert tests is not strictly equal to json when input stream is not matching should pass;
	Check if json content assert tests is not strictly equal to json when resource is matching should fail;
	Check if json content assert tests is not strictly equal to json when resource is not matching should pass;
	Check if json content assert tests is not equal to json when string is matching and lenient should fail;
	Check if json content assert tests is not equal to json when string is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when resource path is matching and lenient should fail;
	Check if json content assert tests is not equal to json when resource path is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when resource path and class are matching and lenient should fail;
	Check if json content assert tests is not equal to json when resource path and class are not matching and lenient should pass;
	Check if json content assert tests is not equal to json when bytes are matching and lenient should fail;
	Check if json content assert tests is not equal to json when bytes are not matching and lenient should pass;
	Check if json content assert tests is not equal to json when file is matching and lenient should fail;
	Check if json content assert tests is not equal to json when file is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when input stream is matching and lenient should fail;
	Check if json content assert tests is not equal to json when input stream is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when resource is matching and lenient should fail;
	Check if json content assert tests is not equal to json when resource is not matching and lenient should pass;
	Check if json content assert tests is not equal to json when string is matching and comparator should fail;
	Check if json content assert tests is not equal to json when string is not matching and comparator should pass;
	Check if json content assert tests is not equal to json when resource path is matching and comparator should fail;
	Check if json content assert tests is not equal to json when resource path is not matching and comparator should pass;
	Check if json content assert tests is not equal to json when resource path and class are matching and comparator should fail;
	Check if json content assert tests is not equal to json when resource path and class are not matching and comparator should pass;
	Check if json content assert tests is not equal to json when bytes are matching and comparator should fail;
	Check if json content assert tests is not equal to json when bytes are not matching and comparator should pass;
	Check if json content assert tests is not equal to json when file is matching and comparator should fail;
	Check if json content assert tests is not equal to json when file is not matching and comparator should pass;
	Check if json content assert tests is not equal to json when input stream is matching and comparator should fail;
	Check if json content assert tests is not equal to json when input stream is not matching and comparator should pass;
	Check if json content assert tests is not equal to json when resource is matching and comparator should fail;
	Check if json content assert tests is not equal to json when resource is not matching and comparator should pass;
	Check if json content assert tests has json path value;
	Check if json content assert tests has json path value for an empty array;
	Check if json content assert tests has json path value for an empty map;
	Check if json content assert tests has json path value for indefinite path with results;
	Check if json content assert tests has json path value for indefinite path with empty results;
	Check if json content assert tests does not have json path value;
	Check if json content assert tests does not have json path value for an empty array;
	Check if json content assert tests does not have json path value for an empty map;
	Check if json content assert tests does not have json path value for indefinite path with results;
	Check if json content assert tests does not have json path value for indefinite path with empty results;
	Check if json content assert tests has empty json path value for an empty string;
	Check if json content assert tests has empty json path value for an empty array;
	Check if json content assert tests has empty json path value for an empty map;
	Check if json content assert tests has empty json path value for indefinite path with empty results;
	Check if json content assert tests has empty json path value for indefinite path with results;
	Check if json content assert tests has empty json path value for whitespace;
	Check if json content assert tests does not have empty json path value for string;
	Check if json content assert tests does not have empty json path value for number;
	Check if json content assert tests does not have empty json path value for boolean;
	Check if json content assert tests does not have empty json path value for array;
	Check if json content assert tests does not have empty json path value for map;
	Check if json content assert tests does not have empty json path value for indefinite path with results;
	Check if json content assert tests does not have empty json path value for indefinite path with empty results;
	Check if json content assert tests does not have empty json path value for an empty string;
	Check if json content assert tests does not have empty json path value for for an empty array;
	Check if json content assert tests does not have empty json path value for an empty map;
	Check if json content assert tests has json path string value;
	Check if json content assert tests has json path string value for an empty string;
	Check if json content assert tests has json path string value for non string;
	Check if json content assert tests has json path number value;
	Check if json content assert tests has json path number value for non number;
	Check if json content assert tests has json path boolean value;
	Check if json content assert tests has json path boolean value for non boolean;
	Check if json content assert tests has json path array value;
	Check if json content assert tests has json path array value for an empty array;
	Check if json content assert tests has json path array value for non array;
	Check if json content assert tests has json path map value;
	Check if json content assert tests has json path map value for an empty map;
	Check if json content assert tests has json path map value for non map;
	Extracting json path value;
	Extracting json path value  for missing;
	Extracting json path string value;
	Extracting json path string value  for missing;
	Extracting json path string value  for empty string;
	Extracting json path string value  for wrong type;
	Extracting json path number value;
	Extracting json path number value  for missing;
	Extracting json path number value  for wrong type;
	Extracting json path boolean value;
	Extracting json path boolean value  for missing;
	Extracting json path boolean value  for wrong type;
	Extracting json path array value;
	Extracting json path array value  for missing;
	Extracting json path array value  for empty;
	Extracting json path array value  for wrong type;
	Extracting json path map value;
	Extracting json path map value  for missing;
	Extracting json path map value  for empty;
	Extracting json path map value  for wrong type;
	Check if json content assert tests is null when actual is null should pass;
	Create file;
	Create input stream;
	Create resource;
	Load json;
	Process json content assert tests json content assert tests for json

397.8. Add a class for json content tests. It allows to:

	Create when resource load class is null should throw exception;
	Create when json is null should throw exception;
	Create when type is null should create content;
	Assert that should return json content assert;
	Get json should return json;
	Convert json content tests to string when has type should return string;
	Convert json content tests to string when has no type should return string

397.9. Add a class for json loader. It allows to:

	Instantiate json loader  with resource load class, charset and charset;
	Get resource load class;
	Get json;

397.10. Add a class for object content. It allows to:

	Instantiate object content  with resolvable type, object and object;
	Assert object content;
	Get object;
	Convert object content to string

397.11. Rename type ObjectContentAssert with ObjectContentAssert

397.12. Add a class for object content assert tests. It allows to:

	Check if object content assert tests is equal to when objects are equal should pass;
	Check if object content assert tests is equal to when objects are different should fail;
	Process object content assert tests object content assert tests as array for array should return object array assert;
	Process object content assert tests object content assert tests as array for non array should fail;
	Process object content assert tests object content assert tests as map for map should return map assert;
	Process object content assert tests object content assert tests as map for non map should fail;
	Process object content assert tests object content assert tests for object

397.13. Add a class for object content tests. It allows to:

	Create when object is null should throw exception;
	Create when type is null should create content;
	Assert that should return object content assert;
	Get object should return object;
	Convert object content tests to string when has type should return string;
	Convert object content tests to string when has no type should return string

398. Changes to package org.springframework.boot.test.mock.mockito:  

398.1. Rename type Definition with Definition

398.2. Add a class for definitions parser. It allows to:

	Instantiate definitions parser;
	Instantiate definitions parser  with existing collection;
	Parse source class;
	Parse element;
	Parse mock bean annotation;
	Parse spy bean annotation;
	Add definition;
	Get or deduce types;
	Get definitions;
	Get field

398.3. Add a class for mock bean on test field for existing bean cache integration tests. It allows to:

	Handle test mocking

398.4. Add a class for mock bean on test field for existing bean config

398.5. Add a class for mock bean on test field for existing bean integration tests. It allows to:

	Handle test mocking

398.6. Add a class for mock definition. It allows to:

	Instantiate mock definition  with type, extra interfaces class, answers, mock reset, qualifier definition and qualifier definition;
	Process mock definition mock definition as class set;
	Get type  to mock;
	Get extra interfaces;
	Get answer;
	Check if mock definition is serializable;
	Check if mock definition equals;
	Hash code;
	Convert mock definition to string;
	Create mock;

398.7. Add a class for mock definition tests. It allows to:

	Convert class;
	Create mock definition tests with defaults;
	Create explicit;
	Create mock

398.8. Add a class for mock reset tests. It allows to:

	Handle none attaches reset;
	Process mock reset tests mock reset tests with settings of none attaches reset;
	Process mock reset tests mock reset tests before attaches reset;
	Process mock reset tests mock reset tests after attaches reset;
	Process mock reset tests mock reset tests with settings attaches reset;
	Apply mock reset tests

398.9. Add a class for mockito beans. It allows to:

	Add mockito beans;
	Get iterator

398.10. Add a class for mockito context customizer. It allows to:

	Instantiate mockito context customizer  with definitions set;
	Customize context;
	Check if mockito context customizer equals;
	Hash code

398.11. Add an object creator class for mockito context customizer factory. It allows to:

	Create context customizer

398.12. Add a class for mockito context customizer tests. It allows to:

	Hash code and equals;
	Create test mock definition

398.13. Add a class for qualifier definition. It allows to:

	Instantiate qualifier definition  with field, annotations set and annotations set;
	Handle matches;
	Apply  to root bean definition;
	Check if qualifier definition equals;
	Hash code;
	Process qualifier definition qualifier definition for element;
	Get qualifier annotations;
	Check if qualifier definition is mock or spy annotation

398.14. Add a class for reset invocation listener. It allows to:

	Instantiate reset invocation listener  with mock reset;
	Reset reset invocation listener;
	Report invocation

398.15. Add a class for reset mocks test execution listener. It allows to:

	Get order;
	Process reset mocks test execution listener reset mocks test execution listener before test method;
	Process reset mocks test execution listener reset mocks test execution listener after test method;
	Reset mocks;

398.16. Add a class for spy bean on test field for existing bean cache integration tests. It allows to:

	Handle test spying

398.17. Add a class for spy bean on test field for existing bean config

398.18. Add a class for spy bean on test field for existing bean integration tests. It allows to:

	Handle test spying

398.19. Add a class for spy definition tests. It allows to:

	Convert class;
	Create spy definition tests with defaults;
	Create explicit;
	Create spy;
	Create spy when null instance should throw exception;
	Create spy when wrong instance should throw exception;
	Create spy  twice

399. Changes to package org.springframework.boot.test.mock.mockito.example:  

399.1. Add a class for custom qualifier example service. It allows to:

	Greeting custom qualifier example service

399.2. Add an interface declaration  for example extra interface. It allows to:

	Do extra

399.3. Add an interface declaration  for example generic service. It allows to:

	Greeting example generic service

399.4. Add a class for example generic service caller. It allows to:

	Instantiate example generic service caller  with integer service, string service and string service;
	Get integer service;
	Get string service;
	Greeting example generic service caller

399.5. Add a class for example generic string service caller. It allows to:

	Instantiate example generic string service caller  with string service;
	Get string service;
	Greeting example generic string service caller

399.6. Add an interface declaration  for example service. It allows to:

	Greeting example service

399.7. Add a class for example service caller. It allows to:

	Instantiate example service caller  with example service;
	Get service;
	Greeting example service caller

399.8. Add a class for failing example service. It allows to:

	Greeting failing example service

399.9. Add a class for real example service. It allows to:

	Instantiate real example service;
	Greeting real example service

399.10. Add a class for simple example integer generic service. It allows to:

	Greeting simple example integer generic service

399.11. Add a class for simple example service. It allows to:

	Instantiate simple example service

399.12. Add a class for simple example string generic service. It allows to:

	Instantiate simple example string generic service;
	Greeting simple example string generic service

400. Changes to package org.springframework.boot.test.mock.web:  

400.1. Add a class for spring boot mock servlet context. It allows to:

	Instantiate spring boot mock servlet context;
	Instantiate spring boot mock servlet context  with resource loader;
	Get resource location;
	Get resource base path location;
	Check if spring boot mock servlet context exists;
	Get resource

401. Changes to package org.springframework.boot.test.rule:  

401.1. Add a class for output capture tests. It allows to:

	Convert output capture tests to string should return all captured output;
	Reset output capture tests

402. Changes to package org.springframework.boot.test.util:  

402.1. Add a class for application context test utils. It allows to:

	Close application context

402.2. Add a class for application context test utils tests. It allows to:

	Close null;
	Close non closable context;
	Close context and parent

402.3. Add a class for test property values. It allows to:

	Instantiate test property values  with properties map;
	And test property values;
	And pairs stream;
	Apply  to configurable application context;
	Apply  to configurable environment;
	Apply callable to system properties;
	Handle rethrow;
	Add mutable property sources to sources;
	O test property values;
	O pairs iterable;
	O pairs stream;
	Handle empty;
	Get type;
	Get source class;
	Apply suffix

Add a local a class for pair. It allows to:

	Instantiate pair;
	Add  to properties map;
	Parse pair;
	Get separator index;
	O pair

Add a local a class for system properties handler. It allows to:

	Instantiate system properties handler;
	Apply properties map;
	Close system properties handler;
	Get set or clear

402.4. Add a class for test property values tests. It allows to:

	Apply test property values tests to environment should attach configuration property source;
	Apply test property values tests to default property source;
	Apply test property values tests to system property source;
	Apply test property values tests to with specific name;
	Apply test property values tests to existing name and different type should override existing one;
	Apply test property values tests to existing name and same type should merge;
	And should chain and add single key value;
	Apply test property values tests to system properties should set system properties;
	Apply test property values tests to system properties should restore system properties;
	Apply test property values tests to system properties when value is null should remove property

403. Changes to package org.springframework.boot.test.web.client:  

403.1. Add a class for local host uri template handler. It allows to:

	Instantiate local host uri template handler  with environment;
	Instantiate local host uri template handler  with environment, uri template handler and uri template handler;
	Get root uri

403.2. Add a class for local host uri template handler tests. It allows to:

	Create when environment is null should throw exception;
	Create when scheme is null should throw exception;
	Create when handler is null should throw exception;
	Get root uri should use local server port;
	Get root uri when local server port missing should use port 8080;
	Get root uri uses custom scheme;
	Get root uri should use context path;
	Expand should use custom handler

403.3. Add a class for mock server rest template customizer. It allows to:

	Instantiate mock server rest template customizer;
	Instantiate mock server rest template customizer  with expectation manager class;
	Set detect root uri;
	Customize rest template;
	Create expectation manager;
	Get server;
	Get expectation managers;
	Get servers

403.4. Add a class for mock server rest template customizer tests. It allows to:

	Handle setup;
	Create should use simple request expectation manager;
	Create when expectation manager class is null should throw exception;
	Create should use expectation manager class;
	Detect root uri should default  to true;
	Set detect root uri should disable root uri detection;
	Customize should bind server;
	Get server when no servers are bound should throw exception;
	Get server when multiple servers are bound should throw exception;
	Get server when single server is bound should return server;
	Get server when rest template is found should return server;
	Get server when rest template is  not found should return null;
	Get servers should return servers;
	Get expectation managers should return expectation managers

403.5. Add a class for no test rest template bean checker. It allows to:

	Set bean factory;
	Handle select imports

403.6. Add a class for root uri request expectation manager tests. It allows to:

	Handle setup;
	Create when root uri is null should throw exception;
	Create when expectation manager is null should throw exception;
	Expect request should delegate  to expectation manager;
	Validate request when uri does  not start with root uri should delegate to expectation manager;
	Validate request when uri starts  with root uri should replace uri;
	Validate request when request uri assertion is thrown should replace uri  in message;
	Reset request should delegate  to expectation manager;
	Convert bind;
	Process root uri request expectation manager tests root uri request expectation manager tests for rest template when using root uri template handler should return root uri request expectation manager;
	Process root uri request expectation manager tests root uri request expectation manager tests for rest template when not using root uri template handler should return original request expectation manager;
	Get bound rest template should prefix root uri;
	Get bound rest template when url includes domain should not prefix root uri

403.7. Add an object creator class for test rest template context customizer factory. It allows to:

	Create context customizer

404. Changes to package org.springframework.boot.test.web.htmlunit:  

404.1. Add a class for local host web client. It allows to:

	Instantiate local host web client  with environment;
	Get page

404.2. Add a class for local host web client tests. It allows to:

	Instantiate local host web client tests;
	Create when environment is null will throw exception;
	Get page when url is relative and no port will use localhost 8080;
	Get page when url is relative and has port will use localhost port;
	Handle mock connection

405. Changes to package org.springframework.boot.test.web.htmlunit.webdriver:  

405.1. Add a class for local host web connection html unit driver. It allows to:

	Instantiate local host web connection html unit driver  with environment;
	Instantiate local host web connection html unit driver  with environment, browser version and browser version;
	Instantiate local host web connection html unit driver  with environment, capabilities and capabilities;
	Get local host web connection html unit driver

406. Changes to package org.springframework.boot.test.web.reactive.server:  

406.1. Add a class for no web test client bean checker. It allows to:

	Set bean factory;
	Handle select imports

406.2. Add a class for web test client context customizer factory. It allows to:

	Create context customizer;
	Check if web test client context customizer factory is web client present

407. Changes to package org.springframework.boot.testsupport:  

407.1. Add a class for assume. It allows to:

	Handle java eight

408. Changes to package org.springframework.boot.testsupport.assertj:  

408.1. Add a class for matched. It allows to:

	Instantiate matched  with matcher;
	Handle matches;
	When matcher;
	Get b

408.2. Add a class for matched tests. It allows to:

	Process matched tests matched tests by matcher matches;
	Process matched tests matched tests by matcher does not match;
	When matcher matches;
	When matcher does  not match

409. Changes to package org.springframework.boot.testsupport.context:  

409.1. Add a class for abstract configuration class tests. It allows to:

	All bean methods are public;
	Find configuration classes;
	Check if abstract configuration class tests is test class;
	Check if abstract configuration class tests is public

410. Changes to package org.springframework.boot.testsupport.runner.classpath:  

410.1. Add a class for modified class path runner exclusions tests. It allows to:

	Handle entries are filtered from test class class loader;
	Handle entries are filtered from thread context class loader;
	Handle tests that use hamcrest work correctly

410.2. Add a class for modified class path runner overrides tests. It allows to:

	Handle classes are loaded from override;
	Handle classes are loaded from transitive dependency of override

411. Changes to package org.springframework.boot.testsupport.testcontainers:  

411.1. Add a class for redis container. It allows to:

	Instantiate redis container

412. Changes to package org.springframework.boot.testsupport.web.servlet:  

412.1. Add a class for example filter. It allows to:

	Handle init;
	Destroy example filter;
	Do filter

412.2. Add a class for example servlet. It allows to:

	Instantiate example servlet;
	Handle service

413. Changes to package org.springframework.boot.type.classreading:  

413.1. Add a class for concurrent reference caching metadata reader factory. It allows to:

	Instantiate concurrent reference caching metadata reader factory;
	Instantiate concurrent reference caching metadata reader factory  with resource loader;
	Instantiate concurrent reference caching metadata reader factory  with class loader;
	Get metadata reader;
	Create metadata reader;
	Handle clear cache

414. Changes to package org.springframework.boot.validation:  

414.1. Add a class for message interpolator factory. It allows to:

	Get object;
	Get fallback;

414.2. Rename type MessageInterpolatorFactoryTests with MessageInterpolatorFactoryTests

414.3. Add a class for message interpolator factory without el integration tests. It allows to:

	Handle default message interpolator should fail;
	Get object should use fallback

415. Changes to package org.springframework.boot.web.client:  

415.1. Add an interface declaration  for rest template customizer. It allows to:

	Customize rest template

415.2. Add a class for root uri template handler. It allows to:

	Instantiate root uri template handler  with uri template handler;
	Instantiate root uri template handler;
	Expand uri variables map;
	Expand root uri template handler;
	Apply root uri template handler;
	Get root uri;
	Add  to rest template

415.3. Add a class for root uri template handler tests. It allows to:

	Handle setup;
	Create root uri template handler tests with null root uri should throw exception;
	Create root uri template handler tests with null handler should throw exception;
	Expand map variables should prefix root;
	Expand map variables when path does  not start with slash should not prefix root;
	Expand array variables should prefix root;
	Expand array variables when path does  not start with slash should not prefix root;
	Apply should wrap existing template

416. Changes to package org.springframework.boot.web.codec:  

416.1. Add an interface declaration  for codec customizer. It allows to:

	Customize codec configurer

417. Changes to package org.springframework.boot.web.context:  

417.1. Add an interface declaration  for configurable web server application context. It allows to:

	Set server namespace

417.2. Add a class for server port info application context initializer. It allows to:

	Initialize configurable application context;
	Process server port info application context initializer server port info application context initializer on application event;
	Get name;
	Set port property;

417.3. Add an interface declaration  for web server application context. It allows to:

	Get web server;
	Get server namespace

417.4. Add a class for web server initialized event. It allows to:

	Instantiate web server initialized event  with web server;
	Get web server;
	Get application context;
	Get source

417.5. Add a class for web server port file writer. It allows to:

	Instantiate web server port file writer;
	Instantiate web server port file writer  with file;
	Process web server port file writer web server port file writer on application event;
	Get port file;
	Get server namespace;
	Check if web server port file writer is upper case;
	Create parent folder

417.6. Add a class for web server port file writer test. It allows to:

	Reset web server port file writer test;
	Create port file;
	Override port file  with default;
	Override port file  with explicit file;
	Create management port file;
	Create upper case management port file;
	Handle mock event;
	Collect file names

418. Changes to package org.springframework.boot.web.embedded.jetty:  

418.1. Add an interface declaration  for configurable jetty web server factory. It allows to:

	Set acceptors;
	Set selectors;
	Get set use forward headers;
	Add server customizers

418.2. Add a class for forward headers customizer. It allows to:

	Customize server

418.3. Add a class for jetty reactive web server factory. It allows to:

	Instantiate jetty reactive web server factory;
	Get set use forward headers;
	Set acceptors;
	Get web server;
	Add server customizers;
	Set server customizers;
	Get server customizers;
	Get thread pool;
	Set thread pool;
	Set selectors;
	Set resource factory;
	Get resource factory;
	Create jetty server;
	Create connector;
	Add handler wrappers;
	Apply wrapper;
	Customize ssl

418.4. Add a class for jetty reactive web server factory tests. It allows to:

	Get factory;
	Set null server customizers should throw exception;
	Add null server customizers should throw exception;
	Handle jetty customizers should be invoked;
	Handle specific IP address not reverse resolved;
	Use forwarded headers;
	Use server resources

418.5. Add an interface declaration  for jetty server customizer. It allows to:

	Customize server

418.6. Add a class for jetty servlet web server factory tests. It allows to:

	Get factory;
	Handle jetty configurations;
	Handle jetty customizations;
	Handle session timeout;
	Handle session timeout in mins;
	Handle ssl ciphers configuration;
	Stop called  without start;
	Add connector;
	Handle ssl enabled multi protocols configuration;
	Handle ssl enabled protocols configuration;
	Get ssl settings;
	Assert timeout;
	Get wrapped handlers;
	Handle basic ssl classpath key store;
	Use jetty servlet web server factory tests forward headers;
	Handle default thread pool;
	Handle custom thread pool;
	Start fails when thread pool is  too small;
	Handle specific IP address not reverse resolved;
	Handle specific IP address with ssl is not reverse resolved;
	Handle faulty listener causes start failure;
	Get jsp servlet;
	Get actual mime mappings;
	Get charset;
	Handle exception caused  by blocked port

418.7. Add a class for jetty web server. It allows to:

	Instantiate jetty web server  with server;
	Initialize jetty web server;
	Start;
	Stop jetty web server silently;
	Start jetty web server;
	Find bind exception;
	Get actual ports description;
	Get local port;
	Get protocols;
	Get context path;
	Handle deferred initialize;
	Stop jetty web server;
	Get port;
	Get server

418.8. Add a class for servlet context initializer configuration. It allows to:

	Instantiate servlet context initializer configuration  with initializers;
	Configure web app context;
	Call initializers;
	Set extended listener types

418.9. Add a class for ssl server customizer. It allows to:

	Instantiate ssl server customizer  with inet socket address, ssl, ssl store provider, http 2 and http 2;
	Customize server;
	Create connector;
	Create server connector;
	Create http 11 server connector;
	Check if ssl server customizer is alpn present;
	Check if ssl server customizer is conscrypt present;
	Create http 2 server connector;
	Configure ssl;
	Configure ssl client auth;
	Configure ssl passwords;
	Configure ssl key store;
	Configure ssl trust store

419. Changes to package org.springframework.boot.web.embedded.netty:  

419.1. Add a class for netty reactive web server factory. It allows to:

	Instantiate netty reactive web server factory;
	Get web server;
	Get server customizers;
	Set server customizers;
	Add server customizers;
	Set lifecycle timeout;
	Get set use forward headers;
	Set resource factory;
	Create http server;
	Get list protocols;
	Get listen address;
	Apply customizers

419.2. Add a class for netty reactive web server factory tests. It allows to:

	Get factory;
	Handle exception is thrown when port is already in use;
	Handle port matches requirement;
	Handle netty customizers;
	Use forwarded headers

419.3. Add an interface declaration  for netty server customizer

419.4. Add a class for netty web server. It allows to:

	Instantiate netty web server  with http server, reactor http handler adapter, lifecycle timeout duration and lifecycle timeout duration;
	Start netty web server;
	Start http server;
	Find bind exception;
	Start daemon await thread;
	Run;
	Stop netty web server;
	Get port

419.5. Add a class for ssl server customizer. It allows to:

	Instantiate ssl server customizer  with ssl, http 2, ssl store provider and ssl store provider;
	Apply http server;
	Get context builder;
	Get key manager factory;
	Get key store;
	Get trust manager factory;
	Get trust store;
	Load key store;
	Load trust store;
	Load store

420. Changes to package org.springframework.boot.web.embedded.tomcat:  

420.1. Add a class for compression connector customizer. It allows to:

	Instantiate compression connector customizer  with compression;
	Customize connector;
	Customize http 2 protocol;
	Customize abstract http 11 protocol;
	Get min response size;
	Get mime types;
	Get excluded user agents

420.2. Add an interface declaration  for configurable tomcat web server factory. It allows to:

	Set base directory;
	Set background processor delay;
	Add engine valves;
	Add connector customizers;
	Add context customizers;
	Add protocol handler customizers;
	Set uri encoding

420.3. Add a class for connector start failed exception. It allows to:

	Instantiate connector start failed exception;
	Get port

420.4. Add a class for lazy session id generator. It allows to:

	Start internal

420.5. Add a class for ssl connector customizer. It allows to:

	Instantiate ssl connector customizer  with ssl, ssl store provider and ssl store provider;
	Customize connector;
	Configure ssl;
	Configure ssl client auth;
	Configure ssl store provider;
	Configure ssl key store;
	Configure ssl trust store

420.6. Add a class for ssl connector customizer tests. It allows to:

	Handle setup;
	Stop ssl connector customizer tests;
	Handle ssl ciphers configuration;
	Handle ssl enabled multiple protocols configuration;
	Handle ssl enabled protocols configuration;
	Customize when ssl store provider provides  only key store should use default truststore;
	Customize when ssl store provider provides  only trust store should use default keystore;
	Customize when ssl store provider present should ignore password  from ssl;
	Customize when ssl is enabled  with no key store throws web server exception;
	Load store

420.7. Add a class for tld skip patterns. It allows to:

	Instantiate tld skip patterns

420.8. Add an interface declaration  for tomcat connector customizer. It allows to:

	Customize connector

420.9. Add an interface declaration  for tomcat context customizer. It allows to:

	Customize context

420.10. Add a class for tomcat embedded context. It allows to:

	Load children container on startup;
	Set manager;
	Get deferred load on startup;
	Get load  on startup wrappers;
	Handle load;
	Do class loader with thread context class loader;
	Set starter;
	Get starter

420.11. Add a class for tomcat embedded webapp class loader. It allows to:

	Instantiate tomcat embedded webapp class loader;
	Instantiate tomcat embedded webapp class loader  with parent class loader;
	Find resource;
	Find resources;
	Load class;
	Find existing loaded class;
	Do load class;
	Resolve result class if necessary;
	Add URL;
	Get load from parent;
	Find class ignoring  not found;
	Check package access

420.12. Add a class for tomcat error page. It allows to:

	Instantiate tomcat error page  with error page;
	Create native page;
	Add context to context;
	Call method

420.13. Add a class for tomcat reactive web server factory. It allows to:

	Instantiate tomcat reactive web server factory;
	Get default lifecycle listeners;
	Get web server;
	Configure engine;
	Prepare context;
	Skip all tld scanning;
	Configure context;
	Customize connector;
	Invoke protocol handler customizers;
	Customize protocol;
	Customize ssl;
	Set base directory;
	Set background processor delay;
	Set tomcat context customizers;
	Get tomcat context customizers;
	Add context customizers;
	Set tomcat connector customizers;
	Add connector customizers;
	Get tomcat connector customizers;
	Set tomcat protocol handler customizers;
	Add protocol handler customizers;
	Get tomcat protocol handler customizers;
	Add engine valves;
	Get engine valves;
	Set uri encoding;
	Get uri encoding;
	Set context lifecycle listeners;
	Get context lifecycle listeners;
	Add context lifecycle listeners;
	Get tomcat web server;
	Set protocol

420.14. Add a class for tomcat reactive web server factory tests. It allows to:

	Get factory;
	Tomcat customizers;
	Handle context is added to host before customizers are called;
	Handle default tomcat listeners;
	Handle tomcat listeners;
	Set null connector customizers should throw exception;
	Add null add connector customizers should throw exception;
	Set null protocol handler customizers should throw exception;
	Add null protocol handler customizers should throw exception;
	Tomcat connector customizers should be invoked;
	Tomcat protocol handler customizers should be invoked;
	Use forwarded headers;
	Handle reference clearing is disabled

420.15. Add a class for tomcat servlet web server factory tests. It allows to:

	Get factory;
	Restore tccl;
	Tomcat engine names;
	Handle default tomcat listeners;
	Handle tomcat listeners;
	Tomcat customizers;
	Handle context is added to host before customizers are called;
	Tomcat connector customizers;
	Tomcat protocol handler customizers should be invoked;
	Tomcat protocol handler can be customized;
	Tomcat additional connectors;
	Add null additional connector throws;
	Handle session timeout;
	Handle session timeout in mins;
	No session timeout;
	Handle valve;
	Set null tomcat context customizers throws;
	Add null context customizers throws;
	Set null tomcat connector customizers throws;
	Add null connector customizers throws;
	Set null tomcat protocol handler customizers throws;
	Add null tomcat protocol handler customizers throws;
	Handle uri encoding;
	Handle default uri encoding;
	Handle primary connector port clash throws web server exception;
	Handle startup failure does not result in unstopped threads being reported;
	Stop called  without start;
	Add connector;
	Use tomcat servlet web server factory tests forward headers;
	Disable does  not save session files;
	Handle jndi lookups can be performed during application context refresh;
	Get tomcat web server;
	Handle default locale charset mappings are overridden;
	Handle session id generator is configured with attributes from the manager;
	Tld skip patterns should be applied  to context jar scanner;
	Handle custom tomcat http only cookie;
	Handle exception thrown on load failure when fail ctx if servlet start fails is true;
	Handle exception thrown on load failure when fail ctx if servlet start fails is false;
	Handle reference clearing is disabled;
	Non existent upload directory is created  upon multipart upload;
	Process  on startup;
	Do post;
	Get jsp servlet;
	Get actual mime mappings;
	Get charset;
	Assert timeout;
	Get  tomcat tomcat servlet web server factory;
	Handle exception caused  by blocked port

420.16. Add a class for tomcat starter. It allows to:

	Instantiate tomcat starter  with initializers;
	Process tomcat starter tomcat starter on startup;
	Get start up exception

420.17. Add a class for tomcat web server. It allows to:

	Instantiate tomcat web server  with tomcat;
	Initialize tomcat web server;
	Find context;
	Add instance id  to engine name;
	Remove service connectors;
	Rethrow deferred startup exceptions;
	Start daemon await thread;
	Run;
	Start tomcat web server;
	Check that connectors have started;
	Check connector has started;
	Stop tomcat web server silently;
	Stop tomcat;
	Add tomcat web server previously removed connectors;
	Stop protocol handler;
	Perform deferred load  on startup;
	Get service connectors;
	Stop tomcat web server;
	Get ports description;
	Get port;
	Get context path;
	Get tomcat web server tomcat

421. Changes to package org.springframework.boot.web.embedded.undertow:  

421.1. Add a class for composite resource manager. It allows to:

	Instantiate composite resource manager  with resource managers;
	Close composite resource manager;
	Get resource;
	Check if composite resource manager is resource change listener supported;
	Register resource change listener;
	Remove resource change listener

421.2. Add an interface declaration  for configurable undertow web server factory. It allows to:

	Add builder customizers;
	Add deployment info customizers;
	Set buffer size;
	Set io threads;
	Set worker threads;
	Get set use direct buffers;
	Set access log directory;
	Set access log pattern;
	Set access log prefix;
	Set access log suffix;
	Set access log enabled;
	Set access log rotate;
	Get set use forward headers

421.3. Add a class for file session persistence tests. It allows to:

	Handle setup;
	Handle loads null for missing file;
	Persist file session persistence tests;
	Handle dont restore expired;
	Delete file  on clear

421.4. Add a class for jar resource manager. It allows to:

	Instantiate jar resource manager  with jar file;
	Instantiate jar resource manager;
	Get resource;
	Check if jar resource manager is resource change listener supported;
	Register resource change listener;
	Remove resource change listener;
	Close jar resource manager

421.5. Add a class for jar resource manager tests. It allows to:

	Create jar;
	Handle empty path is handled correctly;
	Root path is handled  correctly;
	Handle resource is found in jar file;
	Handle resource is found in jar file without leading slash

421.6. Add a class for ssl builder customizer tests. It allows to:

	Get key managers when alias is null should  not decorate;
	Handle key store provider is used when creating key store;
	Handle trust store provider is used when creating trust store;
	Get key managers when ssl is enabled  with no key store throws web server exception

421.7. Add an interface declaration  for undertow builder customizer. It allows to:

	Customize builder

421.8. Add an interface declaration  for undertow deployment info customizer. It allows to:

	Customize deployment info

421.9. Add a class for undertow reactive web server factory. It allows to:

	Instantiate undertow reactive web server factory;
	Get web server;
	Create builder;
	Configure handler;
	Configure access log handler;
	Create access log directory  if necessary;
	Create worker;
	Customize ssl;
	Get listen address;
	Set deployment info customizers;
	Get deployment info customizers;
	Add deployment info customizers;
	Set access log directory;
	Set access log pattern;
	Set access log prefix;
	Set access log suffix;
	Check if undertow reactive web server factory is access log enabled;
	Set access log enabled;
	Set access log rotate;
	Check if undertow reactive web server factory is use forward headers;
	Get set use forward headers;
	Set buffer size;
	Set io threads;
	Set worker threads;
	Get set use direct buffers;
	Set builder customizers;
	Get builder customizers;
	Add builder customizers

421.10. Add a class for undertow reactive web server factory tests. It allows to:

	Get factory;
	Set null builder customizers should throw exception;
	Add null builder customizers should throw exception;
	Handle builder customizers should be invoked;
	Use forwarded headers;
	Handle access log can be enabled;
	Handle access log can be customized;
	Handle test access log;
	Await file

421.11. Add a class for undertow servlet web server factory tests. It allows to:

	Get factory;
	Handle error page 404;
	Set null builder customizers throws;
	Add null add builder customizers throws;
	Handle builder customizers;
	Set null deployment info customizers throws;
	Add null add deployment info customizers throws;
	Handle deployment info;
	Handle basic ssl classpath key store;
	Handle default context path;
	Use undertow servlet web server factory tests forward headers;
	Each factory uses A discrete servlet container;
	Handle access log can be enabled;
	Handle access log can be customized;
	Handle test access log;
	Add connector;
	Handle ssl restricted protocols empty cipher failure;
	Handle ssl restricted protocols ECDHETLS 1 failure;
	Handle ssl restricted protocols ECDHE success;
	Handle ssl restricted protocols RSATLS 12 success;
	Handle ssl restricted protocols RSATLS 11 failure;
	Get jsp servlet;
	Await file;
	Get servlet container  from new factory;
	Get actual mime mappings;
	Get expected mime mappings;
	Get charset;
	Handle exception caused  by blocked port

422. Changes to package org.springframework.boot.web.reactive.context:  

422.1. Add a class for annotation config reactive web application context. It allows to:

	Instantiate annotation config reactive web application context;
	Instantiate annotation config reactive web application context  with default listable bean factory;
	Instantiate annotation config reactive web application context  with annotated classes;
	Create environment;
	Get resource  by path;
	Get bean name generator;
	Get scope metadata resolver;
	Load bean definitions;
	Get annotated bean definition reader;
	Get class path bean definition scanner;
	Set config location;
	Set config locations;
	Get config locations;
	Get default config locations;
	Resolve path;
	Check if annotation config reactive web application context has bean factory;
	Create bean factory;
	Customize bean factory

422.2. Add a class for annotation config reactive web server application context. It allows to:

	Instantiate annotation config reactive web server application context;
	Instantiate annotation config reactive web server application context  with default listable bean factory;
	Instantiate annotation config reactive web server application context  with annotated classes;
	Set environment;
	Set bean name generator;
	Set scope metadata resolver;
	Register annotated classes;
	Scan annotation config reactive web server application context;
	Refresh annotation config reactive web server application context;
	Post process bean factory

422.3. Add an interface declaration  for configurable reactive web application context

422.4. Add an interface declaration  for configurable reactive web environment

422.5. Add a class for filtered reactive web context resource. It allows to:

	Instantiate filtered reactive web context resource;
	Check if filtered reactive web context resource exists;
	Create relative;
	Get description;
	Get input stream

422.6. Add an object creator class for generic reactive web application context. It allows to:

	Instantiate generic reactive web application context;
	Instantiate generic reactive web application context  with default listable bean factory;
	Create environment;
	Get resource  by path

422.7. Add a class for generic reactive web application context tests. It allows to:

	Get resource  by path

422.8. Add an interface declaration  for reactive web application context

422.9. Add a class for reactive web server initialized event. It allows to:

	Instantiate reactive web server initialized event  with web server, reactive web server application context and reactive web server application context;
	Get application context

422.10. Add a class for standard reactive web environment

423. Changes to package org.springframework.boot.web.reactive.context.config:  

423.1. Add a class for example reactive web server application configuration. It allows to:

	Get web server factory;
	Http handler

424. Changes to package org.springframework.boot.web.reactive.error:  

424.1. Add a class for default error attributes. It allows to:

	Instantiate default error attributes;
	Get error attributes;
	Determine http status;
	Determine message;
	Determine exception;
	Add error attributes map;
	Handle exception;
	Get error;
	Handle store error information

424.2. Add an interface declaration  for error attributes. It allows to:

	Get error attributes;
	Get error;
	Handle store error information

424.3. Add an interface declaration  for error web exception handler

425. Changes to package org.springframework.boot.web.reactive.filter:  

425.1. Add a class for ordered hidden http method filter. It allows to:

	Get order;
	Get set order

426. Changes to package org.springframework.boot.web.reactive.function.client:  

426.1. Add an interface declaration  for web client customizer. It allows to:

	Customize web client builder

427. Changes to package org.springframework.boot.web.reactive.result.view:  

427.1. Add a class for mustache view. It allows to:

	Set compiler;
	Set charset;
	Check resource exists;
	Render internal;
	Resolve resource;
	Get reader;
	Get charset

427.2. Add a class for mustache view resolver. It allows to:

	Instantiate mustache view resolver;
	Instantiate mustache view resolver  with compiler;
	Set charset;
	Get required view class;
	Create view

427.3. Add a class for mustache view resolver tests. It allows to:

	Handle init;
	Resolve mustache view resolver tests non existent;
	Existing mustache view resolver tests

427.4. Add a class for mustache view tests. It allows to:

	Handle init;
	View resolves handlebars

428. Changes to package org.springframework.boot.web.reactive.server:  

428.1. Add a class for abstract reactive web server factory. It allows to:

	Instantiate abstract reactive web server factory;

428.2. Add an interface declaration  for configurable reactive web server factory

428.3. Add an interface declaration  for reactive web server factory. It allows to:

	Get web server

429. Changes to package org.springframework.boot.web.server:  

429.1. Add a class for abstract configurable web server factory. It allows to:

	Instantiate abstract configurable web server factory;
	Get port;
	Set port;
	Get address;
	Set address;
	Get error pages;
	Set error pages;
	Add error pages;
	Get ssl;
	Set ssl;
	Get ssl store provider;
	Set ssl store provider;
	Get abstract configurable web server factory;
	Set http 2;
	Get compression;
	Set compression;
	Get server header;
	Set server header;
	Create temp dir

429.2. Add a class for compression. It allows to:

	Enabled compression;
	Get mime types;
	Set mime types;
	Get excluded user agents;
	Set excluded user agents;
	Get min response size;
	Set min response size

429.3. Add a class for compression tests. It allows to:

	Handle default compressable mime types matches tomcats default;
	Get tomcat default compressable mime types

429.4. Add an interface declaration  for configurable web server factory. It allows to:

	Set port;
	Set address;
	Set error pages;
	Set ssl;
	Set ssl store provider;
	Set http 2;
	Set compression;
	Set server header

429.5. Add a class for error page. It allows to:

	Instantiate error page;
	Instantiate error page  with http status;
	Instantiate error page  with exception class;
	Get path;
	Get exception;
	Get status;
	Get status code;
	Get exception name;
	Check if error page is global;
	Check if error page equals;
	Hash code

429.6. Add an interface declaration  for error page registrar. It allows to:

	Register error pages

429.7. Add a class for error page registrar bean post processor. It allows to:

	Set bean factory;
	Post process  before initialization;
	Post process  after initialization;
	Get registrars

429.8. Add an interface declaration  for error page registry. It allows to:

	Add error pages

429.9. Add a class for http 2. It allows to:

	Check if http 2 is enabled;
	Enabled http 2

429.10. Add a class for mime mappings tests. It allows to:

	Handle defaults can not be modified;
	Create mime mappings tests from existing;
	Create mime mappings tests from map;
	Iterate mime mappings tests;
	Get mime mappings tests;
	Add new;
	Add mime mappings tests;
	Remove mime mappings tests;
	Missing mime mappings tests;
	Make unmodifiable

429.11. Add a class for port in use exception. It allows to:

	Instantiate port in use exception;
	Get port

429.12. Add a class for ssl. It allows to:

	Check if ssl is enabled;
	Enabled ssl;
	Get client  auth;
	Set client  auth client auth;
	Get ciphers;
	Set ciphers;
	Get enabled protocols;
	Set enabled protocols;
	Get key alias;
	Set key alias;
	Get key password;
	Set key password;
	Get key store;
	Set key store;
	Get key store password;
	Set key store password;
	Get key store type;
	Set key store type;
	Get key store provider;
	Set key store provider;
	Get trust store;
	Set trust store;
	Get trust store password;
	Set trust store password;
	Get trust store type;
	Set trust store type;
	Get trust store provider;
	Set trust store provider;
	Get protocol;
	Set protocol

429.13. Add an interface declaration  for ssl store provider. It allows to:

	Get key store;
	Get trust store

429.14. Add an interface declaration  for web server. It allows to:

	Start web server;
	Stop web server;
	Get port

429.15. Add a class for web server exception. It allows to:

	Instantiate web server exception  with cause throwable

429.16. Add an interface declaration  for web server factory

429.17. Add an interface declaration  for web server factory customizer. It allows to:

	Customize factory

429.18. Add a class for web server factory customizer bean post processor. It allows to:

	Set bean factory;
	Post process  before initialization;
	Post process  after initialization;
	Get customizers;
	Get web server factory customizer beans

430. Changes to package org.springframework.boot.web.servlet:  

430.1. Add a class for abstract filter registration bean. It allows to:

	Instantiate abstract filter registration bean  with servlet registration beans;
	Set servlet registration beans;
	Get servlet registration beans;
	Add servlet registration beans;
	Set servlet names;
	Get servlet names;
	Add servlet names;
	Set url patterns;
	Get url patterns;
	Add url patterns;
	Set dispatcher types;
	Set match  after;
	Check if abstract filter registration bean is match after;
	Get description;
	Add registration;
	Configure filter registration dynamic;
	Get filter;
	Convert abstract filter registration bean to string

430.2. Add a class for abstract filter registration bean tests. It allows to:

	Handle setup mocks;
	Handle startup with defaults;
	Handle startup with specified values;
	Handle specific name;
	Get deduced name;
	Disable abstract filter registration bean tests;
	Set servlet registration bean must  not be null;
	Add servlet registration bean must  not be null;
	Set servlet registration bean replaces value;
	Modify init parameters;
	Set url pattern must  not be null;
	Add url pattern must  not be null;
	Set servlet name must  not be null;
	Add servlet name must  not be null;
	Process abstract filter registration bean tests abstract filter registration bean tests with specific dispatcher types;
	Process abstract filter registration bean tests abstract filter registration bean tests with specific dispatcher types enum set;
	Get expected filter;
	Create filter registration bean;
	Handle mock servlet registration

430.3. Add a class for delegating filter proxy registration bean. It allows to:

	Instantiate delegating filter proxy registration bean  with servlet registration beans;
	Set application context;
	Get target bean name;
	Get filter;
	Handle init filter bean;
	Get web application context

430.4. Add a class for dynamic registration bean. It allows to:

	Set name;
	Set async supported;
	Check if dynamic registration bean is async supported;
	Set init parameters;
	Get init parameters;
	Add init parameter;
	Register servlet context;
	Add registration;
	Configure registration;
	Get or deduce name

430.5. Add a class for filter registration bean. It allows to:

	Instantiate filter registration bean;
	Instantiate filter registration bean  with filter, servlet registration beans and servlet registration beans;
	Get filter;
	Set filter

430.6. Add a class for filter registration bean tests. It allows to:

	Set filter;
	Set filter must  not be null;
	Construct filter must  not be null;
	Create servlet registration bean must  not be null;
	Create filter registration bean;
	Get expected filter

430.7. Rename type MultipartConfigFactory with MultipartConfigFactory

430.8. Add a class for multipart config factory tests. It allows to:

	Handle sensible defaults;
	Create multipart config factory tests with data sizes;
	Create multipart config factory tests with negative data sizes

430.9. Add a class for registration bean. It allows to:

	Process registration bean registration bean on startup;
	Get description;
	Register servlet context;
	Enabled registration bean;
	Check if registration bean is enabled;
	Get set order;
	Get order

430.10. Add a class for servlet component handler. It allows to:

	Instantiate servlet component handler  with annotation type class;
	Get type filter;
	Extract url patterns;
	Extract init parameters;
	Handle scanned generic bean definition;
	Handle attributes map

430.11. Add a class for servlet component registering post processor. It allows to:

	Instantiate servlet component registering post processor  with packages to scan set;
	Post process bean factory;
	Scan package;
	Check if servlet component registering post processor is running in embedded web server;
	Create component provider;
	Get packages  to scan;
	Set application context

430.12. Add a class for servlet component scan registrar. It allows to:

	Register bean definitions;
	Update post processor;
	Add post processor;
	Get packages  to scan

430.13. Add an interface declaration  for servlet context initializer. It allows to:

	Process servlet context initializer servlet context initializer on startup

430.14. Add a class for servlet listener registration bean. It allows to:

	Instantiate servlet listener registration bean;
	Instantiate servlet listener registration bean  with listener;
	Set listener;
	Get listener;
	Get description;
	Register servlet context;
	Check if servlet listener registration bean is supported type;
	Get supported types

430.15. Add a class for servlet listener registration bean tests. It allows to:

	Handle setup mocks;
	Handle startup with defaults;
	Disable servlet listener registration bean tests;
	Can servlet listener registration bean tests not register unsupported type

430.16. Add a class for servlet registration bean. It allows to:

	Instantiate servlet registration bean;
	Instantiate servlet registration bean  with servlet;
	Set servlet;
	Get servlet;
	Set url mappings;
	Get url mappings;
	Add url mappings;
	Set load  on startup;
	Set multipart config;
	Get multipart config;
	Get description;
	Add registration;
	Configure servlet registration dynamic;
	Get servlet name;
	Convert servlet registration bean to string

430.17. Add a class for servlet registration bean tests. It allows to:

	Handle setup mocks;
	Handle startup with defaults;
	Handle startup with double registration;
	Handle startup with specified values;
	Handle specific name;
	Get deduced name;
	Disable servlet registration bean tests;
	Set servlet must  not be null;
	Create servlet must  not be null;
	Set mapping must  not be null;
	Create mapping must  not be null;
	Add mapping must  not be null;
	Set mapping replaces value;
	Modify init parameters;
	Process servlet registration bean tests servlet registration bean tests without default mappings

430.18. Add a class for web filter handler. It allows to:

	Instantiate web filter handler;
	Handle attributes map;
	Extract dispatcher types;
	Determine name

430.19. Add a class for web listener handler. It allows to:

	Instantiate web listener handler;
	Handle attributes map

430.20. Add a class for web servlet handler. It allows to:

	Instantiate web servlet handler;
	Handle attributes map;
	Determine name;
	Determine multipart config

431. Changes to package org.springframework.boot.web.servlet.context:  

431.1. Add a class for annotation config servlet web server application context. It allows to:

	Instantiate annotation config servlet web server application context;
	Instantiate annotation config servlet web server application context  with default listable bean factory;
	Instantiate annotation config servlet web server application context  with annotated classes;
	Set environment;
	Set bean name generator;
	Set scope metadata resolver;
	Register annotated classes;
	Scan annotation config servlet web server application context;
	Refresh annotation config servlet web server application context;
	Post process bean factory

431.2. Add a class for servlet web server initialized event. It allows to:

	Instantiate servlet web server initialized event  with web server, servlet web server application context and servlet web server application context;
	Get application context

431.3. Add a class for web application context servlet context aware processor. It allows to:

	Instantiate web application context servlet context aware processor  with configurable web application context;
	Get servlet context;
	Get servlet config

431.4. Add a class for xml servlet web server application context. It allows to:

	Instantiate xml servlet web server application context;
	Instantiate xml servlet web server application context  with resources;
	Instantiate xml servlet web server application context  with relative class;
	Validating xml servlet web server application context;
	Set environment;
	Handle load;

431.5. Add a class for xml servlet web server application context tests. It allows to:

	Create xml servlet web server application context tests from resource;
	Create xml servlet web server application context tests from resource location;
	Create xml servlet web server application context tests from relative resource location;
	Handle load and refresh from resource;
	Handle load and refresh from resource location;
	Handle load and refresh from relative resource location;
	Verify context

432. Changes to package org.springframework.boot.web.servlet.context.config:  

432.1. Add an object creator class for example servlet web server application configuration. It allows to:

	Get web server factory;
	Get servlet

433. Changes to package org.springframework.boot.web.servlet.error:  

433.1. Add a class for default error attributes. It allows to:

	Instantiate default error attributes;
	Get order;
	Resolve exception;
	Handle store error attributes;
	Get error attributes;
	Add status;
	Add error details;
	Add error message;
	Extract binding result;
	Add error attributes map;
	Add path;
	Get error;
	Get attribute

433.2. Add a class for default error attributes tests. It allows to:

	Include time stamp;
	Handle specific status code;
	Missing status code;
	Handle mvc error;
	Handle servlet error;
	Handle servlet message;
	Handle null message;
	Handle unwrap servlet exception;
	Get error;
	Extract binding result errors;
	Extract method argument  not valid exception binding result errors;
	Handle test binding result;
	Process default error attributes tests default error attributes tests with exception attribute;
	Trace default error attributes tests;
	Handle path

433.3. Add an interface declaration  for error attributes. It allows to:

	Get error attributes;
	Get error

433.4. Add an interface declaration  for error controller. It allows to:

	Get error path

434. Changes to package org.springframework.boot.web.servlet.filter:  

434.1. Add a class for application context header filter. It allows to:

	Instantiate application context header filter  with application context;
	Do filter internal

434.2. Add a class for ordered character encoding filter. It allows to:

	Get order;
	Get set order

434.3. Add a class for ordered hidden http method filter. It allows to:

	Get order;
	Get set order

434.4. Add a class for ordered request context filter. It allows to:

	Get order;
	Get set order

435. Changes to package org.springframework.boot.web.servlet.mock:  

435.1. Add a class for mock filter. It allows to:

	Handle init;
	Do filter;
	Destroy mock filter

435.2. Add a class for mock servlet. It allows to:

	Handle service

436. Changes to package org.springframework.boot.web.servlet.server:  

436.1. Add an interface declaration  for configurable servlet web server factory. It allows to:

	Set context path;
	Set display name;
	Set session;
	Set register default servlet;
	Set mime mappings;
	Set document root;
	Set initializers;
	Add initializers;
	Set jsp;
	Set locale charset mappings;
	Set init parameters

436.2. Add a class for document root. It allows to:

	Instantiate document root  with logger;
	Get directory;
	Set directory;
	Get valid directory;
	Get war file document root;
	Get archive file document root;
	Get exploded war file document root;
	Get code source archive;
	Get common document root;
	Log no document roots

436.3. Add a class for document root tests. It allows to:

	Get exploded war file document root when running from exploded war;
	Get exploded war file document root when running from packaged war;
	Code source archive path;
	Code source archive path containing spaces

436.4. Add a class for jsp. It allows to:

	Instantiate jsp;
	Get class name;
	Set class name;
	Get init parameters;
	Set init parameters;
	Registered jsp;

436.5. Add an interface declaration  for servlet web server factory. It allows to:

	Get web server

436.6. Add a class for session store directory. It allows to:

	Get directory;
	Set directory;
	Get valid directory;
	Assert directory

436.7. Add a class for static resource jars. It allows to:

	Get urls;
	Get urls  from urls;
	Convert static resource jars to url;
	Convert static resource jars to file;
	Add url;
	Add url file;
	Add url connection;
	Check if static resource jars is resources jar;

436.8. Add a class for static resource jars tests. It allows to:

	Include jar  with static resources;
	Include jar  with static resources with url encoded spaces;
	Include jar  with static resources with plus in its path;
	Exclude jar  without static resources;
	Handle unc paths are tolerated;
	Create resources jar;
	Create jar;

437. Changes to package org.springframework.boot.web.servlet.support:  

437.1. Add an object creator class for error page filter configuration. It allows to:

	Get error page filter

437.2. Add a class for servlet context application context initializer. It allows to:

	Instantiate servlet context application context initializer  with servlet context;
	Get set order;
	Get order;
	Initialize configurable web application context

437.3. Add a class for servlet context application context initializer tests. It allows to:

	Handle servlet context is set on the application context;
	Handle application context is not stored in servlet context by default;
	Handle application context can be stored in servlet context

438. Changes to package org.springframework.boot.web.servlet.testcomponents:  

438.1. Add a class for test filter. It allows to:

	Handle init;
	Do filter;
	Destroy test filter

438.2. Add a class for test listener. It allows to:

	Handle context initialized;
	Handle context destroyed

438.3. Add a class for test multipart servlet

438.4. Rename type TestServlet with TestServlet

439. Changes to package org.springframework.boot.web.servlet.view:  

439.1. Add a class for mustache view. It allows to:

	Set compiler;
	Set charset;
	Check resource;
	Render merged template model;
	Create template;
	Get reader

439.2. Add a class for mustache view resolver. It allows to:

	Instantiate mustache view resolver;
	Instantiate mustache view resolver  with compiler;
	Get required view class;
	Set charset;
	Build view

439.3. Add a class for mustache view resolver tests. It allows to:

	Handle init;
	Resolve mustache view resolver tests non existent;
	Existing mustache view resolver tests;
	Handle sets content type

439.4. Add a class for mustache view tests. It allows to:

	Handle init;
	View resolves handlebars

440. Changes to package org.test:  

440.1. Add a class for sample application. It allows to:

	Handle main

441. Changes to package sample:  

441.1. Rename type AnnotatedSample with AnnotatedSample

441.2. Add a class for message controller. It allows to:

	Hello message controller

441.3. Add a class for sample controller. It allows to:

	Hello sample controller

441.4. Add a class for sample glassfish deploy application

441.5. Add a class for sample glassfish deploy application IT. It allows to:

	Handle test home;
	Handle test health

441.6. Add a class for sample junit jupiter application. It allows to:

	Handle main

441.7. Add a class for sample junit jupiter application tests. It allows to:

	Handle test message

441.8. Add a class for sample tom EE deploy application. It allows to:

	Configure spring application builder

441.9. Add a class for sample tom EE deploy application IT. It allows to:

	Handle test home;
	Handle test health

441.10. Add a class for sample tomcat deploy application

441.11. Add a class for sample tomcat deploy application IT. It allows to:

	Handle test home;
	Handle test health;
	Handle error from exception for request accepting anything produces A json response;
	Handle error from exception for request accepting json produces A json response;
	Handle error from exception for request accepting html produces an html response;
	Send error  for request accepting anything produces A json response;
	Send error  for request accepting json produces A json response;
	Send error  for request accepting html produces an html response;
	Assert that path produces expected response

441.12. Add a class for sample wild fly deploy application

441.13. Add a class for sample wild fly deploy application IT. It allows to:

	Handle test home;
	Handle test health

441.14. Add a class for sample wlp deploy application

441.15. Add a class for sample wlp deploy application IT. It allows to:

	Handle test home;
	Handle test health

442. Changes to package sample.activemq:  

442. Changes to package sample.actuator:  

442.1. Add a class for example health indicator. It allows to:

	Get health

443. Changes to package sample.actuator.customsecurity:  

443.1. Add a class for cors sample actuator application tests. It allows to:

	Set cors sample actuator application tests;
	Handle endpoint should return unauthorized;
	Handle preflight request to endpoint should return ok;
	Handle preflight request when cors config invalid should return forbidden

443.2. Add a class for example controller. It allows to:

	Get home;
	Get foo

443.3. Add a class for example rest controller endpoint. It allows to:

	Echo example rest controller endpoint

443.4. Add a class for management port and path sample actuator application tests. It allows to:

	Handle test home;
	Handle actuator path on main port should not match;
	Handle test secure actuator;
	Handle test insecure actuator;
	Handle test missing

443.5. Add a class for sample actuator custom security application. It allows to:

	Handle main

443.6. Add a class for sample actuator custom security application tests. It allows to:

	Handle home is secure;
	Handle test insecure application path;
	Handle test insecure static resources;
	Handle actuator insecure endpoint;
	Handle actuator links is secure;
	Handle actuator secure endpoint with anonymous;
	Handle actuator secure endpoint with unauthorized user;
	Handle actuator secure endpoint with authorized user;
	Handle actuator custom mvc secure endpoint with anonymous;
	Handle actuator custom mvc secure endpoint with unauthorized user;
	Handle actuator custom mvc secure endpoint with authorized user;
	Handle actuator excluded from endpoint request matcher;
	Handle mvc matchers can be used to secure actuators;
	Rest template;
	Admin rest template;
	Get user rest template;
	Get beans rest template;
	Configure test rest template

443.7. Add a class for security configuration. It allows to:

	Process security configuration security configuration in memory user details manager;
	Configure http security

444. Changes to package sample.actuator.log4j2:  

444. Changes to package sample.actuator.noweb:  

444. Changes to package sample.actuator.ui:  

444. Changes to package sample.amqp:  

444. Changes to package sample.animated:  

444.1. Add a class for sample animated banner application. It allows to:

	Handle main

445. Changes to package sample.ant:  

445. Changes to package sample.aop:  

445. Changes to package sample.atomikos:  

445. Changes to package sample.batch:  

445. Changes to package sample.bitronix:  

445. Changes to package sample.data.cassandra:  

445. Changes to package sample.data.couchbase:  

445. Changes to package sample.data.elasticsearch:  

445. Changes to package sample.data.jpa:  

445. Changes to package sample.data.jpa.domain:  

445. Changes to package sample.data.jpa.service:  

445. Changes to package sample.data.ldap:  

445. Changes to package sample.data.mongo:  

445. Changes to package sample.data.neo4j:  

445. Changes to package sample.data.redis:  

445. Changes to package sample.data.rest:  

445. Changes to package sample.data.rest.domain:  

445. Changes to package sample.data.rest.service:  

445. Changes to package sample.data.solr:  

445. Changes to package sample.devtools:  

445. Changes to package sample.flyway:  

445. Changes to package sample.freemarker:  

445. Changes to package sample.groovytemplates:  

445. Changes to package sample.groovytemplates.mvc:  

445. Changes to package sample.hateoas:  

445. Changes to package sample.hateoas.domain:  

445. Changes to package sample.hateoas.web:  

445. Changes to package sample.integration.consumer:  

445. Changes to package sample.integration.producer:  

445. Changes to package sample.jersey:  

445. Changes to package sample.jetty:  

445. Changes to package sample.jetty.jsp:  

445. Changes to package sample.jetty.ssl:  

445. Changes to package sample.jetty.ssl.web:  

445. Changes to package sample.jndi:  

445. Changes to package sample.jooq:  

445. Changes to package sample.jpa:  

445. Changes to package sample.jpa.domain:  

445. Changes to package sample.jpa.repository:  

445. Changes to package sample.jsp:  

445. Changes to package sample.kafka:  

445.1. Add a class for consumer. It allows to:

	Handle process message;
	Get messages

445.2. Add a class for producer. It allows to:

	Instantiate producer  with kafka template;
	Send sample message

445.3. Add a class for sample kafka application. It allows to:

	Handle main;
	Get runner

445.4. Add a class for sample kafka application tests. It allows to:

	Handle test vanilla exchange

445.5. Add a class for sample message. It allows to:

	Instantiate sample message  with id integer;
	Get id;
	Get message;
	Convert sample message to string

446. Changes to package sample.layout:  

446. Changes to package sample.liquibase:  

446. Changes to package sample.logback:  

446. Changes to package sample.mustache:  

446. Changes to package sample.oauth2.client:  

446.1. Add a class for example controller. It allows to:

	Email principal

446.2. Add a class for sample O auth 2 client application. It allows to:

	Handle main

446.3. Add a class for sample O auth 2 client application tests. It allows to:

	Convert everything should redirect;
	Convert login should have all O auth

447. Changes to package sample.parent.consumer:  

447. Changes to package sample.parent.producer:  

447. Changes to package sample.profile:  

447. Changes to package sample.propertyvalidation:  

447. Changes to package sample.quartz:  

447.1. Add a class for sample job. It allows to:

	Set name;
	Execute internal

447.2. Add a class for sample quartz application. It allows to:

	Handle main;
	Get sample job detail;
	Get sample job trigger

447.3. Add a class for sample quartz application tests. It allows to:

	Handle quartz job is triggered

448. Changes to package sample.secure:  

448. Changes to package sample.secure.webflux:  

448.1. Add a class for echo handler. It allows to:

	Echo server request

448.2. Add a class for sample secure web flux application. It allows to:

	Handle main;
	Get mono router function

448.3. Add a class for sample secure web flux application tests. It allows to:

	Handle user defined mappings secure by default;
	Handle health insecure by default;
	Info insecure  by default;
	Handle other actuators secure by default;
	Handle user defined mappings accessible on login;
	Handle actuators accessible on login;
	Get basic auth

448.4. Add a class for welcome controller. It allows to:

	Welcome principal

449. Changes to package sample.security.method:  

449. Changes to package sample.servlet:  

449. Changes to package sample.session:  

449.1. Add a class for hello rest controller. It allows to:

	Get session id

449.2. Add a class for sample session application. It allows to:

	Handle main

449.3. Add a class for sample session application tests. It allows to:

	Handle session expiry;
	Create context;
	First request;
	Handle next request

449.4. Add a class for sample session web flux application. It allows to:

	Handle main;
	Get spring security filter chain

449.5. Add a class for sample session web flux application tests. It allows to:

	Handle user defined mappings secure by default;
	Get basic auth

450. Changes to package sample.simple:  

450. Changes to package sample.test.domain:  

450. Changes to package sample.test.service:  

450. Changes to package sample.test.web:  

450. Changes to package sample.testng:  

450. Changes to package sample.tomcat:  

450. Changes to package sample.tomcat.jsp:  

450. Changes to package sample.tomcat.multiconnector:  

450. Changes to package sample.tomcat.ssl:  

450. Changes to package sample.tomcat.ssl.web:  

450. Changes to package sample.traditional:  

450. Changes to package sample.traditional.config:  

450. Changes to package sample.undertow:  

450. Changes to package sample.undertow.ssl:  

450. Changes to package sample.undertow.ssl.web:  

450. Changes to package sample.undertow.web:  

450. Changes to package sample.war:  

450. Changes to package sample.web.secure:  

450. Changes to package sample.web.secure.custom:  

450. Changes to package sample.web.secure.jdbc:  

450. Changes to package sample.web.staticcontent:  

450. Changes to package sample.web.ui:  

450. Changes to package sample.webflux:  

450.1. Add a class for echo handler. It allows to:

	Echo server request

450.2. Add a class for example controller. It allows to:

	Get example

450.3. Add a class for sample web flux application. It allows to:

	Handle main;
	Get mono router function

450.4. Add a class for sample web flux application tests. It allows to:

	Handle test welcome;
	Handle test echo;
	Handle test actuator status

450.5. Add a class for welcome controller. It allows to:

	Welcome welcome controller

451. Changes to package sample.webservices:  

451. Changes to package sample.xml:  

451. Changes to package sampleconfig:  

451.1. Add a class for my component in package without dot

452. Changes to package samples.websocket.jetty:  

452. Changes to package samples.websocket.jetty.snake:  

452. Changes to package samples.websocket.tomcat:  

452. Changes to package samples.websocket.tomcat.snake:  

452. Changes to package samples.websocket.undertow:  

452. Changes to package samples.websocket.undertow.snake:  

