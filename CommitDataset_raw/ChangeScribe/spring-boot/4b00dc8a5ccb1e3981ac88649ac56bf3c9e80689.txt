BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (pom.xml). 
 This change set is mainly composed of:  

1. Changes to package org.springframework.boot.autoconfigure.data.jdbc.city:  

1.1. Add a class for city. It allows to:

	Instantiate city;
	Get name;
	Get state;
	Get country;
	Get map;
	Convert city to string

1.2. Add an interface declaration  for city repository

2. Changes to package org.springframework.boot.test.autoconfigure.data.jdbc:  

2.1. Add a class for data jdbc test context bootstrapper. It allows to:

	Get properties

2.2. Add a class for data jdbc test integration tests. It allows to:

	Handle test repository;
	Check if data jdbc test integration tests replaces defined data source with embedded default;
	Get did not inject example component;
	Handle flyway auto configuration was imported;
	Handle liquibase auto configuration was imported

2.3. Add a class for data jdbc test properties integration tests. It allows to:

	Handle environment with new profile

2.4. Add a class for data jdbc type exclude filter. It allows to:

	Instantiate data jdbc type exclude filter  with test class;
	Check if data jdbc type exclude filter has annotation;
	Get filters;
	Check if data jdbc type exclude filter is use default filters;
	Get default includes;
	Get component includes

2.5. Add a class for example component

2.6. Add an object creator class for example data jdbc application. It allows to:

	Get data source

2.7. Add a class for example entity. It allows to:

	Instantiate example entity;
	Get name;
	Get reference

2.8. Add an interface declaration  for example repository

3. Changes to package sample.data.jdbc:  

3.1. Add a class for customer. It allows to:

	Get id;
	Set id;
	Get customer first name;
	Set first name;
	Get date  of birth;
	Set date  of birth

3.2. Add an interface declaration  for customer repository. It allows to:

	Find customer repository by name

3.3. Add a class for customer repository integration tests. It allows to:

	Find all customers;
	Find customer repository integration tests by name with match;
	Find customer repository integration tests by name with no match

3.4. Add a class for sample controller. It allows to:

	Instantiate sample controller  with customer repository;
	Get customers

3.5. Add a class for sample data jdbc application. It allows to:

	Handle main

3.6. Add a class for sample data jdbc application tests. It allows to:

	Set sample data jdbc application tests;
	Handle test customers

