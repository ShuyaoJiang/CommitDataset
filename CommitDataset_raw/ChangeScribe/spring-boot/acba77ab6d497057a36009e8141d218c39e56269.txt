BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (pom.xml, test-hazelcast.xml, hazelcast-client-specific.xml, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package org.springframework.boot:  

1. Changes to package org.springframework.boot.actuate.amqp:  

1. Changes to package org.springframework.boot.actuate.audit:  

1. Changes to package org.springframework.boot.actuate.autoconfigure.cache:  

1.1. Add an object creator class for caches endpoint auto configuration. It allows to:

	Get caches endpoint;
	Get caches endpoint web extension

1.2. Add a class for caches endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run caches endpoint auto configuration tests without cache manager should have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when enabled property is false should  not have endpoint bean

2. Changes to package org.springframework.boot.actuate.autoconfigure.cassandra:  

2.1. Add a class for cassandra reactive health indicator auto configuration. It allows to:

	Get cassandra health indicator

2.2. Add a class for cassandra reactive health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

3. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry:  

3. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive:  

3. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet:  

3. Changes to package org.springframework.boot.actuate.autoconfigure.couchbase:  

3.1. Add a class for couchbase reactive health indicator auto configuration. It allows to:

	Handle couchbase reactive health indicator;
	Create health indicator

3.2. Add a class for couchbase reactive health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

4. Changes to package org.springframework.boot.actuate.autoconfigure.elasticsearch:  

4.1. Add a class for elastic search client health indicator auto configuration. It allows to:

	Instantiate elastic search client health indicator auto configuration  with elasticsearch health indicator properties;
	Handle elasticsearch health indicator;
	Create health indicator

4.2. Add a class for elastic search jest health indicator auto configuration. It allows to:

	Handle elasticsearch health indicator;
	Create health indicator

5. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint:  

5. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.condition:  

5. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.jmx:  

5. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web:  

5. Changes to package org.springframework.boot.actuate.autoconfigure.endpoint.web.jersey:  

5.1. Add a class for jersey web endpoint management context configuration tests. It allows to:

	Handle resource config customizer for endpoints is auto configured;
	Handle auto configuration is conditional on servlet web application;
	Handle auto configuration is conditional on class resource config

6. Changes to package org.springframework.boot.actuate.autoconfigure.health:  

6. Changes to package org.springframework.boot.actuate.autoconfigure.info:  

6. Changes to package org.springframework.boot.actuate.autoconfigure.integration:  

6.1. Add an object creator class for integration graph endpoint auto configuration. It allows to:

	Get integration graph endpoint;
	Get integration graph server

6.2. Add a class for integration graph endpoint auto configuration tests. It allows to:

	Run should have endpoint bean;
	Run when enabled property is false should  not have endpoint bean;
	Run when  not exposed should not have endpoint bean;
	Run when spring integration is  not enabled should not have endpoint bean

7. Changes to package org.springframework.boot.actuate.autoconfigure.integrationtest:  

7. Changes to package org.springframework.boot.actuate.autoconfigure.jdbc:  

7. Changes to package org.springframework.boot.actuate.autoconfigure.ldap:  

7. Changes to package org.springframework.boot.actuate.autoconfigure.metrics:  

7.1. Add an object creator class for jvm metrics auto configuration. It allows to:

	Get jvm gc metrics;
	Handle jvm memory metrics;
	Get jvm thread metrics;
	Get class loader metrics

7.2. Add an object creator class for kafka metrics auto configuration. It allows to:

	Kafka consumer metrics

7.3. Add an object creator class for system metrics auto configuration. It allows to:

	Handle uptime metrics;
	Get processor metrics;
	File descriptor metrics

8. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.amqp:  

8. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace:  

8.1. Add a class for dynatrace metrics export auto configuration. It allows to:

	Instantiate dynatrace metrics export auto configuration  with dynatrace properties;
	Handle dynatrace config;
	Handle dynatrace meter registry

8.2. Add a class for dynatrace properties. It allows to:

	Get api token;
	Set api token;
	Get device id;
	Set device id;
	Get technology type;
	Set technology type;
	Get uri;
	Set uri

8.3. Add a class for dynatrace properties config adapter. It allows to:

	Instantiate dynatrace properties config adapter  with dynatrace properties;
	Api token;
	Get device id;
	Get technology type;
	Get uri

8.4. Add a class for dynatrace properties config adapter tests. It allows to:

	When properties uri is set adapter uri returns it;
	When properties api token is set adapter api token returns it;
	When properties device id is set adapter device id returns it;
	When properties technology type is set adapter technology type returns it

8.5. Add a class for dynatrace properties tests. It allows to:

	Handle default values are consistent

9. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.elastic:  

9.1. Add a class for elastic metrics export auto configuration. It allows to:

	Instantiate elastic metrics export auto configuration  with elastic properties;
	Handle elastic config;
	Handle elastic meter registry

9.2. Add a class for elastic properties. It allows to:

	Get host;
	Set host;
	Get index;
	Set index;
	Get index date format;
	Set index date format;
	Get timestamp field name;
	Set timestamp field name;
	Check if elastic properties is auto create index;
	Set auto create index;
	Get user name;
	Set user name;
	Get password;
	Set password

9.3. Add a class for elastic properties config adapter. It allows to:

	Instantiate elastic properties config adapter  with elastic properties;
	Get host;
	Get index;
	Get index date format;
	Handle timestamp field name;
	Handle auto create index;
	Get user name;
	Get password

9.4. Add a class for elastic properties config adapter tests. It allows to:

	When properties hosts is set adapter hosts returns it;
	When properties index is set adapter index returns it;
	When properties index date format is set adapter index date format returns it;
	When properties timestamp field name is set adapter timestamp field name returns it;
	When properties auto create index is set adapter auto create index returns it;
	When properties user name is set adapter user name returns it;
	When properties password is set adapter password returns it

9.5. Add a class for elastic properties tests. It allows to:

	Handle default values are consistent

10. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.export.statsd:  

10. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.orm.jpa:  

10.1. Add a class for hibernate metrics auto configuration. It allows to:

	Convert bind entity manager factories;
	Convert bind entity manager factory;
	Get entity manager factory name

11. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.test:  

11. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.web.client:  

11.1. Add a class for http client metrics auto configuration. It allows to:

	Get metrics http client uri tag filter

11.2. Add an object creator class for rest template metrics configuration. It allows to:

	Rest template exchange tags provider;
	Get metrics rest template customizer

11.3. Add a class for rest template metrics configuration tests. It allows to:

	Rest template created  with builder is instrumented;
	Rest template can be customized  manually;
	Handle after max uris reached further uris are denied;
	Handle should not deny nor log if max uris is not reached;
	Handle backs off when rest template builder is missing;
	Get initialized meter registry;
	Validate rest template;
	Handle mock rest template

11.4. Add an object creator class for web client metrics configuration. It allows to:

	Get default web client exchange tags provider;
	Get metrics web client customizer

12. Changes to package org.springframework.boot.actuate.autoconfigure.metrics.web.reactive:  

12. Changes to package org.springframework.boot.actuate.autoconfigure.mongo:  

12.1. Add a class for mongo reactive health indicator auto configuration. It allows to:

	Mongo health indicator

12.2. Rename type MongoReactiveHealthIndicatorConfigurationTests with MongoReactiveHealthIndicatorAutoConfigurationTests

13. Changes to package org.springframework.boot.actuate.autoconfigure.redis:  

13.1. Add a class for redis reactive health indicator auto configuration. It allows to:

	Instantiate redis reactive health indicator auto configuration  with redis connection factories map;
	Handle redis health indicator

13.2. Add a class for redis reactive health indicator auto configuration tests. It allows to:

	Run should create indicator;
	Run when disabled should  not create indicator

14. Changes to package org.springframework.boot.actuate.autoconfigure.scheduling:  

14. Changes to package org.springframework.boot.actuate.autoconfigure.security.reactive:  

14.1. Add a class for reactive management web security auto configuration. It allows to:

	Get spring security filter chain

15. Changes to package org.springframework.boot.actuate.autoconfigure.security.servlet:  

15.1. Add a class for management web security auto configuration

15.2. Add a class for management web security configurer adapter. It allows to:

	Configure http security

16. Changes to package org.springframework.boot.actuate.autoconfigure.system:  

16. Changes to package org.springframework.boot.actuate.cache:  

16.1. Add a class for caches endpoint tests. It allows to:

	All caches  with single cache manager;
	All caches  with several cache managers;
	Get named cache with single cache manager;
	Get named cache with several cache managers;
	Get named cache with unknown cache;
	Get named cache with wrong cache manager;
	Get named cache with several cache managers with cache manager filter;
	Handle clear all caches;
	Handle clear cache;
	Handle clear cache with several cache managers;
	Handle clear cache with several cache managers with cache manager filter;
	Handle clear cache with unknown cache;
	Handle clear cache with unknown cache manager;
	Get cache manager;
	Handle mock cache

16.2. Add an object creator class for caches endpoint web extension. It allows to:

	Instantiate caches endpoint web extension  with delegate caches endpoint;
	Get cache;
	Handle clear cache

16.3. Add a class for non unique cache exception. It allows to:

	Instantiate non unique cache exception  with cache manager names collection;
	Get cache name;
	Get cache manager names

17. Changes to package org.springframework.boot.actuate.cassandra:  

17.1. Add a class for cassandra reactive health indicator. It allows to:

	Instantiate cassandra reactive health indicator  with reactive cassandra operations;
	Do health check

17.2. Add a class for cassandra reactive health indicator tests. It allows to:

	Handle test cassandra is up;
	Handle test cassandra is down

18. Changes to package org.springframework.boot.actuate.couchbase:  

18.1. Add a class for couchbase reactive health indicator. It allows to:

	Instantiate couchbase reactive health indicator  with cluster;
	Do health check

18.2. Add a class for couchbase reactive health indicator tests. It allows to:

	Handle couchbase cluster is up;
	Handle couchbase cluster is down

19. Changes to package org.springframework.boot.actuate.endpoint.annotation:  

19. Changes to package org.springframework.boot.actuate.endpoint.invoke.reflect:  

19. Changes to package org.springframework.boot.actuate.endpoint.invoker.cache:  

19. Changes to package org.springframework.boot.actuate.endpoint.jmx:  

19. Changes to package org.springframework.boot.actuate.endpoint.web:  

19. Changes to package org.springframework.boot.actuate.endpoint.web.servlet:  

19. Changes to package org.springframework.boot.actuate.health:  

19.1. Add a class for default health indicator registry. It allows to:

	Instantiate default health indicator registry;
	Instantiate default health indicator registry  with health indicators map;
	Register health indicator;
	Get unregister;
	Get default health indicator registry;

19.2. Add a class for default health indicator registry tests. It allows to:

	Set default health indicator registry tests;
	Register default health indicator registry tests;
	Register default health indicator registry tests already used name;
	Handle unregister;
	Handle unregister unknown;
	Get all is A snapshot;
	Get all is immutable

19.3. Add a class for default reactive health indicator registry. It allows to:

	Instantiate default reactive health indicator registry;
	Instantiate default reactive health indicator registry  with health indicators map;
	Register reactive health indicator;
	Get unregister;
	Get default reactive health indicator registry;

19.4. Add a class for default reactive health indicator registry tests. It allows to:

	Set default reactive health indicator registry tests;
	Register default reactive health indicator registry tests;
	Register default reactive health indicator registry tests already used name;
	Handle unregister;
	Handle unregister unknown;
	Get all is A snapshot;
	Get all is immutable

19.5. Add an interface declaration  for health indicator registry. It allows to:

	Register health indicator;
	Get unregister;
	Get health indicator registry;

19.6. Add a class for health indicator registry factory. It allows to:

	Instantiate health indicator registry factory  with health indicator name factory function;
	Instantiate health indicator registry factory;
	Create health indicator registry;
	Initialize registry

19.7. Add a class for health web endpoint response mapper tests. It allows to:

	Map details  with disable details does not invoke supplier;
	Map details  with unauthorized user does not invoke supplier;
	Map details  with authorized user invoke supplier;
	Map details  with unavailable health;
	Handle mock supplier;
	Handle mock security context;
	Create mapper

19.8. Add an interface declaration  for reactive health indicator registry. It allows to:

	Register reactive health indicator;
	Get unregister;
	Get reactive health indicator registry;

19.9. Add a class for reactive health indicator registry factory. It allows to:

	Instantiate reactive health indicator registry factory  with health indicator name factory function;
	Instantiate reactive health indicator registry factory;
	Create reactive health indicator registry;
	Initialize registry;
	Merge reactive health indicators map

19.10. Add a class for reactive health indicator registry factory tests. It allows to:

	Handle default health indicator name factory;
	Handle health indicator is adapted

20. Changes to package org.springframework.boot.actuate.info:  

20. Changes to package org.springframework.boot.actuate.integration:  

20.1. Add a class for integration graph endpoint. It allows to:

	Instantiate integration graph endpoint  with integration graph server;
	Get graph;
	Rebuild integration graph endpoint

20.2. Add a class for integration graph endpoint tests. It allows to:

	Set integration graph endpoint tests;
	Read operation should return graph;
	Write operation should rebuild graph

21. Changes to package org.springframework.boot.actuate.metrics:  

21. Changes to package org.springframework.boot.actuate.metrics.export.prometheus:  

21.1. Add a class for prometheus push gateway manager tests. It allows to:

	Handle setup;
	Create when push gateway is null throws exception;
	Create when collector registry is null throws exception;
	Create when scheduler is null throws exception;
	Create when push rate is null throws exception;
	Create when job is empty throws exception;
	Create should schedule push  as fixed rate;
	Handle shutdown when owns scheduler does shutdown scheduler;
	Handle shutdown when does not own scheduler does not shutdown scheduler;
	Handle shutdown when shutdown operation is push performs push on shutdown;
	Handle shutdown when shutdown operation is delete performs delete on shutdown;
	Handle shutdown when shutdown operation is none does nothing;
	Push when unknown host exception is thrown does shutdown;
	Push does  not throw exception;
	Handle mock scheduler

22. Changes to package org.springframework.boot.actuate.metrics.web.client:  

22. Changes to package org.springframework.boot.actuate.metrics.web.reactive.client:  

22.1. Add a class for default web client exchange tags provider. It allows to:

	Get tags

22.2. Add a class for default web client exchange tags provider tests. It allows to:

	Handle setup;
	Handle tags should be populated;
	Handle tags when no uri template should provide uri path;
	Handle tags when io exception should return io error status;
	Handle tags when exception should return client error status

22.3. Add a class for metrics web client customizer. It allows to:

	Instantiate metrics web client customizer  with meter registry, tags provider and tags provider;
	Customize web client builder

22.4. Add a class for metrics web client customizer tests. It allows to:

	Handle setup;
	Customize should add filter function;
	Customize should  not add duplicate filter function

22.5. Add a class for metrics web client filter function. It allows to:

	Instantiate metrics web client filter function  with meter registry, tags provider and tags provider;
	Get filter

22.6. Add a class for metrics web client filter function tests. It allows to:

	Handle setup;
	Handle filter should record timer;
	Handle filter when uri template present should record timer;
	Handle filter when io exception thrown should record timer;
	Handle filter when exception thrown should record timer;
	Handle filter when exception and retry should not cumulate record time

22.7. Add a class for web client exchange tags. It allows to:

	Instantiate web client exchange tags;
	Get method;
	Get uri;
	Extract path;
	Get status;
	Get client name;
	Get outcome

22.8. Add an interface declaration  for web client exchange tags provider. It allows to:

	Get tags

22.9. Add a class for web client exchange tags tests. It allows to:

	Handle setup;
	Handle method;
	Handle uri when absolute template is available should return template;
	Handle uri when relative template is available should return template;
	Handle uri when template is missing should return path;
	Handle client name;
	Handle status;
	Handle status when IO exception;
	Handle status when client exception;
	Handle outcome tag is unknown when response is null;
	Handle outcome tag is informational when response is 1 xx;
	Convert outcome tag is success when response is;
	Handle outcome tag is redirection when response is 3 xx;
	Handle outcome tag is client error when response is 4 xx;
	Handle outcome tag is server error when response is 5 xx;
	Handle outcome tag is unknown when response status is unknown

23. Changes to package org.springframework.boot.actuate.metrics.web.reactive.server:  

23. Changes to package org.springframework.boot.actuate.metrics.web.servlet:  

23. Changes to package org.springframework.boot.actuate.session:  

23. Changes to package org.springframework.boot.actuate.system:  

23. Changes to package org.springframework.boot.autoconfigure:  

23. Changes to package org.springframework.boot.autoconfigure.admin:  

23. Changes to package org.springframework.boot.autoconfigure.amqp:  

23.1. Add an interface declaration  for rabbit retry template customizer. It allows to:

	Customize target

23.2. Add a class for retry template factory. It allows to:

	Instantiate retry template factory  with customizers list;
	Create retry template

24. Changes to package org.springframework.boot.autoconfigure.batch:  

24. Changes to package org.springframework.boot.autoconfigure.cassandra:  

24. Changes to package org.springframework.boot.autoconfigure.cloud:  

24.1. Add a class for cloud service connectors auto configuration

24.2. Add a class for cloud service connectors auto configuration tests. It allows to:

	Handle test order

25. Changes to package org.springframework.boot.autoconfigure.condition:  

25.1. Add a class for filtering spring boot condition. It allows to:

	Match auto configuration metadata;
	Get outcomes;
	Set bean factory;
	Get bean factory;
	Get bean class loader;
	Set bean class loader;
	Get filter;
	Handle matches;
	Check if filtering spring boot condition is present;
	Process filtering spring boot condition filtering spring boot condition for name

26. Changes to package org.springframework.boot.autoconfigure.context:  

26. Changes to package org.springframework.boot.autoconfigure.couchbase:  

26.1. Add a class for couchbase configuration. It allows to:

	Instantiate couchbase configuration  with couchbase properties;
	Handle couchbase environment;
	Handle couchbase cluster;
	Determine bootstrap hosts;
	Handle couchbase cluster info;
	Handle couchbase client;
	Initialize environment builder;
	Get query service config;
	Get view service config

27. Changes to package org.springframework.boot.autoconfigure.data:  

27. Changes to package org.springframework.boot.autoconfigure.data.couchbase:  

27. Changes to package org.springframework.boot.autoconfigure.data.jdbc.city:  

27.1. Add a class for city. It allows to:

	Instantiate city;
	Get name;
	Get state;
	Get country;
	Get map;
	Convert city to string

27.2. Add an interface declaration  for city repository

28. Changes to package org.springframework.boot.autoconfigure.data.mongo:  

28.1. Add a class for mongo data configuration. It allows to:

	Get mongo mapping context;
	Mongo custom conversions

29. Changes to package org.springframework.boot.autoconfigure.data.neo4j:  

29.1. Add an object creator class for neo 4 j bookmark management configuration. It allows to:

	Get request scoped bookmark manager;
	Handle singleton scoped bookmark manager

30. Changes to package org.springframework.boot.autoconfigure.data.redis:  

30. Changes to package org.springframework.boot.autoconfigure.data.rest:  

30. Changes to package org.springframework.boot.autoconfigure.elasticsearch.jest:  

30. Changes to package org.springframework.boot.autoconfigure.elasticsearch.rest:  

30.1. Add an interface declaration  for rest client builder customizer. It allows to:

	Customize rest client builder

30.2. Add a class for rest client properties. It allows to:

	Get uris;
	Set uris;
	Get username;
	Set username;
	Get password;
	Set password

31. Changes to package org.springframework.boot.autoconfigure.flyway:  

31. Changes to package org.springframework.boot.autoconfigure.h2:  

31. Changes to package org.springframework.boot.autoconfigure.influx:  

31.1. Add an interface declaration  for influx db ok http client builder provider

32. Changes to package org.springframework.boot.autoconfigure.jackson:  

32. Changes to package org.springframework.boot.autoconfigure.jdbc:  

32. Changes to package org.springframework.boot.autoconfigure.jms:  

32.1. Add a class for jms pool connection factory factory. It allows to:

	Instantiate jms pool connection factory factory  with jms pool connection factory properties;
	Create pooled connection factory

32.2. Add a class for jms pool connection factory properties. It allows to:

	Check if jms pool connection factory properties is enabled;
	Enabled jms pool connection factory properties;
	Check if jms pool connection factory properties is block if full;
	Set block  if full;
	Get block  if full timeout;
	Set block  if full timeout;
	Get idle timeout;
	Set idle timeout;
	Get max connections;
	Set max connections;
	Get max sessions  per connection;
	Set max sessions  per connection;
	Get time  between expiration check;
	Set time  between expiration check;
	Check if jms pool connection factory properties is use anonymous producers;
	Get set use anonymous producers

33. Changes to package org.springframework.boot.autoconfigure.jms.activemq:  

33. Changes to package org.springframework.boot.autoconfigure.jms.artemis:  

33. Changes to package org.springframework.boot.autoconfigure.jmx:  

33. Changes to package org.springframework.boot.autoconfigure.kafka:  

33. Changes to package org.springframework.boot.autoconfigure.ldap:  

33. Changes to package org.springframework.boot.autoconfigure.liquibase:  

33. Changes to package org.springframework.boot.autoconfigure.mail:  

33. Changes to package org.springframework.boot.autoconfigure.mongo:  

33. Changes to package org.springframework.boot.autoconfigure.orm.jpa:  

33.1. Add an interface declaration  for entity manager factory builder customizer. It allows to:

	Customize entity manager factory builder

34. Changes to package org.springframework.boot.autoconfigure.orm.jpa.test:  

34.1. Add a class for city listener. It allows to:

	Instantiate city listener;
	Instantiate city listener  with configurable bean factory;
	Post load

35. Changes to package org.springframework.boot.autoconfigure.security:  

35. Changes to package org.springframework.boot.autoconfigure.security.oauth2.client:  

35.1. Add a class for clients configured condition. It allows to:

	Get match outcome;
	Get registrations

36. Changes to package org.springframework.boot.autoconfigure.security.oauth2.client.servlet:  

36.1. Rename type OAuth2ClientAutoConfiguration with OAuth2ClientAutoConfiguration

36.2. Add an object creator class for o auth 2 client registration repository configuration. It allows to:

	Get client registration repository

36.3. Rename type OAuth2ClientRegistrationRepositoryConfigurationTests with OAuth2ClientRegistrationRepositoryConfigurationTests

37. Changes to package org.springframework.boot.autoconfigure.security.oauth2.resource:  

37.1. Add a class for issuer uri condition. It allows to:

	Get match outcome

38. Changes to package org.springframework.boot.autoconfigure.security.oauth2.resource.reactive:  

38.1. Add a class for reactive O auth 2 resource server auto configuration

38.2. Add a class for reactive O auth 2 resource server jwk configuration. It allows to:

	Instantiate reactive O auth 2 resource server jwk configuration  with O auth 2 resource server properties;
	Get jwt decoder;
	Get jwt decoder by public key value;
	Get key spec;
	Get jwt decoder by issuer uri

38.3. Add a class for reactive O auth 2 resource server web security configuration. It allows to:

	Get spring security filter chain

39. Changes to package org.springframework.boot.autoconfigure.security.oauth2.resource.servlet:  

39.1. Add a class for o auth 2 resource server auto configuration

40. Changes to package org.springframework.boot.autoconfigure.session:  

40. Changes to package org.springframework.boot.autoconfigure.solr:  

40. Changes to package org.springframework.boot.autoconfigure.task:  

40.1. Add a class for task execution auto configuration. It allows to:

	Get task executor builder;
	Get application task executor

40.2. Add a class for task scheduling auto configuration. It allows to:

	Get task scheduler;
	Get task scheduler builder

41. Changes to package org.springframework.boot.autoconfigure.template:  

41. Changes to package org.springframework.boot.autoconfigure.transaction.jta:  

41. Changes to package org.springframework.boot.autoconfigure.web:  

41. Changes to package org.springframework.boot.autoconfigure.web.embedded:  

41.1. Add a class for netty web server factory customizer. It allows to:

	Instantiate netty web server factory customizer  with environment, server properties and server properties;
	Get order;
	Customize netty reactive web server factory;
	Get or deduce use  forward headers;
	Customize max http header size;
	Get connection time  out customizer

41.2. Add a class for netty web server factory customizer tests. It allows to:

	Handle setup;
	Deduce use  forward headers;
	Handle default use forward headers;
	Get set use forward headers

42. Changes to package org.springframework.boot.autoconfigure.web.reactive:  

42.1. Add a class for resource chain resource handler registration customizer. It allows to:

	Customize resource handler registration;
	Configure resource chain;
	Get version resource resolver

42.2. Add an interface declaration  for resource handler registration customizer. It allows to:

	Customize resource handler registration

42.3. Add an interface declaration  for web flux registrations. It allows to:

	Get request mapping handler mapping;
	Get request mapping handler adapter

43. Changes to package org.springframework.boot.autoconfigure.web.reactive.error:  

43. Changes to package org.springframework.boot.autoconfigure.web.reactive.function.client:  

43.1. Add a class for client http connector auto configuration. It allows to:

	Get client connector customizer

44. Changes to package org.springframework.boot.autoconfigure.web.servlet:  

44.1. Add a class for web mvc properties tests. It allows to:

	Handle servlet path when ends with slash has valid mapping and prefix;
	Handle servlet path when does not end with slash has valid mapping and prefix;
	Handle servlet path when has wildcard throws exception;
	Handle bind;

45. Changes to package org.springframework.boot.autoconfigure.web.servlet.error:  

45. Changes to package org.springframework.boot.autoconfigure.webservices:  

45. Changes to package org.springframework.boot.autoconfigure.webservices.client:  

45.1. Add a class for web service template auto configuration. It allows to:

	Get web service template builder

46. Changes to package org.springframework.boot.autoconfigureprocessor:  

46.1. Add a class for elements. It allows to:

	Instantiate elements;
	Get qualified name;
	Get enclosing type element

46.2. Add a class for test auto configure annotation processor. It allows to:

	Instantiate test auto configure annotation processor  with output location file;
	Add annotations;
	Put annotations map;
	Get written properties

46.3. Add a class for test on bean with name class configuration

47. Changes to package org.springframework.boot.builder:  

47. Changes to package org.springframework.boot.cli:  

47. Changes to package org.springframework.boot.cli.command:  

47. Changes to package org.springframework.boot.cli.command.init:  

47. Changes to package org.springframework.boot.cli.command.run:  

47. Changes to package org.springframework.boot.cli.compiler:  

47. Changes to package org.springframework.boot.cli.compiler.grape:  

47. Changes to package org.springframework.boot.cloud:  

47. Changes to package org.springframework.boot.configurationmetadata:  

47. Changes to package org.springframework.boot.configurationprocessor:  

47. Changes to package org.springframework.boot.configurationprocessor.json:  

47. Changes to package org.springframework.boot.configurationprocessor.metadata:  

47. Changes to package org.springframework.boot.configurationsample.fieldvalues:  

47. Changes to package org.springframework.boot.configurationsample.lombok:  

47. Changes to package org.springframework.boot.context:  

47. Changes to package org.springframework.boot.context.event:  

47.1. Add a class for application context initialized event. It allows to:

	Instantiate application context initialized event  with spring application, configurable application context and configurable application context;
	Get application context

48. Changes to package org.springframework.boot.context.logging:  

48. Changes to package org.springframework.boot.context.properties.bind:  

48. Changes to package org.springframework.boot.context.properties.bind.validation:  

48. Changes to package org.springframework.boot.context.properties.source:  

48. Changes to package org.springframework.boot.convert:  

48.1. Add a class for mock data size type descriptor. It allows to:

	Instantiate mock data size type descriptor;
	Get data unit

48.2. Add a class for number to data size converter. It allows to:

	Get convertible types;
	Convert source type descriptor

48.3. Add a class for number to data size converter tests. It allows to:

	Instantiate number to data size converter tests  with conversion service;
	Convert when simple  without suffix should return data size;
	Convert when simple  without suffix but with annotation should return data size;
	Convert source integer;
	Get conversion services

48.4. Add a class for string to data size converter. It allows to:

	Get convertible types;
	Convert source type descriptor;
	Get data unit;
	Convert data unit

48.5. Add a class for string to data size converter tests. It allows to:

	Instantiate string to data size converter tests  with conversion service;
	Convert when simple bytes should return data size;
	Convert when simple kilobytes should return data size;
	Convert when simple megabytes should return data size;
	Convert when simple gigabytes should return data size;
	Convert when simple terabytes should return data size;
	Convert when simple  without suffix should return data size;
	Convert when simple  without suffix but with annotation should return data size;
	Convert when bad format should throw exception;
	Convert when empty should return null;
	Convert string to data size converter tests;
	Convert data unit;
	Get conversion services

49. Changes to package org.springframework.boot.devtools.autoconfigure:  

49. Changes to package org.springframework.boot.devtools.classpath:  

49. Changes to package org.springframework.boot.devtools.env:  

49. Changes to package org.springframework.boot.devtools.filewatch:  

49. Changes to package org.springframework.boot.devtools.livereload:  

49. Changes to package org.springframework.boot.devtools.remote.client:  

49. Changes to package org.springframework.boot.devtools.remote.server:  

49. Changes to package org.springframework.boot.devtools.restart:  

49. Changes to package org.springframework.boot.devtools.restart.classloader:  

49. Changes to package org.springframework.boot.devtools.restart.server:  

49. Changes to package org.springframework.boot.devtools.settings:  

49. Changes to package org.springframework.boot.devtools.tunnel.payload:  

49. Changes to package org.springframework.boot.devtools.tunnel.server:  

49. Changes to package org.springframework.boot.diagnostics.analyzer:  

49.1. Add a class for bean definition override failure analyzer. It allows to:

	Analyze root failure throwable;
	Get description

50. Changes to package org.springframework.boot.docs.context.properties.bind:  

50.1. Add a class for app io properties. It allows to:

	Get buffer size;
	Set buffer size;
	Get size threshold;
	Set size threshold

51. Changes to package org.springframework.boot.env:  

51. Changes to package org.springframework.boot.gradle.docs:  

51. Changes to package org.springframework.boot.gradle.plugin:  

51. Changes to package org.springframework.boot.gradle.tasks.bundling:  

51.1. Add a class for launch script configuration tests. It allows to:

	Set launch script configuration tests;
	Init info provides uses archive base name  by default;
	Init info short description uses description  by default;
	Init info short description uses archive base name when description is null;
	Init info short description uses single line version  of multi line project description;
	Init info description uses archive base name when description is null;
	Init info description uses project description  by default;
	Init info description uses  correctly formatted multi line project description

52. Changes to package org.springframework.boot.gradle.testkit:  

52. Changes to package org.springframework.boot.jdbc:  

52. Changes to package org.springframework.boot.json:  

52. Changes to package org.springframework.boot.loader.archive:  

52. Changes to package org.springframework.boot.loader.data:  

52. Changes to package org.springframework.boot.loader.jar:  

52. Changes to package org.springframework.boot.loader.tools:  

52. Changes to package org.springframework.boot.logging:  

52. Changes to package org.springframework.boot.logging.logback:  

52. Changes to package org.springframework.boot.maven:  

52.1. Add a class for env variables. It allows to:

	Instantiate env variables  with variables map;
	Parse env variables;
	Get value;
	Process env variables env variables as map;
	Process env variables env variables as array

52.2. Add a class for env variables tests. It allows to:

	Process env variables tests env variables tests as null;
	Process env variables tests env variables tests as array;
	Process env variables tests env variables tests as map;
	Get test args

52.3. Add a class for system property formatter tests. It allows to:

	Parse empty;
	Parse system property formatter tests only key;
	Parse key  with value;
	Parse key  with empty value;
	Parse key  with only spaces

53. Changes to package org.springframework.boot.origin:  

53. Changes to package org.springframework.boot.system:  

53. Changes to package org.springframework.boot.task:  

53.1. Add a class for task executor builder. It allows to:

	Instantiate task executor builder;
	Instantiate task executor builder  with queue capacity integer, core pool size integer, max pool size integer, allow core thread time out boolean, keep alive duration, await termination boolean, await termination period duration, task decorator, customizers set and customizers set;
	Queue capacity;
	Handle core pool size;
	Max pool size;
	Allow core thread time  out;
	Keep alive;
	Await termination;
	Await termination period;
	Get thread name prefix;
	Get task decorator;
	Get customizers;
	Handle additional customizers;
	Build task executor builder;
	Build task executor class;
	Configure task executor;
	Append set

53.2. Add a class for task executor builder tests. It allows to:

	Handle pool settings should apply;
	Await termination should apply;
	Await termination period should apply;
	Handle thread name prefix should apply;
	Handle task decorator should apply;
	Handle customizers when customizers are null should throw exception;
	Handle customizers collection when customizers are null should throw exception;
	Handle customizers should apply;
	Handle customizers should be applied last;
	Handle customizers should replace existing;
	Handle additional customizers when customizers are null should throw exception;
	Handle additional customizers collection when customizers are null should throw exception;
	Handle additional customizers should add to existing

53.3. Add an interface declaration  for task executor customizer. It allows to:

	Customize thread pool task executor

53.4. Add a class for task scheduler builder. It allows to:

	Instantiate task scheduler builder;
	Instantiate task scheduler builder  with pool size integer, await termination boolean, await termination period duration, task scheduler customizers set and task scheduler customizers set;
	Get pool size;
	Await termination;
	Await termination period;
	Get thread name prefix;
	Get customizers;
	Handle additional customizers;
	Build task scheduler builder;
	Configure task scheduler;
	Append set

53.5. Add a class for task scheduler builder tests. It allows to:

	Handle pool settings should apply;
	Await termination should apply;
	Await termination period should apply;
	Handle thread name prefix should apply;
	Handle customizers when customizers are null should throw exception;
	Handle customizers collection when customizers are null should throw exception;
	Handle customizers should apply;
	Handle customizers should be applied last;
	Handle customizers should replace existing;
	Handle additional customizers when customizers are null should throw exception;
	Handle additional customizers collection when customizers are null should throw exception;
	Handle additional customizers should add to existing

53.6. Add an interface declaration  for task scheduler customizer. It allows to:

	Customize thread pool task scheduler

54. Changes to package org.springframework.boot.test.autoconfigure.data.jdbc:  

54.1. Add a class for data jdbc test context bootstrapper. It allows to:

	Get properties

54.2. Add a class for data jdbc test integration tests. It allows to:

	Handle test repository;
	Check if data jdbc test integration tests replaces defined data source with embedded default;
	Get did not inject example component;
	Handle flyway auto configuration was imported;
	Handle liquibase auto configuration was imported

54.3. Add a class for data jdbc test properties integration tests. It allows to:

	Handle environment with new profile

54.4. Add a class for data jdbc type exclude filter. It allows to:

	Instantiate data jdbc type exclude filter  with test class;
	Check if data jdbc type exclude filter has annotation;
	Get filters;
	Check if data jdbc type exclude filter is use default filters;
	Get default includes;
	Get component includes

54.5. Add a class for example component

54.6. Add an object creator class for example data jdbc application. It allows to:

	Get data source

54.7. Add a class for example entity. It allows to:

	Instantiate example entity;
	Get name;
	Get reference

54.8. Add an interface declaration  for example repository

55. Changes to package org.springframework.boot.test.autoconfigure.data.ldap:  

55.1. Add a class for data ldap test context bootstrapper. It allows to:

	Get properties

55.2. Add a class for data ldap test properties integration tests. It allows to:

	Handle environment with new profile

56. Changes to package org.springframework.boot.test.autoconfigure.data.mongo:  

56.1. Add a class for data mongo test context bootstrapper. It allows to:

	Get properties

56.2. Add a class for data mongo test properties integration tests. It allows to:

	Handle environment with new profile

57. Changes to package org.springframework.boot.test.autoconfigure.data.neo4j:  

57.1. Add a class for data neo 4 j test context bootstrapper. It allows to:

	Get properties

58. Changes to package org.springframework.boot.test.autoconfigure.data.redis:  

58.1. Add a class for data redis test context bootstrapper. It allows to:

	Get properties

59. Changes to package org.springframework.boot.test.autoconfigure.jdbc:  

59.1. Add a class for jdbc test context bootstrapper. It allows to:

	Get properties

59.2. Add a class for jdbc test properties integration tests. It allows to:

	Handle environment with new profile

60. Changes to package org.springframework.boot.test.autoconfigure.jooq:  

60.1. Add a class for jooq test context bootstrapper. It allows to:

	Get properties

60.2. Add a class for jooq test properties integration tests. It allows to:

	Handle environment with new profile

61. Changes to package org.springframework.boot.test.autoconfigure.json:  

61.1. Add a class for json test context bootstrapper. It allows to:

	Get properties

61.2. Add a class for json test properties integration tests. It allows to:

	Handle environment with new profile

62. Changes to package org.springframework.boot.test.autoconfigure.orm.jpa:  

62.1. Add a class for data jpa test context bootstrapper. It allows to:

	Get properties

62.2. Add a class for data jpa test properties integration tests. It allows to:

	Handle environment with new profile

63. Changes to package org.springframework.boot.test.autoconfigure.override:  

63.1. Add a class for override auto configuration enabled false integration tests. It allows to:

	Handle disabled auto configuration

63.2. Add a class for override auto configuration enabled true integration tests. It allows to:

	Handle auto configured context

63.3. Add a class for override auto configuration spring boot application

64. Changes to package org.springframework.boot.test.autoconfigure.restdocs:  

64. Changes to package org.springframework.boot.test.autoconfigure.web.client:  

64.1. Add a class for rest client test context bootstrapper. It allows to:

	Get properties

64.2. Add a class for rest client test properties integration tests. It allows to:

	Handle environment with new profile

65. Changes to package org.springframework.boot.test.autoconfigure.web.reactive:  

65.1. Add a class for web flux test properties integration tests. It allows to:

	Handle environment with new profile

65.2. Add a class for web test client security configuration. It allows to:

	Handle mock server configurer

66. Changes to package org.springframework.boot.test.autoconfigure.web.reactive.webclient:  

66.1. Add a class for example web exception handler. It allows to:

	Instantiate example web exception handler  with fallback error web exception handler;
	Handle server web exchange

67. Changes to package org.springframework.boot.test.autoconfigure.web.servlet:  

67.1. Add a class for mock mvc auto configuration tests. It allows to:

	Handle registers dispatcher servlet from mock mvc

67.2. Add a class for web mvc test properties integration tests. It allows to:

	Handle environment with new profile

68. Changes to package org.springframework.boot.test.autoconfigure.web.servlet.mockmvc:  

68.1. Add a class for web mvc test pageable integration tests. It allows to:

	Should support pageable

69. Changes to package org.springframework.boot.test.context:  

69.1. Add a class for annotated class finder tests. It allows to:

	Find annotated class finder tests from class when source is null should throw exception;
	Find annotated class finder tests from package when source is null should throw exception;
	Find annotated class finder tests from package when no configuration found should return null;
	Find annotated class finder tests from class when configuration is found should return configuration;
	Find annotated class finder tests from package when configuration is found should return configuration

70. Changes to package org.springframework.boot.test.context.assertj:  

70. Changes to package org.springframework.boot.test.context.example:  

70. Changes to package org.springframework.boot.test.context.example.scan:  

70. Changes to package org.springframework.boot.test.context.example.scan.sub:  

70. Changes to package org.springframework.boot.test.json:  

70. Changes to package org.springframework.boot.test.mock.mockito:  

70. Changes to package org.springframework.boot.test.web:  

70.1. Add a class for spring boot test random port environment post processor. It allows to:

	Post process environment;
	Check if spring boot test random port environment post processor is test server port fixed;
	Check if spring boot test random port environment post processor is test management port configured;
	Get property  as integer;
	Get resolved value  if possible

70.2. Add a class for spring boot test random port environment post processor tests. It allows to:

	Handle setup;
	Post process when server and management port is zero  in test property source;
	Post process when server port and management port is zero  in different property sources;
	Post process when test server and test management port are  non zero;
	Post process when test server port is zero and test management port is  not null;
	Post process when test server port is zero and management port is null;
	Post process when test server port is zero and management port is  not null and same in production;
	Post process when test server port is zero and management port is  not null and default same in production;
	Post process when test server port is zero and management port is  not null and different in production;
	Post process when test server port is zero and management port minus one;
	Post process when test server port is zero and management port is an integer;
	Post process when management server port placeholder present should resolve placeholder;
	Post process when management server port placeholder absent should fail;
	Post process when server port placeholder present should resolve placeholder;
	Post process when server port placeholder absent should fail;
	Add test property source

71. Changes to package org.springframework.boot.test.web.client:  

71. Changes to package org.springframework.boot.test.web.htmlunit:  

71. Changes to package org.springframework.boot.testsupport.assertj:  

71. Changes to package org.springframework.boot.testsupport.runner.classpath:  

71. Changes to package org.springframework.boot.validation:  

71. Changes to package org.springframework.boot.web.client:  

71.1. Add an object creator class for client http request factory supplier. It allows to:

	Get client http request factory supplier

72. Changes to package org.springframework.boot.web.embedded.jetty:  

72. Changes to package org.springframework.boot.web.embedded.netty:  

72. Changes to package org.springframework.boot.web.embedded.tomcat:  

72. Changes to package org.springframework.boot.web.embedded.undertow:  

72. Changes to package org.springframework.boot.web.server:  

72. Changes to package org.springframework.boot.web.servlet:  

72. Changes to package org.springframework.boot.web.servlet.filter:  

72.1. Add a class for ordered form content filter. It allows to:

	Get order;
	Get set order

73. Changes to package org.springframework.boot.webservices.client:  

73.1. Add a class for http web service message sender builder ok http 3 integration tests. It allows to:

	Build use ok http 3  by default;
	Build http web service message sender builder ok http 3 integration tests with custom timeouts;
	Assert ok http 3 request factory

73.2. Add a class for http web service message sender builder simple integration tests. It allows to:

	Build use use simple client  by default;
	Build http web service message sender builder simple integration tests with custom timeouts;
	Assert simple client request factory

73.3. Add a class for http web service message sender builder tests. It allows to:

	Build http web service message sender builder tests with request factory supplier;
	Build http web service message sender builder tests with read and connect timeout;
	Build uses http components  by default;
	Build http web service message sender builder

73.4. Add a class for web service template builder tests. It allows to:

	Handle setup;
	Create web service template builder tests with customizers should apply customizers;
	Build should detect http message sender;
	Detect http message sender when false should disable detection;
	Handle message senders when senders are are null should throw exception;
	Handle message senders collection when senders are are null should throw exception;
	Handle message senders should apply;
	Handle message senders should replace existing;
	Handle additional message senders when senders are are null should throw exception;
	Handle additional message senders collection when senders are are null should throw exception;
	Handle additional message senders should add to existing;
	Handle additional message senders should keep detected http message sender;
	Handle interceptors when interceptors are null should throw exception;
	Handle interceptors collection when interceptors are null should throw exception;
	Handle interceptors should apply;
	Handle interceptors should replace existing;
	Handle additional interceptors when interceptors are null should throw exception;
	Handle additional interceptors collection when interceptors are null should throw exception;
	Handle additional interceptors should add to existing;
	Handle additional interceptors should add to existing web service template;
	Handle customizers when customizers are null should throw exception;
	Handle customizers collection when customizers are null should throw exception;
	Handle customizers should apply;
	Handle customizers should be applied last;
	Handle customizers should replace existing;
	Handle additional customizers when customizers are null should throw exception;
	Handle additional customizers collection when customizers are null should throw exception;
	Handle additional customizers should add to existing;
	Set check connection  for fault;
	Set check connection  for error;
	Set transformer factory class;
	Set web service message factory;
	Set marshaller;
	Set unmarshaller;
	Set fault message resolver;
	Set default uri;
	Set destination provider;
	Assert http components request factory

73.5. Add an interface declaration  for web service template customizer. It allows to:

	Customize web service template

74. Changes to package org.test:  

74.1. Add a class for sample application. It allows to:

	Handle main

75. Changes to package sample:  

75. Changes to package sample.actuator:  

75. Changes to package sample.data.jdbc:  

75.1. Add a class for customer. It allows to:

	Get id;
	Set id;
	Get customer first name;
	Set first name;
	Get date  of birth;
	Set date  of birth

75.2. Add an interface declaration  for customer repository. It allows to:

	Find customer repository by name

75.3. Add a class for customer repository integration tests. It allows to:

	Find all customers;
	Find customer repository integration tests by name with match;
	Find customer repository integration tests by name with no match

75.4. Add a class for sample controller. It allows to:

	Instantiate sample controller  with customer repository;
	Get customers

75.5. Add a class for sample data jdbc application. It allows to:

	Handle main

75.6. Add a class for sample data jdbc application tests. It allows to:

	Set sample data jdbc application tests;
	Handle test customers

76. Changes to package sample.jooq.domain:  

76. Changes to package sample.jooq.util:  

76. Changes to package sample.kafka:  

76. Changes to package sample.oauth2.client:  

76.1. Add a class for example controller. It allows to:

	Email principal

76.2. Add a class for sample reactive O auth 2 client application. It allows to:

	Handle main

76.3. Add a class for sample reactive O auth 2 client application tests. It allows to:

	Convert everything should redirect;
	Convert login should have both O auth clients

77. Changes to package sample.oauth2.resource:  

77.1. Add a class for example controller. It allows to:

	Get index

77.2. Add a class for sample oauth 2 resource server application. It allows to:

	Handle main

77.3. Add a class for sample oauth 2 resource server application tests. It allows to:

	Handle setup;
	Handle shutdown;
	Process sample oauth 2 resource server application tests sample oauth 2 resource server application tests with valid bearer token should allow access;
	Process sample oauth 2 resource server application tests sample oauth 2 resource server application tests with no bearer token should not allow access;
	Handle mock response

77.4. Add a class for sample reactive O auth 2 resource server application. It allows to:

	Handle main

77.5. Add a class for sample reactive O auth 2 resource server application tests. It allows to:

	Handle setup;
	Handle shutdown;
	Get when valid token should be ok;
	Get when no token should be unauthorized;
	Handle mock response

78. Changes to package sample.propertyvalidation:  

78. Changes to package sample.secure.webflux:  

78. Changes to package sample.simple:  

78. Changes to package sample.simple.service:  

78. Changes to package sample.test.domain:  

78. Changes to package sample.test.service:  

78. Changes to package sample.test.web:  

