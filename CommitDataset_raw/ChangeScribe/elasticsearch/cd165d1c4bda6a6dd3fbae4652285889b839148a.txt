BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (.editorconfig, .gitignore, .projectile, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package hdfs:  

1.1. Add a class for mini HDFS. It allows to:

	Handle main

2. Changes to package oldes:  

2.1. Add a class for old elasticsearch. It allows to:

	Handle main

3. Changes to package org.apache.lucene.analysis.miscellaneous:  

3.1. Add a class for de duplicating token filter tests. It allows to:

	Handle test simple;
	Create components;
	Handle test hit count limits;
	Handle test tagged frequencies;

3.2. Add an interface declaration  for disable graph attribute

3.3. Add a class for disable graph attribute impl. It allows to:

	Instantiate disable graph attribute impl;
	Handle clear;
	Reflect  with attribute reflector;
	Copy  to target attribute impl

3.4. Add an interface declaration  for duplicate sequence attribute. It allows to:

	Get num  prior uses in A sequence;
	Set num  prior uses in A sequence

3.5. Add a class for duplicate sequence attribute impl. It allows to:

	Handle clear;
	Copy  to target attribute impl;
	Get num  prior uses in A sequence;
	Set num  prior uses in A sequence;
	Reflect  with attribute reflector

3.6. Add a class for truncate token filter tests. It allows to:

	Handle test simple;
	Create components

4. Changes to package org.apache.lucene.document:  

4.1. Add an object creator class for binary range. It allows to:

	Instantiate binary range;
	Handle new intersects query;
	Handle new relation query;
	Convert to string

5. Changes to package org.apache.lucene.index:  

5.1. Add a class for one merge helper. It allows to:

	Instantiate one merge helper;
	Get segment name;
	Get thread;
	Get total bytes written

6. Changes to package org.apache.lucene.queries:  

6.1. Add a class for binary doc values range query. It allows to:

	Instantiate binary doc values range query  with query type, length type, from bytes ref, to bytes ref and to bytes ref;
	Create weight;
	Convert binary doc values range query to string;
	Check if binary doc values range query equals;
	Hash code;
	Handle matches;
	Read length;

6.2. Add a class for binary doc values range query tests. It allows to:

	Handle test basics;
	Handle test no field

6.3. Add a class for blended term query. It allows to:

	Instantiate blended term query  with terms;
	Rewrite index reader;
	Handle top level query;
	Blend contexts term states;
	Adjust TTF;
	Adjust DF;
	Get terms;
	Convert blended term query to string;
	Check if blended term query equals terms;
	Check if blended term query equals;
	Hash code;
	Handle common terms blended query;
	Handle dismax blended query;

6.4. Add a class for blended term query tests. It allows to:

	Handle test dismax query;
	Handle test basics;
	Convert blended term query tests to terms;
	Set similarity;
	Handle test extract terms

6.5. Add a class for extended common terms query. It allows to:

	Instantiate extended common terms query  with high freq occur, low freq occur and low freq occur;
	Calc low freq minimum number should match;
	Handle calc minimum number should match;
	Handle calc high freq minimum number should match;
	Set high freq minimum number should match;
	Get high freq minimum number should match  spec;
	Set low freq minimum number should match;
	Get low freq minimum number should match  spec;
	Get max term frequency

6.6. Add a class for min doc query tests. It allows to:

	Handle test basics;
	Handle test rewrite;
	Handle test random

6.7. Add a class for search after sorted doc query tests. It allows to:

	Handle test basics;
	Handle test invalid sort;
	Handle test random

7. Changes to package org.apache.lucene.queryparser.classic:  

7.1. Add a class for x query parser. It allows to:

	Instantiate x query parser  with analyzer;
	Handle bare fuzzy

8. Changes to package org.apache.lucene.search.grouping:  

8.1. Add a class for collapsing top docs collector. It allows to:

	Instantiate collapsing top docs collector  with group selector, sort and sort;
	Get top docs;
	Score mode;
	Set scorer;
	Collect collapsing top docs collector;
	Create numeric;
	Create keyword

9. Changes to package org.apache.lucene.search.uhighlight:  

9.1. Add a class for bounded break iterator scanner. It allows to:

	Instantiate bounded break iterator scanner  with main break iterator, inner break iterator and inner break iterator;
	Get text;
	Set text;
	Reset bounded break iterator scanner;
	Preceding bounded break iterator scanner;
	Following bounded break iterator scanner;
	Get sentence;
	Handle current;
	First bounded break iterator scanner;
	Handle next;
	Handle last;
	Handle previous

9.2. Add a class for bounded break iterator scanner tests. It allows to:

	Handle test random ascii text case;
	Handle test bounded sentence

9.3. Add a class for custom field highlighter. It allows to:

	Instantiate custom field highlighter  with field offset strategy, break iterator locale, break iterator, passage scorer, passage formatter and passage formatter;
	Get summary passages no highlight

9.4. Add a class for custom passage formatter. It allows to:

	Instantiate custom passage formatter  with encoder;
	Get format;
	Append dest string builder

9.5. Add a class for custom passage formatter tests. It allows to:

	Handle test simple format;
	Handle test html encode format

9.6. Add a class for custom unified highlighter. It allows to:

	Instantiate custom unified highlighter  with index searcher, analyzer, offset source, passage formatter, break iterator locale, break iterator and break iterator;
	Highlight field;
	Load field values;
	Get break iterator;
	Get formatter;
	Get field highlighter;
	Pre multi term query rewrite;
	Pre span query rewrite;
	Rewrite custom query;
	Get offset source

9.7. Add a class for custom unified highlighter tests. It allows to:

	Assert highlight one doc;
	Handle test simple;
	Handle test no match size;
	Handle test multi phrase prefix query single term;
	Handle test multi phrase prefix query;
	Handle test common terms query;
	Handle test sentence bounded break iterator;
	Handle test small sentence bounded break iterator;
	Handle test repeat;
	Handle test group sentences

9.8. Add a class for snippet. It allows to:

	Instantiate snippet;
	Get text;
	Get score;
	Check if snippet is highlighted

10. Changes to package org.apache.lucene.search.vectorhighlight:  

10.1. Add a class for custom field query. It allows to:

	Instantiate custom field query  with query, index reader, fast vector highlighter and fast vector highlighter;
	Instantiate custom field query  with query, index reader and index reader;
	Flatten source query;
	Convert multi phrase query

11. Changes to package org.elasticsearch:  

11.1. Add a class for assertions. It allows to:

	Instantiate assertions

11.2. Add a class for build. It allows to:

	Get flavor;
	Display name;
	Process build build from display name;
	Get dEB;
	Get type;
	Get elasticsearch code source location;
	Instantiate build  with flavor, type and type;
	Handle short hash;
	Get date;
	Build stream input;
	Build build;
	Get qualified version;
	Check if build is snapshot;
	Check if build is production release;
	Convert build to string;
	Check if build equals;
	Hash code

11.3. Add a class for die with dignity plugin. It allows to:

	Get rest handlers

11.4. Add a class for eS netty 4 integ test case. It allows to:

	Ignore external cluster;
	Add mock transport service;
	Handle node settings;
	Transport client settings;
	Handle node plugins;
	Transport client plugins

11.5. Add a class for elasticsearch corruption exception. It allows to:

	Instantiate elasticsearch corruption exception;
	Instantiate elasticsearch corruption exception  with ex throwable

11.6. Add a class for elasticsearch exception. It allows to:

	Instantiate elasticsearch exception  with cause throwable;
	Instantiate elasticsearch exception;
	Instantiate elasticsearch exception  with stream input;
	Add metadata;
	Get metadata keys;
	Get metadata;
	Add header;
	Get header keys;
	Get header;
	Get headers;
	Get status;
	Handle unwrap cause;
	Get detailed message;
	Get root cause;
	Write  to stream output;
	Read exception;
	Check if elasticsearch exception is registered;
	Get registered keys;
	Get id;
	Convert elasticsearch exception to X content;
	Handle inner to X content;
	Convert header;
	Convert metadata;
	Process elasticsearch exception elasticsearch exception from X content;
	Handle inner from X content;
	Generate throwable X content;
	Generate failure X content;
	Get failure from X content;
	Guess root causes;
	Get exception name;
	Build message;
	Convert elasticsearch exception to string;
	Read throwable;
	Write stack traces;
	Handle elasticsearch exception handle;
	Get ids;
	Get classes;
	Get index;
	Get shard id;
	Set index;
	Set shard;
	Get set resources;
	Get resource id;
	Get resource type;
	Convert elasticsearch exception to underscore case

11.7. Add a class for elasticsearch exception tests. It allows to:

	Handle test status;
	Handle test guess root cause;
	Handle test deduplicate;
	Check if elasticsearch exception tests contains;
	Handle test get root cause;
	Convert test;
	Convert test generate throwable;
	Handle test from X content;
	Handle test from X content with cause;
	Handle test from X content with headers and metadata;
	Handle test from X content with ignored metadata and headers;
	Convert test throwable;
	Convert test unknown failure;
	Convert test failure;
	Assert to X content to X content as json;
	Assert exception  as json;
	Assert deep equals;
	Handle random exceptions

11.8. Add a class for elasticsearch generation exception. It allows to:

	Instantiate elasticsearch generation exception;
	Instantiate elasticsearch generation exception  with cause throwable;
	Instantiate elasticsearch generation exception  with stream input

11.9. Add a class for elasticsearch parse exception. It allows to:

	Instantiate elasticsearch parse exception;
	Instantiate elasticsearch parse exception  with cause throwable;
	Instantiate elasticsearch parse exception  with stream input;
	Get status

11.10. Add a class for elasticsearch security exception. It allows to:

	Instantiate elasticsearch security exception  with rest status, cause throwable and cause throwable;
	Instantiate elasticsearch security exception  with cause exception;
	Instantiate elasticsearch security exception;
	Instantiate elasticsearch security exception  with rest status;
	Instantiate elasticsearch security exception  with stream input

11.11. Add a class for elasticsearch status exception. It allows to:

	Instantiate elasticsearch status exception  with rest status, cause throwable and cause throwable;
	Instantiate elasticsearch status exception  with rest status;
	Instantiate elasticsearch status exception  with stream input;
	Write  to stream output;
	Get status

11.12. Add a class for elasticsearch timeout exception. It allows to:

	Instantiate elasticsearch timeout exception  with stream input;
	Instantiate elasticsearch timeout exception  with cause throwable;
	Instantiate elasticsearch timeout exception;

11.13. Add an interface declaration  for elasticsearch wrapper exception. It allows to:

	Get cause

11.14. Add a class for exceptions helper tests. It allows to:

	Handle test maybe error;
	Assert error;
	Handle test status;
	Handle test group by;
	Create shard failure parsing exception;
	Create search shard target;
	Handle test group by null target;
	Create shard failure query shard exception;
	Handle test group by null index

11.15. Add a class for nio integ test case. It allows to:

	Ignore external cluster;
	Add mock transport service;
	Handle node settings;
	Transport client settings;
	Handle node plugins;
	Transport client plugins

11.16. Add a class for resource already exists exception. It allows to:

	Instantiate resource already exists exception  with index;
	Instantiate resource already exists exception;
	Instantiate resource already exists exception  with stream input;
	Get status

11.17. Add a class for resource not found exception. It allows to:

	Instantiate resource not found exception;
	Instantiate resource not found exception  with cause throwable;
	Instantiate resource not found exception  with stream input;
	Get status

11.18. Add a class for rest die with dignity action. It allows to:

	Instantiate rest die with dignity action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

11.19. Add a class for special permission. It allows to:

	Instantiate special permission;
	Check special permission

11.20. Add a class for special permission tests. It allows to:

	Handle test equals;
	Handle test implies

11.21. Add a class for version tests. It allows to:

	Handle test version comparison;
	Handle test min;
	Handle test max;
	Handle test minimum index compatibility version;
	Handle test version constant present;
	Handle test CURRENT is latest;
	Handle test version from string;
	Test version tests too long version from string;
	Handle test too short version from string;
	Handle test wrong version from string;
	Handle test version no present in settings;
	Handle test index created version;
	Handle test min compat version;
	Convert test;
	Handle test is beta;
	Handle test is alpha;
	Handle test parse version;
	Handle test parse lenient;
	Test all versions match  id;
	Handle test lucene version is same on minor release;
	Assert unknown version;
	Handle test is compatible;
	Handle test min compat version order respects version order;
	Check if version tests is compatible;
	Handle test unreleased version

12. Changes to package org.elasticsearch.action:  

12.1. Add a class for action. It allows to:

	Instantiate action;
	Name action;
	Handle new response;
	Get response reader;
	Transport options;
	Check if action equals;
	Hash code

12.2. Add an interface declaration  for action future. It allows to:

	Get action get;

12.3. Add an interface declaration  for action listener. It allows to:

	Process action listener action listener on response;
	Process action listener action listener on failure;
	Wrap on response checked consumer;
	Process  on response;
	Process  on failure;
	Delegate response;
	Delegate failure;
	Wrap runnable;
	Map action listener;
	Convert action listener to bi consumer;
	Run  after delegate action listener;
	Notify  once delegate action listener;
	Handle inner on response;
	Handle inner on failure;
	Complete  with action listener

12.4. Add a class for action listener response handler. It allows to:

	Instantiate action listener response handler  with action listener, writeable reader and writeable reader;
	Handle response;
	Handle exception;
	Get executor;
	Read stream input;
	Convert action listener response handler to string

12.5. Add a class for action listener tests. It allows to:

	Handle test wrap;
	Handle test on response;
	Handle test on failure;
	Handle test run after;
	Handle test notify once;
	Process  on response;
	Process  on failure;
	Handle test complete with

12.6. Add a class for action module. It allows to:

	Instantiate action module  with settings, index name expression resolver, index scoped settings, cluster settings, settings filter, thread pool, action plugins list, node client, circuit breaker service, usage service and usage service;
	Get actions;
	Get setup actions;
	Get setup action filters;
	Init rest handlers;
	Configure action module;
	Get action filters;
	Get rest controller

12.7. Add a class for action module tests. It allows to:

	Handle test setup actions contains known builtin;
	Handle test plugin cant overwrite builtin action;
	Get actions;
	Handle test plugin can register action;
	Handle test setup rest handler contains known builtin;
	Handle test plugin cant overwrite builtin rest handler;
	Get rest handlers;
	Handle test plugin can register rest handler;

12.8. Add a class for action request. It allows to:

	Instantiate action request;
	Instantiate action request  with stream input;
	Validate action request;
	Get should store result;
	Read  from stream input;
	Write  to stream output

12.9. Add a class for action request builder. It allows to:

	Instantiate action request builder  with elasticsearch client, action, request and request;
	Get request;
	Execute action request builder;
	Get action request builder;
	Get timeout value;
	Execute action listener

12.10. Add a class for action request validation exception

12.11. Add a class for action response. It allows to:

	Instantiate action response;
	Instantiate action response  with stream input;
	Read  from stream input;
	Write  to stream output

12.12. Add a class for action runnable. It allows to:

	Instantiate action runnable  with action listener;
	Process action runnable action runnable on failure

12.13. Add an interface declaration  for aliases request. It allows to:

	Get aliases;
	Get original aliases;
	Replace aliases;
	Expand aliases wildcards

12.14. Add an interface declaration  for composite indices request

12.15. Add an interface declaration  for doc write request. It allows to:

	Get index;
	Get type;
	Get default type if null;
	I doc write request;
	Get indices options;
	Routing doc write request;
	Get version;
	Get version type;
	Get set if seq no;
	Set doc write request if primary term;
	Process doc write request doc write request if seq no;
	Process doc write request doc write request if primary term;
	Op type;
	Get id;
	Get lowercase;
	Process doc write request doc write request from id;
	Process doc write request doc write request from string;
	Read document request;
	Write document request;
	Validate seq no based CAS params

12.16. Add a class for doc write response tests. It allows to:

	Handle test get location;
	Handle test get location non ascii;
	Handle test get location with spaces;
	Handle test to X content doesnt include forced refresh unless forced

12.17. Add a class for failed node exception. It allows to:

	Instantiate failed node exception  with cause throwable;
	Node id;
	Instantiate failed node exception  with stream input;
	Write  to stream output;
	Convert metadata

12.18. Add a class for latched action listener. It allows to:

	Instantiate latched action listener  with delegate action listener, count down latch and count down latch;
	Process latched action listener latched action listener on response;
	Process latched action listener latched action listener on failure

12.19. Add an interface declaration  for listenable action future. It allows to:

	Add listener

12.20. Add a class for listener action IT. It allows to:

	Handle test threaded listeners;
	Process  on response;
	Process  on failure

12.21. Add a class for no shard available action exception. It allows to:

	Instantiate no shard available action exception  with shard id;
	Instantiate no shard available action exception  with shard id, cause throwable and cause throwable;
	Get status;
	Instantiate no shard available action exception  with stream input

12.22. Add a class for no such node exception. It allows to:

	Instantiate no such node exception;
	Instantiate no such node exception  with stream input

12.23. Add a class for notify once listener. It allows to:

	Handle inner on response;
	Handle inner on failure;
	Process notify once listener notify once listener on response;
	Process notify once listener notify once listener on failure

12.24. Add a class for notify once listener tests. It allows to:

	Handle test when success can not notify multiple times;
	Handle inner on response;
	Handle inner on failure;
	Handle test when error can not notify multiple times;

12.25. Add a class for original indices. It allows to:

	Instantiate original indices  with indices request;
	Instantiate original indices  with indices options;
	Get indices;
	Get indices options;
	Read original indices;
	Write original indices;
	Convert original indices to string

12.26. Add a class for original indices tests. It allows to:

	Handle test original indices serialization;
	Handle random original indices

12.27. Add a class for primary missing action exception. It allows to:

	Instantiate primary missing action exception;
	Instantiate primary missing action exception  with stream input

12.28. Add an interface declaration  for realtime request. It allows to:

	Get realtime

12.29. Add a class for rejection action IT. It allows to:

	Handle node settings;
	Handle test simulated search rejection load;
	Process  on response;
	Process  on failure

12.30. Add a class for routing missing exception. It allows to:

	Instantiate routing missing exception;
	Get type;
	Get id;
	Get status;
	Instantiate routing missing exception  with stream input;
	Write  to stream output

12.31. Add a class for shard operation failed exception. It allows to:

	Instantiate shard operation failed exception;
	Instantiate shard operation failed exception  with rest status, cause throwable and cause throwable;
	Get index;
	Shard id;
	Get reason;
	Get status;
	Get cause

12.32. Add a class for shard validate query request tests. It allows to:

	Set shard validate query request tests;
	Handle test serialize

12.33. Add a class for task operation failure. It allows to:

	Instantiate task operation failure  with exception;
	Instantiate task operation failure  with stream input;
	Write  to stream output;
	Get node id;
	Get task id;
	Get status;
	Get cause;
	Convert task operation failure to string;
	Process task operation failure task operation failure from X content;
	Convert task operation failure to X content

12.34. Add a class for timestamp parsing exception. It allows to:

	Instantiate timestamp parsing exception;
	Instantiate timestamp parsing exception  with cause throwable;
	Timestamp timestamp parsing exception;
	Instantiate timestamp parsing exception  with stream input;
	Write  to stream output

12.35. Add a class for transport action node proxy. It allows to:

	Instantiate transport action node proxy  with settings, action, transport service and transport service;
	Execute discovery node

12.36. Add a class for unavailable shards exception. It allows to:

	Instantiate unavailable shards exception  with shard id;
	Instantiate unavailable shards exception;
	Build message;
	Instantiate unavailable shards exception  with stream input;
	Get status

12.37. Add a class for validate actions. It allows to:

	Add validation error

13. Changes to package org.elasticsearch.action.admin:  

13.1. Add a class for hot threads IT. It allows to:

	Handle test hot threads dont fail;
	Process  on response;
	Process  on failure;
	Handle test ignore idle threads;
	Handle test timestamp and params

14. Changes to package org.elasticsearch.action.admin.cluster.allocation:  

14.1. Add an object creator class for cluster allocation explain action. It allows to:

	Instantiate cluster allocation explain action;
	Handle new response

14.2. Add a class for cluster allocation explain action tests. It allows to:

	Handle test initializing or relocating shard explanation;
	Allocate routing allocation;
	Decide shard allocation;
	Convert test find any unassigned shard;
	Convert test find primary shard;
	Convert test find any replica;
	Convert test find shard assigned;
	Routing allocation

14.3. Add a class for cluster allocation explain IT. It allows to:

	Handle test unassigned primary with existing index;
	Handle test unassigned replica delayed allocation;
	Handle test unassigned replica with prior copy;
	Handle test allocation filtering on index creation;
	Handle test allocation filtering prevents shard move;
	Handle test rebalancing not allowed;
	Handle test worse balance;
	Test better balance but can  not allocate;
	Handle test assigned replica on specific node;
	Handle test can not allocate stale replica explanation;
	Verify cluster info;
	Explain cluster allocation explain IT;
	Prepare index;
	Handle random index state;
	Handle index data;
	Handle primary node name;
	Get replica node;
	Get parser;
	Verify shard info;
	Verify stale shard copy node decisions;
	Verify node decisions;
	Verify node decision prologue;
	Verify deciders;
	All node decisions

14.4. Add a class for cluster allocation explain request. It allows to:

	Instantiate cluster allocation explain request;
	Instantiate cluster allocation explain request  with stream input;
	Write  to stream output;
	Validate cluster allocation explain request;
	Use any unassigned shard;
	Set index;
	Get index;
	Set shard;
	Get shard;
	Set primary;
	Check if cluster allocation explain request is primary;
	Set current node;
	Get current node;
	Include cluster allocation explain request yes decisions;
	Include disk info;
	Convert cluster allocation explain request to string;
	Parse X content parser;
	Read  from stream input

14.5. Add a class for cluster allocation explain request builder. It allows to:

	Instantiate cluster allocation explain request builder  with elasticsearch client, cluster allocation explain action and cluster allocation explain action;
	Set index;
	Set shard;
	Set primary;
	Set include  yes decisions;
	Set include disk info;
	Set current node;
	Use any unassigned shard

14.6. Add a class for cluster allocation explain request tests. It allows to:

	Handle test serialization

14.7. Add a class for cluster allocation explain response. It allows to:

	Instantiate cluster allocation explain response;
	Instantiate cluster allocation explain response  with cae cluster allocation explanation;
	Get explanation;
	Read  from stream input;
	Write  to stream output

14.8. Add a class for cluster allocation explanation. It allows to:

	Instantiate cluster allocation explanation  with shard routing, current node, relocation target node, cluster info, shard allocation decision and shard allocation decision;
	Instantiate cluster allocation explanation  with stream input;
	Write  to stream output;
	Get shard;
	Check if cluster allocation explanation is primary;
	Get shard state;
	Get current node;
	Get relocation target node;
	Get unassigned info;
	Get cluster info;
	Get shard allocation decision;
	Convert cluster allocation explanation to X content;
	Handle unassigned info to X content

14.9. Add a class for cluster allocation explanation tests. It allows to:

	Handle test decision equality;
	Handle test explanation serialization;
	Convert test explanation;
	Handle random cluster allocation explanation

14.10. Add a class for transport cluster allocation explain action. It allows to:

	Instantiate transport cluster allocation explain action  with transport service, cluster service, thread pool, action filters, index name expression resolver, cluster info service, allocation deciders, shards allocator, gateway allocator and gateway allocator;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation;
	Explain shard;
	Find shard  to explain

15. Changes to package org.elasticsearch.action.admin.cluster.health:  

15.1. Add an object creator class for cluster health action. It allows to:

	Instantiate cluster health action;
	Handle new response

15.2. Add a class for cluster health request. It allows to:

	Instantiate cluster health request;
	Instantiate cluster health request  with stream input;
	Write  to stream output;
	Get indices;
	Get indices options;
	Get timeout;
	Wait cluster health request for status;
	Wait wait for status for status;
	Wait cluster health request for green status;
	Wait cluster health request for yellow status;
	Wait cluster health request for no relocating shards;
	Wait cluster health request for no initializing shards;
	Wait cluster health request for active shards;
	Wait wait for active shard count for active shards;
	Wait cluster health request for nodes;
	Wait wait for events priority for events;
	Wait cluster health request for events;
	Handle level;
	Get level;
	Validate cluster health request;
	Read  from stream input

15.3. Add a class for cluster health request builder. It allows to:

	Instantiate cluster health request builder  with elasticsearch client, cluster health action and cluster health action;
	Set indices;
	Set indices options;
	Set timeout;
	Set wait  for status;
	Set wait  for green status;
	Set wait  for yellow status;
	Set wait  for no relocating shards;
	Set wait  for no initializing shards;
	Set wait  for active shards;
	Set wait  for nodes;
	Set wait  for events

15.4. Add a class for cluster health request tests. It allows to:

	Handle test serialize;
	Handle test bwc serialization;
	Handle random request;
	Assert indices equals

15.5. Add a class for cluster health response. It allows to:

	Instantiate cluster health response;
	Instantiate cluster health response  with cluster state;
	Instantiate cluster health response  with cluster state, task max waiting time value and task max waiting time value;
	Instantiate cluster health response  with task max waiting time value, cluster state health and cluster state health;
	Get cluster name;
	Get cluster state health;
	Get active shards;
	Get relocating shards;
	Get active primary shards;
	Get initializing shards;
	Get unassigned shards;
	Get number  of nodes;
	Get number  of data nodes;
	Get number  of pending tasks;
	Get number  of in flight fetch;
	Get delayed unassigned shards;
	Check if cluster health response is timed out;
	Set cluster health response;
	Get status;
	Set status;
	Get indices;
	Get task max waiting time;
	Get active shards percent;
	Read response  from stream input;
	Read  from stream input;
	Write  to stream output;
	Convert cluster health response to string;
	Convert cluster health response to X content;
	Process cluster health response cluster health response from X content;
	Check if cluster health response equals;
	Hash code

15.6. Add a class for cluster health responses tests. It allows to:

	Handle test is timeout;
	Handle test cluster health;
	Assert cluster health;
	Serialize serialize;
	Do parse instance;
	Create blank instance;
	Create test instance;
	Get cluster health responses tests to X content params;
	Handle supports unknown fields;
	Get random fields exclude filter;
	Mutate instance

15.7. Add a class for transport cluster health action. It allows to:

	Instantiate transport cluster health action  with transport service, cluster service, thread pool, action filters, index name expression resolver, gateway allocator and gateway allocator;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation;
	Execute current state;
	Handle cluster state processed;
	Process  on failure;
	Process  on no longer master;
	Execute health;
	Process  on new cluster state;
	Process  on cluster service close;
	Process  on timeout;
	Validate request;
	Get response;
	Prepare response;
	Get cluster health

15.8. Add a class for transport cluster health action tests. It allows to:

	Handle test wait for initializing shards;
	Handle test wait for all shards;
	Handle random cluster state with initializing shards

16. Changes to package org.elasticsearch.action.admin.cluster.node.hotthreads:  

16.1. Add a class for node hot threads. It allows to:

	Instantiate node hot threads;
	Instantiate node hot threads  with discovery node;
	Get hot threads;
	Read node hot threads;
	Read  from stream input;
	Write  to stream output

16.2. Add an object creator class for nodes hot threads action. It allows to:

	Instantiate nodes hot threads action;
	Handle new response

16.3. Add a class for nodes hot threads request. It allows to:

	Instantiate nodes hot threads request;
	Get threads;
	Ignore idle threads;
	Get type;
	Get interval;
	Get snapshots;
	Read  from stream input;
	Write  to stream output

16.4. Add a class for nodes hot threads request builder. It allows to:

	Instantiate nodes hot threads request builder  with elasticsearch client, nodes hot threads action and nodes hot threads action;
	Set threads;
	Set ignore idle threads;
	Set type;
	Set interval

16.5. Add a class for nodes hot threads response. It allows to:

	Instantiate nodes hot threads response;
	Instantiate nodes hot threads response  with cluster name, nodes list, failures list and failures list;
	Read nodes  from stream input;
	Write nodes  to stream output

17. Changes to package org.elasticsearch.action.admin.cluster.node.info:  

17.1. Add a class for node info. It allows to:

	Instantiate node info;
	Instantiate node info  with version, build, discovery node, settings, os info, process info, jvm info, thread pool info, transport info, http info, plugins and modules, ingest info, total indexing buffer byte size value and total indexing buffer byte size value;
	Get hostname;
	Get version;
	Build node info;
	Get settings;
	Get os;
	Get process;
	Get jvm;
	Get thread pool;
	Get transport;
	Http node info;
	Get plugins;
	Ingest node info;
	Get total indexing buffer;
	Read node info;
	Read  from stream input;
	Write  to stream output

17.2. Add an object creator class for nodes info action. It allows to:

	Instantiate nodes info action;
	Handle new response

17.3. Add a class for nodes info request. It allows to:

	Instantiate nodes info request;
	Handle clear;
	All nodes info request;
	Handle settings;
	Get settings;
	O nodes info request;
	Handle process;
	Get process;
	Handle jvm;
	Get jvm;
	Handle thread pool;
	Get thread pool;
	Handle transport;
	Get transport;
	Http nodes info request;
	Get plugins;
	Handle plugins;
	Ingest nodes info request;
	Get indices;
	Handle indices;
	Read  from stream input;
	Write  to stream output

17.4. Add a class for nodes info request builder. It allows to:

	Instantiate nodes info request builder  with elasticsearch client, nodes info action and nodes info action;
	Handle clear;
	All nodes info request builder;
	Set settings;
	Set os;
	Set process;
	Set jvm;
	Set thread pool;
	Set transport;
	Set http;
	Set plugins;
	Ingest nodes info request builder;
	Set indices

17.5. Add a class for nodes info response. It allows to:

	Instantiate nodes info response;
	Instantiate nodes info response  with cluster name, nodes list, failures list and failures list;
	Read nodes  from stream input;
	Write nodes  to stream output;
	Convert nodes info response to X content;
	Convert nodes info response to string

17.6. Add a class for plugins and modules. It allows to:

	Instantiate plugins and modules  with plugins list, modules list and modules list;
	Instantiate plugins and modules  with stream input;
	Write  to stream output;
	Get plugin infos;
	Get module infos;
	Add plugin;
	Add module;
	Convert plugins and modules to X content

18. Changes to package org.elasticsearch.action.admin.cluster.node.liveness:  

18.1. Add a class for liveness request. It allows to:

	Validate liveness request

18.2. Add a class for liveness response. It allows to:

	Instantiate liveness response;
	Instantiate liveness response  with cluster name, discovery node and discovery node;
	Read  from stream input;
	Write  to stream output;
	Get cluster name;
	Get discovery node

18.3. Add a class for transport liveness action. It allows to:

	Instantiate transport liveness action  with cluster service, transport service and transport service;
	Handle message received

19. Changes to package org.elasticsearch.action.admin.cluster.node.stats:  

19.1. Add a class for node stats. It allows to:

	Instantiate node stats;
	Instantiate node stats  with discovery node, node indices stats, os stats, process stats, jvm stats, thread pool stats, fs info, transport stats, http stats, all circuit breaker stats, script stats, discovery stats, ingest stats, adaptive selection stats and adaptive selection stats;
	Get timestamp;
	Get hostname;
	Get indices;
	Get os;
	Get process;
	Get jvm;
	Get thread pool;
	Get fs;
	Get transport;
	Http node stats;
	Get breaker;
	Get script stats;
	Get discovery stats;
	Get ingest stats;
	Get adaptive selection stats;
	Read node stats;
	Read  from stream input;
	Write  to stream output;
	Convert node stats to X content

19.2. Add a class for node stats tests. It allows to:

	Handle test serialization;
	Create node stats;
	Get pipeline stats

19.3. Add an object creator class for nodes stats action. It allows to:

	Instantiate nodes stats action;
	Handle new response

19.4. Add a class for nodes stats request. It allows to:

	Instantiate nodes stats request;
	All nodes stats request;
	Handle clear;
	Get indices;
	O nodes stats request;
	Handle process;
	Get process;
	Handle jvm;
	Get jvm;
	Handle thread pool;
	Get thread pool;
	F nodes stats request;
	Handle transport;
	Get transport;
	Http nodes stats request;
	Handle breaker;
	Get breaker;
	Handle script;
	Get script;
	Handle discovery;
	Get discovery;
	Ingest nodes stats request;
	Handle adaptive selection;
	Read  from stream input;
	Write  to stream output

19.5. Add a class for nodes stats request builder. It allows to:

	Instantiate nodes stats request builder  with elasticsearch client, nodes stats action and nodes stats action;
	All nodes stats request builder;
	Handle clear;
	Set indices;
	Set breaker;
	Set script;
	Set os;
	Set process;
	Set jvm;
	Set thread pool;
	Set fs;
	Set transport;
	Set http;
	Set discovery;
	Ingest nodes stats request builder;
	Set adaptive selection

19.6. Add a class for nodes stats response. It allows to:

	Instantiate nodes stats response;
	Instantiate nodes stats response  with cluster name, nodes list, failures list and failures list;
	Read nodes  from stream input;
	Write nodes  to stream output;
	Convert nodes stats response to X content;
	Convert nodes stats response to string

20. Changes to package org.elasticsearch.action.admin.cluster.node.tasks:  

20.1. Add a class for recording task manager listener. It allows to:

	Instantiate recording task manager listener;
	Handle on task registered;
	Process recording task manager listener recording task manager listener on task unregistered;
	Wait task for task completion;
	Get events;
	Get registration events;
	Get unregistration events;
	Reset recording task manager listener

20.2. Add a class for task tests. It allows to:

	Convert test task info

20.3. Add a class for tasks IT. It allows to:

	Get mock plugins;
	Handle node plugins;
	Transport client plugins;
	Handle node settings;
	Handle test task counts;
	Handle test master node operation tasks;
	Handle test transport replication all shards tasks;
	Handle test transport broadcast by node tasks;
	Handle test transport replication single shard tasks;
	Handle test transport broadcast replication tasks;
	Handle test transport bulk tasks;
	Handle test search task descriptions;
	Handle test search task header limit;
	Assert task headers;
	Handle test can fetch index status;
	Handle on task registered;
	Process  on task unregistered;
	Wait task for task completion;
	Handle test tasks cancellation;
	Handle test tasks unblocking;
	Handle test list tasks wait for completion;
	Handle test get task wait for completion without storing result;
	Handle test get task wait for completion with storing result;
	Wait wait function for completion test case;
	Handle test list tasks wait for timeout;
	Handle test get task wait for timeout;
	Wait wait function for timeout test case;
	Wait tasks IT for test task start on all nodes;
	Handle test tasks list wait for no task;
	Handle test tasks get wait for no task;
	Handle test tasks wait for all task;
	Handle test task storing succesful result;
	Handle test task storing failure result;
	Handle test get task not found;
	Handle test node not found but task found;
	Process  on response;
	Process  on failure;
	Tear tasks IT;
	Register task manage listeners;
	Reset task manage listeners;
	Get number of events;
	Find events;
	Assert parent task;
	Expect throwing runnable not found;
	Expect finished task

21. Changes to package org.elasticsearch.action.admin.cluster.node.tasks.cancel:  

21.1. Add a class for cancel tasks action. It allows to:

	Instantiate cancel tasks action;
	Handle new response;
	Get response reader

21.2. Add a class for cancel tasks request. It allows to:

	Instantiate cancel tasks request;
	Instantiate cancel tasks request  with stream input;
	Write  to stream output;
	Match task;
	Set reason;
	Get reason

21.3. Add a class for cancel tasks request builder. It allows to:

	Instantiate cancel tasks request builder  with elasticsearch client, cancel tasks action and cancel tasks action

21.4. Add a class for cancel tasks response. It allows to:

	Instantiate cancel tasks response  with stream input;
	Instantiate cancel tasks response  with tasks list, task failures list, node failures list and node failures list;
	Convert cancel tasks response to X content;
	Process cancel tasks response cancel tasks response from X content;
	Convert cancel tasks response to string

22. Changes to package org.elasticsearch.action.admin.cluster.node.tasks.get:  

22.1. Add a class for get task action. It allows to:

	Instantiate get task action;
	Handle new response

22.2. Add a class for get task request. It allows to:

	Get task id;
	Set task id;
	Get wait  for completion;
	Set wait  for completion;
	Get timeout;
	Set timeout;
	Node request;
	Validate get task request;
	Read  from stream input;
	Write  to stream output

22.3. Add a class for get task request builder. It allows to:

	Instantiate get task request builder  with elasticsearch client, get task action and get task action;
	Set task id;
	Set wait  for completion;
	Set timeout

22.4. Add a class for get task response. It allows to:

	Instantiate get task response;
	Instantiate get task response  with task result;
	Read  from stream input;
	Write  to stream output;
	Get task;
	Convert get task response to X content;
	Convert get task response to string

22.5. Add a class for transport get task action. It allows to:

	Instantiate transport get task action  with thread pool, transport service, action filters, cluster service, client, named X content registry and named X content registry;
	Execute this task;
	Run this task on node with task if possible;
	Read stream input;
	Handle response;
	Handle exception;
	Get executor;
	Get running task  from node;
	Run;
	Process  on failure;
	Get waited for completion;
	Get finished task  from index;
	Process  on response;
	Process transport get task action transport get task action on get finished task from index

23. Changes to package org.elasticsearch.action.admin.cluster.node.tasks.list:  

23.1. Add a class for list tasks action. It allows to:

	Instantiate list tasks action;
	Handle new response;
	Get response reader

23.2. Add a class for list tasks request. It allows to:

	Instantiate list tasks request;
	Instantiate list tasks request  with stream input;
	Write  to stream output;
	Detailed list tasks request;
	Set detailed;
	Get wait  for completion;
	Set wait  for completion

23.3. Add a class for list tasks request builder. It allows to:

	Instantiate list tasks request builder  with elasticsearch client, list tasks action and list tasks action;
	Set detailed;
	Set wait  for completion

23.4. Add a class for list tasks response. It allows to:

	Instantiate list tasks response  with tasks list, task failures list, node failures list and node failures list;
	Instantiate list tasks response  with stream input;
	Write  to stream output;
	Get setup parser;
	Get list tasks response per node tasks;
	Get task groups;
	Build task groups;
	Get tasks;
	Convert list tasks response to X content grouped by node;
	Convert list tasks response to X content grouped by parents;
	Convert list tasks response to X content grouped by none;
	Convert list tasks response to X content;
	Process list tasks response list tasks response from X content;
	Convert list tasks response to string

23.5. Add a class for transport list tasks action. It allows to:

	Wait timeout value for completion timeout;
	Instantiate transport list tasks action  with cluster service, transport service, action filters and action filters;
	Handle new response;
	Handle task operation;
	Handle process tasks

24. Changes to package org.elasticsearch.action.admin.cluster.node.usage:  

24.1. Add a class for node usage. It allows to:

	Instantiate node usage;
	Read node stats;
	Instantiate node usage  with discovery node, rest usage map and rest usage map;
	Get timestamp;
	Get node usage since time;
	Get rest usage;
	Convert node usage to X content;
	Read  from stream input;
	Write  to stream output

24.2. Add an object creator class for nodes usage action. It allows to:

	Instantiate nodes usage action;
	Handle new response

24.3. Add a class for nodes usage request. It allows to:

	Instantiate nodes usage request;
	All nodes usage request;
	Handle clear;
	Rest actions;
	Read  from stream input;
	Write  to stream output

24.4. Add a class for nodes usage request builder. It allows to:

	Instantiate nodes usage request builder  with elasticsearch client, action and action

24.5. Add a class for nodes usage response. It allows to:

	Instantiate nodes usage response;
	Instantiate nodes usage response  with cluster name, nodes list, failures list and failures list;
	Read nodes  from stream input;
	Write nodes  to stream output;
	Convert nodes usage response to X content;
	Convert nodes usage response to string

25. Changes to package org.elasticsearch.action.admin.cluster.remote:  

25.1. Add an object creator class for remote info action. It allows to:

	Instantiate remote info action;
	Handle new response

25.2. Add a class for remote info request. It allows to:

	Instantiate remote info request;
	Instantiate remote info request  with stream input;
	Validate remote info request

25.3. Add a class for remote info request builder. It allows to:

	Instantiate remote info request builder  with elasticsearch client, remote info action and remote info action

25.4. Add a class for remote info response. It allows to:

	Instantiate remote info response;
	Instantiate remote info response  with infos collection;
	Get infos;
	Write  to stream output;
	Read  from stream input;
	Convert remote info response to X content

25.5. Add a class for transport remote info action. It allows to:

	Instantiate transport remote info action  with transport service, action filters, search transport service and search transport service;
	Execute task

26. Changes to package org.elasticsearch.action.admin.cluster.repositories:  

26.1. Add a class for repository blocks IT. It allows to:

	Handle test put repository with blocks;
	Handle test verify repository with blocks;
	Handle test delete repository with blocks;
	Handle test get repository with blocks

27. Changes to package org.elasticsearch.action.admin.cluster.repositories.delete:  

27.1. Add an object creator class for delete repository action. It allows to:

	Instantiate delete repository action;
	Handle new response

27.2. Add a class for delete repository request. It allows to:

	Instantiate delete repository request;
	Validate delete repository request;
	Name delete repository request;
	Read  from stream input;
	Write  to stream output

27.3. Add a class for delete repository request builder. It allows to:

	Instantiate delete repository request builder  with elasticsearch client, delete repository action and delete repository action;
	Set name

27.4. Add a class for transport delete repository action. It allows to:

	Instantiate transport delete repository action  with transport service, cluster service, repositories service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

28. Changes to package org.elasticsearch.action.admin.cluster.repositories.get:  

28.1. Add an object creator class for get repositories action. It allows to:

	Instantiate get repositories action;
	Handle new response

28.2. Add a class for get repositories request. It allows to:

	Instantiate get repositories request;
	Instantiate get repositories request  with stream input;
	Write  to stream output;
	Validate get repositories request;
	Get repositories;
	Read  from stream input

28.3. Add a class for get repositories request builder. It allows to:

	Instantiate get repositories request builder  with elasticsearch client, get repositories action and get repositories action;
	Set repositories;
	Add repositories

28.4. Add a class for get repositories response. It allows to:

	Instantiate get repositories response;
	Instantiate get repositories response  with repositories meta data;
	Get repositories;
	Read  from stream input;
	Write  to stream output;
	Convert get repositories response to X content;
	Process get repositories response get repositories response from X content

28.5. Add a class for transport get repositories action. It allows to:

	Instantiate transport get repositories action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

29. Changes to package org.elasticsearch.action.admin.cluster.repositories.put:  

29.1. Add an object creator class for put repository action. It allows to:

	Instantiate put repository action;
	Handle new response

29.2. Add a class for put repository request. It allows to:

	Instantiate put repository request;
	Validate put repository request;
	Name put repository request;
	Get type;
	Get settings;
	Verify put repository request;
	Get source;
	Read  from stream input;
	Write  to stream output;
	Convert put repository request to X content

29.3. Add a class for put repository request builder. It allows to:

	Instantiate put repository request builder  with elasticsearch client, put repository action and put repository action;
	Set name;
	Set type;
	Set settings;
	Verify put repository request builder

29.4. Add a class for transport put repository action. It allows to:

	Instantiate transport put repository action  with transport service, cluster service, repositories service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

30. Changes to package org.elasticsearch.action.admin.cluster.repositories.verify:  

30.1. Add a class for transport verify repository action. It allows to:

	Instantiate transport verify repository action  with transport service, cluster service, repositories service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

30.2. Add an object creator class for verify repository action. It allows to:

	Instantiate verify repository action;
	Handle new response

30.3. Add a class for verify repository request. It allows to:

	Instantiate verify repository request;
	Validate verify repository request;
	Name verify repository request;
	Read  from stream input;
	Write  to stream output

30.4. Add a class for verify repository request builder. It allows to:

	Instantiate verify repository request builder  with elasticsearch client, verify repository action and verify repository action;
	Set name

31. Changes to package org.elasticsearch.action.admin.cluster.reroute:  

31.1. Add an object creator class for cluster reroute action. It allows to:

	Instantiate cluster reroute action;
	Handle new response

31.2. Add a class for cluster reroute request. It allows to:

	Instantiate cluster reroute request;
	Add commands;
	Handle dry run;
	Explain cluster reroute request;
	Set cluster reroute request;
	Check if cluster reroute request is retry failed;
	Get commands;
	Validate cluster reroute request;
	Read  from stream input;
	Write  to stream output;
	Check if cluster reroute request equals;
	Hash code

31.3. Add a class for cluster reroute request builder. It allows to:

	Instantiate cluster reroute request builder  with elasticsearch client, cluster reroute action and cluster reroute action;
	Add commands;
	Set dry run;
	Explain cluster reroute request builder;
	Set cluster reroute request builder

31.4. Add a class for cluster reroute request tests. It allows to:

	Instantiate cluster reroute request tests;
	Handle random request;
	Handle test equals and hash code;
	Handle test serialization;
	Handle test parsing;
	Round trip  through bytes;
	Round trip  through rest request;
	Convert cluster reroute request tests to rest request;
	X content registry

31.5. Add a class for cluster reroute response. It allows to:

	Instantiate cluster reroute response;
	Instantiate cluster reroute response  with cluster state, routing explanations and routing explanations;
	Get state;
	Get explanations;
	Read  from stream input;
	Write  to stream output;
	Add custom fields

31.6. Add a class for cluster reroute response tests. It allows to:

	Convert test

31.7. Add a class for cluster reroute tests. It allows to:

	Handle test serialize request;
	Handle test cluster state update task;
	Process  on response;
	Process  on failure;
	Create initial cluster state

32. Changes to package org.elasticsearch.action.admin.cluster.settings:  

32.1. Add an object creator class for cluster update settings action. It allows to:

	Instantiate cluster update settings action;
	Handle new response

32.2. Add a class for cluster update settings request. It allows to:

	Instantiate cluster update settings request;
	Validate cluster update settings request;
	Handle transient settings;
	Handle persistent settings;
	Read  from stream input;
	Write  to stream output;
	Convert cluster update settings request to X content;
	Process cluster update settings request cluster update settings request from X content

32.3. Add a class for cluster update settings request builder. It allows to:

	Instantiate cluster update settings request builder  with elasticsearch client, cluster update settings action and cluster update settings action;
	Set transient settings;
	Set persistent settings;

32.4. Add a class for cluster update settings request tests. It allows to:

	Handle test from X content;
	Handle test from X content with random fields;
	Do cluster update settings request tests from X content test with random fields;
	Create test item

32.5. Add a class for cluster update settings response. It allows to:

	Instantiate cluster update settings response;
	Instantiate cluster update settings response  with transient settings, persistent settings and persistent settings;
	Read  from stream input;
	Get transient settings;
	Get persistent settings;
	Write  to stream output;
	Add custom fields;
	Process cluster update settings response cluster update settings response from X content;
	Check if cluster update settings response equals;
	Hash code

32.6. Add a class for cluster update settings response tests. It allows to:

	Do parse instance;
	Mutate instance;
	Mutate settings;
	Get random fields exclude filter;
	Handle random cluster settings;
	Create test instance;
	Create blank instance;
	Handle test old serialisation

32.7. Add a class for settings updater. It allows to:

	Instantiate settings updater  with cluster settings;
	Get transient updates;
	Get persistent update;
	Update settings;
	Get partition known and valid settings;
	Log unknown setting;
	Log invalid setting

32.8. Add a class for transport cluster update settings action. It allows to:

	Instantiate transport cluster update settings action  with transport service, cluster service, thread pool, allocation service, action filters, index name expression resolver, cluster settings and cluster settings;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation;
	Handle on all nodes acked;
	Process  on ack timeout;
	Reroute;
	Ack discovery node;
	Process  on no longer master;
	Process  on failure;
	Execute current state;

33. Changes to package org.elasticsearch.action.admin.cluster.shards:  

33.1. Add a class for cluster search shards action. It allows to:

	Instantiate cluster search shards action;
	Handle new response;
	Get response reader

33.2. Add a class for cluster search shards group. It allows to:

	Instantiate cluster search shards group;
	Instantiate cluster search shards group  with shard id, shards routing and shards routing;
	Read search shards group response;
	Get shard id;
	Get shards;
	Read  from stream input;
	Write  to stream output;
	Convert cluster search shards group to X content

33.3. Add a class for cluster search shards request. It allows to:

	Instantiate cluster search shards request;
	Instantiate cluster search shards request  with stream input;
	Write  to stream output;
	Validate cluster search shards request;
	Get indices;
	Get indices options;
	Routing cluster search shards request;
	Get preference;
	Read  from stream input

33.4. Add a class for cluster search shards request builder. It allows to:

	Instantiate cluster search shards request builder  with elasticsearch client, cluster search shards action and cluster search shards action;
	Set indices;
	Routing cluster search shards request builder;
	Set preference;
	Set indices options

33.5. Add a class for cluster search shards request tests. It allows to:

	Handle test serialization;
	Handle test indices must not be null

33.6. Add a class for cluster search shards response. It allows to:

	Instantiate cluster search shards response  with stream input;
	Read  from stream input;
	Write  to stream output;
	Instantiate cluster search shards response  with groups, nodes, indices and filters map and indices and filters map;
	Get groups;
	Get nodes;
	Get indices and filters;
	Convert cluster search shards response to X content

33.7. Add a class for cluster search shards response tests. It allows to:

	Handle test serialization

33.8. Add a class for transport cluster search shards action. It allows to:

	Instantiate transport cluster search shards action  with transport service, cluster service, indices service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Check block;
	Handle new response;
	Read stream input;
	Handle master operation

34. Changes to package org.elasticsearch.action.admin.cluster.snapshots:  

34.1. Add a class for snapshot blocks IT. It allows to:

	Set up repository;
	Handle test create snapshot with blocks;
	Handle test create snapshot with index blocks;
	Handle test delete snapshot with blocks;
	Handle test restore snapshot with blocks;
	Handle test get snapshot with blocks;
	Handle test snapshot status with blocks

35. Changes to package org.elasticsearch.action.admin.cluster.snapshots.create:  

35.1. Add an object creator class for create snapshot action. It allows to:

	Instantiate create snapshot action;
	Handle new response

35.2. Add a class for create snapshot request. It allows to:

	Instantiate create snapshot request;
	Instantiate create snapshot request  with stream input;
	Write  to stream output;
	Validate create snapshot request;
	Get snapshot;
	Get repository;
	Get indices;
	Get indices options;
	Handle partial;
	Wait create snapshot request for completion;
	Get settings;
	Include global state;
	Get source;
	Convert create snapshot request to X content;
	Read  from stream input;
	Get description;
	Check if create snapshot request equals;
	Hash code;
	Convert create snapshot request to string

35.3. Add a class for create snapshot request builder. It allows to:

	Instantiate create snapshot request builder  with elasticsearch client, create snapshot action and create snapshot action;
	Set snapshot;
	Set repository;
	Set indices;
	Set indices options;
	Set wait  for completion;
	Set partial;
	Set settings;
	Set include global state

35.4. Add a class for create snapshot response. It allows to:

	Instantiate create snapshot response  with snapshot info;
	Instantiate create snapshot response;
	Set snapshot info  from builder;
	Get snapshot info;
	Read  from stream input;
	Write  to stream output;
	Get status;
	Convert create snapshot response to X content;
	Process create snapshot response create snapshot response from X content;
	Convert create snapshot response to string;
	Check if create snapshot response equals;
	Hash code

35.5. Add a class for transport create snapshot action. It allows to:

	Instantiate transport create snapshot action  with transport service, cluster service, thread pool, snapshots service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

36. Changes to package org.elasticsearch.action.admin.cluster.snapshots.delete:  

36.1. Add an object creator class for delete snapshot action. It allows to:

	Instantiate delete snapshot action;
	Handle new response

36.2. Add a class for delete snapshot request. It allows to:

	Instantiate delete snapshot request;
	Instantiate delete snapshot request  with stream input;
	Write  to stream output;
	Validate delete snapshot request;
	Get repository;
	Get snapshot;
	Read  from stream input

36.3. Add a class for delete snapshot request builder. It allows to:

	Instantiate delete snapshot request builder  with elasticsearch client, delete snapshot action and delete snapshot action;
	Set repository;
	Set snapshot

36.4. Add a class for transport delete snapshot action. It allows to:

	Instantiate transport delete snapshot action  with transport service, cluster service, thread pool, snapshots service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

37. Changes to package org.elasticsearch.action.admin.cluster.snapshots.get:  

37.1. Add an object creator class for get snapshots action. It allows to:

	Instantiate get snapshots action;
	Handle new response

37.2. Add a class for get snapshots request. It allows to:

	Instantiate get snapshots request;
	Instantiate get snapshots request  with stream input;
	Write  to stream output;
	Validate get snapshots request;
	Get repository;
	Get snapshots;
	Ignore unavailable;
	Handle verbose;
	Read  from stream input

37.3. Add a class for get snapshots request builder. It allows to:

	Instantiate get snapshots request builder  with elasticsearch client, get snapshots action and get snapshots action;
	Set repository;
	Set snapshots;
	Set current snapshot;
	Add snapshots;
	Set ignore unavailable;
	Set verbose

37.4. Add a class for get snapshots response. It allows to:

	Instantiate get snapshots response;
	Instantiate get snapshots response  with snapshots list;
	Get snapshots;
	Read  from stream input;
	Write  to stream output;
	Convert get snapshots response to X content;
	Process get snapshots response get snapshots response from X content;
	Check if get snapshots response equals;
	Hash code

37.5. Add a class for transport get snapshots action. It allows to:

	Instantiate transport get snapshots action  with transport service, cluster service, thread pool, snapshots service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation;
	Check if transport get snapshots action is all snapshots;
	Check if transport get snapshots action is current snapshots only;
	Build simple snapshot infos

38. Changes to package org.elasticsearch.action.admin.cluster.snapshots.restore:  

38.1. Add an object creator class for restore snapshot action. It allows to:

	Instantiate restore snapshot action;
	Handle new response

38.2. Add a class for restore snapshot request. It allows to:

	Instantiate restore snapshot request;
	Instantiate restore snapshot request  with stream input;
	Write  to stream output;
	Validate restore snapshot request;
	Get snapshot;
	Get repository;
	Get indices;
	Get indices options;
	Rename pattern;
	Rename replacement;
	Wait restore snapshot request for completion;
	Handle partial;
	Get settings;
	Ignore index settings;
	Include global state;
	Include aliases;
	Get index settings;
	Get source;
	Convert restore snapshot request to X content;
	Read  from stream input;
	Get description;
	Check if restore snapshot request equals;
	Hash code;
	Convert restore snapshot request to string

38.3. Add a class for restore snapshot request builder. It allows to:

	Instantiate restore snapshot request builder  with elasticsearch client, restore snapshot action and restore snapshot action;
	Set snapshot;
	Set repository;
	Set indices;
	Set indices options;
	Set rename pattern;
	Set rename replacement;
	Set settings;
	Set wait  for completion;
	Set restore global state;
	Set partial;
	Set include aliases;
	Set index settings;
	Set ignore index settings;

38.4. Add a class for restore snapshot response. It allows to:

	Instantiate restore snapshot response  with restore info;
	Instantiate restore snapshot response;
	Get restore info;
	Read  from stream input;
	Write  to stream output;
	Get status;
	Convert restore snapshot response to X content;
	Process restore snapshot response restore snapshot response from X content;
	Check if restore snapshot response equals;
	Hash code;
	Convert restore snapshot response to string

38.5. Add a class for transport restore snapshot action. It allows to:

	Instantiate transport restore snapshot action  with transport service, cluster service, thread pool, restore service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

39. Changes to package org.elasticsearch.action.admin.cluster.snapshots.status:  

39.1. Add a class for snapshot status. It allows to:

	Instantiate snapshot status  with snapshot, state, shards list, include global state boolean and include global state boolean;
	Instantiate snapshot status  with snapshot, state, shards list, indices status map, snapshot shards stats, snapshot stats, include global state boolean and include global state boolean;
	Instantiate snapshot status;
	Get snapshot;
	Get state;
	Include global state;
	Get shards;
	Get shards stats;
	Get indices;
	Read  from stream input;
	Write  to stream output;
	Read snapshot status;
	Convert snapshot status to string;
	Get stats;
	Convert snapshot status to X content;
	Process snapshot status snapshot status from X content;
	Update shard stats;
	Check if snapshot status equals;
	Hash code

39.2. Add a class for snapshot status tests. It allows to:

	Convert test;
	Create test instance;
	Get random fields exclude filter;
	Do parse instance;
	Handle supports unknown fields

39.3. Add an object creator class for snapshots status action. It allows to:

	Instantiate snapshots status action;
	Handle new response

39.4. Add a class for snapshots status request. It allows to:

	Instantiate snapshots status request;
	Instantiate snapshots status request  with stream input;
	Write  to stream output;
	Validate snapshots status request;
	Get repository;
	Get snapshots;
	Ignore unavailable;
	Read  from stream input

39.5. Add a class for snapshots status request builder. It allows to:

	Instantiate snapshots status request builder  with elasticsearch client, snapshots status action and snapshots status action;
	Set repository;
	Set snapshots;
	Add snapshots;
	Set ignore unavailable

39.6. Add a class for snapshots status response. It allows to:

	Instantiate snapshots status response;
	Instantiate snapshots status response  with snapshots list;
	Get snapshots;
	Read  from stream input;
	Write  to stream output;
	Convert snapshots status response to X content;
	Process snapshots status response snapshots status response from X content;
	Check if snapshots status response equals;
	Hash code

39.7. Add a class for transport snapshots status action. It allows to:

	Instantiate transport snapshots status action  with transport service, cluster service, thread pool, snapshots service, transport nodes snapshots status, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation;
	Process  on response;
	Process  on failure;
	Build response

40. Changes to package org.elasticsearch.action.admin.cluster.state:  

40.1. Add an object creator class for cluster state action. It allows to:

	Instantiate cluster state action;
	Handle new response

40.2. Add a class for cluster state request. It allows to:

	Instantiate cluster state request;
	Instantiate cluster state request  with stream input;
	Write  to stream output;
	Validate cluster state request;
	All cluster state request;
	Handle clear;
	Routing table;
	Handle nodes;
	Get nodes;
	Handle meta data;
	Handle blocks;
	Get blocks;
	Get indices;
	Get indices options;
	Get customs;
	Handle customs;
	Wait cluster state request for timeout;
	Wait wait for timeout value for timeout;
	Wait cluster state request for meta data version;
	Read  from stream input

40.3. Add a class for cluster state request builder. It allows to:

	Instantiate cluster state request builder  with elasticsearch client, cluster state action and cluster state action;
	All cluster state request builder;
	Handle clear;
	Set blocks;
	Set meta data;
	Set nodes;
	Set customs;
	Set routing table;
	Set indices;
	Set indices options

40.4. Add a class for cluster state request tests. It allows to:

	Handle test serialization;
	Handle test wait for meta data version;
	Assert options match

40.5. Add a class for cluster state response. It allows to:

	Instantiate cluster state response;
	Instantiate cluster state response  with cluster name, cluster state and cluster state;
	Get state;
	Get cluster name;
	Check if cluster state response is wait for timed out;
	Read  from stream input;
	Write  to stream output;
	Check if cluster state response equals;
	Hash code;
	Get master node id;
	Get version

40.6. Add a class for transport cluster state action. It allows to:

	Instantiate transport cluster state action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation;
	Process  on new cluster state;
	Process  on cluster service close;
	Process  on timeout;
	Build response

41. Changes to package org.elasticsearch.action.admin.cluster.stats:  

41.1. Add an object creator class for cluster stats action. It allows to:

	Instantiate cluster stats action;
	Handle new response

41.2. Add a class for cluster stats IT. It allows to:

	Assert counts;
	Wait cluster stats IT for nodes;
	Handle test node counts;
	Handle increment count for role;
	Assert shard stats;
	Handle test indices shard stats;
	Handle test values smoke screen;
	Handle test allocated processors;
	Handle test cluster status when state not recovered

41.3. Add a class for cluster stats node response. It allows to:

	Instantiate cluster stats node response;
	Instantiate cluster stats node response  with discovery node, cluster health status, node info, node stats, shards stats and shards stats;
	Node info;
	Handle node stats;
	Get cluster status;
	Get shards stats;
	Read node response;
	Read  from stream input;
	Write  to stream output

41.4. Add a class for cluster stats nodes tests. It allows to:

	Convert test network types;
	Create node info

41.5. Add a class for cluster stats request. It allows to:

	Instantiate cluster stats request;
	Read  from stream input;
	Write  to stream output

41.6. Add a class for cluster stats request builder. It allows to:

	Instantiate cluster stats request builder  with elasticsearch client, cluster stats action and cluster stats action

41.7. Add a class for cluster stats response. It allows to:

	Instantiate cluster stats response;
	Instantiate cluster stats response  with cluster name, nodes list, failures list and failures list;
	Get cluster UUID;
	Get timestamp;
	Get status;
	Get nodes stats;
	Get indices stats;
	Read  from stream input;
	Write  to stream output;
	Read nodes  from stream input;
	Write nodes  to stream output;
	Convert cluster stats response to X content;
	Convert cluster stats response to string

42. Changes to package org.elasticsearch.action.admin.cluster.storedscripts:  

42.1. Add an object creator class for delete stored script action. It allows to:

	Instantiate delete stored script action;
	Handle new response

42.2. Add a class for delete stored script request. It allows to:

	Instantiate delete stored script request;
	Validate delete stored script request;
	I delete stored script request;
	Read  from stream input;
	Write  to stream output;
	Convert delete stored script request to string

42.3. Add a class for delete stored script request builder. It allows to:

	Instantiate delete stored script request builder  with elasticsearch client, delete stored script action and delete stored script action;
	Set id

42.4. Add an object creator class for get stored script action. It allows to:

	Instantiate get stored script action;
	Handle new response

42.5. Add a class for get stored script request. It allows to:

	Instantiate get stored script request;
	Instantiate get stored script request  with stream input;
	Write  to stream output;
	Validate get stored script request;
	I get stored script request;
	Read  from stream input;
	Convert get stored script request to string

42.6. Add a class for get stored script request builder. It allows to:

	Instantiate get stored script request builder  with elasticsearch client, get stored script action and get stored script action;
	Set id

42.7. Add a class for get stored script request tests. It allows to:

	Handle test get indexed script request serialization

42.8. Add a class for get stored script response. It allows to:

	Instantiate get stored script response;
	Instantiate get stored script response  with stored script source;
	Get id;
	Get source;
	Get status;
	Convert get stored script response to X content;
	Process get stored script response get stored script response from X content;
	Read  from stream input;
	Write  to stream output;
	Check if get stored script response equals;
	Hash code

42.9. Add an object creator class for put stored script action. It allows to:

	Instantiate put stored script action;
	Handle new response

42.10. Add a class for put stored script request. It allows to:

	Instantiate put stored script request;
	Instantiate put stored script request  with content bytes reference, X content type, stored script source and stored script source;
	Validate put stored script request;
	I put stored script request;
	Get context;
	Handle content;
	X content type;
	Get source;
	Read  from stream input;
	Write  to stream output;
	Convert put stored script request to string;
	Convert put stored script request to X content

42.11. Add a class for put stored script request builder. It allows to:

	Instantiate put stored script request builder  with elasticsearch client, put stored script action and put stored script action;
	Set id;
	Set content

42.12. Add a class for put stored script request tests. It allows to:

	Handle test serialization;
	Convert test

42.13. Add a class for transport delete stored script action. It allows to:

	Instantiate transport delete stored script action  with transport service, cluster service, thread pool, action filters, index name expression resolver, script service and script service;
	Get executor;
	Handle new response;
	Handle master operation;
	Check block

42.14. Add a class for transport get stored script action. It allows to:

	Instantiate transport get stored script action  with transport service, cluster service, thread pool, action filters, index name expression resolver, script service and script service;
	Get executor;
	Handle new response;
	Handle master operation;
	Check block

42.15. Add a class for transport put stored script action. It allows to:

	Instantiate transport put stored script action  with transport service, cluster service, thread pool, action filters, index name expression resolver, script service and script service;
	Get executor;
	Handle new response;
	Handle master operation;
	Check block

43. Changes to package org.elasticsearch.action.admin.cluster.tasks:  

43.1. Add an object creator class for pending cluster tasks action. It allows to:

	Instantiate pending cluster tasks action;
	Handle new response

43.2. Add a class for pending cluster tasks request. It allows to:

	Instantiate pending cluster tasks request;
	Instantiate pending cluster tasks request  with stream input;
	Validate pending cluster tasks request

43.3. Add a class for pending cluster tasks request builder. It allows to:

	Instantiate pending cluster tasks request builder  with elasticsearch client, pending cluster tasks action and pending cluster tasks action

43.4. Add a class for pending tasks blocks IT. It allows to:

	Handle test pending tasks with blocks

43.5. Add a class for transport pending cluster tasks action. It allows to:

	Instantiate transport pending cluster tasks action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation

44. Changes to package org.elasticsearch.action.admin.indices:  

44.1. Add a class for transport analyze action tests. It allows to:

	Set transport analyze action tests;
	Get char filters;
	Get tokenizers;
	Get token filters;
	Get pre configured char filters;
	Handle test no index analyzers;
	Handle test fills attributes;
	Handle test with index analyzers;
	Handle test get index analyser without index analyzers;
	Handle test unknown;
	Handle test non pre build token filter;
	Handle test normalizer with index;
	Handle test exceed default max token limit;
	Handle test exceed set max token limit

45. Changes to package org.elasticsearch.action.admin.indices.alias:  

45.1. Add a class for alias. It allows to:

	Instantiate alias;
	Name alias;
	Get filter;
	Routing alias;
	Get index routing;
	Write index;
	Read stream input;
	Read  from stream input;
	Write  to stream output;
	Process alias alias from X content;
	Convert alias to X content;
	Convert alias to string;
	Check if alias equals;
	Hash code

45.2. Add a class for alias actions tests. It allows to:

	Handle test validate;
	Handle test empty index;
	Handle test empty alias;
	Handle test bad options in non index;
	Handle test parse add;
	Handle test parse add default routing;
	Handle test parse remove;
	Handle test parse remove index;
	Handle test parse index and indices throws error;
	Handle test parse alias and aliases throws error;
	Handle test round trip;
	Convert test from

45.3. Add an object creator class for indices aliases action. It allows to:

	Instantiate indices aliases action;
	Handle new response

45.4. Add a class for indices aliases cluster state update request. It allows to:

	Instantiate indices aliases cluster state update request  with actions list;
	Get actions

45.5. Add a class for indices aliases request builder. It allows to:

	Instantiate indices aliases request builder  with elasticsearch client, indices aliases action and indices aliases action;
	Add indices aliases request builder alias;
	Add  alias filter map;
	Add  alias filter builder;
	Remove indices aliases request builder alias;
	Remove index;
	Add alias action

45.6. Add a class for indices aliases request tests. It allows to:

	Convert test;
	Create test instance

45.7. Add a class for transport indices aliases action. It allows to:

	Instantiate transport indices aliases action  with transport service, cluster service, thread pool, meta data index aliases service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation;
	Process  on response;
	Process  on failure;
	Handle concrete aliases

46. Changes to package org.elasticsearch.action.admin.indices.alias.exists:  

46.1. Add an object creator class for aliases exist action. It allows to:

	Instantiate aliases exist action;
	Handle new response

46.2. Add a class for aliases exist request builder. It allows to:

	Instantiate aliases exist request builder  with elasticsearch client, aliases exist action and aliases exist action

46.3. Add a class for aliases exist response. It allows to:

	Instantiate aliases exist response;
	Check if aliases exist response exists;
	Check if aliases exist response is exists;
	Read  from stream input;
	Write  to stream output

46.4. Add a class for transport aliases exist action. It allows to:

	Instantiate transport aliases exist action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation

47. Changes to package org.elasticsearch.action.admin.indices.alias.get:  

47.1. Add a class for base aliases request builder. It allows to:

	Instantiate base aliases request builder  with elasticsearch client, action and action;
	Set aliases;
	Add aliases;
	Set indices;
	Add indices;
	Set indices options

47.2. Add an object creator class for get aliases action. It allows to:

	Instantiate get aliases action;
	Handle new response

47.3. Add a class for get aliases request. It allows to:

	Instantiate get aliases request;
	Instantiate get aliases request  with stream input;
	Write  to stream output;
	Get indices;
	Get aliases;
	Get indices options;
	Replace aliases;
	Get original aliases;
	Expand aliases wildcards;
	Validate get aliases request;
	Read  from stream input

47.4. Add a class for get aliases request builder. It allows to:

	Instantiate get aliases request builder  with elasticsearch client, get aliases action and get aliases action

47.5. Add a class for get aliases response. It allows to:

	Instantiate get aliases response  with aliases immutable open map;
	Instantiate get aliases response;
	Get aliases;
	Read  from stream input;
	Write  to stream output;
	Check if get aliases response equals;
	Hash code

47.6. Add a class for transport get aliases action. It allows to:

	Instantiate transport get aliases action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation;
	Post process

48. Changes to package org.elasticsearch.action.admin.indices.analyze:  

48.1. Add an object creator class for analyze action. It allows to:

	Instantiate analyze action;
	Handle new response

48.2. Add a class for analyze request builder. It allows to:

	Instantiate analyze request builder  with elasticsearch client, analyze action and analyze action;
	Set analyzer;
	Set field;
	Set tokenizer;
	Add token filter;
	Add char filter;
	Explain analyze request builder;
	Set attributes;
	Set text;
	Set normalizer

48.3. Add a class for analyze request tests. It allows to:

	Handle test validation;
	Handle test serialization

49. Changes to package org.elasticsearch.action.admin.indices.cache.clear:  

49.1. Add an object creator class for clear indices cache action. It allows to:

	Instantiate clear indices cache action;
	Handle new response

49.2. Add a class for clear indices cache blocks IT. It allows to:

	Handle test clear indices cache with blocks

49.3. Add a class for clear indices cache request. It allows to:

	Instantiate clear indices cache request;
	Handle query cache;
	Get query cache;
	Handle request cache;
	Get request cache;
	Handle field data cache;
	Get field data cache;
	Get fields;
	Read  from stream input;
	Write  to stream output

49.4. Add a class for clear indices cache request builder. It allows to:

	Instantiate clear indices cache request builder  with elasticsearch client, clear indices cache action and clear indices cache action;
	Set query cache;
	Set request cache;
	Set field data cache;
	Set fields

49.5. Add a class for clear indices cache response. It allows to:

	Instantiate clear indices cache response;
	Instantiate clear indices cache response  with shard failures list;
	Process clear indices cache response clear indices cache response from X content

49.6. Add a class for transport clear indices cache action. It allows to:

	Instantiate transport clear indices cache action  with cluster service, transport service, indices service, action filters, index name expression resolver and index name expression resolver;
	Read shard result;
	Handle new response;
	Read request  from stream input;
	Handle shard operation;
	Get shards;
	Check global block;
	Check request block

50. Changes to package org.elasticsearch.action.admin.indices.close:  

50.1. Add an object creator class for close index action. It allows to:

	Instantiate close index action;
	Handle new response

50.2. Add a class for close index cluster state update request. It allows to:

	Instantiate close index cluster state update request;
	Get task id;
	Wait close index cluster state update request for active shards;
	Wait wait for active shard count for active shards

50.3. Add a class for close index request. It allows to:

	Instantiate close index request;
	Validate close index request;
	Get indices;
	Get indices options;
	Wait close index request for active shards;
	Wait wait for active shard count for active shards;
	Read  from stream input;
	Write  to stream output

50.4. Add a class for close index request builder. It allows to:

	Instantiate close index request builder  with elasticsearch client, close index action and close index action;
	Set indices;
	Set indices options;
	Set wait  for active shards;

50.5. Add a class for close index response. It allows to:

	Instantiate close index response;
	Read  from stream input;
	Write  to stream output

50.6. Add a class for close index response tests. It allows to:

	Handle test serialization;
	Handle test bwc serialization;
	Handle random response;
	Assert close index response

50.7. Add a class for transport close index action. It allows to:

	Instantiate transport close index action  with settings, transport service, cluster service, thread pool, meta data index state service, cluster settings, action filters, index name expression resolver, destructive operations and destructive operations;
	Set close index enabled;
	Get executor;
	Handle new response;
	Execute task;
	Check block;
	Handle master operation;

51. Changes to package org.elasticsearch.action.admin.indices.create:  

51.1. Add an object creator class for create index action. It allows to:

	Instantiate create index action;
	Handle new response

51.2. Add a class for create index cluster state update request. It allows to:

	Instantiate create index cluster state update request  with original message;
	Get settings;
	Get mappings;
	Get aliases;
	Get blocks;
	Get state;
	Recover  from recover from index;
	Wait wait for active shard count for active shards;
	Resize type;
	Copy settings;
	Handle original message;
	Cause create index cluster state update request;
	Get index;
	Recover create index cluster state update request from;
	Get provided name;
	Wait create index cluster state update request for active shards;

51.3. Add a class for create index IT. It allows to:

	Handle test creation date given fails;
	Handle test creation date generated;
	Handle test double add mapping;
	Handle test non nested mappings;
	Handle test empty nested mappings;
	Handle test empty mappings;
	Handle test invalid shard count settings;
	Handle test create index with blocks;
	Handle test create index with metadata blocks;
	Handle test unknown setting fails;
	Handle test invalid shard count settings without prefix;
	Handle test create and delete index concurrently;
	Process  on response;
	Run;
	Process  on failure;
	Handle test restart index creation after full cluster restart;
	Handle test default wait for active shards uses index setting;
	Handle test invalid partition size;
	Handle test index name in response;
	Handle test index with unknown setting;
	Handle on node stopped

51.4. Add a class for create index request. It allows to:

	Instantiate create index request;
	Instantiate create index request  with settings;
	Validate create index request;
	Get indices;
	Get indices options;
	Get index;
	Get settings;
	Cause create index request;
	Get mapping;
	Get aliases;
	Process create index request create index request alias;
	Get source;
	Get mappings;
	Wait create index request for active shards;
	Wait wait for active shard count for active shards;
	Read  from stream input;
	Write  to stream output;
	Convert create index request to X content;
	Handle inner to X content

51.5. Add a class for create index request builder. It allows to:

	Instantiate create index request builder  with elasticsearch client, create index action and create index action;
	Set index;
	Set settings;
	Add mapping;
	Set cause;
	Set aliases;
	Add  alias alias;
	Set source;
	Set wait  for active shards;

51.6. Add a class for create index request builder tests. It allows to:

	Set create index request builder tests;
	Tear create index request builder tests;
	Handle test set source;
	Handle test set settings

51.7. Add a class for create index request tests. It allows to:

	Handle test serialization;
	Handle test top level keys;
	Convert test;
	Assert mappings equal;
	Assert aliases equal

51.8. Add a class for create index response. It allows to:

	Declare fields;
	Instantiate create index response;
	Read  from stream input;
	Write  to stream output;
	Get index;
	Add custom fields;
	Process create index response create index response from X content;
	Check if create index response equals;
	Hash code

51.9. Add a class for create index response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance;
	Do parse instance;
	Convert test;

51.10. Add a class for shrink index IT. It allows to:

	Handle forbid private index settings;
	Convert test create shrink index;
	Handle test shrink index primary term;
	Get index meta data;
	Handle test create shrink index;
	Handle test create shrink index fails;
	Handle test create shrink with index sort;
	Handle test shrink commits merge on idle

51.11. Add a class for split index IT. It allows to:

	Handle forbid private index settings;
	Convert test create split index;
	Convert test split from one;
	Split split index IT to N;
	Nested split index IT;
	Assert all unique docs;
	Handle test split index primary term;
	Get index meta data;
	Handle test create split index;
	Handle test create split with index sort

51.12. Add a class for transport create index action. It allows to:

	Instantiate transport create index action  with transport service, cluster service, thread pool, meta data create index service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

52. Changes to package org.elasticsearch.action.admin.indices.delete:  

52.1. Add an object creator class for delete index action. It allows to:

	Instantiate delete index action;
	Handle new response

52.2. Add a class for delete index blocks IT. It allows to:

	Handle test delete index with blocks;
	Handle test delete index on index read only allow delete setting;
	Handle test delete index on read only allow delete setting

52.3. Add a class for delete index cluster state update request. It allows to:

	Instantiate delete index cluster state update request

52.4. Add a class for delete index request. It allows to:

	Instantiate delete index request;
	Get indices options;
	Validate delete index request;
	Get indices;
	Read  from stream input;
	Write  to stream output

52.5. Add a class for delete index request builder. It allows to:

	Instantiate delete index request builder  with elasticsearch client, delete index action and delete index action;
	Set indices options

52.6. Add a class for transport delete index action. It allows to:

	Instantiate transport delete index action  with transport service, cluster service, thread pool, meta data delete index service, action filters, index name expression resolver, destructive operations and destructive operations;
	Get executor;
	Handle new response;
	Execute task;
	Check block;
	Handle master operation;
	Process  on response;
	Process  on failure

53. Changes to package org.elasticsearch.action.admin.indices.exists:  

53.1. Add a class for indices exists IT. It allows to:

	Handle test index exists with blocks in place

54. Changes to package org.elasticsearch.action.admin.indices.exists.indices:  

54.1. Add an object creator class for indices exists action. It allows to:

	Instantiate indices exists action;
	Handle new response

54.2. Add a class for indices exists request. It allows to:

	Instantiate indices exists request;
	Instantiate indices exists request  with stream input;
	Write  to stream output;
	Get indices;
	Get indices options;
	Expand wilcards open;
	Expand wilcards closed;
	Validate indices exists request;
	Read  from stream input

54.3. Add a class for indices exists request builder. It allows to:

	Instantiate indices exists request builder  with elasticsearch client, indices exists action and indices exists action;
	Set indices;
	Set expand wildcards open;
	Set expand wildcards closed

54.4. Add a class for indices exists response. It allows to:

	Instantiate indices exists response;
	Check if indices exists response is exists;
	Read  from stream input;
	Write  to stream output

54.5. Add a class for transport indices exists action. It allows to:

	Instantiate transport indices exists action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

55. Changes to package org.elasticsearch.action.admin.indices.exists.types:  

55.1. Add a class for transport types exists action. It allows to:

	Instantiate transport types exists action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation

55.2. Add an object creator class for types exists action. It allows to:

	Instantiate types exists action;
	Handle new response

55.3. Add a class for types exists request. It allows to:

	Instantiate types exists request;
	Instantiate types exists request  with stream input;
	Write  to stream output;
	Get indices;
	Get types;
	Handle types;
	Get indices options;
	Validate types exists request;
	Read  from stream input

55.4. Add a class for types exists request builder. It allows to:

	Instantiate types exists request builder  with elasticsearch client, types exists action and types exists action;
	Set indices;
	Set types;
	Set indices options

55.5. Add a class for types exists response. It allows to:

	Instantiate types exists response;
	Check if types exists response is exists;
	Read  from stream input;
	Write  to stream output

56. Changes to package org.elasticsearch.action.admin.indices.flush:  

56.1. Add an object creator class for flush action. It allows to:

	Instantiate flush action;
	Handle new response

56.2. Add a class for flush blocks IT. It allows to:

	Handle test flush with blocks

56.3. Add a class for flush request. It allows to:

	Instantiate flush request;
	Instantiate flush request  with stream input;
	Wait flush request if ongoing;
	Force flush request;
	Validate flush request;
	Write  to stream output;
	Read  from stream input;
	Convert flush request to string

56.4. Add a class for flush request builder. It allows to:

	Instantiate flush request builder  with elasticsearch client, flush action and flush action;
	Set force;
	Set wait  if ongoing

56.5. Add a class for flush response. It allows to:

	Instantiate flush response;
	Instantiate flush response  with shard failures list;
	Process flush response flush response from X content

56.6. Add a class for flush response tests. It allows to:

	Create test instance;
	Do parse instance

56.7. Add a class for shard flush request. It allows to:

	Instantiate shard flush request  with flush request, shard id and shard id;
	Instantiate shard flush request  with stream input;
	Get request;
	Read  from stream input;
	Write  to stream output;
	Convert shard flush request to string

56.8. Add an object creator class for synced flush action. It allows to:

	Instantiate synced flush action;
	Handle new response

56.9. Add a class for synced flush request. It allows to:

	Instantiate synced flush request;
	Convert synced flush request to string

56.10. Add a class for synced flush request builder. It allows to:

	Instantiate synced flush request builder  with elasticsearch client, synced flush action and synced flush action;
	Set indices;
	Set indices options

56.11. Add an object creator class for transport flush action. It allows to:

	Instantiate transport flush action  with cluster service, transport service, action filters, index name expression resolver, replicated flush action and replicated flush action;
	Handle new shard response;
	Handle new shard request;
	Handle new response

56.12. Add an object creator class for transport shard flush action. It allows to:

	Instantiate transport shard flush action  with settings, transport service, cluster service, indices service, thread pool, shard state action, action filters, index name expression resolver and index name expression resolver;
	Handle new response instance;
	Handle shard operation on primary;
	Handle shard operation on replica

56.13. Add a class for transport synced flush action. It allows to:

	Instantiate transport synced flush action  with transport service, action filters, synced flush service and synced flush service;
	Execute task

57. Changes to package org.elasticsearch.action.admin.indices.forcemerge:  

57.1. Add an object creator class for force merge action. It allows to:

	Instantiate force merge action;
	Handle new response

57.2. Add a class for force merge blocks IT. It allows to:

	Handle test force merge with blocks

57.3. Add a class for force merge request builder. It allows to:

	Instantiate force merge request builder  with elasticsearch client, force merge action and force merge action;
	Set max num segments;
	Set force merge request builder only expunge deletes;
	Set flush

57.4. Add a class for force merge response. It allows to:

	Instantiate force merge response;
	Instantiate force merge response  with shard failures list;
	Process force merge response force merge response from X content

57.5. Add a class for transport force merge action. It allows to:

	Instantiate transport force merge action  with cluster service, transport service, indices service, action filters, index name expression resolver and index name expression resolver;
	Read shard result;
	Handle new response;
	Read request  from stream input;
	Handle shard operation;
	Get shards;
	Check global block;
	Check request block

58. Changes to package org.elasticsearch.action.admin.indices.get:  

58.1. Add an object creator class for get index action. It allows to:

	Instantiate get index action;
	Handle new response

58.2. Add a class for get index IT. It allows to:

	Handle setup suite scope cluster;
	Handle test simple;
	Handle test simple unknown index;
	Handle test empty;
	Handle test simple mapping;
	Handle test simple alias;
	Handle test simple settings;
	Handle test simple mixed features;
	Handle test empty mixed features;
	Handle test get index with blocks;
	Run get index request builder with random feature method;
	Assert settings;
	Assert non empty settings;
	Assert mappings;
	Assert empty or  only default mappings;
	Assert aliases;
	Assert empty settings;
	Assert empty mappings;
	Assert empty aliases

58.3. Add a class for get index request. It allows to:

	Get feature;
	I get index request;
	Process get index request get index request from id;
	Instantiate get index request;
	Instantiate get index request  with stream input;
	Get features;
	Add features;
	Validate get index request;
	Handle human readable;
	Include defaults;
	Read  from stream input;
	Write  to stream output

58.4. Add a class for get index request builder. It allows to:

	Instantiate get index request builder  with elasticsearch client, get index action and get index action;
	Set features;
	Add features

58.5. Add a class for transport get index action. It allows to:

	Instantiate transport get index action  with transport service, cluster service, thread pool, settings filter, action filters, index name expression resolver, indices service, index scoped settings and index scoped settings;
	Get executor;
	Check block;
	Handle new response;
	Do master operation

59. Changes to package org.elasticsearch.action.admin.indices.mapping.get:  

59.1. Add an object creator class for get field mappings action. It allows to:

	Instantiate get field mappings action;
	Handle new response

59.2. Add a class for get field mappings index request. It allows to:

	Instantiate get field mappings index request;
	Instantiate get field mappings index request  with other get field mappings request;
	Validate get field mappings index request;
	Get types;
	Get fields;
	Probably single field request;
	Include defaults;
	Get indices;
	Get indices options;
	Write  to stream output;
	Read  from stream input

59.3. Add a class for get field mappings request. It allows to:

	Instantiate get field mappings request;
	Handle local;
	Get indices;
	Get types;
	Get indices options;
	Get fields;
	Include defaults;
	Validate get field mappings request;
	Write  to stream output;
	Read  from stream input

59.4. Add a class for get field mappings request builder. It allows to:

	Instantiate get field mappings request builder  with elasticsearch client, get field mappings action and get field mappings action;
	Set indices;
	Add indices;
	Set types;
	Add types;
	Set indices options;
	Set fields;
	Include defaults

59.5. Add a class for get field mappings response tests. It allows to:

	Handle test manual serialization;
	Handle test manual junked json;
	Do parse instance;
	Create blank instance;
	Create test instance;
	Get random fields exclude filter;
	Get get field mappings response tests to X content params;
	Handle random mapping

59.6. Add an object creator class for get mappings action. It allows to:

	Instantiate get mappings action;
	Handle new response

59.7. Add a class for get mappings request. It allows to:

	Instantiate get mappings request;
	Instantiate get mappings request  with stream input;
	Validate get mappings request

59.8. Add a class for get mappings request builder. It allows to:

	Instantiate get mappings request builder  with elasticsearch client, get mappings action and get mappings action

59.9. Add a class for get mappings response. It allows to:

	Instantiate get mappings response  with mappings;
	Instantiate get mappings response;
	Get mappings;
	Read  from stream input;
	Write  to stream output;
	Process get mappings response get mappings response from X content;
	Convert get mappings response to X content;
	Convert get mappings response to string;
	Hash code;
	Check if get mappings response equals

59.10. Add a class for transport get field mappings action. It allows to:

	Instantiate transport get field mappings action  with transport service, cluster service, shard action, action filters, index name expression resolver and index name expression resolver;
	Execute task;
	Process  on response;
	Process  on failure;
	Merge index responses atomic reference array

59.11. Add a class for transport get field mappings index action. It allows to:

	Instantiate transport get field mappings index action  with cluster service, transport service, indices service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Resolve index;
	Get shards;
	Handle shard operation;
	Handle new response;
	Check request block;
	Get param;
	Param  as boolean;
	Param default value boolean as boolean;
	Find field mappings  by type;
	Add field mapper

59.12. Add a class for transport get mappings action. It allows to:

	Instantiate transport get mappings action  with transport service, cluster service, thread pool, action filters, index name expression resolver, indices service and indices service;
	Get executor;
	Check block;
	Handle new response;
	Do master operation

60. Changes to package org.elasticsearch.action.admin.indices.mapping.put:  

60.1. Add an object creator class for put mapping action. It allows to:

	Instantiate put mapping action;
	Handle new response

60.2. Add a class for put mapping cluster state update request. It allows to:

	Instantiate put mapping cluster state update request;
	Get type;
	Get source;

60.3. Add a class for put mapping request. It allows to:

	Instantiate put mapping request;
	Validate put mapping request;
	Get indices;
	Set concrete index;
	Get concrete index;
	Get indices options;
	Get type;
	Get source;
	Get origin;
	Build put mapping request from simplified def;
	Read  from stream input;
	Write  to stream output;
	Convert put mapping request to X content

60.4. Add a class for put mapping request builder. It allows to:

	Instantiate put mapping request builder  with elasticsearch client, put mapping action and put mapping action;
	Set indices;
	Set concrete index;
	Set indices options;
	Set type;
	Set source;

60.5. Add a class for put mapping request tests. It allows to:

	Handle test validation;
	Handle test build from simplified def;
	Convert test;
	Assert mappings equal;
	Create test item

61. Changes to package org.elasticsearch.action.admin.indices.open:  

61.1. Add an object creator class for open index action. It allows to:

	Instantiate open index action;
	Handle new response

61.2. Add a class for open index cluster state update request. It allows to:

	Instantiate open index cluster state update request;
	Wait open index cluster state update request for active shards;
	Wait wait for active shard count for active shards

61.3. Add a class for open index request. It allows to:

	Instantiate open index request;
	Validate open index request;
	Get indices;
	Get indices options;
	Wait open index request for active shards;
	Wait wait for active shard count for active shards;
	Read  from stream input;
	Write  to stream output

61.4. Add a class for open index request builder. It allows to:

	Instantiate open index request builder  with elasticsearch client, open index action and open index action;
	Set indices;
	Set indices options;
	Set wait  for active shards;

61.5. Add a class for open index response. It allows to:

	Instantiate open index response;
	Read  from stream input;
	Write  to stream output;
	Process open index response open index response from X content

61.6. Add an object creator class for open index response tests. It allows to:

	Do parse instance;
	Create test instance;
	Create blank instance;
	Mutate instance

61.7. Add a class for transport open index action. It allows to:

	Instantiate transport open index action  with transport service, cluster service, thread pool, meta data index state service, action filters, index name expression resolver, destructive operations and destructive operations;
	Get executor;
	Handle new response;
	Execute task;
	Check block;
	Handle master operation;
	Process  on response;
	Process  on failure

62. Changes to package org.elasticsearch.action.admin.indices.recovery:  

62.1. Add an object creator class for recovery action. It allows to:

	Instantiate recovery action;
	Handle new response

62.2. Add a class for recovery request. It allows to:

	Instantiate recovery request;
	Handle detailed;
	Handle active only;
	Write  to stream output;
	Read  from stream input

62.3. Add a class for recovery request builder. It allows to:

	Instantiate recovery request builder  with elasticsearch client, recovery action and recovery action;
	Set detailed;
	Set active  only

62.4. Add a class for recovery response. It allows to:

	Instantiate recovery response;
	Instantiate recovery response  with shard recovery states map, shard failures list and shard failures list;
	Check if recovery response has recoveries;
	Shard recovery states;
	Convert recovery response to X content;
	Write  to stream output;
	Read  from stream input;
	Convert recovery response to string

62.5. Add a class for transport recovery action. It allows to:

	Instantiate transport recovery action  with cluster service, transport service, indices service, action filters, index name expression resolver and index name expression resolver;
	Read shard result;
	Handle new response;
	Read request  from stream input;
	Handle shard operation;
	Get shards;
	Check global block;
	Check request block

63. Changes to package org.elasticsearch.action.admin.indices.refresh:  

63.1. Add an object creator class for refresh action. It allows to:

	Instantiate refresh action;
	Handle new response

63.2. Add a class for refresh blocks IT. It allows to:

	Handle test refresh with blocks

63.3. Add a class for refresh request. It allows to:

	Instantiate refresh request;
	Instantiate refresh request  with stream input

63.4. Add a class for refresh request builder. It allows to:

	Instantiate refresh request builder  with elasticsearch client, refresh action and refresh action

63.5. Add a class for refresh response. It allows to:

	Instantiate refresh response;
	Instantiate refresh response  with shard failures list;
	Process refresh response refresh response from X content

63.6. Add a class for refresh response tests. It allows to:

	Create test instance;
	Do parse instance

63.7. Add an object creator class for transport refresh action. It allows to:

	Instantiate transport refresh action  with cluster service, transport service, action filters, index name expression resolver, transport shard refresh action and transport shard refresh action;
	Handle new shard response;
	Handle new shard request;
	Handle new response

63.8. Add an object creator class for transport shard refresh action. It allows to:

	Instantiate transport shard refresh action  with settings, transport service, cluster service, indices service, thread pool, shard state action, action filters, index name expression resolver and index name expression resolver;
	Handle new response instance;
	Handle shard operation on primary;
	Handle shard operation on replica

64. Changes to package org.elasticsearch.action.admin.indices.rollover:  

64.1. Add a class for condition tests. It allows to:

	Handle test max age;
	Handle test max docs;
	Handle test max size;
	Handle test equals and hash code;
	Handle random byte size

64.2. Add a class for max age condition. It allows to:

	Instantiate max age condition  with time value;
	Instantiate max age condition  with stream input;
	Evaluate stats;
	Get writeable name;
	Write  to stream output;
	Convert max age condition to X content;
	Process max age condition max age condition from X content

64.3. Add a class for max docs condition. It allows to:

	Instantiate max docs condition;
	Instantiate max docs condition  with stream input;
	Evaluate stats;
	Get writeable name;
	Write  to stream output;
	Convert max docs condition to X content;
	Process max docs condition max docs condition from X content

64.4. Add a class for max size condition. It allows to:

	Instantiate max size condition  with byte size value;
	Instantiate max size condition  with stream input;
	Evaluate stats;
	Get writeable name;
	Write  to stream output;
	Convert max size condition to X content;
	Process max size condition max size condition from X content

64.5. Add an object creator class for rollover action. It allows to:

	Instantiate rollover action;
	Handle new response

64.6. Add a class for rollover IT. It allows to:

	Handle node plugins;
	Handle test rollover on empty index;
	Handle test rollover;
	Handle test rollover with explicit write index;
	Handle test rollover with no write index;
	Handle test rollover with index settings;
	Handle test rollover dry run;
	Handle test rollover conditions not met;
	Handle test rollover with new index name;
	Handle test rollover on existing index;
	Handle test rollover with date math;
	Handle test rollover max size;
	Handle test reject if alias found in template

64.7. Add a class for rollover request. It allows to:

	Instantiate rollover request;
	Validate rollover request;
	Read  from stream input;
	Write  to stream output;
	Get indices;
	Get indices options;
	Set rollover request alias;
	Set new index name;
	Handle dry run;
	Add max index age condition;
	Add max index docs condition;
	Add max index size condition;
	Check if rollover request is dry run;
	Get conditions;
	Get rollover request alias;
	Get new index name;
	Get create index request;
	Convert rollover request to X content;
	Process rollover request rollover request from X content

64.8. Add a class for rollover request builder. It allows to:

	Instantiate rollover request builder  with elasticsearch client, rollover action and rollover action;
	Set rollover request builder alias;
	Set new index name;
	Add max index age condition;
	Add max index docs condition;
	Add max index size condition;
	Handle dry run;
	Get settings;
	Process rollover request builder rollover request builder alias;
	Get mapping;
	Wait wait for active shard count for active shards;
	Wait rollover request builder for active shards

64.9. Add a class for rollover request tests. It allows to:

	Set rollover request tests;
	Handle test conditions parsing;
	Handle test parsing with index settings;
	Handle test serialize;
	Convert test;
	Handle test unknown fields;
	Handle test same condition can only be added once;
	Handle test validation;
	Create test item

64.10. Add a class for rollover response. It allows to:

	Instantiate rollover response;
	Instantiate rollover response  with condition results map;
	Get old index;
	Get new index;
	Get condition status;
	Check if rollover response is dry run;
	Check if rollover response is rolled over;
	Read  from stream input;
	Write  to stream output;
	Add custom fields;
	Process rollover response rollover response from X content;
	Check if rollover response equals;
	Hash code

64.11. Add a class for rollover response tests. It allows to:

	Create test instance;
	Handle random results;
	Create blank instance;
	Do parse instance;
	Get random fields exclude filter;
	Mutate instance;
	Handle test old serialisation

64.12. Add a class for transport rollover action. It allows to:

	Instantiate transport rollover action  with transport service, cluster service, thread pool, meta data create index service, action filters, index name expression resolver, meta data index aliases service, client and client;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation;
	Process  on response;
	Process  on failure;
	Prepare rollover aliases update request;
	Prepare rollover aliases write index update request;
	Generate rollover index name;
	Evaluate conditions;
	Validate meta data;
	Prepare create index request;
	Check no duplicated alias  in index template

64.13. Add a class for transport rollover action tests. It allows to:

	Handle test doc stats selection from primaries only;
	Handle test evaluate conditions;
	Handle test evaluate without doc stats;
	Handle test create update alias request;
	Handle test create update alias request with explicit write index;
	Handle test validation;
	Handle test generate rollover index name;
	Handle test create index request;
	Handle test reject duplicate alias;
	Create indices stat response;
	Create meta data;
	Create test condition

65. Changes to package org.elasticsearch.action.admin.indices.segments:  

65.1. Add a class for index segments. It allows to:

	Instantiate index segments  with shards segments;
	Get index;
	Get shards;
	Get iterator

65.2. Add a class for index shard segments. It allows to:

	Instantiate index shard segments  with shard id, shards segments and shards segments;
	Get shard id;
	Get index shard segments at;
	Get shards;
	Get iterator

65.3. Add an object creator class for indices segments action. It allows to:

	Instantiate indices segments action;
	Handle new response

65.4. Add a class for indices segments blocks IT. It allows to:

	Handle test indices segments with blocks

65.5. Add a class for indices segments request. It allows to:

	Instantiate indices segments request;
	Handle verbose;
	Write  to stream output;
	Read  from stream input

65.6. Add a class for indices segments request builder. It allows to:

	Instantiate indices segments request builder  with elasticsearch client, indices segments action and indices segments action;
	Set verbose

65.7. Add a class for indices segments request tests. It allows to:

	Get plugins;
	Handle setup index;
	Handle test basic;
	Handle test verbose;
	Handle test request on closed index;
	Handle test request on closed index ignore unavailable;
	Handle test allow no index

65.8. Add a class for shard segments. It allows to:

	Instantiate shard segments;
	Instantiate shard segments  with shard routing, segments list and segments list;
	Get iterator;
	Get shard routing;
	Get segments;
	Get number  of committed;
	Get number  of search;
	Read shard segments;
	Read  from stream input;
	Write  to stream output

65.9. Add a class for transport indices segments action. It allows to:

	Instantiate transport indices segments action  with cluster service, transport service, indices service, action filters, index name expression resolver and index name expression resolver;
	Get shards;
	Check global block;
	Check request block;
	Read shard result;
	Handle new response;
	Read request  from stream input;
	Handle shard operation

66. Changes to package org.elasticsearch.action.admin.indices.settings.get:  

66.1. Add an object creator class for get settings action. It allows to:

	Instantiate get settings action;
	Handle new response

66.2. Add a class for get settings request. It allows to:

	Get indices;
	Get indices options;
	Include defaults;
	Instantiate get settings request;
	Instantiate get settings request  with stream input;
	Write  to stream output;
	Get names;
	Handle human readable;
	Validate get settings request;
	Read  from stream input;
	Check if get settings request equals;
	Hash code

66.3. Add a class for get settings request builder. It allows to:

	Instantiate get settings request builder  with elasticsearch client, get settings action and get settings action;
	Set indices;
	Add indices;
	Set indices options;
	Set names

66.4. Add a class for get settings response. It allows to:

	Instantiate get settings response  with index to settings immutable open map, index to default settings immutable open map and index to default settings immutable open map;
	Instantiate get settings response;
	Get index  to settings;
	Get index  to default settings;
	Setting get settings response;
	Read  from stream input;
	Write  to stream output;
	Parse settings field;
	Parse index entry;
	Process get settings response get settings response from X content;
	Convert get settings response to string;
	Convert get settings response to X content;
	Check if get settings response equals;
	Hash code

66.5. Add a class for transport get settings action. It allows to:

	Instantiate transport get settings action  with transport service, cluster service, thread pool, settings filter, action filters, index name expression resolver, indexed scoped settings and indexed scoped settings;
	Get executor;
	Check block;
	Handle new response;
	Check if transport get settings action is filtered request;
	Handle master operation

67. Changes to package org.elasticsearch.action.admin.indices.settings.put:  

67.1. Add a class for transport update settings action. It allows to:

	Instantiate transport update settings action  with transport service, cluster service, thread pool, meta data update settings service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation;
	Process  on response;
	Process  on failure

67.2. Add an object creator class for update settings action. It allows to:

	Instantiate update settings action;
	Handle new response

67.3. Add a class for update settings cluster state update request. It allows to:

	Check if update settings cluster state update request is preserve existing;
	Set update settings cluster state update request;
	Get settings;

67.4. Add a class for update settings request. It allows to:

	Instantiate update settings request;
	Instantiate update settings request  with settings;
	Validate update settings request;
	Get indices;
	Get settings;
	Get indices options;
	Check if update settings request is preserve existing;
	Set update settings request;
	Read  from stream input;
	Write  to stream output;
	Convert update settings request to X content;
	Process update settings request update settings request from X content;
	Convert update settings request to string;
	Check if update settings request equals;
	Hash code

67.5. Add a class for update settings request builder. It allows to:

	Instantiate update settings request builder  with elasticsearch client, update settings action and update settings action;
	Set indices;
	Set indices options;
	Set settings;
	Set update settings request builder

68. Changes to package org.elasticsearch.action.admin.indices.shards:  

68.1. Add a class for indices shard store request builder. It allows to:

	Instantiate indices shard store request builder  with elasticsearch client, action and action;
	Set indices;
	Set indices options;
	Set shard statuses

68.2. Add a class for indices shard store response tests. It allows to:

	Handle test basic serialization;
	Handle test store status ordering

68.3. Add an object creator class for indices shard stores action. It allows to:

	Instantiate indices shard stores action;
	Handle new response

68.4. Add a class for indices shard stores request. It allows to:

	Instantiate indices shard stores request;
	Instantiate indices shard stores request  with stream input;
	Write  to stream output;
	Handle shard statuses;
	Get indices options;
	Get indices;
	Validate indices shard stores request;
	Read  from stream input

69. Changes to package org.elasticsearch.action.admin.indices.shrink:  

69.1. Add an object creator class for resize action. It allows to:

	Instantiate resize action;
	Handle new response

69.2. Add a class for resize request. It allows to:

	Instantiate resize request;
	Validate resize request;
	Set source index;
	Read  from stream input;
	Write  to stream output;
	Get indices;
	Get indices options;
	Set target index;
	Get target index request;
	Get source index;
	Set wait  for active shards;
	Set resize type;
	Get resize type;
	Get set copy settings;
	Get copy settings;
	Convert resize request to X content;
	Process resize request resize request from X content

69.3. Add a class for resize request builder. It allows to:

	Instantiate resize request builder  with elasticsearch client, action and action;
	Set target index;
	Set source index;
	Set settings;
	Set wait  for active shards;
	Set resize type

69.4. Add a class for resize request tests. It allows to:

	Handle test copy settings validation;
	Run test copy settings validation;
	Convert test;
	Create test item

69.5. Add a class for resize response. It allows to:

	Instantiate resize response;
	Process resize response resize response from X content

69.6. Add a class for resize response tests. It allows to:

	Convert test;
	Do parse instance;
	Create test instance;
	Create blank instance;
	Mutate instance

69.7. Add an object creator class for shrink action. It allows to:

	Instantiate shrink action;
	Handle new response

69.8. Add a class for transport resize action. It allows to:

	Instantiate transport resize action  with transport service, cluster service, thread pool, meta data create index service, action filters, index name expression resolver, client and client;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation;
	Prepare create index request

69.9. Add a class for transport resize action tests. It allows to:

	Create cluster state;
	Handle test error condition;
	Handle test pass num routing shards;
	Handle test pass num routing shards and fail;
	Handle test shrink index settings;
	Handle new node

70. Changes to package org.elasticsearch.action.admin.indices.stats:  

70.1. Add a class for common stats. It allows to:

	Instantiate common stats;
	Instantiate common stats  with common stats flags;
	Instantiate common stats  with indices query cache, index shard, common stats flags and common stats flags;
	Instantiate common stats  with stream input;
	Write  to stream output;
	Add common stats;
	Get docs;
	Get store;
	Get indexing;
	Get common stats;
	Get search;
	Merge common stats;
	Refresh common stats;
	Get flush;
	Get warmer;
	Get query cache;
	Get field data;
	Get completion;
	Get segments;
	Get translog;
	Get request cache;
	Get recovery stats;
	Get total memory;
	Convert common stats to X content

70.2. Add a class for common stats flags. It allows to:

	Instantiate common stats flags  with flags;
	Instantiate common stats flags  with stream input;
	Write  to stream output;
	All common stats flags;
	Handle clear;
	Any set;
	Get flags;
	Get types;
	Get groups;
	Get field data fields;
	Get completion data fields;
	Include segment file sizes;
	Include unloaded segments;
	Check if common stats flags is set;
	Handle un set;
	Set flag;
	Clone common stats flags;
	Get flag;
	Get rest name;
	Get index

70.3. Add a class for index shard stats. It allows to:

	Instantiate index shard stats;
	Instantiate index shard stats  with shard id, shards stats and shards stats;
	Get shard id;
	Get shards;
	Get index shard stats at;
	Get iterator;
	Get total;
	Get primary;
	Read  from stream input;
	Write  to stream output;
	Read index shard stats

70.4. Add a class for index stats. It allows to:

	Instantiate index stats  with shards stats;
	Get index;
	Get uuid;
	Get shards;
	Get index shards;
	Get iterator;
	Get total;
	Get primaries

70.5. Add an object creator class for indices stats action. It allows to:

	Instantiate indices stats action;
	Handle new response

70.6. Add a class for indices stats blocks IT. It allows to:

	Handle test indices stats with blocks

70.7. Add a class for indices stats request. It allows to:

	All indices stats request;
	Handle clear;
	Get flags;
	Get types;
	Get groups;
	Get docs;
	Handle docs;
	Get store;
	Handle store;
	Get indexing;
	Handle indexing;
	Get indices stats request;
	Get search;
	Handle search;
	Merge indices stats request;
	Refresh indices stats request;
	Handle flush;
	Handle warmer;
	Get query cache;
	Handle query cache;
	Get field data;
	Handle field data;
	Get segments;
	Handle segments;
	Get field data fields;
	Get completion;
	Handle completion;
	Get completion fields;
	Get translog;
	Handle translog;
	Get request cache;
	Handle request cache;
	Get recovery;
	Handle recovery;
	Include segment file sizes;
	Include unloaded segments;
	Write  to stream output;
	Read  from stream input

70.8. Add a class for indices stats request builder. It allows to:

	Instantiate indices stats request builder  with elasticsearch client, indices stats action and indices stats action;
	All indices stats request builder;
	Handle clear;
	Set types;
	Set groups;
	Set docs;
	Set store;
	Set indexing;
	Get indices stats request builder;
	Set search;
	Get set merge;
	Refresh indices stats request builder;
	Set flush;
	Set warmer;
	Set query cache;
	Set field data;
	Set field data fields;
	Set segments;
	Set completion;
	Set completion fields;
	Set translog;
	Set request cache;
	Set recovery;
	Set include segment file sizes

70.9. Add a class for indices stats response tests. It allows to:

	Handle test invalid level

70.10. Add a class for indices stats tests. It allows to:

	Handle test segment stats empty index;
	Handle test segment stats;
	Handle test commit stats;
	Handle test refresh listeners;
	Handle test uuid on root stats indices;
	Handle new indices stats response

70.11. Add a class for transport indices stats action. It allows to:

	Instantiate transport indices stats action  with cluster service, transport service, indices service, action filters, index name expression resolver and index name expression resolver;
	Get shards;
	Check global block;
	Check request block;
	Read shard result;
	Handle new response;
	Read request  from stream input;
	Handle shard operation

71. Changes to package org.elasticsearch.action.admin.indices.template.delete:  

71.1. Add an object creator class for delete index template action. It allows to:

	Instantiate delete index template action;
	Handle new response

71.2. Add a class for delete index template request. It allows to:

	Instantiate delete index template request;
	Name delete index template request;
	Validate delete index template request;
	Read  from stream input;
	Write  to stream output

71.3. Add a class for delete index template request builder. It allows to:

	Instantiate delete index template request builder  with elasticsearch client, delete index template action and delete index template action;
	Set name

71.4. Add a class for transport delete index template action. It allows to:

	Instantiate transport delete index template action  with transport service, cluster service, thread pool, meta data index template service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation;
	Process  on response;
	Process  on failure

72. Changes to package org.elasticsearch.action.admin.indices.template.get:  

72.1. Add an object creator class for get index templates action. It allows to:

	Instantiate get index templates action;
	Handle new response

72.2. Add a class for get index templates request. It allows to:

	Instantiate get index templates request;
	Instantiate get index templates request  with stream input;
	Write  to stream output;
	Validate get index templates request;
	Get names;
	Read  from stream input

72.3. Add a class for get index templates request builder. It allows to:

	Instantiate get index templates request builder  with elasticsearch client, get index templates action and get index templates action;

72.4. Add a class for get index templates response. It allows to:

	Instantiate get index templates response;
	Instantiate get index templates response  with index templates list;
	Get index templates;
	Read  from stream input;
	Write  to stream output;
	Convert get index templates response to X content;
	Process get index templates response get index templates response from X content

72.5. Add a class for transport get index templates action. It allows to:

	Instantiate transport get index templates action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation

73. Changes to package org.elasticsearch.action.admin.indices.template.put:  

73.1. Add a class for meta data index template service tests. It allows to:

	Handle test index template invalid number of shards;
	Handle test index template validation accumulates validation errors;
	Convert test index template with alias name equal;
	Handle test index template with validate mapping;
	Test broken mapping;
	Handle test alias invalid filter invalid json;
	Handle test find templates;
	Put template;
	Process  on response;
	Process  on failure;
	Put template detail;

73.2. Add an object creator class for put index template action. It allows to:

	Instantiate put index template action;
	Handle new response

73.3. Add a class for put index template request. It allows to:

	Instantiate put index template request;
	Validate put index template request;
	Name put index template request;
	Get patterns;
	Get order;
	Get version;
	Create put index template request;
	Get settings;
	Get mapping;
	Cause put index template request;
	Get mappings;
	Get source;
	Get aliases;
	Process put index template request put index template request alias;
	Get indices;
	Get indices options;
	Read  from stream input;
	Write  to stream output;
	Convert put index template request to X content

73.4. Add a class for put index template request builder. It allows to:

	Instantiate put index template request builder  with elasticsearch client, put index template action and put index template action;
	Set patterns;
	Get set order;
	Get set version;
	Create put index template request builder;
	Set settings;
	Add mapping;
	Set aliases;
	Add  alias alias;
	Cause put index template request builder;
	Set source;

73.5. Add a class for put index template request tests. It allows to:

	Handle test validate error message;
	Create test instance;
	Do parse instance;
	Assert equal instances;
	Handle supports unknown fields

73.6. Add a class for transport put index template action. It allows to:

	Instantiate transport put index template action  with transport service, cluster service, thread pool, meta data index template service, action filters, index name expression resolver, index scoped settings and index scoped settings;
	Get executor;
	Handle new response;
	Check block;
	Handle master operation;
	Process  on response;
	Process  on failure

74. Changes to package org.elasticsearch.action.admin.indices.upgrade.get:  

74.1. Add a class for index shard upgrade status. It allows to:

	Instantiate index shard upgrade status  with shard id, shards upgrade status and shards upgrade status;
	Get shard id;
	Get index shard upgrade status at;
	Get shards;
	Get iterator;
	Get total bytes;
	Get index shard upgrade status to upgrade bytes;
	Get index shard upgrade status to upgrade bytes ancient

74.2. Add a class for index upgrade status. It allows to:

	Instantiate index upgrade status  with shards upgrade status;
	Get index;
	Get shards;
	Get iterator;
	Get total bytes;
	Get index upgrade status to upgrade bytes;
	Get index upgrade status to upgrade bytes ancient

74.3. Add a class for shard upgrade status. It allows to:

	Instantiate shard upgrade status;
	Instantiate shard upgrade status  with shard routing;
	Get shard routing;
	Get total bytes;
	Get shard upgrade status to upgrade bytes;
	Get shard upgrade status to upgrade bytes ancient;
	Read shard upgrade status;
	Read  from stream input;
	Write  to stream output

74.4. Add a class for transport upgrade status action. It allows to:

	Instantiate transport upgrade status action  with cluster service, transport service, indices service, action filters, index name expression resolver and index name expression resolver;
	Get shards;
	Check global block;
	Check request block;
	Read shard result;
	Handle new response;
	Read request  from stream input;
	Handle shard operation

74.5. Add an object creator class for upgrade status action. It allows to:

	Instantiate upgrade status action;
	Handle new response

74.6. Add a class for upgrade status request. It allows to:

	Instantiate upgrade status request;

74.7. Add a class for upgrade status request builder. It allows to:

	Instantiate upgrade status request builder  with elasticsearch client, upgrade status action and upgrade status action

75. Changes to package org.elasticsearch.action.admin.indices.upgrade.post:  

75.1. Add a class for shard upgrade result. It allows to:

	Instantiate shard upgrade result;
	Instantiate shard upgrade result  with shard id, upgrade version, oldest lucene util version and oldest lucene util version;
	Get shard id;
	Handle oldest lucene segment;
	Upgrade version;
	Handle primary;
	Read  from stream input;
	Write  to stream output

75.2. Add a class for transport upgrade action. It allows to:

	Instantiate transport upgrade action  with cluster service, transport service, indices service, action filters, index name expression resolver, node client and node client;
	Handle new response;
	Handle shard operation;
	Read shard result;
	Read request  from stream input;
	Get shards;
	Get indices with missing primaries;
	Check global block;
	Check request block;
	Execute task;
	Process  on response;
	Process  on failure;
	Update settings

75.3. Add a class for transport upgrade settings action. It allows to:

	Instantiate transport upgrade settings action  with transport service, cluster service, thread pool, meta data update settings service, index name expression resolver, action filters and action filters;
	Get executor;
	Check block;
	Handle new response;
	Handle master operation;
	Process  on response;
	Process  on failure

75.4. Add an object creator class for upgrade action. It allows to:

	Instantiate upgrade action;
	Handle new response

75.5. Add a class for upgrade request builder. It allows to:

	Instantiate upgrade request builder  with elasticsearch client, upgrade action and upgrade action;
	Set upgrade  only ancient segments

75.6. Add a class for upgrade response. It allows to:

	Instantiate upgrade response;
	Instantiate upgrade response  with versions map, shard failures list and shard failures list;
	Read  from stream input;
	Write  to stream output;
	Add custom X content fields;
	Get versions

75.7. Add an object creator class for upgrade settings action. It allows to:

	Instantiate upgrade settings action;
	Handle new response

75.8. Add a class for upgrade settings cluster state update request. It allows to:

	Instantiate upgrade settings cluster state update request;
	Get versions;

75.9. Add a class for upgrade settings request. It allows to:

	Instantiate upgrade settings request;
	Instantiate upgrade settings request  with versions map;
	Validate upgrade settings request;
	Get versions;
	Read  from stream input;
	Write  to stream output

75.10. Add a class for upgrade settings request builder. It allows to:

	Instantiate upgrade settings request builder  with elasticsearch client, upgrade settings action and upgrade settings action;
	Set versions

76. Changes to package org.elasticsearch.action.admin.indices.validate.query:  

76.1. Add a class for query explanation. It allows to:

	Instantiate query explanation;
	Get index;
	Get shard;
	Check if query explanation is valid;
	Get error;
	Get explanation;
	Read  from stream input;
	Write  to stream output;
	Read query explanation;
	Convert query explanation to X content;
	Process query explanation query explanation from X content;
	Check if query explanation equals;
	Hash code

76.2. Add a class for shard validate query request. It allows to:

	Instantiate shard validate query request;
	Instantiate shard validate query request  with shard id, filtering, validate query request and validate query request;
	Get query;
	Get types;
	Explain shard validate query request;
	Rewrite shard validate query request;
	Filtering aliases;
	Now shard validate query request in millis;
	Read  from stream input;
	Write  to stream output

76.3. Add a class for shard validate query response. It allows to:

	Instantiate shard validate query response;
	Instantiate shard validate query response  with shard id;
	Check if shard validate query response is valid;
	Get explanation;
	Get error;
	Read  from stream input;
	Write  to stream output

76.4. Add a class for transport validate query action. It allows to:

	Instantiate transport validate query action  with cluster service, transport service, search service, action filters, index name expression resolver and index name expression resolver;
	Execute task;
	Handle new shard request;
	Handle new shard response;
	Get shards;
	Check global block;
	Check request block;
	Handle new response;
	Handle shard operation;
	Explain search context

76.5. Add an object creator class for validate query action. It allows to:

	Instantiate validate query action;
	Handle new response

76.6. Add a class for validate query request. It allows to:

	Instantiate validate query request;
	Validate validate query request;
	Get query;
	Get types;
	Explain validate query request;
	Rewrite validate query request;
	All shards;
	Read  from stream input;
	Write  to stream output;
	Convert validate query request to string;
	Convert validate query request to X content

76.7. Add a class for validate query request builder. It allows to:

	Instantiate validate query request builder  with elasticsearch client, validate query action and validate query action;
	Set types;
	Set query;
	Explain validate query request builder;
	Rewrite validate query request builder;
	Set all shards

76.8. Add a class for validate query response. It allows to:

	Instantiate validate query response;
	Instantiate validate query response  with query explanations list, shard failures list and shard failures list;
	Check if validate query response is valid;
	Get query explanation;
	Read  from stream input;
	Write  to stream output;
	Add custom X content fields;
	Process validate query response validate query response from X content

77. Changes to package org.elasticsearch.action.bulk:  

77.1. Add a class for backoff policy tests. It allows to:

	Handle test wrap backoff policy

77.2. Add a class for bulk action. It allows to:

	Instantiate bulk action;
	Handle new response;
	Transport options

77.3. Add a class for bulk integration IT. It allows to:

	Handle node plugins;
	Handle test bulk index creates mapping;
	Handle test bulk with write index and routing;
	Handle test bulk with global defaults;
	Create sample pipeline

77.4. Add a class for bulk item request. It allows to:

	Instantiate bulk item request;
	Instantiate bulk item request  with doc write request;
	I bulk item request;
	Get request;
	Get index;
	Get primary response;
	Set primary response;
	Abort cause exception;
	Read bulk item;
	Read  from stream input;
	Write  to stream output

77.5. Add a class for bulk item response tests. It allows to:

	Convert test failure;
	Convert test;
	Assert bulk item response

77.6. Add a class for bulk processor cluster settings IT. It allows to:

	Handle test bulk processor auto create restrictions

77.7. Add a class for bulk processor tests. It allows to:

	Start thread pool;
	Stop thread pool;
	Handle test bulk processor flush preserves context;
	Handle test await on close calls on close;
	Handle empty listener;
	Process  before bulk;
	Process  after bulk;

77.8. Add a class for bulk request. It allows to:

	Instantiate bulk request;
	Add requests;
	Add doc write request;
	Add requests iterable;
	Add index request;
	Handle internal add;
	Add update request;
	Add delete request;
	Get requests;
	Get number of actions;
	Get estimated size in bytes;
	Add X content type;
	Add data bytes reference;
	Wait wait for active shard count for active shards;
	Wait bulk request for active shards;
	Set refresh policy;
	Get refresh policy;
	Get timeout;
	Get pipeline;
	Routing bulk request;
	Validate bulk request;
	Read  from stream input;
	Write  to stream output;
	Get description;
	Apply global mandatory parameters;
	Get value or default

77.9. Add a class for bulk request builder. It allows to:

	Instantiate bulk request builder  with elasticsearch client, bulk action and bulk action;
	Add index request;
	Add index request builder;
	Add delete request;
	Add delete request builder;
	Add update request;
	Add update request builder;
	Add X content type;
	Set wait  for active shards;
	Set timeout;
	Get number of actions;
	Get pipeline;
	Routing bulk request builder

77.10. Add a class for bulk request handler. It allows to:

	Instantiate bulk request handler  with bi consumer, backoff policy, bulk processor listener, scheduler and scheduler;
	Execute bulk request;
	Process  on response;
	Process  on failure;
	Await  close time unit

77.11. Add a class for bulk request tests. It allows to:

	Handle test simple bulk 1;
	Handle test simple bulk with carriage return;
	Convert test simple bulk;
	Handle test simple bulk 3;
	Handle test simple bulk 4;
	Handle test bulk allow explicit index;
	Handle test bulk add iterable;
	Handle test simple bulk 6;
	Handle test simple bulk 7;
	Handle test simple bulk 8;
	Handle test simple bulk 9;
	Handle test simple bulk 10;
	Handle test bulk action should not contain array;
	Handle test bulk empty object;
	Handle test bulk request with refresh;
	Handle test bulk no source;
	Handle test can not add null requests;
	Handle test smile is supported;
	Convert test;
	Handle test bulk terminated by newline

77.12. Add a class for bulk response. It allows to:

	Instantiate bulk response;
	Instantiate bulk response  with responses;
	Took bulk response;
	Get bulk response;
	Get ingest took in millis;
	Check if bulk response has failures;
	Build failure message;
	Get items;
	Get iterator;
	Read  from stream input;
	Write  to stream output;
	Get status;
	Convert bulk response to X content;
	Process bulk response bulk response from X content

77.13. Add a class for bulk response tests. It allows to:

	Convert test

77.14. Add a class for bulk shard request. It allows to:

	Instantiate bulk shard request  with stream input;
	Instantiate bulk shard request  with shard id, refresh policy, items request and items request;
	Get items;
	Get indices;
	Write  to stream output;
	Read  from stream input;
	Convert bulk shard request to string;
	Get description;
	Process bulk shard request bulk shard request on retry

77.15. Add a class for bulk shard request tests. It allows to:

	Convert test

77.16. Add a class for bulk shard response. It allows to:

	Instantiate bulk shard response;
	Instantiate bulk shard response  with shard id, responses and responses;
	Get shard id;
	Get responses;
	Set forced refresh;
	Read  from stream input;
	Write  to stream output

77.17. Add an interface declaration  for mapping update performer. It allows to:

	Update mappings

77.18. Add a class for transport bulk action indices that can not be created tests. It allows to:

	Handle test non exceptional;
	Test transport bulk action indices that can not be created tests;
	Handle indices that can not be created test case;
	Execute bulk;
	Need  to check;
	Should auto create;
	Create index

77.19. Add a class for transport shard bulk action. It allows to:

	Instantiate transport shard bulk action  with settings, transport service, cluster service, indices service, thread pool, shard state action, mapping updated action, update helper, action filters, index name expression resolver and index name expression resolver;
	Transport options;
	Handle new response instance;
	Resolve index;
	Handle shard operation on primary;
	Perform bulk shard request on primary;
	Execute bulk item request;
	Convert exception;
	Process transport shard bulk action transport shard bulk action on complete;
	Check if transport shard bulk action is conflict exception;
	Get process update response;
	Get replica item execution mode;
	Handle shard operation on replica;
	Perform bulk shard request on replica;
	Perform op  on replica

77.20. Add a class for transport single item bulk write action. It allows to:

	Instantiate transport single item bulk write action  with transport service, action filters, request reader, transport bulk action and transport bulk action;
	Execute task;
	Wrap bulk response;
	Convert transport single item bulk write action to single item bulk request

78. Changes to package org.elasticsearch.action.delete:  

78.1. Add an object creator class for delete action. It allows to:

	Instantiate delete action;
	Handle new response

78.2. Add a class for delete request. It allows to:

	Instantiate delete request  with stream input;
	Instantiate delete request;
	Validate delete request;
	Get type;
	Get default type if null;
	I delete request;
	Routing delete request;
	Get version;
	Get version type;
	Process delete request delete request if seq no;
	Process delete request delete request if primary term;
	Get set if seq no;
	Set delete request if primary term;
	Op type;
	Read  from stream input;
	Write  to stream output;
	Convert delete request to string

78.3. Add a class for delete request builder. It allows to:

	Instantiate delete request builder  with elasticsearch client, delete action and delete action;
	Set type;
	Set id;
	Routing delete request builder;
	Get set version;
	Get set version type;
	Get set if seq no;
	Set delete request builder if primary term

78.4. Add a class for delete response tests. It allows to:

	Convert test;
	Handle test from X content with random fields;
	Do delete response tests from X content test with random fields;
	Handle random delete response

78.5. Add a class for transport delete action. It allows to:

	Instantiate transport delete action  with transport service, action filters, transport bulk action and transport bulk action

79. Changes to package org.elasticsearch.action.explain:  

79.1. Add an object creator class for explain action. It allows to:

	Instantiate explain action;
	Handle new response

79.2. Add a class for explain request. It allows to:

	Instantiate explain request;
	Get type;
	I explain request;
	Routing explain request;
	Get parent;
	Get preference;
	Get query;
	Fetch source context;
	Get stored fields;
	Filtering explain request alias;
	Filtering  alias filtering;
	Validate explain request;
	Read  from stream input;
	Write  to stream output;
	Convert explain request to X content

79.3. Add a class for explain request builder. It allows to:

	Instantiate explain request builder  with elasticsearch client, explain action and explain action;
	Set type;
	Set id;
	Routing explain request builder;
	Set parent;
	Set preference;
	Set query;
	Set stored fields;
	Set fetch source;

79.4. Add a class for explain response. It allows to:

	Instantiate explain response;
	Instantiate explain response  with explanation;
	Instantiate explain response  with explanation, get result and get result;
	Get index;
	Get type;
	Get id;
	Get explanation;
	Check if explain response is match;
	Check if explain response has explanation;
	Check if explain response is exists;
	Get get result;
	Get status;
	Read  from stream input;
	Write  to stream output;
	Process explain response explain response from X content;
	Convert explain response to X content;
	Build explanation;
	Check if explain response equals;
	Hash code

79.5. Add a class for transport explain action. It allows to:

	Instantiate transport explain action  with thread pool, cluster service, transport service, search service, action filters, index name expression resolver and index name expression resolver;
	Execute task;
	Resolve index;
	Resolve request;
	Handle async shard operation;
	Handle shard operation;
	Handle new response;
	Get shards;
	Get executor

80. Changes to package org.elasticsearch.action.fieldcaps:  

80.1. Add an object creator class for field capabilities action. It allows to:

	Instantiate field capabilities action;
	Handle new response

80.2. Add a class for field capabilities index request. It allows to:

	Instantiate field capabilities index request;
	Instantiate field capabilities index request  with original indices;
	Get fields;
	Get indices;
	Get indices options;
	Read  from stream input;
	Write  to stream output;
	Validate field capabilities index request

80.3. Add a class for field capabilities index response. It allows to:

	Instantiate field capabilities index response  with response map;
	Instantiate field capabilities index response;
	Instantiate field capabilities index response  with stream input;
	Get index name;
	Get field capabilities index response;
	Get field;
	Read  from stream input;
	Write  to stream output;
	Check if field capabilities index response equals;
	Hash code

80.4. Add a class for field capabilities request. It allows to:

	Instantiate field capabilities request;
	Check if field capabilities request is merge results;
	Get set merge results;
	Read  from stream input;
	Write  to stream output;
	Get fields;
	Get indices;
	Get indices options;
	Validate field capabilities request;
	Check if field capabilities request equals;
	Hash code

80.5. Add a class for field capabilities request builder. It allows to:

	Instantiate field capabilities request builder  with elasticsearch client, field capabilities action and field capabilities action;
	Set fields

80.6. Add a class for field capabilities request tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance;
	Handle test validation

80.7. Add a class for field capabilities response. It allows to:

	Instantiate field capabilities response  with response map;
	Instantiate field capabilities response  with index responses list;
	Instantiate field capabilities response  with response map, index responses list and index responses list;
	Instantiate field capabilities response;
	Get field capabilities response;
	Get index responses;
	Get field;
	Read  from stream input;
	Read field;
	Write  to stream output;
	Write field;
	Convert field capabilities response to X content;
	Process field capabilities response field capabilities response from X content;
	Parse type  to capabilities;
	Check if field capabilities response equals;
	Hash code

80.8. Add a class for field capabilities response tests. It allows to:

	Do parse instance;
	Create blank instance;
	Create test instance;
	Create random index response;
	Mutate instance;
	Get random fields exclude filter;
	Convert test;
	Handle test empty response;
	Create simple response

80.9. Add a class for field capabilities tests. It allows to:

	Do parse instance;
	Create test instance;
	Get instance reader;
	Handle test builder;
	Handle random field caps;
	Mutate instance

80.10. Add a class for transport field capabilities action. It allows to:

	Instantiate transport field capabilities action  with transport service, cluster service, thread pool, shard action, action filters, index name expression resolver and index name expression resolver;
	Execute task;
	Process  on response;
	Process  on failure;
	Merge index responses list;
	Handle inner merge

80.11. Add a class for transport field capabilities index action. It allows to:

	Instantiate transport field capabilities index action  with cluster service, transport service, indices service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Resolve index;
	Get shards;
	Handle shard operation;
	Handle new response;
	Check request block

81. Changes to package org.elasticsearch.action.get:  

81.1. Add an object creator class for get action. It allows to:

	Instantiate get action;
	Handle new response

81.2. Add a class for get request. It allows to:

	Instantiate get request;
	Validate get request;
	Get type;
	I get request;
	Routing get request;
	Get preference;
	Fetch source context;
	Get stored fields;
	Refresh get request;
	Handle realtime;
	Get realtime;
	Get version;
	Get version type;
	Read  from stream input;
	Write  to stream output;
	Convert get request to string

81.3. Add a class for get request builder. It allows to:

	Instantiate get request builder  with elasticsearch client, get action and get action;
	Set type;
	Set id;
	Routing get request builder;
	Set preference;
	Set stored fields;
	Set fetch source;
	Refresh get request builder;
	Set realtime;
	Get set version;
	Get set version type

81.4. Add a class for get response. It allows to:

	Instantiate get response;
	Instantiate get response  with get result;
	Check if get response is exists;
	Get index;
	Get type;
	Get id;
	Get version;
	Get get response;
	Get primary term;
	Get source  as bytes;
	Get source internal;
	Get source  as bytes ref;
	Check if get response is source empty;
	Get source  as string;
	Get source  as map;
	Get source;
	Get fields;
	Get field;
	Get iterator;
	Convert get response to X content;
	Process get response get response from X content;
	Read  from stream input;
	Write  to stream output;
	Check if get response equals;
	Hash code;
	Convert get response to string

81.5. Add a class for get response tests. It allows to:

	Convert test;
	Handle test from X content with random fields;
	Do get response tests from X content test with random fields;
	Handle test equals and hashcode;
	Handle test from X content throws parsing exception;
	Copy get response;
	Mutate get response

81.6. Add an object creator class for multi get action. It allows to:

	Instantiate multi get action;
	Handle new response

81.7. Add a class for multi get item response. It allows to:

	Instantiate multi get item response;
	Instantiate multi get item response  with get response, multi get response failure and multi get response failure;
	Get index;
	Get type;
	Get id;
	Check if multi get item response is failed;
	Get response;
	Get failure;
	Read item response;
	Read  from stream input;
	Write  to stream output

81.8. Add a class for multi get request builder. It allows to:

	Instantiate multi get request builder  with elasticsearch client, multi get action and multi get action;
	Add multi get request builder;
	Add ids iterable;
	Add multi get request item;
	Set preference;
	Refresh multi get request builder;
	Set realtime

81.9. Add a class for multi get request tests. It allows to:

	Handle test add with invalid key;
	Handle test unexpected field;
	Handle test add with valid source value is accepted;
	Handle test X content serialization;
	Create test instance

81.10. Add a class for multi get response tests. It allows to:

	Handle test from X content;
	Create test instance

81.11. Add a class for multi get shard request. It allows to:

	Instantiate multi get shard request;
	Instantiate multi get shard request  with multi get request;
	Validate multi get shard request;
	Shard id;
	Get preference;
	Handle realtime;
	Get realtime;
	Refresh multi get shard request;
	Add multi get request item;
	Get indices;
	Read  from stream input;
	Write  to stream output

81.12. Add a class for multi get shard request tests. It allows to:

	Handle test serialization

81.13. Add a class for multi get shard response. It allows to:

	Instantiate multi get shard response;
	Add get response;
	Add multi get response failure;
	Read  from stream input;
	Write  to stream output

81.14. Add a class for transport get action. It allows to:

	Instantiate transport get action  with cluster service, transport service, indices service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Resolve index;
	Get shards;
	Resolve request;
	Handle async shard operation;
	Handle shard operation;
	Handle new response;
	Get executor

81.15. Add a class for transport multi get action. It allows to:

	Instantiate transport multi get action  with transport service, cluster service, shard multi get action, action filters, index name expression resolver and index name expression resolver;
	Execute task;
	Execute shard action;
	Process  on response;
	Process  on failure;
	Finish;
	Handle new item failure

81.16. Add a class for transport shard multi get action. It allows to:

	Instantiate transport shard multi get action  with cluster service, transport service, indices service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Check if transport shard multi get action is sub action;
	Handle new response;
	Resolve index;
	Get shards;
	Handle shard operation;
	Get executor

82. Changes to package org.elasticsearch.action.index:  

82.1. Add an object creator class for index action. It allows to:

	Instantiate index action;
	Handle new response

82.2. Add a class for index request. It allows to:

	Instantiate index request  with stream input;
	Instantiate index request;
	Validate index request;
	Get content type;
	Get type;
	Get default type if null;
	I index request;
	Routing index request;
	Set pipeline;
	Get pipeline;
	Get source;
	Get source as map;
	Op type;
	Create index request;
	Get version;
	Resolve version defaults;
	Get version type;
	Get set if seq no;
	Set index request if primary term;
	Process index request index request if seq no;
	Process index request index request if primary term;
	Handle process;
	Routing meta data;
	Read  from stream input;
	Write  to stream output;
	Convert index request to string;
	Check if index request is retry;
	Process index request index request on retry;
	Get auto generated timestamp

82.3. Add a class for index request builder. It allows to:

	Instantiate index request builder  with elasticsearch client, index action and index action;
	Set type;
	Set id;
	Routing index request builder;
	Set source;
	Set op type;
	Create index request builder;
	Get set version;
	Get set version type;
	Get set if seq no;
	Set index request builder if primary term;
	Set pipeline

82.4. Add a class for index request builder tests. It allows to:

	Set index request builder tests;
	Tear index request builder tests;
	Handle test set source

82.5. Add a class for index request tests. It allows to:

	Handle test index request op type from string;
	Handle test read incorrect op type;
	Handle test create operation rejects versions;
	Handle test indexing rejects long ids;
	Handle test wait for active shards;
	Handle test auto gen id timestamp is set;
	Handle test index response;
	Handle test index request X content serialization;
	Handle test serialization of empty request works;
	Convert test;
	Handle test rejects empty string pipeline

82.6. Add a class for index response tests. It allows to:

	Convert test;
	Handle test from X content with random fields;
	Do index response tests from X content test with random fields;
	Assert doc write response;
	Handle random index response

82.7. Add a class for transport index action. It allows to:

	Instantiate transport index action  with action filters, transport service, transport bulk action and transport bulk action

83. Changes to package org.elasticsearch.action.ingest:  

83.1. Add an object creator class for delete pipeline action. It allows to:

	Instantiate delete pipeline action;
	Handle new response

83.2. Add a class for delete pipeline request. It allows to:

	Instantiate delete pipeline request;
	Set id;
	Get id;
	Validate delete pipeline request;
	Read  from stream input;
	Write  to stream output

83.3. Add a class for delete pipeline request builder. It allows to:

	Instantiate delete pipeline request builder  with elasticsearch client, delete pipeline action and delete pipeline action;
	Set id

83.4. Add a class for delete pipeline transport action. It allows to:

	Instantiate delete pipeline transport action  with thread pool, ingest service, transport service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Handle master operation;
	Check block

83.5. Add an object creator class for get pipeline action. It allows to:

	Instantiate get pipeline action;
	Handle new response

83.6. Add a class for get pipeline request. It allows to:

	Instantiate get pipeline request;
	Instantiate get pipeline request  with stream input;
	Write  to stream output;
	Get ids;
	Validate get pipeline request;
	Read  from stream input

83.7. Add a class for get pipeline request builder. It allows to:

	Instantiate get pipeline request builder  with elasticsearch client, get pipeline action and get pipeline action;

83.8. Add a class for get pipeline response. It allows to:

	Instantiate get pipeline response;
	Instantiate get pipeline response  with pipelines list;
	Get pipelines;
	Read  from stream input;
	Write  to stream output;
	Check if get pipeline response is found;
	Get status;
	Convert get pipeline response to X content;
	Process get pipeline response get pipeline response from X content;
	Check if get pipeline response equals;
	Convert get pipeline response to string;
	Hash code

83.9. Add a class for get pipeline transport action. It allows to:

	Instantiate get pipeline transport action  with thread pool, cluster service, transport service, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Handle master operation;
	Check block

83.10. Add a class for ingest action forwarder. It allows to:

	Instantiate ingest action forwarder  with transport service;
	Forward ingest request;
	Handle random ingest node;
	Apply cluster state

83.11. Add an object creator class for put pipeline action. It allows to:

	Instantiate put pipeline action;
	Handle new response

83.12. Add a class for put pipeline request. It allows to:

	Instantiate put pipeline request  with source bytes reference, X content type and X content type;
	Instantiate put pipeline request;
	Validate put pipeline request;
	Get id;
	Get source;
	Get X content type;
	Read  from stream input;
	Write  to stream output;
	Convert put pipeline request to X content

83.13. Add a class for put pipeline request builder. It allows to:

	Instantiate put pipeline request builder  with elasticsearch client, put pipeline action and put pipeline action;
	Instantiate put pipeline request builder  with elasticsearch client, put pipeline action, source bytes reference, X content type and X content type

83.14. Add a class for put pipeline request tests. It allows to:

	Handle test serialization with X content;
	Convert test

83.15. Add a class for put pipeline transport action. It allows to:

	Instantiate put pipeline transport action  with thread pool, transport service, action filters, index name expression resolver, ingest service, node client and node client;
	Get executor;
	Handle new response;
	Handle master operation;
	Process  on response;
	Process  on failure;
	Check block

83.16. Add a class for simulate document base result. It allows to:

	Instantiate simulate document base result  with ingest document;
	Instantiate simulate document base result  with failure exception;
	Instantiate simulate document base result  with stream input;
	Write  to stream output;
	Get ingest document;
	Get failure;
	Convert simulate document base result to X content;
	Process simulate document base result simulate document base result from X content

83.17. Add an interface declaration  for simulate document result

83.18. Add a class for simulate document verbose result. It allows to:

	Instantiate simulate document verbose result  with processor results list;
	Instantiate simulate document verbose result  with stream input;
	Write  to stream output;
	Get processor results;
	Convert simulate document verbose result to X content;
	Process simulate document verbose result simulate document verbose result from X content

83.19. Add a class for simulate execution service. It allows to:

	Instantiate simulate execution service  with thread pool;
	Execute document;
	Execute simulate pipeline request parsed;
	Run

83.20. Add a class for simulate execution service tests. It allows to:

	Handle setup;
	Destroy simulate execution service tests;
	Handle test execute verbose item;
	Handle test execute item;
	Handle test execute verbose item exception without on failure;
	Handle test execute verbose item with on failure;
	Handle test execute verbose item exception with ignore failure;
	Handle test execute verbose item without exception and with ignore failure;
	Handle test execute item with failure

83.21. Add an object creator class for simulate pipeline action. It allows to:

	Instantiate simulate pipeline action;
	Handle new response

83.22. Add a class for simulate pipeline request builder. It allows to:

	Instantiate simulate pipeline request builder  with elasticsearch client, simulate pipeline action and simulate pipeline action;
	Instantiate simulate pipeline request builder  with elasticsearch client, simulate pipeline action, source bytes reference, X content type and X content type;
	Set id;
	Set verbose

83.23. Add a class for simulate pipeline request parsing tests. It allows to:

	Handle init;
	Handle test parse using pipeline store no type;
	Handle test parse using pipeline store with type;
	Handle inner test parse using pipeline store;
	Handle test parse with provided pipeline no type;
	Handle test parse with provided pipeline with type;
	Handle inner test parse with provided pipeline;
	Handle test null pipeline id;
	Handle test non existent pipeline id

83.24. Add a class for simulate pipeline request tests. It allows to:

	Handle test serialization;
	Handle test serialization with X content

83.25. Add a class for simulate pipeline response tests. It allows to:

	Handle test serialization;
	Create instance;
	Create test instance  with failures;
	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Assert equal instances;
	Get random fields exclude filter;
	Handle test from X content with failures

83.26. Add a class for simulate pipeline transport action. It allows to:

	Instantiate simulate pipeline transport action  with thread pool, transport service, action filters, ingest service and ingest service;
	Execute task

83.27. Add a class for simulate processor result. It allows to:

	Instantiate simulate processor result  with ingest document, failure exception and failure exception;
	Instantiate simulate processor result  with ingest document;
	Instantiate simulate processor result  with failure exception;
	Instantiate simulate processor result  with stream input;
	Write  to stream output;
	Get ingest document;
	Get processor tag;
	Get failure;
	Convert simulate processor result to X content;
	Process simulate processor result simulate processor result from X content

83.28. Add a class for simulate processor result tests. It allows to:

	Handle test serialization;
	Create test instance;
	Create test instance  with failures;
	Do parse instance;
	Handle supports unknown fields;
	Get random fields exclude filter;
	Assert equal processor results;
	Assert equal instances;
	Handle test from X content with failures

83.29. Add a class for writeable ingest document. It allows to:

	Instantiate writeable ingest document  with ingest document;
	Instantiate writeable ingest document  with stream input;
	Write  to stream output;
	Get ingest document;
	Convert writeable ingest document to X content;
	Process writeable ingest document writeable ingest document from X content;
	Check if writeable ingest document equals;
	Hash code;
	Convert writeable ingest document to string

83.30. Add a class for writeable ingest document tests. It allows to:

	Handle test equals and hashcode;
	Handle test serialization;
	Convert test;
	Create random ingest doc;
	Handle supports unknown fields;
	Create test instance;
	Do parse instance;
	Get random fields exclude filter

84. Changes to package org.elasticsearch.action.main:  

84.1. Add an object creator class for main action. It allows to:

	Instantiate main action;
	Handle new response

84.2. Add a class for main action tests. It allows to:

	Handle test main action cluster available;
	Process  on response;
	Process  on failure

84.3. Add a class for main request. It allows to:

	Validate main request

84.4. Add a class for main request builder. It allows to:

	Instantiate main request builder  with elasticsearch client, main action and main action

84.5. Add a class for main response. It allows to:

	Instantiate main response;
	Instantiate main response  with version, cluster name, build and build;
	Get node name;
	Get version;
	Get cluster name;
	Get cluster uuid;
	Build main response;
	Write  to stream output;
	Read  from stream input;
	Convert main response to X content;
	Process main response main response from X content;
	Check if main response equals;
	Hash code;
	Convert main response to string

84.6. Add a class for main response tests. It allows to:

	Create test instance;
	Create blank instance;
	Do parse instance;
	Convert test;
	Mutate instance

84.7. Add a class for transport main action. It allows to:

	Instantiate transport main action  with settings, transport service, action filters, cluster service and cluster service;
	Execute task

85. Changes to package org.elasticsearch.action.resync:  

85.1. Add a class for resync replication request. It allows to:

	Instantiate resync replication request  with stream input;
	Instantiate resync replication request  with shard id, operations and operations;
	Get trim  above seq no;
	Get resync replication request max seen auto id timestamp on primary;
	Get operations;
	Read  from stream input;
	Write  to stream output;
	Check if resync replication request equals;
	Hash code;
	Convert resync replication request to string

85.2. Add a class for resync replication request tests. It allows to:

	Handle test serialization

85.3. Add a class for resync replication response. It allows to:

	Set forced refresh

86. Changes to package org.elasticsearch.action.search:  

86.1. Add a class for abstract search async action. It allows to:

	Instantiate abstract search async action  with logger, search transport service, node id to connection bi function, alias filter map, concrete index boosts map, index routings map, executor, search request, action listener, shards iterator, search time provider, search task, results, search response clusters and search response clusters;
	Build took in millis;
	Start abstract search async action;
	Execute next phase;
	Execute phase;
	Build shard failures;
	Process abstract search async action abstract search async action on shard failure;
	Raise phase failure;
	Process abstract search async action abstract search async action on shard success;
	Handle on phase done;
	Get num shards;
	Get logger;
	Get task;
	Get request;
	Build search response;
	Process abstract search async action abstract search async action on phase failure;
	Get connection;
	Get search transport;
	Execute command runnable;
	Process abstract search async action abstract search async action on response;
	Process abstract search async action abstract search async action on failure;
	Build shard search request;
	Get next phase;
	Skip shard

86.2. Add a class for can match pre filter search phase tests. It allows to:

	Handle test filter shards;
	Send transport connection;
	Handle test filter with failure;
	Handle test lots of shards;

86.3. Add an object creator class for clear scroll action. It allows to:

	Instantiate clear scroll action;
	Handle new response

86.4. Add a class for clear scroll controller. It allows to:

	Instantiate clear scroll controller  with clear scroll request, action listener, discovery nodes, logger, search transport service and search transport service;
	Run clear scroll controller;
	Clean all scrolls;
	Process  on response;
	Process  on failure;
	Handle clean scroll ids;
	Process clear scroll controller clear scroll controller on freed context;
	Process clear scroll controller clear scroll controller on failed freed context

86.5. Add a class for clear scroll controller tests. It allows to:

	Handle test clear all;
	Process  on response;
	Process  on failure;
	Send clear all scroll contexts;
	Get connection;
	Handle test clear scroll ids;
	Send free context;
	Handle test clear scroll ids with failure;

86.6. Add a class for clear scroll request. It allows to:

	Get scroll ids;
	Set scroll ids;
	Add scroll id;
	Scroll ids;
	Validate clear scroll request;
	Read  from stream input;
	Write  to stream output;
	Convert clear scroll request to X content;
	Process clear scroll request clear scroll request from X content

86.7. Add a class for clear scroll request builder. It allows to:

	Instantiate clear scroll request builder  with elasticsearch client, clear scroll action and clear scroll action;
	Set scroll ids;
	Add scroll id

86.8. Add a class for clear scroll request tests. It allows to:

	Handle test from X content;
	Handle test from X content without array;
	Handle test from X content with unknown param throws exception;
	Convert test;
	Convert test from and;
	Create clear scroll request

86.9. Add a class for clear scroll response. It allows to:

	Instantiate clear scroll response;
	Check if clear scroll response is succeeded;
	Get num freed;
	Get status;
	Convert clear scroll response to X content;
	Process clear scroll response clear scroll response from X content;
	Read  from stream input;
	Write  to stream output

86.10. Add a class for counted collector. It allows to:

	Instantiate counted collector  with result consumer, on finish runnable, search phase context and search phase context;
	Count counted collector;
	Process counted collector counted collector on result;
	Process counted collector counted collector on failure

86.11. Add a class for counted collector tests. It allows to:

	Handle test collect

86.12. Add a class for dfs query phase. It allows to:

	Instantiate dfs query phase  with dfs search results atomic array, search phase controller, next phase factory function, search phase context and search phase context;
	Run dfs query phase;
	Handle inner on response;
	Process  on failure

86.13. Add a class for dfs query phase tests. It allows to:

	Handle new search result;
	Convert test dfs with;
	Send execute query;
	Handle test dfs with 1 shard failed;
	Handle test fail phase on exception;

86.14. Add a class for expand search phase. It allows to:

	Instantiate expand search phase  with search phase context, internal search response, next phase factory function and next phase factory function;
	Check if expand search phase is collapse request;
	Run expand search phase;
	Build expand search source builder

86.15. Add a class for expand search phase tests. It allows to:

	Handle test collapse single hit;
	Send execute multi search;
	Handle test fail one item fails entire phase;
	Handle test skip phase;
	Handle test skip expand collapse no hits;
	Handle test expand request options;

86.16. Add a class for fetch search phase. It allows to:

	Instantiate fetch search phase  with results, search phase controller, search phase context and search phase context;
	Instantiate fetch search phase  with results, search phase controller, search phase context, next phase factory bi function and next phase factory bi function;
	Run fetch search phase;
	Run;
	Process  on failure;
	Handle inner run;
	Create fetch request;
	Fetch search shard target;
	Handle inner on response;
	Release irrelevant search context;
	Move search phase controller to next phase;
	Send response phase;

86.17. Add a class for fetch search phase tests. It allows to:

	Handle test shortcut query and fetch optimization;
	Handle test fetch two document;
	Send transport connection;
	Handle test fail fetch one doc;
	Handle test fetch docs concurrently;
	Handle test exception fails phase;
	Handle test cleanup irrelevant contexts;

86.18. Add a class for mock search phase context. It allows to:

	Instantiate mock search phase context;
	Assert no failure;
	Get num shards;
	Get logger;
	Get task;
	Get request;
	Build search response;
	Process mock search phase context mock search phase context on phase failure;
	Process mock search phase context mock search phase context on shard failure;
	Get connection;
	Get search transport;
	Build shard search request;
	Execute next phase;
	Execute command runnable;
	Process mock search phase context mock search phase context on response;
	Process mock search phase context mock search phase context on failure;
	Send release search context

86.19. Add an object creator class for multi search action. It allows to:

	Instantiate multi search action;
	Handle new response

86.20. Add a class for multi search request. It allows to:

	Add search request builder;
	Add search request;
	Max concurrent search requests;
	Get requests;
	Validate multi search request;
	Get indices options;
	Read  from stream input;
	Write  to stream output;
	Check if multi search request equals;
	Hash code;
	Read multi line format;
	Find next marker;
	Write multi line format;
	Write search request params

86.21. Add a class for multi search request builder. It allows to:

	Instantiate multi search request builder  with elasticsearch client, multi search action and multi search action;
	Add search request;
	Add search request builder;
	Set indices options;
	Set max concurrent search requests

86.22. Add a class for multi search request tests. It allows to:

	Handle test simple add;
	Handle test fail with unknown key;
	Handle test simple add with carriage return;
	Handle test default indices options;
	Convert test simple add;
	Handle test simple add 3;
	Handle test simple add 4;
	Convert test response error;
	Handle test max concurrent search requests;
	Handle test msearch terminated by newline;
	Parse multi search request;
	X content registry;
	Handle test multi line serialization;
	Handle test equals and hashcode;
	Mutate multi search request;
	Copy request;
	Create multi search request;
	Create simple search request

86.23. Add a class for multi search response tests. It allows to:

	Create test instance;
	Create test instance  with failures;
	Do parse instance;
	Assert equal instances;
	Handle supports unknown fields;
	Get random fields exclude filter when result has errors;
	Handle test from X content with failures

86.24. Add a class for parsed scroll id. It allows to:

	Instantiate parsed scroll id  with context scroll id for node;
	Get source;
	Get type;
	Get context

86.25. Add a class for reduce search phase exception. It allows to:

	Instantiate reduce search phase exception  with cause throwable, shard search failure and shard search failure;
	Instantiate reduce search phase exception  with stream input

86.26. Add a class for scroll id for node. It allows to:

	Instantiate scroll id for node;
	Get node;
	Get cluster  alias;
	Get scroll id;
	Convert scroll id for node to string

86.27. Add an object creator class for search action. It allows to:

	Instantiate search action;
	Handle new response

86.28. Add a class for search action listener. It allows to:

	Instantiate search action listener  with search shard target;
	Process search action listener search action listener on response;
	Set search shard target;
	Handle inner on response

86.29. Add a class for search dfs query then fetch async action. It allows to:

	Instantiate search dfs query then fetch async action  with logger, search transport service, node id to connection bi function, alias filter map, concrete index boosts map, index routings map, search phase controller, executor, search request, action listener, shards iterator, transport search action search time provider, search task, search response clusters and search response clusters;
	Execute phase  on shard;
	Get next phase

86.30. Add a class for search execution stats collector. It allows to:

	Instantiate search execution stats collector  with action listener, response collector service and response collector service;
	Make wrapper;
	Process search execution stats collector search execution stats collector on response;
	Process search execution stats collector search execution stats collector on failure

86.31. Add a class for search phase. It allows to:

	Instantiate search phase;
	Get name

86.32. Add an interface declaration  for search phase context. It allows to:

	Get num shards;
	Get logger;
	Get task;
	Get request;
	Build search response;
	Process search phase context search phase context on phase failure;
	Process search phase context search phase context on shard failure;
	Get connection;
	Get search transport;
	Send release search context;
	Build shard search request;
	Execute next phase

86.33. Add a class for search phase controller tests. It allows to:

	Handle setup;
	Handle test sort docs;
	Handle test sort docs is idempotent;
	Generate seeded query results;
	Handle test merge;
	Generate query results;
	Get total query hits;
	Get reduced suggest;
	Generate fetch results;
	Handle random search request;
	Handle test consumer;
	Handle test consumer concurrently;
	Handle test consumer only aggs;
	Handle test consumer only hits;
	Assert final reduction;
	Test new search phase results;
	Handle test reduce top N with from offset;
	Handle test consumer sort by field;
	Handle test consumer field collapsing;
	Handle test consumer suggestions

86.34. Add a class for search phase execution exception. It allows to:

	Instantiate search phase execution exception  with shard search failure;
	Instantiate search phase execution exception  with cause throwable, shard search failure and shard search failure;
	Instantiate search phase execution exception  with stream input;
	Write  to stream output;
	Handle deduplicate cause;
	Get status;
	Handle shard failures;
	Get cause;
	Build message;
	Convert metadata;
	Convert search phase execution exception to X content;
	Guess root causes;
	Convert search phase execution exception to string;
	Get phase name

86.35. Add a class for search phase execution exception tests. It allows to:

	Convert test;
	Handle test phase failure without search shard failure;
	Handle test phase failure without search shard failure and cause;
	Handle test phase failure with search shard failure

86.36. Add a class for search query then fetch async action. It allows to:

	Instantiate search query then fetch async action  with logger, search transport service, node id to connection bi function, alias filter map, concrete index boosts map, index routings map, search phase controller, executor, search request, action listener, shards iterator, transport search action search time provider, search task, search response clusters and search response clusters;
	Execute phase  on shard;
	Get next phase

86.37. Add a class for search request. It allows to:

	Instantiate search request;
	Instantiate search request  with search request;
	Instantiate search request  with search source builder;
	Cross cluster search;
	Instantiate search request  with stream input;
	Write  to stream output;
	Validate search request;
	Get local cluster  alias;
	Check if search request is final reduce;
	Get or create absolute start  millis;
	Get indices;
	Validate indices;
	Get indices options;
	Check if search request is ccs minimize roundtrips;
	Set ccs minimize roundtrips;
	Get types;
	Routing search request;
	Get preference;
	Search type;
	Get source;
	Get scroll;
	Get request cache;
	Allow partial search results;
	Set batched reduce size;
	Get batched reduce size;
	Get max concurrent shard requests;
	Set max concurrent shard requests;
	Set pre filter shard size;
	Get pre filter shard size;
	Check if search request is suggest only;
	Create task;
	Get description;
	Read  from stream input;
	Check if search request equals;
	Hash code;
	Convert search request to string

86.38. Add a class for search request builder. It allows to:

	Instantiate search request builder  with elasticsearch client, search action and search action;
	Set indices;
	Set types;
	Set search type;
	Set scroll;
	Set timeout;
	Set terminate  after;
	Routing search request builder;
	Set preference;
	Set indices options;
	Set query;
	Set post filter;
	Set min score;
	Get set from;
	Set size;
	Explain search request builder;
	Get set version;
	Seq no and primary term;
	Add index boost;
	Set stats;
	Set fetch source;
	Add doc value field;
	Add stored field;
	Add script field;
	Add sort;
	Get search after;
	Get slice;
	Set track scores;
	Set track total hits;
	Set track total hits  up to;
	Get stored fields;
	Add aggregation;
	Get highlighter;
	Suggest suggest builder;
	Set rescorer;
	Add rescorer;
	Handle clear rescorers;
	Set source;
	Set request cache;
	Set allow partial search results;
	Set profile;
	Set collapse;
	Convert search request builder to string;
	Get source builder;
	Set batched reduce size;
	Set max concurrent shard requests;
	Set pre filter shard size

86.39. Add a class for search request builder tests. It allows to:

	Handle init client;
	Close client;
	Convert test empty source;
	Convert test query builder query;
	Convert test search source builder;
	Convert test that

86.40. Add a class for search response sections. It allows to:

	Instantiate search response sections  with search hits, aggregations, suggest, terminated early boolean, profile shard results and profile shard results;
	Get timed out;
	Get terminated early;
	Get hits;
	Get aggregations;
	Suggest search response sections;
	Get num reduce phases;
	Profile search response sections;
	Convert search response sections to X content;
	Write  to stream output

86.41. Add a class for search response tests. It allows to:

	Handle init;
	Clean search response tests;
	X content registry;
	Create test item;
	Create minimal test item;
	Handle random clusters;
	Handle test from X content;
	Handle test from X content with random fields;
	Do search response from X content test with random fields;
	Handle test from X content with failures;
	Convert test;
	Handle test serialization

86.42. Add an object creator class for search scroll action. It allows to:

	Instantiate search scroll action;
	Handle new response

86.43. Add a class for search scroll async action. It allows to:

	Instantiate search scroll async action  with parsed scroll id, logger, discovery nodes, action listener, search phase controller, search scroll request, search transport service and search transport service;
	Build took in millis;
	Run search scroll async action;
	Collect nodes and run;
	Run cluster node lookup bi function;
	Build shard failures;
	Add shard failure;
	Execute initial phase;
	Move cluster node lookup bi function to next phase;
	Process search scroll async action search scroll async action on first phase result;
	Send response phase;
	Run;
	Send response;
	Process search scroll async action search scroll async action on shard failure;
	Get connection

86.44. Add a class for search scroll async action tests. It allows to:

	Convert test send requests;
	Execute initial phase;
	Get connection;
	Move cluster node lookup bi function to next phase;
	Run;
	Process  on first phase result;
	Handle test fail next phase;
	Process  on response;
	Process  on failure;
	Handle test node not available;
	Handle test shard failures;
	Test all shards failed;
	Get parsed scroll id;
	Handle dummy listener;

86.45. Add a class for search scroll query and fetch async action. It allows to:

	Instantiate search scroll query and fetch async action  with logger, cluster service, search transport service, search phase controller, search scroll request, search task, parsed scroll id, action listener and action listener;
	Execute initial phase;
	Move cluster node lookup bi function to next phase;
	Process search scroll query and fetch async action search scroll query and fetch async action on first phase result

86.46. Add a class for search scroll query then fetch async action. It allows to:

	Instantiate search scroll query then fetch async action  with logger, cluster service, search transport service, search phase controller, search scroll request, search task, parsed scroll id, action listener and action listener;
	Process search scroll query then fetch async action search scroll query then fetch async action on first phase result;
	Execute initial phase;
	Move cluster node lookup bi function to next phase

86.47. Add a class for search scroll request. It allows to:

	Instantiate search scroll request;
	Instantiate search scroll request  with stream input;
	Write  to stream output;
	Validate search scroll request;
	Scroll id;
	Get scroll;
	Read  from stream input;
	Create task;
	Check if search scroll request equals;
	Hash code;
	Convert search scroll request to string;
	Get description;
	Convert search scroll request to X content;
	Process search scroll request search scroll request from X content

86.48. Add a class for search scroll request builder. It allows to:

	Instantiate search scroll request builder  with elasticsearch client, search scroll action and search scroll action;
	Set scroll id;
	Set scroll;

86.49. Add a class for search scroll request tests. It allows to:

	Handle test serialization;
	Handle test internal scroll search request serialization;
	Handle test from X content;
	Handle test from X content with unknown param throws exception;
	Convert test;
	Handle test equals and hashcode;
	Create search scroll request;
	Copy request;
	Mutate original search scroll request

86.50. Add a class for search shard iterator. It allows to:

	Instantiate search shard iterator  with shard id, shards list, original indices and original indices;
	Get original indices;
	Get cluster  alias;
	Handle new search shard target;
	Reset search shard iterator;
	Skip search shard iterator;
	Check if search shard iterator equals;
	Hash code;
	Compare  to shard iterator

86.51. Add a class for search task. It allows to:

	Instantiate search task  with parent task id, headers map and headers map;
	Should cancel children  on cancellation

86.52. Add a class for shard search failure. It allows to:

	Instantiate shard search failure;
	Instantiate shard search failure  with exception;
	Instantiate shard search failure  with exception, search shard target and search shard target;
	Get shard;
	Convert shard search failure to string;
	Read shard search failure;
	Read  from stream input;
	Write  to stream output;
	Convert shard search failure to X content;
	Process shard search failure shard search failure from X content

86.53. Add a class for shard search failure tests. It allows to:

	Create test item;
	Handle test from X content;
	Handle test from X content with random fields;
	Do shard search failure tests from X content test with random fields;
	Convert test;
	Handle test serialization

86.54. Add a class for transport clear scroll action. It allows to:

	Instantiate transport clear scroll action  with transport service, cluster service, action filters, search transport service and search transport service;
	Execute task

86.55. Add a class for transport multi search action tests. It allows to:

	Set transport multi search action tests;
	Tear transport multi search action tests;
	Handle test batch execute;
	Get task manager;
	Handle search;
	Handle test default max concurrent searches

86.56. Add a class for transport search action tests. It allows to:

	Tear transport search action tests;
	Create search shard iterator;
	Handle test merge shards iterators;
	Handle test process remote shards;
	Handle test build connection lookup;
	Start transport;
	Handle empty search response;
	Handle test CCS remote reduce merge fails;
	Handle test CCS remote reduce;
	Handle on node disconnected;
	Handle test collect search shards;
	Handle test create search response merger;
	Handle test should minimize roundtrips

86.57. Add an object creator class for transport search helper. It allows to:

	Handle internal scroll search request;
	Build scroll id;
	Parse scroll id;
	Instantiate transport search helper

86.58. Add a class for transport search helper tests. It allows to:

	Handle test parse scroll id

86.59. Add a class for transport search IT. It allows to:

	Handle test shard count limit

86.60. Add a class for transport search scroll action. It allows to:

	Instantiate transport search scroll action  with transport service, cluster service, action filters, search transport service, search phase controller and search phase controller;
	Execute task

87. Changes to package org.elasticsearch.action.support:  

87.1. Add an interface declaration  for action filter chain. It allows to:

	Proceed task

87.2. Add a class for action filters. It allows to:

	Instantiate action filters  with action filters set;
	Compare o 1 action filter;
	Get filters

87.3. Add a class for active shard count. It allows to:

	Instantiate active shard count;
	Process active shard count active shard count from;
	Validate active shard count;
	Get active shard count;
	Write  to stream output;
	Read  from stream input;
	Parse string;
	Enough shards active;
	Hash code;
	Check if active shard count equals;
	Convert active shard count to string

87.4. Add a class for active shard count tests. It allows to:

	Handle test from int value;
	Handle test serialization;
	Handle test parse string;
	Handle test validate;
	Do write read;
	Handle test enough shards active zero;
	Handle test enough shards active level one;
	Handle test enough shards active level default;
	Handle test enough shards active random;
	Handle test enough shards active level all;
	Handle test enough shards active value based;
	Handle test enough shards active with closed index;
	Run test  for one active shard;
	Initialize active shard count tests with new index;
	Initialize active shard count tests with closed index;
	Start primaries;
	Start less  than wait on shards;
	Start wait  on shards;
	Start all shards

87.5. Add a class for active shards observer. It allows to:

	Instantiate active shards observer  with cluster service, thread pool and thread pool;
	Wait active shard count for active shards;
	Process  on new cluster state;
	Process  on cluster service close;
	Process  on timeout

87.6. Add a class for active shards observer IT. It allows to:

	Handle test create index no active shards times out;
	Handle test create index no active shards no waiting;
	Handle test create index not enough active shards times out;
	Handle test create index enough active shards;
	Handle test create index waits for all active shards;
	Handle test create index stops waiting when index deleted;
	Wait active shards observer IT for index creation to complete

87.7. Add a class for adapter action future. It allows to:

	Get action get;
	Process adapter action future adapter action future on response;
	Process adapter action future adapter action future on failure;
	Convert listener response

87.8. Add a class for adapter action future tests. It allows to:

	Handle test interruption;
	Convert listener response integer

87.9. Add a class for auto create index tests. It allows to:

	Handle test parse failed;
	Handle test parse failed missing index;
	Handle test handle spaces;
	Handle test auto creation disabled;
	Handle test auto creation enabled;
	Handle test default auto creation;
	Test existing index;
	Handle test auto creation pattern enabled;
	Handle test auto creation pattern disabled;
	Handle test auto creation multiple patterns with wildcards;
	Handle test auto creation multiple patterns no wildcards;
	Handle test auto creation multiple index names;
	Handle test auto creation conflicting patterns first wins;
	Handle test update;
	Build cluster state;
	Handle new auto create index;
	Expect cluster state not match;
	Forbidden cluster state

87.10. Add a class for context preserving action listener. It allows to:

	Instantiate context preserving action listener  with context supplier, delegate action listener and delegate action listener;
	Process context preserving action listener context preserving action listener on response;
	Process context preserving action listener context preserving action listener on failure;
	Wrap preserving context

87.11. Add a class for context preserving action listener tests. It allows to:

	Handle test original context is preserved after on response;
	Process  on response;
	Process  on failure;
	Handle test original context is preserved after on failure;
	Handle test original context is when listener throws;

87.12. Add a class for default shard operation failed exception. It allows to:

	Instantiate default shard operation failed exception;
	Instantiate default shard operation failed exception  with elasticsearch exception;
	Instantiate default shard operation failed exception  with cause throwable;
	Read shard operation failed;
	Read  from stream input;
	Write  to stream output;
	Convert default shard operation failed exception to string;
	Convert default shard operation failed exception to X content;
	Process default shard operation failed exception default shard operation failed exception from X content

87.13. Add a class for default shard operation failed exception tests. It allows to:

	Convert test;
	Handle test from X content

87.14. Add a class for destructive operations. It allows to:

	Instantiate destructive operations  with settings, cluster settings and cluster settings;
	Set destructive requires name;
	Fail destructive;
	Check if destructive operations has wildcard usage

87.15. Add a class for grouped action listener. It allows to:

	Instantiate grouped action listener  with delegate action listener;
	Process grouped action listener grouped action listener on response;
	Process grouped action listener grouped action listener on failure

87.16. Add a class for grouped action listener tests. It allows to:

	Handle test notifications;
	Process  on response;
	Process  on failure;
	Handle test failed;
	Handle test concurrent failures

87.17. Add a class for indices options. It allows to:

	Parse parameter;
	Instantiate indices options  with options enum set, expand wildcards enum set and expand wildcards enum set;
	Instantiate indices options  with options collection, expand wildcards collection and expand wildcards collection;
	Process indices options indices options from byte;
	Convert indices options to byte;
	Ignore unavailable;
	Allow no indices;
	Expand wildcards open;
	Expand wildcards closed;
	Handle forbid closed indices;
	Allow aliases  to multiple indices;
	Ignore aliases;
	Throttled indices options;
	Write indices options;
	Read indices options;
	Process indices options indices options from options;
	Process indices options indices options from request;
	Process indices options indices options from map;
	Check if indices options is indices options;
	Process indices options indices options from parameters;
	Convert indices options to X content;
	Handle strict expand open;
	Handle strict expand open and forbid closed;
	Handle strict expand open and forbid closed ignore throttled;
	Handle strict expand;
	Handle strict single index no expand forbid closed;
	Handle lenient expand open;
	Handle lenient expand;
	Check if indices options equals;
	Hash code;
	Convert indices options to string

87.18. Add a class for indices options tests. It allows to:

	Handle test serialization;
	Handle test from options;
	Handle test from options with default options;
	Handle test from parameters;
	Handle test simple byte BWC;
	Handle test equality and hash code;
	Handle test from map;
	Convert test

87.19. Add a class for listenable action future tests. It allows to:

	Handle test listener is callable from network threads;
	Process  on response;
	Process  on failure;
	Run

87.20. Add a class for plain action future. It allows to:

	Handle new future;
	Convert listener response

87.21. Add a class for refresh policy tests. It allows to:

	Handle test serialization;
	Handle test parse;
	Handle test parse empty;
	Handle test parse unknown

87.22. Add an interface declaration  for request callback. It allows to:

	Execute task

Add a local a class for test request. It allows to:

	Validate test request

Add a local a class for test response

87.23. Add a class for transport actions. It allows to:

	Check if transport actions is shard not available exception;
	Check if transport actions is read override exception

87.24. Add a class for wait active shard count IT. It allows to:

	Handle test replication waits for active shard count;
	Get source

87.25. Add an interface declaration  for write request. It allows to:

	Set refresh policy;
	Get refresh policy;
	Validate write request;
	Refresh policy;
	Get value;
	Parse write request;
	Read  from stream input;
	Write  to stream output

87.26. Add an interface declaration  for write request builder. It allows to:

	Get request;
	Set refresh policy;

87.27. Add an interface declaration  for write response. It allows to:

	Set forced refresh

88. Changes to package org.elasticsearch.action.support.broadcast:  

88.1. Add a class for abstract broadcast response test case. It allows to:

	Create test instance;
	Assert equal instances;
	Handle supports unknown fields;
	Assert abstract broadcast response test case to X content equivalence;
	Handle test failures deduplication;
	Convert test

88.2. Add a class for broadcast operation request builder. It allows to:

	Instantiate broadcast operation request builder  with elasticsearch client, action, request and request;
	Set indices;
	Set indices options

88.3. Add a class for broadcast request. It allows to:

	Instantiate broadcast request;
	Instantiate broadcast request  with stream input;
	Instantiate broadcast request  with indices options;
	Get indices;
	Validate broadcast request;
	Get indices options;
	Write  to stream output;
	Read  from stream input

88.4. Add a class for broadcast response. It allows to:

	Declare broadcast fields;
	Instantiate broadcast response;
	Instantiate broadcast response  with shard failures list;
	Get total shards;
	Get successful shards;
	Get failed shards;
	Get status;
	Get shard failures;
	Read  from stream input;
	Write  to stream output;
	Convert broadcast response to X content;
	Add custom X content fields

88.5. Add a class for broadcast shard operation failed exception. It allows to:

	Instantiate broadcast shard operation failed exception  with shard id;
	Instantiate broadcast shard operation failed exception  with shard id, cause throwable and cause throwable;
	Instantiate broadcast shard operation failed exception  with stream input

88.6. Add a class for broadcast shard request. It allows to:

	Instantiate broadcast shard request;
	Instantiate broadcast shard request  with shard id, broadcast request and broadcast request;
	Shard id;
	Get indices;
	Get indices options;
	Read  from stream input;
	Write  to stream output

88.7. Add a class for broadcast shard response. It allows to:

	Instantiate broadcast shard response;
	Instantiate broadcast shard response  with shard id;
	Get index;
	Get shard id;
	Read  from stream input;
	Write  to stream output

89. Changes to package org.elasticsearch.action.support.master:  

89.1. Add a class for acknowledged request. It allows to:

	Instantiate acknowledged request;
	Instantiate acknowledged request  with stream input;
	Get timeout;
	Get ack timeout;
	Read  from stream input;
	Write  to stream output

89.2. Add a class for acknowledged request builder. It allows to:

	Instantiate acknowledged request builder  with elasticsearch client, action, request and request;
	Set timeout;

89.3. Add a class for acknowledged response. It allows to:

	Declare acknowledged field;
	Instantiate acknowledged response;
	Check if acknowledged response is acknowledged;
	Read  from stream input;
	Write  to stream output;
	Convert acknowledged response to X content;
	Add custom fields;
	Process acknowledged response acknowledged response from X content;
	Check if acknowledged response equals;
	Hash code

89.4. Add a class for indexing master failover IT. It allows to:

	Handle node plugins;
	Handle test master failover during indexing with mapping changes;
	Run

89.5. Add a class for master node operation request builder. It allows to:

	Instantiate master node operation request builder  with elasticsearch client, action, request and request;
	Set master node timeout;

89.6. Add a class for master node read operation request builder. It allows to:

	Instantiate master node read operation request builder  with elasticsearch client, action, request and request;
	Set local

89.7. Add a class for master node read request. It allows to:

	Instantiate master node read request;
	Instantiate master node read request  with stream input;
	Write  to stream output;
	Handle local;
	Read  from stream input

89.8. Add a class for master node request. It allows to:

	Instantiate master node request;
	Instantiate master node request  with stream input;
	Write  to stream output;
	Get master node timeout;
	Read  from stream input

89.9. Add a class for shards acknowledged response. It allows to:

	Declare acknowledged and shards acknowledged fields;
	Instantiate shards acknowledged response;
	Check if shards acknowledged response is shards acknowledged;
	Read shards acknowledged;
	Write shards acknowledged;
	Add custom fields;
	Check if shards acknowledged response equals;
	Hash code

89.10. Add a class for transport master node action utils. It allows to:

	Run master operation

89.11. Add a class for transport master node read action. It allows to:

	Instantiate transport master node read action  with transport service, cluster service, thread pool, action filters, index name expression resolver, request supplier and request supplier;
	Instantiate transport master node read action  with transport service, cluster service, thread pool, action filters, request writeable reader, index name expression resolver and index name expression resolver;
	Handle local execute

90. Changes to package org.elasticsearch.action.support.master.info:  

90.1. Add a class for cluster info request. It allows to:

	Instantiate cluster info request;
	Instantiate cluster info request  with stream input;
	Write  to stream output;
	Get indices;
	Get types;
	Get indices options;
	Read  from stream input

90.2. Add a class for cluster info request builder. It allows to:

	Instantiate cluster info request builder  with elasticsearch client, action, request and request;
	Set indices;
	Add indices;
	Set types;
	Add types;
	Set indices options

90.3. Add a class for transport cluster info action. It allows to:

	Instantiate transport cluster info action  with transport service, cluster service, thread pool, action filters, request writeable reader, index name expression resolver and index name expression resolver;
	Get executor;
	Handle master operation;
	Do master operation

91. Changes to package org.elasticsearch.action.support.nodes:  

91.1. Add a class for base node request. It allows to:

	Instantiate base node request;
	Read  from stream input;
	Write  to stream output

91.2. Add a class for base node response. It allows to:

	Instantiate base node response;
	Instantiate base node response  with discovery node;
	Get node;
	Read  from stream input;
	Write  to stream output

91.3. Add a class for base nodes request. It allows to:

	Instantiate base nodes request;
	Instantiate base nodes request  with concrete nodes;
	Get nodes ids;
	Get timeout;
	Handle concrete nodes;
	Set concrete nodes;
	Validate base nodes request;
	Read  from stream input;
	Write  to stream output

91.4. Add a class for base nodes response. It allows to:

	Instantiate base nodes response;
	Instantiate base nodes response  with cluster name, nodes list, failures list and failures list;
	Get cluster name;
	Get failures;
	Check if base nodes response has failures;
	Get nodes;
	Get nodes map;
	Read  from stream input;
	Write  to stream output;
	Read nodes  from stream input;
	Write nodes  to stream output

91.5. Add a class for nodes operation request builder. It allows to:

	Instantiate nodes operation request builder  with elasticsearch client, action, request and request;
	Set nodes ids;
	Set timeout;

92. Changes to package org.elasticsearch.action.support.replication:  

92.1. Add a class for basic replication request. It allows to:

	Instantiate basic replication request  with shard id;
	Instantiate basic replication request  with stream input;
	Convert basic replication request to string

92.2. Add a class for cluster state creation utils. It allows to:

	Get state;
	Get state with assigned primaries and one replica;
	Get state with assigned primaries and replicas;
	Get state with active primary;
	Get state with no shard;
	Handle new node;
	Select strings set

92.3. Add a class for replicated write request. It allows to:

	Instantiate replicated write request  with stream input;
	Instantiate replicated write request  with shard id;
	Set refresh policy;
	Get refresh policy;
	Read  from stream input;
	Write  to stream output

92.4. Add a class for replication request. It allows to:

	Instantiate replication request  with stream input;
	Instantiate replication request  with shard id;
	Get timeout;
	Get index;
	Get indices;
	Get indices options;
	Wait replication request for active shards;
	Shard id;
	Wait wait for active shard count for active shards;
	Get routed based on cluster version;
	Validate replication request;
	Read  from stream input;
	Write  to stream output;
	Create task;
	Convert replication request to string;
	Get description;
	Process replication request replication request on retry

92.5. Add a class for replication request builder. It allows to:

	Instantiate replication request builder  with elasticsearch client, action, request and request;
	Set timeout;
	Set index;
	Set wait  for active shards;

92.6. Add a class for replication response tests. It allows to:

	Convert test shard info;
	Assert shard info

92.7. Add a class for transport broadcast replication action. It allows to:

	Instantiate transport broadcast replication action  with request reader, cluster service, transport service, action filters, index name expression resolver, replicated broadcast shard action and replicated broadcast shard action;
	Execute task;
	Process  on response;
	Process  on failure;
	Get shards;
	Handle new shard response;
	Handle new shard request;
	Finish and notify listener;
	Handle new response

93. Changes to package org.elasticsearch.action.support.single.instance:  

93.1. Add a class for instance shard operation request. It allows to:

	Instantiate instance shard operation request;
	Validate instance shard operation request;
	Get index;
	Get indices;
	Get indices options;
	Get timeout;
	Handle concrete index;
	Read  from stream input;
	Write  to stream output

93.2. Add a class for instance shard operation request builder. It allows to:

	Instantiate instance shard operation request builder  with elasticsearch client, action, request and request;
	Set index;
	Set timeout;

94. Changes to package org.elasticsearch.action.support.single.shard:  

94.1. Add a class for single shard operation request builder. It allows to:

	Instantiate single shard operation request builder  with elasticsearch client, action, request and request;
	Set index

94.2. Add a class for single shard request. It allows to:

	Instantiate single shard request;
	Validate non null index;
	Get index;
	Get indices;
	Get indices options;
	Read  from stream input;
	Write  to stream output

95. Changes to package org.elasticsearch.action.support.tasks:  

95.1. Add a class for base tasks request. It allows to:

	Instantiate base tasks request;
	Instantiate base tasks request  with stream input;
	Write  to stream output;
	Validate base tasks request;
	Set actions;
	Get actions;
	Get nodes;
	Set nodes;
	Get task id;
	Set task id;
	Get parent task id;
	Set parent task id;
	Get timeout;
	Set timeout;
	Match task

95.2. Add a class for base tasks response. It allows to:

	Instantiate base tasks response  with task failures list, node failures list and node failures list;
	Instantiate base tasks response  with stream input;
	Write  to stream output;
	Get task failures;
	Get node failures;
	Handle rethrow failures;
	Convert base tasks response to X content common;
	Check if base tasks response equals;
	Hash code

95.3. Add a class for tasks request builder. It allows to:

	Instantiate tasks request builder  with elasticsearch client, action, request and request;
	Set task id;
	Set nodes ids;
	Set actions;
	Set timeout;
	Set parent task id

96. Changes to package org.elasticsearch.action.termvectors:  

96.1. Add a class for get term vectors IT. It allows to:

	Handle node plugins;
	Handle test no such doc;
	Test existing field  with no term vectors no NPE;
	Test existing field but  not in doc NPE;
	Handle test not indexed field;
	Handle test simple term vectors;
	Handle test random single term vectors;
	Create info string;
	Handle test duel ES lucene;
	Handle test simple term vectors with generate;
	Check brown fox term vector;
	Handle test duel with and without term vectors;
	Compare term vectors;
	Handle test simple wild cards;
	Handle test artificial vs existing;
	Handle test artificial no doc;
	Handle test per field analyzer;
	Check analyzed fields;
	Get index or alias;
	Handle test term vectors with version;
	Handle test filter length;
	Handle test filter term freq;
	Handle test filter doc freq;
	Handle test artificial doc with preference;
	Handle test with keyword and normalizer;
	Check best terms

96.2. Add an object creator class for multi term vectors action. It allows to:

	Instantiate multi term vectors action;
	Handle new response

96.3. Add a class for multi term vectors IT. It allows to:

	Handle test duel ES lucene;
	Handle test missing index throws missing index;
	Handle test multi term vectors with version;
	Get index or alias;
	Check term texts

96.4. Add a class for multi term vectors item response. It allows to:

	Instantiate multi term vectors item response;
	Instantiate multi term vectors item response  with term vectors response, multi term vectors response failure and multi term vectors response failure;
	Get index;
	Get type;
	Get id;
	Check if multi term vectors item response is failed;
	Get response;
	Get failure;
	Read item response;
	Read  from stream input;
	Write  to stream output

96.5. Add a class for multi term vectors request. It allows to:

	Add term vectors request;
	Add multi term vectors request;
	Validate multi term vectors request;
	Get iterator;
	Check if multi term vectors request is empty;
	Get requests;
	Add template term vectors request;
	Read  from stream input;
	Write  to stream output;
	Handle ids;
	Get size;
	Get realtime

96.6. Add a class for multi term vectors request builder. It allows to:

	Instantiate multi term vectors request builder  with elasticsearch client, multi term vectors action and multi term vectors action;
	Add ids iterable;
	Add multi term vectors request builder;
	Add term vectors request

96.7. Add a class for multi term vectors shard request. It allows to:

	Instantiate multi term vectors shard request;
	Validate multi term vectors shard request;
	Shard id;
	Get preference;
	Add term vectors request;
	Get indices;
	Read  from stream input;
	Write  to stream output

96.8. Add a class for multi term vectors shard response. It allows to:

	Instantiate multi term vectors shard response;
	Add term vectors response;
	Add multi term vectors response failure;
	Read  from stream input;
	Write  to stream output

96.9. Add an object creator class for term vectors action. It allows to:

	Instantiate term vectors action;
	Handle new response

96.10. Add a class for term vectors request builder. It allows to:

	Instantiate term vectors request builder  with elasticsearch client, term vectors action and term vectors action;
	Set index;
	Set type;
	Set id;
	Set doc;
	Routing term vectors request builder;
	Set preference;
	Set offsets;
	Set positions;
	Set payloads;
	Set term statistics;
	Set field statistics;
	Set selected fields;
	Set realtime;
	Get set version;
	Get set version type;
	Set per field analyzer map per field analyzer;
	Set filter settings

96.11. Add a class for term vectors unit tests. It allows to:

	Handle test stream response;
	Write empty term vector;
	Write standard term vector;
	Check in response if standard term vector;
	Handle test rest request parsing;
	Handle test request parsing throws exception;
	Handle test stream request;
	Convert test field type;
	Handle test term vector string generation without positions;
	Handle test multi parser;
	Check parsed parameters;
	Handle test multi parser filter;
	Check parsed filter parameters

96.12. Add a class for term vectors writer. It allows to:

	Instantiate term vectors writer  with term vectors response;
	Set fields;
	Write header;
	Write term  with docs only iterator terms enum;
	Write term  with docs and pos;
	Write payload;
	Write freq;
	Write offsets;
	Write position;
	Start field;
	Start term;
	Write missing term statistics;
	Write term statistics;
	Write field statistics;
	Write score term;
	Write term vectors writer potentially negative V int;
	Write term vectors writer potentially negative V long;
	Get iterator;
	Get size;
	Get sum total term freq;
	Get sum doc freq;
	Get doc count;
	Check if  has freqs;
	Check if  has offsets;
	Check if  has positions;
	Check if  has payloads

96.13. Add a class for transport multi term vectors action. It allows to:

	Instantiate transport multi term vectors action  with transport service, cluster service, shard multi terms vector action, action filters, index name expression resolver and index name expression resolver;
	Execute task;
	Execute shard action;
	Process  on response;
	Process  on failure;
	Finish

96.14. Add a class for transport shard multi terms vector action. It allows to:

	Instantiate transport shard multi terms vector action  with cluster service, transport service, indices service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Check if transport shard multi terms vector action is sub action;
	Handle new response;
	Resolve index;
	Get shards;
	Handle shard operation;
	Get executor

96.15. Add a class for transport term vectors action. It allows to:

	Instantiate transport term vectors action  with cluster service, transport service, indices service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get shards;
	Resolve index;
	Resolve request;
	Handle async shard operation;
	Handle shard operation;
	Handle new response;
	Get executor

97. Changes to package org.elasticsearch.action.update:  

97.1. Add a class for context fields

97.2. Add a class for transport update action. It allows to:

	Instantiate transport update action  with thread pool, cluster service, transport service, update helper, action filters, index name expression resolver, indices service, auto create index, node client and node client;
	Get executor;
	Handle new response;
	Retry exception on failure;
	Resolve request;
	Resolve meta data;
	Execute task;
	Process  on response;
	Process  on failure;
	Handle inner execute;
	Get shards;
	Handle shard operation;
	Handle update failure  with retry;
	Run

97.3. Add an object creator class for update action. It allows to:

	Instantiate update action;
	Handle new response

97.4. Add a class for update request. It allows to:

	Instantiate update request;
	Validate update request;
	Get type;
	Get default type if null;
	I update request;
	Routing update request;
	Get shard id;
	Get script;
	Get script string;
	Get script type;
	Get script params;
	Get script lang;
	Add script param;
	Update or create script;
	Fetch source;
	Retry update request on conflict;
	Get version;
	Get version type;
	Get set if seq no;
	Set update request if primary term;
	Process update request update request if seq no;
	Process update request update request if primary term;
	Op type;
	Set refresh policy;
	Get refresh policy;
	Wait update request for active shards;
	Wait wait for active shard count for active shards;
	Get doc;
	Handle safe doc;
	Get upsert;
	Handle upsert request;
	Handle safe upsert request;
	Detect noop;
	Process update request update request from X content;
	Handle doc as upsert;
	Get doc as upsert;
	Get scripted upsert;
	Read  from stream input;
	Write  to stream output;
	Convert update request to X content;
	Convert update request to string

97.5. Add a class for update request builder. It allows to:

	Instantiate update request builder  with elasticsearch client, update action and update action;
	Set type;
	Set id;
	Routing update request builder;
	Set script;
	Set fetch source;
	Set retry  on conflict;
	Get set version;
	Get set version type;
	Get set if seq no;
	Set update request builder if primary term;
	Set wait  for active shards;
	Set doc;
	Set upsert;
	Set doc  as upsert;
	Set detect noop;
	Set scripted upsert

97.6. Add a class for update request tests. It allows to:

	Set update request tests;
	Handle test from X content;
	Handle test unknown field parsing;
	Handle test fetch source parsing;
	Handle test now in script;
	Handle test index timeout;
	Handle test delete timeout;
	Handle test upsert timeout;
	Run timeout test;
	Convert test;
	Handle test validate;
	Handle test routing extraction;
	Handle test noop detection;
	Handle test update script;

97.7. Add a class for update response tests. It allows to:

	Convert test;
	Handle test from X content with random fields;
	Do update response tests from X content test with random fields;
	Handle random update response

98. Changes to package org.elasticsearch.aliases:  

98.1. Add a class for index aliases IT. It allows to:

	Handle test aliases;
	Handle test failed filter;
	Handle test filtering aliases;
	Handle test empty filter;
	Handle test searching filtering aliases single index;
	Handle test searching filtering aliases two indices;
	Handle test searching filtering aliases multiple indices;
	Handle test deleting by query filtering aliases;
	Handle test delete aliases;
	Handle test wait for alias creation multiple shards;
	Handle test wait for alias creation single shard;
	Handle test wait for alias simultaneous update;
	Run;
	Handle test same alias;
	Handle test indices remove non existing alias responds 404;
	Handle test indices get aliases;
	Handle test get all aliases works;
	Handle test create index with aliases;
	Handle test create index with aliases in source;
	Handle test create index with aliases source;
	Handle test create index with aliases filter not valid;
	Convert test aliases can be added;
	Handle test add alias with filter no mapping;
	Handle test alias filter with now in range filter and query;
	Handle test aliases with blocks;
	Handle test alias action remove index;
	Handle test remove index and replace with alias;
	Check aliases;
	Assert hits;
	Get source

99. Changes to package org.elasticsearch.analysis.common:  

99.1. Add an object creator class for aSCII folding token filter factory. It allows to:

	Instantiate aSCII folding token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Get synonym filter;
	Name;
	Normalize token stream

99.2. Add a class for aSCII folding token filter factory tests. It allows to:

	Handle test default;
	Handle test preserve original

99.3. Add a class for abstract compound word token filter factory. It allows to:

	Instantiate abstract compound word token filter factory  with index settings, environment, settings and settings;
	Get synonym filter

99.4. Add an object creator class for apostrophe filter factory. It allows to:

	Instantiate apostrophe filter factory  with index settings, environment, settings and settings;
	Create token stream

99.5. Add an object creator class for arabic normalization filter factory. It allows to:

	Instantiate arabic normalization filter factory  with index settings, environment, settings and settings;
	Create token stream

99.6. Add an object creator class for arabic stem token filter factory. It allows to:

	Instantiate arabic stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.7. Add a class for base word delimiter token filter factory test case. It allows to:

	Instantiate base word delimiter token filter factory test case;
	Handle test default;
	Handle test catenate words;
	Handle test catenate numbers;
	Handle test catenate all;
	Handle test split on case change;
	Handle test preserve original;
	Handle test stem english possessive

99.8. Add an object creator class for bengali normalization filter factory. It allows to:

	Instantiate bengali normalization filter factory  with index settings, environment, settings and settings;
	Create token stream

99.9. Add an object creator class for brazilian stem token filter factory. It allows to:

	Instantiate brazilian stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.10. Add a class for cJK bigram filter factory. It allows to:

	Instantiate cJK bigram filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Get synonym filter

99.11. Add a class for cJK filter factory tests. It allows to:

	Handle setup;
	Handle test default;
	Handle test no flags;
	Handle test han only;
	Handle test han unigram only;
	Handle test disable graph

99.12. Add an object creator class for cJK width filter factory. It allows to:

	Instantiate cJK width filter factory  with index settings, environment, settings and settings;
	Create token stream

99.13. Add an object creator class for classic filter factory. It allows to:

	Instantiate classic filter factory  with index settings, environment, settings and settings;
	Create token stream

99.14. Add a class for common analysis client yaml test suite IT. It allows to:

	Instantiate common analysis client yaml test suite IT  with client yaml test candidate;
	Get parameters

99.15. Add a class for common analysis factory tests. It allows to:

	Instantiate common analysis factory tests;
	Get tokenizers;
	Get token filters;
	Get char filters;
	Get pre configured char filters;
	Get pre configured token filters;
	Get pre configured tokenizers;
	Test all tokenizers marked;
	Test all char filters marked;
	Test all token filters marked;
	Handle marked test case

99.16. Add a class for common analysis plugin. It allows to:

	Create components;
	Get contexts;
	Get analyzers;
	Get token filters;
	Get char filters;
	Get tokenizers;
	Get pre built analyzer provider factories;
	Get pre configured char filters;
	Get pre configured token filters;
	Get pre configured tokenizers

99.17. Add a class for common grams token filter factory. It allows to:

	Instantiate common grams token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Get synonym filter

99.18. Add a class for common grams token filter factory tests. It allows to:

	Handle test default;
	Handle test without common words match;
	Handle test settings;
	Handle test common grams analysis;
	Handle test query mode settings;
	Handle test query mode common grams analysis;
	Create home;
	Create test analysis  from settings

99.19. Add a class for compound analysis tests. It allows to:

	Handle test defaults compound analysis;
	Handle test dictionary decompounder;
	Analyze settings;
	Create analysis module;
	Get token filters;
	Get json settings;
	Get yaml settings

99.20. Add an object creator class for czech stem token filter factory. It allows to:

	Instantiate czech stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.21. Add an object creator class for decimal digit filter factory. It allows to:

	Instantiate decimal digit filter factory  with index settings, environment, settings and settings;
	Create token stream

99.22. Add a class for delimited payload token filter factory. It allows to:

	Instantiate delimited payload token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.23. Add an object creator class for dictionary compound word token filter factory. It allows to:

	Instantiate dictionary compound word token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.24. Add an object creator class for dutch stem token filter factory. It allows to:

	Instantiate dutch stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.25. Add a class for edge N gram token filter factory. It allows to:

	Instantiate edge N gram token filter factory  with index settings, environment, settings and settings;
	Parse side;
	Create token stream;
	Handle breaks fast vector highlighter;
	Get synonym filter

99.26. Add an object creator class for elision token filter factory. It allows to:

	Instantiate elision token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.27. Add a class for fingerprint token filter factory. It allows to:

	Instantiate fingerprint token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Get synonym filter

99.28. Add an object creator class for flatten graph token filter factory. It allows to:

	Instantiate flatten graph token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.29. Add a class for flatten graph token filter factory tests. It allows to:

	Handle test basic;
	Handle token

99.30. Add an object creator class for french stem token filter factory. It allows to:

	Instantiate french stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.31. Add an object creator class for german normalization filter factory. It allows to:

	Instantiate german normalization filter factory  with index settings, environment, settings and settings;
	Create token stream

99.32. Add an object creator class for german stem token filter factory. It allows to:

	Instantiate german stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.33. Add a class for highlighter with analyzers tests. It allows to:

	Handle node plugins;
	Handle test ngram highlighting with broken positions;
	Handle test multi phrase cutoff;
	Handle test synonyms;
	Handle test phrase prefix;
	Get type 1 term vector mapping

99.34. Add an object creator class for hindi normalization filter factory. It allows to:

	Instantiate hindi normalization filter factory  with index settings, environment, settings and settings;
	Create token stream

99.35. Add an object creator class for html strip char filter factory. It allows to:

	Instantiate html strip char filter factory  with index settings, environment, settings and settings;
	Create token stream reader

99.36. Add an object creator class for hyphenation compound word token filter factory. It allows to:

	Instantiate hyphenation compound word token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.37. Add an object creator class for indic normalization filter factory. It allows to:

	Instantiate indic normalization filter factory  with index settings, environment, settings and settings;
	Create token stream

99.38. Add an object creator class for k stem token filter factory. It allows to:

	Instantiate k stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.39. Add a class for keep filter factory tests. It allows to:

	Handle test load without settings;
	Handle test load over configured settings;
	Handle test keep words path settings;
	Handle test case insensitive mapping;
	Handle test case sensitive mapping

99.40. Add a class for keep types filter factory. It allows to:

	Convert keep types filter factory to string;
	Process keep types filter factory keep types filter factory from string;
	Instantiate keep types filter factory  with index settings, environment, settings and settings;
	Create token stream

99.41. Add a class for keep types filter factory tests. It allows to:

	Handle test keep types include;
	Handle test keep types exclude;
	Handle test keep types exception

99.42. Add a class for keep word filter factory. It allows to:

	Instantiate keep word filter factory  with index settings, environment, settings and settings;
	Create token stream

99.43. Add a class for keyword marker filter factory tests. It allows to:

	Handle test keyword set;
	Handle test keyword pattern;
	Handle test can not specify both keywords and pattern

99.44. Add an object creator class for keyword marker token filter factory. It allows to:

	Instantiate keyword marker token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.45. Add a class for legacy delimited payload token filter factory. It allows to:

	Instantiate legacy delimited payload token filter factory  with index settings, environment, settings and settings

99.46. Add an object creator class for length token filter factory. It allows to:

	Instantiate length token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.47. Add an object creator class for limit token count filter factory. It allows to:

	Instantiate limit token count filter factory  with index settings, environment, settings and settings;
	Create token stream

99.48. Add a class for limit token count filter factory tests. It allows to:

	Handle test default;
	Handle test settings;
	Create test analysis  from settings

99.49. Add an object creator class for lower case token filter factory. It allows to:

	Instantiate lower case token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.50. Add an object creator class for mapping char filter factory. It allows to:

	Instantiate mapping char filter factory  with index settings, environment, settings and settings;
	Create token stream reader;
	Parse rules;
	Parse string

99.51. Add a class for massive word list tests. It allows to:

	Get plugins;
	Handle test create index with massive word list

99.52. Add a class for min hash filter factory tests. It allows to:

	Handle test default;
	Handle test settings

99.53. Add a class for min hash token filter factory. It allows to:

	Instantiate min hash token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Convert settings

99.54. Add a class for n gram token filter factory. It allows to:

	Instantiate n gram token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Get synonym filter

99.55. Add a class for n gram tokenizer factory tests. It allows to:

	Handle test parse token chars;
	Handle test no token chars;
	Handle test pre tokenization;
	Handle test pre tokenization edge;
	Handle test backwards compatibility edge ngram token filter;
	Handle test max N gram diff exception

99.56. Add an object creator class for pattern capture group token filter factory. It allows to:

	Instantiate pattern capture group token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.57. Add a class for pattern capture token filter tests. It allows to:

	Handle test pattern capture token filter;
	Handle test no patterns

99.58. Add a class for pattern replace char filter factory. It allows to:

	Instantiate pattern replace char filter factory  with index settings, environment, settings and settings;
	Get pattern;
	Get replacement;
	Create token stream reader

99.59. Add an object creator class for pattern replace token filter factory. It allows to:

	Instantiate pattern replace token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.60. Add an object creator class for persian normalization filter factory. It allows to:

	Instantiate persian normalization filter factory  with index settings, environment, settings and settings;
	Create token stream

99.61. Add an object creator class for porter stem token filter factory. It allows to:

	Instantiate porter stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.62. Add a class for query string with analyzers tests. It allows to:

	Handle node plugins;
	Handle test custom word delimiter query string

99.63. Add an object creator class for reverse token filter factory. It allows to:

	Instantiate reverse token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.64. Add an object creator class for russian stem token filter factory. It allows to:

	Instantiate russian stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.65. Add an object creator class for scandinavian folding filter factory. It allows to:

	Instantiate scandinavian folding filter factory  with index settings, environment, settings and settings;
	Create token stream

99.66. Add an object creator class for scandinavian normalization filter factory. It allows to:

	Instantiate scandinavian normalization filter factory  with index settings, environment, settings and settings;
	Create token stream

99.67. Add an object creator class for serbian normalization filter factory. It allows to:

	Instantiate serbian normalization filter factory  with index settings, environment, settings and settings;
	Create token stream

99.68. Add a class for shingle token filter tests. It allows to:

	Handle test pre configured shingle filter disable graph attribute

99.69. Add an object creator class for simple pattern split tokenizer factory. It allows to:

	Instantiate simple pattern split tokenizer factory  with index settings, environment, settings and settings;
	Create simple pattern split tokenizer factory

99.70. Add an object creator class for simple pattern tokenizer factory. It allows to:

	Instantiate simple pattern tokenizer factory  with index settings, environment, settings and settings;
	Create simple pattern tokenizer factory

99.71. Add an object creator class for snowball token filter factory. It allows to:

	Instantiate snowball token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.72. Add a class for stemmer override token filter factory. It allows to:

	Instantiate stemmer override token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Parse rules

99.73. Add an object creator class for stemmer token filter factory. It allows to:

	Instantiate stemmer token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.74. Add a class for stemmer token filter factory tests. It allows to:

	Handle test english filter factory;
	Convert test porter;
	Handle test multiple languages throws exception

99.75. Add an object creator class for trim token filter factory. It allows to:

	Instantiate trim token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.76. Add a class for trim token filter tests. It allows to:

	Handle test normalizer

99.77. Add an object creator class for truncate token filter factory. It allows to:

	Instantiate truncate token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.78. Add a class for unique token filter. It allows to:

	Instantiate unique token filter  with in token stream;
	Handle increment token;
	Reset unique token filter

99.79. Add an object creator class for unique token filter factory. It allows to:

	Instantiate unique token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.80. Add a class for unique token filter tests. It allows to:

	Handle test simple;
	Create components

99.81. Add an object creator class for upper case token filter factory. It allows to:

	Instantiate upper case token filter factory  with index settings, environment, settings and settings;
	Create token stream

99.82. Add a class for word delimiter graph token filter factory. It allows to:

	Instantiate word delimiter graph token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Get synonym filter;
	Get flag

99.83. Add a class for word delimiter graph token filter factory tests. It allows to:

	Instantiate word delimiter graph token filter factory tests;
	Handle test multi terms;
	Handle test parts and catenate;
	Handle test adjusting offsets

99.84. Add a class for word delimiter token filter factory. It allows to:

	Instantiate word delimiter token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Get synonym filter;
	Get flag;
	Parse types;
	Parse type;
	Parse string;
	Handle breaks fast vector highlighter

99.85. Add a class for word delimiter token filter factory tests. It allows to:

	Instantiate word delimiter token filter factory tests;
	Handle test parts and catenate

100. Changes to package org.elasticsearch.backwards:  

100.1. Add a class for mixed cluster client yaml test suite IT. It allows to:

	Instantiate mixed cluster client yaml test suite IT  with client yaml test candidate;
	Get parameters;
	Randomize content type

101. Changes to package org.elasticsearch.benchmark.routing.allocation:  

101.1. Add a class for allocation benchmark. It allows to:

	Set allocation benchmark;
	Convert allocation benchmark to int;
	Measure allocation

102. Changes to package org.elasticsearch.blocks:  

102.1. Add a class for simple blocks IT. It allows to:

	Handle test verify index and cluster read only;
	Handle test index read write meta data blocks;
	Can create index;
	Can simple blocks IT not create index;
	Can index document;
	Can simple blocks IT not index document;
	Can index exists;
	Set index read  only

103. Changes to package org.elasticsearch.bootstrap:  

103.1. Add a class for bootstrap. It allows to:

	Instantiate bootstrap;
	Run;
	Initialize natives;
	Handle;
	Initialize probes;
	Handle setup;
	Validate node  before accepting requests;
	Load secure settings;
	Create environment;
	Start bootstrap;
	Stop bootstrap;
	Handle init;
	Close syst out;
	Close sys error;
	Check lucene

103.2. Add a class for bootstrap checks tests. It allows to:

	Handle test non production mode;
	Handle test no log message in non production mode;
	Handle test log message in production mode;
	Convert test enforce limits when bound;
	Convert test enforce limits when publishing;
	Handle test exception aggregation;
	Handle test heap size check;
	Get initial heap size;
	Get max heap size;
	Handle test file descriptor limits;
	Get max file descriptor count;
	Handle test file descriptor limits throws on invalid limit;
	Handle test mlockall check;
	Check if  is memory locked;
	Handle test max number of threads check;
	Get max number  of threads;
	Handle test max size virtual memory;
	Get max size virtual memory;
	Get rlim infinity;
	Handle test max file size check;
	Get max file size;
	Handle test client jvm check;
	Get vm name;
	Handle test use serial GC check;
	Get use serial GC;
	Handle test system call filter check;
	Check if  is system call filter installed;
	Handle test might fork check;
	Fork;
	Get message;
	Handle test on error check;
	Process  on error;
	Handle test on out of memory error check;
	Process  on out of memory error;
	Run might fork test;
	Handle test early access check;
	Get jvm vendor;
	Handle java version;
	Handle test G 1 GC check;
	Check if  is G 1 GC enabled;
	Get jvm version;
	Check if  is java 8;
	Test all permission check;
	Check if  is all permission granted;
	Handle test always enforced checks;
	Check bootstrap context;
	Enforce enforce;
	Handle test discovery configured check

103.3. Add a class for bootstrap context. It allows to:

	Instantiate bootstrap context  with environment, meta data and meta data;
	Get environment;
	Get settings;
	Handle meta data

103.4. Add a class for bootstrap exception. It allows to:

	Instantiate bootstrap exception  with cause exception

103.5. Add a class for bootstrap for testing. It allows to:

	Check if  implies;
	Add class codebase;
	Get plugin permissions;
	Parse class path  with symlinks;
	Initialized bootstrap for testing

103.6. Add a class for bootstrap info. It allows to:

	Instantiate bootstrap info;
	Check if bootstrap info is natives available;
	Check if bootstrap info is memory locked;
	Check if bootstrap info is system call filter installed;
	Get size;
	Check if  is empty;
	Get keys;
	Get elements;
	Get;
	Put;
	Remove;
	Get system properties;
	Handle init

103.7. Add a class for bootstrap settings. It allows to:

	Instantiate bootstrap settings

103.8. Add a class for bootstrap settings tests. It allows to:

	Handle test default settings

103.9. Add a class for bootstrap tests. It allows to:

	Close mock file systems;
	Handle setup env;
	Handle test load secure settings

103.10. Add an interface declaration  for console ctrl handler. It allows to:

	Handle console ctrl handler

103.11. Add a class for eS policy tests. It allows to:

	Handle test restrict privileges;
	Run

103.12. Add a class for eS policy unit tests. It allows to:

	Handle test null code source;
	Handle test null location;
	Handle test listen

103.13. Add a class for elasticsearch. It allows to:

	Instantiate elasticsearch;
	Handle main;
	Check permission;
	Override dns cache policy properties;
	Execute terminal;
	Handle init;
	Close elasticsearch

103.14. Add a class for elasticsearch cli tests. It allows to:

	Handle test version;
	Run test  that version is mutually exclusive to other options;
	Run test  that version is returned;
	Run test version;
	Handle test positional args;
	Handle test that pid file can be configured;
	Run pid file test;
	Handle test that parsing daemonize works;
	Run daemonize test;
	Handle test that parsing quiet option works;
	Run quiet test;
	Handle test elasticsearch settings;
	Handle test elasticsearch setting can not be empty;
	Handle test elasticsearch setting can not be duplicated;
	Handle test unknown option

103.15. Add a class for elasticsearch uncaught exception handler tests. It allows to:

	Set elasticsearch uncaught exception handler tests;
	Handle test uncaught error;
	Halt;
	Process  on fatal uncaught;
	Process  on non fatal uncaught;
	Handle test uncaught exception;
	Handle test is fatal cause;
	Assert fatal;
	Assert non fatal

103.16. Add a class for evil bootstrap checks tests. It allows to:

	Set evil bootstrap checks tests;
	Tear evil bootstrap checks tests;
	Handle test enforce bootstrap checks;
	Handle test non enforced bootstrap checks;
	Handle test invalid value;
	Set es enforce bootstrap checks

103.17. Add a class for evil elasticsearch cli tests. It allows to:

	Handle test path home

103.18. Add a class for evil JNA natives tests. It allows to:

	Handle test set maximum number of threads;
	Handle test set max size virtual memory;
	Handle test set max file size

103.19. Add a class for evil security tests. It allows to:

	Handle test generated permissions;
	Handle test environment paths;
	Handle test duplicate data paths;
	Handle test ensure symlink;
	Handle test ensure broken symlink;
	Handle test symlink permissions;
	Assert exact permissions;
	Assert no permissions

103.20. Add a class for file permission utils. It allows to:

	Instantiate file permission utils;
	Add single file path;
	Add directory path

103.21. Add a class for jNA natives. It allows to:

	Instantiate jNA natives;
	Try mlockall;
	Try set max number  of threads;
	Try set max size virtual memory;
	Try set max file size;
	Convert rlimit;
	Definitely running  as root;
	Try virtual lock;
	Get short path name;
	Add console ctrl handler;
	Try install system call filter

103.22. Add a class for jNA natives tests. It allows to:

	Handle test mlockall;
	Handle test console ctrl handler

103.23. Add a class for java version tests. It allows to:

	Handle test parse;
	Convert test;
	Handle test compare;
	Handle test valid versions;
	Handle test invalid versions;
	Handle test java 8 compat

103.24. Add a class for natives. It allows to:

	Instantiate natives;
	Try mlockall;
	Definitely running  as root;
	Try virtual lock;
	Get short path name;
	Add console ctrl handler;
	Check if natives is memory locked;
	Try install system call filter;
	Try set max number  of threads;
	Try set max size virtual memory;
	Try set max file size;
	Check if natives is system call filter installed

103.25. Add a class for security. It allows to:

	Instantiate security;
	Configure environment;
	Get codebase jar map;
	Get plugin permissions;
	Read policy;
	Create permissions;
	Add classpath permissions;
	Add file permissions;
	Add bind permissions;
	Add socket permission  for http;
	Add socket permission  for transport profiles;
	Add socket permission  for transport;
	Add socket permission  for port range;
	Ensure directory exists;
	Handle self test

103.26. Add a class for security tests. It allows to:

	Handle test ensure exists;
	Handle test ensure not exists;
	Handle test ensure regular file;
	Handle test process execution

103.27. Add a class for spawner. It allows to:

	Close spawner;
	Spawn native controllers;
	Spawn native controller;
	Get processes

103.28. Add a class for spawner no bootstrap tests. It allows to:

	Handle test no controller spawn;
	Handle test controller spawn;
	Assert controller spawns;
	Handle test controller spawn with incorrect descriptor;
	Handle test spawner handling of desktop services store files;
	Create controller program

103.29. Add a class for startup exception. It allows to:

	Instantiate startup exception  with cause throwable;
	Print print stream;
	Print s print writer;
	Print consumer;
	Get first guice cause

103.30. Add a class for system call filter tests. It allows to:

	Set system call filter tests;
	Handle test no execution;
	Handle test no execution from thread;
	Run

104. Changes to package org.elasticsearch.broadcast:  

104.1. Add a class for broadcast actions IT. It allows to:

	Handle maximum number of replicas;
	Handle test broadcast operations;
	Get source

105. Changes to package org.elasticsearch.bwcompat:  

105.1. Add a class for recovery with unsupported indices IT. It allows to:

	Prepare backwards index path backwards data dir;
	Convert test upgrade start cluster on

106. Changes to package org.elasticsearch.cli:  

106.1. Add a class for command logging configurator. It allows to:

	Configure logging  without config

106.2. Add a class for command test case. It allows to:

	Reset terminal;
	Handle new command;
	Execute command test case

106.3. Add a class for environment aware command. It allows to:

	Instantiate environment aware command;
	Instantiate environment aware command  with before main runnable;
	Execute terminal;
	Create env;
	Get config path;
	Put system property  if setting is missing;

106.4. Add a class for evil command tests. It allows to:

	Handle test command shutdown hook;
	Execute terminal;
	Close

106.5. Add a class for evil environment aware command tests. It allows to:

	Handle test es path conf not set;
	Handle clear es path conf

106.6. Add a class for logging aware command. It allows to:

	Instantiate logging aware command

106.7. Add a class for logging aware multi command. It allows to:

	Instantiate logging aware multi command

106.8. Add a class for mock terminal. It allows to:

	Instantiate mock terminal;
	Read text;
	Read secret;
	Get writer;
	Add text input;
	Add secret input;
	Get output;
	Reset mock terminal

106.9. Add a class for terminal tests. It allows to:

	Handle test verbosity;
	Handle test escaping;
	Handle test prompt yes no default;
	Handle test prompt yes no reprompt;
	Handle test prompt yes no case;
	Printed log terminal;
	Assert log terminal not printed

107. Changes to package org.elasticsearch.client:  

107.1. Add an interface declaration  for admin client. It allows to:

	Get cluster;
	Get indices

107.2. Add an interface declaration  for client. It allows to:

	Process client client admin;
	Get index;
	Handle index;
	Prepare index;
	Update update request;
	Update client;
	Delete delete request;
	Delete client;
	Get bulk;
	Handle bulk;
	Prepare bulk;
	Get get request;
	Get client;
	Get multi get;
	Handle multi get;
	Prepare multi get;
	Get search;
	Handle search;
	Prepare search;
	Search scroll;
	Prepare search scroll;
	Get multi search;
	Handle multi search;
	Prepare multi search;
	Get term vectors;
	Handle term vectors;
	Prepare term vectors;
	Get multi term vectors;
	Handle multi term vectors;
	Prepare multi term vectors;
	Explain client;
	Explain explain request;
	Prepare clear scroll;
	Handle clear scroll;
	Prepare field caps;
	Get field caps;
	Handle field caps;
	Get settings;
	Get filter with header;
	Get remote cluster client

107.3. Add an interface declaration  for cluster admin client. It allows to:

	Get health;
	Handle health;
	Prepare health;
	Get state;
	Handle state;
	Prepare state;
	Update settings;
	Prepare update settings;
	Prepare reload secure settings;
	Reroute cluster reroute request;
	Reroute cluster admin client;
	Get nodes info;
	Handle nodes info;
	Prepare nodes info;
	Get cluster stats;
	Handle cluster stats;
	Prepare cluster stats;
	Get nodes stats;
	Handle nodes stats;
	Prepare nodes stats;
	Get nodes usage;
	Handle nodes usage;
	Prepare nodes usage;
	Get nodes hot threads;
	Handle nodes hot threads;
	Prepare nodes hot threads;
	Get list tasks;
	Handle list tasks;
	Prepare list tasks;
	Get task;
	Prepare get task;
	Cancel tasks;
	Prepare cancel tasks;
	Search shards;
	Prepare search shards;
	Put repository;
	Prepare put repository;
	Delete repository;
	Prepare delete repository;
	Get repositories;
	Prepare get repositories;
	Verify repository;
	Prepare verify repository;
	Create snapshot;
	Prepare create snapshot;
	Get snapshots;
	Prepare get snapshots;
	Delete snapshot;
	Prepare delete snapshot;
	Restore snapshot;
	Prepare restore snapshot;
	Pending cluster tasks;
	Prepare pending cluster tasks;
	Get snapshots status;
	Handle snapshots status;
	Prepare snapshot status;
	Put pipeline;
	Prepare put pipeline;
	Delete pipeline;
	Prepare delete pipeline;
	Get pipeline;
	Prepare get pipeline;
	Simulate pipeline;
	Prepare simulate pipeline;
	Handle allocation explain;
	Get allocation explain;
	Prepare allocation explain;
	Prepare put stored script;
	Delete stored script;
	Prepare delete stored script;
	Put stored script;
	Prepare get stored script;
	Get stored script;

107.4. Add a class for cluster client. It allows to:

	Instantiate cluster client  with rest high level client;
	Put settings;
	Put settings  async cluster update settings request;
	Get settings;
	Get settings  async cluster get settings request;
	Get health;
	Handle health async

107.5. Add a class for cluster client IT. It allows to:

	Handle test cluster put settings;
	Handle test cluster update setting non existent;
	Handle test cluster get settings;
	Handle test cluster get settings with default;
	Handle test cluster health green;
	Handle test cluster health yellow cluster level;
	Handle test cluster health yellow indices level;
	Assert yellow shards;
	Handle test cluster health yellow specific index;
	Assert yellow index;
	Assert yellow shard;
	Assert no indices;
	Handle test cluster health not found index

107.6. Add a class for crud IT. It allows to:

	Handle test delete;
	Handle test delete with types;
	Handle test exists;
	Handle test source exists;
	Handle test source does not exist;
	Handle test get;
	Handle test get with types;
	Handle test multi get;
	Handle test multi get with types;
	Handle test index;
	Handle test index with types;
	Handle test update;
	Handle test update with types;
	Handle test bulk;
	Handle test bulk processor integration;
	Process  before bulk;
	Process  after bulk;
	Validate bulk responses;
	Handle test url encode;
	Handle test params encode;
	Handle test termvectors;
	Handle test termvectors with non existent index;
	Handle test multi termvectors

107.7. Add an interface declaration  for elasticsearch client. It allows to:

	Execute action;
	Get thread pool

107.8. Add a class for filter client. It allows to:

	Instantiate filter client  with in client;
	Instantiate filter client  with settings, thread pool, in client and in client;
	Close filter client;
	Execute action;
	I filter client;
	Get remote cluster client

107.9. Add a class for heap buffered async response consumer. It allows to:

	Instantiate heap buffered async response consumer;
	Get buffer limit;
	Handle on response received;
	Handle on entity enclosed;
	Get byte buffer  allocator;
	Handle on content received;
	Build result;
	Release resources

107.10. Add a class for heap buffered async response consumer tests. It allows to:

	Handle test response processing;
	Handle test default buffer limit;
	Handle test configured buffer limit;
	Handle test can configure heap buffer limit from outside package;
	Handle test http async response consumer factory visibility;
	Buffer limit test;
	Get content length

107.11. Add a class for hosts tracking failure listener. It allows to:

	Process hosts tracking failure listener hosts tracking failure listener on failure;
	Called nodes list;
	Called hosts;
	Assert hosts tracking failure listener not called

107.12. Add a class for http delete with entity. It allows to:

	Instantiate http delete with entity  with URI;
	Get method

107.13. Add a class for http get with entity. It allows to:

	Instantiate http get with entity  with URI;
	Get method

107.14. Add an interface declaration  for indices admin client. It allows to:

	Check if indices admin client exists;
	Exists indices admin client;
	Get types exists;
	Handle types exists;
	Prepare types exists;
	Get stats;
	Handle stats;
	Prepare stats;
	Get recoveries;
	Handle recoveries;
	Prepare recoveries;
	Get segments;
	Handle segments;
	Prepare segments;
	Get shard stores;
	Handle shard stores;
	Prepare shard stores;
	Create create index request;
	Create indices admin client;
	Delete delete index request;
	Delete indices admin client;
	Close indices admin client;
	Prepare indices admin client close;
	Handle open;
	Prepare open;
	Refresh refresh request;
	Refresh indices admin client;
	Handle flush;
	Prepare flush;
	Handle synced flush;
	Prepare synced flush;
	Merge force merge request;
	Prepare force merge;
	Upgrade upgrade request;
	Prepare upgrade status;
	Upgrade status;
	Prepare upgrade;
	Get mappings;
	Prepare get mappings;
	Get field mappings;
	Prepare get field mappings;
	Put mapping;
	Prepare put mapping;
	Get aliases;
	Handle aliases;
	Prepare aliases;
	Prepare get aliases;
	Prepare aliases exist;
	Get aliases exist;
	Handle aliases exist;
	Get index;
	Prepare get index;
	Handle clear cache;
	Prepare clear cache;
	Update settings;
	Prepare update settings;
	Analyze analyze request;
	Analyze indices admin client;
	Put template;
	Prepare put template;
	Delete template;
	Prepare delete template;
	Get templates;
	Prepare get templates;
	Validate query;
	Prepare validate query;
	Get settings;
	Prepare get settings;
	Prepare resize index;
	Resize index;
	Prepare rollover index;
	Get rollovers index;
	Handle rollover index

107.15. Add a class for indices client. It allows to:

	Instantiate indices client  with rest high level client;
	Delete delete index request;
	Delete async;
	Create create index request;
	Create async;
	Create org elasticsearch action admin indices create create index request;
	Put mapping;
	Put mapping async;
	Get mapping;
	Get mapping async;
	Get field mapping;
	Get field mapping async;
	Update aliases;
	Update aliases  async indices aliases request;
	Handle open;
	Handle open async;
	Close indices client;
	Close async;
	Check if indices client exists alias;
	Check if indices client exists alias async;
	Refresh refresh request;
	Refresh async;
	Handle flush;
	Handle flush async;
	Handle flush synced;
	Handle flush synced async;
	Get settings;
	Get settings  async get settings request;
	Get get index request;
	Get async;
	Get org elasticsearch action admin indices get get index request;
	Merge force merge request;
	Get forcemerge;
	Force merge async;
	Handle forcemerge async;
	Handle clear cache;
	Handle clear cache async;
	Check if indices client exists;
	Check if indices client exists async;
	Shrink resize request;
	Shrink async;
	Get split;
	Split async;
	Get rollover;
	Handle rollover async;
	Get  alias get aliases request;
	Get get aliases request alias async;
	Put settings;
	Put settings  async update settings request;
	Put template;
	Put template async;
	Validate query;
	Validate query async;
	Get template;
	Get index template;
	Get template async;
	Get index template async;
	Check if indices client exists template;
	Check if indices client exists template async;
	Analyze analyze request;
	Analyze async;
	Freeze freeze index request;
	Freeze async;
	Unfreeze unfreeze index request;
	Unfreeze async;
	Delete template;
	Delete template async

107.16. Add a class for indices client IT. It allows to:

	Handle test indices exists;
	Handle test indices exists with types;
	Handle test create index;
	Handle test create index with types;
	Handle test get settings;
	Handle test get settings non existent index;
	Handle test get settings from multiple indices;
	Handle test get settings filtered;
	Handle test get settings with defaults;
	Handle test get settings with defaults filtered;
	Handle test get index;
	Handle test get index with types;
	Handle test get index with defaults;
	Handle test get index non existent index;
	Handle test put mapping;
	Handle test put mapping with types;
	Handle test get mapping;
	Handle test get mapping with types;
	Handle test get field mapping;
	Handle test get field mapping with types;
	Handle test delete index;
	Handle test update aliases;
	Handle test aliases non existent index;
	Handle test open existing index;
	Handle test open non existent index;
	Handle test close existing index;
	Handle test close non existent index;
	Handle test refresh;
	Handle test flush;
	Handle test synced flush;
	Handle test clear cache;
	Handle test force merge;
	Handle test exists alias;
	Handle test shrink;
	Handle test split;
	Handle test rollover;
	Handle test rollover with types;
	Handle test get alias;
	Handle test get aliases non existent index or alias;
	Handle test index put settings;
	Get index settings  as map;
	Handle test index put setting non existent;
	Handle test put template with types;
	Handle test put template;
	Handle test put template with types using untyped API;
	Handle test put template with no types using typed api;
	Handle test put template bad requests;
	Handle test validate query;
	Handle test invalid validate query;
	Handle test CRUD index template with types;
	Handle test CRUD index template;
	Handle test index templates exist;
	Handle test analyze;
	Handle test freeze and unfreeze

107.17. Add a class for parent task assigning client. It allows to:

	Instantiate parent task assigning client  with in client, parent task id and parent task id;
	Instantiate parent task assigning client  with in client, local node, parent task and parent task;
	Get unwrap;
	Execute action

107.18. Add a class for parent task assigning client tests. It allows to:

	Handle test sets parent id;
	Execute action

107.19. Add a class for ping and info IT. It allows to:

	Handle test ping;
	Handle test info;
	Handle test X pack info;
	Handle test X pack info empty request

107.20. Add a class for rank eval IT. It allows to:

	Handle index documents;
	Handle test rank eval request;
	Create test evaluation spec;
	Handle test metrics;
	Create relevant

107.21. Add a class for request logger. It allows to:

	Instantiate request logger;
	Log response;
	Log failed request;
	Build warning message;
	Build trace request;
	Build trace response;
	Get uri

107.22. Add a class for request logger tests. It allows to:

	Handle test trace request;
	Handle test trace response;
	Handle test response warnings;
	Handle random http request

107.23. Add an object creator class for requests. It allows to:

	Get index request;
	Delete request;
	Handle bulk request;
	Get request;
	Search request;
	Get search scroll request;
	Get indices segments request;
	Get indices shard stores request;
	Get indices exists request;
	Create index request;
	Delete index request;
	Handle close index request;
	Handle open index request;
	Put mapping request;
	Get index aliases request;
	Refresh request;
	Handle flush request;
	Handle synced flush request;
	Force merge request;
	Upgrade request;
	Handle clear indices cache request;
	Update settings request;
	Get cluster state request;
	Get cluster reroute request;
	Get cluster update settings request;
	Get cluster health request;
	Get cluster search shards request;
	Get nodes info request;
	Get nodes stats request;
	Get nodes usage request;
	Get cluster stats request;
	Get list tasks request;
	Get task request;
	Cancel tasks request;
	Put repository request;
	Get repository request;
	Delete repository request;
	Verify repository request;
	Create snapshot request;
	Get snapshots request;
	Restore snapshot request;
	Delete snapshot request;
	Get snapshots status request

107.24. Add a class for response. It allows to:

	Instantiate response  with request line, http host, http response and http response;
	Get request line;
	Get host;
	Get status line;
	Get headers;
	Get header;
	Get entity;
	Get warnings;
	Check if response has warnings;
	Get http response;
	Convert response to string

107.25. Add a class for response exception. It allows to:

	Instantiate response exception  with response;
	Build message;
	Get response

107.26. Add a class for response exception tests. It allows to:

	Handle test response exception

107.27. Add an interface declaration  for response listener. It allows to:

	Process response listener response listener on success;
	Process response listener response listener on failure

107.28. Add a class for rest client builder test case. It allows to:

	Assert headers

107.29. Add a class for rest client builder tests. It allows to:

	Handle test build;
	Customize http client;
	Customize request config;
	Handle test set path prefix null;
	Handle test set path prefix empty;
	Handle test set path prefix malformed;
	Assert set path prefix throws;
	Handle test default connection request timeout;

107.30. Add a class for rest client multiple hosts tests. It allows to:

	Create rest client;
	Handle shutdown exec;
	Handle test round robin ok status codes;
	Handle test round robin no retry errors;
	Handle test round robin retry errors;
	Handle test node selector;
	Select rest client nodes iterable;
	Handle test set nodes;
	Handle random error retry endpoint;
	Handle hosts set

107.31. Add a class for rest client single host tests. It allows to:

	Create rest client;
	Handle mock http client;
	Answer invocation on mock;
	Call;
	Get response or exception;
	Handle shutdown exec;
	Handle test internal http request;
	Handle test ok status codes;
	Handle test error status codes;
	Handle test perform request IO exceptions;
	Handle test perform request runtime exceptions;
	Handle test perform request exceptions;
	Handle test body;
	Handle test headers;
	Handle test deprecation warnings;
	Get warnings handler;
	Handle warnings should fail request;
	Assert deprecation warnings;
	Get format warning;
	Perform random request;
	Perform request sync or async;
	Process  on success;
	Process  on failure;
	Assert exception stack contains calling method

107.32. Add a class for rest client test case. It allows to:

	Assert headers;
	Add value  to list entry

107.33. Add a class for rest client test util. It allows to:

	Instantiate rest client test util;
	Get http methods;
	Handle random http method;
	Handle random status code;
	Handle random ok status code;
	Handle random error no retry status code;
	Handle random error retry status code;
	Get ok status codes;
	Get all error status codes;
	Get all status codes;
	Handle random headers

107.34. Add a class for rest client tests. It allows to:

	Handle test close is idempotent;
	Handle test perform async with unsupported method;
	Process  on success;
	Process  on failure;
	Handle test perform async with wrong endpoint;
	Handle test build uri leaves path untouched;
	Handle test set nodes wrong arguments;
	Handle test set nodes preserves ordering;
	Handle random nodes;
	Handle test set nodes duplicated hosts;
	Handle test select hosts;
	Select nodes iterable;
	Convert to string;
	Assert select living hosts;
	Assert select all rejected;
	Create rest client;
	Handle test round robin;
	Assert nodes

107.35. Add a class for rest high level client. It allows to:

	Instantiate rest high level client  with rest client builder;
	Instantiate rest high level client  with rest client builder, named X content entries list and named X content entries list;
	Instantiate rest high level client  with rest client, do close checked consumer, named X content entries list and named X content entries list;
	Get low level client;
	Close rest high level client;
	Get indices;
	Get cluster;
	Ingest rest high level client;
	Get snapshot;
	Get rollup;
	Get ccr;
	Get tasks;
	Get xpack;
	Get watcher;
	Get graph;
	Get license;
	Get index lifecycle;
	Get migration;
	Get machine learning;
	Get security;
	Get data frame;
	Get bulk;
	Handle bulk async;
	Get reindex;
	Submit reindex task;
	Handle reindex async;
	Update update by query request by query;
	Update update by query request by query async;
	Delete delete by query request by query;
	Delete delete by query request by query async;
	Delete rethrottle request by query rethrottle;
	Delete rethrottle request by query rethrottle async;
	Update rethrottle request by query rethrottle;
	Update rethrottle request by query rethrottle async;
	Handle reindex rethrottle;
	Handle reindex rethrottle async;
	Handle ping;
	Info request options;
	Get get request;
	Get async;
	Get multi get;
	Get mget;
	Handle multi get async;
	Mget async;
	Check if rest high level client exists;
	Check if rest high level client exists async;
	Check if rest high level client exists source;
	Check if rest high level client exists source async;
	Get index;
	Handle index async;
	Get count;
	Count async;
	Update update request;
	Update async;
	Delete delete request;
	Delete async;
	Get search;
	Search async;
	Get multi search;
	Get msearch;
	Handle multi search async;
	Handle msearch async;
	Search scroll;
	Get scroll;
	Handle search scroll async;
	Scroll async;
	Handle clear scroll;
	Handle clear scroll async;
	Search template;
	Handle search template async;
	Explain explain request;
	Explain async;
	Get termvectors;
	Handle termvectors async;
	Get mtermvectors;
	Handle mtermvectors async;
	Rank eval;
	Handle msearch template;
	Handle msearch template async;
	Rank eval async;
	Get field caps;
	Get script;
	Get script async;
	Delete script;
	Delete script async;
	Put script;
	Put script async;
	Handle field caps async;
	Perform request and parse entity;
	Perform request;
	Handle internal perform request;
	Perform request and parse optional entity;
	Perform request async and parse entity;
	Perform request async;
	Handle internal perform request async;
	Wrap response listener;
	Process  on success;
	Process  on failure;
	Perform request async and parse optional entity;
	Wrap response listener 404 s optional;
	Parse response exception;
	Parse entity;
	Convert exists response;
	Get used deprecated name;
	Get used deprecated field;
	Get default named X contents;
	Get provided named X contents

107.36. Add a class for search IT. It allows to:

	Handle index documents;
	Handle test search no query;
	Handle test search match query;
	Handle test search with terms agg;
	Handle test search with composite agg;
	Handle test search with range agg;
	Handle test search with terms and range agg;
	Handle test search with terms and weighted avg;
	Handle test search with matrix stats;
	Handle test search with parent join;
	Handle test search with suggest;
	Handle test search with weird script fields;
	Handle test search scroll;
	Handle test multi search;
	Handle test multi search with agg;
	Handle test multi search with query;
	Handle test multi search failure;
	Handle test search template;
	Handle test non existent search template;
	Handle test render search template;
	Handle test multi search template;
	Handle test multi search template all bad;
	Handle test explain;
	Handle test explain non existent;
	Handle test explain with stored fields;
	Handle test explain with fetch source;
	Handle test explain with alias filter;
	Handle test field caps;
	Handle test field caps with non existent fields;
	Handle test field caps with non existent indices;
	Assert search header;
	Handle test count one index no query;
	Handle test count multiple indices no query;
	Handle test count all indices no query;
	Handle test count one index match query;
	Handle test count multiple indices match query using constructor;
	Handle test count multiple indices match query;
	Handle test count all indices match query;
	Assert count header

108. Changes to package org.elasticsearch.client.benchmark:  

108.1. Add a class for abstract benchmark. It allows to:

	Get client;
	Handle bulk request executor;
	Search request executor;
	Run abstract benchmark;
	Run bulk index benchmark;
	Run search benchmark;
	Run trials;
	Run gc;
	Get total gc count

108.2. Add a class for benchmark main. It allows to:

	Handle main

108.3. Add a class for benchmark runner. It allows to:

	Instantiate benchmark runner  with benchmark task;
	Run benchmark runner;
	Get repeat

108.4. Add an interface declaration  for benchmark task. It allows to:

	Set sample recorder;
	Run benchmark task;
	Tear benchmark task

109. Changes to package org.elasticsearch.client.benchmark.metrics:  

109.1. Add a class for metrics. It allows to:

	Instantiate metrics

109.2. Add a class for metrics calculator. It allows to:

	Calculate samples collection;
	Get group by operation;
	Calculate metrics  per operation;
	Calculate throughput

109.3. Add a class for sample. It allows to:

	Instantiate sample;
	Get operation;
	Check if sample is success;
	Get start timestamp;
	Get stop timestamp;
	Get service time;
	Get latency

109.4. Add a class for sample recorder. It allows to:

	Instantiate sample recorder;
	Add sample;
	Get samples

110. Changes to package org.elasticsearch.client.benchmark.ops.bulk:  

110.1. Add an interface declaration  for bulk request executor. It allows to:

	Handle bulk index

111. Changes to package org.elasticsearch.client.benchmark.ops.search:  

111.1. Add a class for search benchmark task. It allows to:

	Instantiate search benchmark task  with search request executor;
	Set sample recorder;
	Run search benchmark task;
	Run iterations;
	Tear search benchmark task

111.2. Add an interface declaration  for search request executor. It allows to:

	Handle search

112. Changes to package org.elasticsearch.client.documentation:  

112.1. Add a class for cRUD documentation IT. It allows to:

	Handle test index;
	Process  on response;
	Process  on failure;
	Handle test update;
	Handle test delete;
	Handle test bulk;
	Handle test reindex;
	Handle test reindex rethrottle;
	Handle test update by query;
	Handle test delete by query;
	Handle test get;
	Handle test exists;
	Handle test bulk processor;
	Process  before bulk;
	Process  after bulk;
	Handle test term vectors;
	Handle test multi term vectors;
	Handle test multi get;
	Get unwrap and assert example

112.2. Add a class for cluster client documentation IT. It allows to:

	Handle test cluster put settings;
	Handle test cluster update settings async;
	Process  on response;
	Process  on failure;
	Handle test cluster get settings;
	Handle test cluster get settings async;
	Handle test cluster health;
	Handle test cluster health async;

112.3. Add a class for indices client documentation IT. It allows to:

	Handle test indices exist;
	Handle test indices exist async;
	Process  on response;
	Process  on failure;
	Handle test delete index;
	Handle test delete index async;
	Handle test create index;
	Handle test create index async;
	Handle test put mapping;
	Handle test put mapping async;
	Handle test get mapping;
	Handle test get mapping async;
	Handle test get field mapping;
	Handle test open index;
	Handle test refresh index;
	Handle test flush index;
	Handle test synced flush index;
	Handle test get settings;
	Handle test get settings with defaults;
	Handle test get index;
	Handle test force merge index;
	Handle test clear cache;
	Handle test close index;
	Handle test exists alias;
	Handle test update aliases;
	Handle test shrink index;
	Handle test split index;
	Handle test rollover index;
	Handle test get alias;
	Handle test index put settings;
	Handle test put template;
	Handle test get templates;
	Handle test templates exist;
	Handle test validate query;
	Handle test analyze;
	Handle test freeze index;
	Handle test unfreeze index;
	Handle test delete template;

112.4. Add a class for indices documentation IT. It allows to:

	Handle test put mapping documentation

112.5. Add a class for migration documentation IT. It allows to:

	Handle test cluster health;
	Handle test requests;
	Process  on response;
	Process  on failure

112.6. Add a class for miscellaneous documentation IT. It allows to:

	Handle test main;
	Handle test ping;
	Handle test X pack info;
	Process  on response;
	Process  on failure;
	Handle test X pack usage;
	Handle test initialization from client builder

112.7. Add a class for query DSL documentation tests. It allows to:

	Handle test bool;
	Handle test boosting;
	Handle test common terms;
	Handle test constant score;
	Handle test dis max;
	Handle test exists;
	Handle test function score;
	Handle test fuzzy;
	Handle test geo bounding box;
	Handle test geo distance;
	Handle test geo polygon;
	Handle test geo shape;
	Handle test has child;
	Handle test has parent;
	Handle test ids;
	Handle test match all;
	Handle test match;
	Test more  like this;
	Handle test multi match;
	Handle test nested;
	Handle test prefix;
	Handle test query string;
	Handle test range;
	Handle test reg exp;
	Handle test script;
	Handle test simple query string;
	Handle test span containing;
	Handle test span first;
	Handle test span multi term;
	Handle test span near;
	Handle test span not;
	Handle test span or;
	Handle test span term;
	Handle test span within;
	Handle test term;
	Handle test terms;
	Handle test type;
	Handle test wildcard;
	Handle test wrapper

112.8. Add a class for rest client documentation. It allows to:

	Handle usage;
	Select nodes iterable;
	Process  on failure;
	Customize request config;
	Customize http client;
	Process  on success;
	Handle common configuration;

112.9. Add a class for search documentation IT. It allows to:

	Handle test search;
	Process  on response;
	Process  on failure;
	Handle test building search queries;
	Handle test search request aggregations;
	Handle test search request suggestions;
	Handle test search request highlighting;
	Handle test search request profiling;
	Handle test scroll;
	Handle test search template with inline script;
	Handle test search template with stored script;
	Handle test multi search template with inline script;
	Handle test multi search template with stored script;
	Register query script;
	Handle test explain;
	Handle test field caps;
	Handle test rank eval;
	Handle test multi search;
	Handle index search test data;
	Handle test count;
	Handle index count test data

113. Changes to package org.elasticsearch.client.node:  

113.1. Add a class for node client. It allows to:

	Instantiate node client  with settings, thread pool and thread pool;
	Initialize actions map;
	Close node client;
	Execute action;
	Execute  locally action;
	Get local node id;
	Transport action;
	Get remote cluster client

113.2. Add a class for node client IT. It allows to:

	Handle node settings;
	Handle test that client type setting can not be changed

114. Changes to package org.elasticsearch.client.sniff:  

114.1. Add a class for sniff on failure listener. It allows to:

	Instantiate sniff on failure listener;
	Set sniffer;
	Process sniff on failure listener sniff on failure listener on failure

114.2. Add a class for sniff on failure listener tests. It allows to:

	Handle test set sniffer

114.3. Add a class for sniffer builder. It allows to:

	Instantiate sniffer builder  with rest client;
	Set sniff interval millis;
	Set sniff  after failure delay millis;
	Set nodes sniffer;
	Build sniffer builder

114.4. Add a class for sniffer builder tests. It allows to:

	Handle test build

115. Changes to package org.elasticsearch.client.sniff.documentation:  

115.1. Add a class for sniffer documentation. It allows to:

	Handle usage;
	Sniff

116. Changes to package org.elasticsearch.client.transport:  

116.1. Add a class for fail and retry mock transport. It allows to:

	Instantiate fail and retry mock transport  with random, cluster name and cluster name;
	Get mock cluster state;
	Handle open connection;
	Get node;
	Send request;
	Handle new response;
	End connect mode;
	Connect transport exceptions;
	Get failures;
	Get successes;
	Get tried nodes;
	Get bound address;
	Get addresses from string;
	Get lifecycle state;
	Add lifecycle listener;
	Remove lifecycle listener;
	Start fail and retry mock transport;
	Stop fail and retry mock transport;
	Close fail and retry mock transport;
	Profile bound addresses;
	Get stats;
	Register request handler;
	Get response handlers;
	Get request handler;
	Set message listener

116.2. Add a class for no node available exception. It allows to:

	Instantiate no node available exception;
	Instantiate no node available exception  with throwable;
	Instantiate no node available exception  with stream input;
	Get status

116.3. Add a class for node disconnect IT. It allows to:

	Handle test notify on disconnect;
	Handle test notify on disconnect in sniffer

116.4. Add a class for transport client IT. It allows to:

	Handle test picking up changes in discovery node;
	Handle test node version is updated;
	Handle test that transport client setting is set;
	Handle test that transport client setting can not be changed

116.5. Add a class for transport client retry IT. It allows to:

	Handle test retry

116.6. Add a class for transport proxy client. It allows to:

	Instantiate transport proxy client  with settings, transport service, transport client nodes service, actions list and actions list;
	Execute action

117. Changes to package org.elasticsearch.cloud.azure.classic:  

117.1. Add a class for azure service disable exception. It allows to:

	Instantiate azure service disable exception;
	Instantiate azure service disable exception  with cause throwable

117.2. Add a class for azure service remote exception. It allows to:

	Instantiate azure service remote exception;
	Instantiate azure service remote exception  with cause throwable

118. Changes to package org.elasticsearch.cloud.azure.classic.management:  

118.1. Add a class for azure compute service impl. It allows to:

	Instantiate azure compute service impl  with settings;
	Get required setting;
	Get service details;
	Start azure compute service impl;
	Stop azure compute service impl;
	Do azure compute service impl close

119. Changes to package org.elasticsearch.cloud.gce:  

119.1. Add an interface declaration  for gce instances service. It allows to:

	Get instances;
	Get project id;
	Get zones

119.2. Add a class for gce instances service impl. It allows to:

	Get instances;
	Instantiate gce instances service impl  with settings;
	Resolve project;
	Resolve zones;
	Get app engine value  from metadata server;
	Handle header contains metadata flavor;
	Get gce http transport;
	Get client;
	Get project id;
	Get zones;
	Close gce instances service impl

119.3. Add a class for gce metadata service. It allows to:

	Instantiate gce metadata service  with settings;
	Get gce http transport;
	Get metadata;
	Start gce metadata service;
	Stop gce metadata service;
	Do gce metadata service close

119.4. Add a class for gce module. It allows to:

	Instantiate gce module  with settings;
	Get compute service impl;
	Configure gce module

120. Changes to package org.elasticsearch.cloud.gce.network:  

120.1. Add a class for gce name resolver. It allows to:

	Get gce address resolver type;
	Instantiate gce name resolver  with gce metadata service;
	Resolve gce name resolver;
	Resolve default;
	Resolve gce name resolver if possible

121. Changes to package org.elasticsearch.cloud.gce.util:  

121.1. Add a class for access. It allows to:

	Instantiate access;
	Do privileged;
	Do privileged void;
	Do privileged IO exception

122. Changes to package org.elasticsearch.cluster:  

122.1. Add an interface declaration  for acked cluster state task listener. It allows to:

	Ack discovery node;
	Handle on all nodes acked;
	Process acked cluster state task listener acked cluster state task listener on ack timeout;
	Get ack timeout

122.2. Add a class for acked cluster state update task. It allows to:

	Instantiate acked cluster state update task  with acked request, action listener and action listener;
	Instantiate acked cluster state update task  with priority, acked request, action listener and action listener;
	Ack discovery node;
	Handle on all nodes acked;
	Handle new response;
	Process acked cluster state update task acked cluster state update task on ack timeout;
	Process acked cluster state update task acked cluster state update task on failure;
	Get ack timeout;
	Get timeout

122.3. Add a class for cluster changed event. It allows to:

	Instantiate cluster changed event  with cluster state, previous state and previous state;
	Get source;
	Get state;
	Handle previous state;
	Routing table changed;
	Handle index routing table changed;
	Handle indices created;
	Handle indices deleted;
	Handle meta data changed;
	Get changed custom meta data set;
	Handle index meta data changed;
	Handle blocks changed;
	Handle local node master;
	Get nodes delta;
	Handle nodes removed;
	Handle nodes added;
	Handle nodes changed;
	Check if cluster changed event is new cluster;
	Get indices deleted from cluster state;
	Get indices deleted from tombstones

122.4. Add a class for cluster health IT. It allows to:

	Handle test simple local health;
	Handle test health;
	Handle test health with closed indices;
	Handle test health on index creation;
	Run

122.5. Add a class for cluster info. It allows to:

	Instantiate cluster info;
	Instantiate cluster info  with least available space usage immutable open map, most available space usage immutable open map, shard sizes immutable open map, routing to data path immutable open map and routing to data path immutable open map;
	Instantiate cluster info  with stream input;
	Write  to stream output;
	Convert cluster info to X content;
	Get cluster info node least available disk usages;
	Get node  most available disk usages;
	Get shard size;
	Get data path;
	Shard identifier  from routing

122.6. Add an interface declaration  for cluster info service. It allows to:

	Get cluster info

122.7. Add a class for cluster info tests. It allows to:

	Handle test serialization;
	Handle random disk usage;
	Handle random shard sizes;
	Handle random routing to data path

122.8. Add a class for cluster module. It allows to:

	Instantiate cluster module  with settings, cluster service, cluster plugins list, cluster info service and cluster info service;
	Get named writeables;
	Get filter customs for pre 63 clients;
	Get named X writeables;
	Register cluster custom;
	Register meta data custom;
	Register custom;
	Get index name expression resolver;
	Create allocation deciders;
	Add allocation decider;
	Create shards  allocator settings;
	Get allocation service;
	Configure cluster module

122.9. Add a class for cluster name. It allows to:

	Instantiate cluster name  with stream input;
	Instantiate cluster name;
	Get value;
	Write  to stream output;
	Check if cluster name equals;
	Hash code;
	Convert cluster name to string

122.10. Add an interface declaration  for cluster state applier. It allows to:

	Apply cluster state

122.11. Add an interface declaration  for cluster state listener. It allows to:

	Handle cluster changed

122.12. Add an interface declaration  for cluster state task listener. It allows to:

	Process cluster state task listener cluster state task listener on failure;
	Process cluster state task listener cluster state task listener on no longer master;
	Handle cluster state processed

122.13. Add a class for cluster state tests. It allows to:

	Handle test supersedes

122.14. Add a class for cluster state update task. It allows to:

	Instantiate cluster state update task;
	Instantiate cluster state update task  with priority;
	Execute current state;
	Describe tasks;
	Process cluster state update task cluster state update task on failure;
	Handle cluster state published;
	Get timeout;
	Get priority;
	Run cluster state update task only on master

122.15. Add an interface declaration  for diff. It allows to:

	Apply part

122.16. Add an interface declaration  for diffable. It allows to:

	Get diff

122.17. Add a class for disk usage. It allows to:

	Instantiate disk usage;
	Instantiate disk usage  with stream input;
	Write  to stream output;
	Truncate percent;
	Convert disk usage to short X content;
	Convert disk usage to X content;
	Get node id;
	Get node name;
	Get path;
	Get free disk  as percentage;
	Get used disk  as percentage;
	Get free bytes;
	Get total bytes;
	Get used bytes;
	Check if disk usage equals;
	Hash code;
	Convert disk usage to string

122.18. Add a class for disk usage tests. It allows to:

	Handle test disk usage calc;
	Handle test random disk usage;
	Handle test fill shard level info;
	Handle test fill disk usage;
	Handle test fill disk usage some invalid values;
	Assert disk usage

122.19. Add a class for empty cluster info service. It allows to:

	Get cluster info

122.20. Add a class for incompatible cluster state version exception. It allows to:

	Instantiate incompatible cluster state version exception;
	Instantiate incompatible cluster state version exception  with stream input

122.21. Add a class for local cluster update task. It allows to:

	Instantiate local cluster update task;
	Instantiate local cluster update task  with priority;
	Execute current state;
	Handle unchanged;
	Describe tasks;
	Get timeout;
	Get priority;
	Run local cluster update task only on master

122.22. Add an interface declaration  for local node master listener. It allows to:

	Process local node master listener local node master listener on master;
	Off master;
	Executor name

122.23. Add a class for master node change predicate. It allows to:

	Instantiate master node change predicate;
	Build current state

122.24. Add an interface declaration  for mergable custom meta data. It allows to:

	Merge other

122.25. Add a class for minimum master nodes IT. It allows to:

	Handle node plugins;
	Test two nodes no master block;
	Handle test three nodes no master block;
	Handle test can not commit state three nodes;
	Handle cluster state processed;
	Execute current state;
	Process  on failure

122.26. Add an interface declaration  for named diff. It allows to:

	Get minimal supported version

122.27. Add an interface declaration  for named diffable

122.28. Add a class for named diffable value serializer. It allows to:

	Instantiate named diffable value serializer  with t class;
	Read stream input;
	Handle supports version;
	Read diff

122.29. Add a class for no master node IT. It allows to:

	Get number of replicas;
	Handle node plugins;
	Handle test no master actions;
	Check update action;
	Check write action;
	Handle test no master actions write master block

122.30. Add a class for not master exception. It allows to:

	Instantiate not master exception;
	Instantiate not master exception  with stream input;
	Fill not master exception in stack trace

122.31. Add a class for simple data nodes IT. It allows to:

	Handle test data nodes;
	Get source

122.32. Add a class for snapshots in progress tests. It allows to:

	Handle test waiting indices;
	Handle random non waiting state

122.33. Add a class for specific master nodes IT. It allows to:

	Handle test simple only master node election;
	Handle test elect only between master nodes;
	Handle test alias filter validation

122.34. Add an interface declaration  for timeout cluster state listener. It allows to:

	Added timeout cluster state listener;
	Process timeout cluster state listener timeout cluster state listener on close;
	Process timeout cluster state listener timeout cluster state listener on timeout

122.35. Add a class for update settings validation IT. It allows to:

	Handle test update settings validation

123. Changes to package org.elasticsearch.cluster.ack:  

123.1. Add an interface declaration  for acked request. It allows to:

	Get ack timeout;
	Get master node timeout

123.2. Add a class for cluster state update request. It allows to:

	Get ack timeout;
	Get master node timeout;

123.3. Add a class for cluster state update response. It allows to:

	Instantiate cluster state update response;
	Check if cluster state update response is acknowledged

123.4. Add a class for create index cluster state update response. It allows to:

	Instantiate create index cluster state update response;
	Check if create index cluster state update response is shards acknowledged

123.5. Add a class for indices cluster state update request. It allows to:

	Get indices;

123.6. Add a class for open index cluster state update response. It allows to:

	Instantiate open index cluster state update response;
	Check if open index cluster state update response is shards acknowledged

124. Changes to package org.elasticsearch.cluster.action.index:  

124.1. Add a class for mapping updated action. It allows to:

	Instantiate mapping updated action  with settings, cluster settings and cluster settings;
	Set dynamic mapping update timeout;
	Set client;
	Update mapping  on master;
	Process  on response;
	Process  on failure;
	Handle unwrap exception

125. Changes to package org.elasticsearch.cluster.action.shard:  

125.1. Add a class for shard failed cluster state task executor tests. It allows to:

	Set shard failed cluster state task executor tests;
	Handle test empty task list produces same cluster state;
	Handle test duplicate failures are okay;
	Handle test non existent shards are marked as successful;
	Handle test trivially successful tasks batched with failing tasks;
	Apply failed shards;
	Handle test illegal shard failure requests;
	Handle test mark as stale when failing shard;
	Create cluster state  with started shards;
	Create existing shards;
	Create non existent shards;
	Non existent shard routing;
	Assert tasks successful;
	Assert task results;
	Convert shard failed cluster state task executor tests to tasks

126. Changes to package org.elasticsearch.cluster.allocation:  

126.1. Add a class for awareness allocation IT. It allows to:

	Get number of replicas;
	Handle test simple awareness;
	Handle test awareness zones;
	Handle test awareness zones incremental nodes

126.2. Add a class for cluster reroute IT. It allows to:

	Handle test reroute with commands disable allocation settings;
	Handle test reroute with commands enable allocation settings;
	Reroute common settings with commands;
	Handle test reroute with allocate local gateway disable allocation settings;
	Handle test reroute with allocate local gateway enable allocation settings;
	Handle test delay with A large amount of shards;
	Reroute common settings with allocate local gateway;
	Handle test reroute explain;
	Handle test message logging;
	Handle test cluster reroute with blocks

126.3. Add a class for filtering allocation IT. It allows to:

	Handle test decommission node no replicas;
	Handle test disabling allocation filtering;
	Handle test invalid IP filter cluster settings;
	Handle test transient settings still applied

126.4. Add a class for simple allocation IT. It allows to:

	Get number of shards;
	Get number of replicas;
	Handle test sane allocation

127. Changes to package org.elasticsearch.cluster.block:  

127.1. Add a class for cluster block. It allows to:

	Instantiate cluster block  with stream input;
	Instantiate cluster block  with rest status, levels enum set and levels enum set;
	I cluster block;
	Handle uuid;
	Get description;
	Get status;
	Get levels;
	Check if cluster block contains;
	Handle retryable;
	Disable state persistence;
	Convert cluster block to X content;
	Read  from stream input;
	Write  to stream output;
	Convert cluster block to string;
	Check if cluster block equals;
	Hash code;
	Check if cluster block is allow release resources

127.2. Add a class for cluster block exception. It allows to:

	Instantiate cluster block exception  with blocks set;
	Instantiate cluster block exception  with stream input;
	Write  to stream output;
	Handle retryable;
	Get blocks;
	Build message;
	Get status

127.3. Add a class for cluster block tests. It allows to:

	Handle test serialization;
	Handle test bwc serialization;
	Convert test;
	Handle test global blocks checked if no indices specified;
	Handle test remove index block with id;
	Handle test get index block with id;
	Handle random cluster block;
	Assert cluster block equals

128. Changes to package org.elasticsearch.cluster.health:  

128.1. Add a class for cluster index health. It allows to:

	Instantiate cluster index health  with index meta data, index routing table and index routing table;
	Instantiate cluster index health  with stream input;
	Instantiate cluster index health  with cluster health status, shards map and shards map;
	Get index;
	Get number  of shards;
	Get number  of replicas;
	Get active shards;
	Get relocating shards;
	Get active primary shards;
	Get initializing shards;
	Get unassigned shards;
	Get status;
	Get shards;
	Get iterator;
	Write  to stream output;
	Convert cluster index health to X content;
	Handle inner from X content;
	Process cluster index health cluster index health from X content;
	Convert cluster index health to string;
	Check if cluster index health equals;
	Hash code

128.2. Add a class for cluster index health tests. It allows to:

	Handle test cluster index health;
	Assert index health;
	Create test instance;
	Handle random index health;
	Get instance reader;
	Do parse instance;
	Get cluster index health tests to X content params;
	Handle supports unknown fields;
	Get random fields exclude filter;
	Mutate instance

128.3. Add a class for cluster shard health. It allows to:

	Instantiate cluster shard health  with index shard routing table;
	Instantiate cluster shard health  with stream input;
	Instantiate cluster shard health  with cluster health status;
	Get shard id;
	Get status;
	Get relocating shards;
	Get active shards;
	Check if cluster shard health is primary active;
	Get initializing shards;
	Get unassigned shards;
	Write  to stream output;
	Get inactive primary health;
	Convert cluster shard health to X content;
	Handle inner from X content;
	Process cluster shard health cluster shard health from X content;
	Convert cluster shard health to string;
	Check if cluster shard health equals;
	Hash code

128.4. Add a class for cluster state health. It allows to:

	Instantiate cluster state health  with cluster state;
	Instantiate cluster state health  with stream input;
	Instantiate cluster state health  with cluster health status, indices map and indices map;
	Get active shards;
	Get relocating shards;
	Get active primary shards;
	Get initializing shards;
	Get unassigned shards;
	Get number  of nodes;
	Get number  of data nodes;
	Get status;
	Get indices;
	Get active shards percent;
	Get iterator;
	Write  to stream output;
	Convert cluster state health to string;
	Check if cluster state health equals;
	Hash code

128.5. Add a class for cluster state health tests. It allows to:

	Handle setup thread pool;
	Set cluster state health tests;
	Tear cluster state health tests;
	Terminate thread pool;
	Handle test cluster health waits for cluster state application;
	Handle test cluster health;
	Handle test cluster health on index creation;
	Handle test cluster health on index creation with failed allocations;
	Handle test cluster health on cluster recovery;
	Handle test cluster health on cluster recovery with failures;
	Handle test cluster health on cluster recovery with previous allocation ids;
	Handle test cluster health on cluster recovery with previous allocation ids and allocation failures;
	Serialize serialize;
	Simulate index creation states;
	Simulate cluster recovery states;
	Generate cluster states;
	Handle primary inactive due to recovery;
	Assert cluster health

129. Changes to package org.elasticsearch.cluster.metadata:  

129.1. Add a class for alias meta data tests. It allows to:

	Handle test serialization;
	Assert equal instances;
	Create test instance;
	Get random fields exclude filter;
	Do parse instance;
	Handle supports unknown fields;
	Create test item

129.2. Add a class for alias validator. It allows to:

	Validate  alias alias;
	Validate alias meta data alias meta data;
	Validate alias standalone;
	Validate  alias index lookup function;
	Validate alias filter;

129.3. Add a class for alias validator tests. It allows to:

	Handle test validates alias names

129.4. Add a class for auto expand replicas. It allows to:

	Parse auto expand replicas;
	Instantiate auto expand replicas;
	Get min replicas;
	Get auto expand replicas;
	Get desired number  of replicas;
	Convert auto expand replicas to string;
	Get auto expand replica changes

129.5. Add a class for auto expand replicas tests. It allows to:

	Handle test parse settings;
	Handle test invalid values;
	Create node;
	Handle test auto expand when node leaves and possibly rejoins

129.6. Add a class for cluster name expression resolver tests. It allows to:

	Handle test exact match;
	Handle test no wild card no match;
	Handle test wild card no match;
	Handle test simple wild card;
	Handle test suffix wild card;
	Handle test prefix wild card;
	Handle test middle wild card

129.7. Add a class for date math expression resolver tests. It allows to:

	Handle test normal;
	Handle test expression;
	Handle test empty;
	Handle test expression static;
	Handle test expression multi parts;
	Handle test expression custom format;
	Handle test expression escape static;
	Handle test expression escape date format;
	Handle test expression mixed array;
	Handle test expression custom time zone in index name;
	Handle test expression invalid unescaped;
	Handle test expression invalid date math format;
	Handle test expression invalid empty date math format;
	Handle test expression invalid open ended

129.8. Add a class for evil system property tests. It allows to:

	Handle test max num shards

129.9. Add a class for human readable index settings tests. It allows to:

	Handle test human readable settings

129.10. Add a class for index graveyard tests. It allows to:

	Handle test equals;
	Handle test serialization;
	Handle test X content;
	Handle test add tombstones;
	Handle test purge;
	Handle test diffs;
	Handle test contains;
	Create random;
	Execute purge test  with max tombstones;
	Create index graveyard tests with deletions;
	Get settings with max tombstones

129.11. Add a class for index meta data tests. It allows to:

	Set index meta data tests;
	Handle writable registry;
	X content registry;
	Handle test index meta data serialization;
	Handle test get routing factor;
	Handle test select shrink shards;
	Handle test select resize shards;
	Handle test select split shard;
	Handle test index format;
	Test number  of routing shards;
	Handle test mapping or default

129.12. Add a class for index name expression resolver tests. It allows to:

	Get index name expression resolver;
	Set index name expression resolver tests;
	Handle test index options strict;
	Handle test index options lenient;
	Handle test index options allow unavailable disallow empty;
	Handle test index options wildcard expansion;
	Handle test index options no expand wildcards;
	Handle test index options single index no expand wildcards;
	Handle test index options empty cluster;
	Get index builder;
	Get settings;
	Handle test concrete indices ignore indices one missing index;
	Handle test concrete indices ignore indices one missing index other found;
	Handle test concrete indices ignore indices all missing;
	Handle test concrete indices ignore indices empty request;
	Handle test concrete indices no indices error message;
	Handle test concrete indices no indices error message no expand;
	Handle test concrete indices wildcard expansion;
	Handle test concrete indices wildcard with negation;
	Handle test concrete indices wildcard and aliases;
	Handle test concrete indices all pattern random;
	Handle test concrete indices wildcard no match;
	Handle test is all indices null;
	Handle test is all indices empty;
	Handle test is all indices explicit all;
	Handle test is all indices explicit all plus other;
	Handle test is all indices normal indexes;
	Handle test is all indices wildcard;
	Handle test is explicit all indices null;
	Handle test is explicit all indices empty;
	Handle test is explicit all indices explicit all;
	Handle test is explicit all indices explicit all plus other;
	Handle test is explicit all indices normal indexes;
	Handle test is explicit all indices wildcard;
	Handle test is pattern matching all indices explicit list;
	Handle test is pattern matching all indices only wildcard;
	Handle test is pattern matching all indices matching trailing wildcard;
	Handle test is pattern matching all indices non matching trailing wildcard;
	Handle test is pattern matching all indices matching single exclusion;
	Handle test is pattern matching all indices non matching single exclusion;
	Handle test is pattern matching all indices matching trailing wildcard and exclusion;
	Handle test is pattern matching all indices non matching trailing wildcard and exclusion;
	Handle test index options fail closed indices and aliases;
	Handle test dedup concrete indices;
	Handle meta data builder;
	Handle test filter closed indices on aliases;
	Handle test resolve expressions;
	Handle test filtering aliases;
	Handle test index aliases;
	Handle test index aliases skip identity;
	Handle test concrete write index successful;
	Get indices;
	Get indices options;
	Handle test concrete write index with invalid indices request;
	Handle test concrete write index with wildcard expansion;
	Handle test concrete write index with no write index with single index;
	Handle test concrete write index with no write index with multiple indices;
	Handle test alias resolution not allowing multiple indices;
	Handle test delete index ignores aliases;
	Handle test indices aliases request ignores aliases;
	Handle test invalid index;
	Handle test ignore throttled

129.13. Add a class for index template meta data tests. It allows to:

	Handle test index template meta data X content round trip;
	Handle test validate invalid index patterns;
	Handle test parse template with aliases;
	Convert test from

129.14. Add a class for meta data create index service tests. It allows to:

	Create cluster state;
	Check if meta data create index service tests is shrinkable;
	Check if meta data create index service tests is splitable;
	Test number  of shards;
	Handle test validate shrink index;
	Handle test validate split index;
	Handle test prepare resize index settings;
	Handle test prepare resize index settings copy settings;
	Handle test prepare resize index settings analysis settings;
	Handle test prepare resize index settings similarity settings;
	Handle test do not override soft deletes setting on resize;
	Run prepare resize index settings test;
	Handle new node;
	Handle test validate index name;
	Validate index name;
	Handle test calculate num routing shards;
	Handle test shard limit

129.15. Add a class for meta data delete index service. It allows to:

	Instantiate meta data delete index service  with settings, cluster service, allocation service and allocation service;
	Delete indices;
	Handle new response;
	Execute current state;

129.16. Add a class for meta data delete index service tests. It allows to:

	Handle test delete missing;
	Handle test delete snapshotting;
	Handle test delete unassigned;
	Get cluster state

129.17. Add a class for meta data index aliases service. It allows to:

	Instantiate meta data index aliases service  with cluster service, indices service, alias validator, meta data delete index service, named X content registry and named X content registry;
	Handle indices aliases;
	Handle new response;
	Execute current state;
	Handle inner execute

129.18. Add a class for meta data index aliases service tests. It allows to:

	Instantiate meta data index aliases service tests;
	Handle test add and remove;
	Handle test swap index with alias;
	Convert test add alias;
	Handle test remove index twice;
	Handle test add write only with no existing aliases;
	Handle test add write only with existing write index;
	Handle test swap write only index;
	Handle test add write only with existing non write indices;
	Handle test add write only with index removed;
	Handle test add write only validates against meta data builder;
	Create index

129.19. Add a class for meta data index upgrade service. It allows to:

	Instantiate meta data index upgrade service  with settings, named X content registry, mapper registry, index scoped settings, index meta data upgraders collection and index meta data upgraders collection;
	Handle upgrade index meta data;
	Check if meta data index upgrade service is upgraded;
	Check supported version;
	Check if meta data index upgrade service is supported version;
	Check mappings compatibility;
	Handle mark as upgraded;
	Get archive broken index settings

129.20. Add a class for meta data index upgrade service tests. It allows to:

	Handle test archive broken index settings;
	Handle test upgrade;
	Handle test is upgraded;
	Handle test fail upgrade;
	Handle test plugin upgrade;
	Handle test plugin upgrade failure;
	Handle new index meta

129.21. Add a class for meta data mapping service tests. It allows to:

	Get plugins;
	Handle test mapping cluster state update doesnt change existing indices;
	Handle test cluster state is not changed with identical mappings;
	Handle test mapping version;
	Handle test mapping version unchanged;
	Handle test mapping update accepts doc as type

129.22. Add a class for meta data tests. It allows to:

	Handle test find aliases;
	Handle test find alias with exclusion;
	Handle test find alias with exclusion and override;
	Handle test index and alias with same name;
	Handle test alias colliding with an existing index;
	Handle test validate alias write only;
	Handle test resolve index routing;
	Handle test resolve write index routing;
	Handle test unknown field cluster meta data;
	Handle test unknown field index meta data;
	Handle test meta data global state changes on index deletions;
	Handle test X content with index graveyard;
	Handle test X content cluster UUID;
	Handle test serialization cluster UUID;
	Handle test meta data global state changes on cluster UUID changes;
	Handle random voting config;
	Handle random voting config exclusions;
	Handle test X content with coordination meta data;
	Handle test global state equals coordination meta data;
	Handle test serialization with index graveyard;
	Handle test find mappings;
	Handle test find mappings no op filters;
	Handle test find mappings with filters;
	Build index meta data;
	Assert index mappings no fields;
	Assert index mappings  not filtered;
	Assert leafs;
	Assert multi field;
	Handle test transient settings override persistent settings

129.23. Add a class for meta data update settings service. It allows to:

	Instantiate meta data update settings service  with cluster service, allocation service, index scoped settings, indices service, thread pool and thread pool;
	Update settings;
	Get total new shards;
	Maybe update cluster block;
	Handle upgrade index settings;
	Handle new response;
	Execute current state

129.24. Add a class for process cluster event timeout exception. It allows to:

	Instantiate process cluster event timeout exception  with time value;
	Instantiate process cluster event timeout exception  with stream input;
	Get status

129.25. Add a class for repositories meta data. It allows to:

	Instantiate repositories meta data  with repositories list;
	Get repositories;
	Get repository;
	Check if repositories meta data equals;
	Hash code;
	Get writeable name;
	Get minimal supported version;
	Instantiate repositories meta data  with stream input;
	Read diff  from stream input;
	Write  to stream output;
	Process repositories meta data repositories meta data from X content;
	Convert repositories meta data to X content;
	Get context;

129.26. Add a class for repository meta data. It allows to:

	Instantiate repository meta data  with settings;
	Name repository meta data;
	Get type;
	Get settings;
	Instantiate repository meta data  with stream input;
	Write  to stream output;
	Check if repository meta data equals;
	Hash code

129.27. Add a class for template upgrade service. It allows to:

	Instantiate template upgrade service  with client, cluster service, thread pool, index template meta data upgraders collection and index template meta data upgraders collection;
	Handle cluster changed;
	Upgrade templates;
	Process  on response;
	Process  on failure;
	Try finish upgrade;
	Calculate template changes;
	Convert template upgrade service to bytes reference

129.28. Add a class for template upgrade service tests. It allows to:

	Set up test;
	Tear down test;
	Handle test calculate changes add change and delete;
	Handle test update templates;
	Handle test cluster state update;
	Handle random meta data;
	Handle random index patterns

129.29. Add a class for to and from json meta data tests. It allows to:

	Convert test simple json from and

129.30. Add a class for wildcard expression resolver tests. It allows to:

	Handle test convert wildcards just indices tests;
	Handle test convert wildcards tests;
	Handle test convert wildcards open closed indices tests;
	Handle test multiple wildcards;
	Test wildcard expression resolver tests;
	Handle test resolve aliases;
	Handle test matches concrete indices wildcard and aliases;
	Get index builder

130. Changes to package org.elasticsearch.cluster.node:  

130.1. Add a class for discovery node. It allows to:

	Node requires local storage;
	Check if discovery node is master node;
	Check if discovery node is data node;
	Check if discovery node is ingest node;
	Instantiate discovery node  with transport address, version and version;
	Instantiate discovery node  with transport address, attributes map, roles set, version and version;
	Create local;
	Get roles  from settings;
	Instantiate discovery node  with stream input;
	Write  to stream output;
	Get address;
	Get id;
	Get ephemeral id;
	Get name;
	Get attributes;
	Get roles;
	Get version;
	Get host name;
	Get host address;
	Check if discovery node equals;
	Hash code;
	Convert discovery node to string;
	Convert discovery node to X content;
	Get role;
	Get role name;
	Get abbreviation

130.2. Add a class for discovery node filters. It allows to:

	Build op type from key value;
	Instantiate discovery node filters  with op type, filters map and filters map;
	Match discovery node filters by IP;
	Match discovery node;
	Convert discovery node filters to string

130.3. Add a class for discovery node filters tests. It allows to:

	Create local address;
	Release local address;
	Handle test name match;
	Handle test id match;
	Handle test id or name match;
	Handle test tag and group match;
	Handle test star match;
	Handle test ip bind filtering matching and;
	Handle test ip bind filtering not matching;
	Handle test ip bind filtering not matching and;
	Handle test ip bind filtering matching or;
	Handle test ip bind filtering not matching or;
	Handle test ip publish filtering matching and;
	Handle test ip publish filtering not matching and;
	Handle test ip publish filtering matching or;
	Handle test host name filtering matching and;
	Handle test host address filtering matching and;
	Handle test ip publish filtering not matching or;
	Handle test ip publish filtering matching wildcard;
	Handle test comma separated values trimmed;
	Get shuffle settings;
	Build discovery node filters op type from settings

130.4. Add a class for discovery node tests. It allows to:

	Handle test discovery node is created with host from inet address;
	Handle test discovery node serialization keeps host

130.5. Add a class for discovery nodes tests. It allows to:

	Handle test resolve node by id or name;
	Handle test resolve node by attribute;
	Test discovery nodes tests;
	Handle test coordinator only nodes;
	Handle test resolve nodes ids;
	Handle test masters first;
	Handle test deltas;
	Handle random nodes;
	Build discovery nodes;
	Handle new node;
	Matching node ids;
	Node selector;
	Handle test max min node version

131. Changes to package org.elasticsearch.cluster.routing:  

131.1. Add a class for allocation id tests. It allows to:

	Handle test shard to started;
	Handle test successful relocation;
	Handle test cancel relocation;
	Convert test move;
	Handle test serialization;
	Handle test equals

131.2. Add a class for delayed allocation IT. It allows to:

	Handle test no delayed timeout;
	Handle test delayed allocation node leaves and comes back;
	Handle test delayed allocation times out;
	Convert test delayed allocation change with setting;
	Handle index random data;
	Find node  with shard

131.3. Add a class for group shards iterator. It allows to:

	Instantiate group shards iterator  with iterators list;
	Handle total size;
	Handle total size with 1 for empty;
	Get size;
	Get iterator;
	Get group shards iterator

131.4. Add a class for group shards iterator tests. It allows to:

	Handle random shard routings;
	Handle test size;
	Handle test iterate;
	Handle test ordering with search shard iterators

131.5. Add a class for illegal shard routing state exception. It allows to:

	Instantiate illegal shard routing state exception  with shard routing;
	Instantiate illegal shard routing state exception  with shard routing, cause throwable and cause throwable;
	Instantiate illegal shard routing state exception  with stream input;
	Write  to stream output;
	Get shard

131.6. Add a class for murmur 3 hash function. It allows to:

	Instantiate murmur 3 hash function;
	Hash murmur 3 hash function;

131.7. Add a class for operation routing. It allows to:

	Instantiate operation routing  with settings, cluster settings and cluster settings;
	Get set use adaptive replica selection;
	Set awareness attributes;
	Get index shards;
	Get shards;
	Search shards;
	Compute targeted shards;
	Get preference active shard iterator;
	Handle shard routings;
	Get index routing table;
	Get index meta data;
	Shard id;
	Generate shard id;
	Calculate scaled shard id

131.8. Add a class for operation routing tests. It allows to:

	Handle test generate shard id;
	Handle test generate shard id split;
	Handle test partitioned index;
	Handle test partitioned index shrunk;
	Handle test partitioned index BWC;
	Handle test BWC;
	Handle test prefer nodes;
	Handle test fair session id preferences;
	Get duel get shards;
	Handle test that only nodes support node ids;
	Handle test adaptive replica selection

131.9. Add a class for plain shard iterator. It allows to:

	Instantiate plain shard iterator  with shard id, shards list and shards list;
	Shard id;
	Check if plain shard iterator equals;
	Hash code;
	Compare  to shard iterator

131.10. Add a class for plain shards iterator. It allows to:

	Instantiate plain shards iterator  with shards list;
	Reset plain shards iterator;
	Remaining plain shards iterator;
	Handle next or null;
	Get size;
	Size active;
	Get shard routings;
	Get iterator

131.11. Add a class for primary allocation IT. It allows to:

	Handle node plugins;
	Handle test bulk weird scenario;
	Create stale replica scenario;
	Convert test do not allow stale replicas;
	Convert test failed allocation of stale primary;
	Convert test force stale replica;
	Handle test force primary shard if allocation deciders say no after index creation;
	Handle test do not remove allocation id on node leave;
	Handle clear data;
	Handle test remove allocation id on write after node leave;
	Handle test not wait for quorum copies;
	Handle test force allocate primary on no decision;
	Handle test primary replica resync failed

131.12. Add a class for primary terms tests. It allows to:

	Set primary terms tests;
	Handle init primaries;
	Handle increment primary term;
	Start initializing shards;
	Apply reroute result;
	Fail some primaries;
	Add nodes;
	Create index meta data;
	Assert all primary term;
	Assert primary term;
	Handle test primary term meta data sync

131.13. Add a class for random shard routing mutator. It allows to:

	Instantiate random shard routing mutator;
	Handle random change;
	Handle random reason

131.14. Add a class for recovery source tests. It allows to:

	Handle test serialization;
	Handle test recovery source type order

131.15. Add a class for rotation shard shuffler. It allows to:

	Instantiate rotation shard shuffler;
	Handle next seed;
	Get shuffle

131.16. Add a class for routing exception. It allows to:

	Instantiate routing exception  with cause throwable;
	Instantiate routing exception  with stream input

131.17. Add a class for routing node. It allows to:

	Instantiate routing node  with discovery node, shards routing and shards routing;
	Instantiate routing node  with discovery node, shards linked hash map and shards linked hash map;
	Build shard routing map;
	Get iterator;
	Node routing node;
	Get shard id by shard id;
	Node id;
	Get size;
	Add shard routing;
	Update old shard routing;
	Remove shard routing;
	Get number of shards with state;
	Get shards with state;
	Get number of owning shards;
	Pretty print;
	Convert routing node to string;
	Copy shards;
	Check if routing node is empty

131.18. Add a class for routing service. It allows to:

	Instantiate routing service  with cluster service, allocation service and allocation service;
	Start routing service;
	Stop routing service;
	Do routing service close;
	Reroute routing service;
	Execute current state;
	Process  on no longer master;
	Process  on failure

131.19. Add a class for routing table tests. It allows to:

	Set routing table tests;
	Handle init primaries;
	Start initializing shards;
	Create index meta data;
	Test all shards;
	Handle test has index;
	Handle test index;
	Handle test indices routing;
	Handle test shards with state;
	Test active primary shards grouped;
	Test all active shards grouped;
	Test all assigned shards grouped;
	Test all shards  for multiple indices;
	Handle test routing table built more than once;
	Handle test validations;
	Handle test distinct nodes;
	Handle test add as recovery;
	Update active allocations

131.20. Add an interface declaration  for shard iterator. It allows to:

	Shard id;
	Reset shard iterator

131.21. Add a class for shard routing. It allows to:

	Instantiate shard routing  with shard id, shard routing state, recovery source, unassigned info, allocation id and allocation id;
	Initialize target relocating shard;
	Handle new unassigned;
	Get index;
	Get index name;
	I shard routing;
	Get id;
	Handle unassigned;
	Initializing shard routing;
	Handle active;
	Get started;
	Relocating shard routing;
	Get assigned to node;
	Handle current node id;
	Relocating node id;
	Get target relocating shard;
	Handle unassigned info;
	Get allocation id;
	Handle primary;
	Get state;
	Shard id;
	Get shards it;
	Instantiate shard routing  with shard id, stream input and stream input;
	Instantiate shard routing  with stream input;
	Write stream output to thin;
	Write  to stream output;
	Update unassigned;
	Move unassigned info to unassigned;
	Initialize shard routing;
	Relocate shard routing;
	Cancel relocation;
	Remove relocation source;
	Handle reinitialize replica shard;
	Move shard routing to started;
	Move active replica  to primary;
	Move unassigned  from primary;
	Check if shard routing is same allocation;
	Check if shard routing is relocation target;
	Check if shard routing is relocation target of;
	Check if shard routing is relocation source of;
	Check if shard routing equals ignoring meta data;
	Check if shard routing equals;
	Hash code;
	Convert shard routing to string;
	Handle short summary;
	Convert shard routing to X content;
	Get expected shard size;
	Get recovery source

131.22. Add a class for shard routing helper. It allows to:

	Relocate shard routing;
	Move shard routing to started;
	Initialize shard routing;
	Init copy shard routing with same id;
	Move shard routing to unassigned;
	Handle new with restore source

131.23. Add a class for shard routing tests. It allows to:

	Handle test is same allocation;
	Handle random shard routing;
	Handle test is source target relocation;
	Handle test equals ignoring version;
	Handle test expected size

131.24. Add a class for shard shuffler. It allows to:

	Handle next seed;
	Get shuffle;

131.25. Add an interface declaration  for shards iterator. It allows to:

	Reset shards iterator;
	Get size;
	Size active;
	Handle next or null;
	Remaining shards iterator;
	Hash code;
	Check if shards iterator equals;
	Get shard routings

131.26. Add a class for test shard routing. It allows to:

	Handle new shard routing;
	Relocate shard routing;
	Build recovery target;
	Build allocation id;
	Build unassigned info;
	Handle random recovery source

131.27. Add a class for unassigned info. It allows to:

	Get allocation status;
	Write  to stream output;
	Read  from stream input;
	Process unassigned info unassigned info from decision;
	Get value;
	Instantiate unassigned info  with reason;
	Instantiate unassigned info  with reason, failure exception, last allocation status and last allocation status;
	Instantiate unassigned info  with stream input;
	Get num failed allocations;
	Check if unassigned info is delayed;
	Get reason;
	Get unassigned time  in millis;
	Get unassigned time  in nanos;
	Get message;
	Get failure;
	Get details;
	Get last allocation status;
	Get remaining delay;
	Get number  of delayed unassigned;
	Find next delayed allocation;
	Handle short summary;
	Convert unassigned info to string;
	Convert unassigned info to X content;
	Check if unassigned info equals;
	Hash code

131.28. Add a class for unassigned info tests. It allows to:

	Handle test reason ordinal order;
	Handle test serialization;
	Handle test index created;
	Handle test cluster recovered;
	Handle test index reopened;
	Test new index restored;
	Test existing index restored;
	Handle test dangling index imported;
	Handle test replica added;
	Handle test state transition meta handling;
	Handle test node leave;
	Handle test failed shard;
	Handle test remaining delay calculation;
	Test number  of delayed unassigned;
	Handle test find next delayed allocation;
	Handle test allocation status serialization

132. Changes to package org.elasticsearch.cluster.routing.allocation:  

132.1. Add a class for abstract allocation decision. It allows to:

	Instantiate abstract allocation decision  with target node, node decisions list and node decisions list;
	Instantiate abstract allocation decision  with stream input;
	Check if abstract allocation decision is decision taken;
	Get target node;
	Get node decisions;
	Get explanation;
	Write  to stream output;
	Check decision state;
	Convert discovery node;
	Get sort node decisions;
	Handle node decisions to X content;
	Process abstract allocation decision abstract allocation decision at least one node with yes decision;
	Check if abstract allocation decision equals;
	Hash code

132.2. Add a class for add incrementally tests. It allows to:

	Handle test add nodes and indices;
	Handle test minimal relocations;
	Handle test minimal relocations no limit;
	Assert num index shards  per node;
	Assert cluster state at least one index shard per node;
	Add nodes;
	Handle init cluster;
	Add index;
	Remove nodes

132.3. Add a class for allocate unassigned decision. It allows to:

	Instantiate allocate unassigned decision  with allocation status, assigned node, node decisions list and node decisions list;
	Instantiate allocate unassigned decision  with stream input;
	N allocation status;
	Get delayed;
	Get throttle;
	Yes allocate unassigned decision;
	Process allocate unassigned decision allocate unassigned decision from decision;
	Get cached decision;
	Check if allocate unassigned decision is decision taken;
	Get allocation decision;
	Get allocation status;
	Get allocation id;
	Get remaining delay  in millis;
	Get configured delay  in millis;
	Get explanation;
	Check if allocate unassigned decision has node with stale or corrupt shard;
	Convert allocate unassigned decision to X content;
	Write  to stream output;
	Check if allocate unassigned decision equals;
	Hash code

132.4. Add a class for allocate unassigned decision tests. It allows to:

	Handle test decision not taken;
	Handle test no decision;
	Handle test throttle decision;
	Handle test yes decision;
	Handle test cached decisions;
	Handle test serialization

132.5. Add a class for allocation commands tests. It allows to:

	Handle test move shard command;
	Handle random allocate command;
	Handle test allocate command;
	Handle test allocate stale primary command;
	Handle test cancel command;
	Handle test serialization;
	Handle test X content;
	X content registry;
	Convert test move shard;
	Handle test move shard from non data node

132.6. Add a class for allocation decision tests. It allows to:

	Handle test serialization;
	Handle test values order;
	Handle test from decision type;
	Handle test from allocation status

132.7. Add a class for allocation priority tests. It allows to:

	Handle test prioritized indices allocated first

132.8. Add a class for awareness allocation tests. It allows to:

	Handle test move shard once new node with attribute added 1;
	Convert test move shard once new node with attribute added;
	Handle test move shard once new node with attribute added 3;
	Handle test move shard once new node with attribute added 4;
	Handle test move shard once new node with attribute added 5;
	Handle test move shard once new node with attribute added 6;
	Handle test full awareness 1;
	Convert test full awareness;
	Handle test full awareness 3;
	Handle test unbalanced zones;
	Handle test unassigned shards with unbalanced zones;
	Handle test multiple awareness attributes

132.9. Add a class for balance configuration tests. It allows to:

	Handle test index balance;
	Handle test replica balance;
	Handle init cluster;
	Add node;
	Remove nodes;
	Assert replica balance;
	Assert index balance;
	Handle test persisted settings;
	Handle test no rebalance on primary overload;
	Allocate routing allocation;
	Decide shard allocation

132.10. Add a class for balance unbalanced cluster tests. It allows to:

	Get cat path;
	Allocate new

132.11. Add a class for balanced single shard tests. It allows to:

	Handle test rebalance non started shard not allowed;
	Handle test rebalance not allowed during pending async fetch;
	Convert test rebalancing not allowed due;
	Rebalance shard routing;
	Handle test rebalance possible;
	Allocate shard routing;
	Handle test dont balance shard when threshold not met;
	Handle test single shard balance produces same results as balance step;
	Handle test node decisions ranking;
	Execute rebalance  for shard routing;
	Add nodes  to cluster state;
	Get setup state and rebalance;
	Handle new routing allocation;
	Assert assigned node remains same

132.12. Add a class for cluster rebalance routing tests. It allows to:

	Handle test always;
	Handle test cluster primaries active 1;
	Convert test cluster primaries active;
	Handle test cluster all active 1;
	Convert test cluster all active;
	Handle test cluster all active 3;
	Handle test rebalance with ignored unassigned shards;
	Allocate unassigned;
	Handle test rebalance while shard fetching;

132.13. Add a class for concurrent rebalance routing tests. It allows to:

	Handle test cluster concurrent rebalance

132.14. Add a class for dead nodes allocation tests. It allows to:

	Handle test simple dead node on started primary shard;
	Convert test dead node while relocating on;
	Handle test dead node while relocating on from node

132.15. Add a class for decisions impact on cluster health tests. It allows to:

	Handle test primary shard no decision on index creation;
	Handle test primary shard throttle decision on index creation;
	Allocate routing node;
	Handle test primary shard yes decision on index creation;
	Allocate shard routing;
	Run allocation test;
	Handle new allocation service

132.16. Add a class for disk threshold monitor. It allows to:

	Instantiate disk threshold monitor  with settings, cluster state supplier, cluster settings, client and client;
	Warn disk usage about disk if needed;
	Process disk threshold monitor disk threshold monitor on new info;
	Handle mark indices read only;
	Reroute disk threshold monitor

132.17. Add a class for disk threshold monitor tests. It allows to:

	Handle test mark flood stage indices read only;
	Reroute;
	Handle mark indices read only;

132.18. Add a class for disk threshold settings tests. It allows to:

	Handle test defaults;
	Handle test update;
	Handle test invalid construction;
	Handle test invalid low high percentage update;
	Handle test invalid high flood percentage update;
	Handle test invalid low high bytes update;
	Handle test invalid high flood bytes update;
	Handle test incompatible threshold update;
	Handle test invalid high disk threshold;
	Handle test sequence of updates

132.19. Add a class for elect replica as primary during relocation tests. It allows to:

	Handle test elect replica as primary during relocation

132.20. Add a class for expected shard size allocation tests. It allows to:

	Handle test initializing has expected size;
	Handle test expected size on move

132.21. Add a class for failed node routing tests. It allows to:

	Handle test simple failed node test;
	Handle test random cluster promotes newest replica;
	Get node version;
	Handle random initial cluster state;
	Create node

132.22. Add a class for failed shard. It allows to:

	Instantiate failed shard  with routing, failure exception and failure exception;
	Convert failed shard to string;
	Get routing entry;
	Get message;
	Get failure;
	Handle mark as stale

132.23. Add a class for failed shards routing tests. It allows to:

	Convert test failed shard primary relocating;
	Handle test fail primary started check replica elected;
	Handle test first allocation failure single node;
	Handle test single shard multiple allocation failures;
	Handle test first allocation failure two nodes;
	Handle test rebalance failure;
	Handle test fail all replicas initializing on primary fail;
	Convert test fail all replicas initializing on primary fail while having A replica;
	Handle test replica on newest version is promoted

132.24. Add a class for filter routing tests. It allows to:

	Handle test cluster include filters single attribute;
	Handle test cluster include filters multiple attributes;
	Handle test cluster include filters optional attribute;
	Handle test cluster include filters wildcards;
	Handle test cluster exclude filters single attribute;
	Handle test cluster exclude filters multiple attributes;
	Handle test cluster exclude filters optional attribute;
	Handle test cluster exclude filters wildcards;
	Handle test cluster include and exclude filters;
	Handle test cluster require filters;
	Attr map;
	Handle test cluster filters;
	Handle test index include filters;
	Handle test index exclude filters;
	Handle test index include then exclude filters;
	Handle test index exclude then include filters;
	Handle test index require filters;
	Handle test index filters;
	Handle test concurrent recoveries after shards can not remain on node

132.25. Add a class for in sync allocation id tests. It allows to:

	Handle setup allocation service;
	Handle test in sync allocation ids updated;
	Handle test dead nodes before replica failed;
	Handle test primary failure batched with replica failure;
	Handle test in sync ids not growing without bounds;
	Handle test in sync ids not trimmed when not growing;
	Handle test primary allocation id not removed from in sync set when no fail over;
	Create one primary one replica cluster state

132.26. Add a class for index balance tests. It allows to:

	Handle test balance all nodes started;
	Handle test balance incrementally start nodes;
	Handle test balance all nodes started add index

132.27. Add a class for max retry allocation decider tests. It allows to:

	Set max retry allocation decider tests;
	Create initial cluster state;
	Handle test single retry on ignore;
	Handle test failed allocation

132.28. Add a class for move decision. It allows to:

	Instantiate move decision  with can remain decision, cluster rebalance decision, allocation decision, assigned node, node decisions list and node decisions list;
	Instantiate move decision  with stream input;
	Write  to stream output;
	Stay can remain decision;
	Can can remain decision not remain;
	Can can rebalance decision not rebalance;
	Rebalance can rebalance decision;
	Check if move decision is decision taken;
	Process move decision move decision with remain decision;
	Force move;
	Remain move decision;
	Get can remain decision;
	Can rebalance cluster;
	Get cluster rebalance decision;
	Get allocation decision;
	Get current node ranking;
	Get explanation;
	Convert move decision to X content;
	Check if move decision equals;
	Hash code

132.29. Add a class for move decision tests. It allows to:

	Handle test cached decisions;
	Handle test stay decision;
	Handle test decision with node explanations;
	Handle test serialization

132.30. Add a class for node allocation result tests. It allows to:

	Handle test serialization;
	Handle test shard store;
	Assert node explanation equals

132.31. Add a class for node version allocation decider tests. It allows to:

	Handle test do not allocate from primary;
	Handle test random;
	Handle test rolling restart;
	Handle test rebalance does not allocate primary and replicas on different version nodes;
	Handle test restore does not allocate snapshot on older nodes;
	Stabilize cluster state;
	Assert recovery node versions;
	Handle test messages

132.32. Add a class for prefer local primaries to relocating primaries tests. It allows to:

	Handle test prefer local primary allocation over filtered

132.33. Add a class for prefer primary allocation tests. It allows to:

	Handle test prefer primary allocation over replicas

132.34. Add a class for primary election routing tests. It allows to:

	Convert test backup election;
	Handle test removing initializing replicas if primaries fails

132.35. Add a class for primary not relocated while being recovered tests. It allows to:

	Handle test primary not relocated while being recovered from

132.36. Add a class for rebalance after active tests. It allows to:

	Handle test rebalance only after all shards are active

132.37. Add a class for replica allocated after primary tests. It allows to:

	Handle test backup is allocated after primary

132.38. Add a class for reroute explanation. It allows to:

	Instantiate reroute explanation  with allocation command, decisions and decisions;
	Get command;
	Get decisions;
	Read  from stream input;
	Write  to reroute explanation;
	Convert reroute explanation to X content

132.39. Add a class for resize allocation decider tests. It allows to:

	Set resize allocation decider tests;
	Create initial cluster state;
	Handle test non resize routing;
	Handle test shrink;
	Handle test source not active;
	Handle test source primary active

132.40. Add a class for routing allocation. It allows to:

	Instantiate routing allocation  with allocation deciders, routing nodes, cluster state, cluster info and cluster info;
	Get current nano time;
	Get deciders;
	Routing table;
	Routing nodes;
	Handle meta data;
	Get nodes;
	Get cluster info;
	Get custom;
	Get customs;
	Disable routing allocation;
	Set debug mode;
	Debug decision;
	Get debug mode;
	Add ignore shard  for node;
	Should ignore shard  for node;
	Get ignore nodes;
	Remove allocation id;
	Get changes;
	Update meta data  with routing changes;
	Update restore info  with routing changes;
	Routing routing allocation nodes changed;
	Get decision;
	Check if routing allocation has pending async fetch;
	Set has pending async fetch

132.41. Add a class for routing explanations. It allows to:

	Instantiate routing explanations;
	Add reroute explanation;
	Get explanations;
	Get routing explanations yes decision messages;
	Read  from stream input;
	Write  to routing explanations;
	Convert routing explanations to X content

132.42. Add a class for routing nodes changed observer. It allows to:

	Check if routing nodes changed observer is changed;
	Handle shard initialized;
	Handle shard started;
	Handle relocation started;
	Handle unassigned info updated;
	Handle shard failed;
	Handle relocation completed;
	Handle relocation source removed;
	Handle replica promoted;
	Handle initialized replica reinitialized;
	Changed routing nodes changed observer

132.43. Add a class for routing nodes integrity tests. It allows to:

	Handle test balance all nodes started;
	Handle test balance incrementally start nodes;
	Handle test balance all nodes started add index;
	Assert shard stats

132.44. Add a class for routing nodes utils. It allows to:

	Get number of shards of type

132.45. Add a class for same shard routing tests. It allows to:

	Handle test same host;
	Handle test force allocate primary on same node not allowed

132.46. Add a class for shard allocation decision. It allows to:

	Instantiate shard allocation decision  with allocate unassigned decision, move decision and move decision;
	Instantiate shard allocation decision  with stream input;
	Write  to stream output;
	Check if shard allocation decision is decision taken;
	Get allocate decision;
	Get move decision;
	Convert shard allocation decision to X content

132.47. Add a class for shard state IT. It allows to:

	Handle test primary failure increases term;
	Assert primary terms

132.48. Add a class for shard versioning tests. It allows to:

	Handle test simple

132.49. Add a class for shards limit allocation tests. It allows to:

	Handle test index level shards limit allocate;
	Handle test cluster level shards limit allocate;
	Handle test index level shards limit remain

132.50. Add a class for single shard no replicas routing tests. It allows to:

	Handle test single index started shard;
	Handle test single index shard failed;
	Handle test multi index even distribution;
	Handle test multi index uneven nodes

132.51. Add a class for single shard one replica routing tests. It allows to:

	Handle test single index first start primary then backups

132.52. Add a class for stale shard. It allows to:

	Instantiate stale shard  with shard id;
	Convert stale shard to string;
	Get shard id;
	Get allocation id

132.53. Add a class for started shards routing tests. It allows to:

	Handle test started shards matching;
	Handle test relocating primaries with initializing replicas

132.54. Add a class for ten shards one replica routing tests. It allows to:

	Handle test single index first start primary then backups

132.55. Add a class for throttling allocation tests. It allows to:

	Handle test primary recovery throttling;
	Handle test replica and primary recovery throttling;
	Handle test throttle incoming and outgoing;
	Handle test outgoing throttles allocation;
	Create recovery state and initalize allocations;
	Add index in sync allocation ids

132.56. Add a class for update number of replicas tests. It allows to:

	Handle test update number of replicas

133. Changes to package org.elasticsearch.cluster.routing.allocation.allocator:  

133.1. Add an interface declaration  for shards allocator. It allows to:

	Allocate routing allocation;
	Decide shard allocation

134. Changes to package org.elasticsearch.cluster.routing.allocation.command:  

134.1. Add an interface declaration  for allocation command. It allows to:

	Name allocation command;
	Execute routing allocation;
	Get writeable name;
	Get message

134.2. Add a class for allocation commands. It allows to:

	Instantiate allocation commands  with commands;
	Add commands;
	Get commands;
	Execute routing allocation;
	Read  from stream input;
	Write  to allocation commands;
	Process allocation commands allocation commands from X content;
	Convert allocation commands to X content;
	Check if allocation commands equals;
	Hash code;
	Convert allocation commands to string

134.3. Add a class for cancel allocation command. It allows to:

	Instantiate cancel allocation command;
	Instantiate cancel allocation command  with stream input;
	Write  to stream output;
	Name cancel allocation command;
	Get index;
	Shard id;
	Node cancel allocation command;
	Allow primary;
	Execute routing allocation;
	Convert cancel allocation command to X content;
	Process cancel allocation command cancel allocation command from X content;
	Check if cancel allocation command equals;
	Hash code

134.4. Add a class for move allocation command. It allows to:

	Instantiate move allocation command;
	Instantiate move allocation command  with stream input;
	Write  to stream output;
	Name move allocation command;
	Get index;
	Shard id;
	Process move allocation command move allocation command from node;
	Convert move allocation command to node;
	Execute routing allocation;
	Convert move allocation command to X content;
	Process move allocation command move allocation command from X content;
	Check if move allocation command equals;
	Hash code

135. Changes to package org.elasticsearch.cluster.routing.allocation.decider:  

135.1. Add a class for allocation decider. It allows to:

	Rebalance shard routing;
	Allocate shard routing;
	Remain shard routing;
	Allocate index meta data;
	Allocate routing node;
	Rebalance routing allocation;
	Can force allocate primary

135.2. Add a class for allocation deciders. It allows to:

	Instantiate allocation deciders  with allocations collection;
	Rebalance shard routing;
	Allocate shard routing;
	Remain shard routing;
	Allocate index meta data;
	Allocate routing node;
	Rebalance routing allocation;
	Can force allocate primary

135.3. Add a class for awareness allocation decider. It allows to:

	Instantiate awareness allocation decider  with settings, cluster settings and cluster settings;
	Set forced awareness attributes;
	Set awareness attributes;
	Allocate shard routing;
	Remain shard routing;
	Process awareness allocation decider awareness allocation decider under capacity

135.4. Add a class for cluster rebalance allocation decider. It allows to:

	Parse string;
	Convert cluster rebalance allocation decider to string;
	Instantiate cluster rebalance allocation decider  with settings, cluster settings and cluster settings;
	Set type;
	Rebalance shard routing;
	Rebalance routing allocation

135.5. Add a class for concurrent rebalance allocation decider. It allows to:

	Instantiate concurrent rebalance allocation decider  with settings, cluster settings and cluster settings;
	Set cluster concurrent rebalance;
	Rebalance shard routing;
	Rebalance routing allocation

135.6. Add a class for decision tests. It allows to:

	Handle test higher than

135.7. Add a class for disk threshold decider. It allows to:

	Instantiate disk threshold decider  with settings, cluster settings and cluster settings;
	Get size of relocating shards;
	Allocate shard routing;
	Remain shard routing;
	Get disk usage;
	Handle average usage;
	Handle free disk percentage after shard assigned;
	Terminate terminate;
	Get expected shard size

135.8. Add a class for disk threshold decider tests. It allows to:

	Make decider;
	Handle test disk threshold;
	Get cluster info;
	Handle test disk threshold with absolute sizes;
	Handle test disk threshold with shard sizes;
	Handle test unknown disk usage;
	Handle test average usage;
	Test free disk percentage  after shard assigned;
	Handle test shard relocations taken into account;
	Handle test can remain with shard relocating away;
	Handle test for single data node;
	Log shard states

135.9. Add a class for disk threshold decider unit tests. It allows to:

	Handle test can allocate uses max available space;
	Convert test can not allocate due;
	Handle test can remain uses least available space;
	Handle test shard size and relocating size;
	Handle test size shrink index

135.10. Add a class for enable allocation decider. It allows to:

	Instantiate enable allocation decider  with settings, cluster settings and cluster settings;
	Set enable rebalance;
	Set enable allocation;
	Allocate shard routing;
	Rebalance routing allocation;
	Rebalance shard routing;
	Setting allocation;
	Setting rebalance;
	Parse enable allocation decider;
	Convert enable allocation decider to string;

135.11. Add a class for enable allocation tests. It allows to:

	Handle test cluster enable none;
	Handle test cluster enable only primaries;
	Handle test index enable none;
	Handle test enable cluster balance;
	Handle test enable cluster balance no replicas

135.12. Add a class for filter allocation decider. It allows to:

	Instantiate filter allocation decider  with settings, cluster settings and cluster settings;
	Allocate shard routing;
	Allocate index meta data;
	Remain shard routing;
	Should filter;
	Should index filter;
	Should cluster filter;
	Set cluster require filters;
	Set cluster include filters;
	Set cluster exclude filters

135.13. Add a class for filter allocation decider tests. It allows to:

	Handle test filter initial recovery;
	Create initial cluster state;
	Handle test invalid IP filter;
	Handle test null;
	Handle test wildcard IP filter

135.14. Add a class for max retry allocation decider. It allows to:

	Allocate shard routing;
	Can force allocate primary

135.15. Add a class for mock disk usages IT. It allows to:

	Handle node plugins;
	Handle test reroute occurs on disk passing high watermark

135.16. Add a class for node version allocation decider. It allows to:

	Allocate shard routing;
	Check if node version allocation decider is version compatible relocate primary;
	Check if node version allocation decider is version compatible allocating replica;
	Check if node version allocation decider is version compatible

135.17. Add a class for rebalance only when active allocation decider. It allows to:

	Rebalance shard routing

135.18. Add a class for replica after primary active allocation decider. It allows to:

	Allocate shard routing;

135.19. Add a class for resize allocation decider. It allows to:

	Allocate shard routing;
	Can force allocate primary

135.20. Add a class for restore in progress allocation decider. It allows to:

	Allocate shard routing;
	Can force allocate primary

135.21. Add a class for restore in progress allocation decider tests. It allows to:

	Handle test can allocate primary;
	Handle test can not allocate primary missing in restore in progress;
	Handle test can allocate primary existing in restore in progress;
	Create initial cluster state;
	Execute allocation;
	Create snapshot recovery source

135.22. Add a class for same shard allocation decider. It allows to:

	Instantiate same shard allocation decider  with settings, cluster settings and cluster settings;
	Set same host;
	Allocate shard routing;
	Can force allocate primary;
	Decide same node

135.23. Add a class for shards limit allocation decider. It allows to:

	Instantiate shards limit allocation decider  with settings, cluster settings and cluster settings;
	Set cluster shard limit;
	Allocate shard routing;
	Remain shard routing;
	Decide shard routing;
	Allocate routing node

135.24. Add a class for snapshot in progress allocation decider. It allows to:

	Rebalance shard routing;
	Allocate shard routing;
	Move shard routing

135.25. Add a class for throttling allocation decider. It allows to:

	Instantiate throttling allocation decider  with settings, cluster settings and cluster settings;
	Set concurrent incoming recoverries;
	Set concurrent outgoing recoverries;
	Set primaries initial recoveries;
	Allocate shard routing;
	Initializing shard

135.26. Add a class for update shard allocation settings IT. It allows to:

	Handle test enable rebalance;
	Handle test update same host setting

136. Changes to package org.elasticsearch.cluster.routing.operation.hash.murmur3:  

136.1. Add a class for murmur 3 hash function tests. It allows to:

	Handle test known values;
	Assert hash

137. Changes to package org.elasticsearch.cluster.serialization:  

137.1. Add a class for cluster state to string tests. It allows to:

	Handle test cluster state serialization

138. Changes to package org.elasticsearch.cluster.service:  

138.1. Add a class for cluster service. It allows to:

	Instantiate cluster service  with settings, cluster settings, thread pool and thread pool;
	Instantiate cluster service  with settings, cluster settings, master service, cluster applier service and cluster applier service;
	Set slow task logging threshold;
	Set node connections service;
	Start cluster service;
	Stop cluster service;
	Do cluster service close;
	Handle local node;
	Get operation routing;
	Get state;
	Add high priority applier;
	Add low priority applier;
	Add state applier;
	Remove applier;
	Add listener;
	Remove listener;
	Add local node master listener;
	Get master service;
	Get cluster applier service;
	Assert cluster or master state thread;
	Get cluster name;
	Get cluster settings;
	Get settings;
	Get node name;
	Submit state update task;
	Submit state update tasks

138.2. Add a class for cluster service IT. It allows to:

	Handle test acked update task;
	Handle new response;
	Ack discovery node;
	Handle on all nodes acked;
	Process  on ack timeout;
	Get ack timeout;
	Get timeout;
	Handle cluster state processed;
	Execute current state;
	Process  on failure;
	Handle test acked update task same cluster state;
	Handle test acked update task no ack expected;
	Handle test acked update task timeout zero;
	Handle test pending update task;

138.3. Add a class for pending cluster task. It allows to:

	Instantiate pending cluster task;
	Instantiate pending cluster task  with priority, source text and source text;
	Get insert order;
	Get priority;
	Get source;
	Get time  in queue in millis;
	Get time  in queue;
	Check if pending cluster task is executing;
	Read  from stream input;
	Write  to stream output

138.4. Add a class for source prioritized runnable. It allows to:

	Instantiate source prioritized runnable  with priority;
	Get source;
	Convert source prioritized runnable to string

139. Changes to package org.elasticsearch.cluster.settings:  

139.1. Add a class for cluster settings IT. It allows to:

	Handle cleanup;
	Handle test cluster non existing settings update;
	Handle test delete is applied first;
	Handle test reset cluster setting;
	Handle test cluster settings update response;
	Handle test can update tracer settings;
	Handle test update settings;
	Handle test cluster update settings with blocks;
	Handle test missing units;
	Handle test logger level update;
	Handle test user metadata

140. Changes to package org.elasticsearch.cluster.shards:  

140.1. Add a class for cluster search shards IT. It allows to:

	Handle node settings;
	Handle test single shard allocation;
	Handle test multiple shards single node allocation;
	Handle test multiple indices allocation;
	Handle test cluster search shards with blocks

141. Changes to package org.elasticsearch.cluster.structure:  

141.1. Add a class for routing iterator tests. It allows to:

	Handle test empty iterator;
	Handle test iterator 1;
	Convert test iterator;
	Handle test random routing;
	Handle test attribute preference routing;
	Handle test node selector routing;
	Handle test shards and prefer node routing;
	Handle test replica shard preference iters

142. Changes to package org.elasticsearch.common:  

142.1. Add a class for booleans tests. It allows to:

	Handle test is boolean;
	Handle test is non boolean;
	Handle test parse boolean with fallback;
	Handle test parse non boolean with fallback;
	Handle test parse boolean;
	Handle test parse non boolean;
	Handle test is boolean lenient;
	Handle test parse boolean lenient

142.2. Add an interface declaration  for checked bi consumer. It allows to:

	Accept T

142.3. Add an interface declaration  for checked bi function. It allows to:

	Apply T

142.4. Add an interface declaration  for checked consumer. It allows to:

	Accept T

142.5. Add an interface declaration  for checked runnable. It allows to:

	Run checked runnable

142.6. Add an interface declaration  for checked supplier. It allows to:

	Get checked supplier

142.7. Add a class for classes. It allows to:

	Get package name;
	Check if classes is inner class;
	Check if classes is concrete;
	Instantiate classes

142.8. Add a class for explicit. It allows to:

	Instantiate explicit  with value;
	Get value;
	Handle explicit

142.9. Add a class for exponentially weighted moving average. It allows to:

	Instantiate exponentially weighted moving average;
	Get average;
	Add value

142.10. Add a class for exponentially weighted moving average tests. It allows to:

	Handle test EWMA;
	Handle test invalid alpha;
	Convert test converging

142.11. Add a class for field memory stats. It allows to:

	Instantiate field memory stats  with stats object long hash map;
	Instantiate field memory stats  with stream input;
	Add field memory stats;
	Write  to stream output;
	Convert field memory stats to X content;
	Get copy;
	Check if field memory stats equals;
	Hash code;
	Get iterator;
	Get field memory stats;
	Check if field memory stats contains field

142.12. Add a class for field memory stats tests. It allows to:

	Handle test serialize;
	Handle test hash code equals;
	Handle test add;
	Handle random field memory stats

142.13. Add a class for legacy time based UUID generator. It allows to:

	Put legacy time based UUID generator long;
	Get base 64 UUID

142.14. Add a class for mac address provider. It allows to:

	Get mac address;
	Check if mac address provider is valid address;
	Get secure munged address;
	Construct dummy multicast address

142.15. Add a class for named registry. It allows to:

	Instantiate named registry;
	Get registry;
	Register T;
	Extract plugins list

142.16. Add a class for numbers. It allows to:

	Instantiate numbers;
	Convert bytes;
	Convert int;
	Handle short to bytes;
	Convert long;
	Convert double;
	Check if numbers is valid double;
	Convert numbers to long exact;
	Convert numbers to long;
	Convert numbers to int exact;
	Convert numbers to short exact;
	Convert numbers to byte exact

142.17. Add a class for numbers tests. It allows to:

	Convert test;

142.18. Add a class for parsing exception. It allows to:

	Instantiate parsing exception  with X content location;
	Instantiate parsing exception  with X content location, cause throwable and cause throwable;
	Instantiate parsing exception  with cause throwable;
	Instantiate parsing exception  with stream input;
	Get line number;
	Get column number;
	Get status;
	Convert metadata;
	Write  to stream output

142.19. Add a class for pid file. It allows to:

	Instantiate pid file  with path;
	Create path;
	Get pid;
	Get path;
	Check if pid file is delete on exit;
	Add shutdown hook;
	Run

142.20. Add a class for pid file tests. It allows to:

	Handle test parent is file;
	Handle test pid file

142.21. Add a class for priority tests. It allows to:

	Handle test value of;
	Convert test;
	Handle test serialization;
	Convert test compare

142.22. Add a class for random based UUID generator. It allows to:

	Get base 64 UUID;
	Get base 64 UUID secure string;
	Get UUID bytes

142.23. Add a class for randomness. It allows to:

	Instantiate randomness;
	Get settings;
	Get randomness;
	Create secure;
	Get randomness without seed;
	Handle shuffle

142.24. Add a class for releasables tests. It allows to:

	Handle test release once

142.25. Add a class for secure random holder

142.26. Add a class for strings. It allows to:

	Handle spaceify;
	Split smart;
	Check if strings has length;
	Check if strings is empty;
	Check if strings has text;
	Handle trim leading character;
	Substring match;
	Replace strings;
	Delete strings;
	Quote strings;
	Capitalize strings;
	Change first character case;
	Handle valid file name;
	Handle valid file name excluding astrix;
	Convert strings to string array;
	Tokenize strings by comma to set;
	Split string  by comma to array;
	Get split;
	Tokenize strings to string array;
	Tokenize supplier to collection;
	Handle delimited list to string array;
	Convert comma delimited list;
	Convert collection;
	Convert array;
	Get format 1 decimals;
	Instantiate strings;
	Convert strings to UTF 8 bytes;
	Get substring;
	Check if strings is all or wildcard;
	Convert strings to string;
	Create builder;
	Handle clean truncate;
	Check if strings is null or empty;
	Coalesce strings to empty;
	Get pad start

142.27. Add a class for strings tests. It allows to:

	Handle test substring;
	Handle test clean truncate;
	Convert test;
	Convert test split string

142.28. Add a class for table tests. It allows to:

	Handle test fail on start row without header;
	Handle test fail on end headers without start;
	Handle test fail on add cell without header;
	Handle test fail on add cell without row;
	Handle test fail on end row without start;
	Handle test fail on less cells than declared;
	Handle test on less cells than declared unchecked;
	Handle test fail on more cells than declared;
	Handle test simple;
	Handle test with timestamp;
	Handle test alias map;
	Get table  with headers

142.29. Add a class for time based UUID generator. It allows to:

	Handle current time millis;
	Get mac address;
	Get base 64 UUID

142.30. Add an interface declaration  for tri function. It allows to:

	Apply S

142.31. Add an interface declaration  for uUID generator. It allows to:

	Get base 64 UUID

142.32. Add a class for uUI ds. It allows to:

	Get base 64 UUID;
	Get legacy base 64 UUID;
	Handle random base 64 UUID;
	Handle random base 64 UUID secure string

142.33. Add a class for validation exception. It allows to:

	Instantiate validation exception;
	Add validation error;
	Add validation errors;
	Get validation errors;
	Get message

143. Changes to package org.elasticsearch.common.blobstore:  

143.1. Add an interface declaration  for blob container. It allows to:

	Get path;
	Handle blob exists;
	Read blob;
	Write blob;
	Write blob atomic;
	Delete blob;
	Delete blobs ignoring  if not exists;
	Delete blob ignoring  if not exists;
	Get list blobs;
	Get list blobs by prefix

143.2. Add an interface declaration  for blob meta data. It allows to:

	Name blob meta data;
	Get length

143.3. Add a class for blob path. It allows to:

	Instantiate blob path;
	Handle clean path;
	Instantiate blob path  with paths list;
	Get iterator;
	Convert blob path to array;
	Add blob path;
	Build blob path as string;
	Convert blob path to string

143.4. Add a class for blob path tests. It allows to:

	Handle test build as string

143.5. Add an interface declaration  for blob store. It allows to:

	Blob container;
	Delete blob path

143.6. Add a class for blob store exception. It allows to:

	Instantiate blob store exception;
	Instantiate blob store exception  with cause throwable;
	Instantiate blob store exception  with stream input

144. Changes to package org.elasticsearch.common.blobstore.fs:  

144.1. Add a class for fs blob container. It allows to:

	Instantiate fs blob container  with fs blob store, blob path, path and path;
	Get list blobs;
	Get list blobs by prefix;
	Delete blob;
	Post visit directory;
	Handle blob exists;
	Read blob;
	Write blob;
	Write blob atomic;
	Move blob atomic;
	Temp blob name;
	Check if fs blob container is temp blob name

144.2. Add a class for fs blob store. It allows to:

	Instantiate fs blob store  with settings, path and path;
	Convert fs blob store to string;
	Get path;
	Buffer size  in bytes;
	Blob container;
	Delete blob path;
	Close fs blob store;
	Build blob path;
	Build path

145. Changes to package org.elasticsearch.common.blobstore.support:  

145.1. Add a class for abstract blob container. It allows to:

	Instantiate abstract blob container  with blob path;
	Get path

145.2. Add a class for plain blob meta data. It allows to:

	Instantiate plain blob meta data;
	Name plain blob meta data;
	Get length;
	Convert plain blob meta data to string

146. Changes to package org.elasticsearch.common.blobstore.url:  

146.1. Add a class for uRL blob container. It allows to:

	Instantiate uRL blob container  with URL blob store, blob path, path URL and path URL;
	Get url;
	Get list blobs;
	Get list blobs by prefix;
	Delete blob;
	Handle blob exists;
	Read blob;
	Write blob;
	Write blob atomic;
	Get input stream

146.2. Add a class for uRL blob store. It allows to:

	Instantiate uRL blob store  with settings, path URL and path URL;
	Convert uRL blob store to string;
	Get path;
	Buffer size  in bytes;
	Blob container;
	Delete blob path;
	Close uRL blob store;
	Build path

146.3. Add a class for uRL blob store tests. It allows to:

	Start http;
	Stop http;
	Handle store setup;
	Handle test URL blob store can read blob;
	Handle test no blob found

147. Changes to package org.elasticsearch.common.breaker:  

147.1. Add a class for child memory circuit breaker. It allows to:

	Instantiate child memory circuit breaker  with breaker settings, logger, parent hierarchy circuit breaker service and parent hierarchy circuit breaker service;
	Instantiate child memory circuit breaker  with breaker settings, old breaker, logger, parent hierarchy circuit breaker service and parent hierarchy circuit breaker service;
	Handle circuit break;
	Add estimate bytes and  maybe break;
	No limit;
	Get limit;
	Add child memory circuit breaker without breaking;
	Used child memory circuit breaker;
	Get overhead;
	Get tripped count;
	Get name;
	Get durability

147.2. Add an interface declaration  for circuit breaker. It allows to:

	Parse value;
	Handle circuit break;
	Add estimate bytes and  maybe break;
	Add circuit breaker without breaking;
	Used circuit breaker;
	Get limit;
	Get overhead;
	Get tripped count;
	Get name;
	Get durability

147.3. Add a class for circuit breaking exception. It allows to:

	Instantiate circuit breaking exception  with stream input;
	Instantiate circuit breaking exception  with circuit breaker durability;
	Write  to stream output;
	Get bytes wanted;
	Get byte limit;
	Get durability;
	Get status;
	Convert metadata

147.4. Add a class for noop circuit breaker. It allows to:

	Instantiate noop circuit breaker;
	Handle circuit break;
	Add estimate bytes and  maybe break;
	Add noop circuit breaker without breaking;
	Used noop circuit breaker;
	Get limit;
	Get overhead;
	Get tripped count;
	Get name;
	Get durability

148. Changes to package org.elasticsearch.common.bytes:  

148.1. Add a class for abstract bytes reference test case. It allows to:

	Handle test get;
	Handle test length;
	Handle test slice;
	Handle test stream input;
	Handle test stream input mark and reset;
	Handle test stream input bulk read with offset;
	Handle test random reads;
	Handle test slice stream input;
	Convert test write;
	Handle test input stream skip;
	Convert test slice write;
	Convert test;
	Handle test copy bytes ref shares bytes;
	Handle test slice copy bytes ref;
	Convert test empty;
	Handle test iterator;
	Handle test slice iterator;
	Handle test iterator random;
	Handle test array offset;
	Handle test slice array offset;
	Convert test slice;
	Handle test hash code;
	Handle test equals;
	Handle test slice equals;
	Handle new bytes reference;
	Handle new bytes reference with offset of zero;
	Convert test compare;
	Get single page or null;
	Get num pages;
	Handle test basic equals;
	Handle test get int;
	Handle test index of

148.2. Add a class for byte buffer reference. It allows to:

	Instantiate byte buffer reference  with byte buffer;
	Get byte buffer reference;
	Get int;
	Get length;
	Get slice;
	Convert byte buffer reference to bytes ref;
	Handle ram bytes used

148.3. Add a class for byte buffer reference tests. It allows to:

	Initialize bytes;
	Handle new bytes reference;
	Handle new bytes reference with offset of zero

148.4. Add a class for bytes array. It allows to:

	Instantiate bytes array;
	Instantiate bytes array  with bytes ref;
	Get bytes array;
	Get length;
	Get slice;
	Get array;
	Offset bytes array;
	Convert bytes array to bytes ref;
	Handle ram bytes used

148.5. Add a class for bytes array tests. It allows to:

	Handle new bytes reference;
	Handle new bytes reference with offset of zero;
	Handle test array;
	Handle test array offset

148.6. Add a class for bytes reference stream input. It allows to:

	Instantiate bytes reference stream input  with bytes ref iterator;
	Read byte;
	Maybe next slice;
	Read bytes;
	Read bytes reference stream input;
	Close bytes reference stream input;
	Handle available;
	Ensure can read bytes;
	Skip bytes reference stream input;
	Offset bytes reference stream input

148.7. Add a class for composite bytes reference. It allows to:

	Instantiate composite bytes reference  with references;
	Get composite bytes reference;
	Get length;
	Get slice;
	Get offset index;
	Convert composite bytes reference to bytes ref;
	Get iterator;
	Handle next;
	Handle ram bytes used

148.8. Add a class for composite bytes reference tests. It allows to:

	Handle new bytes reference;
	Handle new bytes reference with offset of zero;
	Handle new ref list;
	Handle test composite buffer;
	Convert test;
	Handle test slice array offset;
	Convert test slice;
	Handle test slice is not composite if matches single sub slice

148.9. Add a class for paged bytes reference. It allows to:

	Instantiate paged bytes reference  with byte array;
	Get paged bytes reference;
	Get length;
	Get slice;
	Convert paged bytes reference to bytes ref;
	Get iterator;
	Handle ram bytes used

148.10. Add a class for paged bytes reference tests. It allows to:

	Handle new bytes reference;
	Handle new bytes reference with offset of zero;
	Convert test;
	Handle test single page;
	Handle test has single page;
	Handle test equals

148.11. Add a class for releasable paged bytes reference. It allows to:

	Instantiate releasable paged bytes reference  with byte array, releasable and releasable;
	Close releasable paged bytes reference

149. Changes to package org.elasticsearch.common.cache:  

149.1. Add a class for cache builder. It allows to:

	Get builder;
	Instantiate cache builder;
	Set maximum weight;
	Set expire  after access;
	Set expire  after write;
	Get weigher;
	Get removal listener;
	Build cache builder

149.2. Add a class for cache builder tests. It allows to:

	Handle test setting expire after access;
	Handle test setting expire after write

149.3. Add an interface declaration  for cache loader. It allows to:

	Get load

149.4. Add a class for cache tests. It allows to:

	Set cache tests;
	Handle test cache stats;
	Handle test cache evictions;
	Handle test weigher;
	Handle test weight;
	Handle test count;
	Handle test expiration after access;
	Now;
	Handle test simple expire after access;
	Handle test expiration after write;
	Handle test compute if absent after expiration;
	Handle test compute if absent deadlock;
	Handle test promotion;
	Handle test invalidate;
	Handle test notification on invalidate;
	Handle test invalidate with value;
	Handle test notification on invalidate with value;
	Handle test invalidate all;
	Handle test notification on invalidate all;
	Handle test replace recomputes size;
	Handle test notification on replace;
	Handle test compute if absent loads successfully;
	Handle test compute if absent calls once;
	Handle test compute if absent throws exception if loader returns A null value;
	Handle test dependent key deadlock;
	Handle test cache pollution;
	Handle test exception thrown during concurrent compute if absent;
	Handle test torture;
	Handle test remove using values iterator

149.5. Add an interface declaration  for removal listener. It allows to:

	Process removal listener removal listener on removal

149.6. Add a class for removal notification. It allows to:

	Instantiate removal notification  with key, value, removal reason and removal reason;
	Get key;
	Get value;
	Get removal reason

150. Changes to package org.elasticsearch.common.collect:  

150.1. Add a class for evicting queue. It allows to:

	Instantiate evicting queue;
	Remaining capacity;
	Add T;
	Offer T;
	Remove evicting queue;
	Get poll;
	Get element;
	Get peek;
	Get size;
	Check if evicting queue is empty;
	Check if evicting queue contains;
	Get iterator;
	Convert evicting queue to array;
	Check if evicting queue contains all;
	Add collection;
	Remove collection;
	Retain collection;
	Handle clear

150.2. Add a class for evicting queue tests. It allows to:

	Handle test create with negative size;
	Handle test create with zero size;
	Handle test remaining capacity maximum size zero;
	Handle test remaining capacity maximum size one;
	Handle test remaining capacity maximum size three;
	Handle test evicting after one;
	Handle test evicting after three;
	Handle test add all

150.3. Add a class for iterators tests. It allows to:

	Handle test concatentation;
	Handle test no concatenation;
	Handle test empty concatenation;
	Handle test multiple empty concatenation;
	Handle test singleton;
	Handle test empty before singleton;
	Handle test empty after singleton;
	Handle test random singleton;
	Handle test random iterators;
	Test two entries;
	Handle test null;
	Handle test null iterator;
	Handle singleton iterator;
	Assert singleton;
	Handle empty;
	Check if  has next;
	Handle next;
	Assert contains  in order;
	Assert empty iterator;
	Assert no such element exception

150.4. Add a class for map builder. It allows to:

	Handle new map builder;
	Instantiate map builder;
	Instantiate map builder  with map;
	Put map;
	Put key;
	Remove key;
	Handle clear;
	Get key;
	Check if map builder contains key;
	Check if map builder is empty;
	Map map builder;
	Handle immutable map

151. Changes to package org.elasticsearch.common.component:  

151.1. Add a class for abstract lifecycle component. It allows to:

	Instantiate abstract lifecycle component;
	Get lifecycle state;
	Add lifecycle listener;
	Remove lifecycle listener;
	Start abstract lifecycle component;
	Stop abstract lifecycle component;
	Close abstract lifecycle component;
	Do abstract lifecycle component close

151.2. Add a class for lifecycle. It allows to:

	Get state;
	Get initialized;
	Get started;
	Get stopped;
	Get closed;
	Get stopped or closed;
	Handle can move to started;
	Move lifecycle to started;
	Handle can move to stopped;
	Move lifecycle to stopped;
	Handle can move to closed;
	Move lifecycle to closed;
	Convert lifecycle to string

151.3. Add an interface declaration  for lifecycle component. It allows to:

	Get lifecycle state;
	Add lifecycle listener;
	Remove lifecycle listener;
	Start lifecycle component;
	Stop lifecycle component

151.4. Add a class for lifecycle listener. It allows to:

	Process lifecycle listener lifecycle listener before start;
	Process lifecycle listener lifecycle listener after start;
	Process lifecycle listener lifecycle listener before stop;
	Process lifecycle listener lifecycle listener after stop;
	Before lifecycle listener close;
	Process lifecycle listener lifecycle listener after close

152. Changes to package org.elasticsearch.common.compress:  

152.1. Add a class for compressed X content. It allows to:

	Handle crc 32;
	Write;
	Instantiate compressed X content;
	Instantiate compressed X content  with xcontent to content, X content type, to X content params and to X content params;
	Instantiate compressed X content  with data bytes reference;
	Assert consistent;
	Get compressed;
	Get compressed reference;
	Handle uncompressed;
	Get string;
	Read compressed string;
	Write  to stream output;
	Check if compressed X content equals;
	Hash code;
	Convert compressed X content to string

152.2. Add an interface declaration  for compressor. It allows to:

	Check if compressor is compressed;
	Get stream input;
	Get stream output

152.3. Add a class for compressor factory. It allows to:

	Check if compressor factory is compressed;
	Get compressor;
	Check if compressor factory is ancient;
	Handle uncompress if needed;
	Get uncompress;

152.4. Add a class for deflate compress tests. It allows to:

	Handle test random;
	Handle test random threads;
	Run;
	Handle test line docs;
	Handle test line docs threads;
	Handle test repetitions L;
	Handle test repetitions L threads;
	Handle test repetitions I;
	Handle test repetitions I threads;
	Handle test repetitions S;
	Handle test mixed;
	Add  long random;
	Add int;
	Add string;
	Add bytes;
	Handle test repetitions S threads;
	Do test

152.5. Add a class for deflate compressed X content tests. It allows to:

	Equals s 1 compressed content;
	Handle simple tests;
	Handle test random;
	Handle test different compressed representation;
	Handle test hash code

152.6. Add a class for deflate compressor. It allows to:

	Check if deflate compressor is compressed;
	Get stream input;
	Close;
	Get stream output;

152.7. Add a class for not compressed exception. It allows to:

	Instantiate not compressed exception

152.8. Add a class for not X content exception. It allows to:

	Instantiate not X content exception

153. Changes to package org.elasticsearch.common.document:  

153.1. Add a class for document field. It allows to:

	Instantiate document field;
	Instantiate document field  with values list;
	Get name;
	Get value;
	Get values;
	Check if document field is metadata field;
	Get iterator;
	Read document field;
	Read  from stream input;
	Write  to stream output;
	Convert document field to X content;
	Process document field document field from X content;
	Check if document field equals;
	Hash code;
	Convert document field to string

154. Changes to package org.elasticsearch.common.geo:  

154.1. Add a class for base geo parsing test case. It allows to:

	Handle test parse point;
	Handle test parse multi point;
	Handle test parse line string;
	Handle test parse multi line string;
	Handle test parse polygon;
	Handle test parse multi polygon;
	Handle test parse envelope;
	Handle test parse geometry collection;
	Assert valid exception;
	Assert geometry equals;
	Shape collection;
	Get jts geom

154.2. Add a class for geo distance tests. It allows to:

	Handle test geo distance serialization;
	Handle test invalid read from;
	Handle test distance check;
	Get arc distance;
	Get plane distance;
	Handle test arc distance vs plane;
	Handle test arc distance vs plane accuracy

154.3. Add a class for geo hash tests. It allows to:

	Handle test geohash as long routines;
	Handle test bbox from hash;
	Handle test geohash extremes;
	Handle test long geohashes;
	Handle test north pole bounding box;
	Handle test invalid geohashes

154.4. Add a class for geo hash utils. It allows to:

	Instantiate geo hash utils;
	Encode lat lon;
	Encode encode;
	Process geo hash utils geo hash utils from morton;
	Encode geo hash utils;
	String encode  from morton long;
	Bbox geo hash utils;
	Get neighbors;
	Get neighbor;
	Add neighbors;
	Decode longitude;
	Decode latitude;
	Handle unscale lon;
	Handle unscale lat;

154.5. Add a class for geo json shape parser tests. It allows to:

	Handle test parse point;
	Handle test parse line string;
	Handle test parse multi line string;
	Handle test parse circle;
	Handle test parse multi dimension shapes;
	Handle test parse envelope;
	Handle test parse polygon;
	Handle test parse 3 D polygon;
	Handle test invalid dimensional polygon;
	Handle test parse invalid point;
	Handle test parse invalid multipoint;
	Handle test parse invalid multi polygon;
	Handle test parse invalid dimensional multi polygon;
	Handle test parse OGC polygon without holes;
	Handle test parse OGC polygon with holes;
	Handle test parse invalid polygon;
	Handle test parse polygon with hole;
	Handle test parse self crossing polygon;
	Handle test parse multi point;
	Handle test parse multi polygon;
	Handle test parse geometry collection;
	Handle test that parser extracts correct type and coordinates from arbitrary json;
	Handle test parse orientation option;
	Handle test parse invalid shapes;
	Handle test parse invalid geometry collection shapes

154.6. Add a class for geo point. It allows to:

	Instantiate geo point;
	Instantiate geo point  with template geo point;
	Reset geo point;
	Reset lat;
	Reset lon;
	Reset geo point from string;
	Reset geo point from coordinates;
	Reset geo point from index hash;
	Reset indexable field from indexable field;
	Reset geo point from geo hash;
	Get lat;
	Get lon;
	Get geohash;
	Check if geo point equals;
	Hash code;
	Convert geo point to string;
	Parse geo point from lat lon;
	Process geo point geo point from geohash;
	Convert geo point to X content;
	Assert Z value

154.7. Add a class for geo utils. It allows to:

	Check if geo utils is valid latitude;
	Check if geo utils is valid longitude;
	Geo hash cell width;
	Quad tree cell width;
	Geo hash cell height;
	Quad tree cell height;
	Geo hash cell size;
	Quad tree cell size;
	Quad tree levels  for precision;
	Geo hash levels  for precision;
	Normalize lon;
	Normalize lat;
	Normalize point;
	Get centered modulus;
	Parse geo point;
	Parse geo hash;
	Parse geo utils from string;
	Parse precision;
	Check precision range;
	Max radial distance meters;
	Get arc distance;
	Get plane distance;
	Handle rectangle contains point;
	Distance values;
	Handle advance exact;
	Instantiate geo utils

154.8. Add a class for geo WKT shape parser tests. It allows to:

	Convert geo WKT shape parser tests to WKT content;
	Expected shape builder;
	Malformed shape builder;
	Handle test parse point;
	Handle test parse multi point;
	Handle random line string coords;
	Handle test parse line string;
	Handle test parse multi line string;
	Handle test parse polygon;
	Handle test parse multi polygon;
	Handle test parse polygon with hole;
	Handle test parse mixed dimension poly with hole;
	Handle test parse mixed dimension poly with hole stored Z;
	Handle test parse poly with stored Z;
	Handle test parse open polygon;
	Handle test parse self crossing polygon;
	Handle test malformed WKT;
	Handle test parse envelope;
	Handle test invalid geometry type;
	Handle test parse geometry collection;
	Handle test unexpected shape exception

154.9. Add a class for shape builder tests. It allows to:

	Test new point;
	Test new rectangle;
	Test new polygon;
	Test new polygon coordinate;
	Test new polygon coordinates;
	Handle test line string builder;
	Handle test multi line string;
	Handle test polygon self intersection;
	Handle test geo circle;
	Handle test polygon wrapping;
	Handle test line string wrapping;
	Handle test dateline OGC;
	Handle test dateline;
	Handle test complex shape with hole;
	Handle test shape with hole at edge end points;
	Handle test shape with point on dateline;
	Handle test shape with edge along dateline;
	Handle test shape with boundary holes;
	Handle test shape with tangential hole;
	Handle test shape with invalid tangential hole;
	Handle test boundary shape with tangential hole;
	Handle test boundary shape with invalid tangential hole;
	Handle test boundary shape;
	Handle test shape with alternate orientation;
	Handle test invalid shape with consecutive duplicate points;
	Handle test polygon 3 D

154.10. Add a class for shape relation tests. It allows to:

	Handle test valid ordinals;
	Handle testwrite to;
	Handle test read from;
	Handle test invalid read from

154.11. Add a class for shapes availability. It allows to:

	Instantiate shapes availability

154.12. Add a class for spatial strategy tests. It allows to:

	Handle test valid ordinals;
	Handle testwrite to;
	Handle test read from;
	Handle test invalid read from

154.13. Add a class for x shape collection. It allows to:

	Instantiate x shape collection  with shapes list, ctx spatial context and ctx spatial context;
	Handle points only;
	Set points  only

155. Changes to package org.elasticsearch.common.geo.builders:  

155.1. Add a class for abstract shape builder test case. It allows to:

	Handle init;
	Process abstract shape builder test case abstract shape builder test case after class;
	Create test shape builder;
	Create mutation;
	Handle test from X content;
	Handle test serialization;
	Handle test equals and hashcode;
	Copy shape

155.2. Add a class for circle builder. It allows to:

	Instantiate circle builder;
	Instantiate circle builder  with stream input;
	Write  to stream output;
	Get center;
	Get radius;
	Get unit;
	Convert circle builder to X content;
	Build S 4 J;
	Build geometry;
	Get type;
	Convert circle builder to WKT;
	Handle num dimensions;
	Hash code;
	Check if circle builder equals

155.3. Add a class for circle builder tests. It allows to:

	Create test shape builder;
	Create mutation;
	Mutate original circle builder;
	Create random shape

155.4. Add a class for coordinates builder. It allows to:

	Coordinate coordinate;
	Coordinate coordinates builder;
	Check if coordinates builder coordinates;
	Close coordinates builder;
	Build coordinates builder

155.5. Add a class for envelope builder. It allows to:

	Instantiate envelope builder  with top left coordinate, bottom right coordinate and bottom right coordinate;
	Instantiate envelope builder  with stream input;
	Write  to stream output;
	Handle top left;
	Handle bottom right;
	Handle content to WKT;
	Convert envelope builder to X content;
	Build S 4 J;
	Build geometry;
	Get type;
	Handle num dimensions;
	Hash code;
	Check if envelope builder equals

155.6. Add a class for envelope builder tests. It allows to:

	Handle test invalid constructor args;
	Create test shape builder;
	Create mutation;
	Mutate original envelope builder;
	Create random shape

155.7. Add a class for geometry collection builder. It allows to:

	Instantiate geometry collection builder;
	Instantiate geometry collection builder  with stream input;
	Write  to stream output;
	Get shape;
	Get point;
	Get multi point;
	Get line;
	Get multi line;
	Get polygon;
	Get multi polygon;
	Get envelope;
	Get circle;
	Get shape  at;
	Handle num shapes;
	Convert geometry collection builder to X content;
	Handle content to WKT;
	Get type;
	Handle num dimensions;
	Build S 4 J;
	Build geometry;
	Hash code;
	Check if geometry collection builder equals

155.8. Add a class for geometry collection builder tests. It allows to:

	Create test shape builder;
	Create mutation;
	Mutate original geometry collection builder

155.9. Add a class for line string builder. It allows to:

	Instantiate line string builder  with coordinates list;
	Instantiate line string builder  with coordinates builder;
	Instantiate line string builder  with stream input;
	Convert line string builder to X content;
	Close line string builder;
	Get type;
	Handle num dimensions;
	Build S 4 J;
	Build geometry;
	Decompose S 4 J;
	Decompose geometry;
	Decompose coordinates;
	Shift coordinates

155.10. Add a class for line string builder tests. It allows to:

	Handle test invalid constructor args;
	Create test shape builder;
	Create mutation;
	Mutate original line string builder;
	Create random shape

155.11. Add a class for multi line string builder. It allows to:

	Instantiate multi line string builder  with stream input;
	Instantiate multi line string builder;
	Write  to stream output;
	Linestring line string builder;
	Check if multi line string builder coordinates;
	Get type;
	Handle content to WKT;
	Handle num dimensions;
	Convert multi line string builder to X content;
	Build S 4 J;
	Build geometry;
	Hash code;
	Check if multi line string builder equals

155.12. Add a class for multi line string builder tests. It allows to:

	Create test shape builder;
	Create mutation;
	Mutate original multi line string builder;
	Create random shape

155.13. Add a class for multi point builder. It allows to:

	Instantiate multi point builder  with coordinates list;
	Instantiate multi point builder;
	Instantiate multi point builder  with stream input;
	Convert multi point builder to X content;
	Build S 4 J;
	Build geometry;
	Get type;
	Handle num dimensions

155.14. Add a class for multi point builder tests. It allows to:

	Handle test invalid builder exception;
	Create test shape builder;
	Create mutation;
	Mutate original multi point builder;
	Create random shape

155.15. Add a class for multi polygon builder. It allows to:

	Instantiate multi polygon builder;
	Instantiate multi polygon builder  with orientation;
	Instantiate multi polygon builder  with stream input;
	Write  to stream output;
	Get orientation;
	Get polygon;
	Get polygons;
	Convert polygon coordinates;
	Handle content to WKT;
	Convert multi polygon builder to X content;
	Get type;
	Handle num dimensions;
	Build S 4 J;
	Build geometry;
	Hash code;
	Check if multi polygon builder equals

155.16. Add a class for multi polygon builder tests. It allows to:

	Create test shape builder;
	Create mutation;
	Mutate original multi polygon builder;
	Create random shape

155.17. Add a class for point builder. It allows to:

	Instantiate point builder;
	Instantiate point builder  with stream input;
	Coordinate coordinate;
	Get longitude;
	Get latitude;
	Handle new point;
	Convert point builder to X content;
	Build S 4 J;
	Build geometry;
	Get type;
	Handle num dimensions

155.18. Add a class for point builder tests. It allows to:

	Create test shape builder;
	Create mutation;
	Mutate original point builder;
	Create random shape

155.19. Add a class for polygon builder. It allows to:

	Instantiate polygon builder  with line string builder, orientation and orientation;
	Instantiate polygon builder  with coordinates builder, orientation and orientation;
	Instantiate polygon builder  with coordinates builder;
	Instantiate polygon builder  with stream input;
	Write  to stream output;
	Get orientation;
	Get hole;
	Get holes;
	Get shell;
	Close polygon builder;
	Validate linear ring;
	Validate hole;
	Check if polygon builder coordinates;
	Build S 4 J;
	Build geometry;
	Check if polygon builder coordinates array;
	Convert polygon builder to X content;
	Build S 4 J geometry;
	Convert polygon builder to polygon S 4 J;
	Convert polygon builder to polygon geometry;
	Handle linear ring;
	Handle linear ring S 4 J;
	Get type;
	Handle num dimensions;
	Polygon S 4 J;
	Get polygon geometry;
	Handle multipolygon S 4 J;
	Get multipolygon;
	Get component;
	Coordinates components list;
	Get edges;
	Compose edges;
	Assign holes edge;
	Merge intersections edge;
	Connect in edge;
	Create edges;
	Get ring;
	Handle top;
	Get range;
	Get concat;
	Translate points coordinate;
	Handle content to WKT;
	Hash code;
	Check if polygon builder equals

155.20. Add a class for polygon builder tests. It allows to:

	Create test shape builder;
	Create mutation;
	Mutate original polygon builder;
	Mutate polygon builder;
	Poly pb polygon builder with oposing orientation;
	Create random shape;
	Handle test coerce shell;
	Handle test coerce hole;
	Handle test hole that is south of polygon;
	Handle test hole that is north of polygon;
	Handle test wide polygon with confusing orientation;
	Convert test polygon with undefined orientation due

156. Changes to package org.elasticsearch.common.geo.parsers:  

156.1. Add a class for coordinate node. It allows to:

	Instantiate coordinate node  with coordinate;
	Instantiate coordinate node  with children list;
	Check if coordinate node is empty;
	Handle num dimensions;
	Convert coordinate node to X content

156.2. Add a class for geo json parser. It allows to:

	Parse X content parser;
	Coordinates X content parser;
	Coordinate X content parser;
	Parse geometries

156.3. Add a class for geo WKT parser. It allows to:

	Instantiate geo WKT parser;
	Parse X content parser;
	Parse expected type;
	Parse geometry;
	Parse B box;
	Parse point;
	Parse coordinate list;
	Coordinate stream tokenizer;
	Parse multi point;
	Parse line;
	Parse linear ring;
	Parse multi line;
	Parse polygon;
	Parse multi polygon;
	Parse geometry collection;
	Handle next word;
	Handle next number;
	Handle token string;
	Check if geo WKT parser is number next;
	Handle next empty or open;
	Next stream tokenizer closer;
	Handle next comma;
	Next stream tokenizer closer or comma;
	Check EOF

156.4. Add an interface declaration  for shape parser. It allows to:

	Parse X content parser;

157. Changes to package org.elasticsearch.common.hash:  

157.1. Add a class for hash 128. It allows to:

	Get getblock;
	Fmix hash 128;
	Hash hash 128

157.2. Add a class for message digests. It allows to:

	Create thread local message digest;
	Md message digests;
	Get sha 1;
	Get sha 256;
	Get message digest thread local;
	Convert message digests to hex string

157.3. Add a class for message digests tests. It allows to:

	Assert hash;
	Handle test md 5;
	Handle test sha 1;
	Handle test sha 256;
	Convert test

158. Changes to package org.elasticsearch.common.hashing:  

158.1. Add a class for murmur hash 3 tests. It allows to:

	Handle test known values;
	Assert hash;

159. Changes to package org.elasticsearch.common.hppc:  

159.1. Add a class for hppc maps tests. It allows to:

	Handle test intersection;
	Convert hppc maps tests to list

160. Changes to package org.elasticsearch.common.inject:  

160.1. Add a class for abstract module. It allows to:

	Configure builder binder;
	Configure abstract module;
	Get binder;
	Handle bind scope;
	Get bind;
	Get bind constant;
	Install module;
	Add error;
	Handle request injection;
	Handle request static injection;
	Require binding;
	Get provider;
	Convert type matcher to types;
	Handle current stage;
	Get members injector;
	Handle bind listener

160.2. Add a class for abstract processor. It allows to:

	Instantiate abstract processor  with errors;
	Handle process;
	Get visit;

160.3. Add a class for annotation instance strategy. It allows to:

	Instantiate annotation instance strategy  with annotation;
	Check if annotation instance strategy has attributes;
	Process annotation instance strategy annotation instance strategy without attributes;
	Get annotation;
	Get annotation type;
	Check if annotation instance strategy equals;
	Hash code;
	Convert annotation instance strategy to string

Add a local a class for annotation type strategy. It allows to:

	Instantiate annotation type strategy  with annotation type class, annotation and annotation;
	Check if annotation type strategy has attributes;
	Process annotation type strategy annotation type strategy without attributes;
	Get annotation;
	Get annotation type;
	Check if annotation type strategy equals;
	Hash code;
	Convert annotation type strategy to string;
	Check if annotation type strategy is binding annotation;

160.4. Add an interface declaration  for binder. It allows to:

	Handle bind scope;
	Get bind;
	Get bind constant;
	Handle request injection;
	Handle request static injection;
	Install module;
	Handle current stage;
	Add error;
	Get provider;
	Get members injector;
	Convert type matcher to types;
	Handle bind listener;
	Process binder binder with source;
	Skip sources;
	Handle new private binder

160.5. Add an interface declaration  for binding. It allows to:

	Get key;
	Get provider;
	Accept target visitor;
	Accept scoping visitor

160.6. Add a class for bound provider factory. It allows to:

	Instantiate bound provider factory  with injector impl, provider key and provider key;
	Notify errors;
	Get errors;
	Convert bound provider factory to string

160.7. Add a class for configuration exception. It allows to:

	Instantiate configuration exception  with messages iterable;
	Process configuration exception configuration exception with partial value;
	Get error messages;
	Get partial value;
	Get message

160.8. Add a class for constant factory. It allows to:

	Instantiate constant factory  with initializable;
	Get errors;
	Convert constant factory to string

160.9. Add an interface declaration  for construction proxy. It allows to:

	Handle new instance;
	Get injection point;
	Get constructor

160.10. Add an interface declaration  for construction proxy factory. It allows to:

	Create construction proxy factory

160.11. Add a class for constructor injector. It allows to:

	Instantiate constructor injector  with injectable members set, construction proxy, parameter injector, members injector impl and members injector impl;
	Get injectable members;
	Get construction proxy;
	Construct errors

160.12. Add a class for constructor injector store. It allows to:

	Create type literal;
	Instantiate constructor injector store  with injector impl;
	Get key type literal;
	Create constructor

160.13. Add an interface declaration  for contextual callable. It allows to:

	Call internal context

160.14. Add a class for creation exception. It allows to:

	Instantiate creation exception  with messages collection;
	Get error messages;
	Get message

160.15. Add a class for default construction proxy factory. It allows to:

	Instantiate default construction proxy factory  with injection point;
	Create default construction proxy factory;
	Handle new instance;
	Get injection point;
	Get constructor

160.16. Add a class for deferred lookups. It allows to:

	Instantiate deferred lookups  with injector impl;
	Initialize errors;
	Get provider;
	Get members injector

160.17. Add a class for encounter impl. It allows to:

	Instantiate encounter impl  with errors, lookups and lookups;
	Invalidate encounter impl;
	Get members injectors;
	Get injection listeners;
	Register members injector;
	Register injection listener;
	Add error;
	Get provider;
	Get members injector;

160.18. Add a class for exposed key factory. It allows to:

	Instantiate exposed key factory  with key, private elements and private elements;
	Notify errors;
	Get errors

160.19. Add a class for factory proxy. It allows to:

	Instantiate factory proxy  with injector impl, key, target key and target key;
	Notify errors;
	Get errors;
	Convert factory proxy to string

160.20. Add a class for guice. It allows to:

	Instantiate guice;
	Create injector;

160.21. Add a class for inheriting state. It allows to:

	Instantiate inheriting state  with parent state;
	Get parent;
	Get explicit binding;
	Get explicit bindings this level;
	Put binding;
	Get scope;
	Put annotation;
	Get converters this level;
	Add converter;
	Get converter;
	Add type listener;
	Get type listener bindings;
	Handle blacklist;
	Check if inheriting state is blacklisted;
	Handle clear blacklisted;
	Make all bindings  to eager singletons;
	Lock inheriting state

160.22. Add an interface declaration  for initializable. It allows to:

	Get errors

160.23. Add a class for initializables. It allows to:

	O instance;
	Get errors;
	Convert to string

160.24. Add an interface declaration  for injector. It allows to:

	Inject members;
	Get members injector;
	Find bindings  by type;
	Get provider;
	Get instance;

160.25. Add a class for injector builder. It allows to:

	Instantiate injector builder;
	Get stage;
	Add modules;
	Build injector builder;
	Initialize injector builder statically;
	Handle primary injector;
	Inject injector builder dynamically;
	Load eager singletons;
	Call internal context

160.26. Add a class for internal factory to provider adapter. It allows to:

	Instantiate internal factory to provider adapter  with initializable;
	Get errors;
	Convert internal factory to provider adapter to string

160.27. Add a class for lookup processor. It allows to:

	Instantiate lookup processor  with errors;
	Get visit;

160.28. Add an interface declaration  for lookups. It allows to:

	Get provider;
	Get members injector

160.29. Add an interface declaration  for members injector. It allows to:

	Inject members

160.30. Add a class for members injector impl. It allows to:

	Instantiate members injector impl  with injector impl, type literal, encounter impl, member injectors list and member injectors list;
	Get member injectors;
	Inject members;
	Inject instance;
	Call internal context;
	Notify listeners;
	Convert members injector impl to string;
	Get injection points

160.31. Add a class for members injector store. It allows to:

	Create type literal;
	Instantiate members injector store  with injector impl, type listener bindings and type listener bindings;
	Check if members injector store has type listeners;
	Get key type literal;
	Create type literal with listeners;
	Get injectors

160.32. Add a class for message processor. It allows to:

	Instantiate message processor  with errors;
	Get visit;
	Get root message

160.33. Add an interface declaration  for module. It allows to:

	Configure binder

160.34. Add a class for module test case. It allows to:

	Assert instance binding;
	Assert instance binding  with annotation

160.35. Add a class for modules builder. It allows to:

	Add new modules;
	Get iterator;
	Create injector

160.36. Add a class for out of scope exception. It allows to:

	Instantiate out of scope exception;
	Instantiate out of scope exception  with cause throwable;

160.37. Add an interface declaration  for pre process module. It allows to:

	Handle process module

160.38. Add an interface declaration  for private binder. It allows to:

	Expose key;
	Expose type class;
	Expose type literal;
	Process private binder private binder with source;
	Skip sources

160.39. Add a class for private element processor. It allows to:

	Instantiate private element processor  with errors, stage and stage;
	Get visit;
	Get injector shell builders

160.40. Add a class for private module. It allows to:

	Configure binder;
	Configure private module;
	Expose key;
	Expose type class;
	Expose type literal;
	Get binder;
	Get bind;
	Install module;
	Add error;
	Get provider;
	Get members injector;

160.41. Add an interface declaration  for provider. It allows to:

	Get provider

160.42. Add a class for provider to internal factory adapter. It allows to:

	Instantiate provider to internal factory adapter  with injector impl, internal factory and internal factory;
	Get provider to internal factory adapter;
	Call internal context;
	Convert provider to internal factory adapter to string

160.43. Add a class for provision exception. It allows to:

	Instantiate provision exception  with messages iterable;
	Instantiate provision exception  with cause throwable;
	Instantiate provision exception;
	Get error messages;
	Get message

160.44. Add an interface declaration  for scope. It allows to:

	Get scope;
	Convert scope to string

160.45. Add a class for scope binding processor. It allows to:

	Instantiate scope binding processor  with errors;
	Get visit

160.46. Add a class for scopes. It allows to:

	Instantiate scopes;
	Get scope;
	Get;
	Convert to string;
	Make injectable

160.47. Add a class for single field injector. It allows to:

	Instantiate single field injector  with injector impl, injection point, errors and errors;
	Get injection point;
	Inject errors

160.48. Add an interface declaration  for single member injector. It allows to:

	Inject errors;
	Get injection point

160.49. Add a class for single method injector. It allows to:

	Instantiate single method injector  with injector impl, injection point, errors and errors;
	Create method invoker;
	Invoke;
	Get injection point;
	Inject errors

160.50. Add a class for single parameter injector. It allows to:

	Instantiate single parameter injector  with dependency, internal factory and internal factory;
	Inject errors;
	Get errors

160.51. Add an interface declaration  for state. It allows to:

	Get parent;
	Get explicit binding;
	Get explicit bindings this level;
	Put binding;
	Get scope;
	Put annotation;
	Add converter;
	Get converter;
	Get converters this level;
	Add type listener;
	Get type listener bindings;
	Handle blacklist;
	Check if  is blacklisted;
	Handle clear blacklisted;
	Make all bindings  to eager singletons;
	Lock;
	Check if state is blacklisted;
	Lock state;

160.52. Add a class for type converter binding processor. It allows to:

	Instantiate type converter binding processor  with errors;
	Prepare built  in converters;
	Convert to type literal;
	Convert to string;
	Handle matches;
	Convert primitive type class to primitive type;
	Convert type class to class;
	Convert type matcher to classes;
	Handle internal convert to types;
	Get visit

160.53. Add a class for type listener binding processor. It allows to:

	Instantiate type listener binding processor  with errors;
	Get visit

160.54. Add a class for type literal. It allows to:

	Instantiate type literal;
	Instantiate type literal  with type;
	Get superclass type parameter;
	Process type literal type literal from superclass type parameter;
	Get raw type;
	Get type;
	Get provider type;
	Hash code;
	Check if type literal equals;
	Convert type literal to string;
	Get type class;
	Resolve types;
	Resolve to resolve type;
	Resolve type;
	Get supertype;
	Get field type;
	Get parameter types;
	Get exception types;
	Get return type

160.55. Add a class for weak key set. It allows to:

	Add key;
	Check if weak key set contains

161. Changes to package org.elasticsearch.common.inject.assistedinject:  

161.1. Add a class for assisted constructor. It allows to:

	Instantiate assisted constructor  with constructor, parameter types list and parameter types list;
	Get assisted parameters;
	Get all parameters;
	Get declared exceptions;
	Handle new instance;
	Convert assisted constructor to string

161.2. Add a class for factory provider. It allows to:

	Instantiate factory provider  with factory type literal, factory method to constructor map and factory method to constructor map;
	Check declared exceptions match;
	Check if factory provider is constructor exception compatible with factory exeception;
	Get dependencies;
	Get factory provider;
	Invoke method;
	Gather args  for constructor;
	Handle new configuration exception

161.3. Add a class for parameter. It allows to:

	Instantiate parameter  with type, annotations and annotations;
	Check if parameter is provided by factory;
	Get type;
	Convert parameter to string;
	Check if parameter has assisted annotation;
	Get value;
	Get primary binding key;
	Get provided type;
	Check if parameter is provider;
	Get binding  for type;
	Get binding annotation

161.4. Add a class for parameter list key. It allows to:

	Instantiate parameter list key  with param list;
	Instantiate parameter list key  with types;
	Check if parameter list key equals;
	Hash code;
	Convert parameter list key to string

162. Changes to package org.elasticsearch.common.inject.binder:  

162.1. Add an interface declaration  for annotated binding builder. It allows to:

	Get annotated with;

162.2. Add an interface declaration  for annotated constant binding builder. It allows to:

	Get annotated with;

162.3. Add an interface declaration  for annotated element builder. It allows to:

	Get annotated with;

162.4. Add an interface declaration  for constant binding builder. It allows to:

	Process constant binding builder constant binding builder t;

162.5. Add an interface declaration  for linked binding builder. It allows to:

	Process linked binding builder linked binding builder t;
	Convert linked binding builder to instance;
	Convert linked binding builder to provider;

162.6. Add an interface declaration  for scoped binding builder. It allows to:

	I scope annotation class;
	I scope;
	Process scoped binding builder scoped binding builder as eager singleton

163. Changes to package org.elasticsearch.common.inject.internal:  

163.1. Add a class for abstract binding builder. It allows to:

	Instantiate abstract binding builder  with binder, elements list, key and key;
	Get binding;
	Set binding;
	Get annotated with internal;
	I scope annotation class;
	I scope;
	Process abstract binding builder abstract binding builder as eager singleton;
	Handle key type is set;
	Check abstract binding builder not targetted;
	Check abstract binding builder not annotated;
	Check abstract binding builder not scoped

163.2. Add a class for annotations. It allows to:

	Check if annotations is retained at runtime;
	Find scope annotation;
	Check if annotations is scope annotation;
	Check type class for misplaced scope annotations;
	Get key;
	Find binding annotation

163.3. Add a class for binding builder. It allows to:

	Instantiate binding builder  with binder, elements list, key and key;
	Get annotated with;
	Process binding builder binding builder t;
	Convert binding builder to instance;
	Convert binding builder to provider;
	Convert binding builder to string

163.4. Add a class for binding impl. It allows to:

	Instantiate binding impl  with injector, key, internal factory, scoping and scoping;
	Instantiate binding impl  with key, scoping and scoping;
	Get key;
	Get source;
	Get provider;
	Get internal factory;
	Scoping binding impl;
	Check if binding impl is constant;
	Accept visitor;
	Accept scoping visitor;
	Process binding impl binding impl with scoping;
	Process binding impl binding impl with key;
	Convert binding impl to string;
	Get injector

163.5. Add a class for constant binding builder impl. It allows to:

	Instantiate constant binding builder impl  with binder, elements list and elements list;
	Get annotated with;
	Process constant binding builder impl constant binding builder impl t;
	Convert constant binding builder impl to constant;
	Convert constant binding builder impl to string

163.6. Add an interface declaration  for error handler. It allows to:

	Handle errors;
	Handle message

163.7. Add a class for errors exception. It allows to:

	Instantiate errors exception  with errors;
	Get errors

163.8. Add a class for expiration timer

163.9. Add a class for exposed binding impl. It allows to:

	Instantiate exposed binding impl  with injector, key, internal factory, private elements and private elements;
	Instantiate exposed binding impl  with key, scoping, private elements and private elements;
	Accept target visitor;
	Get dependencies;
	Get private elements;
	Process exposed binding impl exposed binding impl with scoping;
	Process exposed binding impl exposed binding impl with key;
	Convert exposed binding impl to string;
	Apply  to binder

163.10. Add a class for exposure builder. It allows to:

	Instantiate exposure builder  with binder, key and key;
	Check exposure builder not annotated;
	Get annotated with;
	Get key;
	Get source;
	Convert exposure builder to string

163.11. Add a class for failable cache. It allows to:

	Create key;
	Get key;
	Get load

163.12. Add a class for instance binding impl. It allows to:

	Instantiate instance binding impl  with injector, key, internal factory, injection points set, instance and instance;
	Instantiate instance binding impl  with key, scoping, injection points set, instance and instance;
	Get provider;
	Accept target visitor;
	Get instance;
	Get injection points;
	Get dependencies;
	Process instance binding impl instance binding impl with scoping;
	Process instance binding impl instance binding impl with key;
	Apply  to binder;
	Convert instance binding impl to string

163.13. Add a class for internal context. It allows to:

	Get construction context;
	Get dependency;
	Set dependency

163.14. Add a class for linked binding impl. It allows to:

	Instantiate linked binding impl  with injector, key, internal factory, scoping, target key and target key;
	Instantiate linked binding impl  with key, scoping, target key and target key;
	Accept target visitor;
	Get linked key;
	Process linked binding impl linked binding impl with scoping;
	Process linked binding impl linked binding impl with key;
	Apply  to binder;
	Convert linked binding impl to string

163.15. Add a class for linked provider binding impl. It allows to:

	Instantiate linked provider binding impl  with injector, key, internal factory, scoping, provider key and provider key;
	Instantiate linked provider binding impl  with key, scoping, provider key and provider key;
	Accept target visitor;
	Get provider key;
	Process linked provider binding impl linked provider binding impl with scoping;
	Process linked provider binding impl linked provider binding impl with key;
	Apply  to binder;
	Convert linked provider binding impl to string

163.16. Add a class for matcher and converter. It allows to:

	Instantiate matcher and converter  with type matcher, type converter and type converter;
	Get type converter;
	Get type matcher;
	Get source;
	Convert matcher and converter to string

163.17. Add a class for nullability. It allows to:

	Instantiate nullability;
	Check if nullability allows null

163.18. Add a class for private elements impl. It allows to:

	Instantiate private elements impl;
	Get source;
	Get elements;
	Get injector;
	Handle init injector;
	Get exposed keys;
	Accept visitor;
	Get elements mutable;
	Add exposure builder;
	Apply  to binder;
	Get exposed source;
	Convert private elements impl to string

163.19. Add a class for provider instance binding impl. It allows to:

	Instantiate provider instance binding impl  with injector, key, internal factory, scoping, provider instance, injection points set and injection points set;
	Instantiate provider instance binding impl  with key, scoping, injection points set, provider instance and provider instance;
	Accept target visitor;
	Get provider instance;
	Get injection points;
	Get dependencies;
	Process provider instance binding impl provider instance binding impl with scoping;
	Process provider instance binding impl provider instance binding impl with key;
	Apply  to binder;
	Convert provider instance binding impl to string

163.20. Add a class for provider method. It allows to:

	Instantiate provider method  with key, method, dependencies set, parameter providers list, scope annotation class and scope annotation class;
	Get key;
	Get method;
	Get instance;
	Configure binder;
	Get provider method;
	Get dependencies

163.21. Add a class for provider methods module. It allows to:

	Instantiate provider methods module;
	Process provider methods module provider methods module for module;
	Process provider methods module provider methods module for object;
	Configure binder;
	Get provider methods;
	Create provider method;
	Get key;
	Check if provider methods module equals;
	Hash code

163.22. Add a class for scoping. It allows to:

	Accept visitor;
	Get scope instance;
	Convert to string;
	Apply  to scoped binding builder;
	Get scope annotation;
	Process scoping scoping for annotation;
	Process scoping scoping for instance;
	Check if scoping is explicitly scoped;
	Check if scoping is no scope;
	Check if scoping is eager singleton;
	Instantiate scoping

163.23. Add a class for source provider. It allows to:

	Instantiate source provider;
	Instantiate source provider  with copy source provider, more classes to skip and more classes to skip;
	Plus skipped classes;
	Get source provider

163.24. Add an object creator class for stack trace elements. It allows to:

	Process stack trace elements stack trace elements for member;
	Process stack trace elements stack trace elements for type

163.25. Add a class for stopwatch. It allows to:

	Reset stopwatch;

163.26. Add a class for strings. It allows to:

	Instantiate strings;
	Capitalize strings

163.27. Add a class for to string builder. It allows to:

	Instantiate to string builder;
	Instantiate to string builder  with type class;
	Add to string builder;
	Convert to string builder to string

163.28. Add a class for unique annotations. It allows to:

	Instantiate unique annotations;
	Create unique annotations;
	Get value;
	Get annotation type;
	Convert to string;
	Check if  equals;
	Hash code

163.29. Add a class for untargetted binding impl. It allows to:

	Instantiate untargetted binding impl  with injector, key and key;
	Get errors;
	Instantiate untargetted binding impl  with key, scoping and scoping;
	Accept target visitor;
	Process untargetted binding impl untargetted binding impl with scoping;
	Process untargetted binding impl untargetted binding impl with key;
	Apply  to binder;
	Convert untargetted binding impl to string

164. Changes to package org.elasticsearch.common.inject.matcher:  

164.1. Add an interface declaration  for matcher. It allows to:

	Handle matches;
	And other matcher;
	O other matcher

165. Changes to package org.elasticsearch.common.inject.multibindings:  

165.1. Add a class for real element. It allows to:

	Instantiate real element;
	Set name;
	Handle unique id;
	Get annotation type;
	Convert real element to string;
	Check if real element equals;
	Hash code

166. Changes to package org.elasticsearch.common.inject.name:  

166.1. Add a class for named impl. It allows to:

	Instantiate named impl;
	Get value;
	Hash code;
	Check if named impl equals;
	Convert named impl to string;
	Get annotation type

166.2. Add a class for names. It allows to:

	Instantiate names;
	Get named;
	Handle bind properties;

167. Changes to package org.elasticsearch.common.inject.spi:  

167.1. Add an interface declaration  for binding scoping visitor. It allows to:

	Visit eager singleton;
	Visit scope;
	Visit scope annotation;
	Visit no scoping

167.2. Add an interface declaration  for binding target visitor. It allows to:

	Get visit;

167.3. Add an interface declaration  for constructor binding. It allows to:

	Get constructor;
	Get injectable members

167.4. Add an interface declaration  for converted constant binding. It allows to:

	Get value;
	Get source key;
	Get dependencies

167.5. Add a class for default binding scoping visitor. It allows to:

	Visit other;
	Visit eager singleton;
	Visit scope;
	Visit scope annotation;
	Visit no scoping

167.6. Add a class for default binding target visitor. It allows to:

	Visit other;
	Get visit;

167.7. Add a class for default element visitor. It allows to:

	Visit other;
	Get visit;

167.8. Add a class for dependency. It allows to:

	Instantiate dependency  with injection point, key and key;
	Get key;
	Process dependency dependency for injection points;
	Check if dependency is nullable;
	Get injection point;
	Get parameter index;
	Hash code;
	Check if dependency equals;
	Convert dependency to string

167.9. Add an interface declaration  for element. It allows to:

	Get source;
	Accept visitor;
	Apply  to binder

167.10. Add an interface declaration  for element visitor. It allows to:

	Get visit;

167.11. Add an interface declaration  for exposed binding. It allows to:

	Get private elements;
	Apply  to binder

167.12. Add an interface declaration  for has dependencies. It allows to:

	Get dependencies

167.13. Add an interface declaration  for injection listener. It allows to:

	Process injection listener injection listener after injection

167.14. Add a class for injection request. It allows to:

	Instantiate injection request  with type literal, instance and instance;
	Get source;
	Get instance;
	Get type;
	Get injection points;
	Accept visitor;
	Apply  to binder

167.15. Add an interface declaration  for instance binding. It allows to:

	Get instance;
	Get injection points

167.16. Add an interface declaration  for linked key binding. It allows to:

	Get linked key

167.17. Add a class for members injector lookup. It allows to:

	Instantiate members injector lookup  with type literal;
	Get source;
	Get type;
	Accept visitor;
	Initialize delegate;
	Apply  to binder;
	Get delegate;
	Get members injector;
	Inject members;
	Convert to string

167.18. Add a class for message. It allows to:

	Instantiate message  with sources list, cause throwable and cause throwable;
	Instantiate message;
	Instantiate message  with cause throwable;
	Get source;
	Get sources;
	Get message;
	Accept visitor;
	Get cause;
	Convert message to string;
	Hash code;
	Check if message equals;
	Apply  to binder

167.19. Add an interface declaration  for private elements. It allows to:

	Get elements;
	Get injector;
	Get exposed keys;
	Get exposed source

167.20. Add an interface declaration  for provider binding. It allows to:

	Get provided key

167.21. Add an interface declaration  for provider instance binding. It allows to:

	Get provider instance;
	Get injection points

167.22. Add an interface declaration  for provider key binding. It allows to:

	Get provider key

167.23. Add an interface declaration  for provider with dependencies

167.24. Add a class for scope binding. It allows to:

	Instantiate scope binding  with annotation type class, scope and scope;
	Get source;
	Get annotation type;
	Get scope;
	Accept visitor;
	Apply  to binder

167.25. Add a class for static injection request. It allows to:

	Instantiate static injection request  with type class;
	Get source;
	Get type;
	Get injection points;
	Apply  to binder;
	Accept visitor

167.26. Add an interface declaration  for type converter. It allows to:

	Convert to type literal

167.27. Add a class for type converter binding. It allows to:

	Instantiate type converter binding  with type matcher, type converter and type converter;
	Get source;
	Get type matcher;
	Get type converter;
	Accept visitor;
	Apply  to binder

167.28. Add an interface declaration  for type encounter. It allows to:

	Add error;
	Get provider;
	Get members injector;
	Register members injector;
	Register injection listener

167.29. Add an interface declaration  for type listener. It allows to:

	Hear type literal

167.30. Add a class for type listener binding. It allows to:

	Instantiate type listener binding  with type listener, type matcher and type matcher;
	Get listener;
	Get type matcher;
	Get source;
	Accept visitor;
	Apply  to binder

167.31. Add an interface declaration  for untargetted binding

168. Changes to package org.elasticsearch.common.inject.util:  

168.1. Add a class for providers. It allows to:

	Instantiate providers;
	O instance;
	Get;
	Convert to string

168.2. Add a class for types. It allows to:

	Instantiate types;
	Handle new parameterized type;
	Handle new parameterized type with owner;
	Get array of;
	Get subtype of;
	Handle supertype of;
	Get list of;
	Set  of element type;
	Map  of key type;
	Get provider of

169. Changes to package org.elasticsearch.common.io:  

169.1. Add a class for channels. It allows to:

	Instantiate channels;
	Read file channel from file channel;
	Read file channel from file channel with eof exception;
	Read single chunk;
	Write writable byte channel to channel;
	Write byte buffer to channel

169.2. Add a class for file system utils. It allows to:

	Instantiate file system utils;
	Check if file system utils exists;
	Check if file system utils is hidden;
	Check if file system utils is desktop services store;
	Append base path;
	Delete sub directories;
	Check if file system utils is accessible directory;
	Handle open file URL stream;
	Get files;
	Convert file system utils to array

169.3. Add a class for file system utils tests. It allows to:

	Copy source files  to target;
	Handle test append;
	Handle test is hidden;
	Handle test open file URL stream;
	Handle test is desktop services store file

169.4. Add a class for path utils for testing. It allows to:

	Handle setup;
	Install mock;
	Handle teardown

169.5. Add a class for streams tests. It allows to:

	Handle test copy from byte array;
	Handle test copy from reader;
	Handle test copy from string;
	Convert test copy;
	Handle test bytes stream input

169.6. Add a class for uTF 8 stream writer. It allows to:

	Instantiate uTF 8 stream writer;
	Set output;
	Write uTF 8 stream writer;
	Write csq char sequence;
	Handle flush;
	Close uTF 8 stream writer;
	Handle flush buffer;
	Reset uTF 8 stream writer

170. Changes to package org.elasticsearch.common.io.stream:  

170.1. Add a class for abstract writeable enum test case. It allows to:

	Instantiate abstract writeable enum test case  with writeable reader;
	Handle test valid ordinals;
	Handle test from string;
	Handle test read from;
	Convert test write;
	Assert write  to stream;
	Assert read  from stream

170.2. Add a class for byte buffer stream input. It allows to:

	Instantiate byte buffer stream input  with byte buffer;
	Read byte buffer stream input;
	Read byte;
	Skip byte buffer stream input;
	Read bytes;
	Read short;
	Read int;
	Read byte buffer stream input long;
	Reset byte buffer stream input;
	Handle available;
	Ensure can read bytes;
	Handle mark;
	Handle mark supported;
	Close byte buffer stream input

170.3. Add a class for bytes stream. It allows to:

	Get bytes

170.4. Add a class for bytes stream output. It allows to:

	Instantiate bytes stream output;
	Instantiate bytes stream output  with big arrays;
	Get position;
	Write byte;
	Write bytes;
	Reset bytes stream output;
	Handle flush;
	Seek bytes stream output;
	Skip bytes stream output;
	Close bytes stream output;
	Get size;
	Get bytes;
	Handle ram bytes used;
	Ensure capacity

170.5. Add a class for data output stream output. It allows to:

	Instantiate data output stream output  with data output;
	Write byte;
	Write bytes;
	Handle flush;
	Reset data output stream output;
	Close data output stream output

170.6. Add a class for filter stream input. It allows to:

	Instantiate filter stream input  with delegate stream input;
	Read byte;
	Read bytes;
	Reset filter stream input;
	Read filter stream input;
	Close filter stream input;
	Handle available;
	Get version;
	Get set version;
	Ensure can read bytes

170.7. Add a class for input stream stream input. It allows to:

	Instantiate input stream stream input  with is input stream;
	Read byte;
	Read bytes;
	Reset input stream stream input;
	Handle mark supported;
	Handle mark;
	Close input stream stream input;
	Handle available;
	Read input stream stream input;
	Skip input stream stream input;
	Ensure can read bytes

170.8. Add an interface declaration  for named writeable. It allows to:

	Get writeable name

170.9. Add a class for named writeable aware stream input. It allows to:

	Instantiate named writeable aware stream input  with delegate stream input, named writeable registry and named writeable registry;
	Read named writeable;

170.10. Add a class for not serializable exception wrapper. It allows to:

	Instantiate not serializable exception wrapper  with other throwable;
	Instantiate not serializable exception wrapper  with stream input;
	Write  to stream output;
	Get exception name;
	Get status

170.11. Add a class for output stream stream output. It allows to:

	Instantiate output stream stream output  with output stream;
	Write byte;
	Write bytes;
	Handle flush;
	Close output stream stream output;
	Reset output stream stream output

170.12. Add a class for releasable bytes stream output. It allows to:

	Instantiate releasable bytes stream output  with bigarrays arrays;
	Instantiate releasable bytes stream output  with big arrays;
	Get bytes;
	Close releasable bytes stream output;
	Ensure capacity;
	Reset releasable bytes stream output

170.13. Add a class for releasable bytes stream output tests. It allows to:

	Handle test release;
	Get random releasable bytes stream output

170.14. Add a class for stream input. It allows to:

	Get version;
	Get set version;
	Read byte;
	Read bytes;
	Read bytes reference;
	Read optional bytes reference;
	Read bytes ref;
	Read stream input fully;
	Read short;
	Read int;
	Read optional int;
	Read V int;
	Read stream input long;
	Read V  long;
	Read Z  long;
	Read optional  long;
	Read optional text;
	Read text;
	Read optional string;
	Read optional float;
	Read optional V int;
	Read string;
	Read float;
	Read double;
	Read optional double;
	Read boolean;
	Read optional boolean;
	Close stream input;
	Handle available;
	Read string array;
	Read optional string array;
	Read map;
	Read map  of lists;
	Read generic value;
	Read instant;
	Read optional instant;
	Read array list;
	Read date time;
	Read zoned date time;
	Read array;
	Read linked hash map;
	Read hash map;
	Read date;
	Read geo point;
	Read time zone;
	Read optional time zone;
	Read zone id;
	Read optional zone id;
	Read int array;
	Read V int array;
	Read stream input long array;
	Read V long array;
	Read float array;
	Read double array;
	Read byte array;
	Read optional array;
	Read optional streamable;
	Read optional writeable;
	Read exception;
	Read named writeable;
	Read optional named writeable;
	Read streamable list;
	Read list;
	Read string list;
	Read set;
	Read collection;
	Read named writeable list;
	Read enum;
	Read enum set;
	Wrap stream input;
	Read array size;
	Ensure can read bytes;
	Read time value;
	Read optional time value

170.15. Add a class for stream output. It allows to:

	Get version;
	Get set version;
	Check if stream output has feature;
	Set features;
	Get position;
	Seek stream output;
	Write byte;
	Write bytes;
	Write byte array;
	Write bytes reference;
	Write optional bytes reference;
	Write bytes ref;
	Write short;
	Write int;
	Write V int;
	Write stream output long;
	Write V  long;
	Write V long no check;
	Write Z  long;
	Write optional  long;
	Write optional string;
	Write optional int;
	Write optional V int;
	Write optional float;
	Write optional text;
	Write text;
	Write string;
	Write float;
	Write double;
	Write optional double;
	Write boolean;
	Write optional boolean;
	Handle flush;
	Close stream output;
	Reset stream output;
	Write stream output;
	Write string array;
	Write string array nullable;
	Write optional string array;
	Write map;
	Write map  with consistent order;
	Write map  of lists;
	Write instant;
	Write optional instant;
	Write generic value;
	Write int array;
	Write V int array;
	Write stream output long array;
	Write V long array;
	Write float array;
	Write double array;
	Write array;
	Write optional array;
	Write optional streamable;
	Write optional writeable;
	Write exception;
	Write named writeable;
	Write optional named writeable;
	Write geo point;
	Write time zone;
	Write zone id;
	Write optional time zone;
	Write optional zone id;
	Write streamable list;
	Write collection;
	Write list;
	Write string collection;
	Write named writeable list;
	Write enum;
	Write enum set;
	Write time value;
	Write optional time value

170.16. Add an interface declaration  for streamable. It allows to:

	Read  from stream input;
	Write  to stream output;
	Handle new writeable reader

171. Changes to package org.elasticsearch.common.joda:  

171.1. Add a class for joda tests. It allows to:

	Handle test basic T time pattern;
	Handle test equals and hashcode

172. Changes to package org.elasticsearch.common.lease:  

172.1. Add an interface declaration  for releasable. It allows to:

	Close releasable

173. Changes to package org.elasticsearch.common.logging:  

173.1. Add a class for deprecation logger. It allows to:

	Set thread context;
	Remove thread context;
	Instantiate deprecation logger  with parent logger;
	Get deprecated;
	Remove eldest entry;
	Get deprecated and maybe log;
	Extract warning value  from warning header;
	Assert warning value;
	Get format warning;
	Escape deprecation logger;
	Escape backslashes and quotes;
	Encode deprecation logger;
	Get hex

173.2. Add a class for deprecation logger tests. It allows to:

	Enable warnings check;
	Handle test adds header with thread context;
	Handle test containing newline;
	Handle test surrogate pair;
	Handle test adds combined header with thread context;
	Handle test can remove thread context;
	Handle test ignores closed thread context;
	Handle test safe without thread context;
	Handle test fails without thread context set;
	Handle test fails when double setting same thread context;
	Handle test fails when removing unknown thread context;
	Handle test warning value from warning header;
	Handle test escape backslashes and quotes;
	Handle test encode;
	Handle test warning header count setting;
	Handle test warning header size setting;
	Handle test log permissions;
	Get logger;
	Get context;
	Get range

173.3. Add a class for evil logger configuration tests. It allows to:

	Set evil logger configuration tests;
	Tear evil logger configuration tests;
	Handle test resolve multiple configs;
	Handle test defaults;
	Handle test resolve order;
	Handle test hierarchy;
	Handle test missing config file;
	Handle test logging levels from settings

173.4. Add a class for evil logger tests. It allows to:

	Set evil logger tests;
	Tear evil logger tests;
	Handle test location info test;
	Handle test deprecation logger;
	Handle test concurrent deprecation logger;
	Handle test deprecation logger maybe log;
	Handle test deprecated settings;
	Handle test find appender;
	Handle test prefix logger;
	Handle test prefix logger markers can be collected;
	Handle test properties;
	Handle test no node name in pattern warning;
	Handle setup logging;
	Assert log line

173.5. Add a class for log configurator. It allows to:

	Log status data;
	Register error listener;
	Configure settings without config;
	Configure environment;
	Load log 4 j plugins;
	Set node name;
	Check error listener;
	Handle error listener is registered;
	Configure settings;
	Get configuration;
	Visit file;
	Configure status logger;
	Configure logger levels;
	Set log configuration system property

173.6. Add a class for logger message format. It allows to:

	Get format;
	Check if logger message format is escaped delimiter;
	Check if logger message format is double escaped;
	Deeply append parameter;
	Handle safe object append;
	Object array  append sbuf string builder;
	Handle boolean array append;
	Byte array  append sbuf string builder;
	Char array  append sbuf string builder;
	Handle short array append;
	Handle int array append;
	Long array append;
	Float array  append sbuf string builder;
	Handle double array append

173.7. Add a class for loggers. It allows to:

	Get logger;
	Get format prefix;
	Set level;
	Add appender;
	Remove appender;
	Find appender

173.8. Add a class for prefix logger. It allows to:

	Get markers size;
	Prefix prefix logger;
	Instantiate prefix logger  with logger;
	Log message

174. Changes to package org.elasticsearch.common.lucene:  

174.1. Add a class for bytes refs. It allows to:

	Convert bytes refs to string;
	Convert bytes refs to bytes ref;

174.2. Add a class for logger info stream. It allows to:

	Instantiate logger info stream  with parent logger;
	Handle message;
	Check if logger info stream is enabled;
	Get logger;
	Close logger info stream

174.3. Add a class for lucene tests. It allows to:

	Handle test wait for index;
	Run;
	Handle test clean index;
	Handle test prune unreferenced files;
	Handle test files;
	Handle test num docs;
	Handle test count;
	Handle test as sequential access bits;
	Handle test M map hack supported;
	Handle test wrap all docs live;
	Handle test wrap live docs not expose aborted documents;
	Handle test sort field serialization;
	Handle test sort value serialization;
	Handle random sort value;
	Handle random sort field;
	Handle random sort field custom comparator source;
	Handle random custom sort field;
	Handle random missing value

174.4. Add a class for minimum score collector. It allows to:

	Instantiate minimum score collector  with collector;
	Set scorer;
	Collect minimum score collector;
	Do set next reader;
	Score mode

174.5. Add an interface declaration  for scorer aware. It allows to:

	Set scorer

174.6. Add a class for shard core key map. It allows to:

	Instantiate shard core key map;
	Add leaf reader;
	Get shard id;
	Get core keys  for index;
	Get size;
	Assert size

174.7. Add a class for shard core key map tests. It allows to:

	Handle test missing shard;
	Handle test adding A closed reader;
	Handle test basics

175. Changes to package org.elasticsearch.common.lucene.index:  

175.1. Add a class for eS directory reader tests. It allows to:

	Handle test core cache key

175.2. Add a class for elasticsearch leaf reader. It allows to:

	Instantiate elasticsearch leaf reader  with in leaf reader, shard id and shard id;
	Shard id;
	Get core cache helper;
	Get reader cache helper;
	Get elasticsearch leaf reader

175.3. Add a class for freq terms enum. It allows to:

	Instantiate freq terms enum  with index reader, filter query, big arrays and big arrays;
	Seek exact;
	Close freq terms enum

176. Changes to package org.elasticsearch.common.lucene.search:  

176.1. Add a class for filtered collector. It allows to:

	Instantiate filtered collector  with collector, filter weight and filter weight;
	Get leaf collector;
	Collect;
	Score mode

176.2. Add a class for more like this query. It allows to:

	Instantiate more like this query;
	Instantiate more like this query  with analyzer;
	Hash code;
	Check if more like this query equals;
	Rewrite index reader;
	Create query;
	Handle  unlike mlt more like this;
	Convert more like this query to string;
	Get more like this query like text;
	Get more like this query like texts;
	Set more like this query like text;
	Get more like this query like fields;
	Set like fields like fields;
	Set like text list like text;
	Set unlike fields unlike fields;
	Set more like this query unlike text;
	Get more  like fields;
	Set more  like fields;
	Get similarity;
	Set similarity;
	Get analyzer;
	Set analyzer;
	Get minimum should match;
	Get set minimum should match;
	Get min term frequency;
	Set min term frequency;
	Get max query terms;
	Set max query terms;
	Get stop words;
	Set stop words;
	Get min doc freq;
	Set min doc freq;
	Get more like this query;
	Set more like this query;
	Get min word len;
	Set min word len;
	Get max word len;
	Set max word len;
	Check if more like this query is boost terms;
	Set boost terms;
	Get boost terms factor;
	Set boost terms factor

176.3. Add a class for multi phrase prefix query. It allows to:

	Instantiate multi phrase prefix query;
	Set slop;
	Set max expansions;
	Get slop;
	Add term;
	Add terms;
	Get terms;
	Get positions;
	Rewrite index reader;
	Get prefix terms;
	Convert multi phrase prefix query to string;
	Check if multi phrase prefix query equals;
	Hash code;
	Get term arrays hash code;
	Handle term arrays equals;
	Get field

176.4. Add a class for multi phrase prefix query tests. It allows to:

	Handle test simple

176.5. Add a class for queries. It allows to:

	Handle new match all query;
	Handle new match no docs query;
	Handle new unmapped field query;
	Handle new lenient field query;
	Handle new nested filter;
	Handle new non nested filter;
	Get filtered;
	Not queries;
	Check if queries is negative query;
	Fix negative query  if needed;
	Apply minimum should match;
	Maybe apply minimum should match;
	Calculate min should match

177. Changes to package org.elasticsearch.common.lucene.search.function:  

177.1. Add a class for field value factor function. It allows to:

	Instantiate field value factor function  with modifier type, missing double, index numeric field data and index numeric field data;
	Get leaf score function;
	Get score;
	Explain score;
	Handle needs scores;
	Equals other score function;
	Do hash code;
	Apply field value factor function;
	Write  to stream output;
	Read stream input from stream;
	Convert field value factor function to string;
	Process field value factor function field value factor function from string

177.2. Add a class for leaf score function. It allows to:

	Get score;
	Explain score

177.3. Add a class for min score scorer. It allows to:

	Instantiate min score scorer  with weight, scorer and scorer;
	Get scorer;
	Get doc ID;
	Get score;
	Get advance shallow;
	Get max score;
	Get iterator;
	Two phase iterator;
	Handle matches;
	Match cost

177.4. Add a class for min score scorer tests. It allows to:

	Get iterator;
	Handle next doc;
	Get doc ID;
	Get cost;
	Get advance;
	Handle fake weight;
	Extract terms;
	Explain leaf reader context;
	Get scorer;
	Check if  is cacheable;
	Two phase iterator;
	Handle matches;
	Match cost;
	Get score;
	Get max score;
	Do test random;
	Handle test regular iterator;
	Test two phase iterator

177.5. Add a class for random score function. It allows to:

	Instantiate random score function  with uid field data;
	Get leaf score function;
	Get score;
	Explain score;
	Handle needs scores;
	Equals other score function;
	Do hash code

177.6. Add a class for score function. It allows to:

	Instantiate score function  with score combiner function;
	Get default score combiner;
	Get leaf score function;
	Handle needs scores;
	Check if score function equals;
	Get weight;
	Equals other score function;
	Hash code;
	Do hash code;
	Rewrite index reader

178. Changes to package org.elasticsearch.common.lucene.search.morelikethis:  

178.1. Add a class for more like this query tests. It allows to:

	Handle test simple

178.2. Add a class for x more like this tests. It allows to:

	Add doc;
	Handle test top N;
	Generate str seq

179. Changes to package org.elasticsearch.common.lucene.store:  

179.1. Add a class for byte array index input. It allows to:

	Instantiate byte array index input;
	Close byte array index input;
	Get file pointer;
	Seek byte array index input;
	Get length;
	Get slice;
	Read byte;
	Read bytes

179.2. Add a class for byte array index input tests. It allows to:

	Handle test random reads;
	Handle test random overflow;
	Handle test seek overflow;
	Handle random read and slice

179.3. Add a class for filter index output. It allows to:

	Instantiate filter index output  with index output;
	Close filter index output;
	Get file pointer;
	Get checksum;
	Write byte;
	Write bytes

179.4. Add a class for index output output stream. It allows to:

	Instantiate index output output stream  with index output;
	Write index output output stream;
	Close index output output stream

179.5. Add a class for input stream index input. It allows to:

	Instantiate input stream index input  with index input;
	Handle actual size to read;
	Read input stream index input;
	Handle mark supported;
	Handle mark;
	Reset input stream index input

179.6. Add a class for input stream index input tests. It allows to:

	Handle test single read single byte limit;
	Handle test read multi single byte limit 1;
	Handle test single read two bytes limit;
	Handle test read multi two bytes limit 1;
	Handle test read multi four bytes limit;
	Handle test mark rest

180. Changes to package org.elasticsearch.common.lucene.uid:  

180.1. Add a class for per thread ID version and seq no lookup. It allows to:

	Instantiate per thread ID version and seq no lookup  with leaf reader;
	Lookup version;
	Get doc ID;
	Lookup id bytes ref

180.2. Add a class for version lookup tests. It allows to:

	Handle test simple;
	Test two documents

180.3. Add a class for versions

180.4. Add a class for versions tests. It allows to:

	Reopen directory reader;
	Handle test versions;
	Handle test nested documents;
	Handle test cache;
	Handle test cache filter reader;
	Handle test lucene version on unknown versions

181. Changes to package org.elasticsearch.common.metrics:  

181.1. Add a class for counter metric. It allows to:

	Handle inc;
	Handle dec;
	Get count

181.2. Add a class for mean metric. It allows to:

	Handle inc;
	Handle dec;
	Get count;
	Get sum;
	Mean mean metric;
	Handle clear

181.3. Add an interface declaration  for metric

182. Changes to package org.elasticsearch.common.network:  

182.1. Add a class for cidrs. It allows to:

	Instantiate cidrs;
	Cidr mask  to min max;
	Convert long;
	Convert octets;
	Create CIDR

182.2. Add a class for cidrs tests. It allows to:

	Handle test null cidr;
	Handle test splitting slash;
	Handle test splitting dot;
	Handle test valid specific cases;
	Handle test invalid specific octet cases;
	Handle test invalid specific network mask cases;
	Handle test valid combinations;
	Handle test invalid combinations;
	Handle test random valid combinations;
	Handle random long in I pv 4 range

182.3. Add a class for if config. It allows to:

	Log if config if necessary;
	Logging if config;
	Get format address;
	Get format flags

182.4. Add a class for inet addresses. It allows to:

	Check if inet addresses is inet address;
	Ip string  to bytes;
	Convert dotted quad  to hex;
	Convert text;
	Parse octet;
	Parse hextet;
	Convert inet addresses to uri string;
	Convert inet addresses to addr string;
	Compress longest run  of zeroes;
	Convert hextets;
	Process inet addresses inet addresses for string;
	Convert bytes;
	Parse cidr

182.5. Add a class for inet addresses tests. It allows to:

	Handle test for string bogus input;
	Handle test 3 ff 31;
	Handle test for string I pv 4 input;
	Handle test for string I pv 6 input;
	Handle test for string I pv 6 eight colons;
	Convert test convert dotted quad;
	Convert test;
	Handle test parse cidr

182.6. Add a class for network address. It allows to:

	Instantiate network address;
	Get format;

182.7. Add a class for network address tests. It allows to:

	Handle test format V 4;
	Handle test format V 6;
	Handle test format port V 4;
	Handle test format port V 6;
	Handle test no scope ID;
	Handle test round trip V 4;
	Handle test round trip V 6;
	Round trip;
	Forge network address tests;
	Scoped network address tests

182.8. Add a class for network service tests. It allows to:

	Handle test bind multicast V 4;
	Handle test bind multicast V 6;
	Handle test publish multicast V 4;
	Handle test publish multicast V 6;
	Handle test bind any local V 4;
	Handle test bind any local V 6;
	Handle test publish any local V 4;
	Handle test publish any local V 6;
	Handle test bind multiple addresses;
	Handle test bind multiple addresses with wildcard

182.9. Add a class for network utils. It allows to:

	Instantiate network utils;
	Get sort key;
	Handle sort addresses;
	Compare left inet address;
	Get interfaces;
	Compare left network interface;
	Add all interfaces;
	Handle default reuse address;
	Get loopback addresses;
	Get site local addresses;
	Get global addresses;
	Get all addresses;
	Get addresses  for interface;
	Get filter IPV 4;
	Get filter IPV 6

182.10. Add a class for network utils tests. It allows to:

	Handle test sort key;
	Handle test sort key site local;
	Handle test sort key link local;
	Handle test filter;
	Handle test address interface lookup;
	Handle test non existing interface

183. Changes to package org.elasticsearch.common.path:  

183.1. Add a class for path trie tests. It allows to:

	Decode;
	Handle test path;
	Handle test empty path;
	Handle test different names on different path;
	Handle test same name on different path;
	Handle test prefer non wildcard execution;
	Handle test wildcard matching modes;
	Handle test explicit matching mode;
	Handle test same path concrete resolution;
	Handle test named wildcard and lookup with wildcard;
	Handle test escaped slash within url

184. Changes to package org.elasticsearch.common.recycler:  

184.1. Add a class for abstract recycler. It allows to:

	Instantiate abstract recycler  with recycler C;
	Close abstract recycler

184.2. Add a class for abstract recycler C. It allows to:

	Handle new instance;
	Recycle value;
	Destroy value

184.3. Add a class for abstract recycler test case. It allows to:

	Handle new instance;
	Recycle;
	Destroy;
	Assert fresh;
	Assert recycled;
	Assert dead;
	Handle new recycler;
	Handle test reuse;
	Handle test recycle;
	Handle test double release;
	Handle test destroy when over capacity;
	Handle test close

184.4. Add a class for concurrent deque recycler. It allows to:

	Instantiate concurrent deque recycler  with C;
	Close concurrent deque recycler;
	Obtain concurrent deque recycler;
	Process concurrent deque recycler concurrent deque recycler before release;
	Process concurrent deque recycler concurrent deque recycler after release

184.5. Add a class for concurrent recycler tests. It allows to:

	Handle new recycler

184.6. Add a class for filter recycler. It allows to:

	Get delegate;
	Wrap delegate recycler;
	Obtain filter recycler;
	Close filter recycler

184.7. Add a class for locked recycler tests. It allows to:

	Handle new recycler

184.8. Add a class for none recycler tests. It allows to:

	Handle new recycler;
	Assert recycled;
	Assert dead

184.9. Add a class for queue recycler tests. It allows to:

	Handle new recycler

185. Changes to package org.elasticsearch.common.regex:  

185.1. Add a class for regex. It allows to:

	Check if regex is simple match pattern;
	Check if regex is match all pattern;
	Handle simple match to automaton;
	Handle simple match;
	Compile regex;
	Get flags from string;
	Convert flags

185.2. Add a class for regex tests. It allows to:

	Handle test flags;
	Handle test double wildcard match

186. Changes to package org.elasticsearch.common.rounding:  

186.1. Add a class for date time unit tests. It allows to:

	Handle test enum ids;
	Handle test conversion

186.2. Add a class for time zone rounding tests. It allows to:

	Handle test UTC time unit rounding;
	Handle test UTC interval rounding;
	Handle test time interval rounding;
	Handle test day interval rounding;
	Handle test day rounding;
	Handle test time rounding;
	Handle test time unit rounding DST;
	Handle test rounding random;
	Handle nasty date;
	Handle test time interval CET DST end;
	Handle test time interval CET DST start;
	Handle test time interval kathmandu DST start;
	Handle test interval rounding not divisible inteval;
	Handle test interval rounding half day DST;
	Handle test interval rounding random;
	Handle test interval rounding monotonic CET;
	Handle test ambiguous hours after DST switch;
	Handle test lenient conversion DST;
	Handle test edge cases transition;
	Test DST europe rome;
	Handle test DST america st johns;
	Handle test DST END edgecases;
	Handle tests time zone parsing;
	Assert interval;
	Check if time zone rounding tests is time with well defined rounding;
	Get date between;
	Handle random time unit;
	Get time;
	Check if time zone rounding tests is date;
	Check if  matches safely;
	Describe  to description;
	Describe mismatch  safely mismatch description

187. Changes to package org.elasticsearch.common.settings:  

187.1. Add a class for add file key store command. It allows to:

	Instantiate add file key store command;
	Execute terminal;
	Get path

187.2. Add a class for add file key store command tests. It allows to:

	Handle new command;
	Create env;
	Create random file;
	Add file;
	Handle test missing prompt create;
	Handle test missing force create;
	Handle test missing no create;
	Handle test overwrite prompt default;
	Handle test overwrite prompt explicit no;
	Handle test overwrite prompt explicit yes;
	Handle test overwrite force short;
	Handle test overwrite force long;
	Handle test force non existent;
	Handle test missing setting name;
	Handle test missing file name;
	Handle test file DNE;
	Handle test extra arguments

187.3. Add a class for add string key store command. It allows to:

	Instantiate add string key store command;
	Get stdin;
	Execute terminal

187.4. Add a class for add string key store command tests. It allows to:

	Handle new command;
	Create env;
	Get stdin;
	Handle test missing prompt create;
	Handle test missing force create;
	Handle test missing no create;
	Handle test overwrite prompt default;
	Handle test overwrite prompt explicit no;
	Handle test overwrite prompt explicit yes;
	Handle test overwrite force short;
	Handle test overwrite force long;
	Handle test force non existent;
	Handle test prompt for value;
	Handle test stdin short;
	Handle test stdin long;
	Handle test stdin no input;
	Handle test stdin input with line breaks;
	Handle test stdin input with carriage return;
	Handle test add utf 8 string;
	Handle test missing setting name;
	Handle test upper case in name;
	Set input

187.5. Add a class for create key store command. It allows to:

	Instantiate create key store command;
	Execute terminal

187.6. Add a class for create key store command tests. It allows to:

	Handle new command;
	Create env;
	Handle test posix;
	Handle test not posix;
	Handle test overwrite

187.7. Add a class for index scoped settings. It allows to:

	Instantiate index scoped settings  with settings, settings set and settings set;
	Instantiate index scoped settings  with settings, other index scoped settings, index meta data and index meta data;
	Get copy;
	Validate setting key;
	Check if index scoped settings is private setting

187.8. Add a class for key store cli. It allows to:

	Instantiate key store cli;
	Handle main

187.9. Add a class for key store command test case. It allows to:

	Close mock file systems;
	Handle setup env;
	Get setup env;
	Create keystore;
	Load keystore;
	Assert secure string;
	Assert secure file;

187.10. Add a class for key store wrapper tests. It allows to:

	Close mock file systems;
	Handle setup env;
	Handle test file setting exhaustive bytes;
	Handle test create;
	Handle test decrypt key store with wrong password;
	Handle test can not read string from closed keystore;
	Handle test upgrade noop;
	Handle test fail when can not consume secret stream;
	Handle test fail when can not consume encrypted bytes stream;
	Handle test fail when secret stream not consumed;
	Handle test fail when encrypted bytes stream is not consumed;
	Get cipher stream;
	Possibly alter secret string;
	Possibly alter encrypted bytes;
	Handle test upgrade adds seed;
	Handle test illegal setting name;
	Handle test backcompat V 1;
	Convert test backcompat V

187.11. Add a class for list key store command. It allows to:

	Instantiate list key store command;
	Execute terminal

187.12. Add a class for list key store command tests. It allows to:

	Handle new command;
	Create env;
	Handle test missing;
	Handle test empty;
	Test list key store command tests;
	Handle test multiple

187.13. Add a class for memory size settings tests. It allows to:

	Handle test page cache limit heap setting;
	Handle test index buffer size setting;
	Handle test query cache size setting;
	Handle test indices request cache setting;
	Handle test circuit breaker settings;
	Handle test indices field data cache setting;
	Assert memory size setting

187.14. Add a class for mock secure settings. It allows to:

	Instantiate mock secure settings;
	Instantiate mock secure settings  with source mock secure settings;
	Check if mock secure settings is loaded;
	Get setting names;
	Get string;
	Get file;
	Set string;
	Set file;
	Merge mock secure settings;
	Close mock secure settings;
	Ensure open;
	Clone mock secure settings

187.15. Add a class for no class settings exception. It allows to:

	Instantiate no class settings exception  with cause throwable;
	Instantiate no class settings exception  with stream input

187.16. Add a class for remove setting key store command. It allows to:

	Instantiate remove setting key store command;
	Execute terminal

187.17. Add a class for remove setting key store command tests. It allows to:

	Handle new command;
	Create env;
	Handle test missing;
	Handle test no settings;
	Handle test non existent setting;
	Test remove setting key store command tests;
	Test many

187.18. Add a class for scoped settings tests. It allows to:

	Handle test reset setting;
	Handle test reset setting with IP validator;
	Handle test noop settings update;
	Handle test add consumer;
	Handle test dependent settings;
	Handle test dependent settings with fallback;
	Handle test tuple affix update consumer;
	Handle test affix group update consumer;
	Handle test add consumer affix;
	Handle test add consumer affix map;
	Handle test affix map consumer not called with null;
	Handle test apply;
	Handle test get;
	Handle test is dynamic;
	Handle test is final;
	Handle test diff;
	Handle test diff with affix and complex matcher;
	Handle test update tracer;
	Handle test get setting;
	Handle test validate with suggestion;
	Handle test validate;
	Handle test validate secure settings;
	Handle test diff secure settings;
	Handle new index meta;
	Handle test key pattern;
	Handle test affix key pattern;
	Handle test logging updates;
	Convert test fallback;
	Handle test overlapping complex match settings;
	Handle test update number of shards fail;
	Handle test final setting update fail;
	Handle test internal index settings fails validation;
	Handle test private index settings fails validation;
	Handle test internal index settings skip validation;
	Handle test private index settings skip validation;
	Handle test upgrade setting;
	Setting;
	Get key;
	Get value;
	Handle test upgrade settings no changes preserves instance;
	Handle test upgrade complex setting;
	Handle test upgrade list setting;
	Get list value

187.19. Add an interface declaration  for secure settings. It allows to:

	Check if secure settings is loaded;
	Get setting names;
	Get string;
	Get file;
	Close secure settings

187.20. Add a class for secure string. It allows to:

	Instantiate secure string;
	Check if secure string equals;
	Hash code;
	Get length;
	Char secure string at;
	Get sub sequence;
	Convert secure string to string;
	Close secure string;
	Clone secure string;
	Get chars;
	Ensure secure string not closed

187.21. Add a class for secure string tests. It allows to:

	Handle test closeable chars does not modify secure string;
	Handle test closing secure string does not modify closeable chars;
	Handle test closing chars;
	Handle test get closeable chars after secure string closed;
	Assert secure string equal  to chars

187.22. Add a class for settings exception. It allows to:

	Instantiate settings exception;
	Instantiate settings exception  with cause throwable;
	Instantiate settings exception  with stream input;

187.23. Add a class for settings filter. It allows to:

	Instantiate settings filter  with patterns collection;
	Get patterns;
	Check if settings filter is valid pattern;
	Add filter setting params;
	Get filter settings;
	Get filter;

187.24. Add a class for settings filter tests. It allows to:

	Handle test adding and removing filters;
	Handle test settings filtering;
	Handle test filtered setting is not logged;
	Handle test regular setting update is fully logged;
	Assert expected log messages;
	Handle test filtering

187.25. Add a class for settings module. It allows to:

	Instantiate settings module  with settings, additional settings and additional settings;
	Instantiate settings module  with settings, additional settings list, settings filter list, setting upgraders and setting upgraders;
	Configure binder;
	Setting setting;
	Register settings filter;
	Get settings;
	Get index scoped settings;
	Get cluster settings;
	Get settings filter

187.26. Add a class for settings module tests. It allows to:

	Handle test validate;
	Handle test register settings;
	Handle test logger settings;
	Handle test register settings filter;
	Handle test mutually exclusive scopes;
	Handle test old max clause count setting

187.27. Add a class for settings tests. It allows to:

	Handle test replace properties placeholder system property;
	Handle test replace properties placeholder system property list;
	Handle test replace properties placeholder system variables have no effect;
	Handle test replace properties placeholder by environment variables;
	Handle test get as settings;
	Handle test mult level get prefix;
	Handle test names;
	Handle test that arrays are overridden correctly;
	Handle test prefix normalization;
	Handle test filtered map;
	Handle test prefix map;
	Handle test secure settings prefix;
	Handle test group prefix;
	Handle test empty filter map;
	Handle test empty;
	Convert test write settings;
	Handle test secure setting conflict;
	Handle test secure setting illegal name;
	Handle test get as array fails on duplicates;
	Convert test;
	Handle test simple json settings;
	Handle test load empty stream;
	Handle test simple yaml settings;
	Handle test yaml legacy list;
	Handle test indentation;
	Handle test indentation with explicit document start;
	Handle test missing value;
	Handle test read write array;
	Handle test copy;
	Handle test fractional time value;
	Handle test fractional byte size value;
	Handle test set by time unit

188. Changes to package org.elasticsearch.common.text:  

188.1. Add a class for text. It allows to:

	Convert text from string array;
	Instantiate text  with bytes reference;
	Instantiate text;
	Check if text has bytes;
	Get bytes;
	Check if text has string;
	Get string;
	Convert text to string;
	Hash code;
	Check if text equals;
	Compare  to text;
	Convert text to X content

189. Changes to package org.elasticsearch.common.transport:  

189.1. Add a class for bound transport address. It allows to:

	Instantiate bound transport address;
	Instantiate bound transport address  with bound addresses, publish address and publish address;
	Get bound addresses;
	Publish address;
	Read bound transport address;
	Read  from stream input;
	Write  to stream output;
	Convert bound transport address to string

189.2. Add a class for bound transport address tests. It allows to:

	Handle test serialization;
	Handle test bad bound address array

189.3. Add a class for network exception helper. It allows to:

	Check if network exception helper is connect exception;
	Check if network exception helper is close connection exception

189.4. Add a class for transport address. It allows to:

	Instantiate transport address  with inet address;
	Instantiate transport address  with inet socket address;
	Instantiate transport address  with stream input;
	Write  to stream output;
	Get address;
	Get port;
	Check if transport address equals;
	Hash code;
	Convert transport address to string;
	Convert transport address to X content

190. Changes to package org.elasticsearch.common.unit:  

190.1. Add a class for byte size unit tests. It allows to:

	Handle test bytes;
	Handle test KB;
	Handle test MB;
	Handle test GB;
	Handle test TB;
	Handle test PB;
	Convert test;
	Handle test serialization;
	Handle test from unknown id

190.2. Add a class for byte size value. It allows to:

	Instantiate byte size value  with stream input;
	Write  to stream output;
	Instantiate byte size value;
	Instantiate byte size value  with byte size unit;
	Get size;
	Get unit;
	Get bytes as int;
	Get bytes;
	Get byte size value;
	Get byte size value tb;
	Get mb frac;
	Get gb frac;
	Get tb frac;
	Get pb frac;
	Get string rep;
	Convert byte size value to string;
	Parse bytes size value;
	Parse byte size unit;
	Check if byte size value equals;
	Hash code;
	Compare  to other byte size value;
	Convert byte size value to X content

190.3. Add a class for byte size value tests. It allows to:

	Test actual peta;
	Test actual tera;
	Test actual;
	Handle test simple;
	Handle test equality;
	Convert test;
	Handle test parsing;
	Handle test fail on missing units;
	Handle test fail on unknown units;
	Handle test fail on empty parsing;
	Handle test fail on empty number parsing;
	Handle test no dots allowed;
	Handle test compare equality;
	Handle test compare value;
	Handle test compare units;
	Test byte size value tests out of range;
	Handle test conversion hash code;
	Create test instance;
	Get instance reader;
	Mutate instance;
	Handle test parse;
	Handle test parse invalid value;
	Handle test parse default value;
	Handle test parse special values;
	Handle test parse invalid number;
	Handle test parse fractional number;
	Handle test get bytes as int

190.4. Add a class for distance. It allows to:

	Instantiate distance  with distance unit;
	Convert distance unit;
	Check if distance equals;
	Hash code;
	Compare  to o distance;
	Convert distance to string;
	Parse distance;
	Read stream input from stream;
	Write  to stream output

190.5. Add a class for distance unit tests. It allows to:

	Handle test simple distance unit;
	Handle test distance unit parsing;
	Handle test distance unit names;
	Handle test read write;
	Handle test from string

190.6. Add a class for fuzziness. It allows to:

	Instantiate fuzziness;
	Process fuzziness fuzziness from edits;
	Process fuzziness fuzziness from string;
	Instantiate fuzziness  with stream input;
	Write  to stream output;
	Parse custom auto;
	Parse X content parser;
	Convert fuzziness to X content;
	Process fuzziness fuzziness as distance;
	Process fuzziness fuzziness as float;
	Get term len;
	Process fuzziness fuzziness as string;
	Check if fuzziness is auto with custom values;
	Check if fuzziness equals;
	Hash code

190.7. Add a class for fuzziness tests. It allows to:

	Handle test from string;
	Handle test numeric constants;
	Handle test auto fuzziness;
	Handle test custom auto fuzziness;
	Handle test from edits illegal args;
	Handle test from string illegal args;
	Handle test parse from X content;
	Handle test serialization;
	Do serialize roundtrip;
	Handle test as distance string

190.8. Add a class for ratio value. It allows to:

	Instantiate ratio value;
	Get ratio value as ratio;
	Get ratio value as percent;
	Convert ratio value to string;
	Parse ratio value

190.9. Add a class for ratio value tests. It allows to:

	Handle test parsing;
	Handle test negative case;
	Handle test invalid ratio

190.10. Add a class for size value. It allows to:

	Instantiate size value;
	Instantiate size value  with size unit;
	Instantiate size value  with stream input;
	Write  to stream output;
	Get singles;
	Get kilo;
	Handle mega;
	Get mega;
	Get giga;
	Get tera;
	Peta size value;
	Get peta;
	Kilo frac;
	Get size value;
	Handle mega frac;
	Get mega frac;
	Giga frac;
	Get giga frac;
	Tera frac;
	Get tera  frac;
	Peta frac;
	Get peta frac;
	Convert size value to string;
	Parse size value;
	Check if size value equals;
	Hash code;
	Compare  to other size value

190.11. Add a class for size value tests. It allows to:

	Handle test that conversion works;
	Handle test that parsing works;
	Handle test that negative values throw exception;
	Handle test compare equality;
	Handle test compare value;
	Handle test compare units;
	Handle test conversion hash code

191. Changes to package org.elasticsearch.common.util:  

191.1. Add a class for abstract array. It allows to:

	Instantiate abstract array  with big arrays;
	Close abstract array;
	Do abstract array close;
	Get child resources

191.2. Add a class for abstract big array. It allows to:

	Instantiate abstract big array  with big arrays;
	Handle num pages;
	Get page size;
	Get page index;
	Get index in page;
	Get size;
	Resize abstract big array;
	Handle num bytes per element;
	Handle ram bytes used;
	Handle ram bytes estimated;
	Grow array;
	Register new page;
	Handle new byte page;
	Handle new int page;
	Handle new long page;
	Handle new object page;
	Release page;
	Do abstract big array close

191.3. Add a class for abstract hash. It allows to:

	Instantiate abstract hash  with big arrays;
	I abstract hash;
	Resize abstract hash;
	Get used;
	Close abstract hash

191.4. Add a class for abstract paged hash map. It allows to:

	Hash abstract paged hash map;
	Instantiate abstract paged hash map  with big arrays;
	Get capacity;
	Get size;
	Get slot;
	Handle next slot;
	Resize abstract paged hash map;
	Get used;
	Remove abstract paged hash map;
	Grow abstract paged hash map

191.5. Add a class for array utils. It allows to:

	Instantiate array utils;
	Handle binary search;
	Get concat;

191.6. Add a class for array utils tests. It allows to:

	Handle test binary search;
	Handle test concat

191.7. Add an interface declaration  for big array. It allows to:

	Get size

191.8. Add a class for big byte array. It allows to:

	Instantiate big byte array  with big arrays;
	Get big byte array;
	Set big byte array;
	Get bytes ref;
	Fill big byte array;
	Handle num bytes per element;
	Resize big byte array;
	Estimate ram bytes

191.9. Add a class for big double array. It allows to:

	Instantiate big double array  with big arrays;
	Get big double array;
	Set big double array;
	Get increment;
	Handle num bytes per element;
	Resize big double array;
	Fill big double array;
	Estimate ram bytes

191.10. Add a class for big float array. It allows to:

	Instantiate big float array  with big arrays;
	Set big float array;
	Get increment;
	Get big float array;
	Handle num bytes per element;
	Resize big float array;
	Fill big float array;
	Estimate ram bytes

191.11. Add a class for big int array. It allows to:

	Instantiate big int array  with big arrays;
	Get big int array;
	Set big int array;
	Get increment;
	Fill big int array;
	Handle num bytes per element;
	Resize big int array;
	Estimate ram bytes

191.12. Add a class for big long array. It allows to:

	Instantiate big long array  with big arrays;
	Get big long array;
	Set big long array;
	Get increment;
	Handle num bytes per element;
	Resize big long array;
	Fill big long array;
	Estimate ram bytes

191.13. Add a class for big object array. It allows to:

	Instantiate big object array  with big arrays;
	Get big object array;
	Set value;
	Handle num bytes per element;
	Resize big object array;
	Estimate ram bytes

191.14. Add an interface declaration  for byte array. It allows to:

	Get byte array;
	Set byte array;
	Get bytes ref;
	Fill byte array

191.15. Add a class for byte utils tests. It allows to:

	Handle test zig zag;
	Handle test float;
	Handle test double;
	Handle test V long

191.16. Add a class for bytes ref hash. It allows to:

	Instantiate bytes ref hash  with big arrays;
	Get rehash;
	Get dest bytes ref;
	Find key bytes ref;
	Set key bytes ref;
	Append key bytes ref;
	Assert consistent;
	Reset bytes ref hash;
	Add key bytes ref;
	Remove bytes ref hash;
	Close bytes ref hash

191.17. Add a class for bytes ref hash tests. It allows to:

	Get randombig arrays;
	Handle new hash;
	Set bytes ref hash tests;
	Handle test duell;
	Handle test size;
	Handle test get;
	Handle test add;
	Handle test find;
	Assert all  in strings set

191.18. Add a class for collection utils tests. It allows to:

	Handle test rotate empty;
	Handle test rotate;
	Handle test sort and dedup byte ref array;
	Handle test sort byte ref array;
	Handle test empty partition;
	Handle test simple partition;
	Handle test singleton partition;
	Handle test oversized partition;
	Handle test perfect partition;
	Handle test ensure no self references

191.19. Add an interface declaration  for double array. It allows to:

	Get double array;
	Set double array;
	Get increment;
	Fill double array

191.20. Add an interface declaration  for float array. It allows to:

	Get float array;
	Set float array;
	Get increment;
	Fill float array

191.21. Add an interface declaration  for int array. It allows to:

	Get int array;
	Set int array;
	Get increment;
	Fill int array

191.22. Add a class for locale utils. It allows to:

	Parse locale utils;
	Parse parts

191.23. Add a class for locale utils tests. It allows to:

	Handle test illegal lang;
	Handle test illegal country;
	Handle test illegal number of parts;
	Handle test underscores;
	Handle test simple

191.24. Add an interface declaration  for long array. It allows to:

	Get long array;
	Set long array;
	Get increment;
	Fill long array

191.25. Add a class for long hash. It allows to:

	Instantiate long hash  with big arrays;
	Get long hash;
	Find long hash;
	Set long hash;
	Append long hash;
	Reset long hash;
	Add long hash;
	Remove long hash;
	Close long hash

191.26. Add a class for long hash tests. It allows to:

	Get randombig arrays;
	Handle new hash;
	Set long hash tests;
	Handle test duell;
	Handle test size;
	Handle test key;
	Handle test add;
	Handle test find;
	Assert all  in longs set

191.27. Add a class for long object hash map tests. It allows to:

	Get randombig arrays;
	Handle test duel

191.28. Add a class for mock page cache recycler. It allows to:

	Ensure all pages are released;
	Instantiate mock page cache recycler  with settings;
	Wrap V;
	Close;
	V;
	Check if  is recycled;
	Byte page;
	Handle int page;
	Long page;
	Object page

191.29. Add an interface declaration  for object array. It allows to:

	Get object array;
	Set value

191.30. Add a class for page cache recycler. It allows to:

	Close page cache recycler;
	Instantiate page cache recycler  with settings;
	Byte page;
	Handle int page;
	Long page;
	Object page;
	Build type;
	Build recycler C;
	Parse page cache recycler;

191.31. Add a class for single object cache. It allows to:

	Instantiate single object cache  with refresh interval time value, initial value and initial value;
	Get single object cache;
	Get no refresh;
	Refresh single object cache;
	Handle needs refresh

191.32. Add a class for single object cache tests. It allows to:

	Handle test refresh;
	Refresh;
	Handle needs refresh;
	Handle test refresh doesnt block

191.33. Add a class for uRI pattern. It allows to:

	Instantiate uRI pattern;
	Match URI;
	Match patterns;
	Normalized URI;
	Match uRI pattern;
	Convert uRI pattern to string

191.34. Add a class for uRI pattern tests. It allows to:

	Handle test URI pattern

192. Changes to package org.elasticsearch.common.util.concurrent:  

192.1. Add a class for abstract lifecycle runnable. It allows to:

	Instantiate abstract lifecycle runnable  with lifecycle, logger and logger;
	Run abstract lifecycle runnable;
	Do run  in lifecycle;
	Process abstract lifecycle runnable abstract lifecycle runnable on after;
	Process abstract lifecycle runnable abstract lifecycle runnable on after in lifecycle

192.2. Add a class for abstract lifecycle runnable tests. It allows to:

	Handle test do run only runs when not stopped or closed;
	Process  on failure;
	Do run  in lifecycle;
	Handle test do run does not run when stopped or closed;
	Handle test on after only when not stopped or closed;
	Process  on after in lifecycle;
	Handle test on after does not happen when stopped or closed;

192.3. Add a class for abstract runnable. It allows to:

	Check if abstract runnable is force execution;
	Run abstract runnable;
	Process abstract runnable abstract runnable on after;
	Process abstract runnable abstract runnable on failure;
	Process abstract runnable abstract runnable on rejection;

192.4. Add a class for abstract runnable tests. It allows to:

	Handle test run success;
	Process  on failure;
	Run;
	Handle test run failure;
	Handle test on after success;
	Process  on after;
	Handle test on after failure;
	Handle test on rejection;
	Handle test is force executuon defaults false;

192.5. Add a class for async IO processor. It allows to:

	Instantiate async IO processor  with logger;
	Put item;
	Drain candidates list;
	Handle process list;
	Write candidates list

192.6. Add a class for async IO processor tests. It allows to:

	Handle test put;
	Write candidates list;
	Run;
	Handle test random fail;
	Handle test consumer can throw exceptions;
	Handle test null arguments;

192.7. Add a class for atomic array. It allows to:

	Instantiate atomic array;
	Get length;
	Set value;
	Set  once value;
	Get atomic array;
	Process atomic array atomic array as list;
	Convert atomic array to array

192.8. Add an object creator class for concurrent collections. It allows to:

	Handle new concurrent map with aggressive concurrency;
	Handle new concurrent map;
	Handle new concurrent map long with aggressive concurrency;
	Handle new concurrent map long;
	Handle new concurrent set;
	Handle new queue;
	Handle new deque;
	Handle new blocking queue;
	Instantiate concurrent collections

192.9. Add a class for concurrent hash map long. It allows to:

	Instantiate concurrent hash map long  with concurrent map;
	Get concurrent hash map long;
	Remove concurrent hash map long;
	Put value;
	Check if concurrent hash map long is empty;
	Get size;
	Check if concurrent hash map long contains key;
	Check if concurrent hash map long contains value;
	Put value if absent;
	Put map;
	Replace old value;
	Replace value;
	Handle clear;
	Handle key set;
	Get values;
	Get entry set;
	Check if concurrent hash map long equals;
	Hash code;
	Convert concurrent hash map long to string

192.10. Add an interface declaration  for concurrent map long. It allows to:

	Get concurrent map long;
	Remove concurrent map long;
	Put value

192.11. Add a class for count down. It allows to:

	Instantiate count down;
	Count count down;
	Fast count down forward;
	Check if count down is counted down

192.12. Add a class for count down tests. It allows to:

	Handle test concurrent;
	Run;
	Handle test single threaded

192.13. Add a class for es abort policy. It allows to:

	Get rejected execution;
	Get rejected

192.14. Add a class for es executors tests. It allows to:

	Handle random time unit;
	Get name;
	Handle test fixed forced execution;
	Run;
	Check if  is force execution;
	Process  on failure;
	Handle test fixed rejected;
	Handle test scale up;
	Handle test scale down;
	Handle test rejection message and shutting down flag;
	Convert to string;
	Handle test inherit context;
	Handle test get tasks

192.15. Add a class for es rejected execution exception. It allows to:

	Instantiate es rejected execution exception;
	Check if es rejected execution exception is executor shutdown

192.16. Add a class for es thread pool executor tests. It allows to:

	Handle node settings;
	Handle test rejected execution exception contains node name;
	Run thread pool executor test;
	Process  on failure;
	Process  on rejection;
	Run

192.17. Add a class for future utils. It allows to:

	Cancel to cancel future;
	Get future;
	Handle rethrow execution exception;
	Handle unwrap es exception

192.18. Add a class for prioritized runnable tests. It allows to:

	Handle test get age in millis;
	Run;
	Handle test get age in millis with real clock;

192.19. Add a class for queue resizing es thread pool executor. It allows to:

	Instantiate queue resizing es thread pool executor  with time unit, work queue, runnable wrapper function, targeted response time value, thread factory, X rejected execution handler, context and context;
	Wrap runnable;
	Get unwrap;
	Calculate lambda;
	Calculate L;
	Get task execution EWMA;
	Get current queue size;
	Execute execute;
	Append thread pool executor details

192.20. Add a class for releasable lock. It allows to:

	Instantiate releasable lock  with lock;
	Close releasable lock;
	Acquire releasable lock;
	Add current thread;
	Remove current thread;
	Check if releasable lock is held by current thread

192.21. Add a class for releasable lock tests. It allows to:

	Handle test is held by current thread;
	Acquire lock

192.22. Add a class for resizable blocking queue. It allows to:

	Instantiate resizable blocking queue  with blocking queue;
	Get capacity;
	Remaining capacity;
	Adjust capacity

192.23. Add a class for resizable blocking queue tests. It allows to:

	Handle test adjust capacity

192.24. Add a class for size blocking queue. It allows to:

	Instantiate size blocking queue  with blocking queue;
	Get size;
	Get capacity;
	Get iterator;
	Check if  has next;
	Handle next;
	Remove;
	Get peek;
	Get poll;
	Remove size blocking queue;
	Force put;
	Offer E;
	Put E;
	Take size blocking queue;
	Remaining capacity;
	Drain  to collection;
	Convert size blocking queue to array;
	Check if size blocking queue contains;
	Check if size blocking queue contains all

192.25. Add a class for size blocking queue tests. It allows to:

	Handle test queue size

192.26. Add a class for thread context tests. It allows to:

	Handle test stash context;
	Handle test stash with origin;
	Handle test stash and merge;
	Handle test store context;
	Handle test restorable context;
	Handle test response headers;
	Handle test copy headers;
	Handle test access closed;
	Handle test serialize;
	Handle test serialize in different context;
	Handle test serialize in different context no defaults;
	Handle test can reset default;
	Handle test stash and merge with modified defaults;
	Handle test preserve context;
	Handle test preserve context keeps original context when called twice;
	Handle test preserves threads original context on run exception;
	Process  on after;
	Process  on failure;
	Run;
	Handle test preserves threads original context on failure exception;
	Handle test preserves threads original context on after exception;
	Handle test mark as system context;
	Handle test put headers;
	Sometimes abstract runnable;

192.27. Add a class for timed runnable. It allows to:

	Instantiate timed runnable  with original runnable;
	Run timed runnable;
	Process timed runnable timed runnable on rejection;
	Process timed runnable timed runnable on after;
	Process timed runnable timed runnable on failure;
	Check if timed runnable is force execution;
	Get total nanos;
	Get total execution nanos;
	Get unwrap

192.28. Add a class for timed runnable tests. It allows to:

	Convert test timed runnable delegates;
	Check if  is force execution;
	Process  on after;
	Process  on rejection;
	Process  on failure;
	Run;
	Handle test timed runnable delegates run in failure case;
	Handle test timed runnable rethrows exception when not abstract runnable;
	Handle test timed runnable rethrows rejection when not abstract runnable

192.29. Add a class for uncategorized execution exception. It allows to:

	Instantiate uncategorized execution exception  with cause throwable;
	Instantiate uncategorized execution exception  with stream input

192.30. Add an interface declaration  for x rejected execution handler. It allows to:

	Get rejected

193. Changes to package org.elasticsearch.common.util.iterable:  

193.1. Add a class for iterables tests. It allows to:

	Handle test get over list;
	Handle test get over iterable;
	Handle test flatten;
	Handle test

194. Changes to package org.elasticsearch.common.util.set:  

194.1. Add a class for sets tests. It allows to:

	Handle test difference;
	Handle test sorted difference;
	Handle test intersection;
	Assert difference;
	Handle random sets

195. Changes to package org.elasticsearch.common.xcontent:  

195.1. Add a class for logging deprecation handler. It allows to:

	Instantiate logging deprecation handler;
	Get used deprecated name;
	Get used deprecated field

195.2. Add a class for parse field registry. It allows to:

	Instantiate parse field registry;
	Get names;
	Register value;
	Get lookup;
	Lookup returning null  if not found

195.3. Add an interface declaration  for status to X content object. It allows to:

	Get status

195.4. Add a class for unknown named object exception. It allows to:

	Instantiate unknown named object exception  with X content location, category class and category class;
	Instantiate unknown named object exception  with stream input;
	Write  to stream output;
	Get category class;
	Get name

195.5. Add a class for unknown named object exception tests. It allows to:

	Handle test round trip;
	Handle test status code

195.6. Add a class for x content factory tests. It allows to:

	Handle test guess json;
	Handle test guess smile;
	Handle test guess yaml;
	Handle test guess cbor;
	Handle test guess type;
	Handle test CBOR based on major object detection;
	Handle test CBOR based on magic header detection;
	Handle test empty stream;
	Handle test invalid stream;
	Handle test json from bytes optionally preceded by utf 8 bom

195.7. Add a class for x content helper. It allows to:

	Create parser;
	Convert bytes reference to map;
	Convert X content to map;
	Convert bytes reference to json;
	Update source map;
	Merge defaults;
	All list values are maps  of one;
	Write raw field;
	Convert x content helper to X content;
	X content type

195.8. Add a class for x content parser utils. It allows to:

	Instantiate x content parser utils;
	Ensure field name;
	Throw unknown field;
	Throw unknown token;
	Ensure expected token;
	Parse fields value;
	Parse typed keys object

195.9. Add a class for x content parser utils tests. It allows to:

	Handle test ensure expected token;
	Handle test stored fields value string;
	Handle test stored fields value int;
	Handle test stored fields value long;
	Handle test stored fields value double;
	Handle test stored fields value float;
	Handle test stored fields value boolean;
	Handle test stored fields value binary;
	Handle test stored fields value null;
	Handle test stored fields value object;
	Handle test stored fields value array;
	Handle test parse fields value unknown;
	Assert parse fields simple value;
	Assert parse fields value;
	Handle test parse typed keys object;
	Handle test parse typed keys object errors

195.10. Add a class for x content type tests. It allows to:

	Handle test from json;
	Handle test from json uppercase;
	Handle test from yaml;
	Handle test from smile;
	Handle test from cbor;
	Handle test from wildcard;
	Handle test from wildcard uppercase;
	Handle test from rubbish

196. Changes to package org.elasticsearch.common.xcontent.builder:  

196.1. Add a class for x content builder tests. It allows to:

	Handle test pretty with lf at end;
	Handle test reuse json generator;
	Handle test raw;
	Handle test simple generator;
	Handle test overloaded list;
	Convert test writing binary;
	Handle test byte conversion;
	Handle test date types conversion;
	Handle test copy current structure;
	Handle test handling of path;
	Handle test handling of path relative;
	Handle test handling of path absolute;
	Check path serialization;
	Handle test handling of path string name;
	Handle test handling of collection of paths;
	Handle test indent is platform independent;
	Handle test render geo point;
	Handle test write map with null keys;
	Handle test write map value with null keys;
	Handle test write field map with null keys;
	Handle test missing end object;
	Handle test missing end array

197. Changes to package org.elasticsearch.common.xcontent.cbor:  

197.1. Add a class for cbor X content parser tests. It allows to:

	Handle test empty value

197.2. Add a class for cbor X content tests. It allows to:

	Handle xcontent type;
	Handle test big integer

197.3. Add a class for json vs cbor tests. It allows to:

	Handle test compare parsing tokens;
	Verify same tokens

198. Changes to package org.elasticsearch.common.xcontent.json:  

198.1. Add a class for json X content tests. It allows to:

	Handle xcontent type;
	Handle test big integer

199. Changes to package org.elasticsearch.common.xcontent.smile:  

199.1. Add a class for json vs smile tests. It allows to:

	Handle test compare parsing tokens;
	Verify same tokens

199.2. Add a class for smile X content tests. It allows to:

	Handle xcontent type;
	Handle test big integer

200. Changes to package org.elasticsearch.common.xcontent.support:  

200.1. Add a class for x content helper tests. It allows to:

	Get map;
	Get named map;
	Get list;
	Handle test merging list values are maps of one;
	Convert test

200.2. Add a class for x content map values. It allows to:

	Extract raw values;
	Extract value;
	Get filter;
	Make match dots  in field names;
	Step character run automaton;
	Check if x content map values is object;
	Check if x content map values is array;
	Node string value;
	Node float value;
	Node double value;
	Handle node integer value;
	Node short value;
	Node byte value;
	Node long value;
	Node boolean value;
	Handle node time value;
	Node map value;
	Node string array value

200.3. Add a class for x content map values tests. It allows to:

	Handle test filter;
	Handle test extract value;
	Handle test extract raw value;
	Handle test prefixed names filtering test;
	Handle test nested filtering;
	Handle test complete object filtering;
	Handle test filter includes using star prefix;
	Handle test filter with empty includes excludes;
	Handle test that filter includes empty object when using includes;
	Handle test that filter includes empty object when using excludes;
	Handle test not omitting objects with excluded properties;
	Handle test not omitting object with nested excluded object;
	Handle test including object with nested included object;
	Handle test dots in field names;
	Handle test supplementary characters in paths;
	Handle test shared prefixes;
	Handle test prefix;
	Convert x content map values tests to map

201. Changes to package org.elasticsearch.common.xcontent.support.filtering:  

201.1. Add a class for abstract X content filtering test case. It allows to:

	Handle test filter;
	Assert filter result;
	Get X content type;
	Create builder;
	Handle test single field object;
	Assert X content builder  as string;
	Assert X content builder  as bytes

201.2. Add a class for cbor X content filtering tests. It allows to:

	Get X content type;
	Assert filter result

201.3. Add a class for filter path generator filtering tests. It allows to:

	Handle test inclusive filters;
	Handle test exclusive filters;
	Handle test inclusive filters with dots;
	Handle test exclusive filters with dots;
	Assert result;
	Replace quotes

201.4. Add a class for filter path tests. It allows to:

	Handle test simple filter path;
	Handle test filter path with sub field;
	Handle test filter path with sub fields;
	Handle test empty filter path;
	Handle test null filter path;
	Handle test filter path with escaped dots;
	Handle test simple wildcard filter path;
	Handle test wildcard in name filter path;
	Handle test double wildcard filter path;
	Handle test starts with double wildcard filter path;
	Handle test contains double wildcard filter path;
	Handle test multiple filter paths

201.5. Add a class for json X content filtering tests. It allows to:

	Get X content type;
	Assert filter result

201.6. Add a class for smile filtering generator tests. It allows to:

	Get X content type;
	Assert filter result

201.7. Add a class for yaml filtering generator tests. It allows to:

	Get X content type;
	Assert filter result

202. Changes to package org.elasticsearch.common.xcontent.yaml:  

202.1. Add a class for yaml X content tests. It allows to:

	Handle xcontent type;
	Handle test big integer

203. Changes to package org.elasticsearch.deps.jackson:  

203.1. Add a class for jackson location tests. It allows to:

	Handle test location extraction

204. Changes to package org.elasticsearch.deps.lucene:  

204.1. Add a class for simple lucene tests. It allows to:

	Handle test sort values;
	Handle test simple numeric ops;
	Handle test ordering;
	Get needs field;
	Handle test NRT search on closed writer;
	Refresh reader

204.2. Add a class for vector highlighter tests. It allows to:

	Handle test vector highlighter;
	Handle test vector highlighter prefix query;
	Handle test vector highlighter no store;
	Handle test vector highlighter no term vector

205. Changes to package org.elasticsearch.discovery:  

205.1. Add a class for abstract disruption test case. It allows to:

	Handle node settings;
	Get index settings;
	Get number of shards;
	Get number of replicas;
	Set abstract disruption test case;
	Set disruption scheme;
	Process abstract disruption test case abstract disruption test case before index deletion;
	Start cluster;
	Handle node plugins;
	Get node cluster state;
	Assert no master;
	Assert different master;
	Assert master;
	Add random disruption scheme;
	Add random disruption type;
	Isolate node

205.2. Add a class for blocking cluster state publish response handler. It allows to:

	Instantiate blocking cluster state publish response handler  with publishing to nodes set;
	Process blocking cluster state publish response handler blocking cluster state publish response handler on response;
	Process blocking cluster state publish response handler blocking cluster state publish response handler on failure;
	Await all nodes;
	Pending nodes;
	Get failed nodes

205.3. Add a class for cluster disruption IT. It allows to:

	Handle random mode;
	Handle test acked indexing;
	Handle test rejoin document exists in all shard copies;
	Handle test sending shard failure;
	Handle test can not join if master lost data folder;
	Handle clear data;
	Handle on node stopped;
	Validate cluster forming;
	Handle test indices deleted;
	Handle test restart node while indexing

205.4. Add an interface declaration  for discovery. It allows to:

	Get stats;
	Start initial join

205.5. Add a class for discovery disruption IT. It allows to:

	Handle test cluster join despite of publishing issues;
	Handle test cluster forming with A slow node;
	Handle test elect master with latest version;
	Handle test node not reachable from master

205.6. Add a class for discovery module. It allows to:

	Instantiate discovery module  with settings, thread pool, transport service, named writeable registry, network service, master service, cluster applier, cluster settings, plugins list, allocation service, config file path, gateway meta state and gateway meta state;
	Get discovery

205.7. Add a class for master disruption IT. It allows to:

	Handle test master node G cs;
	Handle test isolate master and verify cluster state consensus;
	Handle test verify api blocks during partition;
	Handle test mapping timeout

205.8. Add a class for master not discovered exception. It allows to:

	Instantiate master not discovered exception;
	Instantiate master not discovered exception  with cause throwable;
	Get status;
	Instantiate master not discovered exception  with stream input

205.9. Add a class for snapshot disruption IT. It allows to:

	Handle node plugins;
	Handle node settings;
	Handle test disruption on snapshot initialization;
	Handle cluster changed;
	Assert all snapshots completed;
	Assert snapshot exists;
	Create random index

206. Changes to package org.elasticsearch.discovery.azure.classic:  

206.1. Add a class for azure simple tests. It allows to:

	Handle test one node should run using private ip;
	Handle test one node should run using public ip;
	Handle test one node should run using wrong settings

206.2. Add a class for azure two started nodes tests. It allows to:

	Test two nodes should run using private or public ip

206.3. Add a class for discovery azure classic client yaml test suite IT. It allows to:

	Instantiate discovery azure classic client yaml test suite IT  with client yaml test candidate;
	Get parameters

207. Changes to package org.elasticsearch.discovery.ec2:  

207.1. Add a class for abstract aws test case. It allows to:

	Handle node settings;
	Handle node plugins

207.2. Add a class for amazon EC 2 mock. It allows to:

	Instantiate amazon EC 2 mock  with tags list, AWS credentials provider, client configuration and client configuration;
	Describe instances;
	Set endpoint;
	Set region;
	Accept reserved instances exchange quote;
	Reboot instances;
	Describe reserved instances;
	Create flow logs;
	Describe availability zones;
	Restore address  to classic;
	Detach volume;
	Delete key pair;
	Delete nat gateway;
	Handle unmonitor instances;
	Update security group rule descriptions ingress;
	Update security group rule descriptions egress;
	Attach vpn gateway;
	Create image;
	Delete security group;
	Create instance export task;
	Authorize security group egress;
	Handle associate dhcp options;
	Get password data;
	Get reserved instances exchange quote;
	Stop instances;
	Get import key pair;
	Delete network interface;
	Modify vpc attribute;
	Describe spot fleet instances;
	Create security group;
	Describe spot price history;
	Describe network interfaces;
	Describe network interface permissions;
	Describe regions;
	Create dhcp options;
	Create reserved instances listing;
	Delete vpc endpoints;
	Reset snapshot attribute;
	Delete route;
	Describe internet gateways;
	Get import volume;
	Modify hosts;
	Modify id format;
	Describe security groups;
	Describe stale security groups;
	Describe security group references;
	Reject vpc peering connection;
	Modify vpc peering connection options;
	Delete flow logs;
	Detach vpn gateway;
	Deregister image;
	Describe spot datafeed subscription;
	Delete tags;
	Delete subnet;
	Describe account attributes;
	Attach classic link vpc;
	Create vpn gateway;
	Enable volume IO;
	Move address  to vpc;
	Delete vpn gateway;
	Attach volume;
	Describe volume status;
	Describe volumes modifications;
	Describe import snapshot tasks;
	Describe vpn connections;
	Reset image attribute;
	Enable vgw route propagation;
	Create snapshot;
	Delete volume;
	Create network interface;
	Modify reserved instances;
	Cancel spot fleet requests;
	Handle unassign private ip addresses;
	Handle unassign ipv 6 addresses;
	Describe vpcs;
	Cancel conversion task;
	Handle associate address;
	Handle associate iam instance profile;
	Handle associate vpc cidr block;
	Handle associate subnet cidr block;
	Delete customer gateway;
	Create network acl entry;
	Accept vpc peering connection;
	Describe export tasks;
	Describe elastic gpus;
	Describe fpga images;
	Describe host reservation offerings;
	Describe host reservations;
	Describe identity id format;
	Detach internet gateway;
	Create vpc peering connection;
	Create route table;
	Cancel import task;
	Describe volumes;
	Describe reserved instances listings;
	Report instance status;
	Describe route tables;
	Describe dhcp options;
	Describe egress  only internet gateways;
	Monitor instances;
	Describe prefix lists;
	Get request spot fleet;
	Describe import image tasks;
	Describe network acls;
	Describe bundle tasks;
	Get import instance;
	Delete vpc peering connection;
	Get console output;
	Get console screenshot;
	Get host reservation purchase preview;
	Create internet gateway;
	Delete vpn connection route;
	Detach network interface;
	Modify image attribute;
	Create customer gateway;
	Create egress  only internet gateway;
	Create fpga image;
	Create network interface permission;
	Create default vpc;
	Create spot datafeed subscription;
	Attach internet gateway;
	Delete vpn connection;
	Describe moving addresses;
	Describe conversion tasks;
	Create vpn connection;
	Get import image;
	Disable vpc classic link;
	Disable vpc classic link dns support;
	Describe instance attribute;
	Describe flow logs;
	Describe vpc peering connections;
	Describe placement groups;
	Run instances;
	Run scheduled instances;
	Describe subnets;
	Handle associate route table;
	Modify volume attribute;
	Delete network acl;
	Describe images;
	Start instances;
	Modify instance attribute;
	Modify instance placement;
	Modify identity id format;
	Cancel reserved instances listing;
	Delete dhcp options;
	Delete egress  only internet gateway;
	Delete network interface permission;
	Authorize security group ingress;
	Describe spot instance requests;
	Create vpc;
	Describe customer gateways;
	Cancel export task;
	Create route;
	Create vpc endpoint;
	Copy image;
	Describe vpc classic link;
	Modify network interface attribute;
	Delete route table;
	Describe network interface attribute;
	Describe classic link instances;
	Get request spot instances;
	Create tags;
	Describe volume attribute;
	Attach network interface;
	Replace route;
	Describe tags;
	Cancel bundle task;
	Disable vgw route propagation;
	Get import snapshot;
	Cancel spot instance requests;
	Describe spot fleet requests;
	Purchase reserved instances offering;
	Purchase scheduled instances;
	Purchase host reservation;
	Modify snapshot attribute;
	Describe reserved instances modifications;
	Terminate instances;
	Modify vpc endpoint;
	Delete spot datafeed subscription;
	Delete internet gateway;
	Describe snapshot attribute;
	Replace route table association;
	Describe addresses;
	Describe image attribute;
	Describe key pairs;
	Confirm product instance;
	Disassociate route table;
	Disassociate iam instance profile;
	Disassociate vpc cidr block;
	Disassociate subnet cidr block;
	Describe vpc attribute;
	Revoke security group egress;
	Delete network acl entry;
	Create volume;
	Modify volume;
	Describe instance status;
	Describe vpn gateways;
	Create subnet;
	Describe reserved instances offerings;
	Assign private ip addresses;
	Assign ipv 6 addresses;
	Describe spot fleet request history;
	Delete snapshot;
	Replace network acl association;
	Disassociate address;
	Create placement group;
	Bundle instance;
	Delete placement group;
	Modify subnet attribute;
	Delete vpc;
	Copy snapshot;
	Describe vpc endpoint services;
	Allocate address;
	Release address;
	Release hosts;
	Replace iam instance profile association;
	Reset instance attribute;
	Create key pair;
	Create nat gateway;
	Replace network acl entry;
	Describe snapshots;
	Create network acl;
	Register image;
	Reset network interface attribute;
	Enable vpc classic link;
	Enable vpc classic link dns support;
	Create vpn connection route;
	Describe vpc endpoints;
	Detach classic link vpc;
	Describe scheduled instance availability;
	Describe scheduled instances;
	Revoke security group ingress;
	Describe nat gateways;
	Describe hosts;
	Describe iam instance profile associations;
	Describe id format;
	Describe vpc classic link dns support;
	Allocate hosts;
	Handle dry run;
	Handle shutdown;
	Get waiters;
	Get cached response metadata;
	Modify spot fleet request

207.3. Add a class for aws ec 2 service impl. It allows to:

	Build client;
	Build configuration;
	Build credentials;
	Get client;
	Refresh and clear cache;
	Close aws ec 2 service impl

207.4. Add a class for aws ec 2 service impl tests. It allows to:

	Handle test AWS credentials with system providers;
	Handle test AWS credentials with elasticsearch aws settings;
	Handle test AWS session credentials with elasticsearch aws settings;
	Handle test deprecation of lone access key;
	Handle test deprecation of lone secret key;
	Handle test rejection of lone session token;
	Handle test AWS default configuration;
	Handle test AWS configuration with aws settings;
	Launch AWS configuration test

207.5. Add an object creator class for aws ec 2 service mock. It allows to:

	Instantiate aws ec 2 service mock  with tags list;
	Build client

207.6. Add a class for cloud aws client yaml test suite IT. It allows to:

	Instantiate cloud aws client yaml test suite IT  with client yaml test candidate;
	Get parameters

207.7. Add a class for ec 2 discovery plugin. It allows to:

	Instantiate ec 2 discovery plugin  with settings;
	Instantiate ec 2 discovery plugin  with settings, aws ec 2 service impl and aws ec 2 service impl;
	Get custom name resolver;
	Get seed host providers;
	Get settings;
	Handle additional settings;
	Get availability zone node attributes;
	Close ec 2 discovery plugin;
	Reload settings

207.8. Add a class for ec 2 discovery plugin tests. It allows to:

	Get node attributes;
	Assert node attributes;
	Handle test node attributes disabled;
	Handle test node attributes;
	Handle test node attributes bogus url;
	Handle test node attributes empty;
	Handle test node attributes error lenient;
	Handle test default endpoint;
	Handle test specific endpoint;
	Handle test client settings re init

207.9. Add a class for ec 2 discovery update settings tests. It allows to:

	Handle test minimum master nodes start

207.10. Add a class for ec 2 name resolver. It allows to:

	Ec 2 hostname type;
	Resolve ec 2 hostname type;
	Resolve default;
	Resolve ec 2 name resolver if possible

207.11. Add a class for ec 2 network tests. It allows to:

	Start http;
	Handle setup;
	Stop http;
	Convert test network host ec;
	Convert test network host unable;
	Resolve expected inet address;
	Handle test network host core local

207.12. Add a class for socket access. It allows to:

	Instantiate socket access;
	Do privileged;
	Do privileged IO exception

208. Changes to package org.elasticsearch.discovery.gce:  

208.1. Add a class for discovery gce client yaml test suite IT. It allows to:

	Instantiate discovery gce client yaml test suite IT  with client yaml test candidate;
	Get parameters

208.2. Add a class for gce discovery tests. It allows to:

	Create thread pool;
	Stop thread pool;
	Set project name;
	Create transport service;
	Stop gce compute service;
	Build dynamic nodes;
	Handle test nodes with different tags and no tag set;
	Handle test nodes with different tags and one tag set;
	Handle test nodes with different tags and two tag set;
	Handle test nodes with same tags and no tag set;
	Handle test nodes with same tags and one tag set;
	Handle test nodes with same tags and two tags set;
	Handle test multiple zones and two nodes in same zone;
	Handle test multiple zones and two nodes in different zones;
	Handle test zero node 43;
	Handle test illegal settings missing all required;
	Handle test illegal settings missing project;
	Handle test illegal settings missing zone;
	Handle test no region returns empty list;
	Handle test metadata server values

208.3. Add a class for gce instances service mock. It allows to:

	Instantiate gce instances service mock  with settings;
	Get gce http transport

208.4. Add a class for gce metadata service mock. It allows to:

	Instantiate gce metadata service mock  with settings;
	Get gce http transport

208.5. Add a class for gce mock utils. It allows to:

	Configure mock;
	Build request;
	Execute;
	Read google internal json response;
	Read google  api json response;
	Read json response

208.6. Add a class for gce network tests. It allows to:

	Handle test network host gce default;
	Handle test network host private ip;
	Handle test network host private dns;
	Handle test network host wrong setting;
	Handle test network host private ip interface;
	Handle network host core local;
	Resolve gce;

208.7. Add a class for retry http initializer wrapper. It allows to:

	Instantiate retry http initializer wrapper  with wrapped credential;
	Instantiate retry http initializer wrapper  with wrapped credential, max wait time value and max wait time value;
	Instantiate retry http initializer wrapper  with wrapped credential, sleeper, max wait time value and max wait time value;
	Handle new mock credential builder;
	Initialize http request;
	Handle response

209. Changes to package org.elasticsearch.discovery.single:  

209.1. Add a class for single node discovery IT. It allows to:

	Handle node settings;
	Handle test single nodes do not discover each other;
	Handle node config path;
	Handle test can not join node with single node discovery;
	Handle inner match;
	Handle test state persistence

210. Changes to package org.elasticsearch.document:  

210.1. Add a class for aliased index document actions IT. It allows to:

	Create index;
	Get concrete index name

210.2. Add a class for document actions IT. It allows to:

	Create index;
	Get concrete index name;
	Handle test index actions;
	Handle test bulk;
	Get source

210.3. Add a class for shard info IT. It allows to:

	Handle test index and delete;
	Handle test update;
	Handle test bulk with index and delete items;
	Handle test bulk with update items;
	Prepare index;
	Assert shard info;
	Ensure active shard copies

211. Changes to package org.elasticsearch.env:  

211.1. Add a class for eS file store. It allows to:

	Instantiate eS file store  with in file store;
	Get mount point linux;
	Name eS file store;
	Get type;
	Check if eS file store is read only;
	Get total space;
	Get usable space;
	Get unallocated space;
	Check if eS file store supports file attribute view;
	Get file store attribute view;
	Get attribute;
	Convert eS file store to string

211.2. Add a class for eS file store tests. It allows to:

	Handle test negative space

211.3. Add a class for environment. It allows to:

	Instantiate environment  with settings, config path and config path;
	Instantiate environment  with settings, config path, tmp path and tmp path;
	Get settings;
	Get data files;
	Get shared data file;
	Repo files;
	Resolve repo file;
	Resolve repo URL;
	Get config file;
	Get plugins file;
	Get bin file;
	Lib file;
	Get modules file;
	Get logs file;
	Get pid file;
	Tmp file;
	Validate tmp file;
	Get file store;
	Assert equivalent;
	Equals environment

211.4. Add a class for environment tests. It allows to:

	Handle new environment;
	Handle test repository resolution;
	Handle test path data when not set;
	Handle test path data not set in environment if not set;
	Handle test path logs when not set;
	Handle test default config path;
	Handle test config path;
	Handle test config path when not set;
	Handle test node does not require local storage;
	Handle test node does not require local storage but has path data;
	Handle test non existent temp path validation;
	Handle test temp path validation when regular file

211.5. Add a class for node environment evil tests. It allows to:

	Check posix;
	Handle test missing write permission;
	Handle test missing write permission on index;
	Handle test missing write permission on shard

211.6. Add a class for node environment tests. It allows to:

	Handle test node lock silly settings;
	Handle test node lock single environment;
	Handle test segment infos tracing;
	Handle test node lock multiple environment;
	Handle test shard lock;
	Handle test available index folders;
	Handle test available index folders with exclusions;
	Handle test resolve index folders;
	Handle test delete safe;
	Process  on failure;
	Run;
	Handle test stress shard lock;
	Handle test custom data paths;
	Handle test persistent node id;
	Test existing temp files;
	Handle test ensure no shard data or index meta data;
	Verify fails  on shard data;
	Verify fails  on meta data;
	Convert strings;
	Tmp paths;
	Handle new node environment;
	Build env settings;

211.7. Add a class for shard lock. It allows to:

	Instantiate shard lock  with shard id;
	Get shard id;
	Close shard lock;
	Close internal;
	Convert shard lock to string

211.8. Add a class for shard lock obtain failed exception. It allows to:

	Instantiate shard lock obtain failed exception  with shard id;
	Instantiate shard lock obtain failed exception  with shard id, cause throwable and cause throwable;
	Instantiate shard lock obtain failed exception  with stream input;
	Build message

211.9. Add an object creator class for test environment. It allows to:

	Instantiate test environment;
	Handle new environment

212. Changes to package org.elasticsearch.example.customsettings:  

212.1. Add a class for example custom settings client yaml test suite IT. It allows to:

	Instantiate example custom settings client yaml test suite IT  with client yaml test candidate;
	Get parameters

212.2. Add a class for example custom settings config. It allows to:

	Instantiate example custom settings config  with environment;
	Get simple;
	Get bool;
	Validated example custom settings config;
	Filtered example custom settings config;
	Get list

212.3. Add a class for example custom settings config tests. It allows to:

	Handle test validated setting

212.4. Add a class for example custom settings plugin. It allows to:

	Instantiate example custom settings plugin  with settings, config path and config path;
	Get settings;
	Handle additional settings

213. Changes to package org.elasticsearch.example.expertscript:  

213.1. Add a class for expert script client yaml test suite IT. It allows to:

	Instantiate expert script client yaml test suite IT  with client yaml test candidate;
	Get parameters

214. Changes to package org.elasticsearch.example.painlesswhitelist:  

214.1. Add a class for example whitelist extension. It allows to:

	Get context whitelists

214.2. Add a class for example whitelisted class. It allows to:

	Instantiate example whitelisted class;
	Get private member accessor;
	Set private member accessor;
	Handle static method;
	Convert example whitelisted class to int

214.3. Add a class for my whitelist plugin

214.4. Add a class for painless whitelist client yaml test suite IT. It allows to:

	Instantiate painless whitelist client yaml test suite IT  with client yaml test candidate;
	Get parameters

215. Changes to package org.elasticsearch.example.rescore:  

215.1. Add a class for example rescore builder tests. It allows to:

	Create test instance;
	Get instance reader;
	Mutate instance;
	Handle test rewrite;
	Handle test rescore

215.2. Add a class for example rescore client yaml test suite IT. It allows to:

	Instantiate example rescore client yaml test suite IT  with client yaml test candidate;
	Get parameters

215.3. Add a class for example rescore plugin. It allows to:

	Get rescorers

216. Changes to package org.elasticsearch.example.resthandler:  

216.1. Add a class for example cat action. It allows to:

	Instantiate example cat action  with settings, rest controller and rest controller;
	Get name;
	Do cat request;
	Handle documentation;
	Get documentation;
	Get table  with header

216.2. Add a class for example fixture IT. It allows to:

	Handle test example

216.3. Add a class for example rest handler client yaml test suite IT. It allows to:

	Instantiate example rest handler client yaml test suite IT  with client yaml test candidate;
	Get parameters

216.4. Add a class for example rest handler plugin. It allows to:

	Get rest handlers

217. Changes to package org.elasticsearch.explain:  

217.1. Add a class for explain action IT. It allows to:

	Handle test simple;
	Handle test explain with fields;
	Handle test explain wit source;
	Handle test explain with filtered alias;
	Handle test explain with filtered alias fetch source;
	Handle test explain date range in query string;
	Get index or alias;
	Handle test stream explain

218. Changes to package org.elasticsearch.gateway:  

218.1. Add a class for base gateway shard allocator. It allows to:

	Allocate unassigned;
	Make allocation decision;
	Build decisions  for all nodes

218.2. Add a class for corrupt state exception. It allows to:

	Instantiate corrupt state exception;
	Instantiate corrupt state exception  with ex throwable

218.3. Add a class for dangling indices state. It allows to:

	Instantiate dangling indices state  with node environment, meta state service, local allocate dangled indices, cluster service and cluster service;
	Handle process dangling indices;
	Get dangling indices;
	Handle cleanup allocated dangled indices;
	Find new and add dangling indices;
	Find new dangling indices;
	Allocate dangling indices;
	Process  on response;
	Process  on failure;
	Handle cluster changed

218.4. Add a class for dangling indices state tests. It allows to:

	Handle test cleanup when empty;
	Handle test dangling indices discovery;
	Handle test invalid index folder;
	Handle test dangling processing;
	Handle test dangling indices not imported when tombstone present;
	Create dangling indices state

218.5. Add a class for dummy state. It allows to:

	Convert dummy state to string;
	Instantiate dummy state;
	Convert dummy state to X content;
	Check if dummy state equals;
	Hash code;
	Parse X content parser;
	Handle content;
	Add dummy files

218.6. Add a class for gateway exception. It allows to:

	Instantiate gateway exception;
	Instantiate gateway exception  with cause throwable;
	Instantiate gateway exception  with stream input

218.7. Add a class for gateway index state IT. It allows to:

	Handle test mapping meta data parsed;
	Handle test simple open close;
	Test gateway index state IT just master node;
	Test gateway index state IT just master node and just data node;
	Test two nodes single doc;
	Handle test index deletion when node rejoins;
	Handle test recover broken index metadata;
	Handle on node stopped;
	Handle test recover missing analyzer;
	Handle test archive broken cluster settings;

218.8. Add a class for gateway module. It allows to:

	Configure gateway module

218.9. Add a class for gateway service tests. It allows to:

	Create service;
	Handle test default recover after time

218.10. Add a class for meta data state format. It allows to:

	Instantiate meta data state format;
	Delete file  if exists;
	Delete file ignore exceptions;
	Write state  to first location;
	Close;
	Copy state  to extra locations;
	Perform renames;
	Perform state directories fsync;
	Write and cleanup;
	Write state;
	Handle new X content builder;
	Convert meta data state format to X content;
	Process meta data state format meta data state format from X content;
	Read named X content registry;
	Handle new directory;
	Handle cleanup old files;
	Find max generation id;
	Find state files  by generation;
	Get state file name;
	Load generation;
	Load latest state  with generation;
	Load latest state;
	Delete meta state;
	Get prefix

218.11. Add a class for meta data write data nodes IT. It allows to:

	Handle test meta written also on data node;
	Handle test meta is removed if all shards from index removed;
	Handle test meta written when index is closed and meta updated;
	Assert index directory deleted;
	Assert index  in meta state;
	Handle index directory exists;
	Get indices meta data  on node

218.12. Add a class for meta state service. It allows to:

	Instantiate meta state service  with node environment, named X content registry and named X content registry;
	Load full state;
	Load full state BWC;
	Load index state;
	Load indices states;
	Load manifest or empty;
	Load global state;
	Write manifest and cleanup;
	Write index;
	Write global state;
	Handle cleanup global state;
	Handle cleanup index;
	Write index and update manifest;
	Write global state and update manifest

218.13. Add a class for meta state service tests. It allows to:

	Set meta state service tests;
	Tear meta state service tests;
	Get index meta data;
	Handle test write load index;
	Handle test load missing index;
	Handle test write load global;
	Handle test write global state with index and no index is loaded;
	Handle test load full state BWC;
	Handle test load empty state no manifest;
	Handle test load empty state with manifest;
	Handle test load full state missing global meta data;
	Handle test load full state and update

218.14. Add a class for priority comparator. It allows to:

	Compare o 1 shard routing;
	Get priority;
	Handle time created;
	Get index settings;
	Get allocation comparator;

218.15. Add a class for quorum gateway IT. It allows to:

	Get number of replicas;
	Handle test quorum recovery;
	Do active client after nodes

218.16. Add a class for recover after nodes IT. It allows to:

	Wait timeout value for no blocks on node;
	Start node;
	Handle test recover after nodes;
	Handle test recover after master nodes;
	Handle test recover after data nodes

218.17. Add a class for recovery from gateway IT. It allows to:

	Handle node plugins;
	Handle test one node recover from gateway;
	Assert and capture primary terms;
	Handle test single node no flush;
	Handle test single node with flush;
	Test two node first node cleared;
	Handle on node stopped;
	Handle clear data;
	Handle test latest version loaded;
	Handle test reuse in file based peer recovery;
	Assert sync ids  not null;
	Handle test started shard found if state not yet processed;
	Handle test messy elections still make cluster go green

218.18. Add a class for reuse peer recovery shared test. It allows to:

	Handle test case;
	Assert sync ids  not null

219. Changes to package org.elasticsearch.get:  

219.1. Add a class for get action IT. It allows to:

	Handle node plugins;
	Handle test simple get;
	Convert test get with alias pointing;
	Get index or alias;
	Handle test simple multi get;
	Handle test get doc with multivalued fields;
	Handle test get with version;
	Handle test multi get with version;
	Handle test get fields non leaf field;
	Handle test get fields complex field;
	Handle test ungenerated fields that are never stored;
	Handle test ungenerated fields that are always stored;
	Handle test ungenerated fields not part of source stored;
	Handle test generated string fields unstored;
	Handle test generated string fields stored;
	Handle index single document with string fields generated from text;
	Assert get fields  always works;
	Assert get field works;
	Assert get fields null;
	Assert get fields  always null;
	Assert get field  null;
	Get multi get document;
	Get document

220. Changes to package org.elasticsearch.grok:  

220.1. Add a class for grok. It allows to:

	Instantiate grok  with pattern bank map;
	Instantiate grok  with pattern bank map, thread watchdog and thread watchdog;
	Forbid circular references;
	Get group match;
	Convert grok to regex;
	Match grok;
	Get captures;
	Get builtin patterns;
	Load builtin patterns;
	Load patterns

220.2. Add a class for grok match group. It allows to:

	Instantiate grok match group;
	Get name;
	Get value

220.3. Add a class for grok tests. It allows to:

	Handle test match without captures;
	Handle test no matching pattern in dictionary;
	Handle test simple syslog line;
	Handle test syslog 5424 line;
	Handle test date pattern;
	Handle test nil coerced values;
	Handle test nil with no coercion;
	Handle test unicode syslog;
	Handle test named fields with whole text match;
	Handle test with onigurama named captures;
	Handle test ISO 8601;
	Handle test not ISO 8601;
	Handle test no named captures;
	Handle test circular reference;
	Handle test boolean captures;
	Handle test numeric captures;
	Handle test numeric captures coercion;
	Handle test apache log;
	Handle test complete;
	Handle test no match;
	Handle test multiple named captures with same name;
	Handle test exponential expressions;
	Handle test at in field name;
	Assert non ascii letter  in field name;
	Assert square bracket  in field name;
	Handle test underscore in field name;
	Handle test dot in field name;
	Handle test minus in field name;
	Handle test alphanumeric field name;
	Handle test unsupported brackets in field name;
	Handle test java class pattern with underscore;
	Handle test java file pattern with spaces;
	Assert groked field

221. Changes to package org.elasticsearch.http:  

221.1. Add a class for bind http exception. It allows to:

	Instantiate bind http exception;
	Instantiate bind http exception  with cause throwable;
	Instantiate bind http exception  with stream input

221.2. Add a class for cors not set IT. It allows to:

	Handle test cors setting default behavior does not return anything;
	Handle test that omitting cors header does not return anything

221.3. Add a class for cors regex IT. It allows to:

	Handle node settings;
	Handle test that regular expression works on match;
	Handle test that regular expression returns forbidden on non match;
	Handle test that sending no origin header returns no access control header;
	Handle test that regular expression is not applied without correct browser on match;
	Handle test that pre flight request works on match;
	Handle test that pre flight request returns null on non match;
	Assert response  with origin header

221.4. Add a class for deprecation http IT. It allows to:

	Add mock http transport;
	Handle node settings;
	Handle node plugins;
	Handle test unique deprecation responses merged together;
	Handle test deprecation warnings appear in headers;
	Handle test deprecation headers do not get stuck;
	Do test deprecation warnings appear  in headers;
	Get warning headers;
	Build settings request

221.5. Add a class for detailed errors disabled IT. It allows to:

	Handle node settings;
	Handle test that error trace param returns 400

221.6. Add a class for detailed errors enabled IT. It allows to:

	Handle test that error trace works by default

221.7. Add a class for http compression IT. It allows to:

	Handle test compresses response if requested;
	Handle test uncompressed response by default

221.8. Add a class for http exception. It allows to:

	Instantiate http exception;
	Instantiate http exception  with cause throwable;
	Instantiate http exception  with stream input

221.9. Add a class for http smoke test case. It allows to:

	Set up transport;
	Get type key;
	Get http type key;
	Add mock http transport;
	Handle node settings;
	Handle node plugins;
	Transport client plugins;
	Transport client settings;
	Ignore external cluster

221.10. Add a class for http transport settings. It allows to:

	Instantiate http transport settings

221.11. Add a class for null dispatcher. It allows to:

	Dispatch request;
	Dispatch bad request

221.12. Add a class for response header plugin IT. It allows to:

	Add mock http transport;
	Handle node plugins;
	Handle test that setting headers works

221.13. Add a class for rest http response headers IT. It allows to:

	Handle test valid endpoint options response http header;
	Handle test unsupported method response http header;
	Handle test index settings post request

221.14. Add a class for test deprecated query builder. It allows to:

	Instantiate test deprecated query builder;
	Instantiate test deprecated query builder  with stream input;
	Do write  to stream output;
	Do X content;
	Process test deprecated query builder test deprecated query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Do hash code;
	Equals other test deprecated query builder

221.15. Add a class for test deprecation header rest action. It allows to:

	Instantiate test deprecation header rest action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

221.16. Add a class for test deprecation plugin. It allows to:

	Get rest handlers;
	Get settings;
	Get queries

221.17. Add a class for test response header plugin. It allows to:

	Get rest handlers

221.18. Add a class for test response header rest action. It allows to:

	Instantiate test response header rest action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

222. Changes to package org.elasticsearch.http.netty4:  

222.1. Add a class for netty 4 client yaml test suite IT. It allows to:

	Instantiate netty 4 client yaml test suite IT  with client yaml test candidate;
	Get parameters

222.2. Add a class for netty 4 http channel. It allows to:

	Instantiate netty 4 http channel  with channel;
	Send response;
	Get local address;
	Get remote address;
	Add close listener;
	Check if netty 4 http channel is open;
	Close netty 4 http channel;
	Get netty channel;
	Convert netty 4 http channel to string

222.3. Add a class for netty 4 http request handler. It allows to:

	Instantiate netty 4 http request handler  with netty 4 http server transport;
	Channel ctx channel handler context;
	Handle exception caught

222.4. Add a class for netty 4 http request size limit IT. It allows to:

	Add mock http transport;
	Handle node settings;
	Test limits  in flight requests;
	Handle test does not limit excluded requests;
	Assert responses collection at least once expected status;
	Assert all  in expected status

222.5. Add a class for netty 4 http server transport tests. It allows to:

	Handle setup;
	Handle shutdown;
	Handle test cors config;
	Handle test cors config with defaults;
	Handle test cors config with bad regex;
	Handle test expect continue header;
	Handle test expect continue header content length too long;
	Handle test expect unsupported expectation;
	Run expect header test;
	Dispatch request;
	Dispatch bad request;
	Handle test bind unavailable address;
	Handle test bad request;
	Handle test read timeout;
	Handle init channel

223. Changes to package org.elasticsearch.http.netty4.cors:  

223.1. Add a class for netty 4 cors config. It allows to:

	Instantiate netty 4 cors config  with netty 4 cors config builder;
	Check if netty 4 cors config is cors support enabled;
	Check if netty 4 cors config is any origin supported;
	Get origins;
	Check if netty 4 cors config is origin allowed;
	Check if netty 4 cors config is credentials allowed;
	Max age;
	Get allowed request methods;
	Get allowed request headers;
	Handle preflight response headers;
	Check if netty 4 cors config is short circuit;
	Get value;
	Convert netty 4 cors config to string

223.2. Add a class for netty 4 cors handler. It allows to:

	Instantiate netty 4 cors handler  with netty 4 cors config;
	Channel read;
	Write ctx channel handler context;
	Set cors response headers;
	Handle preflight;
	Release request;
	Get forbidden;
	Check if netty 4 cors handler is same origin;
	Set preflight headers;
	Set origin;
	Validate origin;
	Echo request origin;
	Set vary header;
	Set any origin;
	Set allow credentials;
	Check if netty 4 cors handler is preflight request;
	Set allow methods;
	Set allow headers;
	Set max age

224. Changes to package org.elasticsearch.index:  

224.1. Add a class for abstract index component. It allows to:

	Instantiate abstract index component  with index settings;
	Get index;
	Get index settings

224.2. Add a class for composite index event listener. It allows to:

	Instantiate composite index event listener  with index settings, listeners collection and listeners collection;
	Handle shard routing changed;
	Handle after index shard created;
	Handle after index shard started;
	Handle before index shard closed;
	Handle after index shard closed;
	Process composite index event listener composite index event listener on shard inactive;
	Handle index shard state changed;
	Handle before index created;
	Handle after index created;
	Handle before index shard created;
	Handle before index removed;
	Handle after index removed;
	Handle before index shard deleted;
	Handle after index shard deleted;
	Process composite index event listener composite index event listener before index added to cluster;
	Handle on store created;
	Handle on store closed

224.3. Add an interface declaration  for index component. It allows to:

	Get index

224.4. Add a class for index module. It allows to:

	Instantiate index module  with index settings, analysis registry, engine factory, index store factories map and index store factories map;
	Add settings update consumer;
	Get settings;
	Get index;
	Get engine factory;
	Add index event listener;
	Add search operation listener;
	Add index operation listener;
	Add similarity;
	Set searcher wrapper;
	Freeze index module;
	Check if index module is builtin type;
	Get type;
	Get settings key;
	Process index module index module from settings key;
	Match index module

Add a local an interface declaration  for index searcher wrapper factory. It allows to:

	Handle new wrapper;
	Get default store type;
	Handle new index service;
	Get index store;
	Handle new index mapper service;
	Force query cache provider;
	Ensure index searcher wrapper factory not frozen

224.5. Add a class for index not found exception. It allows to:

	Instantiate index not found exception;
	Instantiate index not found exception  with cause throwable;
	Instantiate index not found exception  with index;
	Instantiate index not found exception  with index, cause throwable and cause throwable;
	Instantiate index not found exception  with stream input

224.6. Add a class for index request builder IT. It allows to:

	Handle test set source;
	Handle test odd number of source objects

224.7. Add a class for index service tests. It allows to:

	Get plugins;
	Get filter;
	Handle test base async task;
	Run internal;
	Get thread pool;
	Handle test refresh task is updated;
	Handle test fsync task is running;
	Handle test refresh actually works;
	Handle test async fsync actually works;
	Handle test reschedule async fsync;
	Handle test async translog trim actually works;
	Handle test illegal fsync interval;
	Handle test update sync interval dynamically

224.8. Add a class for index settings. It allows to:

	Get retention lease millis;
	Set retention lease millis;
	Get default fields;
	Set default fields;
	Check if index settings is query string lenient;
	Check if index settings is query string analyze wildcard;
	Check if index settings is query string allow leading wildcard;
	Check if index settings is default allow unmapped fields;
	Instantiate index settings  with index meta data, node settings and node settings;
	Instantiate index settings  with index meta data, node settings, index scoped settings and index scoped settings;
	Set search idle  after search idle after time value;
	Set translog flush threshold size;
	Set translog retention size;
	Set translog retention age;
	Set generation threshold size;
	Set GC deletes;
	Set refresh interval;
	Get settings;
	Get index;
	Get UUID;
	Check if index settings has custom data path;
	Get custom data path;
	Get index version created;
	Get node name;
	Get index meta data;
	Get number  of shards;
	Get number  of replicas;
	Get node settings;
	Update index meta data;
	Handle same;
	Get translog durability;
	Set translog durability;
	Check if index settings is warmer enabled;
	Set enable warmer;
	Get translog sync interval;
	Set translog sync interval;
	Get refresh interval;
	Get flush threshold size;
	Get translog retention size;
	Get translog retention age;
	Get generation threshold size;
	Get merge scheduler config;
	Get max result window;
	Set max result window;
	Get max inner result window;
	Set max inner result window;
	Get max adjacency matrix filters;
	Set max adjacency matrix filters;
	Get max rescore window;
	Set max rescore window;
	Get max docvalue fields;
	Set max docvalue fields;
	Get max token count;
	Set max token count;
	Get max ngram diff;
	Set max ngram diff;
	Get max shingle diff;
	Set max shingle diff;
	Get highlight max analyzed offset;
	Set highlight max analyzed offset;
	Get max terms count;
	Set max terms count;
	Get max script fields;
	Set max script fields;
	Get gc deletes  in millis;
	Get merge policy;
	Get value;
	Get max refresh listeners;
	Set max refresh listeners;
	Get max slices per scroll;
	Set max slices  per scroll;
	Get max regex length;
	Set max regex length;
	Get index sort config;
	Get scoped settings;
	Check if index settings is explicit refresh;
	Get search idle  after;
	Get default pipeline;
	Set default pipeline;
	Check if index settings is soft delete enabled;
	Set soft delete retention operations;
	Get soft delete retention operations;
	Check if index settings is search throttled;
	Set search throttled

224.9. Add a class for index settings tests. It allows to:

	Handle test run listener;
	Handle test settings update validator;
	Handle test merged settings are passed;
	Handle test settings consistency;
	Handle new index settings;
	Handle test node settings are contained;
	Handle new index meta;
	Handle test update durability;
	Handle test is warmer enabled;
	Handle test refresh interval;
	Get random time string;
	Handle test max result window;
	Handle test max inner result window;
	Handle test max docvalue fields;
	Handle test max script fields;
	Handle test max adjacency matrix filters setting;
	Handle test max regex length setting;
	Handle test GC deletes setting;
	Handle test translog flush size threshold;
	Handle test translog generation size threshold;
	Handle test private settings validation;
	Handle test archived settings validation;
	Handle test archive broken index settings;
	Handle test query default field;
	Handle test update soft deletes fails;
	Handle test soft deletes default setting

224.10. Add a class for index sort IT. It allows to:

	Create test mapping;
	Handle test index sort;
	Handle test invalid index sort

224.11. Add a class for index sort settings tests. It allows to:

	Get index settings;
	Handle test no index sort;
	Handle test simple index sort;
	Handle test index sort with arrays;
	Handle test invalid index sort;
	Handle test invalid index sort with array;
	Handle test invalid order;
	Handle test invalid mode;
	Handle test invalid missing

224.12. Add a class for index tests. It allows to:

	Convert test;
	Handle test X content;
	Handle test equals

224.13. Add a class for indexing slow log tests. It allows to:

	Convert test slow log parsed document printer source;
	Handle test reformat setting;
	Handle test reformat is false and source is trim;
	Handle test level setting;
	Handle test set levels;
	Assert time value exception;
	Handle new index meta

224.14. Add a class for mapper test utils. It allows to:

	Handle new mapper service;

224.15. Add a class for merge policy config. It allows to:

	Instantiate merge policy config  with logger, index settings and index settings;
	Set segments  per tier;
	Set max merged segment;
	Set max merges  at once explicit;
	Set max merges  at once max merge at once integer;
	Set floor segment setting;
	Set expunge deletes allowed;
	Set no CFS ratio;
	Set deletes pct allowed;
	Adjust max merge  at once if needed;
	Get merge policy;
	Parse no CFS ratio

224.16. Add a class for merge policy settings tests. It allows to:

	Handle test compound file settings;
	Get index settings;
	Handle test no merges;
	Handle test update settings;
	Handle test tiered merge policy settings update;
	Build merge policy settings tests;

224.17. Add a class for merge scheduler config. It allows to:

	Instantiate merge scheduler config  with index settings;
	Check if merge scheduler config is auto throttle;
	Set auto throttle;
	Get max thread count;
	Set max thread and merge count;
	Get max merge count

224.18. Add a class for mock engine factory plugin. It allows to:

	Get settings;
	Get engine factory;
	Get reader wrapper class

224.19. Add a class for random create index generator. It allows to:

	Instantiate random create index generator;
	Handle random create index request;
	Handle random index settings;
	Handle random mapping;
	Handle random mapping fields;
	Handle random aliases;
	Handle random alias

224.20. Add a class for search slow log tests. It allows to:

	Create search context;
	Shard id;
	Get types;
	Get source;
	Get alias filter;
	Set alias filter;
	Handle source;
	Get number of shards;
	Search type;
	Get index boost;
	Now  in millis;
	Get request cache;
	Allow partial search results;
	Get scroll;
	Get index routings;
	Get preference;
	Cache key;
	Get rewriteable;
	Get cluster  alias;
	Get request;
	Convert test slow log search context printer;
	Handle test level setting;
	Handle test set query levels;
	Handle test set fetch levels;
	Assert time value exception;
	Handle new index meta

224.21. Add a class for version type tests. It allows to:

	Handle test internal version conflict;
	Handle test version validation;
	Handle test external version conflict;
	Handle test external GTE version conflict;
	Handle test update version

225. Changes to package org.elasticsearch.index.alias:  

225.1. Add a class for random alias actions generator. It allows to:

	Instantiate random alias actions generator;
	Handle random alias action;
	Handle random map;
	Handle random routing

226. Changes to package org.elasticsearch.index.analysis:  

226.1. Add a class for abstract char filter factory. It allows to:

	Instantiate abstract char filter factory  with index settings;
	Name abstract char filter factory

226.2. Add a class for abstract index analyzer provider. It allows to:

	Instantiate abstract index analyzer provider  with index settings, settings and settings;
	Name abstract index analyzer provider;
	Get scope

226.3. Add a class for abstract token filter factory. It allows to:

	Instantiate abstract token filter factory  with index settings, settings and settings;
	Name abstract token filter factory;
	Get version

226.4. Add a class for abstract tokenizer factory. It allows to:

	Instantiate abstract tokenizer factory  with index settings, settings and settings;
	Get version

226.5. Add a class for analysis. It allows to:

	Parse analysis version;
	Check if analysis is no stopwords;
	Parse stem exclusion;
	Parse words;
	Parse common words;
	Parse articles;
	Parse stop words;
	Resolve named words;
	Get word set;
	Get word list;
	Load word list;
	Get reader  from file

226.6. Add a class for analysis ICU factory tests. It allows to:

	Instantiate analysis ICU factory tests;
	Get tokenizers;
	Get token filters;
	Get char filters

226.7. Add a class for analysis kuromoji factory tests. It allows to:

	Instantiate analysis kuromoji factory tests;
	Get tokenizers;
	Get token filters;
	Get char filters

226.8. Add a class for analysis phonetic factory tests. It allows to:

	Instantiate analysis phonetic factory tests;
	Get token filters;
	Handle test disallowed with synonyms

226.9. Add a class for analysis polish factory tests. It allows to:

	Instantiate analysis polish factory tests;
	Get token filters;
	Handle test thread safety;
	Create components

226.10. Add a class for analysis registry tests. It allows to:

	Get analyzer provider;
	Handle empty analysis registry;
	Get index settings of current version;
	Set analysis registry tests;
	Handle test default analyzers;
	Handle test override default analyzer;
	Handle test override default analyzer without analysis mode all;
	Get analysis mode;
	Create token stream;
	Handle test override default index analyzer is unsupported;
	Handle test override default search analyzer;
	Handle test configure camel case token filter;
	Get token filters;
	Handle test built in analyzers are cached;
	Handle test no type or tokenizer error message;
	Handle test close index analyzers multiple times;
	Handle test ensure close invocation properly delegated

226.11. Add a class for analysis smart chinese factory tests. It allows to:

	Instantiate analysis smart chinese factory tests;
	Get tokenizers

226.12. Add a class for analysis tests. It allows to:

	Handle test parse stem exclusion;
	Handle test parse non existing file;
	Handle test parse false encoded file;
	Handle test parse word list

226.13. Add a class for analysis tests helper. It allows to:

	Create test analysis  from class path;
	Create test analysis  from settings;

226.14. Add an interface declaration  for analyzer provider. It allows to:

	Name analyzer provider;
	Get scope;
	Get analyzer provider

226.15. Add an interface declaration  for char filter factory. It allows to:

	Name char filter factory;
	Create reader;
	Normalize reader

226.16. Add a class for core analysis factory tests. It allows to:

	Instantiate core analysis factory tests

226.17. Add a class for custom analyzer. It allows to:

	Instantiate custom analyzer  with tokenizer factory, char filter factory, token filter factory and token filter factory;
	Get tokenizer name;
	Handle tokenizer factory;
	Handle token filters;
	Char filters;
	Get position increment gap;
	Get offset gap;
	Get analysis mode;
	Create components;
	Handle init reader;
	Handle init reader for normalization;
	Normalize in token stream

226.18. Add a class for custom analyzer provider. It allows to:

	Instantiate custom analyzer provider  with index settings, settings and settings;
	Build tokenizers map;
	Get custom analyzer provider

226.19. Add a class for custom normalizer provider. It allows to:

	Instantiate custom normalizer provider  with index settings, settings and settings;
	Build tokenizer factory;
	Get custom normalizer provider

226.20. Add a class for field name analyzer. It allows to:

	Instantiate field name analyzer  with analyzers map;
	Get analyzers;
	Get wrapped analyzer

226.21. Add a class for hunspell token filter factory. It allows to:

	Instantiate hunspell token filter factory  with index settings, settings, hunspell service and hunspell service;
	Create token stream;
	Handle dedup;
	Handle longest only

226.22. Add a class for hunspell token filter factory tests. It allows to:

	Handle test dedup

226.23. Add a class for iCU collation key filter. It allows to:

	Instantiate iCU collation key filter  with input token stream, collator and collator;
	Handle increment token

226.24. Add a class for icu client yaml test suite IT. It allows to:

	Instantiate icu client yaml test suite IT  with client yaml test candidate;
	Get parameters

226.25. Add an object creator class for icu collation token filter factory. It allows to:

	Instantiate icu collation token filter factory  with index settings, environment, settings and settings;
	Create token stream

226.26. Add an object creator class for icu folding token filter factory. It allows to:

	Instantiate icu folding token filter factory  with index settings, environment, settings and settings;
	Create token stream

226.27. Add an object creator class for icu normalizer char filter factory. It allows to:

	Instantiate icu normalizer char filter factory  with index settings, environment, settings and settings;
	Create reader

226.28. Add an object creator class for icu normalizer token filter factory. It allows to:

	Instantiate icu normalizer token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Wrap index settings with unicode set filter

226.29. Add a class for icu tokenizer factory. It allows to:

	Instantiate icu tokenizer factory  with index settings, environment, settings and settings;
	Create icu tokenizer factory;
	Get icu config;
	Get break iterator;
	Parse rules

226.30. Add a class for icu tokenizer factory tests. It allows to:

	Handle test simple icu tokenizer;
	Handle test icu customize rule file;
	Handle test multiple icu customize rule files;
	Create test analysis

226.31. Add an object creator class for icu transform token filter factory. It allows to:

	Instantiate icu transform token filter factory  with index settings, environment, settings and settings;
	Create token stream

226.32. Add a class for index analyzers. It allows to:

	Instantiate index analyzers  with index settings, default index analyzer, default search analyzer, default search quote analyzer, analyzers map, normalizers map, whitespace normalizers map and whitespace normalizers map;
	Get index analyzers;
	Get normalizer;
	Get whitespace normalizer;
	Get default index analyzer;
	Get default search analyzer;
	Get default search quote analyzer;
	Close index analyzers

226.33. Add a class for indexable binary string tools tests. It allows to:

	Process indexable binary string tools tests indexable binary string tools tests before class;
	Handle test single binary round trip;
	Handle test encoded sortability;
	Handle test empty input;
	Test all null input;
	Handle test random binary round trip;
	Handle binary dump;
	Char array dump

226.34. Add a class for japanese stop token filter factory. It allows to:

	Instantiate japanese stop token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Stop words;
	Ignore case

226.35. Add a class for keyword analyzer provider. It allows to:

	Instantiate keyword analyzer provider  with index settings, environment, settings and settings;
	Get keyword analyzer provider

226.36. Add a class for kuromoji analysis tests. It allows to:

	Handle test defaults kuromoji analysis;
	Handle test base form filter factory;
	Handle test part of speech filter;
	Handle test reading form filter factory;
	Handle test katakana stem filter;
	Handle test iteration mark char filter;
	Handle test japanese stop filter factory;
	Create test analysis;
	Assert simple TS output;
	Assert char filter equals;
	Read  fully reader;
	Handle test kuromoji user dict;
	Handle test kuromoji empty user dict;
	Handle test nbest cost;
	Handle test nbest example;
	Handle test nbest both options;
	Test number filter factory

226.37. Add a class for kuromoji analyzer provider. It allows to:

	Instantiate kuromoji analyzer provider  with index settings, environment, settings and settings;
	Get kuromoji analyzer provider

226.38. Add an object creator class for kuromoji base form filter factory. It allows to:

	Instantiate kuromoji base form filter factory  with index settings, environment, settings and settings;
	Create token stream

226.39. Add a class for kuromoji client yaml test suite IT. It allows to:

	Instantiate kuromoji client yaml test suite IT  with client yaml test candidate;
	Get parameters

226.40. Add an object creator class for kuromoji iteration mark char filter factory. It allows to:

	Instantiate kuromoji iteration mark char filter factory  with index settings, environment, settings and settings;
	Create reader

226.41. Add an object creator class for kuromoji katakana stemmer factory. It allows to:

	Instantiate kuromoji katakana stemmer factory  with index settings, environment, settings and settings;
	Create token stream

226.42. Add an object creator class for kuromoji number filter factory. It allows to:

	Instantiate kuromoji number filter factory  with index settings, environment, settings and settings;
	Create token stream

226.43. Add an object creator class for kuromoji part of speech filter factory. It allows to:

	Instantiate kuromoji part of speech filter factory  with index settings, environment, settings and settings;
	Create token stream

226.44. Add an object creator class for kuromoji reading form filter factory. It allows to:

	Instantiate kuromoji reading form filter factory  with index settings, environment, settings and settings;
	Create token stream

226.45. Add a class for kuromoji tokenizer factory. It allows to:

	Instantiate kuromoji tokenizer factory  with index settings, environment, settings and settings;
	Get user dictionary;
	Get mode;
	Create kuromoji tokenizer factory

226.46. Add an object creator class for my filter token filter factory. It allows to:

	Instantiate my filter token filter factory  with index settings, environment, settings and settings;
	Create token stream

226.47. Add a class for named analyzer. It allows to:

	Instantiate named analyzer  with named analyzer;
	Instantiate named analyzer  with analyzer scope, analyzer and analyzer;
	Name named analyzer;
	Get scope;
	Get analysis mode;
	Get analyzer;
	Get wrapped analyzer;
	Get position increment gap;
	Check allowed  in mode;
	Convert named analyzer to string;
	Get reusable components;
	Set reusable components;
	Check if named analyzer equals;
	Hash code;
	Close named analyzer

226.48. Add a class for phonetic client yaml test suite IT. It allows to:

	Instantiate phonetic client yaml test suite IT  with client yaml test candidate;
	Get parameters

226.49. Add a class for phonetic token filter factory. It allows to:

	Instantiate phonetic token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Get synonym filter

226.50. Add a class for polish analysis tests. It allows to:

	Handle test defaults polish analysis

226.51. Add a class for pre built analyzer provider. It allows to:

	Instantiate pre built analyzer provider  with analyzer scope, analyzer and analyzer;
	Name pre built analyzer provider;
	Get scope;
	Get pre built analyzer provider

226.52. Add a class for pre built analyzer tests. It allows to:

	Handle forbid private index settings;
	Get plugins;
	Handle test that default and standard analyzer are the same instance;
	Handle test that instances are the same always for keyword analyzer;
	Handle test that instances are cached and reused;
	Handle test that analyzers are used in mapping

226.53. Add a class for pre configured analysis component. It allows to:

	Instantiate pre configured analysis component  with pre built cache factory caching strategy;
	Instantiate pre configured analysis component  with pre built cache factory pre built cache;
	Get index settings;
	Get name;
	Create version

226.54. Add a class for pre configured char filter. It allows to:

	Get singleton;
	Handle singleton with version;
	Handle lucene version;
	Handle elasticsearch version;
	Instantiate pre configured char filter  with cache caching strategy, create bi function and create bi function;
	Should use filter  for multiterm queries;
	Create version;
	Name;
	Create reader;

226.55. Add a class for pre configured token filter. It allows to:

	Get singleton;
	Handle singleton with version;
	Handle lucene version;
	Handle elasticsearch version;
	Instantiate pre configured token filter  with pre built cache factory caching strategy, create bi function and create bi function;
	Should use filter  for multiterm queries;
	Create version;
	Normalize token stream;
	Name;
	Create token stream;
	Get synonym filter;

226.56. Add an object creator class for pre configured tokenizer. It allows to:

	Get singleton;
	Handle lucene version;
	Handle elasticsearch version;
	Instantiate pre configured tokenizer  with pre built cache factory caching strategy, create function and create function;
	Create version

226.57. Add a class for shingle token filter factory tests. It allows to:

	Handle test default;
	Handle test inverse mapping;
	Handle test inverse mapping no shingles;
	Handle test filler token;
	Handle test disable graph;
	Handle test max shingle diff exception

226.58. Add a class for simple analyzer provider. It allows to:

	Instantiate simple analyzer provider  with index settings, environment, settings and settings;
	Get simple analyzer provider

226.59. Add a class for simple icu analysis tests. It allows to:

	Handle test defaults icu analysis

226.60. Add a class for simple icu collation token filter tests. It allows to:

	Handle test default usage;
	Handle test basic usage;
	Handle test normalization;
	Handle test secondary strength;
	Handle test ignore punctuation;
	Handle test ignore whitespace;
	Handle test numerics;
	Handle test ignore accents but not case;
	Handle test upper case first;
	Handle test custom rules;
	Handle test basic custom rules;
	Assert collates  to same;
	Assert collation;

226.61. Add a class for simple icu normalizer char filter tests. It allows to:

	Handle test default setting;
	Handle test name and mode setting

226.62. Add a class for simple phonetic analysis tests. It allows to:

	Handle setup;
	Handle test phonetic token filter factory;
	Handle test phonetic token filter beider morse no language;
	Handle test phonetic token filter beider morse with language;
	Handle test phonetic token filter daitch motokoff

226.63. Add a class for simple polish token filter tests. It allows to:

	Handle test basic usage;
	Handle test token;
	Handle test analyzer

226.64. Add a class for simple smart chinese analysis tests. It allows to:

	Handle test defaults icu analysis

226.65. Add a class for simple ukrainian analyzer tests. It allows to:

	Handle test basic usage;
	Handle test analyzer

226.66. Add a class for smart CN client yaml test suite IT. It allows to:

	Instantiate smart CN client yaml test suite IT  with client yaml test candidate;
	Get parameters

226.67. Add a class for smart chinese analyzer provider. It allows to:

	Instantiate smart chinese analyzer provider  with index settings, environment, settings and settings;
	Get smart chinese analyzer provider

226.68. Add a class for smart chinese no op token filter factory. It allows to:

	Instantiate smart chinese no op token filter factory  with index settings, environment, settings and settings;
	Create token stream

226.69. Add an object creator class for smart chinese tokenizer tokenizer factory. It allows to:

	Instantiate smart chinese tokenizer tokenizer factory  with index settings, environment, settings and settings;
	Create smart chinese tokenizer tokenizer factory

226.70. Add a class for standard analyzer provider. It allows to:

	Instantiate standard analyzer provider  with index settings, environment, settings and settings;
	Get standard analyzer provider

226.71. Add a class for standard tokenizer factory. It allows to:

	Instantiate standard tokenizer factory  with index settings, environment, settings and settings;
	Create standard tokenizer factory

226.72. Add a class for stempel client yaml test suite IT. It allows to:

	Instantiate stempel client yaml test suite IT  with client yaml test candidate;
	Get parameters

226.73. Add a class for stop analyzer provider. It allows to:

	Instantiate stop analyzer provider  with index settings, environment, settings and settings;
	Get stop analyzer provider

226.74. Add a class for stop analyzer tests. It allows to:

	Handle test defaults compound analysis

226.75. Add a class for stop token filter factory. It allows to:

	Instantiate stop token filter factory  with index settings, environment, settings and settings;
	Create token stream;
	Stop words;
	Ignore case

226.76. Add a class for stop token filter tests. It allows to:

	Handle test position increment setting;
	Handle test correct position increment setting;
	Handle test that suggest stop filter works

226.77. Add an interface declaration  for token filter factory. It allows to:

	Name token filter factory;
	Create token stream;
	Normalize token stream;
	Handle breaks fast vector highlighter;
	Get chain aware token filter factory;
	Get synonym filter;
	Get analysis mode;
	Name;

226.78. Add an interface declaration  for tokenizer factory. It allows to:

	Create tokenizer factory

226.79. Add a class for ukrainian analysis tests. It allows to:

	Handle test defaults ukranian analysis

226.80. Add a class for ukrainian analyzer provider. It allows to:

	Instantiate ukrainian analyzer provider  with index settings, environment, settings and settings;
	Get ukrainian analyzer provider

226.81. Add a class for ukrainian client yaml test suite IT. It allows to:

	Instantiate ukrainian client yaml test suite IT  with client yaml test candidate;
	Get parameters

226.82. Add a class for whitespace analyzer provider. It allows to:

	Instantiate whitespace analyzer provider  with index settings, environment, settings and settings;
	Get whitespace analyzer provider

227. Changes to package org.elasticsearch.index.analysis.phonetic:  

227.1. Add a class for haase phonetik. It allows to:

	Get patterns;
	Get replacements;
	Get code

227.2. Add a class for koelner phonetik. It allows to:

	Instantiate koelner phonetik;
	Get patterns;
	Get replacements;
	Get code;
	Get relative value;
	Encode koelner phonetik;
	Handle init;
	Get partition;
	Get variations;
	Substitute koelner phonetik;
	Expand umlauts;
	Remove sequences

227.3. Add a class for nysiis. It allows to:

	Check if nysiis is vowel;
	Get transcode remaining;
	Instantiate nysiis;
	Encode nysiis;
	Check if nysiis is strict;
	Get nysiis;
	Handle clean

228. Changes to package org.elasticsearch.index.analysis.pl:  

228.1. Add a class for polish analyzer provider. It allows to:

	Instantiate polish analyzer provider  with index settings, environment, settings and settings;
	Get polish analyzer provider

228.2. Add an object creator class for polish stem token filter factory. It allows to:

	Instantiate polish stem token filter factory  with index settings, environment, settings and settings;
	Create token stream

229. Changes to package org.elasticsearch.index.cache:  

229.1. Add a class for index cache. It allows to:

	Instantiate index cache  with index settings, query cache, bitset filter cache and bitset filter cache;
	Get query;
	Handle bitset filter cache;
	Close index cache;
	Handle clear

230. Changes to package org.elasticsearch.index.cache.bitset:  

230.1. Add a class for bit set filter cache tests. It allows to:

	Match count;
	Handle test invalidate entries;
	Process  on cache;
	Process  on removal;
	Handle test listener;
	Handle test set null listener;
	Handle test reject other index;

230.2. Add a class for shard bitset filter cache. It allows to:

	Instantiate shard bitset filter cache  with shard id, index settings and index settings;
	Handle on cached;
	Process shard bitset filter cache shard bitset filter cache on removal;
	Get memory size  in bytes

231. Changes to package org.elasticsearch.index.cache.query:  

231.1. Add a class for disabled query cache. It allows to:

	Instantiate disabled query cache  with index settings;
	Close disabled query cache;
	Do cache;
	Handle clear

231.2. Add a class for index query cache. It allows to:

	Instantiate index query cache  with index settings, indices query cache and indices query cache;
	Close index query cache;
	Handle clear;
	Do cache

231.3. Add an interface declaration  for query cache. It allows to:

	Handle clear

232. Changes to package org.elasticsearch.index.cache.request:  

232.1. Add a class for shard request cache. It allows to:

	Get stats;
	Process shard request cache shard request cache on hit;
	Process shard request cache shard request cache on miss;
	Handle on cached;
	Process shard request cache shard request cache on removal

233. Changes to package org.elasticsearch.index.codec:  

233.1. Add a class for codec service. It allows to:

	Instantiate codec service  with mapper service, logger and logger;
	Get codec;
	Handle available codecs

233.2. Add a class for codec tests. It allows to:

	Handle test resolve default codecs;
	Handle test default;
	Handle test best compression;
	Assert compression equals;
	Create codec service

233.3. Add a class for per field mapping posting format codec. It allows to:

	Instantiate per field mapping posting format codec  with compression mode, mapper service, logger and logger;
	Get postings format  for field

234. Changes to package org.elasticsearch.index.engine:  

234.1. Add a class for combined deletion policy tests. It allows to:

	Handle test keep commits after global checkpoint;
	Handle test acquire index commit;
	Handle test legacy index;
	Handle test delete invalid commits;
	Handle test check unreferenced commits;
	Handle mock index commit;
	Reset deletion;
	Get local checkpoint;
	Handle mock legacy index commit

234.2. Add a class for delete version value. It allows to:

	Instantiate delete version value;
	Check if delete version value is delete;
	Handle ram bytes used;
	Check if delete version value equals;
	Hash code;
	Convert delete version value to string

234.3. Add a class for document missing exception. It allows to:

	Instantiate document missing exception  with shard id;
	Instantiate document missing exception  with stream input;
	Get status

234.4. Add a class for document source missing exception. It allows to:

	Instantiate document source missing exception  with shard id;
	Instantiate document source missing exception  with stream input;
	Get status

234.5. Add a class for elasticsearch concurrent merge scheduler. It allows to:

	Instantiate elasticsearch concurrent merge scheduler  with shard id, index settings and index settings;
	Process elasticsearch concurrent merge scheduler elasticsearch concurrent merge scheduler on going merges;
	Merge index writer;
	Merge merge;
	Process elasticsearch concurrent merge scheduler elasticsearch concurrent merge scheduler after merge;
	Clone elasticsearch concurrent merge scheduler;
	Stall stall;
	Get merge thread;
	Get stats;
	Refresh config

234.6. Add a class for engine creation failure exception. It allows to:

	Instantiate engine creation failure exception  with shard id, cause throwable and cause throwable;
	Instantiate engine creation failure exception  with stream input

234.7. Add a class for engine exception. It allows to:

	Instantiate engine exception  with shard id;
	Instantiate engine exception  with shard id, cause throwable and cause throwable;
	Instantiate engine exception  with stream input

234.8. Add an interface declaration  for engine factory. It allows to:

	Handle new read write engine

234.9. Add a class for engine searcher factory. It allows to:

	Instantiate engine searcher factory  with engine config;
	Handle new searcher

234.10. Add a class for engine searcher total hits matcher. It allows to:

	Instantiate engine searcher total hits matcher  with query;
	Check if engine searcher total hits matcher matches safely;
	Describe mismatch  safely item engine searcher;
	Describe  to description;
	Get engine searcher total hits;

234.11. Add a class for evil internal engine tests. It allows to:

	Test evil internal engine tests out of memory error while merging is rethrown and is uncaught

234.12. Add a class for flush failed engine exception. It allows to:

	Instantiate flush failed engine exception  with shard id, throwable and throwable;
	Instantiate flush failed engine exception  with stream input

234.13. Add a class for index. It allows to:

	Instantiate index  with uid term, parsed document, version type, origin and origin;
	Instantiate index  with uid term, parsed document and parsed document;
	Get parsed doc;
	Get type;
	I index;
	Get operation type;
	Routing index;
	Get docs;
	Get source;
	Get estimated size in bytes;
	Get auto generated id timestamp;
	Check if index is retry;
	Get index if seq no;
	Get index if primary term

Add a local a class for delete. It allows to:

	Instantiate delete  with uid term, version type, origin and origin;
	Instantiate delete  with uid term;
	Instantiate delete  with template delete, version type and version type;
	Get type;
	I delete;
	Get operation type;
	Get estimated size in bytes;
	Get delete if seq no;
	Get delete if primary term

Add a local a class for no op. It allows to:

	Get reason;
	Instantiate no op  with origin;
	Get uid;
	Get type;
	Get version;
	Get version type;
	I no op;
	Get operation type;
	Get estimated size in bytes

Add a local a class for get. It allows to:

	Instantiate get  with uid term;
	Handle realtime;
	Get type;
	I get;
	Get uid;
	Get version;
	Get version type;
	Check if get is read from translog;
	Get set if seq no;
	Get get if seq no;
	Set get if primary term;
	Get get if primary term

234.14. Add an object creator class for internal engine factory. It allows to:

	Handle new read write engine

234.15. Add a class for internal engine merge IT. It allows to:

	Handle test merges happening

234.16. Add a class for internal engine settings tests. It allows to:

	Handle test settings update

234.17. Add a class for live version map tests. It allows to:

	Handle test ram bytes used;
	Handle test refreshing bytes;
	Get uid;
	Handle test basics;
	Handle test concurrently;
	Handle test carry on safe access;
	Handle test refresh transition;
	Handle test add and delete refresh concurrently;
	Handle test prune tombstones while locked;
	Handle test randomly index delete and refresh;
	Handle random index version value;
	Handle random translog location

234.18. Add a class for ram accounting searcher factory. It allows to:

	Instantiate ram accounting searcher factory  with circuit breaker service;
	Handle new searcher;
	Handle process readers

234.19. Add a class for recovery counter. It allows to:

	Instantiate recovery counter  with store;
	Start recovery;
	Get recovery counter;
	End recovery;
	Close recovery counter

234.20. Add a class for recovery engine exception. It allows to:

	Instantiate recovery engine exception  with shard id, cause throwable and cause throwable;
	Instantiate recovery engine exception  with stream input;
	Write  to stream output;
	Get phase

234.21. Add a class for refresh failed engine exception. It allows to:

	Instantiate refresh failed engine exception  with shard id, throwable and throwable;
	Instantiate refresh failed engine exception  with stream input

234.22. Add a class for segment. It allows to:

	Instantiate segment;
	Get name;
	Get generation;
	Check if segment is committed;
	Check if segment is search;
	Get num docs;
	Get deleted docs;
	Get size;
	Get size  in bytes;
	Get version;
	Check if segment is compound;
	Get merge id;
	Get memory  in bytes;
	Get segment sort;
	Get attributes;
	Check if segment equals;
	Hash code;
	Read segment;
	Read  from stream input;
	Write  to stream output;
	Read segment sort;
	Write segment sort;
	Read ram tree;
	Write ram tree;
	Convert segment to string

234.23. Add a class for segment tests. It allows to:

	Handle random sort field;
	Handle random index sort;
	Handle random segment;
	Handle test serialization;
	Check if segment tests is segment equals

234.24. Add a class for snapshot failed engine exception. It allows to:

	Instantiate snapshot failed engine exception  with shard id, cause throwable and cause throwable;
	Instantiate snapshot failed engine exception  with stream input

234.25. Add a class for translog handler. It allows to:

	Get applied operations;
	Instantiate translog handler  with named X content registry, index settings and index settings;
	Get doc mapper;
	Apply operation;
	Get recovered types;
	Run engine;
	Convert translog operation to engine op

234.26. Add a class for version conflict engine exception. It allows to:

	Instantiate version conflict engine exception  with shard id, engine operation and engine operation;
	Instantiate version conflict engine exception  with shard id;
	Instantiate version conflict engine exception  with shard id, cause throwable and cause throwable;
	Get status;
	Instantiate version conflict engine exception  with stream input

234.27. Add a class for version value. It allows to:

	Instantiate version value;
	Check if version value is delete;
	Handle ram bytes used;
	Get child resources;
	Check if version value equals;
	Hash code;
	Convert version value to string;
	Get location

234.28. Add a class for version value tests. It allows to:

	Handle test index ram bytes used;
	Handle test delete ram bytes used

235. Changes to package org.elasticsearch.index.fielddata:  

235.1. Add a class for abstract binary doc values. It allows to:

	Get doc ID;
	Handle next doc;
	Get advance;
	Get cost

235.2. Add a class for abstract field data impl test case. It allows to:

	One abstract field data impl test case;
	Two abstract field data impl test case;
	Three abstract field data impl test case;
	Four abstract field data impl test case;
	Convert abstract field data impl test case to string;
	Fill single value all set;
	Add 2 single valued documents and delete one  of them;
	Min ram bytes used;
	Handle test deleted docs;
	Handle test single value all set;
	Fill single value  with missing;
	Assert values;
	Handle test single value with missing;
	Fill multi value all set;
	Handle test multi value all set;
	Fill multi value  with missing;
	Handle test multi value with missing;
	Handle test missing value for all;
	Fill abstract field data impl test case;
	Handle test sort multi values fields;
	Fill extended mv set

235.3. Add a class for abstract field data test case. It allows to:

	Get field data type;
	Check if abstract field data test case has doc values;
	Get abstract field data test case for field;
	Get plugins;
	Handle setup;
	Refresh reader;
	Tear abstract field data test case;
	Nested index searcher;
	Handle test empty

235.4. Add a class for abstract geo field data test case. It allows to:

	Get field data type;
	Handle random geo point field;
	Check if abstract geo field data test case has doc values;
	Min ram bytes used;
	Fill abstract geo field data test case;
	Handle test sort multi values fields;
	Assert values;
	Missing multi geo point values;

235.5. Add a class for abstract numeric doc values. It allows to:

	Handle next doc;
	Get advance;
	Get cost

235.6. Add a class for abstract sorted doc values. It allows to:

	Handle next doc;
	Get advance;
	Get cost

235.7. Add a class for abstract sorted numeric doc values. It allows to:

	Get doc ID;
	Handle next doc;
	Get advance;
	Get cost

235.8. Add a class for abstract sorted set doc values. It allows to:

	Get doc ID;
	Handle next doc;
	Get advance;
	Get cost

235.9. Add a class for abstract sorting numeric doc values. It allows to:

	Get doc ID;
	Handle next doc;
	Get advance;
	Get cost

235.10. Add a class for abstract string field data test case. It allows to:

	Add field;
	Fill single value all set;
	Add 2 single valued documents and delete one  of them;
	Fill single value  with missing;
	Fill multi value all set;
	Fill multi value  with missing;
	Fill abstract string field data test case;
	Fill extended mv set;
	Test actual missing value;
	Test actual missing value reverse;
	Handle test sort missing first;
	Handle test sort missing first reverse;
	Handle test sort missing last;
	Handle test sort missing last reverse;
	Handle test sort missing;
	Handle test nested sorting min;
	Handle test nested sorting max;
	Handle test nested sorting;
	Handle test global ordinals;
	Handle test terms enum;
	Handle test global ordinals get removed once index reader closes

235.11. Add an interface declaration  for atomic field data. It allows to:

	Get script values;
	Get bytes values

235.12. Add an interface declaration  for atomic geo point field data. It allows to:

	Get geo point values

235.13. Add an interface declaration  for atomic numeric field data. It allows to:

	Get atomic numeric field data long values;
	Get double values

235.14. Add an interface declaration  for atomic ordinals field data. It allows to:

	Get ordinals values

235.15. Add a class for binary DV field data tests. It allows to:

	Check if binary DV field data tests has doc values;
	Handle test doc value;
	Handle random bytes;
	Get field data type

235.16. Add a class for doc value bits. It allows to:

	Handle advance exact

235.17. Add a class for field data loading IT. It allows to:

	Handle test eager global ordinals field data loading

235.18. Add a class for field data stats. It allows to:

	Instantiate field data stats;
	Instantiate field data stats  with stream input;
	Instantiate field data stats  with fields memory stats;
	Add field data stats;
	Get memory size  in bytes;
	Get memory size;
	Get evictions;
	Get fields;
	Read  from stream input;
	Write  to stream output;
	Convert field data stats to X content;
	Check if field data stats equals;
	Hash code

235.19. Add a class for field data stats tests. It allows to:

	Handle test serialize

235.20. Add a class for filter field data tests. It allows to:

	Get field data type;
	Handle test filter by frequency;
	Handle test empty

235.21. Add a class for geo field data tests. It allows to:

	Get field data type;
	Add 2 single valued documents and delete one  of them;
	Fill multi value  with missing;
	Fill single value all set;
	Fill single value  with missing;
	Fill multi value all set;
	Fill extended mv set;
	Handle test single value all set;
	Handle test single value with missing;
	Handle test multi value all set;
	Handle test multi value with missing

235.22. Add a class for geo point values. It allows to:

	Handle advance exact;
	Handle geo point value

235.23. Add a class for index field data service. It allows to:

	Process  on cache;
	Process  on removal;
	Instantiate index field data service  with index settings, indices field data cache, circuit breaker service, mapper service and mapper service;
	Handle clear;
	Handle clear field;
	Get mapped field type for field;
	Set listener;
	Close index field data service

235.24. Add a class for index field data service tests. It allows to:

	Get plugins;
	Handle test get for field defaults;
	Handle test clear field;
	Process  on cache;
	Process  on removal;
	Handle test field data cache listener;
	Handle test set cache listener twice;
	Do test require doc values;
	Handle test require doc values on longs;
	Handle test require doc values on doubles;
	Handle test require doc values on bools

235.25. Add an interface declaration  for index geo point field data

235.26. Add an interface declaration  for index numeric field data. It allows to:

	Handle numeric type;
	Check if index numeric field data is floating point;
	Get numeric type

235.27. Add an interface declaration  for index ordinals field data. It allows to:

	Load global;
	Handle local global direct;
	Get ordinal map

235.28. Add a class for multi geo point values. It allows to:

	Instantiate multi geo point values;
	Handle advance exact;
	Handle doc value count;
	Handle next value

235.29. Add a class for no ordinals string field data tests. It allows to:

	Hide ordinals;
	Get index;
	Get field name;
	Get load;
	Load direct;
	Get sort field;
	Handle clear;
	Get no ordinals string field data tests for field;
	Handle test terms enum

235.30. Add a class for numeric double values. It allows to:

	Instantiate numeric double values;
	Get raw double values;
	Handle advance exact;
	Handle long value;
	Get doc ID;
	Get raw float values;

235.31. Add a class for paged bytes string field data tests. It allows to:

	Get field data type

235.32. Add a class for ram accounting terms enum. It allows to:

	Instantiate ram accounting terms enum  with terms enum, circuit breaker, abstract index field data per value estimator and abstract index field data per value estimator;
	Accept term bytes ref;
	Handle flush;
	Handle next;
	Get total bytes

235.33. Add a class for script doc values geo points tests. It allows to:

	Wrap points;
	Handle next value;
	Handle advance exact;
	Handle doc value count;
	Handle random lat;
	Handle random lon;
	Handle test geo get lat lon;
	Handle test geo distance;
	Handle test missing values

235.34. Add a class for script doc values longs tests. It allows to:

	Handle test longs;
	Wrap script doc values longs tests;
	Handle advance exact;
	Handle doc value count;
	Handle next value

235.35. Add a class for shard field data. It allows to:

	Get stats;
	Process shard field data shard field data on cache;
	Process shard field data shard field data on removal

235.36. Add a class for singleton multi geo point values. It allows to:

	Instantiate singleton multi geo point values  with geo point values;
	Handle advance exact;
	Handle doc value count;
	Handle next value;
	Get geo point values

235.37. Add a class for singleton sorted binary doc values. It allows to:

	Instantiate singleton sorted binary doc values  with binary doc values;
	Handle advance exact;
	Handle doc value count;
	Handle next value;
	Get binary doc values

235.38. Add a class for singleton sorted numeric double values. It allows to:

	Instantiate singleton sorted numeric double values  with in numeric double values;
	Get numeric double values;
	Handle advance exact;
	Handle doc value count;
	Handle next value

235.39. Add a class for sortable long bits numeric doc values. It allows to:

	Instantiate sortable long bits numeric doc values  with numeric double values;
	Handle long value;
	Handle advance exact;
	Get doc ID;
	Get double values

235.40. Add a class for sortable long bits sorted numeric doc values. It allows to:

	Instantiate sortable long bits sorted numeric doc values  with sorted numeric double values;
	Handle advance exact;
	Handle next value;
	Handle doc value count;
	Get double values

235.41. Add a class for sortable long bits to numeric double values. It allows to:

	Instantiate sortable long bits to numeric double values  with numeric doc values;
	Handle double value;
	Handle advance exact;
	Get sortable long bits to numeric double values long values

235.42. Add a class for sortable long bits to sorted numeric double values. It allows to:

	Instantiate sortable long bits to sorted numeric double values  with sorted numeric doc values;
	Handle advance exact;
	Handle next value;
	Handle doc value count;
	Get sortable long bits to sorted numeric double values long values

235.43. Add a class for sorted binary doc values. It allows to:

	Handle advance exact;
	Handle doc value count;
	Handle next value

235.44. Add a class for sorted numeric double values. It allows to:

	Instantiate sorted numeric double values;
	Handle advance exact;
	Handle next value;
	Handle doc value count

235.45. Add a class for sorted set DV string field data tests. It allows to:

	Get field data type;
	Check if sorted set DV string field data tests has doc values;
	Min ram bytes used

235.46. Add a class for sorting binary doc values. It allows to:

	Instantiate sorting binary doc values;
	Handle swap;
	Compare;
	Grow sorting binary doc values;
	Handle sort;
	Handle doc value count;
	Handle next value

235.47. Add a class for sorting numeric doc values. It allows to:

	Instantiate sorting numeric doc values;
	Handle swap;
	Compare;
	Resize sorting numeric doc values;
	Handle sort;
	Handle doc value count;
	Handle next value

235.48. Add a class for sorting numeric double values. It allows to:

	Instantiate sorting numeric double values;
	Handle swap;
	Compare;
	Resize sorting numeric double values;
	Handle sort;
	Handle doc value count;
	Handle next value

236. Changes to package org.elasticsearch.index.fielddata.fieldcomparator:  

236.1. Add a class for double values comparator source. It allows to:

	Instantiate double values comparator source  with index numeric field data, sort mode, nested and nested;
	Get reduced type;
	Get values;
	Set scorer;
	Handle new comparator

236.2. Add a class for float values comparator source. It allows to:

	Instantiate float values comparator source  with index numeric field data, sort mode, nested and nested;
	Get reduced type;
	Handle new comparator

236.3. Add a class for long values comparator source. It allows to:

	Instantiate long values comparator source  with index numeric field data, sort mode, nested and nested;
	Instantiate long values comparator source  with index numeric field data, sort mode, nested, converter function and converter function;
	Get reduced type;
	Load doc values;
	Handle new comparator

236.4. Add a class for replace missing tests. It allows to:

	Handle test

237. Changes to package org.elasticsearch.index.fielddata.ordinals:  

237.1. Add a class for global ordinal mapping. It allows to:

	Instantiate global ordinal mapping  with ordinal map, bytes values and bytes values;
	Get value count;
	Get global ord;
	Handle advance exact;
	Handle next ord;
	Lookup ord;
	Get doc ID;
	Handle next doc;
	Get advance;
	Get cost

237.2. Add a class for single ordinals tests. It allows to:

	Handle test sv values;
	Handle test mv ordinals trigger

238. Changes to package org.elasticsearch.index.fielddata.plain:  

238.1. Add a class for abstract atomic geo point field data. It allows to:

	Get bytes values;
	Get script values;
	Handle empty;
	Handle ram bytes used;
	Get child resources;
	Close;
	Get geo point values

238.2. Add a class for abstract atomic ordinals field data. It allows to:

	Instantiate abstract atomic ordinals field data  with script function;
	Get script values;
	Get bytes values;
	Handle empty;
	Handle ram bytes used;
	Get child resources;
	Close;
	Get ordinals values

238.3. Add a class for atomic double field data. It allows to:

	Instantiate atomic double field data;
	Handle ram bytes used;
	Get script values;
	Get bytes values;
	Get atomic double field data long values;
	Handle empty;
	Get double values;
	Get child resources;
	Close atomic double field data

238.4. Add a class for atomic long field data. It allows to:

	Instantiate atomic long field data  with numeric type;
	Handle ram bytes used;
	Get script values;
	Get bytes values;
	Get double values;
	Close atomic long field data

238.5. Add a class for binary DV atomic field data. It allows to:

	Instantiate binary DV atomic field data  with leaf reader;
	Get bytes values;
	Get script values;
	Close binary DV atomic field data;
	Handle ram bytes used;
	Get child resources

238.6. Add an object creator class for binary DV index field data. It allows to:

	Instantiate binary DV index field data  with index;
	Get load;
	Load direct;
	Get sort field

238.7. Add a class for bytes binary DV atomic field data. It allows to:

	Instantiate bytes binary DV atomic field data  with binary doc values;
	Handle ram bytes used;
	Get child resources;
	Get bytes values;
	Get script values;
	Close bytes binary DV atomic field data

238.8. Add a class for half float fielddata tests. It allows to:

	Handle test single valued;
	Handle test multi valued

238.9. Add a class for lat lon point DV atomic field data. It allows to:

	Instantiate lat lon point DV atomic field data  with leaf reader;
	Handle ram bytes used;
	Get child resources;
	Close lat lon point DV atomic field data;
	Get geo point values;
	Handle advance exact;
	Handle doc value count;
	Handle next value

238.10. Add a class for sorted set DV bytes atomic field data. It allows to:

	Instantiate sorted set DV bytes atomic field data  with leaf reader, script function and script function;
	Get ordinals values;
	Close sorted set DV bytes atomic field data;
	Handle ram bytes used;
	Get child resources

238.11. Add a class for sorted set DV ordinals index field data. It allows to:

	Instantiate sorted set DV ordinals index field data  with index settings, index field data cache, circuit breaker service, script function and script function;
	Get sort field;
	Get load;
	Load direct;
	Load global;
	Handle local global direct;
	Get ordinal map

239. Changes to package org.elasticsearch.index.fieldstats:  

239.1. Add a class for field stats provider refresh tests. It allows to:

	Handle test query rewrite on refresh;
	Assert request cache stats;
	Refresh index;
	Handle index document

240. Changes to package org.elasticsearch.index.fieldvisitor:  

240.1. Add a class for custom fields visitor. It allows to:

	Instantiate custom fields visitor  with fields set;
	Get needs field

240.2. Add a class for fields visitor. It allows to:

	Instantiate fields visitor;
	Get needs field;
	Post process;
	Handle binary field;
	String field;
	Handle int field;
	Handle long field;
	Float field;
	Handle double field;
	Get source;
	Get uid;
	Routing fields visitor;
	Get fields;
	Reset fields visitor;
	Add value

240.3. Add a class for single fields visitor. It allows to:

	Instantiate single fields visitor  with mapped field type, destination list and destination list;
	Get needs field;
	Add value;
	Handle binary field;
	String field;
	Handle int field;
	Handle long field;
	Float field;
	Handle double field

241. Changes to package org.elasticsearch.index.get:  

241.1. Add a class for document field tests. It allows to:

	Convert test;
	Handle test equals and hashcode;
	Copy document field;
	Mutate document field;
	Handle random document field

241.2. Add a class for get result. It allows to:

	Instantiate get result;
	Instantiate get result  with source bytes reference, fields map and fields map;
	Check if get result is exists;
	Get index;
	Get type;
	Get id;
	Get version;
	Get get result;
	Get primary term;
	Get source;
	Get source ref;
	Handle internal source ref;
	Check if get result is source empty;
	Get source as string;
	Get source as map;
	Get fields;
	Get field;
	Get iterator;
	Handle to X content embedded;
	Convert get result to X content;
	Handle from X content embedded;
	Process get result get result from X content;
	Read get result;
	Read  from stream input;
	Write  to stream output;
	Check if get result equals;
	Hash code;
	Convert get result to string

241.3. Add a class for get result tests. It allows to:

	Convert test;
	Handle test to and from X content embedded;
	Handle test to X content embedded;
	Handle test to X content embedded not found;
	Handle test get source as bytes;
	Handle test equals and hashcode;
	Copy get result;
	Mutate get result;
	Handle random get result;
	Handle random document fields;
	Handle to X content embedded

241.4. Add a class for shard get service. It allows to:

	Instantiate shard get service  with index settings, index shard, mapper service and mapper service;
	Get stats;
	Get version type;
	Get shard get service for update;
	Get engine get result;
	Normalize fetch source content;
	Handle inner get;
	Handle inner get load from stored fields;
	Build fields visitors

242. Changes to package org.elasticsearch.index.mapper:  

242.1. Add a class for abstract numeric field mapper test case. It allows to:

	Handle setup;
	Get plugins;
	Set type list;
	Handle test defaults;
	Do test defaults;
	Handle test not indexed;
	Do test  not indexed;
	Handle test no doc values;
	Do test no doc values;
	Handle test store;
	Do test store;
	Handle test coerce;
	Do test coerce;
	Handle test decimal coerce;
	Do test decimal coerce;
	Handle test null value;
	Do test null value;
	Handle test empty name

242.2. Add a class for all field mapper tests. It allows to:

	Handle forbid private index settings;
	Test all disabled;
	Handle test update default search analyzer

242.3. Add an interface declaration  for array value mapper parser

242.4. Add a class for bWC template tests. It allows to:

	Get plugins;
	Handle test beats templates BWC

242.5. Add a class for binary field mapper tests. It allows to:

	Get plugins;
	Handle test default mapping;
	Handle test stored value;
	Handle test empty name

242.6. Add an object creator class for binary field type tests. It allows to:

	Create default field type

242.7. Add a class for binary range util tests. It allows to:

	Handle test basics;
	Handle test encode long;
	Handle test variable length encoding;
	Handle test encode double;
	Handle test encode float;
	Normalize binary range util tests

242.8. Add a class for boolean field mapper tests. It allows to:

	Handle setup;
	Get plugins;
	Handle test defaults;
	Handle test serialization;
	Handle test parses booleans strict;
	Handle test multi fields;
	Handle test doc values;
	Handle test empty name

242.9. Add a class for boolean field type tests. It allows to:

	Create default field type;
	Handle setup properties;
	Handle test value format;
	Handle test value for search;
	Handle test term query

242.10. Add a class for builder. It allows to:

	Instantiate builder;
	Get field type;
	Malformed builder;
	Malformed builder context;
	Get locale;
	Get format;
	Process builder builder with resolution;
	Check if builder is formatter set;
	Handle setup field type;
	Build builder context

Add a local a class for type parser. It allows to:

	Instantiate type parser  with resolution;
	Parse node map

Add a local a class for date field type. It allows to:

	Instantiate date field type;
	Instantiate date field type  with other date field type;
	Clone date field type;
	Check if date field type equals;
	Hash code;
	Get type name;
	Check compatibility;
	Get date time formatter;
	Get resolution;
	Set date time formatter;
	Set resolution;
	Get date math parser;
	Parse date field type;
	Check if date field type exists query;
	Get term query;
	Get range query;
	Parse  to long zone id;
	Check if date field type is field within query;
	Handle fielddata builder;
	Get value for display;
	Handle doc value format;
	Get date field mapper;
	Get field type;
	Handle content type;
	Parse create field;
	Merge merge with mapper;
	Do X content body

242.11. Add a class for camel case field name tests. It allows to:

	Handle test camel case field name stays as is

242.12. Add a class for collation field type tests. It allows to:

	Create default field type;
	Handle test is field within query;
	Handle test term query;
	Handle test terms query;
	Handle test regexp query;
	Handle test fuzzy query;
	Handle test prefix query;
	Handle test wildcard query;
	Handle test range query

242.13. Add a class for completion field mapper tests. It allows to:

	Handle test default configuration;
	Handle test completion analyzer settings;
	Handle test type parsing;
	Handle test parsing minimal;
	Handle test parsing failure;
	Handle test keyword with sub completion and context;
	Handle test completion with context and sub completion;
	Handle test completion with context and sub completion index by path;
	Handle test keyword with sub completion and string insert;
	Handle test completion type with sub completion field and string insert;
	Handle test completion type with sub completion field and object insert;
	Handle test completion type with sub keyword field and object insert;
	Handle test completion type with sub keyword field and string insert;
	Handle test parsing multi valued;
	Handle test parsing with weight;
	Handle test parsing multi value with weight;
	Handle test parsing with geo field alias;
	Handle test parsing full;
	Handle test parsing mixed;
	Handle test non context enabled parsing with contexts;
	Handle test field value validation;
	Handle test prefix query type;
	Handle test fuzzy query type;
	Handle test regex query type;
	Assert suggest fields;
	Assert fields  of type;
	Handle test empty name;
	Handle test limit of context mappings;
	Suggest field;
	Get context suggest field;
	Get sorted set doc values field;
	Keyword field;
	Check if completion field mapper tests has property;
	Feature value  of actual

242.14. Add a class for completion field type tests. It allows to:

	Create default field type;
	Handle setup properties;
	Modify ft mapped field type;

242.15. Add a class for content path. It allows to:

	Instantiate content path;
	Add content path;
	Remove content path;
	Get path as text

242.16. Add a class for copy to mapper integration IT. It allows to:

	Convert test dynamic template copy;
	Convert test dynamic object copy;
	Create dynamic template mapping

242.17. Add a class for copy to mapper tests. It allows to:

	Convert test copy;
	Handle test copy to child nested;
	Handle test copy to sibling nested;
	Assert field value;
	Convert test nested copy;
	Handle test copy from multi field

242.18. Add a class for custom doc values field. It allows to:

	Instantiate custom doc values field;
	Name custom doc values field;
	Get field type;
	String value;
	Get reader value;
	Handle numeric value;
	Handle token stream

242.19. Add a class for date field mapper tests. It allows to:

	Handle setup;
	Get plugins;
	Handle test defaults;
	Handle test not indexed;
	Handle test no doc values;
	Handle test store;
	Handle test ignore malformed;
	Handle test change format;
	Handle test change locale;
	Handle test null value;
	Handle test null config values fail;
	Handle test empty name;
	Handle test time zone parsing;
	Handle test merge date;
	Handle test merge text;
	Handle test illegal format field

242.20. Add a class for date field type tests. It allows to:

	Create default field type;
	Handle setup properties;
	Modify ft mapped field type;
	Handle test is field within query empty reader;
	Do test is field  within query;
	Handle test is field within query;
	Handle test value format;
	Handle test value for search;
	Handle test term query;
	Handle test range query;
	Handle test date nano doc values

242.21. Add a class for document field mappers. It allows to:

	Put analyzers map;
	Instantiate document field mappers  with mappers collection, alias mappers collection, default index analyzer, default search analyzer, default search quote analyzer and default search quote analyzer;
	Get mapper;
	Get index analyzer;
	Search analyzer;
	Get search quote analyzer;
	Get iterator

242.22. Add a class for document mapper for type. It allows to:

	Instantiate document mapper for type  with document mapper, mapping and mapping;
	Get document mapper;
	Get mapping

242.23. Add a class for document mapper parser. It allows to:

	Instantiate document mapper parser  with index settings, mapper service, named X content registry, similarity service, mapper registry, query shard context supplier and query shard context supplier;
	Handle parser context;
	Parse source compressed content;
	Parse mapping;
	Check no remaining fields;
	Get remaining fields;
	Extract mapping;
	Get X content registry

242.24. Add a class for document mapper parser tests. It allows to:

	Handle test type level;
	Handle test field name with dots;
	Handle test field name with deep dots;
	Handle test field name with dots conflict;
	Handle test multi fields with field alias

242.25. Add a class for document parser. It allows to:

	Instantiate document parser  with index settings, document mapper parser, document mapper and document mapper;
	Parse document;
	Check if document parser contains disabled object mapper;
	Handle internal parse document;
	Validate type;
	Validate start;
	Validate end;
	Check if document parser is empty doc;
	Get parsed document;
	Wrap source to parse in mapper parsing exception;
	Split and validate path;
	Create dynamic update;
	Pop mappers;
	Add parent mappers list to last mapper;
	Remove uncommon mappers;
	Expand common mappers;
	Create existing mapper update;
	Update parent object mapper;
	Parse object or nested;
	Handle inner parse object;
	Get nested;
	Add fields;
	Get nested context;
	Parse object or field;
	Parse object;
	Parse array;
	Parse non dynamic array;
	Parse value;
	Parse null value;
	Create builder  from field type;
	Handle new long builder;
	Handle new float builder;
	Handle new date builder;
	Create builder  from dynamic value;
	Parse dynamic value;
	Parse copy fields;
	Parse copy;
	Get dynamic parent mapper;
	Handle dynamic or default;
	Get mapper

242.26. Add a class for document parser tests. It allows to:

	Get plugins;
	Handle test field disabled;
	Handle test dots with field disabled;
	Handle test dots with existing mapper;
	Handle test dots with existing nested mapper;
	Handle test unexpected field mapping type;
	Handle test dots with dynamic nested mapper;
	Handle test nested have id and type fields;
	Handle test propagate dynamic with existing mapper;
	Handle test propagate dynamic with dynamic mapper;
	Handle test dynamic root fallback;
	Create dummy mapping;
	Create object mapper;
	Handle test empty mapping update;
	Handle test single mapping update;
	Handle test subfield mapping update;
	Handle test multiple subfield mapping update;
	Handle test deep subfield mapping update;
	Handle test deep subfield after subfield mapping update;
	Handle test object mapping update;
	Handle test dynamic geo point array with template;
	Handle test dynamic long array with template;
	Handle test dynamic long array;
	Handle test dynamic false long array;
	Handle test dynamic strict long array;
	Handle test mapped geo point array;
	Handle test mapped long array;
	Handle test dynamic object with template;
	Handle test dynamic false object;
	Handle test dynamic strict object;
	Handle test dynamic false value;
	Handle test dynamic strict value;
	Handle test dynamic false null;
	Handle test dynamic strict null;
	Handle test mapped null value;
	Handle test dynamic dotted field name long array;
	Handle test dynamic dotted field name long array with parent template;
	Handle test dynamic dotted field name long array with existing parent;
	Handle test dynamic dotted field name long array with existing parent wrong type;
	Handle test dynamic false dotted field name long array;
	Handle test dynamic strict dotted field name long array;
	Handle test dynamic dotted field name long;
	Handle test dynamic dotted field name long with parent template;
	Handle test dynamic dotted field name long with existing parent;
	Handle test dynamic dotted field name long with existing parent wrong type;
	Handle test dynamic false dotted field name long;
	Handle test dynamic strict dotted field name long;
	Handle test dynamic dotted field name object;
	Handle test dynamic dotted field name object with parent template;
	Handle test dynamic dotted field name object with existing parent;
	Handle test dynamic dotted field name object with existing parent wrong type;
	Handle test dynamic false dotted field name object;
	Handle test dynamic strict dotted field name object;
	Handle test document contains metadata field;
	Handle test simple mapper;
	Convert test parse;
	Handle test simple parser;
	Handle test simple parser no type no id;
	Handle test attributes;
	Handle test no document sent;
	Handle test no level;
	Handle test type level;
	Handle test no level with field type as value;
	Handle test type level with field type as value;
	Handle test no level with field type as object;
	Handle test type level with field type as object;
	Handle test no level with field type as value not first;
	Handle test type level with field type as value not first;
	Handle test no level with field type as object not first;
	Handle test type level with field type as object not first;
	Handle test dynamic date detection disabled on numbers;
	Handle test dynamic date detection enabled with no special characters;
	Handle test dynamic fields starting and ending with dot;
	Handle test dynamic fields empty name;
	Handle test blank field names;
	Convert test write;
	Convert test copy;
	Handle test dynamic dotted field name with field alias;
	Handle test typeless

242.27. Add a class for double indexing doc tests. It allows to:

	Handle test double indexing same doc

242.28. Add a class for dynamic mapping IT. It allows to:

	Handle node plugins;
	Handle test conflicting dynamic mappings;
	Handle test conflicting dynamic mappings bulk;
	Assert mappings have field;
	Handle test concurrent dynamic updates;
	Run

242.29. Add a class for dynamic mapping tests. It allows to:

	Get plugins;
	Handle test dynamic true;
	Handle test dynamic false;
	Handle test dynamic strict;
	Handle test dynamic false with inner object but dynamic set on root;
	Handle test dynamic strict with inner object but dynamic set on root;
	Handle test dynamic mapping on empty string;
	Serialize mapper to content;
	Parse document mapper;
	Handle test dynamic mappings not needed;
	Handle test field;
	Handle test incremental;
	Handle test introduce two fields;
	Handle test object;
	Handle test array;
	Handle test inner dynamic mapping;
	Handle test complex array;
	Handle test reuse existing mappings;
	Handle test mix template multi field and mapping reuse;
	Handle test default floating point mappings;
	Do test default floating point mappings;
	Handle test numeric detection enabled;
	Handle test numeric detection default;
	Handle test date detection inherits format;
	Handle test dynamic template order;
	Handle test mapping version after dynamic mapping update

242.30. Add a class for dynamic mapping version tests. It allows to:

	Get plugins;
	Handle test dynamic mapping default;
	Handle test dynamic mapping setting removal

242.31. Add a class for dynamic template. It allows to:

	Handle matches;
	Convert dynamic template to string;
	Process dynamic template dynamic template from string;
	Get default mapping type;
	Parse conf map;
	Instantiate dynamic template  with xcontent field type, match type, mapping and mapping;
	Name dynamic template;
	Match xcontent field type;
	Mapping type;
	Mapping dynamic template for name;
	Get process map;
	Get process list;
	Convert dynamic template to X content

242.32. Add a class for dynamic template tests. It allows to:

	Handle test parse unknown param;
	Handle test parse unknown match type;
	Handle test parse invalid regex;
	Handle test match all template;
	Handle test match type template;
	Handle test serialization

242.33. Add a class for dynamic templates tests. It allows to:

	Handle test match type only;
	Handle test simple;
	Handle test simple with X content traverse

242.34. Add a class for external field mapper tests. It allows to:

	Get plugins;
	Handle forbid private index settings;
	Handle test external values;
	Handle test external values with multifield;
	Handle test external values with multifield two levels

242.35. Add a class for external mapper plugin. It allows to:

	Get mappers;
	Get metadata mappers

242.36. Add a class for external values mapper integration IT. It allows to:

	Handle node plugins;
	Handle test highlighting on custom string;
	Handle test external values;
	Handle test external values with multifield

242.37. Add a class for field names field mapper tests. It allows to:

	Extract field names field mapper tests;
	Set values;
	Assert field names;
	Handle test extract field names;
	Handle test field type;
	Handle test inject into doc during parsing;
	Handle test explicit enabled;
	Handle test disabled;
	Handle test merging mappings

242.38. Add a class for field names field type tests. It allows to:

	Create default field type;
	Handle setup properties;
	Modify ft mapped field type;
	Handle test term query

242.39. Add a class for field type lookup. It allows to:

	Instantiate field type lookup;
	Instantiate field type lookup  with full name to field type copy on write hash map, alias to concrete name copy on write hash map and alias to concrete name copy on write hash map;
	Copy field mappers collection;
	Get field type lookup;
	Handle simple match to full name;
	Get iterator

242.40. Add a class for generic store dynamic template tests. It allows to:

	Handle test simple

242.41. Add a class for geo point field mapper tests. It allows to:

	Get plugins;
	Handle test geo hash value;
	Handle test lat lon values stored;
	Handle test array lat lon values;
	Handle test lat lon in one value;
	Handle test lat lon string with Z value;
	Handle test lat lon string with Z value exception;
	Handle test lat lon in one value stored;
	Handle test lat lon in one value array;
	Handle test lon lat array;
	Handle test lon lat array dynamic;
	Handle test lon lat array stored;
	Handle test lon lat array array stored;
	Handle test ignore Z value;
	Handle test multi field;
	Handle test empty name;
	Handle test null value;
	Handle test invalid geohash ignored;
	Handle test invalid geohash not ignored;
	Handle test invalid geopoint values ignored

242.42. Add an object creator class for geo point field type tests. It allows to:

	Create default field type

242.43. Add a class for geo shape field mapper tests. It allows to:

	Get plugins;
	Handle test default configuration;
	Handle test orientation parsing;
	Handle test coerce parsing;
	Handle test ignore Z value;
	Handle test ignore malformed parsing;
	Assert field warnings;
	Handle test geo shape mapper merge;
	Handle test empty name;
	Handle test serialize defaults;
	Convert geo shape field mapper tests to X content string;

242.44. Add a class for geo shape field type tests. It allows to:

	Create default field type;
	Handle setup properties;
	Modify ft mapped field type

242.45. Add a class for iCU collation keyword field mapper IT. It allows to:

	Handle node plugins;
	Handle test basic usage;
	Handle test multiple values;
	Handle test normalization;
	Handle test secondary strength;
	Handle test ignore punctuation;
	Handle test ignore whitespace;
	Handle test numerics;
	Handle test ignore accents but not case;
	Handle test upper case first;
	Handle test custom rules

242.46. Add a class for iCU collation keyword field mapper tests. It allows to:

	Get plugins;
	Handle setup;
	Handle test defaults;
	Handle test null value;
	Handle test enable store;
	Handle test disable index;
	Handle test disable doc values;
	Handle test multiple values;
	Handle test index options;
	Handle test enable norms;
	Handle test collator;
	Handle test update collator

242.47. Add a class for id field mapper tests. It allows to:

	Get plugins;
	Handle test include in object not allowed;
	Handle test defaults

242.48. Add a class for id field type tests. It allows to:

	Create default field type;
	Handle test range query;
	Handle test terms query

242.49. Add a class for index field mapper tests. It allows to:

	Get plugins;
	Handle test default disabled index mapper;
	Handle test index not configurable

242.50. Add a class for index field type tests. It allows to:

	Create default field type;
	Handle test prefix query;
	Handle test regexp query;
	Handle test wildcard query;
	Create context

242.51. Add a class for ip field mapper tests. It allows to:

	Handle setup;
	Get plugins;
	Handle test defaults;
	Handle test not indexed;
	Handle test no doc values;
	Handle test store;
	Handle test ignore malformed;
	Handle test null value;
	Handle test serialize defaults;
	Handle test empty name

242.52. Add a class for ip field type tests. It allows to:

	Create default field type;
	Handle test value format;
	Handle test value for search;
	Handle test term query;
	Handle test terms query;
	Handle test range query

242.53. Add a class for ip range field mapper tests. It allows to:

	Handle setup;
	Handle test store cidr

242.54. Add a class for java multi field merge tests. It allows to:

	Handle test merge multi field;
	Convert test upgrade from multi field type

242.55. Add a class for keyword field type tests. It allows to:

	Handle setup properties;
	Modify mapped field type;
	Create default field type;
	Handle test is field within query;
	Handle test term query;
	Handle test term query with normalizer;
	Create components;
	Normalize in token stream;
	Handle test terms query;
	Handle test exists query;
	Handle test regexp query;
	Handle test fuzzy query;
	Handle test normalize queries

242.56. Add a class for mapped field type. It allows to:

	Instantiate mapped field type  with ref mapped field type;
	Instantiate mapped field type;
	Clone mapped field type;
	Handle fielddata builder;
	Check if mapped field type equals;
	Hash code;
	Get type name;
	Check type name;
	Check compatibility;
	Name mapped field type;
	Set name;
	Boost mapped field type;
	Set boost;
	Check if mapped field type has doc values;
	Set has doc values;
	Get index analyzer;
	Set index analyzer;
	Search analyzer;
	Set search analyzer;
	Get search quote analyzer;
	Set search quote analyzer;
	Get similarity;
	Set similarity;
	Handle null value;
	Handle null value as string;
	Set null value;
	Get value for display;
	Check if mapped field type is searchable;
	Check if mapped field type is aggregatable;
	Get term query;
	Get terms query;
	Get range query;
	Handle fuzzy query;
	Prefix query;
	Get wildcard query;
	Regexp query;
	Check if mapped field type exists query;
	Get phrase query;
	Get multi phrase query;
	Get phrase prefix query;
	Span prefix query;
	Get intervals;
	Check if mapped field type is field within query;
	Fail mapped field type if no doc values;
	Fail mapped field type if not indexed;
	Handle eager global ordinals;
	Get set eager global ordinals;
	Handle doc value format;
	Extract term

242.57. Add a class for mapper exception. It allows to:

	Instantiate mapper exception  with stream input;
	Instantiate mapper exception;
	Instantiate mapper exception  with cause throwable;

242.58. Add a class for mapper extras client yaml test suite IT. It allows to:

	Instantiate mapper extras client yaml test suite IT  with client yaml test candidate;
	Get parameters

242.59. Add a class for mapper extras plugin. It allows to:

	Get mappers;
	Get metadata mappers;
	Get queries

242.60. Add a class for mapper parsing exception. It allows to:

	Instantiate mapper parsing exception  with stream input;
	Instantiate mapper parsing exception;
	Instantiate mapper parsing exception  with cause throwable;
	Get status

242.61. Add a class for mapper service tests. It allows to:

	Get plugins;
	Handle test type name starts with illegal dot;
	Handle test type name too long;
	Handle test type validation;
	Handle test index into default mapping;
	Handle test total fields limit;
	Create mapping specifying number  of fields;
	Handle test mapping depth exceeds limit;
	Handle test unmapped field type;
	Handle test partitioned constraints;
	Handle test index sort with nested fields;
	Handle test field alias with mismatched nested scope;
	Handle test total fields limit with field alias;
	Handle test forbid multiple types;
	Handle test forbid multiple types with conflicting mappings;
	Handle test default mapping is rejected on 7;
	Handle test field name length limit;
	Handle test object name length limit;
	Handle test alias field name length limit;
	Handle test mapping recovery skip field name length limit

242.62. Add a class for mapper tests. It allows to:

	Handle test successful builder context;
	Handle test builder context with index settings as null

242.63. Add a class for mapping. It allows to:

	Instantiate mapping  with index created version, root object mapper, metadata field mapper, meta map and meta map;
	Compare o 1 mapper;
	Get root;
	Update root object mapper;
	Handle metadata mapper;
	Merge merge with mapping;
	Update field type;
	Convert mapping to X content;
	Convert to X content;
	Convert mapping to string

242.64. Add a class for mock field filter plugin. It allows to:

	Get field filter

242.65. Add a class for multi field copy to mapper tests. It allows to:

	Convert test exception for copy;
	Create mappinmg  with copy to in multi field

242.66. Add a class for multi field tests. It allows to:

	Handle test multi field multi fields;
	Handle test multi field;
	Handle test build then parse;
	Handle test multi fields in consistent order;
	Handle test object field not allowed;
	Handle test nested field not allowed;
	Handle test multi field with dot

242.67. Add a class for multi fields integration IT. It allows to:

	Handle test multi fields;
	Handle test geo point multi field;
	Handle test completion multi field;
	Handle test ip multi field;
	Create mapping source;
	Create type source;
	Create put mapping source

242.68. Add a class for nested object mapper tests. It allows to:

	Get plugins;
	Handle test empty nested;
	Handle test single nested;
	Handle test multi nested;
	Handle test multi object and nested 1;
	Convert test multi object and nested;
	Handle test multi root and nested 1;
	Handle test multiple levels include root 1;
	Convert test multiple levels include root;
	Handle test nested array strict;
	Handle test limit of nested fields per index;
	Handle test parent object mapper are nested;
	Handle test limit nested docs default settings;
	Handle test limit nested docs;
	Handle test limit nested docs multiple nested fields;
	Handle forbid private index settings;
	Handle test reorder parent BWC

242.69. Add a class for null value object mapping tests. It allows to:

	Handle test null value object

242.70. Add a class for null value tests. It allows to:

	Handle test null null value

242.71. Add a class for number field mapper tests. It allows to:

	Set type list;
	Do test defaults;
	Do test  not indexed;
	Do test no doc values;
	Do test store;
	Do test coerce;
	Do test decimal coerce;
	Handle test ignore malformed;
	Do test ignore malformed;
	Handle test reject norms;
	Handle test reject index options;
	Do test null value;
	Handle test empty name;
	Test number field mapper tests out of range values;
	Parse request;
	Create document mapper;
	Create index request

242.72. Add a class for number field type. It allows to:

	Instantiate number field type  with number type;
	Instantiate number field type  with other number field type;
	Clone number field type;
	Get type name;
	Check if number field type exists query;
	Get term query;
	Get terms query;
	Get range query;
	Handle fielddata builder;
	Get value for display;
	Handle doc value format;
	Parse point;
	Check if number field type equals;
	Hash code;
	Get number field mapper;
	Get field type;
	Handle content type;
	Parse create field;
	Merge merge with mapper;
	Do X content body

242.73. Add a class for object mapper tests. It allows to:

	Handle test different inner object token failure;
	Handle test empty array properties;
	Handle test empty fields array multi fields;
	Handle test fields array multi fields should throw exception;
	Handle test empty fields array;
	Handle test fields with filled array should throw exception;
	Handle test field properties array;
	Handle test merge;
	Handle test empty name;
	Get plugins

242.74. Add a class for parsed document. It allows to:

	Instantiate parsed document  with version field, seq no field mapper sequence ID fields, documents list, source bytes reference, X content type, dynamic mappings update and dynamic mappings update;
	I parsed document;
	Get type;
	Get version;
	Update seq ID;
	Convert parsed document to tombstone;
	Routing parsed document;
	Root doc;
	Get docs;
	Get source;
	Get X content type;
	Set source;
	Handle dynamic mappings update;
	Add dynamic mappings update;
	Convert parsed document to string

242.75. Add a class for path mapper tests. It allows to:

	Handle test path mapping

242.76. Add a class for path match dynamic template tests. It allows to:

	Handle test simple

242.77. Add a class for range. It allows to:

	Instantiate range  with range type;
	Convert range to string

Add a local a class for binary ranges doc values field. It allows to:

	Instantiate binary ranges doc values field  with range, range type and range type;
	Add range;
	Handle binary value

242.78. Add a class for range field mapper tests. It allows to:

	Get plugins;
	Set type list;
	Get range field mapper tests from;
	Get range field mapper tests from field;
	Get range field mapper tests to field;
	Get range field mapper tests to;
	Get max;
	Do test defaults;
	Do test  not indexed;
	Do test no doc values;
	Do test store;
	Do test coerce;
	Do test decimal coerce;
	Do test null value;
	Handle test no bounds;
	Do test no bounds;
	Handle test illegal arguments;
	Handle test serialize defaults;
	Handle test illegal format field

242.79. Add a class for range field query string query builder tests. It allows to:

	Initialize additional mappings;
	Handle test integer range query;
	Handle test long range query;
	Handle test float range query;
	Handle test double range query;
	Handle test date range query;
	Handle test IP range query;
	Do create test query builder;
	Do assert lucene query

242.80. Add a class for range field type tests. It allows to:

	Handle setup properties;
	Modify ft mapped field type;
	Create default field type;
	Handle test range query;
	Create context;
	Handle test date range query using mapping format;
	Get expected range query;
	Get date range query;
	Get int range query;
	Get long range query;
	Get float range query;
	Get double range query;
	Get inet address range query;
	Next range field type tests from;
	Handle next to;
	Handle test parse ip;
	Handle test term query

242.81. Add a class for root object mapper tests. It allows to:

	Handle test numeric detection;
	Handle test date detection;
	Handle test date formatters;
	Handle test dynamic templates;
	Handle test illegal format field

242.82. Add a class for routing field mapper tests. It allows to:

	Handle test routing mapper;
	Handle test include in object not allowed

242.83. Add a class for routing field type tests. It allows to:

	Create default field type;
	Handle test prefix query;
	Handle test regexp query;
	Handle test wildcard query

242.84. Add a class for scaled float field mapper tests. It allows to:

	Handle setup;
	Get plugins;
	Handle test defaults;
	Handle test missing scaling factor;
	Handle test illegal scaling factor;
	Handle test not indexed;
	Handle test no doc values;
	Handle test store;
	Handle test coerce;
	Handle test ignore malformed;
	Do test ignore malformed;
	Handle test null value;
	Handle test empty name;
	Handle test reject index options

242.85. Add a class for scaled float field type tests. It allows to:

	Create default field type;
	Handle setup properties;
	Modify ft mapped field type;
	Normalize other;
	Handle test term query;
	Handle test terms query;
	Handle test range query;
	Handle test rounds upper bound correctly;
	Handle test rounds lower bound correctly;
	Handle test value for search;
	Handle test field data

242.86. Add a class for simple mapped field type. It allows to:

	Instantiate simple mapped field type;
	Instantiate simple mapped field type  with ref mapped field type;
	Get range query;

242.87. Add a class for source field mapper tests. It allows to:

	Get plugins;
	Handle test no format;
	Handle test includes;
	Handle test excludes;
	Assert conflicts;
	Handle test enabled not updateable;
	Handle test includes not updateable;
	Handle test excludes not updateable;
	Handle test complete;
	Handle test source object contains extra tokens

242.88. Add an object creator class for source field type tests. It allows to:

	Create default field type

242.89. Add a class for source to parse. It allows to:

	Instantiate source to parse  with source bytes reference, X content type and X content type;
	Get source;
	Get index;
	Get type;
	I source to parse;
	Routing source to parse;
	Get X content type

242.90. Add a class for stored numeric values tests. It allows to:

	Handle test bytes and numeric representation

242.91. Add a class for strict dynamic mapping exception. It allows to:

	Instantiate strict dynamic mapping exception;
	Instantiate strict dynamic mapping exception  with stream input;
	Get status

242.92. Add a class for string field type. It allows to:

	Instantiate string field type;
	Instantiate string field type  with ref mapped field type;
	Get terms query;
	Handle fuzzy query;
	Prefix query;
	Get wildcard query;
	Regexp query;
	Get range query

242.93. Add a class for term based field type. It allows to:

	Instantiate term based field type;
	Instantiate term based field type  with ref mapped field type;
	Get indexed value for search;
	Get term query;
	Get terms query

242.94. Add a class for text field mapper tests. It allows to:

	Handle setup;
	Get plugins;
	Handle test defaults;
	Handle test enable store;
	Handle test disable index;
	Handle test disable norms;
	Handle test index options;
	Handle test default position increment gap;
	Handle test position increment gap;
	Handle test search analyzer serialization;
	Handle test search quote analyzer serialization;
	Handle test term vectors;
	Handle test eager global ordinals;
	Handle test fielddata;
	Handle test frequency filter;
	Handle test null config values fail;
	Handle test not indexed field position increment;
	Handle test analyzed field position increment without positions;
	Handle test empty name;
	Handle test index prefix index types;
	Handle test fast phrase mapping;
	Handle test index prefix mapping;
	Handle test fast phrase prefixes;
	Handle test simple merge

242.95. Add a class for text field type tests. It allows to:

	Create default field type;
	Handle setup properties;
	Modify ft mapped field type;
	Handle test term query;
	Handle test terms query;
	Handle test regexp query;
	Handle test fuzzy query;
	Handle test index prefixes

242.96. Add a class for token count field mapper integration IT. It allows to:

	Build parameters;
	Instantiate token count field mapper integration IT;
	Handle test search returns token count;
	Handle test search by token count;
	Handle test facet by token count;
	Handle init;
	Prepare index;
	Get search by id;
	Get search by numeric range;
	Prepare search;
	Assert search returns;
	Assert search hit

242.97. Add a class for token count field mapper tests. It allows to:

	Get plugins;
	Handle test merge;
	Handle test count positions with increments;
	Handle test count positions without increments;
	Create mock analyzer;
	Create components;
	Handle test empty name;
	Handle test parse null value;
	Handle test parse empty value;
	Handle test parse not null value;
	Create index  with token count field;
	Create document;
	Parse document

242.98. Add a class for type field mapper tests. It allows to:

	Get plugins;
	Handle test doc values single type;
	Handle test doc values;
	Handle test defaults

242.99. Add a class for type field type tests. It allows to:

	Create default field type;
	Handle test terms query

242.100. Add a class for type parsers. It allows to:

	Parse analyzers and term vectors;
	Parse norms;
	Parse text field;
	Parse field;
	Parse multi field;
	Handle node index option value;
	Parse date time formatter;
	Parse term vector;
	Parse copy fields;
	Resolve similarity

242.101. Add a class for uid. It allows to:

	Instantiate uid;
	Get type;
	I uid;
	Check if uid equals;
	Hash code;
	Convert uid to string;
	Check if uid is URL base 64 without padding;
	Check if uid is positive numeric;
	Encode numeric id;
	Encode base 64 id;
	Encode utf 8 id;
	Encode id;
	Decode numeric id;
	Decode utf 8 id;
	Decode base 64 id;
	Decode id;

242.102. Add a class for uid tests. It allows to:

	Split uid  into type and id;
	Handle test is URL base 64 without padding;
	Handle test encode UTF 8 ids;
	Handle test encode numeric ids;
	Handle test encode base 64 ids;
	Do decode id

242.103. Add a class for update mapping tests. It allows to:

	Get plugins;
	Handle test conflict fields mapping;
	Handle test conflict while merging and mapping unchanged;
	Handle test conflict same type;
	Handle test conflict new type;
	Handle test reuse meta field;
	Handle test reject field defined twice;
	Handle test mapping version

242.104. Add an object creator class for version field type tests. It allows to:

	Create default field type

243. Changes to package org.elasticsearch.index.mapper.murmur3:  

243.1. Add a class for mapper murmur 3 client yaml test suite IT. It allows to:

	Instantiate mapper murmur 3 client yaml test suite IT  with client yaml test candidate;
	Get parameters

243.2. Add a class for murmur 3 field mapper tests. It allows to:

	Handle setup;
	Get plugins;
	Handle test defaults;
	Handle test doc values setting not allowed;
	Handle test index setting not allowed;
	Handle test empty name

244. Changes to package org.elasticsearch.index.mapper.size:  

244.1. Add a class for mapper size client yaml test suite IT. It allows to:

	Instantiate mapper size client yaml test suite IT  with client yaml test candidate;
	Get parameters

244.2. Add a class for size mapping IT. It allows to:

	Handle node plugins;
	Handle test that updating mapping should not remove size mapping configuration;
	Handle test that size can be switched on and off;
	Assert size mapping enabled;
	Handle test basic

244.3. Add a class for size mapping tests. It allows to:

	Get plugins;
	Handle test size enabled;
	Handle test size disabled;
	Handle test size not set;
	Handle test that disabling works when merging

245. Changes to package org.elasticsearch.index.merge:  

245.1. Add a class for on going merge. It allows to:

	Instantiate on going merge  with merge policy one merge;
	Get id;
	Get merged segments

246. Changes to package org.elasticsearch.index.query:  

246.1. Add a class for abstract query builder. It allows to:

	Instantiate abstract query builder;
	Instantiate abstract query builder  with stream input;
	Write  to stream output;
	Do write  to stream output;
	Convert abstract query builder to X content;
	Do X content;
	Print boost and query name;
	Convert abstract query builder to query;
	Do query shard context to query;
	Get query name;
	Boost abstract query builder;
	Check negative boost;
	Add validation error;
	Check if abstract query builder equals;
	Equals other QB;
	Hash code;
	Do hash code;
	Convert maybe convert;
	Convert abstract query builder to queries;
	Get name;
	Write queries;
	Read queries;
	Rewrite query rewrite context;
	Extract inner hit builders;
	Parse inner query builder;
	Require value;
	Throw parsing exception  on multiple fields;
	Declare standard fields;
	Convert abstract query builder to string

246.2. Add a class for abstract query builder tests. It allows to:

	Handle init;
	Handle cleanup;
	Handle test parse inner query builder;
	Handle test parse inner query builder exceptions;
	X content registry

246.3. Add a class for abstract term query test case. It allows to:

	Create query builder;
	Handle test illegal arguments;
	Get alternate versions

246.4. Add a class for base term query builder. It allows to:

	Instantiate base term query builder;
	Instantiate base term query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get value;
	Do X content;
	Do hash code;
	Equals other QB

246.5. Add a class for bool query builder. It allows to:

	Instantiate bool query builder;
	Instantiate bool query builder  with stream input;
	Do write  to stream output;
	Must query builder;
	Must bool query builder;
	Get filter;
	Must query builder not;
	Must bool query builder not;
	Should query builder;
	Should bool query builder;
	Handle minimum should match;
	Check if bool query builder has clauses;
	Adjust pure negative;
	Do X content;
	Do X array content;
	Process bool query builder bool query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Add boolean clauses;
	Do hash code;
	Equals other bool query builder;
	Rewrite query rewrite context;
	Extract inner hit builders;
	Rewrite clauses

246.6. Add a class for bool query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Get boolean clauses;
	Get alternate versions;
	Handle test illegal arguments;
	Handle test empty boolean query;
	Handle test min should match filter without should clauses;
	Handle test min should match bigger than number of should clauses;
	Handle test min should match disable coord;
	Handle test from json;
	Handle test unknown query name;
	Handle test rewrite;
	Handle test rewrite multiple times;
	Handle test rewrite with match none

246.7. Add a class for boosting query builder. It allows to:

	Instantiate boosting query builder  with positive query builder, negative query builder and negative query builder;
	Instantiate boosting query builder  with stream input;
	Do write  to stream output;
	Handle positive query;
	Handle negative query;
	Handle negative boost;
	Do X content;
	Process boosting query builder boosting query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Do hash code;
	Equals other boosting query builder;
	Rewrite query rewrite context;
	Extract inner hit builders

246.8. Add a class for boosting query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test from json;
	Handle test rewrite

246.9. Add a class for combine function tests. It allows to:

	Handle test valid ordinals;
	Convert test write;
	Handle test read from;
	Handle test from string

246.10. Add a class for common terms query builder. It allows to:

	Instantiate common terms query builder;
	Instantiate common terms query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get value;
	Handle high freq operator;
	Handle low freq operator;
	Get analyzer;
	Handle cutoff frequency;
	Handle high freq minimum should match;
	Handle low freq minimum should match;
	Do X content;
	Process common terms query builder common terms query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Parse query string;
	Do hash code;
	Equals other common terms query builder

246.11. Add a class for common terms query builder tests. It allows to:

	Do create test query builder;
	Get alternate versions;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test from json;
	Handle test common terms query 1;
	Convert test common terms query;
	Handle test common terms query 3;
	Handle test common terms query 4;
	Handle test parse fails with multiple fields

246.12. Add a class for common terms query parser tests. It allows to:

	Handle test when parsed query is null no null pointer exception is thrown

246.13. Add a class for constant score query builder. It allows to:

	Instantiate constant score query builder  with filter builder;
	Instantiate constant score query builder  with stream input;
	Do write  to stream output;
	Handle inner query;
	Do X content;
	Process constant score query builder constant score query builder from X content;
	Do query shard context to query;
	Get writeable name;
	Do hash code;
	Equals other constant score query builder;
	Rewrite query rewrite context;
	Extract inner hit builders

246.14. Add a class for constant score query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test filter element;
	Handle test no array as filter elements;
	Handle test illegal arguments;
	Handle test unknown field;
	Handle test from json;
	Convert test rewrite

246.15. Add a class for dis max query builder. It allows to:

	Instantiate dis max query builder;
	Instantiate dis max query builder  with stream input;
	Do write  to stream output;
	Add query builder;
	Handle inner queries;
	Tie breaker;
	Do X content;
	Process dis max query builder dis max query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other dis max query builder;
	Get writeable name;
	Extract inner hit builders

246.16. Add a class for dis max query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Get alternate versions;
	Handle test illegal arguments;
	Convert test;
	Handle test from json

246.17. Add a class for exists query builder. It allows to:

	Instantiate exists query builder;
	Instantiate exists query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Do X content;
	Process exists query builder exists query builder from X content;
	Do query shard context to query;
	Handle new filter;
	Handle new legacy exists query;
	Handle new field exists query;
	Handle new object field exists query;
	Do hash code;
	Equals other exists query builder;
	Get writeable name

246.18. Add a class for exists query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test from json

246.19. Add a class for field masking span query builder. It allows to:

	Instantiate field masking span query builder  with span query builder;
	Instantiate field masking span query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Handle inner query;
	Do X content;
	Process field masking span query builder field masking span query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other field masking span query builder;
	Get writeable name

246.20. Add a class for field masking span query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test from json

246.21. Add a class for fuzzy query builder. It allows to:

	Instantiate fuzzy query builder;
	Instantiate fuzzy query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get value;
	Get fuzziness;
	Prefix length;
	Get max expansions;
	Get transpositions;
	Handle transpositions;
	Rewrite fuzzy query builder;
	Do X content;
	Process fuzzy query builder fuzzy query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Do hash code;
	Equals other fuzzy query builder

246.22. Add a class for fuzzy query builder tests. It allows to:

	Do create test query builder;
	Get alternate versions;
	Do assert lucene query;
	Handle test illegal arguments;
	Convert test;
	Handle test from json;
	Handle test parse fails with multiple fields;
	Handle test parse fails with value array;

246.23. Add a class for geo bounding box query builder. It allows to:

	Instantiate geo bounding box query builder;
	Instantiate geo bounding box query builder  with stream input;
	Do write  to stream output;
	Set corners;
	Handle top left;
	Handle bottom right;
	Set corners OGC;
	Set validation method;
	Get validation method;
	Get type;
	Get field name;
	Ignore unmapped;
	Check lat lon;
	Do query shard context to query;
	Do X content;
	Process geo bounding box query builder geo bounding box query builder from X content;
	Equals other geo bounding box query builder;
	Do hash code;
	Get writeable name;
	Parse bounding box

246.24. Add a class for geo distance query builder. It allows to:

	Instantiate geo distance query builder;
	Instantiate geo distance query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get point;
	Get distance;
	Get geohash;
	Geo distance;
	Set validation method;
	Get validation method;
	Ignore unmapped;
	Do query shard context to query;
	Do X content;
	Process geo distance query builder geo distance query builder from X content;
	Do hash code;
	Equals other geo distance query builder;
	Check lat lon;
	Get writeable name

246.25. Add a class for geo distance query builder tests. It allows to:

	Do create test query builder;
	Handle test illegal values;
	Convert test;
	Do assert lucene query;
	Convert test parsing and;
	Assert geo distance range query;
	Handle test from json;
	Handle test ignore unmapped;
	Handle test parse fails with multiple fields

246.26. Add a class for geo polygon query builder. It allows to:

	Instantiate geo polygon query builder  with points list;
	Instantiate geo polygon query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get points;
	Set validation method;
	Get validation method;
	Ignore unmapped;
	Do query shard context to query;
	Do X content;
	Process geo polygon query builder geo polygon query builder from X content;
	Equals other geo polygon query builder;
	Do hash code;
	Get writeable name

246.27. Add a class for geo polygon query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle random polygon;
	Handle test null field name;
	Handle test empty polygon;
	Handle test invalid closed polygon;
	Handle test invalid open polygon;
	Convert test parsing and;
	Assert geo polygon query;
	Handle test from json;
	Handle test ignore unmapped;
	Handle test point validation

246.28. Add a class for geo shape query builder. It allows to:

	Instantiate geo shape query builder  with shape builder;
	Instantiate geo shape query builder;
	Instantiate geo shape query builder  with supplier;
	Instantiate geo shape query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get shape;
	Get indexed shape id;
	Get indexed shape type;
	Get strategy;
	Get indexed shape index;
	Get indexed shape path;
	Get indexed shape routing;
	Get relation;
	Ignore unmapped;
	Do query shard context to query;
	Get vector query;
	Get vector query  from shape;
	Get visit;
	Handle visit;
	Fetch client;
	Process  on response;
	Process  on failure;
	Get args;
	Do X content;
	Process geo shape query builder geo shape query builder from X content;
	Equals other geo shape query builder;
	Do hash code;
	Get writeable name;
	Rewrite query rewrite context

246.29. Add a class for geo shape query builder tests. It allows to:

	Get field name;
	Create test index settings;
	Do create test query builder;
	Get get request;
	Handle clear shape fields;
	Do assert lucene query;
	Handle test no field name;
	Handle test no shape;
	Handle test no indexed shape;
	Handle test no relation;
	Handle test that X content serialization inside of array works;
	Handle test from json;
	Handle test must rewrite;
	Handle test multiple rewrite;
	Handle test ignore unmapped;
	Handle test wrong field type;
	Handle test serialization fails unless fetched;
	Parse query

246.30. Add a class for ids query builder. It allows to:

	Instantiate ids query builder;
	Instantiate ids query builder  with stream input;
	Do write  to stream output;
	Get types;
	Add ids;
	Get ids;
	Do X content;
	Process ids query builder ids query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Do hash code;
	Equals other ids query builder

246.31. Add a class for ids query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test ids query with invalid values;
	Handle test from json;
	Parse query

246.32. Add a class for inner hit builder. It allows to:

	Instantiate inner hit builder;
	Instantiate inner hit builder  with stream input;
	Write  to stream output;
	Get name;
	Set name;
	Set ignore unmapped;
	Check if inner hit builder is ignore unmapped;
	Get inner hit builder from;
	Get set from;
	Get size;
	Set size;
	Check if inner hit builder is explain;
	Explain inner hit builder;
	Check if inner hit builder is version;
	Get set version;
	Check if inner hit builder is seq no and primary term;
	Set seq no and primary term;
	Check if inner hit builder is track scores;
	Set track scores;
	Get stored fields context;
	Set stored field names;
	Get doc value fields;
	Set doc value fields;
	Add doc value field;
	Get script fields;
	Set script fields;
	Add script field;
	Get fetch source context;
	Set fetch source context;
	Get sorts;
	Set sorts;
	Add sort;
	Get highlight builder;
	Set highlight builder;
	Get query;
	Set inner collapse;
	Get inner collapse builder;
	Convert inner hit builder to X content;
	Check if inner hit builder equals;
	Hash code;
	Process inner hit builder inner hit builder from X content;
	Convert inner hit builder to string

246.33. Add a class for inner hit builder tests. It allows to:

	Handle init;
	Process inner hit builder tests inner hit builder tests after class;
	X content registry;
	Handle test serialization;
	Handle test serialization order;
	Convert test from and;
	Handle test equals and hashcode;
	Handle random nested inner hits;
	Handle random inner hits;
	Mutate original inner hit builder;
	Handle random script;
	Handle random list stuff;
	Get serialized copy;
	Handle test set doc value format

246.34. Add a class for inner hit context builder. It allows to:

	Instantiate inner hit context builder  with query builder, inner hit builder, children map and children map;
	Build parent search context;
	Extract inner hits;
	Handle setup inner hits context;
	Build child inner hits

246.35. Add a class for match all query builder. It allows to:

	Instantiate match all query builder;
	Instantiate match all query builder  with stream input;
	Do write  to stream output;
	Do X content;
	Process match all query builder match all query builder from X content;
	Do query shard context to query;
	Equals other match all query builder;
	Do hash code;
	Get writeable name

246.36. Add a class for match all query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test from json

246.37. Add a class for match none query builder. It allows to:

	Instantiate match none query builder;
	Instantiate match none query builder  with stream input;
	Do write  to stream output;
	Do X content;
	Process match none query builder match none query builder from X content;
	Do query shard context to query;
	Equals other match none query builder;
	Do hash code;
	Get writeable name

246.38. Add a class for match none query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test from json

246.39. Add a class for match phrase prefix query builder. It allows to:

	Instantiate match phrase prefix query builder;
	Instantiate match phrase prefix query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get value;
	Get analyzer;
	Get slop;
	Get max expansions;
	Get writeable name;
	Do X content;
	Do query shard context to query;
	Equals other match phrase prefix query builder;
	Do hash code;
	Process match phrase prefix query builder match phrase prefix query builder from X content

246.40. Add a class for match phrase prefix query builder tests. It allows to:

	Do create test query builder;
	Get alternate versions;
	Do assert lucene query;
	Handle test illegal values;
	Handle test bad analyzer;
	Handle test phrase on field with no terms;
	Handle test phrase prefix match query;
	Handle test parse fails with multiple fields

246.41. Add a class for match phrase query builder. It allows to:

	Instantiate match phrase query builder;
	Instantiate match phrase query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get value;
	Get analyzer;
	Get slop;
	Zero terms query;
	Get writeable name;
	Do X content;
	Do query shard context to query;
	Equals other match phrase query builder;
	Do hash code;
	Process match phrase query builder match phrase query builder from X content

246.42. Add a class for match phrase query builder tests. It allows to:

	Do create test query builder;
	Get alternate versions;
	Do assert lucene query;
	Handle test illegal values;
	Handle test bad analyzer;
	Handle test from simple json;
	Handle test from json;
	Handle test parse fails with multiple fields

246.43. Add a class for match query builder. It allows to:

	Instantiate match query builder;
	Instantiate match query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get value;
	Get operator;
	Get analyzer;
	Get fuzziness;
	Prefix length;
	Get max expansions;
	Handle cutoff frequency;
	Handle minimum should match;
	Handle fuzzy rewrite;
	Handle fuzzy transpositions;
	Handle lenient;
	Zero terms query;
	Get auto generate synonyms phrase query;
	Handle auto generate synonyms phrase query;
	Do X content;
	Do query shard context to query;
	Equals other match query builder;
	Do hash code;
	Get writeable name;
	Process match query builder match query builder from X content

246.44. Add a class for more like this query builder tests. It allows to:

	Handle setup;
	Handle random string fields;
	Generate random item;
	Handle random artificial doc;
	Handle random per field analyzer;
	Do create test query builder;
	Get shuffle protected fields;
	Get objects holding arbitrary content;
	Execute multi term vectors;
	Generate fields;
	Do assert lucene query;
	Handle test validate empty fields;
	Handle test validate empty like;
	Handle test unsupported fields;
	Test more  like this builder;
	Handle test item serialization;
	Handle test item copy;
	Handle test item from X content;
	Check if more like this query builder tests is cacheable;
	Handle test from json;
	Parse query

246.45. Add a class for multi match query builder. It allows to:

	Get type;
	Tie breaker;
	Match query type;
	Parse field;
	Parse deprecation handler;
	Read stream input from stream;
	Write  to stream output;
	Instantiate multi match query builder;
	Instantiate multi match query builder  with stream input;
	Do write  to stream output;
	Get value;
	Get field;
	Get fields;
	Get operator;
	Get analyzer;
	Get slop;
	Get fuzziness;
	Prefix length;
	Get max expansions;
	Handle minimum should match;
	Handle fuzzy rewrite;
	Handle lenient;
	Handle cutoff frequency;
	Zero terms query;
	Get auto generate synonyms phrase query;
	Handle auto generate synonyms phrase query;
	Handle fuzzy transpositions;
	Do X content;
	Process multi match query builder multi match query builder from X content;
	Parse field and boost;
	Get writeable name;
	Do query shard context to query;
	Do hash code;
	Equals other multi match query builder

246.46. Add a class for multi match query builder tests. It allows to:

	Do create test query builder;
	Get alternate versions;
	Do assert lucene query;
	Handle test illega arguments;
	Convert test;
	Handle test to query fields wildcard;
	Handle test from json;
	Handle test fuzziness not allowed types;
	Handle test query parameter array exception;
	Handle test exception using analyzer on numeric field;
	Handle test fuzziness on non string field;
	Handle test default field;
	Handle test with stop words;
	Handle test negative field boost;
	Handle new index meta

246.47. Add an interface declaration  for multi term query builder. It allows to:

	Get field name

246.48. Add a class for nested query builder tests. It allows to:

	Initialize additional mappings;
	Do create test query builder;
	Do assert lucene query;
	Handle test serialization BWC;
	Handle test validate;
	Handle test from json;
	Handle test must rewrite;
	Handle test ignore unmapped;
	Handle test ignore unmapped with rewrite;
	Handle test min from string;
	Handle test max from string;
	Handle test avg from string;
	Handle test sum from string;
	Handle test none from string;
	Handle test that null from string throws exception;
	Handle test that unrecognized from string throws exception;
	Handle test inline leaf inner hits nested query;
	Handle test inline leaf inner hits nested query via bool query;
	Handle test inline leaf inner hits nested query via constant score query;
	Handle test inline leaf inner hits nested query via boosting query;
	Handle test inline leaf inner hits nested query via function score query;
	Handle test build ignore unmapped nest query;
	Handle test extract inner hit builders with duplicate

246.49. Add a class for operator tests. It allows to:

	Handle test valid ordinals;
	Convert test write;
	Handle test read from;
	Convert test;
	Handle test from string

246.50. Add a class for parsed query. It allows to:

	Instantiate parsed query  with query, named filters map and named filters map;
	Instantiate parsed query  with query, parsed query and parsed query;
	Instantiate parsed query  with query;
	Get query;
	Get named filters;
	Get parsed match all query

246.51. Add a class for prefix query builder. It allows to:

	Instantiate prefix query builder;
	Instantiate prefix query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get value;
	Rewrite prefix query builder;
	Do X content;
	Process prefix query builder prefix query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Do hash code;
	Equals other prefix query builder

246.52. Add a class for prefix query builder tests. It allows to:

	Do create test query builder;
	Get alternate versions;
	Handle random prefix query;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test blended rewrite method;
	Handle test from json;
	Handle test numeric;
	Handle test parse fails with multiple fields

246.53. Add an interface declaration  for query builder. It allows to:

	Convert query builder to query;
	Get query name;
	Boost query builder;
	Get name;
	Rewrite query rewrite context

246.54. Add an object creator class for query builders. It allows to:

	Instantiate query builders;
	Match all query;
	Match query;
	Handle common terms query;
	Get multi match query;
	Match phrase query;
	Match phrase prefix query;
	Dis max query;
	Ids query;
	Get term query;
	Handle fuzzy query;
	Prefix query;
	Get range query;
	Get wildcard query;
	Regexp query;
	Get query string query;
	Handle simple query string query;
	Boosting query;
	Bool query;
	Span term query;
	Span first query;
	Span initial clause span query builder near query;
	Span include span query builder not query;
	Span initial clause span query builder;
	Span big span query builder within query;
	Span containing query;
	Span multi term query builder;
	Get field masking span query;
	Handle constant score query;
	Function score query;
	Get script score query;
	Handle more like this query;
	Get nested query;
	Get terms query;
	Get wrapper query;
	Get type query;
	Get terms lookup query;
	Get script query;
	Geo distance query;
	Geo bounding box query;
	Geo polygon query;
	Geo shape query;
	Geo intersection query;
	Geo shape builder within query;
	Geo query builders within query;
	Geo disjoint query;
	Check if query builders exists query

246.55. Add an interface declaration  for query parser. It allows to:

	Process query parser query parser from X content

246.56. Add a class for query rewrite context. It allows to:

	Instantiate query rewrite context  with named X content registry, named writeable registry, client, now in millis long supplier and now in millis long supplier;
	Get X content registry;
	Now query rewrite context in millis;
	Get writeable registry;
	Convert query rewrite context to shard context;
	Register async action;
	Check if query rewrite context has async actions;
	Execute async actions;
	Process  on response;
	Process  on failure;
	Convert query rewrite context now range to match all

246.57. Add a class for query shard context. It allows to:

	Set types;
	Get types;
	Instantiate query shard context  with index settings, bitset filter cache, index field data lookup bi function, mapper service, similarity service, script service, named X content registry, named writeable registry, client, index reader, now in millis long supplier and now in millis long supplier;
	Instantiate query shard context  with source query shard context;
	Instantiate query shard context  with index settings, bitset filter cache, index field data lookup bi function, mapper service, similarity service, script service, named X content registry, named writeable registry, client, index reader, now in millis long supplier, fully qualified index and fully qualified index;
	Reset query shard context;
	Get index analyzers;
	Get search similarity;
	Get default fields;
	Handle query string lenient;
	Handle query string analyze wildcard;
	Handle query string allow leading wildcard;
	Handle bitset filter;
	Get mapped field type for field;
	Add named query;
	Copy named queries;
	Handle simple match to index names;
	Get field mapper;
	Get object mapper;
	Get document mapper;
	Get search analyzer;
	Get search quote analyzer;
	Set allow unmapped fields;
	Set map unmapped field  as string;
	Fail field type if field mapping not found;
	Handle query types;
	Get lookup;
	Get nested scope;
	Handle index version created;
	Convert query shard context to query;
	Get index;
	Get script service;
	Freeze context;
	Fail query shard context if frozen;
	Register async action;
	Execute async actions;
	Check if query shard context is cacheable;
	Get shard id;
	Now query shard context in millis;
	Get client;
	Parse inner query builder;
	Convert query shard context to shard context;
	Get index settings;
	Get mapper service;
	Get index reader;
	Get query shard context fully qualified index

246.58. Add a class for query shard context tests. It allows to:

	Handle test fail if field mapping not found;
	Handle test cluster alias;
	Handle test get fully qualified index;
	Create query shard context

246.59. Add a class for query shard exception. It allows to:

	Instantiate query shard exception  with query shard context;
	Instantiate query shard exception  with query shard context, cause throwable and cause throwable;
	Instantiate query shard exception  with index, cause throwable and cause throwable;
	Instantiate query shard exception  with stream input;
	Get status;
	Write  to stream output

246.60. Add a class for query string query builder. It allows to:

	Instantiate query string query builder;
	Instantiate query string query builder  with stream input;
	Do write  to stream output;
	Get query string;
	Get default field;
	Get field;
	Get fields;
	Get type;
	Tie breaker;
	Get default operator;
	Get analyzer;
	Quote analyzer;
	Max determinized states;
	Allow leading wildcard;
	Enable position increments;
	Get fuzziness;
	Handle fuzzy prefix length;
	Handle fuzzy max expansions;
	Handle fuzzy rewrite;
	Get phrase slop;
	Rewrite query string query builder;
	Analyze wildcard;
	Handle minimum should match;
	Quote field suffix;
	Handle lenient;
	Get time zone;
	Escape query string query builder;
	Get auto generate synonyms phrase query;
	Handle auto generate synonyms phrase query;
	Handle fuzzy transpositions;
	Do X content;
	Process query string query builder query string query builder from X content;
	Get writeable name;
	Equals other query string query builder;
	Do hash code;
	Do query shard context to query

246.61. Add a class for query string query builder tests. It allows to:

	Initialize additional mappings;
	Do create test query builder;
	Mutate instance;
	Do assert lucene query;
	Handle test timezone equals;
	Handle test illegal arguments;
	Convert test;
	Handle test to query fields wildcard;
	Handle test enabled position increments;
	Handle test fuzzy numeric;
	Handle test prefix numeric;
	Handle test exact geo;
	Handle test timezone;
	Handle test exists field query;
	Handle test disabled field names field;
	Handle test from json;
	Handle test expanded terms;
	Handle test default fields with fields;
	Convert test lenient rewrite;
	Convert test unmapped field rewrite;
	Handle test default field;
	Handle test quote analyzer;
	Handle test quote field suffix;
	Handle test with stop words;
	Handle test with prefix stop words;
	Handle test cross fields;
	Handle test phrase slop;
	Handle test analyzed prefix;
	Handle test negative field boost;
	Handle new index meta

246.62. Add a class for query validation exception. It allows to:

	Add validation error;
	Add validation errors

246.63. Add a class for random query builder. It allows to:

	Create query;
	Create multi term query

246.64. Add a class for range query builder. It allows to:

	Instantiate range query builder;
	Instantiate range query builder  with stream input;
	Check if range query builder is relation allowed;
	Do write  to stream output;
	Get field name;
	Process range query builder range query builder from;
	G range query builder;
	Get gte;
	Process range query builder range query builder t;
	Get l;
	Get lte;
	Include lower;
	Include upper;
	Get time zone;
	Get date time zone;
	Get format;
	Get force date parser;
	Get relation;
	Do X content;
	Process range query builder range query builder from X content;
	Get writeable name;
	Rewrite query rewrite context;
	Do query shard context to query;
	Do hash code;
	Equals other range query builder

246.65. Add a class for range query builder tests. It allows to:

	Do create test query builder;
	Get alternate versions;
	Do assert lucene query;
	Handle test illegal arguments;
	Convert test;
	Handle test date range query format;
	Handle test date range boundaries;
	Handle test date range query timezone;
	Handle test from json;
	Handle test named query parsing;
	Convert test rewrite date;
	Get relation;
	Convert test rewrite open bounds;
	Handle test parse fails with multiple fields;
	Handle test parse fails with multiple fields when one is date;
	Handle test parse relation;
	Convert test convert now range;
	Convert  now range to match all;
	Handle test type field

246.66. Add a class for range query rewrite tests. It allows to:

	Handle test rewrite missing field;
	Handle test rewrite missing reader;
	Handle test rewrite empty reader

246.67. Add a class for regexp query builder. It allows to:

	Instantiate regexp query builder;
	Instantiate regexp query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get value;
	Get flags;
	Max determinized states;
	Rewrite regexp query builder;
	Do X content;
	Process regexp query builder regexp query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Do hash code;
	Equals other regexp query builder

246.68. Add a class for regexp query builder tests. It allows to:

	Do create test query builder;
	Get alternate versions;
	Handle random regexp query;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test from json;
	Handle test numeric;
	Handle test parse fails with multiple fields

246.69. Add an interface declaration  for rewriteable. It allows to:

	Rewrite ctx query rewrite context;
	Rewrite original;
	Rewrite rewritables list

246.70. Add a class for score mode tests. It allows to:

	Handle test valid ordinals;
	Convert test write;
	Handle test read from;
	Handle test from string

246.71. Add a class for script query builder tests. It allows to:

	Do create test query builder;
	Handle builder generates cacheable queries;
	Do assert lucene query;
	Handle test illegal constructor arg;
	Handle test from json verbose;
	Handle test from json;
	Handle test array of scripts exception;
	Get objects holding arbitrary content;
	Check if script query builder tests is cacheable

246.72. Add a class for simple query string builder. It allows to:

	Instantiate simple query string builder;
	Instantiate simple query string builder  with stream input;
	Do write  to stream output;
	Get value;
	Get field;
	Get fields;
	Get analyzer;
	Get default operator;
	Get flags;
	Quote field suffix;
	Handle lenient;
	Analyze wildcard;
	Handle minimum should match;
	Get auto generate synonyms phrase query;
	Handle auto generate synonyms phrase query;
	Handle fuzzy prefix length;
	Handle fuzzy max expansions;
	Handle fuzzy transpositions;
	Do query shard context to query;
	Do X content;
	Process simple query string builder simple query string builder from X content;
	Get writeable name;
	Do hash code;
	Equals other simple query string builder

246.73. Add a class for simple query string builder tests. It allows to:

	Do create test query builder;
	Handle test defaults;
	Handle test default null complain flags;
	Handle test default empty complain flags;
	Handle test default null complain op;
	Handle test default operator handling;
	Handle test illegal constructor arg;
	Handle test field can not be null;
	Handle test field can not be null and weighted;
	Handle test field can not be empty;
	Handle test field can not be empty and weighted;
	Convert test fields can not be set;
	Handle test default field parsing;
	Do assert lucene query;
	Should clauses;
	Convert test;
	Handle test negative flags;
	Handle test from json;
	Handle test minimum should match;
	Handle test index meta field;
	Handle test expanded terms;
	Handle test analyze wildcard;
	Handle test analyzer wildcard with synonyms;
	Handle test analyzer with graph;
	Handle test quote field suffix;
	Handle test default field;
	Convert test lenient;
	Handle test with stop words;
	Handle test with prefix stop words;
	Handle test unmapped field no token with and operator;
	Handle test negative field boost;
	Handle new index meta

246.74. Add a class for span containing query builder. It allows to:

	Instantiate span containing query builder  with big span query builder, little span query builder and little span query builder;
	Instantiate span containing query builder  with stream input;
	Do write  to stream output;
	Handle big query;
	Handle little query;
	Do X content;
	Process span containing query builder span containing query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other span containing query builder;
	Get writeable name

246.75. Add a class for span containing query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test from json;
	Handle test from jso with non default boost in big query;
	Handle test from json with non default boost in little query

246.76. Add a class for span first query builder. It allows to:

	Instantiate span first query builder  with match builder;
	Instantiate span first query builder  with stream input;
	Do write  to stream output;
	Handle inner query;
	End span first query builder;
	Do X content;
	Process span first query builder span first query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other span first query builder;
	Get writeable name

246.77. Add a class for span first query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test parse end;
	Handle test from json;
	Handle test from json with non default boost in match query

246.78. Add a class for span multi term query builder. It allows to:

	Instantiate span multi term query builder  with multi term query builder;
	Instantiate span multi term query builder  with stream input;
	Do write  to stream output;
	Handle inner query;
	Do X content;
	Process span multi term query builder span multi term query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other span multi term query builder;
	Get writeable name

246.79. Add a class for span near query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test clauses unmodifiable;
	Handle test from json;
	Handle test parsing slop default;
	Handle test collect payloads no longer supported;
	Handle test from json with non default boost in inner query

246.80. Add a class for span not query builder. It allows to:

	Instantiate span not query builder  with include span query builder, exclude span query builder and exclude span query builder;
	Instantiate span not query builder  with stream input;
	Do write  to stream output;
	Include query;
	Exclude query;
	Get dist;
	Pre span not query builder;
	Get post;
	Do X content;
	Process span not query builder span not query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other span not query builder;
	Get writeable name

246.81. Add a class for span not query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal argument;
	Handle test dist;
	Handle test pre post;
	Handle test parse dist;
	Handle test parser exceptions;
	Handle test from json;
	Handle test from json with non default boost in include query;
	Handle test from json with non default boost in exclude query

246.82. Add a class for span or query builder. It allows to:

	Instantiate span or query builder  with initial clause span query builder;
	Instantiate span or query builder  with stream input;
	Do write  to stream output;
	Add clause;
	Get clauses;
	Do X content;
	Process span or query builder span or query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other span or query builder;
	Get writeable name

246.83. Add a class for span or query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test clauses unmodifiable;
	Handle test from json;
	Handle test from json with non default boost in inner query

246.84. Add a class for span term query builder. It allows to:

	Instantiate span term query builder;
	Instantiate span term query builder  with stream input;
	Do query shard context to query;
	Process span term query builder span term query builder from X content;
	Get writeable name

246.85. Add a class for span term query builder tests. It allows to:

	Do create test query builder;
	Create query builder;
	Do assert lucene query;
	Create span term query builders;
	Handle test from json;
	Handle test parse fails with multiple fields;
	Handle test with meta data field

246.86. Add a class for span within query builder. It allows to:

	Instantiate span within query builder  with big span query builder, little span query builder and little span query builder;
	Instantiate span within query builder  with stream input;
	Do write  to stream output;
	Handle little query;
	Handle big query;
	Do X content;
	Process span within query builder span within query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other span within query builder;
	Get writeable name

246.87. Add a class for span within query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test from json;
	Handle test from json with non default boost in big query;
	Handle test from json with non default boost in little query

246.88. Add a class for term query builder. It allows to:

	Instantiate term query builder;
	Instantiate term query builder  with stream input;
	Process term query builder term query builder from X content;
	Do query shard context to query;
	Get writeable name

246.89. Add a class for term query builder tests. It allows to:

	Do create test query builder;
	Create query builder;
	Do assert lucene query;
	Handle test term array;
	Handle test from json;
	Handle test geo;
	Handle test parse fails with multiple fields;
	Handle test type field

246.90. Add a class for terms query builder. It allows to:

	Instantiate terms query builder  with terms lookup;
	Instantiate terms query builder  with values list, terms lookup and terms lookup;
	Instantiate terms query builder;
	Instantiate terms query builder  with values iterable;
	Instantiate terms query builder  with supplier;
	Instantiate terms query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get values;
	Get terms lookup;
	Check if terms query builder is typeless;
	Convert values iterable;
	Convert list;
	Get;
	Get size;
	Convert  back list;
	Do X content;
	Process terms query builder terms query builder from X content;
	Parse values;
	Get writeable name;
	Do query shard context to query;
	Fetch terms lookup;
	Do hash code;
	Equals other terms query builder;
	Rewrite query rewrite context

246.91. Add a class for terms query builder tests. It allows to:

	Handle random terms;
	Do create test query builder;
	Handle random terms lookup;
	Do assert lucene query;
	Handle test emtpy field name;
	Handle test emtpy terms lookup;
	Handle test null values;
	Test both values and lookup set;
	Get get request;
	Handle test numeric;
	Handle test terms query with multiple fields;
	Handle test from json;
	Handle test must rewrite;
	Handle test geo;
	Check if terms query builder tests is cacheable;
	Handle test serialization fails unless fetched;
	Handle test conversion;
	Handle test type field;
	Parse query

246.92. Add a class for type query builder. It allows to:

	Instantiate type query builder;
	Instantiate type query builder  with stream input;
	Do write  to stream output;
	Get type;
	Do X content;
	Process type query builder type query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Do hash code;
	Equals other type query builder

246.93. Add a class for type query builder tests. It allows to:

	Do create test query builder;
	Do assert lucene query;
	Handle test illegal argument;
	Handle test from json;
	Convert test;
	Handle test must rewrite

246.94. Add a class for wildcard query builder. It allows to:

	Instantiate wildcard query builder;
	Instantiate wildcard query builder  with stream input;
	Do write  to stream output;
	Get field name;
	Get value;
	Rewrite wildcard query builder;
	Get writeable name;
	Do X content;
	Process wildcard query builder wildcard query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other wildcard query builder

246.95. Add a class for wildcard query builder tests. It allows to:

	Do create test query builder;
	Get alternate versions;
	Handle random wildcard query;
	Do assert lucene query;
	Handle test illegal arguments;
	Handle test empty value;
	Handle test from json;
	Handle test parse fails with multiple fields;
	Handle test index wildcard;
	Handle test type field

246.96. Add a class for wrapper query builder. It allows to:

	Instantiate wrapper query builder;
	Instantiate wrapper query builder  with source bytes reference;
	Instantiate wrapper query builder  with stream input;
	Do write  to stream output;
	Get source;
	Get name;
	Do X content;
	Process wrapper query builder wrapper query builder from X content;
	Get writeable name;
	Do query shard context to query;
	Do hash code;
	Equals other wrapper query builder;
	Rewrite query rewrite context

246.97. Add a class for wrapper query builder tests. It allows to:

	Check if wrapper query builder tests supports boost;
	Check if wrapper query builder tests supports query name;
	Do create test query builder;
	Do assert lucene query;
	Handle test illegal argument;
	Handle test unknown field;
	Handle test from json;
	Handle test must rewrite;
	Handle test rewrite with inner name;
	Handle test rewrite with inner boost;
	Handle test rewrite inner query too;
	Rewrite query

247. Changes to package org.elasticsearch.index.query.functionscore:  

247.1. Add an interface declaration  for decay function. It allows to:

	Evaluate decay function;
	Explain function;
	Get process scale

247.2. Add a class for decay function parser. It allows to:

	Instantiate decay function parser  with create from bytes bi function;
	Process decay function parser decay function parser from X content

247.3. Add a class for field value factor function builder. It allows to:

	Instantiate field value factor function builder;
	Instantiate field value factor function builder  with stream input;
	Do write  to stream output;
	Get name;
	Get field name;
	Get factor;
	Missing field value factor function builder;
	Get modifier;
	Do X content;
	Equals field value factor function builder;
	Do hash code;
	Do query shard context to function;
	Process field value factor function builder field value factor function builder from X content

247.4. Add a class for field value factor function modifier tests. It allows to:

	Handle test valid ordinals;
	Convert test write;
	Handle test read from;
	Handle test from string

247.5. Add a class for function score equivalence tests. It allows to:

	Handle test min score all included;
	Handle test min score all excluded;
	Test two phase min score

247.6. Add a class for random score function builder. It allows to:

	Instantiate random score function builder;
	Instantiate random score function builder  with stream input;
	Do write  to stream output;
	Get name;
	Get seed;
	Set field;
	Get field;
	Do X content;
	Equals random score function builder;
	Do hash code;
	Do query shard context to function;
	Hash random score function builder;
	Process random score function builder random score function builder from X content

247.7. Add a class for score function builder. It allows to:

	Instantiate score function builder;
	Instantiate score function builder  with stream input;
	Write  to stream output;
	Do write  to stream output;
	Get name;
	Set weight;
	Check weight;
	Get weight;
	Convert score function builder to X content;
	Do X content;
	Get writeable name;
	Check if score function builder equals;
	Equals function builder FB;
	Hash code;
	Do hash code;
	Convert score function builder to function;
	Do query shard context to function

247.8. Add a class for score function builder tests. It allows to:

	Handle test illegal arguments;
	Handle test random score function with seed

247.9. Add an object creator class for score function builders. It allows to:

	Handle exponential decay function;
	Gauss decay function;
	Handle linear decay function;
	Get script function;
	Handle random function;
	Weight factor function;
	Get field value factor function

247.10. Add an interface declaration  for score function parser. It allows to:

	Process score function parser score function parser from X content

247.11. Add a class for script score function builder. It allows to:

	Instantiate script score function builder  with script;
	Instantiate script score function builder  with stream input;
	Do write  to stream output;
	Get script;
	Do X content;
	Get name;
	Equals script score function builder;
	Do hash code;
	Do query shard context to function;
	Process script score function builder script score function builder from X content

247.12. Add a class for weight builder. It allows to:

	Instantiate weight builder;
	Instantiate weight builder  with stream input;
	Do write  to stream output;
	Get name;
	Do X content;
	Equals function builder;
	Do hash code;
	Do query shard context to function

248. Changes to package org.elasticsearch.index.query.plugin:  

248.1. Add a class for custom query parser IT. It allows to:

	Handle node plugins;
	Transport client plugins;
	Set custom query parser IT;
	Get number of shards;
	Handle test custom dummy query;
	Handle test custom dummy query within boolean query;
	Handle query shard context

248.2. Add a class for dummy query builder. It allows to:

	Instantiate dummy query builder;
	Instantiate dummy query builder  with stream input;
	Do write  to stream output;
	Do X content;
	Process dummy query builder dummy query builder from X content;
	Do query shard context to query;
	Do hash code;
	Equals other dummy query builder;
	Get writeable name

249. Changes to package org.elasticsearch.index.query.support:  

249.1. Add a class for nested scope. It allows to:

	Get object mapper;
	Handle next level;
	Handle previous level

249.2. Add a class for query parsers. It allows to:

	Instantiate query parsers;
	Set rewrite method;
	Parse rewrite method;

250. Changes to package org.elasticsearch.index.rankeval:  

250.1. Add a class for discounted cumulative gain tests. It allows to:

	Handle test DCG at;
	Handle test DCG at six missing ratings;
	Handle test DCG at four more ratings;
	Handle test no results;
	Handle test parse from X content;
	Assert parsed correct;
	Create test item;
	Handle test X content roundtrip;
	Handle test X content parsing is not lenient;
	Handle test metric details;
	Handle test serialization;
	Handle test equals and hash;
	Mutate test item

250.2. Add a class for eval query quality tests. It allows to:

	X content registry;
	Handle random eval query quality;
	Handle test serialization;
	Handle test X content parsing;
	Get copy;
	Handle test equals and hash;
	Mutate test item

250.3. Add an interface declaration  for evaluation metric. It allows to:

	Evaluate hits;
	Join hits  with ratings;
	Get filter unrated documents;
	Combine partial results collection;
	Get forced search size

250.4. Add a class for mean reciprocal rank tests. It allows to:

	Handle test parse from X content;
	Handle test max acceptable rank;
	Handle test evaluation one relevant in results;
	Handle test precision at five relevance threshold;
	Handle test combine;
	Handle test evaluation no relevant in results;
	Handle test no results;
	Handle test X content roundtrip;
	Handle test X content parsing is not lenient;
	Create search hits;
	Create test item;
	Handle test serialization;
	Handle test equals and hash;
	Get copy;
	Mutate test item mean reciprocal rank;
	Handle test invalid relevant threshold;
	Handle test invalid K

250.5. Add an interface declaration  for metric detail. It allows to:

	Convert metric detail to X content;
	Get metric name;
	Handle inner to X content

250.6. Add a class for precision at K tests. It allows to:

	Handle test precision at five calculation;
	Handle test precision at five ignore one result;
	Handle test precision at five relevance threshold;
	Handle test precision at five correct index;
	Handle test ignore unlabeled;
	Handle test no rated docs;
	Handle test no results;
	Handle test parse from X content;
	Handle test combine;
	Handle test invalid relevant threshold;
	Handle test invalid K;
	Create test item;
	Handle test X content roundtrip;
	Handle test X content parsing is not lenient;
	Handle test serialization;
	Handle test equals and hash;
	Get copy;
	Mutate original precision at;
	Convert precision at K tests to search hits;
	Create rated doc

250.7. Add an object creator class for rank eval action. It allows to:

	Instantiate rank eval action;
	Handle new response

250.8. Add a class for rank eval named X content provider. It allows to:

	Get named X content parsers

250.9. Add a class for rank eval plugin. It allows to:

	Get actions;
	Get rest handlers;
	Get named writeables;
	Get named X content

250.10. Add a class for rank eval request. It allows to:

	Instantiate rank eval request  with ranking eval spec;
	Instantiate rank eval request  with stream input;
	Instantiate rank eval request;
	Validate rank eval request;
	Get rank eval spec;
	Set rank eval spec;
	Get indices;
	Get indices options;
	Handle indices options;
	Read  from stream input;
	Write  to stream output;
	Check if rank eval request equals;
	Hash code

250.11. Add a class for rank eval request builder. It allows to:

	Instantiate rank eval request builder  with elasticsearch client, action, rank eval request and rank eval request;
	Get request;
	Set rank eval spec;
	Get rank eval spec

250.12. Add a class for rank eval request IT. It allows to:

	Transport client plugins;
	Handle node plugins;
	Handle setup;
	Handle test precision at request;
	Handle test DCG request;
	Handle test MRR request;
	Handle test bad query;
	Handle test indices options;
	Create relevant

250.13. Add a class for rank eval response. It allows to:

	Instantiate rank eval response  with partial results map, failures map and failures map;
	Instantiate rank eval response;
	Get metric score;
	Get partial results;
	Get failures;
	Convert rank eval response to string;
	Write  to stream output;
	Read  from stream input;
	Convert rank eval response to X content;
	Process rank eval response rank eval response from X content

250.14. Add a class for rank eval response tests. It allows to:

	Create random response;
	Handle test serialization;
	Handle test X content parsing;
	Convert test;
	Search hit

250.15. Add a class for rank eval spec tests. It allows to:

	X content registry;
	Handle random list;
	Create test item;
	Handle test X content roundtrip;
	Handle test X content parsing is not lenient;
	Handle test serialization;
	Get copy;
	Handle test equals and hash;
	Mutate test item;
	Handle test missing rated requests fails;
	Handle test missing metric fails;
	Handle test missing template and search request fails

250.16. Add a class for rank eval yaml IT. It allows to:

	Instantiate rank eval yaml IT  with client yaml test candidate;
	Get parameters

250.17. Add a class for rated document tests. It allows to:

	Create rated document;
	Handle test X content parsing;
	Handle test X content parsing is not lenient;
	Handle test serialization;
	Handle test equals and hash;
	Mutate test item

250.18. Add a class for rated request. It allows to:

	Instantiate rated request  with rated docs list, params map and params map;
	Instantiate rated request  with rated docs list, evaluated query search source builder and evaluated query search source builder;
	Instantiate rated request  with rated docs list, evaluated query search source builder, params map and params map;
	Validate evaluated query;
	Instantiate rated request  with stream input;
	Write  to stream output;
	Get evaluation request;
	Get id;
	Get rated docs;
	Get params;
	Get template id;
	Get summary fields;
	Add summary fields;
	Process rated request rated request from X content;
	Convert rated request to X content;
	Convert rated request to string;
	Check if rated request equals;
	Hash code

250.19. Add a class for rated requests tests. It allows to:

	Handle init;
	Process rated requests tests rated requests tests after class;
	X content registry;
	Create test item;
	Handle test X content roundtrip;
	Handle test X content parsing is not lenient;
	Handle test serialization;
	Get copy;
	Handle test equals and hash;
	Mutate test item;
	Handle test duplicate rated doc throws exception;
	Handle test null summary fields treatment;
	Handle test null params treatment;
	Handle test setting neither params nor request throws;
	Handle test setting params without template id throws;
	Handle test setting template id no params throws;
	Handle test aggs not allowed;
	Handle test suggestions not allowed;
	Handle test highlighter not allowed;
	Handle test explain not allowed;
	Handle test profile not allowed;
	Handle test parse from X content

250.20. Add a class for rated search hit. It allows to:

	Instantiate rated search hit  with search hit, rating optional int and rating optional int;
	Instantiate rated search hit  with stream input;
	Write  to stream output;
	Get search hit;
	Get rating;
	Convert rated search hit to X content;
	Parse X content parser;
	Check if rated search hit equals;
	Hash code

250.21. Add a class for rated search hit tests. It allows to:

	Handle random rated search hit;
	Mutate test item;
	Handle test serialization;
	Handle test X content roundtrip;
	Handle test equals and hash;
	Get copy

250.22. Add a class for rest rank eval action. It allows to:

	Instantiate rest rank eval action  with settings, rest controller and rest controller;
	Prepare request;
	Parse rank eval request;
	Get name

251. Changes to package org.elasticsearch.index.refresh:  

251.1. Add a class for refresh stats. It allows to:

	Instantiate refresh stats;
	Instantiate refresh stats  with stream input;
	Write  to stream output;
	Add refresh stats;
	Add totals;
	Get total;
	Get external total;
	Get total time  in millis;
	Get external total time  in millis;
	Get total time;
	Get external total time;
	Get listeners;
	Convert refresh stats to X content;
	Read  from stream input;
	Check if refresh stats equals;
	Hash code

251.2. Add a class for refresh stats tests. It allows to:

	Handle test serialize

252. Changes to package org.elasticsearch.index.reindex:  

252.1. Add a class for abstract async bulk by scroll action metadata test case. It allows to:

	Get doc;
	Get action

252.2. Add a class for abstract async bulk by scroll action script test case. It allows to:

	Handle setup script service;
	Apply script;
	Handle test type deprecation;
	Convert test script adding junk;
	Handle test change source;
	Handle test set op type noop;
	Handle test set op type delete;
	Handle test set op type unknown;
	Get action

252.3. Add a class for abstract async bulk by scroll action test case. It allows to:

	Handle setup for test;
	Tear abstract async bulk by scroll action test case;
	Get request;
	Get listener

252.4. Add a class for abstract base reindex rest handler. It allows to:

	Instantiate abstract base reindex rest handler  with settings, action and action;
	Do prepare request;
	Build request;
	Set common options;
	Send task;
	Parse slices;
	Parse requests  per second

252.5. Add a class for abstract bulk by query rest handler. It allows to:

	Instantiate abstract bulk by query rest handler  with settings, action and action;
	Parse internal request;
	Extract request specific fields

252.6. Add a class for abstract bulk by scroll request. It allows to:

	Instantiate abstract bulk by scroll request;
	Instantiate abstract bulk by scroll request  with search request;
	Get self;
	Validate abstract bulk by scroll request;
	Get size;
	Set size;
	Check if abstract bulk by scroll request is abort on version conflict;
	Set abort  on version conflict;
	Set conflicts;
	Get search request;
	Check if abstract bulk by scroll request is refresh;
	Refresh abstract bulk by scroll request;
	Get timeout;
	Set timeout;
	Get wait  for active shards;
	Set wait  for active shards;
	Get retry backoff initial time;
	Set retry backoff initial time;
	Get abstract bulk by scroll request;
	Set max retries;
	Get requests  per second;
	Set requests  per second;
	Set should store result;
	Get should store result;
	Set scroll;
	Get scroll time;
	Set slices;
	Get slices;
	Process abstract bulk by scroll request abstract bulk by scroll request for slice;
	Do request self for slice;
	Create task;
	Read  from stream input;
	Write  to stream output;
	Search string builder to string;
	Get description

252.7. Add a class for abstract bulk by scroll request builder. It allows to:

	Instantiate abstract bulk by scroll request builder  with elasticsearch client, action, source search request builder, request and request;
	Get self;
	Get source;
	Get filter;
	Get size;
	Abort abstract bulk by scroll request builder on version conflict;
	Refresh abstract bulk by scroll request builder;
	Get timeout;
	Wait active shard count for active shards;
	Set retry backoff initial time;
	Set max retries;
	Set requests  per second;
	Set should store result;
	Set slices

252.8. Add a class for abstract bulk by scroll request test case. It allows to:

	Handle test for slice;
	Handle new request;
	Handle extra randomization for slice;
	Handle extra for slice assertions

252.9. Add a class for abstract bulk index by scroll request. It allows to:

	Instantiate abstract bulk index by scroll request;
	Instantiate abstract bulk index by scroll request  with search request;
	Get script;
	Set script;
	Do request self for slice;
	Read  from stream input;
	Write  to stream output;
	Search string builder to string

252.10. Add a class for abstract bulk index by scroll request builder. It allows to:

	Instantiate abstract bulk index by scroll request builder  with elasticsearch client, action, search request builder, request and request;
	Get script

252.11. Add a class for async delete by query action. It allows to:

	Instantiate async delete by query action  with bulk by scroll task, logger, parent task assigning client, thread pool, transport delete by query action, delete by query request, script service, action listener and action listener;
	Accept doc scrollable hit source hit;
	Build request;
	Copy metadata

252.12. Add a class for bulk by scroll parallelization helper. It allows to:

	Instantiate bulk by scroll parallelization helper;
	Start sliced action;
	Slice  conditionally request;
	Count slices based  on shards;
	Send sub requests;
	Slice search request into sub requests

252.13. Add a class for bulk by scroll parallelization helper tests. It allows to:

	Handle test slice into sub requests

252.14. Add a class for bulk by scroll response. It allows to:

	Instantiate bulk by scroll response;
	Instantiate bulk by scroll response  with took time value, bulk by scroll task status, bulk failures list, search failures list and search failures list;
	Instantiate bulk by scroll response  with to merge iterable;
	Took bulk by scroll response;
	Get status;
	Created bulk by scroll response;
	Get total;
	Deleted bulk by scroll response;
	Updated bulk by scroll response;
	Get batches;
	Get version conflicts;
	Get noops;
	Get reason canceled;
	Get bulk retries;
	Get search retries;
	Get bulk failures;
	Get search failures;
	Check if bulk by scroll response is timed out;
	Write  to stream output;
	Read  from stream input;
	Convert bulk by scroll response to X content;
	Process bulk by scroll response bulk by scroll response from X content;
	Parse failure;
	Convert bulk by scroll response to string

252.15. Add a class for bulk by scroll response tests. It allows to:

	Handle test rount trip;
	Handle random indexing failures;
	Handle random search failures;
	Assert response equals;
	Assert equal bulk response;
	Assert equal instances;
	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Get bulk by scroll response tests to X content params

252.16. Add a class for bulk by scroll task status tests. It allows to:

	Handle test bulk by task status;
	Assert task status equals;
	Handle random status;
	Handle random status without exception;
	Handle random working status;
	Assert equal status;
	Assert equal instances;
	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test from X content with failures;
	Get bulk by scroll task status tests to X content params

252.17. Add a class for bulk by scroll task tests. It allows to:

	Handle test status hates negatives;
	Check status negatives;
	Handle test X content representation of unlimited requests per second;
	Handle test X content representation of unfinished slices;
	Handle test X content representation of slice failures;
	Handle test merge statuses

252.18. Add a class for bulk index by scroll response content listener. It allows to:

	Instantiate bulk index by scroll response content listener  with rest channel, params map and params map;
	Build response;
	Get status

252.19. Add a class for bulk index by scroll response matcher. It allows to:

	Get created;
	Get updated;
	Get deleted;
	Get batches;
	Get version conflicts;
	Get failures;
	Handle reason canceled;
	Get slices;
	Check if bulk index by scroll response matcher matches safely;
	Describe  to description

252.20. Add a class for bulk index by scroll response tests. It allows to:

	Handle test merge constructor

252.21. Add an object creator class for delete by query action. It allows to:

	Instantiate delete by query action;
	Handle new response

252.22. Add a class for delete by query basic tests. It allows to:

	Handle node plugins;
	Handle test basics;
	Handle test delete by query with one index;
	Handle test delete by query with multiple indices;
	Handle test delete by query with missing index;
	Handle test delete by query with routing;
	Handle test delete by match query;
	Handle test delete by query with date math;
	Handle test delete by query on read only index;
	Handle test slices;
	Handle test multiple sources

252.23. Add a class for delete by query concurrent tests. It allows to:

	Handle test concurrent delete by queries on different docs;
	Handle test concurrent delete by queries on same docs

252.24. Add a class for delete by query request. It allows to:

	Instantiate delete by query request;
	Instantiate delete by query request  with search request;
	Instantiate delete by query request  with stream input;
	Set query;
	Set doc types;
	Routing delete by query request;
	Set batch size;
	Set indices options;
	Get batch size;
	Get doc types;
	Get self;
	Validate delete by query request;
	Process delete by query request delete by query request for slice;
	Convert delete by query request to string;
	Get indices;
	Get indices options;
	Get types;
	Convert delete by query request to X content

252.25. Add a class for delete by query request builder. It allows to:

	Instantiate delete by query request builder  with elasticsearch client, action and action;
	Instantiate delete by query request builder  with elasticsearch client, action, search request builder and search request builder;
	Get self;
	Abort delete by query request builder on version conflict

252.26. Add a class for delete by query request tests. It allows to:

	Handle test deletete by query request implements indices request replaceable;
	Handle new request;
	Handle extra randomization for slice;
	Handle extra for slice assertions;
	Handle test types getter;
	Handle test types setter;
	Handle test validate given no query;
	Handle test validate given valid

252.27. Add a class for leader bulk by scroll task state tests. It allows to:

	Create task;
	Handle test basic data;
	Handle test progress;
	Handle never called;
	Process  on response;
	Process  on failure;
	Capture response

252.28. Add a class for many documents IT. It allows to:

	Handle setup test index;
	Handle test reindex;
	Handle test reindex from remote;
	Handle test update by query;
	Handle test delete by query

252.29. Add an object creator class for reindex action. It allows to:

	Instantiate reindex action;
	Handle new response

252.30. Add a class for reindex basic tests. It allows to:

	Handle test filtering;
	Handle test copy many;
	Handle test copy many with slices;
	Handle test multiple sources

252.31. Add a class for reindex client yaml test suite IT. It allows to:

	Instantiate reindex client yaml test suite IT  with client yaml test candidate;
	Get parameters

252.32. Add a class for reindex failure tests. It allows to:

	Handle test failures cause abort default;
	Handle test abort on version conflict;
	Handle test response on search failure;
	Handle index docs

252.33. Add a class for reindex from remote build rest client tests. It allows to:

	Handle test build rest client;
	Handle test headers;
	Get ssl config

252.34. Add a class for reindex from remote whitelist tests. It allows to:

	Handle test local request without whitelist;
	Handle test local request with whitelist;
	Handle new remote info;
	Handle test whitelisted remote;
	Handle test whitelisted by prefix;
	Handle test whitelisted by suffix;
	Handle test whitelisted by infix;
	Handle test loopback in whitelist remote;
	Handle test unwhitelisted remote;
	Handle test reject match all;
	Handle test I pv 6 address;
	Assert matches  too much whitelist;
	Handle random whitelist

252.35. Add a class for reindex plugin. It allows to:

	Get actions;
	Get named writeables;
	Get rest handlers;
	Create components;
	Get settings

252.36. Add a class for reindex request. It allows to:

	Instantiate reindex request;
	Instantiate reindex request  with search request, destination index request and destination index request;
	Instantiate reindex request  with stream input;
	Get self;
	Validate reindex request;
	Routing is valid;
	Set source indices;
	Set source doc types;
	Set source batch size;
	Set source query;
	Add sort field;
	Set dest index;
	Set dest doc type;
	Set dest routing;
	Set dest version type;
	Set dest pipeline;
	Set dest op type;
	Set remote info;
	Get destination;
	Get remote info;
	Process reindex request reindex request for slice;
	Read  from stream input;
	Write  to stream output;
	Convert reindex request to string;
	Convert reindex request to X content

252.37. Add a class for reindex request builder. It allows to:

	Instantiate reindex request builder  with elasticsearch client, action and action;
	Instantiate reindex request builder  with elasticsearch client, action, search request builder, destination index request builder and destination index request builder;
	Get self;
	Get destination;
	Set remote info

252.38. Add a class for reindex request tests. It allows to:

	Handle test reindex from remote does not support search query;
	Handle test reindex from remote does not support slices;
	Handle test no slice builder set with sliced request;
	Handle extra randomization for slice;
	Handle extra for slice assertions;
	Handle new request

252.39. Add a class for reindex script tests. It allows to:

	Handle test set index;
	Convert test setting index;
	Handle test set type;
	Convert test setting type;
	Handle test set id;
	Handle test set version;
	Convert test setting version;
	Handle test set routing;
	Get request;
	Get action

252.40. Add a class for reindex source target validation tests. It allows to:

	Handle test obvious cases;
	Handle test aliases contain target;
	Handle test target is alias;
	Handle test remote info skips validation;
	Check if reindex source target validation tests fails;
	Check if reindex source target validation tests succeeds;
	Get index

252.41. Add a class for reindex test case. It allows to:

	Handle node plugins;
	Transport client plugins;
	Get reindex;
	Update reindex test case by query;
	Delete reindex test case by query;
	Get rethrottle;
	Matcher reindex test case;
	Handle random slices;
	Get expected slices;
	Get expected slice statuses;

252.42. Add a class for reindex versioning tests. It allows to:

	Handle test external versioning creates when absent and sets version;
	Handle test external versioning updates on older and sets version;
	Handle test external versioning version conflicts on newer;
	Handle test internal versioning creates when absent;
	Handle test internal versioning updates on older;
	Handle test internal versioning updates on newer;
	Handle test create creates when absent;
	Handle test create version conflicts on older;
	Handle test create version conflicts on newer;
	Handle reindex external;
	Handle reindex internal;
	Create reindex versioning tests;
	Handle setup source absent;
	Handle setup dest;
	Handle setup dest older;
	Handle setup dest newer;
	Assert dest

252.43. Add a class for reindex without content IT. It allows to:

	Handle test reindex missing body

252.44. Add a class for remote info. It allows to:

	Instantiate remote info  with query bytes reference, headers map, socket timeout value, connect timeout value and connect timeout value;
	Instantiate remote info  with stream input;
	Write  to stream output;
	Get scheme;
	Get host;
	Get port;
	Get path prefix;
	Get query;
	Get username;
	Get password;
	Get headers;
	Get socket timeout;
	Get connect timeout;
	Convert remote info to string;
	Convert remote info to X content

252.45. Add a class for rest delete by query action. It allows to:

	Instantiate rest delete by query action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Build request

252.46. Add a class for rest delete by query action tests. It allows to:

	Set up action;
	Handle test type in path;
	Handle test parse empty

252.47. Add a class for rest reindex action. It allows to:

	Instantiate rest reindex action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Build request;
	Build remote info;
	Extract string array;
	Extract string;
	Extract string string map;
	Extract time value;
	Get query for remote

252.48. Add a class for rest reindex action tests. It allows to:

	Set up action;
	Handle test build remote info no remote;
	Handle test build remote info fully loaded;
	Handle test build remote info without all parts;
	Handle test build remote info with all host parts;
	Handle test reindex from remote request parsing;
	Handle test pipeline query parameter is error;
	Handle test set scroll timeout;
	Build remote info host test case;
	Handle test type in source;
	Handle test type in destination

252.49. Add a class for rest rethrottle action. It allows to:

	Instantiate rest rethrottle action  with settings, rest controller, nodes in cluster supplier and nodes in cluster supplier;
	Get name;
	Prepare request

252.50. Add a class for rest update by query action. It allows to:

	Instantiate rest update by query action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Build request;
	Parse script

252.51. Add a class for rest update by query action tests. It allows to:

	Set up action;
	Handle test type in path;
	Handle test parse empty

252.52. Add a class for rethrottle action. It allows to:

	Instantiate rethrottle action;
	Handle new response;
	Get response reader

252.53. Add a class for rethrottle request. It allows to:

	Instantiate rethrottle request;
	Instantiate rethrottle request  with stream input;
	Write  to stream output;
	Get requests  per second;
	Set requests  per second;
	Validate rethrottle request

252.54. Add a class for rethrottle request builder. It allows to:

	Instantiate rethrottle request builder  with elasticsearch client, action and action;
	Set requests  per second

252.55. Add a class for rethrottle tests. It allows to:

	Handle test reindex;
	Handle test update by query;
	Handle test delete by query;
	Handle test reindex with workers;
	Handle test update by query with workers;
	Handle test delete by query with workers;
	Handle test case;
	Handle rethrottle task;
	Find task  to rethrottle

252.56. Add a class for retry tests. It allows to:

	Force unblock all executors;
	Handle node plugins;
	Transport client plugins;
	Handle node settings;
	Add mock http transport;
	Handle test reindex;
	Handle test reindex from remote;
	Handle test update by query;
	Handle test delete by query;
	Handle test case;
	Block executor;
	Get task status

252.57. Add a class for round trip tests. It allows to:

	Handle test reindex request;
	Handle test update by query request;
	Handle test delete by query request;
	Handle random request;
	Assert request equals;
	Handle test rethrottle request;
	Convert round trip tests to input byte stream;
	Handle random script

252.58. Add an interface declaration  for successfully processed. It allows to:

	Get successfully processed successfully processed;
	Updated successfully processed;
	Created successfully processed;
	Deleted successfully processed

252.59. Add a class for transport delete by query action. It allows to:

	Instantiate transport delete by query action  with thread pool, action filters, client, transport service, script service, cluster service and cluster service;
	Execute task

252.60. Add a class for transport rethrottle action. It allows to:

	Instantiate transport rethrottle action  with cluster service, transport service, action filters, client and client;
	Handle task operation;
	Handle rethrottle;
	Handle rethrottle parent task;
	Handle rethrottle child task;
	Handle new response

252.61. Add a class for transport rethrottle action tests. It allows to:

	Create task;
	Handle rethrottle test case;
	Expect successful rethrottle  with statuses;
	Handle test rethrottle successful response;
	Handle test rethrottle with some succeeded;
	Handle test rethrottle with all succeeded;
	Expect exception;
	Handle test rethrottle catastrophic failures;
	Handle test rethrottle task operation failure;
	Handle test rethrottle node failure;
	Handle believeable in progress status;
	Handle believeable completed status;
	Handle never called;
	Process  on response;
	Process  on failure;
	Capture response

252.62. Add an object creator class for update by query action. It allows to:

	Instantiate update by query action;
	Handle new response

252.63. Add a class for update by query basic tests. It allows to:

	Handle test basics;
	Handle test slices;
	Handle test multiple sources

252.64. Add a class for update by query request. It allows to:

	Instantiate update by query request;
	Instantiate update by query request  with search request;
	Instantiate update by query request  with stream input;
	Set pipeline;
	Set query;
	Set doc types;
	Routing update by query request;
	Set batch size;
	Set indices options;
	Get batch size;
	Get doc types;
	Get pipeline;
	Get self;
	Process update by query request update by query request for slice;
	Convert update by query request to string;
	Get indices;
	Get indices options;
	Read  from stream input;
	Write  to stream output;
	Convert update by query request to X content

252.65. Add a class for update by query request builder. It allows to:

	Instantiate update by query request builder  with elasticsearch client, action and action;
	Instantiate update by query request builder  with elasticsearch client, action, search request builder and search request builder;
	Get self;
	Abort update by query request builder on version conflict;
	Set pipeline

252.66. Add a class for update by query request tests. It allows to:

	Handle test update by query request implements indices request replaceable;
	Handle new request;
	Handle extra randomization for slice;
	Handle extra for slice assertions

252.67. Add a class for update by query while modifying tests. It allows to:

	Handle test update while reindexing

252.68. Add an object creator class for update by query with script tests. It allows to:

	Handle test modifying ctx not allowed;
	Get request;
	Get action

252.69. Add a class for worker bulk by scroll task state tests. It allows to:

	Create task;
	Handle test basic data;
	Handle test progress;
	Handle test delay and rethrottle;
	Get schedule;
	Run;
	Process  on failure;
	Handle test delay never negative;
	Get delay;
	Compare  to o delayed;
	Cancel;
	Check if  is canceled;
	Handle test perfectly throttled batch time

253. Changes to package org.elasticsearch.index.reindex.remote:  

253.1. Add a class for remote info tests. It allows to:

	Handle new remote info;
	Convert test

253.2. Add a class for remote request builders. It allows to:

	Instantiate remote request builders;
	Handle initial search;
	Add indices;
	Encode index;
	Add types;
	Check index or type;
	Convert sort;
	Get scroll;
	Handle clear scroll

253.3. Add a class for remote request builders tests. It allows to:

	Handle test intial search path;
	Expect bad start request;
	Handle test initial search params sort;
	Handle test initial search params fields;
	Handle test initial search params misc;
	Assert scroll;
	Handle test initial search entity;
	Handle test scroll params;
	Handle test scroll entity;
	Handle test clear scroll

253.4. Add a class for remote scrollable hit source. It allows to:

	Instantiate remote scrollable hit source  with logger, backoff policy, thread pool, count search retry runnable, fail consumer, rest client, query bytes reference, search request and search request;
	Start on response consumer;
	Lookup remote version;
	Process remote scrollable hit source remote scrollable hit source on start response;
	Do start next scroll;
	Handle clear scroll;
	Process  on success;
	Process  on failure;
	Log failure;
	Handle cleanup;
	Execute request;
	Wrap exception  to preserve status;
	Get body message

254. Changes to package org.elasticsearch.index.replication:  

254.1. Add a class for index level replication tests. It allows to:

	Handle test simple replication;
	Handle test simple append only replication;
	Handle test append while recovering;
	Run;
	Handle test retry append only after recovering;
	Handle test append only recovery then replication;
	Get engine factory;
	Handle test inherit max valid auto ID timestamp on recovery;
	Handle test checkpoints advance;
	Handle test conflicting ops on replica;
	Handle test replica term increment with concurrent primary promotion;
	Handle test replica operation with concurrent primary promotion;
	Handle test document failure replication;
	Handle test request failure replication;
	Handle test seq no collision;
	Handle test late delivery after GC triggered on replica;
	Update GC delete cycle;
	Test index level replication tests out of order delivery for append only operations

255. Changes to package org.elasticsearch.index.search:  

255.1. Add a class for eS to parent block join query. It allows to:

	Instantiate eS to parent block join query  with child query, parents filter bit set producer, score mode and score mode;
	Instantiate eS to parent block join query  with to parent block join query;
	Get child query;
	Get path;
	Rewrite index reader;
	Create weight;
	Check if eS to parent block join query equals;
	Hash code;
	Convert eS to parent block join query to string

255.2. Add a class for eS to parent block join query tests. It allows to:

	Handle test equals;
	Handle test rewrite

255.3. Add a class for multi match query tests. It allows to:

	Get plugins;
	Handle setup;
	Handle test cross field multi match query;
	Handle test blend terms;
	Handle test blend terms with field boosts;
	Handle test blend terms unsupported value with lenient;
	Get term query;
	Handle test blend terms unsupported value without lenient;
	Handle test blend no term query;
	Handle test multi match cross fields with synonyms;
	Handle test multi match cross fields with synonyms phrase;
	Handle test keyword split queries on whitespace

255.4. Add a class for nested helper. It allows to:

	Instantiate nested helper  with mapper service;
	Might match nested docs;
	Might match non nested docs;
	Handle parent object

255.5. Add a class for nested helper tests. It allows to:

	Set nested helper tests;
	Handle test match all;
	Handle test match no;
	Handle test terms query;
	Handle test term query;
	Handle test range query;
	Handle test disjunction;
	Get required occur;
	Handle test conjunction;
	Handle test nested

255.6. Add a class for query parser helper. It allows to:

	Instantiate query parser helper;
	Parse fields and weights;
	Resolve mapping fields;
	Resolve mapping field;
	Check fields map for too many fields

255.7. Add a class for query string query parser. It allows to:

	Instantiate query string query parser  with query shard context;
	Instantiate query string query parser  with query shard context, fields and weights map and fields and weights map;
	Instantiate query string query parser  with query shard context, fields and weights map, analyzer and analyzer;
	Set default operator;
	Set phrase slop;
	Set type;
	Set fuzziness;
	Set fuzzy rewrite method;
	Set fuzzy max expansions;
	Set force analyzer;
	Set force quote analyzer;
	Set quote field suffix;
	Set analyze wildcard;
	Set time zone;
	Set group tie breaker;
	Set auto generate multi term synonyms phrase query;
	Set fuzzy transpositions;
	Apply boost;
	Extract multi fields;
	Handle new match all docs query;
	Get field query;
	Get range query;
	Get range query single;
	Handle bare fuzzy;
	Get fuzzy query;
	Get fuzzy query single;
	Handle new fuzzy query;
	Get prefix query;
	Get prefix query single;
	Get query string query parser possibly analyzed prefix query;
	Check if query string query parser exists query;
	Get wildcard query;
	Get wildcard query single;
	Get regexp query;
	Get regexp query single;
	Get boolean query;
	Apply slop;
	Add slop  to span;
	Add slop  to phrase;
	Parse query string query parser

256. Changes to package org.elasticsearch.index.search.geo:  

256.1. Add a class for geo point parsing tests. It allows to:

	Handle test geo point reset;
	Handle test equals hash code contract;
	Handle test geo point parsing;
	Handle test invalid point embedded object;
	Handle test invalid point lat hash mix;
	Handle test invalid point lon hash mix;
	Handle test invalid field;
	Handle test invalid geo hash;
	Object lat lon;
	Get array lat lon;
	String lat lon;
	Get geohash;
	Assert points equal;
	Assert  close to geo point;
	Convert geo point parsing tests to object

256.2. Add a class for geo utils tests. It allows to:

	Handle test geohash cell width;
	Handle test geohash cell height;
	Handle test geohash cell size;
	Handle test geo hash levels for precision;
	Handle test geo hash levels for precision string;
	Handle test quad tree cell width;
	Handle test quad tree cell height;
	Handle test quad tree cell size;
	Handle test quad tree levels for precision;
	Handle test quad tree levels for precision string;
	Handle test normalize lat in normal range;
	Handle test normalize lat outside normal range;
	Handle test normalize lat huge;
	Handle test normalize lat edge cases;
	Handle test normalize lon in normal range;
	Handle test normalize lon outside normal range;
	Handle test normalize lon huge;
	Handle test normalize lon edge cases;
	Handle test normalize point in normal range;
	Handle test normalize point outside normal range;
	Handle test normalize point outside normal range with options;
	Handle test normalize point huge;
	Handle test normalize point edge cases;
	Handle test parse geo point;
	Handle test parse geo point string Z value error;
	Handle test parse geo point array Z value error;
	Handle test parse geo point geohash;
	Handle test parse geo point geohash wrong type;
	Handle test parse geo point lat no lon;
	Handle test parse geo point lon no lat;
	Handle test parse geo point lon wrong type;
	Handle test parse geo point lat wrong type;
	Handle test parse geo point extra field;
	Handle test parse geo point lon lat geo hash;
	Handle test parse geo point array too many values;
	Handle test parse geo point array 3 D;
	Handle test parse geo point array wrong type;
	Handle test parse geo point invalid type;
	Handle test prefix tree cell sizes;
	Handle test parse geo point geohash positions;
	Parse geohash;
	Assert normalized point

257. Changes to package org.elasticsearch.index.search.nested:  

257.1. Add a class for abstract number nested sorting test case. It allows to:

	Check if abstract number nested sorting test case has doc values;
	Handle test nested sorting;
	Assert avg score mode;
	Create field;
	Create field comparator

257.2. Add a class for double nested sorting tests. It allows to:

	Get field data type;
	Create field comparator;
	Create field;
	Assert avg score mode

257.3. Add a class for float nested sorting tests. It allows to:

	Get field data type;
	Create field comparator;
	Create field;
	Assert avg score mode

257.4. Add an object creator class for long nested sorting tests. It allows to:

	Get field data type;
	Create field comparator;
	Create field

257.5. Add a class for nested sorting tests. It allows to:

	Get field data type;
	Handle test duel;
	Get top docs;
	Handle test nested sorting;
	Handle test multi level nested sorting;
	Get search

258. Changes to package org.elasticsearch.index.seqno:  

258.1. Add a class for counted bit set. It allows to:

	Instantiate counted bit set;
	Get counted bit set;
	Set counted bit set;
	Get cardinality;
	Get length;
	Check if counted bit set is internal bitset released

258.2. Add a class for counted bit set tests. It allows to:

	Convert test compare;
	Handle test release internal bit set

258.3. Add a class for global checkpoint sync action tests. It allows to:

	Set global checkpoint sync action tests;
	Tear global checkpoint sync action tests;
	Handle test translog sync after global checkpoint sync

258.4. Add a class for global checkpoint sync IT. It allows to:

	Handle node plugins;
	Handle test post operation global checkpoint sync;
	Handle test background global checkpoint sync;
	Run global checkpoint sync test

258.5. Add a class for local checkpoint tracker. It allows to:

	Instantiate local checkpoint tracker;
	Generate seq no;
	Handle advance max seq no;
	Handle mark seq no as completed;
	Get checkpoint;
	Get local checkpoint tracker;
	Get stats;
	Wait local checkpoint tracker for ops to complete;
	Check if local checkpoint tracker contains;
	Update checkpoint;
	Handle last seq no in bit set;
	Get bit set key;
	Get bit set  for seq no;
	Seq no  to bit set offset

258.6. Add a class for local checkpoint tracker tests. It allows to:

	Create empty tracker;
	Set local checkpoint tracker tests;
	Handle test simple primary;
	Handle test simple replica;
	Handle test lazy initialization;
	Handle test simple over flow;
	Handle test concurrent primary;
	Process  on failure;
	Run;
	Handle test concurrent replica;
	Convert test wait for ops;
	Handle test contains

258.7. Add a class for seq no stats. It allows to:

	Instantiate seq no stats;
	Instantiate seq no stats  with stream input;
	Get seq no stats;
	Get local checkpoint;
	Get global checkpoint;
	Write  to stream output;
	Convert seq no stats to X content;
	Check if seq no stats equals;
	Hash code;
	Convert seq no stats to string

258.8. Add a class for sequence numbers tests. It allows to:

	Handle test min;
	Handle test max;
	Handle test seq no stats equals and hash code

259. Changes to package org.elasticsearch.index.shard:  

259.1. Add a class for abstract index shard component. It allows to:

	Instantiate abstract index shard component  with shard id, index settings and index settings;
	Shard id;
	Get index settings;
	Node name

259.2. Add a class for docs stats tests. It allows to:

	Handle test calculate average doc size;
	Handle test uninitialised shards;
	Handle test serialize

259.3. Add a class for elasticsearch merge policy. It allows to:

	Instantiate elasticsearch merge policy  with delegate merge policy;
	Upgrade segment commit info;
	Find forced merges;
	Set upgrade  in progress

259.4. Add a class for engine access. It allows to:

	Get engine

259.5. Add a class for illegal index shard state exception. It allows to:

	Instantiate illegal index shard state exception  with shard id, current state and current state;
	Instantiate illegal index shard state exception  with shard id, current state, ex throwable and ex throwable;
	Handle current state;
	Instantiate illegal index shard state exception  with stream input;
	Write  to stream output;
	Get status

259.6. Add an interface declaration  for index event listener. It allows to:

	Handle shard routing changed;
	Handle after index shard created;
	Handle after index shard started;
	Handle before index shard closed;
	Handle after index shard closed;
	Handle index shard state changed;
	Process index event listener index event listener on shard inactive;
	Handle before index created;
	Handle after index created;
	Handle before index removed;
	Handle after index removed;
	Handle before index shard created;
	Handle before index shard deleted;
	Handle after index shard deleted;
	Process index event listener index event listener before index added to cluster;
	Handle on store created;
	Handle on store closed

259.7. Add a class for index shard closed exception. It allows to:

	Instantiate index shard closed exception  with shard id;
	Instantiate index shard closed exception  with shard id, throwable and throwable;
	Instantiate index shard closed exception  with stream input

259.8. Add an interface declaration  for index shard component. It allows to:

	Shard id;
	Get index settings

259.9. Add a class for index shard IT. It allows to:

	Get plugins;
	Convert test lock trying;
	Handle test mark as inactive triggers synced flush;
	Handle test durable flag has effect;
	Set durability;
	Handle test update priority;
	Handle test index dir is deleted when shard removed;
	Handle test expected shard size is present;
	Handle test index can change custom data path;
	Handle test maybe flush;
	Handle test maybe roll translog generation;
	Handle test stress maybe flush or roll translog generation;
	Handle test flush stats;
	Handle test shard has memory buffer on translog recover;
	Post index;
	Delete shard id;
	Check accounting breaker;
	Handle test circuit breaker incremented by index shard;
	Recover shard;
	Handle new index shard;
	Get initializing shard routing;
	Handle test automatic refresh;
	Process  on response;
	Process  on failure;
	Handle test pending refresh with interval change;
	Handle test global checkpoint listeners;
	Handle test global checkpoint listener timeout;
	Handle test invalidate indices request cache when rollback engine;
	Handle test shard changes with default doc type;
	Handle test no op engine factory takes precedence

259.10. Add a class for index shard not recovering exception. It allows to:

	Instantiate index shard not recovering exception  with shard id, current state and current state;
	Instantiate index shard not recovering exception  with stream input

259.11. Add a class for index shard not started exception. It allows to:

	Instantiate index shard not started exception  with shard id, current state and current state;
	Instantiate index shard not started exception  with stream input

259.12. Add a class for index shard operation permits tests. It allows to:

	Handle setup thread pool;
	Handle shutdown thread pool;
	Create index shard operations lock;
	Check no inflight operations;
	Test all operations invoked;
	Process  on response;
	Run;
	Handle test operations invoked immediately if no block;
	Handle test operations if closed;
	Handle test block if closed;
	Test operations delayed  if block;
	Handle test get block when blocked;
	Handle test thread context preserved if block;
	Block index shard operation permits tests;
	Handle test async block operations operation while blocked;
	Handle test async block operations operation before blocked;
	Handle test async block operations race;
	Test active operations count;
	Handle test async block operations on failure;
	Process  on failure;
	Handle test timeout;
	Handle test no permits remaining;
	Handle controlled acquire;
	Handle test permit trace capturing;
	Wrap on response checked runnable;

259.13. Add a class for index shard recovering exception. It allows to:

	Instantiate index shard recovering exception  with shard id;
	Instantiate index shard recovering exception  with stream input

259.14. Add a class for index shard recovery exception. It allows to:

	Instantiate index shard recovery exception  with shard id, cause throwable and cause throwable;
	Instantiate index shard recovery exception  with stream input

259.15. Add a class for index shard relocated exception. It allows to:

	Instantiate index shard relocated exception  with shard id;
	Instantiate index shard relocated exception  with stream input

259.16. Add a class for index shard started exception. It allows to:

	Instantiate index shard started exception  with shard id;
	Instantiate index shard started exception  with stream input

259.17. Add a class for index shard test case. It allows to:

	Handle on recovery done;
	Process  on recovery failure;
	Set index shard test case;
	Set up thread pool;
	Tear index shard test case;
	Tear down thread pool;
	Allow shard failures;
	Fail index shard test case on shard failures;
	Get thread pool settings;
	Create store;
	Handle new shard;
	Handle reinit shard;
	Handle new started shard;
	Close shards;
	Close shard;
	Recover shard  from store;
	Update routing entry;
	Handle recovery empty replica;
	Get fake disco node;
	Recover replica;
	Recover unstarted replica;
	Start replica  after recovery;
	Promote replica;
	Get metadata snapshot or empty;
	Get shard doc UI ds;
	Get doc id and seq nos;
	Assert doc count;
	Assert docs;
	Assert consistent history  between translog and lucene;
	Get index doc;
	Update mappings;
	Delete doc;
	Handle flush shard;
	Recover shard  from snapshot;
	Handle snapshot shard;
	Get engine;
	Get translog;
	Get replication tracker

259.18. Add a class for indexing operation listener tests. It allows to:

	Handle test listeners are executed;
	Pre index;
	Post index;
	Delete shard id;

259.19. Add a class for local shard snapshot. It allows to:

	Instantiate local shard snapshot  with index shard;
	Get index;
	Max local shard snapshot;
	Get max unsafe auto id timestamp;
	Get snapshot directory;
	List;
	Delete file;
	Handle sync;
	Rename;
	Create output;
	Create temp output;
	Obtain lock;
	Close;
	Get pending deletions;
	Close local shard snapshot;
	Get index meta data;
	Convert local shard snapshot to string

259.20. Add a class for primary replica syncer tests. It allows to:

	Handle test syncer sends off correct documents;
	Handle test syncer on closing shard;
	Process  on failure;
	Process  on response;
	Handle test do not send operations without sequence number;
	Handle test status serialization;
	Handle test status serialization as named writeable;
	Handle test status equals;
	Handle test status reports correct numbers

259.21. Add a class for refresh listeners. It allows to:

	Instantiate refresh listeners  with get max refresh listeners int supplier, force refresh runnable, listener executor, logger, thread context, refresh metric and refresh metric;
	Force refreshes;
	Add translog location;
	Close refresh listeners;
	Needed refresh listeners;
	Pending count;
	Set current refresh location supplier;
	Process refresh listeners refresh listeners before refresh;
	Process refresh listeners refresh listeners after refresh;
	Handle fire listeners

259.22. Add a class for replication group. It allows to:

	Instantiate replication group  with index shard routing table, in sync allocation ids set, tracked allocation ids set and tracked allocation ids set;
	Get routing table;
	Get replication group in sync allocation ids;
	Get unavailable  in sync shards;
	Get replication targets;
	Get skipped shards;
	Check if replication group equals;
	Hash code;
	Convert replication group to string

259.23. Add a class for search operation listener tests. It allows to:

	Handle test listeners are executed;
	Process  on pre query phase;
	Process  on failed query phase;
	Process  on query phase;
	Process  on pre fetch phase;
	Process  on failed fetch phase;
	Process  on fetch phase;
	Process  on new context;
	Process  on free context;
	Process  on new scroll context;
	Process  on free scroll context;
	Validate search context

259.24. Add a class for shard id. It allows to:

	Instantiate shard id  with stream input;
	Instantiate shard id  with index;
	Instantiate shard id;
	Get index;
	Get index name;
	I shard id;
	Get id;
	Convert shard id to string;
	Process shard id shard id from string;
	Check if shard id equals;
	Hash code;
	Compute hash code;
	Read shard id;
	Read  from stream input;
	Write  to stream output;
	Compare  to o shard id;
	Convert shard id to X content

259.25. Add a class for shard id tests. It allows to:

	Handle test shard id from string;
	Handle test equals

259.26. Add a class for shard not found exception. It allows to:

	Instantiate shard not found exception  with shard id;
	Instantiate shard not found exception  with shard id, ex throwable and ex throwable;
	Instantiate shard not found exception  with stream input

259.27. Add a class for shard path. It allows to:

	Instantiate shard path  with data path, shard state path, shard id and shard id;
	Resolve translog;
	Resolve index;
	Get data path;
	Check if shard path exists;
	Get shard id;
	Get shard state path;
	Get root data path;
	Get root state path;
	Check if shard path is custom data path;
	Load shard path;
	Delete leftover shard directory;
	Select new path  for shard;
	Get path  with most free space;
	Check if shard path equals;
	Hash code;
	Convert shard path to string

259.28. Add a class for shard path tests. It allows to:

	Handle test load shard path;
	Handle test fail load shard path on multi state;
	Handle test fail load shard path index UUID missmatch;
	Handle test illegal custom data path;
	Handle test valid ctor;
	Handle test get root paths

259.29. Add a class for shard splitting query tests. It allows to:

	Handle test split on ID;
	Handle test split on routing;
	Handle test split on id or routing;
	Handle test split on routing partitioned;
	Assert split

259.30. Add a class for shard state meta data. It allows to:

	Instantiate shard state meta data  with allocation id;
	Check if shard state meta data equals;
	Hash code;
	Convert shard state meta data to string;
	Handle new X content builder;
	Convert to X content;
	Process  from X content

259.31. Add a class for shard utils. It allows to:

	Instantiate shard utils;
	Extract shard id;

259.32. Add a class for shard utils tests. It allows to:

	Handle test extract shard id

259.33. Add a class for store recovery tests. It allows to:

	Handle test add indices;
	Handle test split shard;
	Handle test stats dir wrapper;
	Handle hard links supported

260. Changes to package org.elasticsearch.index.similarity:  

260.1. Add an object creator class for scripted similarity provider. It allows to:

	Apply settings

260.2. Add a class for scripted similarity tests. It allows to:

	Handle test same norms as BM 25 count overlaps;
	Handle test same norms as BM 25 discount overlaps;
	Do test same norms  as BM 25;
	Handle test basics;
	Handle test init script

260.3. Add a class for similarity provider. It allows to:

	Instantiate similarity provider  with similarity;
	Name similarity provider;
	Get similarity provider;
	Check if similarity provider equals;
	Hash code

260.4. Add a class for similarity service tests. It allows to:

	Handle test default similarity;
	Handle test override built in similarity;
	Handle test override default similarity;
	Handle test similarity validation;
	Compute norm;
	Get scorer;
	Get score;

260.5. Add a class for similarity tests. It allows to:

	Get plugins;
	Handle test resolve default similarities;
	Handle test resolve similarities from mapping classic is forbidden;
	Handle test resolve similarities from mapping bm 25;
	Handle test resolve similarities from mapping boolean;
	Handle test resolve similarities from mapping DFR;
	Handle test resolve similarities from mapping IB;
	Handle test resolve similarities from mapping DFI;
	Handle test resolve similarities from mapping LM dirichlet;
	Handle test resolve similarities from mapping LM jelinek mercer;
	Handle test resolve similarities from mapping unknown;
	Handle test unknown parameters

261. Changes to package org.elasticsearch.index.snapshots:  

261.1. Add a class for index shard restore exception. It allows to:

	Instantiate index shard restore exception  with shard id;
	Instantiate index shard restore exception  with shard id, cause throwable and cause throwable;
	Instantiate index shard restore exception  with stream input

261.2. Add a class for index shard restore failed exception. It allows to:

	Instantiate index shard restore failed exception  with shard id;
	Instantiate index shard restore failed exception  with shard id, cause throwable and cause throwable;
	Instantiate index shard restore failed exception  with stream input

261.3. Add a class for index shard snapshot exception. It allows to:

	Instantiate index shard snapshot exception  with shard id;
	Instantiate index shard snapshot exception  with shard id, cause throwable and cause throwable;
	Instantiate index shard snapshot exception  with stream input

261.4. Add a class for index shard snapshot failed exception. It allows to:

	Instantiate index shard snapshot failed exception  with shard id;
	Instantiate index shard snapshot failed exception  with shard id, cause throwable and cause throwable;
	Instantiate index shard snapshot failed exception  with stream input

262. Changes to package org.elasticsearch.index.snapshots.blobstore:  

262.1. Add a class for file info tests. It allows to:

	Convert test;
	Handle test invalid fields in from X content;
	Handle test get part size

262.2. Add a class for sliced input stream. It allows to:

	Instantiate sliced input stream;
	Handle next stream;
	Handle open slice;
	Handle current stream;
	Read sliced input stream;
	Close sliced input stream;
	Handle available

262.3. Add a class for snapshot files. It allows to:

	Get snapshot;
	Instantiate snapshot files  with index files list;
	Get index files;
	Contain physical index file;
	Find physical index file

263. Changes to package org.elasticsearch.index.store:  

263.1. Add a class for abstract azure fs test case. It allows to:

	Handle node plugins;
	Handle test azure fs

263.2. Add a class for corrupted file IT. It allows to:

	Handle node settings;
	Handle node plugins;
	Handle test corrupt file and recover;
	Handle after index shard closed;
	Handle test corrupt primary no replica;
	Handle test corruption on network layer finalizing recovery;
	Handle test corruption on network layer;
	Handle test corrupt file then snapshot and restore;
	Handle test replica corruption;
	Handle num shards;
	Find files  to corrupt on node;
	Handle corrupt random primary file;
	Check if corrupted file IT is per commit file;
	Check if corrupted file IT is per segment file;
	Get list shard files

263.3. Add a class for corrupted translog IT. It allows to:

	Handle node plugins;
	Handle test corrupt translog files;
	Handle corrupt random translog file;
	Disable translog flush;
	Enable translog flush

263.4. Add a class for directory service. It allows to:

	Instantiate directory service  with shard id, index settings and index settings;
	Handle new directory

263.5. Add a class for es base directory test case

263.6. Add a class for exception retry IT. It allows to:

	Handle node plugins;
	Process exception retry IT exception retry IT before index deletion;
	Convert test retry due

263.7. Add a class for fs directory service tests. It allows to:

	Handle test preload;
	Do test preload

263.8. Add an object creator class for index store. It allows to:

	Instantiate index store  with index settings;
	Handle new directory service

263.9. Add a class for index store tests. It allows to:

	Handle test store directory;
	Do test store directory;
	Assert hybrid directory

263.10. Add a class for smb M map directory tests. It allows to:

	Get directory;
	Handle test create output for existing file

263.11. Add a class for smb M map fs tests. It allows to:

	Get index settings

263.12. Add a class for smb simple FS directory tests. It allows to:

	Get directory;
	Handle test create output for existing file

263.13. Add a class for smb simple fs tests. It allows to:

	Get index settings

263.14. Add a class for store file meta data. It allows to:

	Instantiate store file meta data  with written by version;
	Instantiate store file meta data  with written by version, hash bytes ref and hash bytes ref;
	Instantiate store file meta data  with stream input;
	Write  to stream output;
	Name store file meta data;
	Get length;
	Get checksum;
	Check if store file meta data is same;
	Convert store file meta data to string;
	Get written by;
	Hash store file meta data

263.15. Add a class for store smb client yaml test suite IT. It allows to:

	Instantiate store smb client yaml test suite IT  with client yaml test candidate;
	Get parameters

263.16. Add a class for store tests. It allows to:

	Handle test ref count;
	Handle test verifying index output;
	Handle test verifying index output on empty file;
	Handle test checksum corrupted;
	Append random data;
	Handle test verifying index output with bogus input;
	Test new checksums;
	Handle test check integrity;
	Handle test verifying index input;
	Read index input  fully with random seeks;
	Handle corrupt file;
	Assert delete content;
	Assert consistent;
	Handle test recovery diff;
	Handle test cleanup from snapshot;
	Handle test on close callback;
	Handle test store stats;
	Delete content;
	Handle num non extra files;
	Handle test metadata snapshot streaming;
	Create meta data snapshot;
	Handle test user data read;
	Handle test stream store files meta data;
	Handle test mark corrupted on truncated segments file;
	Handle test can open index;
	Handle test deserialize corruption exception;
	Handle test can read old corruption marker;
	Handle test ensure index has history UUID;
	Handle test history UUID can be forced;
	Handle test deoptimize M map;
	Handle test get pending files

263.17. Add a class for verifying index output. It allows to:

	Instantiate verifying index output  with index output;
	Verify verifying index output

264. Changes to package org.elasticsearch.index.store.smbmmapfs:  

264.1. Add an object creator class for smb mmap fs directory service. It allows to:

	Instantiate smb mmap fs directory service  with index settings, shard path and shard path;
	Handle new FS directory

264.2. Add an object creator class for smb mmap fs index store. It allows to:

	Instantiate smb mmap fs index store  with index settings;
	Handle new directory service

265. Changes to package org.elasticsearch.index.store.smbsimplefs:  

265.1. Add an object creator class for smb simple fs directory service. It allows to:

	Instantiate smb simple fs directory service  with index settings, shard path and shard path;
	Handle new FS directory

265.2. Add an object creator class for smb simple fs index store. It allows to:

	Instantiate smb simple fs index store  with index settings;
	Handle new directory service

266. Changes to package org.elasticsearch.index.suggest.stats:  

266.1. Add a class for completions stats tests. It allows to:

	Handle test serialize

266.2. Add a class for suggest stats IT. It allows to:

	Get number of replicas;
	Handle test simple stats;
	Add suggestions;
	Node ids  with index;
	Handle num assigned shards

267. Changes to package org.elasticsearch.index.termvectors:  

267.1. Add a class for term vectors service tests. It allows to:

	Handle test took;
	Handle test doc freqs;
	Handle test with indexed phrases

268. Changes to package org.elasticsearch.index.translog:  

268.1. Add a class for base translog reader. It allows to:

	Instantiate base translog reader  with file channel, path, translog header and translog header;
	Get generation;
	Get size in bytes;
	Handle total operations;
	Get checkpoint;
	Get first operation offset;
	Get primary term;
	Read size;
	Handle new snapshot;
	Handle checksummed stream;
	Read input;
	Read bytes;
	Convert base translog reader to string;
	Compare  to base translog reader;
	Get path;
	Get last modified time;
	Read translog location

268.2. Add a class for buffered checksum stream input. It allows to:

	Instantiate buffered checksum stream input  with stream input, reuse buffered checksum stream input and reuse buffered checksum stream input;
	Instantiate buffered checksum stream input  with stream input;
	Get checksum;
	Read byte;
	Read bytes;
	Reset buffered checksum stream input;
	Read buffered checksum stream input;
	Handle mark supported;
	Skip buffered checksum stream input;
	Handle mark;
	Digest buffered checksum stream input;
	Get source

268.3. Add a class for buffered checksum stream output. It allows to:

	Instantiate buffered checksum stream output  with stream output;
	Get checksum;
	Write byte;
	Write bytes;
	Handle flush;
	Close buffered checksum stream output;
	Reset buffered checksum stream output;
	Digest buffered checksum stream output

268.4. Add an interface declaration  for channel factory. It allows to:

	Handle open;

268.5. Add a class for checkpoint. It allows to:

	Instantiate checkpoint;
	Write data output;
	Handle empty translog checkpoint;
	Read checkpoint V 6 4 0;
	Read checkpoint V 6 0 0;
	Read checkpoint V 5 0 0;
	Convert checkpoint to string;
	Read path;
	Write channel factory;
	Check if checkpoint equals;
	Hash code

268.6. Add a class for multi snapshot tests. It allows to:

	Handle test track seq no simple range;
	Handle test track seq no dense ranges;
	Handle test track seq no sparse ranges;
	Handle test track seq no mimic translog ranges

268.7. Add a class for source. It allows to:

	Instantiate source  with source bytes reference

Add a local a class for index. It allows to:

	Instantiate index  with stream input;
	Instantiate index  with engine index, engine index result and engine index result;
	Instantiate index;
	Op type;
	Estimate size;
	Get type;
	I index;
	Routing index;
	Get source;
	Seq index;
	Handle primary term;
	Get version;
	Write stream output;
	Check if index equals;
	Hash code;
	Convert index to string;
	Get auto generated id timestamp

Add a local a class for delete. It allows to:

	Instantiate delete  with stream input;
	Instantiate delete  with engine delete, engine delete result and engine delete result;
	Instantiate delete  with uid term;
	Op type;
	Estimate size;
	Get type;
	I delete;
	Get uid;
	Seq delete;
	Handle primary term;
	Get version;
	Get source;
	Write stream output;
	Check if delete equals;
	Hash code;
	Convert delete to string

268.8. Add a class for test translog. It allows to:

	Handle corrupt random translog file;
	Handle corrupt file;
	Get min translog gen used in recovery;
	Get current term;
	Drain snapshot;
	Handle new snapshot from operations;
	Handle total operations;
	Handle next;
	Close

268.9. Add a class for translog config. It allows to:

	Instantiate translog config  with shard id, translog path, index settings, big arrays and big arrays;
	Instantiate translog config  with shard id, translog path, index settings, big arrays, buffer size value and buffer size value;
	Get index settings;
	Get shard id;
	Get big arrays;
	Get translog path;
	Get buffer size

268.10. Add a class for translog corrupted exception. It allows to:

	Instantiate translog corrupted exception;
	Instantiate translog corrupted exception  with cause throwable;
	Handle corrupted message;
	Instantiate translog corrupted exception  with stream input

268.11. Add an object creator class for translog deletion policies. It allows to:

	Create translog deletion policy;

268.12. Add a class for translog deletion policy. It allows to:

	Assert no open translog refs;
	Instantiate translog deletion policy;
	Set min translog generation  for recovery;
	Set translog generation  of last commit;
	Set retention size  in bytes;
	Set retention age  in millis;
	Acquire translog gen;
	Assert add translog ref;
	Assert remove translog ref;
	Pending translog ref count;
	Release translog gen;
	Handle min translog gen required;
	Get min translog gen  by size;
	Get min translog gen  by age;
	Handle current time;
	Get min translog gen required  by locks;
	Get min translog generation  for recovery;
	Get translog generation  of last commit;
	Get translog ref count

268.13. Add a class for translog exception. It allows to:

	Instantiate translog exception  with shard id;
	Instantiate translog exception  with shard id, cause throwable and cause throwable;
	Instantiate translog exception  with stream input

268.14. Add a class for translog reader. It allows to:

	Instantiate translog reader  with checkpoint, file channel, path, translog header and translog header;
	Handle open;
	Close channel factory into trimmed reader;
	Get size in bytes;
	Handle total operations;
	Get checkpoint;
	Read bytes;
	Close translog reader;
	Check if translog reader is closed;
	Ensure open

268.15. Add a class for translog snapshot. It allows to:

	Instantiate translog snapshot  with base translog reader;
	Handle total operations;
	Get skipped operations;
	Get checkpoint;
	Handle next;
	Read operation;
	Get size in bytes;
	Read bytes;
	Convert translog snapshot to string

268.16. Add a class for translog stats. It allows to:

	Instantiate translog stats;
	Instantiate translog stats  with stream input;
	Add translog stats;
	Get translog size  in bytes;
	Get estimated number of operations;
	Get uncommitted size  in bytes;
	Get uncommitted operations;
	Get earliest last modified age;
	Convert translog stats to X content;
	Convert translog stats to string;
	Read  from stream input;
	Write  to stream output

268.17. Add a class for truncated translog exception. It allows to:

	Instantiate truncated translog exception  with stream input;
	Instantiate truncated translog exception  with cause throwable

269. Changes to package org.elasticsearch.index.warmer:  

269.1. Add a class for shard index warmer service. It allows to:

	Instantiate shard index warmer service  with shard id, index settings and index settings;
	Get logger;
	Process shard index warmer service shard index warmer service on pre warm;
	Process shard index warmer service shard index warmer service on post warm;
	Get stats

270. Changes to package org.elasticsearch.indexing:  

270.1. Add a class for index action IT. It allows to:

	Handle test auto generate id no duplicates;
	Handle test created flag;
	Handle test created flag with flush;
	Handle test created flag parallel execution;
	Call;
	Handle test created flag with external versioning;
	Handle test create flag with bulk;
	Handle test create index with long name;
	Handle test invalid index name;
	Handle test document with blank field name

271. Changes to package org.elasticsearch.indexlifecycle:  

271.1. Add a class for index lifecycle action IT. It allows to:

	Handle test index lifecycle actions with 11 shards 1 backup;
	Get local node id;
	Assert nodes present

272. Changes to package org.elasticsearch.indices:  

272.1. Add a class for abstract index shard cache entity. It allows to:

	Get stats;
	Handle on cached;
	Process abstract index shard cache entity abstract index shard cache entity on hit;
	Process abstract index shard cache entity abstract index shard cache entity on miss;
	Process abstract index shard cache entity abstract index shard cache entity on removal

272.2. Add a class for alias filter parsing exception. It allows to:

	Instantiate alias filter parsing exception  with index, ex throwable and ex throwable;
	Instantiate alias filter parsing exception  with stream input

272.3. Add a class for date math index expressions integration IT. It allows to:

	Set date math index expressions integration IT now;
	Get date sensitive get;
	Handle test index name date math expressions;
	Handle test auto create index with date math expression;
	Handle test create index with date math expression

272.4. Add a class for index closed exception. It allows to:

	Instantiate index closed exception  with index;
	Instantiate index closed exception  with stream input;
	Get status

272.5. Add a class for index creation exception. It allows to:

	Instantiate index creation exception  with cause throwable;
	Instantiate index creation exception  with stream input

272.6. Add a class for index primary shard not allocated exception. It allows to:

	Instantiate index primary shard not allocated exception  with stream input;
	Instantiate index primary shard not allocated exception  with index;
	Get status

272.7. Add a class for index template missing exception. It allows to:

	Instantiate index template missing exception;
	Instantiate index template missing exception  with stream input;
	Name index template missing exception;
	Write  to stream output;
	Get status

272.8. Add a class for indices lifecycle listener single node tests. It allows to:

	Handle test start delete index event callback;
	Handle before index created;
	Handle after index created;
	Handle before index shard created;
	Handle after index shard created;
	Handle after index shard started;
	Handle before index removed;
	Handle before index shard deleted;
	Handle after index shard deleted;
	Handle after index removed

272.9. Add a class for indices module. It allows to:

	Instantiate indices module  with mapper plugins list;
	Register builtin writables;
	Get named writeables;
	Get named X contents;
	Get mappers;
	Init built  in metadata mappers;
	Get metadata mappers;
	Get built  in meta data fields;
	Get field filter;
	And first function;
	Configure indices module;
	Get mapper registry;
	Get engine factories

272.10. Add a class for indices request cache IT. It allows to:

	Handle test cache aggs;
	Handle test query rewrite;
	Handle test query rewrite missing values;
	Handle test query rewrite dates;
	Handle test query rewrite dates with now;
	Handle test can cache;
	Handle test cache with filtered alias;
	Assert cache state

272.11. Add a class for invalid alias name exception. It allows to:

	Instantiate invalid alias name exception  with index;
	Instantiate invalid alias name exception;
	Instantiate invalid alias name exception  with stream input;
	Get status

272.12. Add a class for invalid index name exception. It allows to:

	Instantiate invalid index name exception;
	Instantiate invalid index name exception  with index;
	Instantiate invalid index name exception  with stream input;
	Get status

272.13. Add a class for invalid index template exception. It allows to:

	Instantiate invalid index template exception;
	Name invalid index template exception;
	Get status;
	Write  to stream output;
	Instantiate invalid index template exception  with stream input

272.14. Add a class for invalid type name exception. It allows to:

	Instantiate invalid type name exception  with stream input;
	Instantiate invalid type name exception;
	Get status

272.15. Add a class for node indices stats tests. It allows to:

	Handle test invalid level

272.16. Add a class for terms lookup. It allows to:

	Instantiate terms lookup;
	Instantiate terms lookup  with stream input;
	Write  to stream output;
	Get index;
	Get type;
	I terms lookup;
	Get path;
	Routing terms lookup;
	Parse terms lookup;
	Convert terms lookup to string;
	Convert terms lookup to X content;
	Hash code;
	Check if terms lookup equals

272.17. Add a class for terms lookup tests. It allows to:

	Handle test terms lookup;
	Handle test illegal arguments;
	Handle test serialization;
	Handle test serialization with types;
	Handle random terms lookup;
	Handle random terms lookup with types

272.18. Add a class for type missing exception. It allows to:

	Instantiate type missing exception  with index;
	Instantiate type missing exception  with index, cause throwable and cause throwable;
	Instantiate type missing exception;
	Instantiate type missing exception  with stream input;
	Get status

273. Changes to package org.elasticsearch.indices.analysis:  

273.1. Add a class for hunspell service. It allows to:

	Instantiate hunspell service  with settings, environment, known dictionaries map and known dictionaries map;
	Get dictionary;
	Resolve hunspell directory;
	Scan and load dictionaries;
	Load dictionary;
	Load dictionary settings

273.2. Add a class for pre built analyzer integration IT. It allows to:

	Handle forbid private index settings;
	Handle test that pre built analyzers are not closed on index close;
	Assert that analyzers have been loaded;
	Assert lucene analyzers are  not closed

274. Changes to package org.elasticsearch.indices.analyze:  

274.1. Add a class for analyze action IT. It allows to:

	Handle node plugins;
	Handle test simple analyzer tests;
	Handle test analyze numeric field;
	Handle test analyze with no index;
	Handle test analyzer with field or type tests;
	Handle test that standard and default analyzers are same;
	Assert tokens;
	Get index or alias;
	Handle test analyzer with multi values;
	Handle test detail analyze with no index;
	Handle test detail analyze custom analyzer with no index;
	Handle test detail analyze with multi values;
	Handle test non exist tokenizer;
	Handle test custom token filter in request;
	Handle test analyze keyword field;
	Handle test analyze normalized keyword field

274.2. Add a class for hunspell service tests. It allows to:

	Handle test locale directory with node level config;
	Handle test locale directory with locale specific config;
	Handle test dic with no aff;
	Handle test dic with two affs

275. Changes to package org.elasticsearch.indices.breaker:  

275.1. Add a class for breaker settings. It allows to:

	Instantiate breaker settings;
	Instantiate breaker settings  with circuit breaker type, circuit breaker durability and circuit breaker durability;
	Get name;
	Get limit;
	Get overhead;
	Get type;
	Get durability;
	Convert breaker settings to string

275.2. Add a class for circuit breaker service. It allows to:

	Instantiate circuit breaker service;
	Register breaker;
	Get breaker;
	Get stats;
	Start circuit breaker service;
	Stop circuit breaker service;
	Do circuit breaker service close

275.3. Add a class for none circuit breaker service. It allows to:

	Instantiate none circuit breaker service;
	Get breaker;
	Get stats;
	Register breaker

276. Changes to package org.elasticsearch.indices.cluster:  

276.1. Add a class for cluster state changes. It allows to:

	Instantiate cluster state changes  with named X content registry, thread pool and thread pool;
	Handle upgrade index meta data;
	Create index;
	Close indices;
	Handle open indices;
	Delete indices;
	Update settings;
	Reroute cluster state;
	Add nodes;
	Join nodes and become master;
	Remove nodes;
	Apply failed shards;
	Apply started shards;
	Run tasks;
	Execute transport master node action;
	Execute cluster state update task

277. Changes to package org.elasticsearch.indices.exists.indices:  

277.1. Add a class for indices exists IT. It allows to:

	Handle test indices exists;
	Handle test indices exists with blocks

278. Changes to package org.elasticsearch.indices.exists.types:  

278.1. Add a class for types exists IT. It allows to:

	Handle node plugins;
	Handle test simple;
	Handle test types exists with blocks

279. Changes to package org.elasticsearch.indices.flush:  

279.1. Add a class for flush IT. It allows to:

	Handle test wait if ongoing;
	Process  on response;
	Process  on failure;
	Handle test reject illegal flush parameters;
	Handle test synced flush;
	Handle test synced flush with concurrent indexing;
	Run;
	Assert flush response equals shard stats;
	Handle test unallocated shards does not hang;
	Handle index doc;
	Handle test synced flush skip out of sync replicas;
	Handle test do not renew synced flush when all sealed

279.2. Add a class for shards synced flush result. It allows to:

	Instantiate shards synced flush result;
	Get shard id;
	Instantiate shards synced flush result  with shard id;
	Instantiate shards synced flush result  with shard id, shard responses map and shard responses map;
	Get failed;
	Get failure reason;
	Get sync id;
	Handle total shards;
	Handle successful shards;
	Get failed shards;
	Handle shard responses;
	Shard id;
	Read  from stream input;
	Write  to stream output;
	Read shards synced flush result

279.3. Add a class for synced flush single node tests. It allows to:

	Handle test modification prevents flushing;
	Handle test single shard success;
	Handle test sync fails if operation is in flight;
	Handle test sync fails on index closed or missing;
	Handle test fail after intermediate commit;
	Handle test fail when commit is missing

280. Changes to package org.elasticsearch.indices.mapper:  

280.1. Add a class for mapper registry. It allows to:

	Instantiate mapper registry  with mapper parsers, metadata mapper parsers, field filter function and field filter function;
	Get mapper parsers;
	Get metadata mapper parsers;
	Check if mapper registry is meta data field;
	Get field filter

281. Changes to package org.elasticsearch.indices.mapping:  

281.1. Add a class for concurrent dynamic template IT. It allows to:

	Handle test concurrent dynamic mapping;
	Process  on response;
	Process  on failure

281.2. Add a class for dedicated master get field mapping IT. It allows to:

	Process dedicated master get field mapping IT dedicated master get field mapping IT before 1

281.3. Add a class for simple get field mappings IT. It allows to:

	Handle node plugins;
	Handle test get mappings where there are none;
	Get mapping  for type;
	Handle test get field mappings;
	Handle test simple get field mappings with defaults;
	Handle test get field mappings with field alias;
	Handle test simple get field mappings with pretty;
	Handle test get field mappings with blocks

281.4. Add a class for simple get mappings IT. It allows to:

	Handle node plugins;
	Handle test get mappings where there are none;
	Get mapping  for type;
	Handle test simple get mappings;
	Handle test get mappings with blocks

281.5. Add a class for update mapping integration IT. It allows to:

	Handle node plugins;
	Handle test dynamic updates;
	Handle test update mapping without type;
	Handle test update mapping without type multi objects;
	Handle test update mapping with conflicts;
	Handle test update mapping with norms conflicts;
	Handle test update mapping no changes;
	Handle test update mapping concurrently;
	Handle test put mappings with blocks

282. Changes to package org.elasticsearch.indices.memory.breaker:  

282.1. Add a class for circuit breaker noop IT. It allows to:

	Handle node settings;
	Handle test noop request breaker;
	Handle test noop fielddata breaker

282.2. Add a class for circuit breaker service IT. It allows to:

	Reset circuit breaker service IT;
	Handle setup;
	Handle teardown;
	Handle noop breaker used;
	Handle test memory breaker;
	Handle test ram accounting terms enum;
	Handle test request breaker;
	Handle test bucket breaker;
	Handle clear field data;
	Handle test custom circuit breaker registration;
	Handle test can reset unreasonable settings;
	Test limits request size

282.3. Add a class for circuit breaker unit tests. It allows to:

	Pct bytes;
	Handle test breaker settings validation with valid settings;
	Handle test breaker settings validation negative overhead;
	Handle test register custom breaker

283. Changes to package org.elasticsearch.indices.recovery:  

283.1. Add a class for delay recovery exception. It allows to:

	Instantiate delay recovery exception;
	Instantiate delay recovery exception  with stream input

283.2. Add a class for index primary relocation IT. It allows to:

	Handle test primary relocation while indexing;
	Run

283.3. Add a class for peer recovery source service tests. It allows to:

	Handle test duplicate recoveries

283.4. Add a class for peer recovery target service tests. It allows to:

	Handle test get starting seq no;
	Handle test write file chunks concurrently

283.5. Add a class for recover files recovery exception. It allows to:

	Instantiate recover files recovery exception  with shard id, total files size value, cause throwable and cause throwable;
	Get number of files;
	Handle total files size;
	Instantiate recover files recovery exception  with stream input;
	Write  to stream output

283.6. Add a class for recovery clean files request. It allows to:

	Instantiate recovery clean files request  with shard id, snapshot and snapshot;
	Instantiate recovery clean files request  with stream input;
	Write  to stream output;
	Get source meta snapshot;
	Get recovery id;
	Shard id;
	Handle total translog ops;
	Get global checkpoint

283.7. Add a class for recovery failed exception. It allows to:

	Instantiate recovery failed exception  with start recovery request, cause throwable and cause throwable;
	Instantiate recovery failed exception  with recovery state, cause throwable and cause throwable;
	Instantiate recovery failed exception  with shard id, source node, target node, cause throwable and cause throwable;
	Instantiate recovery failed exception  with stream input

283.8. Add a class for recovery file chunk request. It allows to:

	Instantiate recovery file chunk request;
	Instantiate recovery file chunk request  with shard id, store file meta data, content bytes reference and content bytes reference;
	Get recovery id;
	Shard id;
	Name recovery file chunk request;
	Get position;
	Get checksum;
	Get length;
	Handle content;
	Handle total translog ops;
	Get source throttle time in nanos;
	Read  from stream input;
	Write  to stream output;
	Convert recovery file chunk request to string;
	Get metadata;
	Handle last chunk

283.9. Add a class for recovery files info request. It allows to:

	Instantiate recovery files info request;
	Instantiate recovery files info request  with shard id, phase 1 file names list, phase 1 file sizes list, phase 1 existing file names list, phase 1 existing file sizes list and phase 1 existing file sizes list;
	Get recovery id;
	Shard id;
	Read  from stream input;
	Write  to stream output

283.10. Add a class for recovery finalize recovery request. It allows to:

	Instantiate recovery finalize recovery request;
	Instantiate recovery finalize recovery request  with shard id;
	Get recovery id;
	Shard id;
	Handle global checkpoint;
	Read  from stream input;
	Write  to stream output

283.11. Add a class for recovery handoff primary context request. It allows to:

	Instantiate recovery handoff primary context request;
	Instantiate recovery handoff primary context request  with shard id, replication tracker primary context and replication tracker primary context;
	Get recovery id;
	Shard id;
	Handle primary context;
	Read  from stream input;
	Write  to stream output;
	Convert recovery handoff primary context request to string

283.12. Add a class for recovery prepare for translog operations request. It allows to:

	Instantiate recovery prepare for translog operations request  with shard id;
	Instantiate recovery prepare for translog operations request  with stream input;
	Get recovery id;
	Shard id;
	Handle total translog ops;
	Check if recovery prepare for translog operations request is file based recovery;
	Write  to stream output

283.13. Add a class for recovery response. It allows to:

	Instantiate recovery response  with phase 1 file names list, phase 1 file sizes list, phase 1 existing file names list, phase 1 existing file sizes list and phase 1 existing file sizes list;
	Instantiate recovery response  with stream input;
	Write  to stream output

283.14. Add a class for recovery settings. It allows to:

	Instantiate recovery settings  with settings, cluster settings and cluster settings;
	Get rate limiter;
	Retry delay network;
	Retry delay state sync;
	Get activity timeout;
	Handle internal action timeout;
	Handle internal action long timeout;
	Get chunk size;
	Set chunk size;
	Set retry delay state sync;
	Set retry delay network;
	Set activity timeout;
	Set internal action timeout;
	Set internal action long timeout;
	Set max bytes size value;
	Get max concurrent file chunks;
	Set max concurrent file chunks

283.15. Add a class for recovery settings dynamic update tests. It allows to:

	Handle test zero bytes per second is no rate limit;
	Handle test retry delay state sync;
	Handle test retry delay network;
	Handle test activity timeout;
	Handle test internal action timeout;
	Handle test internal long action timeout

283.16. Add a class for recovery status tests. It allows to:

	Handle test rename temp files

283.17. Add a class for recovery target. It allows to:

	Instantiate recovery target  with index shard, source node, peer recovery target service recovery listener and peer recovery target service recovery listener;
	Retry copy;
	Get recovery id;
	Shard id;
	Get index shard;
	Get source node;
	Get state;
	Handle cancellable threads;
	Handle last access time;
	Get set last access time;
	Get store;
	Get stage;
	Reset recovery;
	Cancel recovery target;
	Fail recovery failed exception;
	Notify listener;
	Handle mark as done;
	Close internal;
	Convert recovery target to string;
	Ensure ref count;
	Prepare action listener for translog operations;
	Finalize recovery;
	Handle handoff primary context;
	Handle index translog operations;
	Receive file info;
	Handle clean files;
	Write file chunk;
	Get temp name  for file;
	Get translog location

283.18. Add an interface declaration  for recovery target handler. It allows to:

	Prepare action listener for translog operations;
	Finalize recovery;
	Handle handoff primary context;
	Handle index translog operations;
	Receive file info;
	Handle clean files;
	Write file chunk

283.19. Add a class for recovery tests. It allows to:

	Handle test translog history transferred;
	Handle test retention policy change during recovery;
	Handle test recovery with out of order delete with translog;
	Handle test recovery with out of order delete with soft deletes;
	Handle test different history UUID disables O ps recovery;
	Handle test peer recovery persist global checkpoint;
	Handle test peer recovery send safe commit in file based;
	Handle test sequence based recovery keeps translog;
	Handle test should flush after peer recovery

283.20. Add a class for recovery translog operations request. It allows to:

	Instantiate recovery translog operations request;
	Instantiate recovery translog operations request  with shard id, operations list, retention leases and retention leases;
	Get recovery id;
	Shard id;
	Get operations;
	Handle total translog ops;
	Max seen auto id timestamp  on primary;
	Max seq no  of updates or deletes on primary;
	Get retention leases;
	Read  from stream input;
	Write  to stream output

283.21. Add a class for recovery translog operations response. It allows to:

	Instantiate recovery translog operations response;
	Instantiate recovery translog operations response  with stream input;
	Write  to stream output

283.22. Add a class for recovery wait for cluster state request. It allows to:

	Instantiate recovery wait for cluster state request;
	Instantiate recovery wait for cluster state request  with shard id;
	Get recovery id;
	Shard id;
	Get cluster state version;
	Read  from stream input;
	Write  to stream output

283.23. Add a class for remote recovery target handler. It allows to:

	Instantiate remote recovery target handler  with shard id, transport service, target node, recovery settings, on source throttle consumer and on source throttle consumer;
	Prepare action listener for translog operations;
	Finalize recovery;
	Handle handoff primary context;
	Handle index translog operations;
	Receive file info;
	Handle clean files;
	Write file chunk

283.24. Add a class for start recovery request. It allows to:

	Instantiate start recovery request;
	Instantiate start recovery request  with shard id, source node, target node, store metadata snapshot and store metadata snapshot;
	Get recovery id;
	Shard id;
	Target allocation id;
	Get source node;
	Target node;
	Check if start recovery request is primary relocation;
	Handle metadata snapshot;
	Starting start recovery request;
	Read  from stream input;
	Write  to stream output

283.25. Add a class for start recovery request tests. It allows to:

	Handle test serialization

284. Changes to package org.elasticsearch.indices.settings:  

284.1. Add a class for get settings blocks IT. It allows to:

	Handle test get settings with blocks

284.2. Add a class for update number of replicas IT. It allows to:

	Handle maximum number of replicas;
	Handle test simple update number of replicas;
	Convert test auto expand number of replicas 0;
	Convert test auto expand number replicas 1;
	Convert test auto expand number replicas;
	Handle test update with invalid number of replicas;
	Handle test update number of replicas allow no indices

285. Changes to package org.elasticsearch.indices.state:  

285.1. Add a class for close index disable close all IT. It allows to:

	Process close index disable close all IT close index disable close all IT after test;
	Handle test close all requires name;
	Assert index is closed

285.2. Add a class for open close index IT. It allows to:

	Handle test simple close open;
	Handle test simple open missing index;
	Handle test open one missing index;
	Handle test open one missing index ignore missing;
	Handle test close open multiple indices;
	Handle test close open wildcard;
	Handle test close open all;
	Handle test close open all wildcard;
	Handle test open no index;
	Handle test open null index;
	Handle test open already opened index;
	Handle test simple close open alias;
	Handle test close open alias multiple indices;
	Handle test open waiting for active shards failed;
	Handle test open close with docs;
	Handle test open close index with blocks

285.3. Add a class for simple index state IT. It allows to:

	Handle test simple open close;
	Handle test fast close after create continues create after open;
	Handle test consistency after index creation failure

286. Changes to package org.elasticsearch.indices.stats:  

286.1. Add a class for index stats IT. It allows to:

	Handle node plugins;
	Handle node settings;
	Get index settings;
	Get settings builder;
	Handle test field data stats;
	Handle test clear all caches;
	Handle test query cache;
	Handle test non throttle stats;
	Handle test throttle stats;
	Handle test simple stats;
	Handle test merge stats;
	Handle test segments stats;
	Test all flags;
	Handle test encode decode common stats;
	Handle test flag ordinal order;
	Handle test multi index;
	Handle test completion fields param;
	Handle test groups param;
	Handle test types param;
	Set flag;
	Check if index stats IT is set;
	Equals stats;
	Assert cumulative query cache stats;
	Handle test filter cache stats;
	Handle test concurrent indexing and stats requests;
	Persist global checkpoint

287. Changes to package org.elasticsearch.indices.store:  

287.1. Add a class for indices store integration IT. It allows to:

	Handle node settings;
	Handle node plugins;
	Ensure cluster state consistency;
	Handle test index cleanup;
	Relocate and block completion;
	Handle on request received;
	Handle test shard cleanup if shard deletion after relocation failed and index deleted;
	Handle test shards cleanup;
	Handle test shard active elsewhere does not delete another;
	Handle test shard active else where;
	Process  on success;
	Process  on failure;
	Get index directory;
	Get shard directory;
	Wait index for shard deletion;
	Wait index for index deletion

287.2. Add a class for indices store tests. It allows to:

	Create local node;
	Handle test shard can be deleted no shard routing;
	Handle test shard can be deleted no shard started;
	Handle test shard can be deleted shard exists locally

288. Changes to package org.elasticsearch.indices.template:  

288.1. Add a class for index template blocks IT. It allows to:

	Handle test index templates with blocks

288.2. Add a class for simple index template IT. It allows to:

	Handle node plugins;
	Handle cleanup templates;
	Handle test simple index template tests;
	Handle test delete index template;
	Handle test that get index templates works;
	Handle test that get index templates with simple regex works;
	Handle test that invalid get index templates fails;
	Handle test expect action request validation exception;
	Test broken mapping;
	Handle test invalid settings;
	Handle test index template with aliases;
	Handle test index template with aliases in source;
	Handle test index template with aliases source;
	Handle test duplicate alias;
	Handle test alias invalid filter valid json;
	Handle test alias invalid filter invalid json;
	Handle test alias name existing index;
	Handle test alias empty name;
	Handle test alias with multiple index routings;
	Handle test multiple aliases precedence;
	Test strict alias parsing  in indices created via templates;
	Handle test combine templates;
	Handle test order and version;
	Handle test multiple template;
	Handle test partitioned template

289. Changes to package org.elasticsearch.ingest:  

289.1. Add a class for abstract processor. It allows to:

	Instantiate abstract processor;
	Get tag

289.2. Add a class for abstract script test case. It allows to:

	Handle init;
	Compile abstract script test case

289.3. Add a class for compound processor. It allows to:

	Instantiate compound processor  with relative time provider long supplier, processor and processor;
	Instantiate compound processor  with processor;
	Instantiate compound processor  with processors list, on failure processors list and on failure processors list;
	Instantiate compound processor  with processors list, on failure processors list, relative time provider long supplier and relative time provider long supplier;
	Get processors  with metrics;
	Check if compound processor is ignore failure;
	Get compound processor on failure processors;
	Get processors;
	Flatten processors;
	Get type;
	Get tag;
	Execute ingest document;
	Execute ingest document on failure;
	Put failure metadata;
	Remove failure metadata;
	Handle new compound processor exception

289.4. Add a class for compound processor tests. It allows to:

	Handle init;
	Handle test empty;
	Handle test single processor;
	Handle test single processor with exception;
	Handle test ignore failure;
	Handle test single processor with on failure processor;
	Handle test single processor with on failure drop processor;
	Execute ingest document;
	Get type;
	Get tag;
	Handle test single processor with nested failures;
	Handle test compound processor exception fail without on failure;
	Handle test compound processor exception fail;
	Handle test compound processor exception fail in on failure;
	Handle test break on failure;
	Assert stats;

289.5. Add a class for configuration utils. It allows to:

	Instantiate configuration utils;
	Read optional string property;
	Read string property;
	Read string;
	Read string or int property;
	Read string or int;
	Read optional string or int property;
	Read boolean property;
	Read boolean;
	Read int property;
	Read optional list;
	Read list;
	Read map;
	Read optional map;
	Read object;
	Handle new configuration exception;
	Read processor configs;
	Compile template;
	Add metadata  to exception;
	Read processor;
	Extract conditional;
	Normalize script

289.6. Add a class for configuration utils tests. It allows to:

	Set config;
	Handle test read string property;
	Handle test read string property invalid type;
	Handle test read boolean property;
	Handle test read null boolean property;
	Handle test read boolean property invalid type;
	Handle test read string or int property;
	Handle test read string or int property invalid type;
	Handle test read processors;
	Handle test read processor from object or map;
	Handle test no script compilation;
	Handle test script should compile

289.7. Add a class for ingest client IT. It allows to:

	Handle node settings;
	Handle node plugins;
	Handle test simulate;
	Handle test bulk with ingest failures;
	Handle test bulk with upsert;
	Handle test;
	Handle test put with pipeline factory error

289.8. Add a class for ingest document. It allows to:

	Instantiate ingest document  with version type, source map and source map;
	Instantiate ingest document  with other ingest document;
	Instantiate ingest document  with source and metadata map, ingest metadata map and ingest metadata map;
	Get field value;
	Get field value  as bytes;
	Check if ingest document has field;
	Remove field;
	Resolve ingest document;
	Append field value;
	Set field value;
	Append values;
	Cast clazz class;
	Render template;
	Create template model;
	Extract metadata;
	Get metadata;
	Get ingest metadata;
	Get source and metadata;
	Handle deep copy map;
	Handle deep copy;
	Execute pipeline;
	Check if ingest document equals;
	Hash code;
	Convert ingest document to string;
	Handle meta data;
	Get field name

Add a local a class for field path. It allows to:

	Instantiate field path

289.9. Add a class for ingest document matcher. It allows to:

	Assert ingest document;
	Handle deep equals

289.10. Add a class for ingest document mustache IT. It allows to:

	Handle test access meta data via template;
	Handle test access map meta data via template;
	Handle test access list meta data via template;
	Handle test access ingest metadata via template

289.11. Add a class for ingest document tests. It allows to:

	Set test ingest document;
	Handle test simple get field value;
	Handle test get source object;
	Handle test get ingest object;
	Handle test get empty path after stripping out prefix;
	Handle test get field value null value;
	Handle test simple get field value type mismatch;
	Handle test nested get field value;
	Handle test nested get field value type mismatch;
	Handle test list get field value;
	Handle test list get field value null;
	Handle test list get field value index not numeric;
	Handle test list get field value index out of bounds;
	Handle test get field value not found;
	Handle test get field value not found null parent;
	Handle test get field value null;
	Handle test get field value empty;
	Handle test has field;
	Handle test has field nested;
	Handle test list has field;
	Handle test list has field null;
	Handle test list has field index out of bounds;
	Handle test list has field index out of bounds fail;
	Handle test list has field index not numeric;
	Handle test nested has field type mismatch;
	Handle test has field not found;
	Handle test has field not found null parent;
	Handle test has field nested not found;
	Handle test has field null;
	Handle test has field null value;
	Handle test has field empty;
	Handle test has field source object;
	Handle test has field ingest object;
	Handle test has field empty path after stripping out prefix;
	Handle test simple set field value;
	Handle test set field value null value;
	Handle test nested set field value;
	Handle test set field value on existing field;
	Handle test set field value on existing parent;
	Handle test set field value on existing parent type mismatch;
	Handle test set field value on existing null parent;
	Handle test set field value null name;
	Handle test set source object;
	Handle test set ingest object;
	Handle test set ingest source object;
	Handle test set empty path after stripping out prefix;
	Handle test list set field value no index provided;
	Handle test list append field value;
	Handle test list append field values;
	Convert test append field value;
	Convert test append field values;
	Convert test append field value convert string;
	Convert test append field values convert string;
	Convert test append field value convert integer;
	Convert test append field values convert integer;
	Convert test append field value convert map;
	Convert test append field value convert string list element;
	Convert test append field values convert string list element;
	Convert test append field value list element convert map;
	Handle test list set field value index provided;
	Handle test set field value list as part of path;
	Handle test list set field value index not numeric;
	Handle test list set field value index out of bounds;
	Handle test set field value empty name;
	Handle test remove field;
	Handle test remove inner field;
	Handle test remove non existing field;
	Handle test remove existing parent type mismatch;
	Handle test remove source object;
	Handle test remove ingest object;
	Handle test remove empty path after stripping out prefix;
	Handle test list remove field;
	Handle test remove field value not found null parent;
	Handle test nested remove field type mismatch;
	Handle test list remove field index not numeric;
	Handle test list remove field index out of bounds;
	Handle test remove null field;
	Handle test remove empty field;
	Handle test equals and hashcode;
	Handle test ingest metadata timestamp;
	Handle test copy constructor;
	Handle test copy constructor with zoned date time;
	Handle test set invalid source field

289.12. Add a class for ingest info. It allows to:

	Instantiate ingest info  with processors list;
	Instantiate ingest info  with stream input;
	Write  to stream output;
	Get processors;
	Check if ingest info contains processor;
	Convert ingest info to X content;
	Check if ingest info equals;
	Hash code

289.13. Add a class for ingest metadata tests. It allows to:

	Handle test from X content;
	Handle test diff

289.14. Add a class for ingest processor not installed on all nodes IT. It allows to:

	Instantiate ingest processor not installed on all nodes IT;
	Handle node plugins;
	Handle test fail pipeline creation;
	Handle test fail pipeline creation processor not installed on master node;
	Handle test fail start node

289.15. Add a class for ingest service. It allows to:

	Instantiate ingest service  with cluster service, thread pool, environment, script service, analysis registry, ingest plugins list and ingest plugins list;
	Get processor factories;
	Get cluster service;
	Get script service;
	Delete delete pipeline request;
	Handle new response;
	Execute current state;
	Handle inner delete;
	Get pipelines;
	Handle inner get pipelines;
	Put pipeline;
	Get pipeline;
	Info ingest service;
	Apply cluster state;
	Get processor metrics;
	Handle substitute pipeline;
	Execute ingest document;
	Get type;
	Handle inner put;
	Validate pipeline;
	Execute bulk request;
	Process  on failure;
	Run;
	Get stats;
	Get processor name;
	Handle inner execute;
	Handle inner update pipelines

289.16. Add a class for ingest stats tests. It allows to:

	Handle test serialization;
	Create pipeline stats;
	Create processor stats;
	Serialize ingest stats;
	Assert ingest stats;
	Assert stats;
	Get pipeline stats

289.17. Add a class for ingest test plugin. It allows to:

	Get processors

289.18. Add a class for pipeline. It allows to:

	Instantiate pipeline  with version integer, compound processor and compound processor;
	Instantiate pipeline  with version integer, compound processor, relative time provider long supplier and relative time provider long supplier;
	Create config map;
	Execute ingest document;
	Get id;
	Get description;
	Get version;
	Get compound processor;
	Get processors;
	Get pipeline on failure processors;
	Flatten all processors;
	Get metrics

289.19. Add a class for pipeline configuration tests. It allows to:

	Handle test serialization;
	Handle test parser;
	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Get random fields exclude filter

289.20. Add a class for pipeline factory tests. It allows to:

	Handle test create;
	Handle test create with no processors field;
	Handle test create with empty processors field;
	Handle test create with pipeline on failure;
	Handle test create with pipeline empty on failure;
	Handle test create with pipeline empty on failure in processor;
	Handle test create with pipeline ignore failure;
	Handle test create unused processor options;
	Handle test create processors with on failure properties;
	Handle test flatten processors

289.21. Add a class for processor info. It allows to:

	Instantiate processor info;
	Instantiate processor info  with stream input;
	Write  to stream output;
	Get type;
	Convert processor info to X content;
	Check if processor info equals;
	Hash code;
	Compare  to processor info

289.22. Add a class for random document picks. It allows to:

	Instantiate random document picks;
	Handle random field name;
	Handle random leaf field name;
	Handle random existing field name;
	Add random field;
	Can add field;
	Handle random ingest document;
	Handle random source;
	Handle random field value;
	Handle random string;
	Handle random non negtive long;
	Add random fields

289.23. Add a class for value source mustache IT. It allows to:

	Handle test value source with templates;
	Handle test access source via template

289.24. Add a class for value source tests. It allows to:

	Handle test deep copy;
	Handle test copy does not change provided map;
	Handle test copy does not change provided list;
	Handle test no script compilation;
	Handle test script should compile

290. Changes to package org.elasticsearch.ingest.attachment:  

290.1. Add a class for attachment processor factory tests. It allows to:

	Handle test build defaults;
	Handle test configure indexed chars;
	Handle test build target field;
	Handle test build fields;
	Handle test build illegal field option;
	Handle test ignore missing

290.2. Add a class for attachment processor tests. It allows to:

	Create standard processor;
	Handle test english text document;
	Handle test html document with random fields;
	Handle test french text document;
	Handle test unknown language document;
	Handle test empty text document;
	Handle test word document;
	Handle test word document with visio schema;
	Handle test legacy word document with visio schema;
	Handle test pdf;
	Handle test visio is excluded;
	Handle test encrypted pdf;
	Handle test html document;
	Handle test X html document;
	Handle test epub document;
	Handle test asciidoc document;
	Handle test zip file does not hang;
	Handle test parse as bytes array;
	Handle test null value with ignore missing;
	Handle test non existent with ignore missing;
	Handle test null without ignore missing;
	Handle test non existent without ignore missing;
	Parse document;
	Handle test indexed chars;
	Get attachment processor tests as base 64

290.3. Add a class for ingest attachment client yaml test suite IT. It allows to:

	Instantiate ingest attachment client yaml test suite IT  with client yaml test candidate;
	Get parameters

290.4. Add a class for ingest attachment plugin. It allows to:

	Get processors

290.5. Add a class for tika doc tests. It allows to:

	Handle test files;
	Assert parseable

290.6. Add a class for tika impl. It allows to:

	Parse metadata;
	Get restricted permissions;
	Add read permissions

290.7. Add a class for tika impl tests. It allows to:

	Handle test tika loads

291. Changes to package org.elasticsearch.ingest.common:  

291.1. Add a class for abstract string processor factory test case. It allows to:

	Handle new factory;
	Modify config;
	Assert processor;
	Handle test create;
	Handle test create with ignore missing;
	Handle test create with target field;
	Handle test create missing field

291.2. Add a class for abstract string processor test case. It allows to:

	Handle new processor;
	Modify input;
	Get expected result;
	Handle expected result type;
	Handle test processor;
	Handle test field not found;
	Handle test field not found with ignore missing;
	Handle test null value;
	Handle test null value with ignore missing;
	Handle test non string value;
	Handle test non string value with ignore missing;
	Handle test target field

291.3. Add a class for append processor factory tests. It allows to:

	Handle init;
	Handle test create;
	Handle test create no field present;
	Handle test create no value present;
	Handle test create null value;
	Handle test invalid mustache template

291.4. Add a class for append processor tests. It allows to:

	Convert test append values;
	Convert test convert scalar;
	Handle test append metadata except version;
	Create append processor;
	Handle random value;

291.5. Add a class for convert processor factory tests. It allows to:

	Handle test create;
	Handle test create unsupported type;
	Handle test create no field present;
	Handle test create no type present;
	Handle test create with explicit target field;
	Handle test create with ignore missing

291.6. Add a class for convert processor tests. It allows to:

	Handle test convert int;
	Handle test convert int hex;
	Handle test convert int leading zero;
	Handle test convert int hex error;
	Handle test convert int list;
	Handle test convert int error;
	Handle test convert long;
	Handle test convert long hex;
	Handle test convert long leading zero;
	Handle test convert long hex error;
	Handle test convert long list;
	Handle test convert long error;
	Handle test convert double;
	Handle test convert double list;
	Handle test convert double error;
	Handle test convert float;
	Handle test convert float list;
	Handle test convert float error;
	Handle test convert boolean;
	Handle test convert boolean list;
	Handle test convert boolean error;
	Handle test convert string;
	Handle test convert string list;
	Handle test convert non existing field;
	Handle test convert null field;
	Handle test convert non existing field with ignore missing;
	Handle test convert null field with ignore missing;
	Handle test auto convert not string;
	Handle test auto convert string not matched;
	Handle test auto convert match boolean;
	Handle test auto convert match integer;
	Handle test auto convert match long;
	Handle test auto convert double not matched;
	Handle test auto convert match float;
	Handle test target field

291.7. Add a class for date format tests. It allows to:

	Handle test parse java;
	Handle test parse java with time zone;
	Handle test parse java default year;
	Handle test parse unix ms;
	Handle test parse unix;
	Handle test parse unix with ms precision;
	Handle test parse ISO 8601;
	Handle test parse ISO 8601 failure;
	Handle test TAI 64 N parse;
	Handle test from string

291.8. Add a class for date index name factory tests. It allows to:

	Handle test defaults;
	Handle test specify optional settings;
	Handle test required fields

291.9. Add a class for date index name processor tests. It allows to:

	Handle test java pattern;
	Handle test TAI 64 N;
	Handle test unix ms;
	Handle test unix;
	Handle test templated fields;
	Create processor

291.10. Add a class for date processor factory tests. It allows to:

	Handle init;
	Handle test build defaults;
	Handle test match field is mandatory;
	Handle test match formats is mandatory;
	Handle test parse locale;
	Handle test parse timezone;
	Handle test parse match formats;
	Handle test parse match formats failure;
	Handle test parse target field

291.11. Add a class for date processor tests. It allows to:

	Get templatize;
	Handle test java pattern;
	Handle test java pattern multiple formats;
	Handle test java pattern no timezone;
	Handle test invalid java pattern;
	Handle test java pattern locale;
	Handle test java pattern english locale;
	Handle test java pattern default year;
	Handle test TAI 64 N;
	Handle test unix ms;
	Handle test unix;
	Handle test invalid timezone;
	Handle test invalid locale

291.12. Add a class for dot expander processor factory tests. It allows to:

	Handle test create;
	Handle test valid fields;
	Handle test create field missing;
	Handle test create invalid fields

291.13. Add a class for dot expander processor tests. It allows to:

	Handle test escape fields;
	Handle test escape fields value field;
	Handle test escape fields path;
	Handle test escape fields do nothing if field not in source doc

291.14. Add a class for fail processor exception. It allows to:

	Instantiate fail processor exception

291.15. Add a class for fail processor factory tests. It allows to:

	Handle init;
	Handle test create;
	Handle test create missing message field;
	Handle test invalid mustache template

291.16. Add a class for fail processor tests. It allows to:

	Handle test

291.17. Add a class for for each processor factory tests. It allows to:

	Handle test create;
	Handle test set ignore missing;
	Handle test create with too many processor types;
	Handle test create with non existing processor type;
	Handle test create with missing field;
	Handle test create with missing processor

291.18. Add a class for for each processor tests. It allows to:

	Handle test execute;
	Handle test execute with failure;
	Handle test meta data available;
	Handle test rest of the document is available;
	Handle test random;
	Execute ingest document;
	Get type;
	Get tag;
	Handle test modify fields outside array;
	Convert test scalar value allows underscore value field;
	Handle test nested for each;
	Handle test ignore missing

291.19. Add a class for grok processor factory tests. It allows to:

	Handle test build;
	Handle test build with ignore missing;
	Handle test build missing field;
	Handle test build missing patterns;
	Handle test build empty patterns list;
	Handle test create with custom patterns;
	Handle test create with invalid pattern;
	Handle test create with invalid pattern definition

291.20. Add a class for grok processor get action tests. It allows to:

	Handle test request;
	Handle test response serialization;
	Convert test response

291.21. Add a class for grok processor tests. It allows to:

	Handle test match;
	Handle test no match;
	Handle test no matching pattern name;
	Handle test match without captures;
	Handle test null field;
	Handle test null field with ignore missing;
	Handle test not string field;
	Handle test not string field with ignore missing;
	Handle test missing field;
	Handle test missing field with ignore missing;
	Handle test multiple patterns with match return;
	Handle test set metadata;
	Handle test trace with one pattern;
	Handle test combined patterns;
	Handle test combine same pattern name across patterns;
	Handle test first win named capture;
	Handle test unmatched names not included in document

291.22. Add a class for gsub processor factory tests. It allows to:

	Handle new factory;
	Modify config;
	Assert processor;
	Handle test create no pattern present;
	Handle test create no replacement present;
	Handle test create invalid pattern

291.23. Add a class for gsub processor tests. It allows to:

	Handle new processor;
	Modify input;
	Get expected result

291.24. Add a class for ingest common client yaml test suite IT. It allows to:

	Instantiate ingest common client yaml test suite IT  with client yaml test candidate;
	Get parameters

291.25. Add a class for ingest common plugin. It allows to:

	Instantiate ingest common plugin;
	Get processors;
	Get actions;
	Get rest handlers;
	Get settings;
	Create grok thread watchdog

291.26. Add a class for join processor factory tests. It allows to:

	Handle test create;
	Handle test create no field present;
	Handle test create no separator present;
	Handle test create with target field

291.27. Add a class for join processor tests. It allows to:

	Handle test join strings;
	Handle test join integers;
	Handle test join non list field;
	Handle test join non existing field;
	Handle test join null value;
	Handle test join with target field

291.28. Add a class for json processor factory tests. It allows to:

	Handle test create;
	Convert test create with add;
	Handle test create with default target;
	Handle test create with missing field;
	Convert test create with both target field and add

291.29. Add a class for json processor tests. It allows to:

	Handle test execute;
	Handle test invalid value;
	Handle test byte array;
	Handle test null;
	Handle test boolean;
	Handle test integer;
	Handle test double;
	Handle test string;
	Handle test array;
	Handle test field missing;
	Convert test add;
	Convert test add bool

291.30. Add a class for key value processor factory tests. It allows to:

	Handle test create with defaults;
	Handle test create with all fields set;
	Handle test create with missing field;
	Handle test create with missing field split;
	Handle test create with missing value split

291.31. Add a class for key value processor tests. It allows to:

	Handle test;
	Handle test root target;
	Handle test key same as source field;
	Handle test include keys;
	Handle test exclude keys;
	Handle test include and exclude keys;
	Handle test missing field;
	Handle test null value with ignore missing;
	Handle test non existent with ignore missing;
	Handle test fail field split match;
	Handle test fail value split match;
	Handle test trim key and value;
	Handle test trim multi char sequence;
	Handle test strip brackets;
	Handle test add prefix;
	Create kv processor;

291.32. Add an object creator class for lowercase processor factory tests. It allows to:

	Handle new factory

291.33. Add a class for lowercase processor tests. It allows to:

	Handle new processor;
	Get expected result

291.34. Add a class for remove processor factory tests. It allows to:

	Handle init;
	Handle test create;
	Handle test create multiple fields;
	Handle test create missing field;
	Handle test invalid mustache template

291.35. Add a class for remove processor tests. It allows to:

	Handle test remove fields;
	Handle test remove non existing field;
	Handle test ignore missing

291.36. Add a class for rename processor factory tests. It allows to:

	Handle init;
	Handle test create;
	Handle test create with ignore missing;
	Handle test create no field present;
	Convert test create no

291.37. Add a class for rename processor tests. It allows to:

	Handle test rename;
	Handle test rename array element;
	Handle test rename non existing field;
	Handle test rename non existing field with ignore missing;
	Handle test rename new field already exists;
	Handle test rename existing field null value;
	Handle test rename atomic operation set fails;
	Put;
	Handle test rename atomic operation remove fails;
	Remove;
	Handle test rename leaf into branch;
	Create rename processor

291.38. Add a class for script processor factory tests. It allows to:

	Handle init;
	Handle test factory validation with default lang;
	Handle test factory validation with params;
	Handle test factory validation for multiple scripting types;
	Handle test factory validation at least one scripting type;
	Handle test inline backcompat;
	Handle test factory invalidate with invalid compiled script

291.39. Add a class for script processor tests. It allows to:

	Handle test scripting;
	Handle test type deprecation

291.40. Add a class for set processor factory tests. It allows to:

	Handle init;
	Handle test create;
	Handle test create with override;
	Handle test create no field present;
	Handle test create no value present;
	Handle test create null value;
	Handle test invalid mustache template

291.41. Add a class for set processor tests. It allows to:

	Handle test set existing fields;
	Handle test set new fields;
	Handle test set fields type mismatch;
	Handle test set new field with override disabled;
	Handle test set existing field with override disabled;
	Handle test set existing null field with override disabled;
	Handle test set metadata except version;
	Handle test set metadata version;
	Handle test set metadata version type;
	Create set processor

291.42. Add a class for sort processor factory tests. It allows to:

	Handle test create;
	Handle test create with order;
	Handle test create with target field;
	Handle test create with invalid order;
	Handle test create missing field

291.43. Add a class for sort processor tests. It allows to:

	Handle test sort strings;
	Handle test sort integers non random;
	Handle test sort integers;
	Handle test sort shorts;
	Handle test sort doubles;
	Handle test sort floats;
	Handle test sort bytes;
	Handle test sort booleans;
	Handle test sort mixed strings;
	Handle test sort non list field;
	Handle test sort non existing field;
	Handle test sort null value;
	Handle test descending sort with target field;
	Handle test ascending sort with target field;
	Handle test sort with target field leaves original untouched

291.44. Add a class for split processor factory tests. It allows to:

	Handle test create;
	Handle test create no field present;
	Handle test create no separator present;
	Handle test create with target field

291.45. Add a class for split processor tests. It allows to:

	Handle test split;
	Handle test split field not found;
	Handle test split null value;
	Handle test split null value with ignore missing;
	Handle test split non existent with ignore missing;
	Handle test split non string value;
	Handle test split appendable;
	Handle test split with target field

291.46. Add an object creator class for trim processor factory tests. It allows to:

	Handle new factory

291.47. Add a class for trim processor tests. It allows to:

	Handle new processor;
	Modify input;
	Get expected result;
	Add whitespaces

291.48. Add an object creator class for uRL decode processor factory tests. It allows to:

	Handle new factory

291.49. Add a class for uRL decode processor tests. It allows to:

	Modify input;
	Handle new processor;
	Get expected result

291.50. Add an object creator class for uppercase processor factory tests. It allows to:

	Handle new factory

291.51. Add a class for uppercase processor tests. It allows to:

	Handle new processor;
	Get expected result

292. Changes to package org.elasticsearch.join:  

292.1. Add a class for parent child client yaml test suite IT. It allows to:

	Instantiate parent child client yaml test suite IT  with client yaml test candidate;
	Get parameters

292.2. Add a class for parent join plugin. It allows to:

	Instantiate parent join plugin;
	Get queries;
	Get aggregations;
	Get mappers

293. Changes to package org.elasticsearch.join.aggregations:  

293.1. Add an interface declaration  for children

293.2. Add a class for children aggregation builder. It allows to:

	Instantiate children aggregation builder;
	Instantiate children aggregation builder  with clone children aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate children aggregation builder  with stream input;
	Handle inner write to;
	Handle inner build;
	Resolve config;
	Join field resolve config;
	Do X content body;
	Parse X content parser;
	Handle inner hash code;
	Handle inner equals;
	Get type

293.3. Add an object creator class for children aggregator factory. It allows to:

	Instantiate children aggregator factory  with values source config, child filter query, parent filter query, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create unmapped;
	Build empty aggregation;
	Do create internal

293.4. Add a class for children IT. It allows to:

	Handle test children aggs;
	Handle test parent with multiple buckets;
	Handle test with deletes;
	Handle test non existing child type;
	Handle test post collection;
	Handle test hierarchical children aggs;
	Handle test post collect all leaf readers

293.5. Add a class for children tests. It allows to:

	Get plugins;
	Create test aggregator builder

293.6. Add a class for internal children. It allows to:

	Instantiate internal children  with internal aggregations, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal children  with stream input;
	Get writeable name;
	Handle new aggregation

293.7. Add a class for internal children tests. It allows to:

	Get named X contents;
	Create test instance;
	Handle extra assert reduced;
	Get instance reader;
	Get implementation class

293.8. Add an object creator class for join aggregation builders. It allows to:

	Get children;
	Get parent

293.9. Add an object creator class for parent to children aggregator. It allows to:

	Instantiate parent to children aggregator  with aggregator factories, search context, parent aggregator, child filter query, parent filter query, values source bytes with ordinals, pipeline aggregators list, meta data map and meta data map;
	Build aggregation;
	Build empty aggregation

293.10. Add a class for parent to children aggregator tests. It allows to:

	Handle test no docs;
	Handle test parent child;
	Get setup index;
	Create parent document;
	Create child document;
	Create join field;
	Handle mapper service mock;
	Create join field mapper;
	Handle test case

293.11. Add a class for parsed children. It allows to:

	Get type;
	Process parsed children parsed children from X content

294. Changes to package org.elasticsearch.join.mapper:  

294.1. Add a class for parent join field mapper tests. It allows to:

	Get plugins;
	Handle test single level;
	Handle test parent id specified as number;
	Handle test multiple levels;
	Handle test update relations;
	Handle test invalid join field inside object;
	Handle test invalid join field inside multi fields;
	Handle test multiple join fields;
	Handle test eager global ordinals

295. Changes to package org.elasticsearch.join.query:  

295.1. Add a class for child query search IT. It allows to:

	Handle test multi level child;
	Handle test 2744;
	Handle test simple child query;
	Handle test caching bug with fquery filter;
	Handle test has parent filter;
	Handle test simple child query with flush;
	Handle test scoped facet;
	Handle test deleted parent;
	Handle test dfs search type;
	Handle test has child and has parent fail when some segments dont contain any parent or child docs;
	Handle test count api usage;
	Handle test explain usage;
	Create doc builders;
	Handle test score for parent child queries with function score;
	Handle test parent child queries can handle no relevant types in index;
	Handle test has child and has parent filter with filter;
	Handle test has child inner hits highlighting;
	Handle test has child and has parent wrapped in A query filter;
	Handle test simple query rewrite;
	Handle test re indexing parent and child documents;
	Handle test has child query with minimum score;
	Handle test parent field query;
	Handle test parent id query;
	Handle test has child not being cached;
	Handle random has child;
	Handle random has parent;
	Handle test has child query only returns single child type;
	Handle test has child query with nested inner objects;
	Handle test named filters;
	Handle test parent child queries no parent type;
	Handle test parent child caching;
	Handle test parent child queries via scroll api;
	Create min max doc builders;
	Min max query;
	Handle test min max children;
	Handle test has parent inner query type;
	Handle test highlighters ignore parent child;
	Handle test aliases filter with has child query

295.2. Add a class for has child query builder tests. It allows to:

	Get plugins;
	Create test index settings;
	Initialize additional mappings;
	Do create test query builder;
	Do assert lucene query;
	Handle test serialization BWC;
	Handle test illegal values;
	Handle test from json;
	Convert test;
	Assert late parsing query;
	Handle test must rewrite;
	Handle test non default similarity;
	Handle test ignore unmapped;
	Handle test ignore unmapped with rewrite;
	Handle test extract inner hit builders with duplicate

295.3. Add a class for has parent query builder. It allows to:

	Instantiate has parent query builder  with query builder;
	Instantiate has parent query builder  with query builder, inner hit builder and inner hit builder;
	Instantiate has parent query builder  with stream input;
	Do write  to stream output;
	Get query;
	Handle score;
	Get type;
	Handle inner hit;
	Ignore unmapped;
	Do query shard context to query;
	Do X content;
	Process has parent query builder has parent query builder from X content;
	Get writeable name;
	Equals that has parent query builder;
	Do hash code;
	Rewrite query rewrite context;
	Extract inner hit builders

295.4. Add a class for has parent query builder tests. It allows to:

	Get plugins;
	Create test index settings;
	Initialize additional mappings;
	Do create test query builder;
	Do assert lucene query;
	Handle test serialization BWC;
	Handle test illegal values;
	Convert test;
	Handle test must rewrite;
	Handle test from json;
	Handle test ignore unmapped;
	Handle test ignore unmapped with rewrite;
	Handle test extract inner hit builders with duplicate

295.5. Add an object creator class for join query builders. It allows to:

	Check if join query builders has child query;
	Check if join query builders has parent query;
	Handle parent id

295.6. Add a class for parent child test case. It allows to:

	Ignore external cluster;
	Handle node plugins;
	Transport client plugins;
	Get index settings;
	Create index request;
	Build parent join field mapping  from simplified def;
	Add field mappings;

295.7. Add a class for parent id query builder. It allows to:

	Instantiate parent id query builder;
	Instantiate parent id query builder  with stream input;
	Do write  to stream output;
	Get type;
	Get id;
	Ignore unmapped;
	Do X content;
	Process parent id query builder parent id query builder from X content;
	Do query shard context to query;
	Equals that parent id query builder;
	Do hash code;
	Get writeable name

295.8. Add a class for parent id query builder tests. It allows to:

	Get plugins;
	Create test index settings;
	Initialize additional mappings;
	Do create test query builder;
	Do assert lucene query;
	Handle test from json;
	Handle test ignore unmapped

296. Changes to package org.elasticsearch.join.spi:  

296.1. Add a class for parent join named X content provider. It allows to:

	Get named X content parsers

297. Changes to package org.elasticsearch.mget:  

297.1. Add a class for simple mget IT. It allows to:

	Handle test that mget should work with one index missing;
	Handle test that mget should work with multi index alias;
	Handle test that mget should work with alias routing;
	Handle test that source filtering is supported;
	Handle test that routing per document is supported;
	Get index or alias

298. Changes to package org.elasticsearch.monitor:  

298.1. Add a class for monitor service. It allows to:

	Instantiate monitor service  with settings, node environment, thread pool, cluster info service and cluster info service;
	Get os service;
	Get process service;
	Handle jvm service;
	Get fs service;
	Start monitor service;
	Stop monitor service;
	Do monitor service close

298.2. Add a class for probes. It allows to:

	Get load and scale  to percent

299. Changes to package org.elasticsearch.monitor.fs:  

299.1. Add a class for device stats tests. It allows to:

	Handle test device stats

299.2. Add a class for fs probe. It allows to:

	Instantiate fs probe  with node environment;
	Get stats;
	Handle io stats;
	Read proc disk stats;
	Adjust fs probe for huge filesystems;
	Get FS info

300. Changes to package org.elasticsearch.monitor.jvm:  

300.1. Add a class for gc names. It allows to:

	Get gc names by memory pool name;
	Get gc names by gc name

300.2. Add a class for jvm gc monitor service tests. It allows to:

	Handle test slow gc logging;
	Handle test gc overhead logging

300.3. Add a class for jvm info tests. It allows to:

	Handle test use G 1 GC;
	Check if jvm info tests is G 1 GC enabled;
	Handle flag is enabled

300.4. Add a class for jvm monitor tests. It allows to:

	Handle test monitor failure;
	Process  on monitor failure;
	Monitor gc;
	Process  on slow gc;
	Process  on gc overhead;
	Handle test slow gc;
	Now;
	Handle jvm stats;
	Assert collection;
	Handle test monitor gc;
	Check gc overhead;
	Get collector;
	Handle test check gc overhead;

300.5. Add a class for jvm service. It allows to:

	Instantiate jvm service  with settings;
	Info jvm service;
	Get stats

300.6. Add a class for jvm stats tests. It allows to:

	Handle test jvm stats

301. Changes to package org.elasticsearch.monitor.os:  

301.1. Add a class for os probe tests. It allows to:

	Handle test os info;
	Handle test os stats;
	Handle test get system load average;
	Read proc loadavg;
	Handle test cgroup probe;
	Read proc self cgroup;
	Read sys fs cgroup cpu acct cpu acct usage;
	Read sys fs cgroup cpu acct cpu cfs period;
	Read sys fs cgroup cpu acct cpu acct cfs quota;
	Read;
	Read sys fs cgroup memory limit  in bytes;
	Read sys fs cgroup memory usage  in bytes;
	Are cgroup stats available

301.2. Add a class for os stats tests. It allows to:

	Handle test serialization

302. Changes to package org.elasticsearch.monitor.process:  

302.1. Add a class for process probe tests. It allows to:

	Handle test process info;
	Handle test process stats

303. Changes to package org.elasticsearch.node:  

303.1. Add a class for adaptive selection stats. It allows to:

	Instantiate adaptive selection stats  with client connections map, node computed stats map and node computed stats map;
	Instantiate adaptive selection stats  with stream input;
	Write  to stream output;
	Convert adaptive selection stats to X content;
	Get outgoing connections;
	Get computed stats;
	Get ranks

303.2. Add a class for internal settings preparer. It allows to:

	Prepare settings;
	Prepare environment;
	Initialize settings;
	Finalize settings

303.3. Add a class for internal settings preparer tests. It allows to:

	Create base env settings;
	Handle clear base env settings;
	Handle test empty settings;
	Handle test default cluster name;
	Handle test garbage is not swallowed;
	Handle test yaml not allowed;
	Handle test json not allowed;
	Handle test secure settings;
	Handle test default properties do nothing

303.4. Add an object creator class for mock node. It allows to:

	Instantiate mock node  with settings, classpath plugins collection and classpath plugins collection;
	Instantiate mock node  with settings, classpath plugins collection, config path and config path;
	Instantiate mock node  with environment, classpath plugins collection and classpath plugins collection;
	Get classpath plugins;
	Create big arrays;
	Create page cache recycler;
	Handle new search service;
	Handle new transport service;
	Handle process recovery settings;
	Handle new cluster info service;
	Handle new http transport;
	Configure node and cluster id state listener

303.5. Add a class for mock node tests. It allows to:

	Handle test components mocked by marker plugins

303.6. Add a class for node closed exception. It allows to:

	Instantiate node closed exception  with discovery node;
	Instantiate node closed exception  with stream input

303.7. Add a class for node mocks plugin

303.8. Add a class for node service. It allows to:

	Instantiate node service  with settings, thread pool, monitor service, discovery, transport service, indices service, plugins service, circuit breaker service, script service, http server transport, ingest service, cluster service, settings filter, response collector service, search transport service and search transport service;
	Info node service;
	Get stats;
	Get ingest service;
	Get monitor service;
	Close node service

303.9. Add a class for node validation exception. It allows to:

	Instantiate node validation exception

303.10. Add a class for recovery settings chunk size plugin. It allows to:

	Get settings

303.11. Add a class for response collector service tests. It allows to:

	Set response collector service tests;
	Tear response collector service tests;
	Handle test node stats;
	Handle test concurrent adding and removing;
	Handle test node removal

304. Changes to package org.elasticsearch.nodesinfo:  

304.1. Add a class for node info streaming tests. It allows to:

	Handle test node info streaming;
	Assert expected unchanged;
	Compare json output;
	Create node info

304.2. Add a class for simple nodes info IT. It allows to:

	Handle test nodes infos;
	Handle test nodes infos total indexing buffer;
	Handle test allocated processors

305. Changes to package org.elasticsearch.operateAllIndices:  

305.1. Add a class for destructive operations IT. It allows to:

	Process destructive operations IT destructive operations IT after test;
	Handle test delete index is rejected;
	Handle test delete index default behavior;
	Handle test close index is rejected;
	Handle test close index default behavior;
	Handle test open index is rejected;
	Handle test open index default behavior

306. Changes to package org.elasticsearch.painless:  

306.1. Add a class for addition tests. It allows to:

	Handle test basics;
	Handle test int;
	Handle test int const;
	Handle test byte;
	Handle test byte const;
	Handle test char;
	Handle test char const;
	Handle test short;
	Handle test short const;
	Handle test long;
	Handle test long const;
	Handle test float;
	Handle test float const;
	Handle test double;
	Handle test double const;
	Handle test def;
	Handle test def typed LHS;
	Handle test def typed RHS;
	Handle test def nulls;
	Handle test compound assignment;
	Handle test def compound assignment LHS;
	Handle test def compound assignment RHS

306.2. Add a class for analyzer caster. It allows to:

	Get legal cast;
	Const cast;
	Promote numeric;
	Add from 0 class;
	Promote xor;
	Promote equality;
	Promote conditional;
	Instantiate analyzer caster

306.3. Add a class for analyzer caster tests. It allows to:

	Assert cast;
	Handle test numeric casts

306.4. Add a class for and tests. It allows to:

	Handle test basics;
	Handle test int;
	Handle test int const;
	Handle test long;
	Handle test long const;
	Handle test illegal;
	Handle test def;
	Handle test def typed LHS;
	Handle test def typed RHS;
	Handle test compound assignment;
	Handle test bogus compound assignment;
	Handle test def compound assignment;
	Handle test def bogus compound assignment

306.5. Add a class for array like object test case. It allows to:

	Decl type;
	Get value ctor call;
	Process array like object test case array like object test case out of bounds exception message matcher;
	Handle array load store test case;
	Expect array like object test case out of bounds;
	Handle test ints;
	Handle test ints in def;
	Handle test longs;
	Handle test longs in def;
	Handle test shorts;
	Handle test shorts in def;
	Handle test bytes;
	Handle test bytes in def;
	Handle test floats;
	Handle test floats in def;
	Handle test doubles;
	Handle test doubles in def;
	Handle test strings;
	Handle test strings in def;
	Handle test def

306.6. Add a class for array tests. It allows to:

	Decl type;
	Get value ctor call;
	Process array tests array tests out of bounds exception message matcher;
	Handle test array length helper;
	Assert array length;
	Handle test jacks crazy expression 1;
	Convert test jacks crazy expression;
	Handle test array variable;
	Handle test for loop;
	Handle test divide array

306.7. Add a class for augmentation tests. It allows to:

	Handle test static;
	Handle test subclass;
	Handle test def;
	Handle test capturing reference;
	Handle test iterable any;
	Handle test iterable as collection;
	Handle test iterable as list;
	Handle test iterable each;
	Handle test iterable each with index;
	Handle test iterable every;
	Handle test iterable find results;
	Handle test iterable group by;
	Handle test iterable join;
	Handle test iterable sum;
	Handle test collection collect;
	Handle test collection find;
	Handle test collection find all;
	Handle test collection find result;
	Handle test collection split;
	Handle test map collect;
	Handle test map count;
	Handle test map each;
	Handle test map every;
	Handle test map find;
	Handle test map find all;
	Handle test map find result;
	Handle test map find results;
	Handle test map group by;
	Handle test feature test

306.8. Add a class for basic API tests. It allows to:

	Handle test list iterator;
	Handle test set iterator;
	Handle test map iterator;
	Handle test map load store;
	Handle test update map load store;
	Handle test list load store;
	Handle test list empty;
	Handle test list get;
	Handle test list as array;
	Handle test def assignments;
	Handle test internal boxing;
	Handle test interface default methods;
	Handle test interfaces have object;
	Handle test primitives have methods;
	Test public member access;
	Handle test no semicolon;
	Handle test static

306.9. Add a class for basic expression tests. It allows to:

	Handle test return constant;
	Handle test return constant char;
	Handle test constant char truncation;
	Handle test string escapes;
	Handle test string termination;
	Handle test declare variable;
	Handle test cast;
	Handle test illegal def cast;
	Handle test cat;
	Handle test comp;
	Handle test boxing;
	Handle test bool;
	Handle test conditional;
	Handle test precedence;
	Handle test null safe deref;
	Handle test static interface method;
	Assert must be nullable

306.10. Add a class for comparison tests. It allows to:

	Handle test def eq;
	Handle test def eq typed LHS;
	Handle test def eq typed RHS;
	Handle test def eqr;
	Handle test def ne;
	Handle test def ne typed LHS;
	Handle test def ne typed RHS;
	Handle test def ner;
	Handle test def lt;
	Handle test def lt typed LHS;
	Handle test def lt typed RHS;
	Handle test def lte;
	Handle test def lte typed LHS;
	Handle test def lte typed RHS;
	Handle test def gt;
	Handle test def gt typed LHS;
	Handle test def gt typed RHS;
	Handle test def gte;
	Handle test def gte typed LHS;
	Handle test def gte typed RHS;
	Handle test instance of

306.11. Add a class for compiler settings. It allows to:

	Get max loop counter;
	Set max loop counter;
	Check if compiler settings is picky;
	Set picky;
	Get initial call site depth;
	Set initial call site depth;
	Are regexes enabled;
	Get set regexes enabled

306.12. Add a class for conditional tests. It allows to:

	Handle test basic;
	Handle test precedence;
	Handle test assignment;
	Handle test null arguments;
	Handle test promotion;
	Handle test incompatible assignment

306.13. Add a class for constant. It allows to:

	Instantiate constant  with location, org objectweb asm type, initializer consumer and initializer consumer

306.14. Add a class for debug tests. It allows to:

	Handle test explain;
	Handle test painless explain error serialization

306.15. Add a class for debugger. It allows to:

	Convert debugger to string;

306.16. Add a class for def bootstrap tests. It allows to:

	Handle test one type;
	Test two types;
	Handle test too many types;
	Handle test megamorphic;
	Handle test null guard add;
	Handle test null guard add when cached;
	Handle test null guard eq;
	Handle test null guard eq when cached;
	Handle test no null guard add;
	Handle test no null guard add when cached;
	Assert depth equals

306.17. Add a class for def math. It allows to:

	Not def math;
	Get neg;
	Handle neg;
	Plus def math;
	Get mul;
	Handle mul;
	Get div;
	Handle div;
	Get rem;
	Handle rem;
	Add def math;
	Get sub;
	Handle sub;
	E def math;
	Handle l;
	Handle lte;
	G def math;
	Handle gte;
	Long integral value;
	Get int integral value;
	And def math;
	Get xor;
	Handle xor;
	O def math;
	Get lsh;
	Handle lsh;
	Get rsh;
	Handle rsh;
	Get ush;
	Handle ush;
	Get unbox;
	Promote clazz class;
	Promote class;
	Lookup unary;
	Lookup binary;
	Lookup generic;
	Handle dynamic receiver cast;
	Handle dynamic cast;
	Get number;
	Cast class A

306.18. Add a class for def optimization tests. It allows to:

	Handle test int brace array opti load;
	Handle test int brace array opti store;
	Handle test int brace list opti load;
	Handle test int brace list opti store;
	Handle test int brace map opti load;
	Handle test int brace map opti store;
	Handle test int field list opti load;
	Handle test int field list opti store;
	Handle test int field map opti load;
	Handle test int field map opti store;
	Handle test int call 0 opti;
	Handle test int call 1 opti;
	Handle test double brace array opti load;
	Handle test double brace array opti store;
	Handle test double brace list opti load;
	Handle test double brace list opti store;
	Handle test double brace map opti load;
	Handle test double brace map opti store;
	Handle test double field list opti load;
	Handle test double field list opti store;
	Handle test double field map opti load;
	Handle test double field map opti store;
	Handle test double call 0 opti;
	Handle test double call 1 opti;
	Handle test illegal cast;
	Handle test mul opt LHS;
	Handle test mul opt RHS;
	Handle test mul opt ret;
	Handle test div opt LHS;
	Handle test div opt RHS;
	Handle test div opt ret;
	Handle test rem opt LHS;
	Handle test rem opt RHS;
	Handle test rem opt ret;
	Handle test add opt LHS;
	Handle test add opt RHS;
	Handle test add opt ret;
	Handle test add opt null guards;
	Handle test sub opt LHS;
	Handle test sub opt RHS;
	Handle test sub opt ret;
	Handle test lsh opt LHS;
	Handle test lsh opt RHS;
	Handle test lsh opt ret;
	Handle test rsh opt LHS;
	Handle test rsh opt RHS;
	Handle test rsh opt ret;
	Handle test ush opt LHS;
	Handle test ush opt RHS;
	Handle test ush opt ret;
	Handle test and opt LHS;
	Handle test and opt RHS;
	Handle test and opt ret;
	Handle test or opt LHS;
	Handle test or opt RHS;
	Handle test or opt ret;
	Handle test xor opt LHS;
	Handle test xor opt RHS;
	Handle test xor opt ret;
	Handle test boolean xor opt LHS;
	Handle test boolean xor opt RHS;
	Handle test boolean xor opt ret;
	Handle test lt opt LHS;
	Handle test lt opt RHS;
	Handle test lte opt LHS;
	Handle test lte opt RHS;
	Handle test eq opt LHS;
	Handle test eq opt RHS;
	Handle test neq opt LHS;
	Handle test neq opt RHS;
	Handle test gte opt LHS;
	Handle test gte opt RHS;
	Handle test gt opt LHS;
	Handle test gt opt RHS;
	Handle test unary minus opt ret;
	Handle test unary not opt ret;
	Handle test unary plus opt ret;
	Handle test lambda return type;
	Handle test lambda arguments

306.19. Add a class for division tests. It allows to:

	Handle test basics;
	Handle test int;
	Handle test int const;
	Handle test long;
	Handle test long const;
	Handle test float;
	Handle test float const;
	Handle test double;
	Handle test double const;
	Handle test divide by zero;
	Handle test divide by zero const;
	Handle test def;
	Handle test def typed LHS;
	Handle test def typed RHS;
	Handle test compound assignment;
	Handle test def compound assignment;
	Handle test compound assignment by zero

306.20. Add a class for elvis tests. It allows to:

	Handle test basics;
	Handle test with null safe dereferences;
	Handle test lazy;
	Test right associative;
	Check one branch;
	Handle test extraneous;
	Handle test question space colon is not elvis;
	Assert can  not return primitive

306.21. Add a class for equals tests. It allows to:

	Handle test types equals;
	Handle test types not equals;
	Handle test equals;
	Handle test not equals;
	Test branch equals;
	Handle test equals def and primitive;
	Test branch  not equals;
	Handle test not equals def and primitive;
	Test right hand null;
	Handle test left hand null

306.22. Add a class for float overflow tests. It allows to:

	Handle test assignment addition overflow;
	Handle test assignment subtraction overflow;
	Handle test assignment multiplication overflow;
	Handle test assignment division overflow;
	Handle test addition;
	Handle test addition const;
	Handle test subtraction;
	Handle test subtraction const;
	Handle test multiplication;
	Handle test multiplication const;
	Handle test division;
	Handle test division const;
	Convert test division;
	Convert test remainder

306.23. Add an object creator class for function ref. It allows to:

	Create painless lookup;
	Instantiate function ref  with interface method type, delegate method type, factory method type and factory method type

306.24. Add a class for function ref tests. It allows to:

	Handle test static method reference;
	Handle test static method reference def;
	Handle test virtual method reference;
	Handle test virtual method reference def;
	Handle test qualified static method reference;
	Handle test qualified static method reference def;
	Handle test qualified virtual method reference;
	Handle test qualified virtual method reference def;
	Handle test ctor method reference;
	Handle test ctor method reference def;
	Handle test ctor with params;
	Handle test array ctor method ref;
	Handle test array ctor method ref def;
	Handle test capturing method reference;
	Handle test capturing method reference def impl;
	Handle test capturing method reference def interface;
	Handle test capturing method reference def everywhere;
	Handle test capturing method reference multiple lambdas;
	Handle test capturing method reference multiple lambdas def impls;
	Handle test capturing method reference multiple lambdas def interface;
	Handle test capturing method reference multiple lambdas def everywhere;
	Test own static method reference;
	Test own static method reference def;
	Handle test interface default method;
	Handle test interface default method def;
	Handle test interface static method;
	Handle test method missing;
	Handle test qualified method missing;
	Handle test class missing;
	Handle test qualified class missing;
	Handle test not functional interface;
	Handle test incompatible;
	Handle test wrong arity;
	Handle test wrong arity not enough;
	Handle test wrong arity def;
	Handle test wrong arity not enough def;
	Handle test return void;
	Handle test return void def

306.25. Add a class for function tests. It allows to:

	Handle test basic;
	Handle test reference;
	Handle test concat;
	Handle test multi args;
	Handle test multi funcs;
	Handle test recursion;
	Handle test empty;
	Handle test returns are unboxed if needed;
	Handle test duplicates;
	Handle test bad cast from method;
	Handle test infinite loop;
	Handle test return void

306.26. Add a class for globals. It allows to:

	Instantiate globals  with statements bit set;
	Add synthetic method;
	Add constant initializer;
	Add class binding;
	Add instance binding;
	Get synthetic methods;
	Get constant initializers;
	Get class bindings;
	Get instance bindings;
	Get statements

306.27. Add a class for increment tests. It allows to:

	Handle test increment byte;
	Handle test increment char;
	Handle test increment short;
	Handle test increment int;
	Handle test increment long;
	Handle test increment float;
	Handle test increment double;
	Handle test increment def

306.28. Add a class for initializer tests. It allows to:

	Handle test array initializers;
	Handle test list initializers;
	Handle test map initializers;
	Handle test crazy initializer

306.29. Add a class for integer overflow tests. It allows to:

	Handle test assignment addition overflow;
	Handle test assignment subtraction overflow;
	Handle test assignment multiplication overflow;
	Handle test assignment division overflow;
	Handle test increment over flow;
	Handle test addition;
	Handle test addition const;
	Handle test subtraction;
	Handle test subtraction const;
	Handle test multiplication;
	Handle test multiplication const;
	Handle test division;
	Handle test division const;
	Handle test negation overflow;
	Handle test negation overflow const

306.30. Add a class for lambda tests. It allows to:

	Handle test no arg lambda;
	Handle test no arg lambda def;
	Handle test lambda with args;
	Handle test lambda with typed args;
	Handle test primitive lambdas;
	Handle test primitive lambdas with typed args;
	Handle test primitive lambdas def;
	Handle test primitive lambdas with typed args def;
	Handle test primitive lambdas convertible;
	Handle test primitive args;
	Handle test primitive args typed;
	Handle test primitive args typed oddly;
	Handle test multiple statements;
	Handle test unneeded curly statements;
	Handle test void return;
	Handle test void return def;
	Test two lambdas;
	Handle test nested lambdas;
	Handle test lambda in loop;
	Handle test capture;
	Test two captures;
	Handle test captures are read only;
	Handle test no param masking;
	Handle test capture def;
	Handle test nested capture;
	Handle test nested capture params;
	Handle test wrong arity;
	Handle test wrong arity def;
	Handle test wrong arity not enough;
	Handle test wrong arity not enough def;
	Handle test lambda in function;
	Handle test lambda capture function param;
	Handle test reserved capture;
	Handle test return void;
	Handle test return void def

306.31. Add a class for lang painless client yaml test suite IT. It allows to:

	Instantiate lang painless client yaml test suite IT  with client yaml test candidate;
	Get parameters

306.32. Add a class for list tests. It allows to:

	Decl type;
	Get value ctor call;
	Fill value;
	Process list tests list tests out of bounds exception message matcher

306.33. Add a class for location. It allows to:

	Instantiate location;
	Get source name;
	Offset location;
	Create error;
	Compute source name

306.34. Add a class for map tests. It allows to:

	Map accesses test case;
	Handle test map in def accesses;
	Handle test map accesses

306.35. Add a class for method writer. It allows to:

	Instantiate method writer  with method, cw class visitor, statements bit set, compiler settings and compiler settings;
	Write statement offset;
	Write debug info;
	Write loop counter;
	Write cast;
	Handle box;
	Get type;
	Write new strings;
	Write append strings;
	Write method writer to strings;
	Write dynamic binary instruction;
	Write binary instruction;
	Write dup;
	Write pop;
	End method;
	Visit end;
	Invoke def call;
	Invoke method call;
	Invoke lambda call

306.36. Add a class for multiplication tests. It allows to:

	Handle test basics;
	Handle test int;
	Handle test int const;
	Handle test byte;
	Handle test long;
	Handle test long const;
	Handle test float;
	Handle test float const;
	Handle test double;
	Handle test double const;
	Handle test def;
	Handle test def typed LHS;
	Handle test def typed RHS;
	Handle test compound assignment;
	Handle test def compound assignment

306.37. Add a class for needs score tests. It allows to:

	Handle test needs scores

306.38. Add a class for no semi colon tests. It allows to:

	Handle test declaration statement;
	Handle test expression;
	Handle test return statement

306.39. Add a class for or tests. It allows to:

	Handle test basics;
	Handle test int;
	Handle test int const;
	Handle test long;
	Handle test long const;
	Handle test illegal;
	Handle test def;
	Handle test def typed LHS;
	Handle test def typed RHS;
	Handle test compound assignment;
	Handle test bogus compound assignment;
	Handle test def compound assignment;
	Handle test def bogus compound assignment

306.40. Add a class for overload tests. It allows to:

	Handle test method;
	Handle test method dynamic;
	Handle test constructor;
	Handle test static

306.41. Add a class for painless doc generator. It allows to:

	Handle main;
	Handle document field;
	Handle document constructor;
	Handle document method;
	Anchor print stream;
	Get constructor name;
	Get method name;
	Emit type;
	Emit struct;
	Emit javadoc link;
	Handle javadoc root;
	Emit generated warning;
	Get class url path

306.42. Add a class for painless error. It allows to:

	Instantiate painless error

306.43. Add a class for painless explain error. It allows to:

	Instantiate painless explain error;
	Get object  to explain;
	Get headers

306.44. Add a class for painless plugin. It allows to:

	Get script engine;
	Create guice modules;
	Get settings;
	Reload SPI;
	Get contexts;
	Get actions;
	Get rest handlers

306.45. Add an interface declaration  for painless script. It allows to:

	Get name;
	Get source;
	Get statements;
	Convert throwable to script exception;
	Should filter;
	Get previous statement;
	Get next statement

306.46. Add a class for painless script engine. It allows to:

	Instantiate painless script engine  with settings, contexts map and contexts map;
	Get contexts  to lookups;
	Get type;
	Compile script context;
	Run;
	Generate stateful factory;
	Generate factory;
	Write needs methods;
	Compile compiler;
	Build compiler settings;
	Convert throwable to script exception;
	Get previous statement;
	Get next statement

306.47. Add a class for postfix tests. It allows to:

	Handle test constant postfixes;
	Handle test conditional postfixes;
	Handle test assignment postfixes;
	Handle test def conditional postfixes;
	Handle test def assignment postfixes

306.48. Add a class for promotion tests. It allows to:

	Handle test binary promotion;
	Handle test binary promotion const

306.49. Add a class for regex tests. It allows to:

	Get script engine settings;
	Handle test pattern after return;
	Handle test backslash escapes forward slash;
	Handle test backslash escape backslash;
	Handle test regex is non greedy;
	Handle test pattern after assignment;
	Handle test pattern in if stement;
	Handle test pattern after infix boolean;
	Handle test pattern after unary not boolean;
	Handle test in ternary condition;
	Handle test in ternary true arm;
	Handle test in ternary false arm;
	Handle test regex in function;
	Handle test return regex from function;
	Handle test call matcher directly;
	Handle test find in if;
	Convert test find cast;
	Handle test find or string concat;
	Handle test find of def;
	Handle test find on input;
	Handle test group;
	Handle test numbered group;
	Handle test named group;
	Handle test split;
	Handle test split as stream;
	Handle test multiline flag;
	Handle test singleline flag;
	Handle test insensitive flag;
	Handle test extended flag;
	Handle test unicode case flag;
	Handle test unicode character class flag;
	Handle test literal flag;
	Handle test canonical equivalence flag;
	Test many flags;
	Handle test replace all matches string;
	Handle test replace all matches char sequence;
	Handle test replace all no match string;
	Handle test replace all no match char sequence;
	Handle test replace all quote replacement;
	Handle test replace first matches string;
	Handle test replace first matches char sequence;
	Handle test replace first no match string;
	Handle test replace first no match char sequence;
	Test replace first quote replacement;
	Handle test cant use pattern compile;
	Handle test bad regex pattern;
	Handle test regex against number;
	Handle test bogus regex flag

306.50. Add a class for remainder tests. It allows to:

	Handle test basics;
	Handle test int;
	Handle test int const;
	Handle test long;
	Handle test long const;
	Handle test float;
	Handle test float const;
	Handle test double;
	Handle test double const;
	Handle test divide by zero;
	Handle test divide by zero const;
	Handle test def;
	Handle test def typed LHS;
	Handle test def typed RHS;
	Handle test compound assignment;
	Handle test def compound assignment

306.51. Add a class for script engine tests. It allows to:

	Handle test simple equation;
	Handle test map access;
	Handle test access list in script

306.52. Add a class for script test case. It allows to:

	Handle setup;
	Get script engine settings;
	Get script contexts;
	Get exec;
	Assert bytecode exists;
	Assert bytecode has pattern;
	Expect script throws;
	Assert script stack

306.53. Add a class for shift tests. It allows to:

	Handle test basics;
	Handle test long shifts;
	Handle test long shifts const;
	Handle test bogus shifts;
	Handle test bogus shifts const;
	Handle test lsh def;
	Handle test lsh def typed LHS;
	Handle test lsh def typed RHS;
	Handle test rsh def;
	Handle test rsh def type LHS;
	Handle test rsh def typed LHS;
	Handle test ush def;
	Handle test ush def typed LHS;
	Handle test ush def typed RHS;
	Handle test bogus def shifts;
	Handle test bogus def shifts typed LHS;
	Handle test bogus def shifts typed RHS;
	Handle test lsh compound assignment;
	Handle test rsh compound assignment;
	Handle test ush compound assignment;
	Handle test bogus compound assignment;
	Handle test bogus compound assignment const;
	Handle test bogus compound assignment def

306.54. Add a class for similarity script tests. It allows to:

	Get script contexts;
	Handle test basics;
	Handle test weight script

306.55. Add a class for simple checks adapter. It allows to:

	Instantiate simple checks adapter  with cv class visitor;
	Visit method;
	Visit jump insn;
	Visit try catch block

306.56. Add a class for string tests. It allows to:

	Handle test append;
	Handle test append multiple;
	Handle test append many;
	Do test append many;
	Handle test nested concats;
	Handle test string API;
	Handle test string and character;
	Handle test def concat;
	Handle test def compound assignment;
	Handle test complex compound assignment;
	Handle test append string into map;
	Handle test base 64 augmentations;
	Handle test java 9 string concat bytecode

306.57. Add a class for subtraction tests. It allows to:

	Handle test basics;
	Handle test int;
	Handle test int const;
	Handle test byte;
	Handle test byte const;
	Handle test char;
	Handle test char const;
	Handle test short;
	Handle test short const;
	Handle test long;
	Handle test long const;
	Handle test float;
	Handle test float const;
	Handle test double;
	Handle testy double const;
	Handle test def;
	Handle test def typed LHS;
	Handle test def typed RHS;
	Handle test compound assignment;
	Handle test def compound assignment

306.58. Add a class for try catch tests. It allows to:

	Handle test throw;
	Handle test catch;
	Handle test catch superclass;
	Handle test no catch

306.59. Add a class for unary tests. It allows to:

	Handle test basics;
	Handle test negation int;
	Handle test plus;
	Handle test def not;
	Handle test def not typed ret;
	Handle test def neg;
	Handle test def neg typed ret;
	Handle test def plus;
	Handle test def plus typed ret

306.60. Add a class for utility. It allows to:

	Char utility to string;
	String tochar;
	Instantiate utility

306.61. Add a class for when things go wrong tests. It allows to:

	Handle test null pointer;
	Handle test script stack;
	Assert script element column;
	Handle test invalid shift;
	Handle test bogus parameter;
	Handle test infinite loops;
	Handle test loop limits;
	Handle test illegal dynamic method;
	Handle test dynamic NPE;
	Handle test dynamic wrong args;
	Handle test dynamic array wrong index;
	Handle test dynamic list wrong index;
	Handle test R curly not delim;
	Handle test bad boxing cast;
	Test when things go wrong tests out of memory error;
	Handle test stack overflow error;
	Handle test regex disabled by default;
	Handle test can not override regex enabled;
	Handle test invalid int constant suggests long;
	Handle test question space dot is not null safe dereference;
	Handle test bad string escape;
	Handle test regular unexpected character

306.62. Add a class for writer constants. It allows to:

	Get asm method;
	Instantiate writer constants

306.63. Add a class for xor tests. It allows to:

	Handle test basics;
	Handle test int;
	Handle test int const;
	Handle test long;
	Handle test long const;
	Handle test bool;
	Handle test bool const;
	Handle test illegal;
	Handle test def;
	Handle test def typed LHS;
	Handle test def typed RHS;
	Handle test compound assignment;
	Handle test bogus compound assignment;
	Handle test compound assignment def;
	Handle test def bogus compound assignment

307. Changes to package org.elasticsearch.painless.antlr:  

307.1. Add a class for enhanced painless lexer. It allows to:

	Instantiate enhanced painless lexer  with char stream, painless lookup and painless lookup;
	Handle next token;
	Recover lnvae lexer no viable alt exception;
	Check if enhanced painless lexer is type;
	Slash is regex

307.2. Add a class for painless lexer. It allows to:

	Get token names;
	Get vocabulary;
	Check if painless lexer is type;
	Slash is regex;
	Instantiate painless lexer  with input char stream;
	Get grammar file name;
	Get rule names;
	Get serialized ATN;
	Get mode names;
	Get ATN;
	Handle sempred;
	Handle dIV sempred;
	Handle rEGEX sempred;
	TYPE sempred

307.3. Add a class for painless parser base visitor. It allows to:

	Visit source;
	Visit function;
	Visit parameters;
	Visit statement;
	Visit  if ctx painless parser if context;
	Get visit while;
	Visit  for ctx painless parser for context;
	Visit ctx painless parser each context;
	Visit ineach;
	Try ctx painless parser try context;
	Do ctx painless parser do context;
	Visit decl;
	Continue ctx painless parser continue context;
	Visit break;
	Visit return;
	Throw ctx painless parser throw context;
	Visit expr;
	Visit trailer;
	Visit block;
	Visit empty;
	Visit initializer;
	Visit  afterthought ctx painless parser afterthought context;
	Visit declaration;
	Visit decltype;
	Visit declvar;
	Visit trap;
	Visit single;
	Visit comp;
	Visit bool;
	Visit conditional;
	Visit assignment;
	Visit binary;
	Visit elvis;
	Visit instanceof;
	Visit pre;
	Visit post;
	Visit read;
	Visit operator;
	Visit cast;
	Visit dynamic;
	Visit static;
	Visit newarray;
	Visit precedence;
	Visit numeric;
	Visit true;
	Visit false;
	Visit null;
	Visit string;
	Visit regex;
	Visit listinit;
	Visit mapinit;
	Visit variable;
	Visit calllocal;
	Visit newobject;
	Visit postfix;
	Visit postdot;
	Visit callinvoke;
	Visit fieldaccess;
	Visit braceaccess;
	Visit newstandardarray;
	Visit newinitializedarray;
	Visit listinitializer;
	Visit mapinitializer;
	Visit maptoken;
	Visit arguments;
	Visit argument;
	Visit lambda;
	Visit lamtype;
	Visit classfuncref;
	Visit constructorfuncref;
	Visit capturingfuncref;
	Visit localfuncref

307.4. Add an interface declaration  for painless parser visitor. It allows to:

	Visit source;
	Visit function;
	Visit parameters;
	Visit statement;
	Visit  if ctx painless parser if context;
	Get visit while;
	Visit  for ctx painless parser for context;
	Visit ctx painless parser each context;
	Visit ineach;
	Try ctx painless parser try context;
	Do ctx painless parser do context;
	Visit decl;
	Continue ctx painless parser continue context;
	Visit break;
	Visit return;
	Throw ctx painless parser throw context;
	Visit expr;
	Visit trailer;
	Visit block;
	Visit empty;
	Visit initializer;
	Visit  afterthought ctx painless parser afterthought context;
	Visit declaration;
	Visit decltype;
	Visit declvar;
	Visit trap;
	Visit single;
	Visit comp;
	Visit bool;
	Visit conditional;
	Visit assignment;
	Visit binary;
	Visit elvis;
	Visit instanceof;
	Visit pre;
	Visit post;
	Visit read;
	Visit operator;
	Visit cast;
	Visit dynamic;
	Visit static;
	Visit newarray;
	Visit precedence;
	Visit numeric;
	Visit true;
	Visit false;
	Visit null;
	Visit string;
	Visit regex;
	Visit listinit;
	Visit mapinit;
	Visit variable;
	Visit calllocal;
	Visit newobject;
	Visit postfix;
	Visit postdot;
	Visit callinvoke;
	Visit fieldaccess;
	Visit braceaccess;
	Visit newstandardarray;
	Visit newinitializedarray;
	Visit listinitializer;
	Visit mapinitializer;
	Visit maptoken;
	Visit arguments;
	Visit argument;
	Visit lambda;
	Visit lamtype;
	Visit classfuncref;
	Visit constructorfuncref;
	Visit capturingfuncref;
	Visit localfuncref

307.5. Add a class for parser error strategy. It allows to:

	Instantiate parser error strategy;
	Recover recognizer parser;
	Recover inline;
	Handle sync

307.6. Add a class for walker. It allows to:

	Build painless tree;
	Instantiate walker  with script class info, main method reserved, compiler settings, painless lookup, debug stream printer and debug stream printer;
	Build antlr tree;
	Handle setup picky;
	Handle syntax error;
	Get location;
	Handle next lambda;
	Visit source;
	Visit function;
	Visit parameters;
	Visit statement;
	Visit  if ctx if context;
	Get visit while;
	Do ctx do context;
	Visit  for ctx for context;
	Visit ctx each context;
	Visit ineach;
	Visit decl;
	Continue ctx continue context;
	Visit break;
	Visit return;
	Try ctx try context;
	Throw ctx throw context;
	Visit expr;
	Visit trailer;
	Visit block;
	Visit empty;
	Visit initializer;
	Visit  afterthought ctx afterthought context;
	Visit declaration;
	Visit decltype;
	Visit declvar;
	Visit trap;
	Visit single;
	Visit binary;
	Visit comp;
	Visit instanceof;
	Visit bool;
	Visit conditional;
	Visit elvis;
	Visit assignment;
	Visit pre;
	Visit post;
	Visit read;
	Visit operator;
	Visit cast;
	Visit dynamic;
	Visit static;
	Visit newarray;
	Visit precedence;
	Visit numeric;
	Visit true;
	Visit false;
	Visit null;
	Visit string;
	Visit regex;
	Visit listinit;
	Visit mapinit;
	Visit variable;
	Visit calllocal;
	Visit newobject;
	Build postfix chain;
	Visit postfix;
	Visit postdot;
	Visit callinvoke;
	Visit fieldaccess;
	Visit braceaccess;
	Visit newstandardarray;
	Visit newinitializedarray;
	Visit listinitializer;
	Visit mapinitializer;
	Visit maptoken;
	Visit arguments;
	Collect arguments;
	Visit argument;
	Visit lambda;
	Visit lamtype;
	Visit classfuncref;
	Visit constructorfuncref;
	Visit capturingfuncref;
	Visit localfuncref

308. Changes to package org.elasticsearch.painless.api:  

308.1. Add a class for augmentation. It allows to:

	Instantiate augmentation;
	Get length;
	Get named group;
	Any receiver iterable;
	Process augmentation augmentation as collection;
	Process augmentation augmentation as list;
	Get count;
	Each receiver iterable;
	Each receiver iterable with index;
	Every receiver iterable;
	Find results;
	Get group by;
	Join receiver iterable;
	Get sum;
	Collect receiver collection;
	Find receiver collection;
	Find result;
	Get split;
	Collect receiver map;
	Each receiver map;
	Every receiver map;
	Find receiver map;
	Replace receiver char sequence;
	Replace  first receiver char sequence;
	Handle initial buffer for replace with;
	Encode base 64;
	Decode base 64

308.2. Add a class for debug. It allows to:

	Instantiate debug;
	Explain debug

309. Changes to package org.elasticsearch.painless.node:  

309.1. Add a class for a expression. It allows to:

	Instantiate a expression  with location;
	Instantiate a expression  with location, prefix expression and prefix expression;
	Cast locals

309.2. Add a class for a node. It allows to:

	Instantiate a node  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Create error;
	Convert a node to string;
	Handle single line to string;
	Handle single line to string with optional args;
	Handle multiline to string;
	Convert pairwise;
	Join same line collection with name

309.3. Add a class for a statement. It allows to:

	Instantiate a statement  with location

309.4. Add a class for a storeable. It allows to:

	Instantiate a storeable  with location;
	Instantiate a storeable  with location, prefix expression and prefix expression;
	Get access element count;
	Check if a storeable is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Write index flip

309.5. Add a class for e assignment. It allows to:

	Instantiate e assignment  with location, lhs expression, rhs expression, operation and operation;
	Extract variables;
	Analyze locals;
	Analyze LHS;
	Analyze incr decr;
	Analyze compound;
	Analyze simple;
	Write method writer;
	Convert e assignment to string

309.6. Add a class for e binary. It allows to:

	Instantiate e binary  with location, operation, left expression, right expression and right expression;
	Extract variables;
	Analyze locals;
	Analyze mul;
	Analyze div;
	Analyze rem;
	Add variables locals;
	Analyze sub;
	Analyze regex op;
	Analyze LSH;
	Analyze RSH;
	Analyze USH;
	Analyze BW and;
	Analyze xor;
	Analyze BW or;
	Write method writer;
	Convert e binary to string

309.7. Add a class for e bool. It allows to:

	Instantiate e bool  with location, operation, left expression, right expression and right expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e bool to string

309.8. Add a class for e boolean. It allows to:

	Instantiate e boolean  with location;
	Extract variables;
	Analyze locals;
	Write adapter method writer;
	Convert e boolean to string

309.9. Add a class for e call local. It allows to:

	Instantiate e call local  with location, arguments list and arguments list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e call local to string

309.10. Add a class for e capturing function ref. It allows to:

	Instantiate e capturing function ref  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get pointer;
	Get captures;
	Convert e capturing function ref to string

309.11. Add a class for e cast. It allows to:

	Instantiate e cast  with location, child expression, painless cast and painless cast;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e cast to string

309.12. Add a class for e comp. It allows to:

	Instantiate e comp  with location, operation, left expression, right expression and right expression;
	Extract variables;
	Analyze locals;
	Analyze eq;
	Analyze eq R;
	Analyze NE;
	Analyze NER;
	Analyze GTE;
	Analyze GT;
	Analyze LTE;
	Analyze LT;
	Write method writer;
	Convert e comp to string

309.13. Add a class for e conditional. It allows to:

	Instantiate e conditional  with location, condition expression, left expression, right expression and right expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e conditional to string

309.14. Add a class for e constant. It allows to:

	Instantiate e constant  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e constant to string

309.15. Add a class for e decimal. It allows to:

	Instantiate e decimal  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e decimal to string

309.16. Add a class for e elvis. It allows to:

	Instantiate e elvis  with location, lhs expression, rhs expression and rhs expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e elvis to string

309.17. Add a class for e explicit. It allows to:

	Instantiate e explicit  with location, child expression and child expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Cast locals;
	Convert e explicit to string

309.18. Add a class for e function ref. It allows to:

	Instantiate e function ref  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get pointer;
	Get captures;
	Convert e function ref to string

309.19. Add a class for e instanceof. It allows to:

	Instantiate e instanceof  with location, A expression and A expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e instanceof to string

309.20. Add a class for e lambda. It allows to:

	Instantiate e lambda  with function reserved, location, param types list, param names list, statements list and statements list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get pointer;
	Get captures;
	Convert e lambda to string

309.21. Add a class for e list init. It allows to:

	Instantiate e list init  with location, values list and values list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e list init to string

309.22. Add a class for e map init. It allows to:

	Instantiate e map init  with location, keys list, values list and values list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e map init to string

309.23. Add a class for e new array. It allows to:

	Instantiate e new array  with location, arguments list and arguments list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e new array to string

309.24. Add a class for e new obj. It allows to:

	Instantiate e new obj  with location, arguments list and arguments list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e new obj to string

309.25. Add a class for e null. It allows to:

	Instantiate e null  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e null to string

309.26. Add a class for e numeric. It allows to:

	Instantiate e numeric  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e numeric to string

309.27. Add a class for e regex. It allows to:

	Instantiate e regex  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Initialize constant;
	Get flag for char;
	Convert e regex to string

309.28. Add a class for e static. It allows to:

	Instantiate e static  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e static to string

309.29. Add a class for e string. It allows to:

	Instantiate e string  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert e string to string

309.30. Add a class for e unary. It allows to:

	Instantiate e unary  with location, operation, child expression and child expression;
	Extract variables;
	Analyze locals;
	Analyze  not variables locals;
	Analyze BW  not variables locals;
	Handle analyzer add;
	Handle analyzer sub;
	Write method writer;
	Convert e unary to string

309.31. Add a class for e variable. It allows to:

	Instantiate e variable  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get access element count;
	Check if e variable is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Convert e variable to string

309.32. Add an interface declaration  for i lambda. It allows to:

	Get pointer;
	Get captures;
	Get capture count

309.33. Add a class for node to string tests. It allows to:

	Handle test E assignment;
	Handle test E binary;
	Handle test E bool;
	Handle test E boolean;
	Handle test E call local;
	Handle test E capturing function ref;
	Handle test E cast;
	Handle test E comp;
	Handle test E conditional;
	Handle test E constant;
	Handle test E decimal;
	Handle test E elvis;
	Handle test E explicit;
	Handle test E function ref;
	Handle test E instance of;
	Handle test E lambda;
	Handle test E list init;
	Handle test E map init;
	Handle test E new array;
	Handle test E new obj;
	Handle test E null;
	Handle test E numeric;
	Handle test E regex;
	Handle test E static;
	Handle test E string;
	Handle test E unary;
	Handle test E variable;
	Handle test P brace;
	Handle test P call invoke;
	Handle test P field;
	Handle test P sub array length;
	Handle test P sub brace;
	Handle test P sub call invoke;
	Handle test P sub def array;
	Handle test P sub def call;
	Handle test P sub def field;
	Handle test P sub field;
	Handle test P sub list shortcut;
	Handle test P sub map shortcut;
	Handle test P sub shortcut;
	Handle test S break;
	Handle test S continue;
	Handle test S decl block;
	Handle test S do;
	Handle test S each;
	Handle test S for;
	Handle test S if;
	Handle test S if else;
	Handle test S sub each array;
	Handle test S sub each iterable;
	Test S throw;
	Handle test S while;
	Handle test S function;
	Handle test S try and S catch;
	Instantiate node to string tests;
	Assert node to string tests to string;
	Walk node to string tests

309.34. Add a class for p brace. It allows to:

	Instantiate p brace  with location, prefix expression, index expression and index expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Check if p brace is def optimized;
	Update actual;
	Get access element count;
	Handle setup;
	Handle load;
	Handle store;
	Convert p brace to string

309.35. Add a class for p call invoke. It allows to:

	Instantiate p call invoke  with location, prefix expression, arguments list and arguments list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert p call invoke to string

309.36. Add a class for p field. It allows to:

	Instantiate p field  with location, prefix expression and prefix expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Check if p field is def optimized;
	Update actual;
	Get access element count;
	Handle setup;
	Handle load;
	Handle store;
	Convert p field to string

309.37. Add a class for p sub array length. It allows to:

	Instantiate p sub array length  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get access element count;
	Check if p sub array length is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Convert p sub array length to string

309.38. Add a class for p sub brace. It allows to:

	Instantiate p sub brace  with location, clazz class, index expression and index expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get access element count;
	Check if p sub brace is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Convert p sub brace to string

309.39. Add a class for p sub call invoke. It allows to:

	Instantiate p sub call invoke  with location, painless method, box class, arguments list and arguments list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert p sub call invoke to string

309.40. Add a class for p sub def array. It allows to:

	Instantiate p sub def array  with location, index expression and index expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get access element count;
	Check if p sub def array is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Convert p sub def array to string

309.41. Add a class for p sub def call. It allows to:

	Instantiate p sub def call  with location, arguments list and arguments list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert p sub def call to string

309.42. Add a class for p sub def field. It allows to:

	Instantiate p sub def field  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get access element count;
	Check if p sub def field is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Convert p sub def field to string

309.43. Add a class for p sub field. It allows to:

	Instantiate p sub field  with location, painless field and painless field;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get access element count;
	Check if p sub field is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Convert p sub field to string

309.44. Add a class for p sub list shortcut. It allows to:

	Instantiate p sub list shortcut  with location, target class, index expression and index expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get access element count;
	Check if p sub list shortcut is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Convert p sub list shortcut to string

309.45. Add a class for p sub map shortcut. It allows to:

	Instantiate p sub map shortcut  with location, target class, index expression and index expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get access element count;
	Check if p sub map shortcut is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Convert p sub map shortcut to string

309.46. Add a class for p sub null safe call invoke. It allows to:

	Instantiate p sub null safe call invoke  with location, guarded expression and guarded expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert p sub null safe call invoke to string

309.47. Add a class for p sub null safe field. It allows to:

	Instantiate p sub null safe field  with location, guarded storeable and guarded storeable;
	Extract variables;
	Analyze locals;
	Get access element count;
	Check if p sub null safe field is def optimized;
	Update actual;
	Write method writer;
	Handle setup;
	Handle load;
	Handle store;
	Convert p sub null safe field to string

309.48. Add a class for p sub shortcut. It allows to:

	Instantiate p sub shortcut  with location, getter painless method, setter painless method and setter painless method;
	Extract variables;
	Analyze locals;
	Write method writer;
	Get access element count;
	Check if p sub shortcut is def optimized;
	Update actual;
	Handle setup;
	Handle load;
	Handle store;
	Convert p sub shortcut to string

309.49. Add a class for s block. It allows to:

	Instantiate s block  with location, statements list and statements list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s block to string

309.50. Add a class for s break. It allows to:

	Instantiate s break  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s break to string

309.51. Add a class for s catch. It allows to:

	Instantiate s catch  with location, S block and S block;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s catch to string

309.52. Add a class for s continue. It allows to:

	Instantiate s continue  with location;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s continue to string

309.53. Add a class for s decl block. It allows to:

	Instantiate s decl block  with location, declarations list and declarations list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s decl block to string

309.54. Add a class for s declaration. It allows to:

	Instantiate s declaration  with location, A expression and A expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s declaration to string

309.55. Add a class for s do. It allows to:

	Instantiate s do  with location, S block, condition expression and condition expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s do to string

309.56. Add a class for s each. It allows to:

	Instantiate s each  with location, A expression, S block and S block;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s each to string

309.57. Add a class for s expression. It allows to:

	Instantiate s expression  with location, A expression and A expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s expression to string

309.58. Add a class for s for. It allows to:

	Instantiate s for  with location, initializer node, condition expression, afterthought expression, S block and S block;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s for to string

309.59. Add a class for s if. It allows to:

	Instantiate s if  with location, condition expression, ifblock block and ifblock block;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s if to string

309.60. Add a class for s if else. It allows to:

	Instantiate s if else  with location, condition expression, ifblock block, elseblock block and elseblock block;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s if else to string

309.61. Add a class for s return. It allows to:

	Instantiate s return  with location, A expression and A expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s return to string

309.62. Add a class for s sub each array. It allows to:

	Instantiate s sub each array  with location, variable, A expression, S block and S block;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s sub each array to string

309.63. Add a class for s sub each iterable. It allows to:

	Instantiate s sub each iterable  with location, variable, A expression, S block and S block;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s sub each iterable to string

309.64. Add a class for s throw. It allows to:

	Instantiate s throw  with location, A expression and A expression;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s throw to string

309.65. Add a class for s try. It allows to:

	Instantiate s try  with location, S block, catches list and catches list;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s try to string

309.66. Add a class for s while. It allows to:

	Instantiate s while  with location, condition expression, S block and S block;
	Extract variables;
	Analyze locals;
	Write method writer;
	Convert s while to string

310. Changes to package org.elasticsearch.painless.spi:  

310.1. Add an interface declaration  for painless extension. It allows to:

	Get context whitelists

310.2. Add a class for whitelist. It allows to:

	Instantiate whitelist  with class loader, whitelist classes, whitelist imported methods, whitelist class bindings, whitelist instance bindings and whitelist instance bindings

310.3. Add an object creator class for whitelist loader. It allows to:

	Get load from resource files;
	Instantiate whitelist loader

311. Changes to package org.elasticsearch.percolator:  

311.1. Add a class for percolate query builder. It allows to:

	Instantiate percolate query builder  with document bytes reference;
	Instantiate percolate query builder  with document bytes reference, document X content type and document X content type;
	Instantiate percolate query builder  with documents list, document X content type and document X content type;
	Instantiate percolate query builder  with document supplier;
	Instantiate percolate query builder;
	Instantiate percolate query builder  with stream input;
	Set name;
	Do write  to stream output;
	Do X content;
	Process percolate query builder percolate query builder from X content;
	Equals other percolate query builder;
	Do hash code;
	Get writeable name;
	Rewrite query rewrite context;
	Do query shard context to query;
	Get field;
	Get document type;
	Get documents;
	Get X content type;
	Create multi document searcher;
	Create store;
	Wrap query shard context;
	Handle bitset filter;
	Get mapped field type for field

311.2. Add a class for percolate query builder tests. It allows to:

	Get plugins;
	Initialize additional mappings;
	Do create test query builder;
	Get shuffle protected fields;
	Get get request;
	Do assert lucene query;
	Handle test must rewrite;
	Handle test indexed document does not exist;
	Get objects holding arbitrary content;
	Handle test required parameters;
	Handle test from json no document type;
	Handle test from json with document type;
	Handle test from json no type;
	Handle test from json with type;
	Test both document and documents specified;
	Handle random source;
	Check if percolate query builder tests is cacheable;
	Handle builder generates cacheable queries;
	Handle test serialization fails unless fetched;
	Handle test field alias

311.3. Add a class for percolate query tests. It allows to:

	Handle init;
	Destroy percolate query tests;
	Handle test percolate query

311.4. Add a class for percolator client yaml test suite IT. It allows to:

	Instantiate percolator client yaml test suite IT  with client yaml test candidate;
	Get parameters

311.5. Add a class for percolator highlight sub fetch phase. It allows to:

	Instantiate percolator highlight sub fetch phase  with highlighters map;
	Handle hits execution needed;
	Handle hits execute;
	Locate percolator query;
	Create sub search context

311.6. Add a class for percolator highlight sub fetch phase tests. It allows to:

	Handle test hits execution needed;
	Handle test locate percolator query

311.7. Add a class for percolator matched slot sub fetch phase. It allows to:

	Handle hits execute;
	Handle inner hits execute;
	Convert top docs  to slots;
	Build root docs slots

311.8. Add a class for percolator matched slot sub fetch phase tests. It allows to:

	Handle test hits execute;
	Convert test convert top docs;

311.9. Add a class for percolator plugin. It allows to:

	Get queries;
	Get fetch sub phases;
	Get settings;
	Get mappers

311.10. Add a class for percolator query search IT. It allows to:

	Handle test percolator query;
	Handle test percolator range queries;
	Handle test percolator geo queries;
	Handle test percolator query existing document;
	Handle test percolator query existing document source disabled;
	Handle test percolator specific queries;
	Handle test percolator query with highlighting;
	Handle test take position offset gap into account;
	Test many percolator fields;
	Handle test with multiple percolator fields;
	Handle test percolate query with nested documents;
	Handle test percolator query via multi search

311.11. Add a class for query analyzer tests. It allows to:

	Handle test extract query metadata term query;
	Handle test extract query metadata terms query;
	Handle test extract query metadata phrase query;
	Handle test extract query metadata multi phrase query;
	Handle test extract query metadata multi phrase query pre 6 dot 1;
	Handle test extract query metadata multi phrase query dups;
	Handle test extract query metadata boolean query;
	Handle test extract query metadata boolean query pre 6 dot 1;
	Handle test extract query metadata boolean query msm;
	Handle test extract query metadata boolean query msm pre 6 dot 1;
	Handle test extract query metadata boolean query only should;
	Handle test extract query metadata boolean query with must not;
	Handle test exact match boolean query;
	Handle test boolean query with must and should clauses;
	Handle test extract query metadata constant score query;
	Handle test extract query metadata boost query;
	Handle test extract query metadata common terms query;
	Handle test extract query metadata blended term query;
	Handle test extract query metadata span term query;
	Handle test extract query metadata span near query;
	Handle test extract query metadata span near query pre 6 dot 1;
	Handle test extract query metadata span or query;
	Handle test extract query metadata span first query;
	Handle test extract query metadata span not query;
	Handle test extract query metadata match no docs query;
	Handle test extract query metadata match all docs query;
	Handle test extract query metadata unsupported query;
	Handle test extract query metadata unsupported query in bool query with must clauses;
	Handle test extract query metadata disjunction max query;
	Handle test synonym query;
	Handle test function score query;
	Handle test function score query with match all;
	Handle test select best result;
	Handle testselect best result random;
	Handle test point range query;
	Handle test too many point dimensions;
	Handle test point range query lower upper reversed;
	Handle test index or doc values query;
	Convert test;
	Handle test point range query select shortest range;
	Handle test point range query select ranges;
	Handle test extract query metadata duplicated clauses;
	Handle test empty queries;
	Assert dimension;
	Assert terms equal;
	Get terms

311.12. Add an object creator class for query builder store tests. It allows to:

	Handle writable registry;
	X content registry;
	Handle test storing query builders

312. Changes to package org.elasticsearch.persistent:  

312.1. Add a class for allocated persistent task. It allows to:

	Instantiate allocated persistent task  with parent task id, headers map and headers map;
	Should cancel children  on cancellation;
	Cancel allocated persistent task on parent leaving;
	Get status;
	Update persistent task state;
	Get persistent task id;
	Handle init;
	Get failure;
	Get allocation id;
	Wait predicate for persistent task;
	Check if allocated persistent task is completed;
	Handle mark as canceled;
	Handle mark as completed;
	Handle mark as failed;
	Complete and notify  if needed;
	Process  on response;
	Process  on failure

312.2. Add an object creator class for cancel persistent task request tests. It allows to:

	Create test instance;
	Create blank instance

312.3. Add a class for node persistent tasks executor. It allows to:

	Instantiate node persistent tasks executor  with thread pool;
	Execute task;
	Process  on failure;
	Run

312.4. Add an interface declaration  for persistent task params

312.5. Add a class for persistent task response. It allows to:

	Instantiate persistent task response;
	Instantiate persistent task response  with persistent task;
	Read  from stream input;
	Write  to stream output;
	Get task;
	Check if persistent task response equals;
	Hash code

312.6. Add a class for persistent tasks cluster service tests. It allows to:

	Set up thread pool;
	Set persistent tasks cluster service tests;
	Tear down thread pool;
	Tear persistent tasks cluster service tests;
	Handle test reassignment required;
	Handle test reassignment required on metadata changes;
	Handle test reassign tasks with no tasks;
	Handle test reassign considers cluster state updates;
	Handle test non cluster state condition assignment;
	Handle test reassign tasks;
	Handle test persistent tasks changed no tasks;
	Handle test persistent tasks changed task added;
	Handle test persistent tasks changed task removed;
	Handle test persistent tasks assigned;
	Handle test needs reassignment;
	Handle test periodic recheck;
	Handle test unassign task;
	Handle test unassign non existent task;
	Create recheck test cluster service;
	Add test nodes;
	Reassign cluster state;
	Assign cluster state only one task at A time;
	Assign based  on non cluster state condition;
	Handle random node assignment;
	Dump event;
	Handle significant change;
	Remove tasks  with changing assignment;
	Handle insignificant change;
	Check if persistent tasks cluster service tests has assignable tasks;
	Check if persistent tasks cluster service tests has tasks assigned to;
	Add random task;
	Add task;
	Handle new node;
	Handle initial state;
	Change routing table;
	Create service;
	Get assignment;
	Handle node operation

312.7. Add a class for persistent tasks custom meta data tests. It allows to:

	Create test instance;
	Get instance reader;
	Get named writeable registry;
	Make test changes;
	Diff reader;
	Do parse instance;
	Add random task;
	Pick random task;
	X content registry;
	Handle test serialization context;
	Handle test builder;
	Handle test min version serialization;
	Handle test feature serialization;
	Handle test disassociate dead nodes given no persistent tasks;
	Handle test disassociate dead nodes given assigned persistent task;
	Handle test disassociate dead nodes;
	Handle empty task params;
	Convert to X content;
	Write  to stream output;
	Get writeable name;
	Get minimal supported version;
	Handle random assignment

312.8. Add a class for persistent tasks executor. It allows to:

	Instantiate persistent tasks executor;
	Get task name;
	Get assignment;
	Handle select least loaded node;
	Validate params;
	Create task;
	Get description;
	Handle node operation;
	Get executor

312.9. Add a class for persistent tasks executor full restart IT. It allows to:

	Handle node plugins;
	Transport client plugins;
	Ignore external cluster;
	Handle test full cluster restart

312.10. Add a class for persistent tasks executor registry. It allows to:

	Instantiate persistent tasks executor registry  with task executors collection;
	Get persistent task executor safe

312.11. Add an object creator class for persistent tasks executor response tests. It allows to:

	Create test instance;
	Create blank instance;
	Get named writeable registry

312.12. Add a class for persistent tasks node service status tests. It allows to:

	Create test instance;
	Get instance reader;
	Convert test

312.13. Add an object creator class for restart persistent task request tests. It allows to:

	Create test instance;
	Create blank instance

312.14. Add an object creator class for start persistent action request tests. It allows to:

	Create test instance;
	Create blank instance;
	Get named writeable registry

312.15. Add an object creator class for update persistent task request tests. It allows to:

	Create test instance;
	Create blank instance;
	Get named writeable registry

313. Changes to package org.elasticsearch.plugin.analysis:  

313.1. Add a class for analysis phonetic plugin. It allows to:

	Get token filters

314. Changes to package org.elasticsearch.plugin.analysis.icu:  

314.1. Add a class for analysis ICU plugin. It allows to:

	Get char filters;
	Get token filters;
	Get analyzers;
	Get tokenizers;
	Get mappers;
	Get named writeables

315. Changes to package org.elasticsearch.plugin.analysis.kuromoji:  

315.1. Add a class for analysis kuromoji plugin. It allows to:

	Get char filters;
	Get token filters;
	Get tokenizers;
	Get analyzers

316. Changes to package org.elasticsearch.plugin.analysis.smartcn:  

316.1. Add a class for analysis smart chinese plugin. It allows to:

	Get token filters;
	Get tokenizers;
	Get analyzers

317. Changes to package org.elasticsearch.plugin.analysis.stempel:  

317.1. Add a class for analysis stempel plugin. It allows to:

	Get token filters;
	Get analyzers

318. Changes to package org.elasticsearch.plugin.analysis.ukrainian:  

318.1. Add a class for analysis ukrainian plugin. It allows to:

	Get analyzers

319. Changes to package org.elasticsearch.plugin.discovery.azure.classic:  

319.1. Add a class for azure discovery plugin. It allows to:

	Instantiate azure discovery plugin  with settings;
	Create compute service;
	Get seed host providers;
	Create seed hosts provider;
	Get settings

320. Changes to package org.elasticsearch.plugin.discovery.gce:  

320.1. Add a class for gce discovery plugin. It allows to:

	Instantiate gce discovery plugin  with settings;
	Create gce instances service;
	Get seed host providers;
	Get custom name resolver;
	Get settings;
	Close gce discovery plugin

321. Changes to package org.elasticsearch.plugin.mapper:  

321.1. Add a class for mapper murmur 3 plugin. It allows to:

	Get mappers

321.2. Add a class for mapper size plugin. It allows to:

	Get metadata mappers

322. Changes to package org.elasticsearch.plugin.noop:  

322.1. Add a class for noop plugin. It allows to:

	Get actions;
	Get rest handlers

323. Changes to package org.elasticsearch.plugin.noop.action.bulk:  

323.1. Add an object creator class for noop bulk action. It allows to:

	Instantiate noop bulk action;
	Handle new response

323.2. Add a class for transport noop bulk action. It allows to:

	Instantiate transport noop bulk action  with transport service, action filters and action filters;
	Execute task

324. Changes to package org.elasticsearch.plugin.noop.action.search:  

324.1. Add an object creator class for noop search action. It allows to:

	Instantiate noop search action;
	Handle new response

324.2. Add a class for rest noop search action. It allows to:

	Instantiate rest noop search action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

324.3. Add a class for transport noop search action. It allows to:

	Instantiate transport noop search action  with transport service, action filters and action filters;
	Execute task

325. Changes to package org.elasticsearch.plugin.repository.url:  

325.1. Add a class for uRL repository plugin. It allows to:

	Get settings;
	Get repositories

326. Changes to package org.elasticsearch.plugin.store.smb:  

326.1. Add a class for sMB store plugin. It allows to:

	Get index store factories

327. Changes to package org.elasticsearch.plugins:  

327.1. Add an interface declaration  for analysis plugin. It allows to:

	Get char filters;
	Get token filters;
	Get tokenizers;
	Get analyzers;
	Get pre built analyzer provider factories;
	Get pre configured char filters;
	Get pre configured token filters;
	Get pre configured tokenizers;
	Get hunspell dictionaries;
	Check if analysis plugin requires analysis settings;
	Get index settings;
	Check if  requires analysis settings

327.2. Add an interface declaration  for cluster plugin. It allows to:

	Create allocation deciders;
	Get shards allocators;
	Handle on node started

327.3. Add an interface declaration  for discovery plugin. It allows to:

	Get custom name resolver;
	Get seed host providers;
	Get join validator

327.4. Add a class for extended plugins class loader. It allows to:

	Instantiate extended plugins class loader  with parent class loader, extended loaders list and extended loaders list;
	Find class;
	Create parent class loader

327.5. Add an interface declaration  for extensible plugin. It allows to:

	Reload SPI

327.6. Add an interface declaration  for ingest plugin. It allows to:

	Get processors

327.7. Add a class for install plugin command tests. It allows to:

	Instantiate install plugin command tests  with fs file system, temp function and temp function;
	Handle test if fips mode;
	Set install plugin command tests;
	Handle jar hell check;
	Tear install plugin command tests;
	Get parameters;
	Convert install plugin command tests to posix;
	Create env;
	Create plugin dir;
	Write jar;
	Write zip;
	Visit file;
	Create plugin url;
	Write plugin;
	Write plugin security policy;
	Create plugin;
	Install plugin;
	Assert plugin;
	Assert plugin internal;
	Assert config and bin;
	Assert environment;
	Handle test missing plugin id;
	Handle test something works;
	Handle test install fails if previously removed plugin failed;
	Handle test space in url;
	Handle test malformed url not maven;
	Handle test file not maven;
	Handle test unknown plugin;
	Handle test plugins dir read only;
	Handle test builtin module;
	Handle test builtin xpack module;
	Handle test jar hell;
	Handle test isolated plugins;
	Test existing plugin;
	Handle test bin;
	Handle test bin not dir;
	Handle test bin contains dir;
	Handle test bin conflict;
	Handle test bin permissions;
	Handle test plugin permissions;
	Assert path;
	Handle test config;
	Test existing config;
	Handle test config not dir;
	Handle test config contains dir;
	Handle test missing descriptor;
	Handle test contains intermediate directory;
	Handle test zip relative outside entry name;
	Handle test official plugins help sorted and missing obviously wrong plugins;
	Add shutdown hook;
	Handle test install X pack;
	Run install X pack test;
	Build flavor;
	Handle test install misspelled official plugins;
	Handle test batch flag;
	Handle test quiet flag disabled;
	Handle test quiet flag enabled;
	Handle test plugin already installed;
	Assert install plugin  from url;
	Handle download zip;
	Handle open url;
	Verify signature;
	Plugin zip input stream;
	Get public key id;
	Get public key;
	Handle url exists;
	Get staging hash;
	Check if  is snapshot;
	Handle test official plugin;
	Handle test official plugin snapshot;
	Handle test install release build of plugin on snapshot build;
	Handle test official plugin staging;
	Handle test official platform plugin;
	Handle test official platform plugin snapshot;
	Handle test official platform plugin staging;
	Handle test maven plugin;
	Handle test maven platform plugin;
	Handle test maven sha 1 backcompat;
	Handle test official sha missing;
	Handle test maven sha missing;
	Handle test invalid sha file missing filename;
	Handle test invalid sha file mismatch filename;
	Handle test invalid sha file containing extra line;
	Handle test sha 512 mismatch;
	Handle test sha 1 mismatch;
	Test public key id mismatch  to expected public key id;
	Handle test failed signature verification;
	Handle new secret key;
	Get checksum;
	Get checksum and filename;
	Get checksum and string;
	Get signature;
	Assert policy confirmation;
	Handle test policy confirmation;
	Handle test plugin with native controller

327.8. Add a class for list plugins command. It allows to:

	Instantiate list plugins command;
	Execute terminal;
	Print plugin

327.9. Add a class for list plugins command tests. It allows to:

	Set list plugins command tests;
	Get list plugins;
	Create env;
	Add shutdown hook;
	Build multiline;
	Build fake plugin;
	Handle test plugins dir missing;
	Handle test no plugins;
	Handle test one plugin;
	Test two plugins;
	Handle test plugin with verbose;
	Handle test plugin with native controller;
	Handle test plugin with verbose multiple plugins;
	Handle test plugin without verbose multiple plugins;
	Handle test plugin without descriptor file;
	Handle test plugin with wrong descriptor file;
	Test existing incompatible plugin

327.10. Add an interface declaration  for mapper plugin. It allows to:

	Get mappers;
	Get metadata mappers;
	Get field filter

327.11. Add a class for meta data upgrader. It allows to:

	Instantiate meta data upgrader  with custom meta data upgraders collection, index template meta data upgraders collection and index template meta data upgraders collection

327.12. Add an interface declaration  for network plugin. It allows to:

	Get transport interceptors;
	Get transports;
	Get http transports

327.13. Add an interface declaration  for persistent task plugin. It allows to:

	Get persistent tasks executor

327.14. Add a class for platforms. It allows to:

	Instantiate platforms;
	Handle native controller path;
	Get platform name

327.15. Add a class for plugin. It allows to:

	Get feature;
	Create guice modules;
	Get guice service classes;
	Create components;
	Handle additional settings;
	Get named writeables;
	Get named X content;
	Process plugin plugin on index module;
	Get settings;
	Get settings filter;
	Get setting upgraders;
	Get custom meta data upgrader;
	Get index template meta data upgrader;
	Get index meta data upgrader;
	Get executor builders;
	Get bootstrap checks;
	Close plugin

327.16. Add a class for plugin cli. It allows to:

	Instantiate plugin cli;
	Handle main;
	Close plugin cli

327.17. Add a class for plugin info. It allows to:

	Instantiate plugin info  with elasticsearch version, extended plugins list and extended plugins list;
	Instantiate plugin info  with stream input;
	Write  to stream output;
	Read path from properties;
	Get name;
	Get description;
	Get classname;
	Get extended plugins;
	Get version;
	Get elasticsearch version;
	Get java version;
	Check if plugin info has native controller;
	Convert plugin info to X content;
	Check if plugin info equals;
	Hash code;
	Convert plugin info to string;

327.18. Add a class for plugin info tests. It allows to:

	Handle test read from properties;
	Handle test read from properties name missing;
	Handle test read from properties description missing;
	Handle test read from properties version missing;
	Handle test read from properties elasticsearch version missing;
	Handle test read from properties java version missing;
	Handle test read from properties bad java version format;
	Handle test read from properties bogus elasticsearch version;
	Handle test read from properties jvm missing classname;
	Handle test extended plugins single extension;
	Handle test extended plugins multiple extensions;
	Handle test extended plugins empty;
	Handle test serialize;
	Handle test plugin list sorted;
	Handle test unknown properties

327.19. Add a class for plugin loader indirection. It allows to:

	Create loader

327.20. Add a class for plugin security. It allows to:

	Confirm policy exceptions;
	Prompt terminal;
	Get format permission;
	Parse permissions

327.21. Add a class for plugin security tests. It allows to:

	Handle test parse permissions;
	Handle test parse two permissions;
	Handle test format simple permission;
	Handle test format unresolved permission

327.22. Add a class for plugin test util. It allows to:

	Write plugin properties;
	Write properties

327.23. Add a class for plugins tests. It allows to:

	Handle test make platform name;
	Handle test make specific platform names

327.24. Add a class for progress input stream. It allows to:

	Instantiate progress input stream  with is input stream;
	Read progress input stream;
	Check progress;
	Process progress input stream progress input stream on progress

327.25. Add a class for progress input stream tests. It allows to:

	Handle test that progress listener is called;
	Handle test that progress listener is called on unexpected completion;
	Handle test that progress listener returns max value on wrong expected size;
	Handle test one byte;
	Handle test odd bytes;
	Handle test even bytes;
	Handle test on progress can not be called more than once per percent;
	Handle new progress input stream;
	Process  on progress

327.26. Add a class for remove plugin command. It allows to:

	Instantiate remove plugin command;
	Execute terminal;

327.27. Add an interface declaration  for repository plugin. It allows to:

	Get repositories;
	Get internal repositories

327.28. Add an interface declaration  for script plugin. It allows to:

	Get script engine;
	Get contexts

328. Changes to package org.elasticsearch.plugins.spi:  

328.1. Add an interface declaration  for named X content provider. It allows to:

	Get named X content parsers

329. Changes to package org.elasticsearch.qa.die_with_dignity:  

329.1. Add a class for die with dignity IT. It allows to:

	Handle test die with dignity;
	Check if die with dignity IT is warn exception received;
	Debug logs;
	Check if die with dignity IT is fatal error in thread exiting;
	Check if die with dignity IT is fatal error;
	Preserve cluster  upon completion

330. Changes to package org.elasticsearch.qa.verify_version_constants:  

330.1. Add a class for verify version constants IT. It allows to:

	Handle test lucene version constant;
	Preserve cluster  upon completion

331. Changes to package org.elasticsearch.recovery:  

331.1. Add a class for full rolling restart IT. It allows to:

	Assert timeout;
	Get number of replicas;
	Handle test full rolling restart;
	Handle test no rebalance on rolling restart

331.2. Add a class for recoveries collection tests. It allows to:

	Handle on recovery done;
	Process  on recovery failure;
	Handle test last access time update;
	Handle test recovery timeout;
	Handle test recovery cancellation;
	Handle test reset recovery;
	Start recovery;

331.3. Add a class for simple recovery IT. It allows to:

	Get index settings;
	Get recovery settings;
	Handle maximum number of replicas;
	Handle test simple recovery;
	Get source

331.4. Add a class for truncated recovery IT. It allows to:

	Handle node plugins;
	Handle test cancel recovery and resume

332. Changes to package org.elasticsearch.repositories:  

332.1. Add a class for eS blob store container test case. It allows to:

	Handle test read non existing path;
	Handle test write read;
	Handle test list;
	Handle test delete blob;
	Handle test delete blobs;
	Handle test delete blob ignoring if not exists;
	Handle test verify overwrite fails;
	Write blob;
	Handle new blob store

332.2. Add a class for eS blob store test case. It allows to:

	Handle test container creation and deletion;
	Write random blob;
	Read blob  fully blob container;
	Handle random bytes;
	Write blob;
	Handle new blob store

332.3. Add a class for index id. It allows to:

	Instantiate index id;
	Instantiate index id  with stream input;
	Get name;
	Get id;
	Convert index id to string;
	Check if index id equals;
	Hash code;
	Compute hash code;
	Write  to stream output;
	Convert index id to X content

332.4. Add a class for index id tests. It allows to:

	Handle test equals and hash code;
	Handle test serialization;
	Handle test X content

332.5. Add a class for repositories module. It allows to:

	Instantiate repositories module  with environment, repo plugins list, transport service, cluster service, thread pool, named X content registry and named X content registry;
	Configure repositories module

332.6. Add a class for repositories service. It allows to:

	Instantiate repositories service  with settings, cluster service, transport service, types registry map, internal types registry map, thread pool and thread pool;
	Register repository;
	Handle new response;
	Execute current state;
	Process  on failure;
	Ack discovery node;
	Handle unregister repository;
	Verify repository;
	Apply cluster state;
	Get repository;
	Register internal repository;
	Handle unregister internal repository;
	Close repository;
	Create repository;
	Ensure repository  not in use

332.7. Add a class for repository data. It allows to:

	Instantiate repository data  with snapshot ids map, snapshot states map, index snapshots map, incompatible snapshot ids list and incompatible snapshot ids list;
	Get copy;
	Get gen id;
	Get snapshot ids;
	Get incompatible snapshot ids;
	Get all snapshot ids;
	Get snapshot state;
	Get indices;
	Add snapshot;
	Remove snapshot;
	Get snapshots;
	Check if repository data equals;
	Hash code;
	Resolve index id;
	Resolve indices;
	Resolve new indices;
	Convert snapshots;
	Get snapshots from X content;
	Handle incompatible snapshots to X content;
	Handle incompatible snapshots from X content

332.8. Add a class for repository data tests. It allows to:

	Handle test equals and hash code;
	Handle test X content;
	Handle test add snapshots;
	Handle test init indices;
	Handle test remove snapshot;
	Handle test resolve index id;
	Handle test get snapshot state;
	Handle test index that references an unknown snapshot;
	Handle test index that reference A null snapshot;
	Generate random repo data;
	Handle random indices

332.9. Add a class for repository exception. It allows to:

	Instantiate repository exception;
	Instantiate repository exception  with cause throwable;
	Get repository;
	Instantiate repository exception  with stream input;
	Write  to stream output

332.10. Add a class for repository missing exception. It allows to:

	Instantiate repository missing exception;
	Get status;
	Instantiate repository missing exception  with stream input

332.11. Add a class for repository verification exception. It allows to:

	Instantiate repository verification exception;
	Instantiate repository verification exception  with throwable;
	Get status;
	Instantiate repository verification exception  with stream input

332.12. Add a class for verification failure. It allows to:

	Instantiate verification failure;
	Instantiate verification failure  with cause exception;
	Node id;
	Cause verification failure;
	Read  from stream input;
	Write  to stream output;
	Read node;
	Convert verification failure to string

333. Changes to package org.elasticsearch.repositories.azure:  

333.1. Add a class for azure blob container. It allows to:

	Instantiate azure blob container  with blob path, azure blob store and azure blob store;
	Handle blob exists;
	Read blob;
	Write blob;
	Write blob atomic;
	Delete blob;
	Get list blobs by prefix;
	Get list blobs;
	Build key

333.2. Add a class for azure blob store. It allows to:

	Instantiate azure blob store  with metadata data, azure storage service and azure storage service;
	Convert azure blob store to string;
	Get location mode;
	Get client name;
	Blob container;
	Delete blob path;
	Close azure blob store;
	Handle container exist;
	Handle blob exists;
	Delete blob;
	Get input stream;
	Get list blobs by prefix;
	Write blob

333.3. Add an object creator class for azure blob store container tests. It allows to:

	Handle new blob store

333.4. Add a class for azure repository plugin. It allows to:

	Instantiate azure repository plugin  with settings;
	Get repositories;
	Get settings;
	Reload settings

333.5. Add a class for azure repository settings tests. It allows to:

	Handle azure repository;
	Handle test readonly default;
	Handle test readonly default and readonly on;
	Handle test readonly with primary only;
	Handle test readonly with primary only and readonly on;
	Handle test readonly with secondary only and readonly on;
	Handle test readonly with secondary only and readonly off;
	Handle test readonly with primary and secondary only and readonly on;
	Handle test readonly with primary and secondary only and readonly off;
	Handle test chunk size

333.6. Add a class for azure storage service. It allows to:

	Instantiate azure storage service  with settings;
	Get client;
	Build client;
	Create client;
	Build operation context;
	Refresh and clear cache;
	Check if azure storage service does container exist;
	Delete files;
	Blob name  from uri;
	Handle blob exists;
	Delete blob;
	Get input stream;
	Get list blobs by prefix;
	Write blob;
	Give socket permissions  to stream;
	Read;

333.7. Add a class for azure storage service tests. It allows to:

	Handle test read secured settings;
	Plugin settings with settings validation;
	Get storage service with settings validation;
	Handle test create client with endpoint suffix;
	Handle test reinit client settings;
	Handle test reinit client empty settings;
	Handle test reinit client wrong settings;
	Handle test get selected client non existing;
	Handle test get selected client default timeout;
	Handle test get selected client no timeout;
	Handle test get selected client backoff policy;
	Handle test get selected client backoff policy nb retries;
	Handle test no proxy;
	Handle test proxy http;
	Handle test multiple proxies;
	Handle test proxy socks;
	Handle test proxy no host;
	Handle test proxy no port;
	Handle test proxy no type;
	Handle test proxy wrong host;
	Handle test blob name from uri;
	Build secure settings;
	Build settings;
	Encode key

333.8. Add a class for azure storage settings. It allows to:

	Instantiate azure storage settings  with timeout value, proxy, location mode and location mode;
	Instantiate azure storage settings  with timeout value, proxy type, proxy port integer and proxy port integer;
	Get key;
	Get account;
	Get endpoint suffix;
	Get timeout;
	Get azure storage settings;
	Get proxy;
	Build connection string;
	Get location mode;
	Convert azure storage settings to string;
	Get load;
	Get client settings;
	Get config value;
	Get value;
	Override location mode

333.9. Add a class for repository azure client yaml test suite IT. It allows to:

	Instantiate repository azure client yaml test suite IT  with client yaml test candidate;
	Get parameters

334. Changes to package org.elasticsearch.repositories.blobstore:  

334.1. Add a class for blob store format. It allows to:

	Instantiate blob store format  with reader checked function, named X content registry and named X content registry;
	Read blob;
	Read blob container;
	Delete blob container;
	Check if blob store format exists;
	Blob name;
	Read bytes reference

334.2. Add a class for blob store repository restore tests. It allows to:

	Handle test restore snapshot with existing files;
	Handle test snapshot with conflicting name;
	Create repository;
	Assert snapshot or generic thread;
	Create environment

334.3. Add a class for checksum blob store format. It allows to:

	Instantiate checksum blob store format  with reader checked function, named X content registry, X content type and X content type;
	Instantiate checksum blob store format  with reader checked function, named X content registry and named X content registry;
	Read blob;
	Write atomic;
	Write obj;
	Write  to obj;
	Close;

334.4. Add a class for eS blob store repository integ test case. It allows to:

	Create test repository;
	Process eS blob store repository integ test case eS blob store repository integ test case after creation check;
	Create and check test repository;
	Handle test snapshot and restore;
	Handle test multiple snapshot and rollback;
	Handle test indices deleted from repository;
	Handle test retention leases cleared on restore;
	Add random documents;
	Generate random names;
	Assert successful snapshot;
	Assert successful restore;
	Handle random ascii name

335. Changes to package org.elasticsearch.repositories.fs:  

335.1. Add a class for fs repository. It allows to:

	Instantiate fs repository  with metadata data, environment, named X content registry, thread pool and thread pool;
	Create blob store;
	Get chunk size;
	Handle base path

336. Changes to package org.elasticsearch.repositories.gcs:  

336.1. Add a class for google cloud storage blob container. It allows to:

	Instantiate google cloud storage blob container  with blob path, google cloud storage blob store and google cloud storage blob store;
	Handle blob exists;
	Get list blobs;
	Get list blobs by prefix;
	Read blob;
	Write blob;
	Write blob atomic;
	Delete blob;
	Build key

336.2. Add a class for google cloud storage blob store. It allows to:

	Instantiate google cloud storage blob store  with google cloud storage service;
	Get client;
	Blob container;
	Delete blob path;
	Close google cloud storage blob store;
	Check if google cloud storage blob store does bucket exist;
	Get list blobs;
	Get list blobs by prefix;
	Handle blob exists;
	Read blob;
	Read dst byte buffer;
	Check if  is open;
	Close;
	Write blob;
	Write blob resumable;
	Write src byte buffer;
	Write blob multipart;
	Delete blob;
	Delete blobs  by prefix;
	Delete blobs;
	Build key

336.3. Add an object creator class for google cloud storage blob store container tests. It allows to:

	Handle new blob store

336.4. Add an object creator class for google cloud storage blob store tests. It allows to:

	Handle new blob store

336.5. Add a class for google cloud storage client settings. It allows to:

	Instantiate google cloud storage client settings  with service account credentials, connect timeout value, read timeout value, token uri and token uri;
	Get credential;
	Get host;
	Get project id;
	Get connect timeout;
	Get read timeout;
	Get application name;
	Get token uri;
	Get load;
	Get client settings;
	Load credential;
	Get config value

336.6. Add a class for google cloud storage client settings tests. It allows to:

	Handle test load with empty settings;
	Handle test load;
	Handle test load credential;
	Convert test project id defaults;
	Handle random clients;
	Handle random client;
	Handle random credential;
	Handle random timeout;
	Assert google credential

336.7. Add a class for google cloud storage plugin. It allows to:

	Instantiate google cloud storage plugin  with settings;
	Create storage service;
	Get repositories;
	Get settings;
	Reload settings

336.8. Add a class for google cloud storage repository. It allows to:

	Instantiate google cloud storage repository  with metadata data, environment, named X content registry, google cloud storage service, thread pool and thread pool;
	Create blob store;
	Handle base path;
	Get chunk size;
	Setting setting

336.9. Add a class for google cloud storage service. It allows to:

	Refresh and clear cache;
	Get client;
	Create client;
	Create http transport;
	Handle open connection;
	Convert google cloud storage service to timeout

336.10. Add a class for google cloud storage service tests. It allows to:

	Handle test client initializer;
	Handle test reinit client settings;
	Get service account file content;
	Convert test

336.11. Add a class for mock storage. It allows to:

	Instantiate mock storage  with blobs concurrent map;
	Get options;
	Lock retention policy;
	Get blob id;
	Delete blob id;
	Delete blob ids iterable;
	Create blob info;
	Get list;
	Check if  has next page;
	Get next page token;
	Get next page;
	Iterate;
	Get values;
	Get reader;
	Read dst byte buffer;
	Check if  is open;
	Close;
	Seek;
	Set chunk size;
	Capture;
	Get writer;
	Write src byte buffer;
	Get copy;
	Create bucket info;
	Update bucket info;
	Update blob info;
	Delete options;
	Compose compose request;
	Read all bytes;
	Get batch;
	Sign url;
	Get blob ids;
	Get blob ids iterable;
	Update blob infos;
	Update blob infos iterable;
	Delete blob ids;
	Get acl;
	Delete acl;
	Create acl;
	Update acl;
	Get list acls;
	Get default acl;
	Delete default acl;
	Create default acl;
	Update default acl;
	Get list default acls;
	Get iam policy;
	Set iam policy;
	Get test iam permissions;
	Get service account;

336.12. Add a class for repository gcs client yaml test suite IT. It allows to:

	Instantiate repository gcs client yaml test suite IT  with client yaml test candidate;
	Get parameters

336.13. Add a class for socket access. It allows to:

	Instantiate socket access;
	Do privileged IO exception;
	Do privileged void IO exception

337. Changes to package org.elasticsearch.repositories.hdfs:  

337.1. Add a class for hdfs blob store container tests. It allows to:

	Handle new blob store;
	Create test context;
	Create context;
	Handle test read only

337.2. Add a class for hdfs client thread leak filter. It allows to:

	Reject thread

337.3. Add a class for hdfs plugin. It allows to:

	Handle evil hadoop init;
	Handle eager init;
	Get repositories

337.4. Add a class for hdfs repository. It allows to:

	Instantiate hdfs repository  with metadata data, environment, named X content registry, thread pool and thread pool;
	Create blobstore;
	Get login;
	Prepare principal;
	Get host name;
	Create blob store;
	Handle base path;
	Get chunk size

337.5. Add a class for hdfs security context. It allows to:

	Locate keytab file;
	Instantiate hdfs security context  with ugi user group information;
	Render permissions;
	Get restricted execution permissions;
	Do privileged or throw;
	Ensure login

337.6. Add a class for hdfs tests. It allows to:

	Get plugins;
	Handle test simple workflow;
	Handle test missing uri;
	Handle test empty uri;
	Handle test non hdfs uri;
	Handle test path specified in hdfs;
	Handle test missing path;
	Get count

337.7. Add a class for repository hdfs client yaml test suite IT. It allows to:

	Instantiate repository hdfs client yaml test suite IT  with client yaml test candidate;
	Get parameters

337.8. Add a class for testing fs. It allows to:

	Wrap base path;
	Get box;
	Get unbox;
	Get initial working directory;
	Set permission;
	Handle supports symlinks;
	Get file link status;
	Get link target;
	Get file status;
	Instantiate testing fs  with URI, configuration and configuration;
	Check path

338. Changes to package org.elasticsearch.repositories.s3:  

338.1. Add a class for amazon S 3 wrapper. It allows to:

	Instantiate amazon S 3 wrapper  with delegate amazon;
	Set endpoint;
	Set region;
	Set S 3 client options;
	Change object storage class;
	Set object redirect location;
	Get list objects;
	Get list next batch of objects;
	Get list versions;
	Get list next batch of versions;
	Get S 3 account owner;
	Check if amazon S 3 wrapper does bucket exist;
	Get list buckets;
	Get bucket location;
	Create bucket;
	Get object acl;
	Set object acl;
	Get bucket acl;
	Set bucket acl;
	Get object metadata;
	Get object;
	Delete bucket;
	Set bucket replication configuration;
	Get bucket replication configuration;
	Delete bucket replication configuration;
	Check if amazon S 3 wrapper does object exist;
	Put object;
	Copy object;
	Copy part;
	Delete object;
	Delete objects;
	Delete version;
	Get bucket logging configuration;
	Set bucket logging configuration;
	Get bucket versioning configuration;
	Set bucket versioning configuration;
	Get bucket lifecycle configuration;
	Set bucket lifecycle configuration;
	Delete bucket lifecycle configuration;
	Get bucket cross origin configuration;
	Set bucket cross origin configuration;
	Delete bucket cross origin configuration;
	Get bucket tagging configuration;
	Set bucket tagging configuration;
	Delete bucket tagging configuration;
	Get bucket notification configuration;
	Set bucket notification configuration;
	Get bucket website configuration;
	Set bucket website configuration;
	Delete bucket website configuration;
	Get bucket policy;
	Set bucket policy;
	Delete bucket policy;
	Generate presigned url;
	Initiate multipart upload;
	Upload part;
	Get list parts;
	Abort multipart upload;
	Handle complete multipart upload;
	Get list multipart uploads;
	Get cached response metadata;
	Restore object;
	Enable requester pays;
	Disable requester pays;
	Check if amazon S 3 wrapper is requester pays enabled;
	Head bucket;
	Handle shutdown

338.2. Add a class for aws S 3 service impl tests. It allows to:

	Convert test AWS credentials default;
	Handle test AWS credentials from keystore;
	Handle test set default credential;
	Handle test credentials incomplete;
	Handle test AWS default configuration;
	Handle test AWS configuration with aws settings;
	Handle test repository max retries;
	Handle test repository throttle retries;
	Launch AWS configuration test;
	Handle test endpoint setting;
	Assert endpoint

338.3. Add a class for mock amazon S 3. It allows to:

	Instantiate mock amazon S 3  with blobs concurrent map;
	Check if mock amazon S 3 does object exist;
	Put object;
	Get object;
	Get list objects;
	Delete object;
	Handle shutdown;
	Delete objects

338.4. Add a class for repository S 3 client yaml test suite IT. It allows to:

	Instantiate repository S 3 client yaml test suite IT  with client yaml test candidate;
	Get parameters

338.5. Add a class for s 3 blob container. It allows to:

	Instantiate s 3 blob container  with blob path, S 3 blob store and S 3 blob store;
	Handle blob exists;
	Read blob;
	Write blob;
	Write blob atomic;
	Delete blob;
	Delete blobs ignoring  if not exists;
	Handle bulk delete;
	Delete blob ignoring  if not exists;
	Get list blobs by prefix;
	Get list blobs;
	Build key;
	Execute single upload;
	Execute multipart upload;
	Get number of multiparts

338.6. Add a class for s 3 blob store. It allows to:

	Instantiate s 3 blob store  with S 3 service, buffer size value, repository meta data and repository meta data;
	Convert s 3 blob store to string;
	Get client reference;
	Get bucket;
	Handle server side encryption;
	Buffer size  in bytes;
	Blob container;
	Delete blob path;
	Close s 3 blob store;
	Get canned ACL;
	Get storage class;
	Handle init storage class;
	Handle init canned ACL

338.7. Add a class for s 3 blob store container tests. It allows to:

	Handle new blob store;
	Handle test verify overwrite fails;
	Handle test execute single upload blob size too large;
	Handle test execute single upload blob size larger than buffer size;
	Handle test execute single upload;
	Handle test execute multipart upload blob size too large;
	Handle test execute multipart upload blob size too small;
	Handle test execute multipart upload;
	Handle test execute multipart upload aborted;
	Test number  of multiparts with zero part size;
	Test number  of multiparts;
	Assert number  of multiparts

338.8. Add a class for s 3 blob store tests. It allows to:

	Handle new blob store;
	Handle test init canned ACL;
	Handle test invalid canned ACL;
	Handle test init storage class;
	Handle test case insensitive storage class;
	Handle test invalid storage class;
	Handle test reject glacier storage class;
	Handle random mock S 3 blob store;
	Get client

338.9. Add a class for s 3 client settings. It allows to:

	Instantiate s 3 client settings  with S 3 basic credentials, protocol and protocol;
	Refine metadata data;
	Get load;
	Check deprecated credentials;
	Load deprecated credentials;
	Load credentials;
	Get client settings;
	Check if s 3 client settings equals;
	Hash code;
	Get config value;
	Get repo setting or default

338.10. Add a class for s 3 repository. It allows to:

	Instantiate s 3 repository  with metadata data, settings, named X content registry, S 3 service, thread pool and thread pool;
	Create blob store;
	Blob store;
	Get blob store;
	Handle base path;
	Get chunk size

338.11. Add a class for s 3 repository plugin. It allows to:

	Instantiate s 3 repository plugin  with settings;
	Instantiate s 3 repository plugin  with settings, S 3 service and S 3 service;
	Create repository;
	Get repositories;
	Get settings;
	Reload settings;
	Close s 3 repository plugin

338.12. Add a class for socket access. It allows to:

	Instantiate socket access;
	Do privileged;
	Do privileged IO exception;
	Do privileged void

339. Changes to package org.elasticsearch.repositories.url:  

339.1. Add a class for repository URL client yaml test suite IT. It allows to:

	Instantiate repository URL client yaml test suite IT  with client yaml test candidate;
	Get parameters;
	Register repositories;
	Build repository settings

339.2. Add a class for uRL repository. It allows to:

	Instantiate uRL repository  with metadata data, environment, named X content registry, thread pool and thread pool;
	Create blob store;
	Blob container;
	Get blob store;
	Handle base path;
	Check URL;
	Check if uRL repository is read only;
	Parse URL

339.3. Add a class for uRL repository tests. It allows to:

	Create repository;
	Assert snapshot or generic thread;
	Handle test white listing repo URL;
	Handle test if not white listed must set repo URL;
	Handle test must be supported protocol;
	Handle test non normalized url

339.4. Add a class for uRL snapshot restore tests. It allows to:

	Handle node plugins;
	Handle test url repository

340. Changes to package org.elasticsearch.rest:  

340.1. Add a class for abstract rest channel. It allows to:

	Instantiate abstract rest channel  with rest request;
	Handle new builder;
	Handle new error builder;
	Get bytes output;
	Get bytes output or null;
	Handle new bytes output;
	Get request;
	Handle detailed errors enabled

340.2. Add a class for base rest handler tests. It allows to:

	Handle test one unconsumed parameters;
	Prepare request;
	Get name;
	Handle test multiple unconsumed parameters;
	Handle test unconsumed parameters did you mean;
	Get response params;
	Handle test unconsumed response parameters;
	Handle test default response parameters;
	Handle test cat response parameters;
	Do cat request;
	Handle documentation;
	Get table  with header;
	Handle test consumed body;
	Handle test unconsumed no body;
	Handle test unconsumed body;

340.3. Add a class for bytes rest response. It allows to:

	Instantiate bytes rest response  with rest status, X content builder and X content builder;
	Instantiate bytes rest response  with rest status;
	Instantiate bytes rest response  with rest status, content bytes reference and content bytes reference;
	Instantiate bytes rest response  with rest channel, exception and exception;
	Instantiate bytes rest response  with rest channel, rest status, exception and exception;
	Handle content type;
	Handle content;
	Get status;
	Build rest channel;
	Create simple error response;
	Get error from X content

340.4. Add a class for deprecation rest handler. It allows to:

	Instantiate deprecation rest handler  with rest handler, deprecation logger and deprecation logger;
	Handle request;
	Handle supports content stream;
	Handle valid header value;
	Require valid header

340.5. Add a class for method handlers. It allows to:

	Instantiate method handlers  with rest handler, methods and methods;
	Add method;
	Add methods;
	Get handler;
	Get valid methods

340.6. Add a class for netty 4 bad request IT. It allows to:

	Handle test bad request;
	Handle test invalid parameter value;
	Handle test invalid header value

340.7. Add a class for netty 4 head body is empty IT. It allows to:

	Handle test head root;
	Create test doc;
	Handle test document exists;
	Handle test index exists;
	Handle test type exists;
	Handle test type does not exist;
	Handle test alias exists;
	Handle test alias does not exist;
	Handle test template exists;
	Handle test get source action;
	Handle test exception;
	Head test case;

340.8. Add an interface declaration  for rest channel. It allows to:

	Handle new builder;
	Handle new error builder;
	Get bytes output;
	Get request;
	Handle detailed errors enabled;
	Send response

340.9. Add an interface declaration  for rest handler. It allows to:

	Handle request;
	Can trip circuit breaker;
	Handle supports content stream

340.10. Add a class for rest response. It allows to:

	Handle content type;
	Handle content;
	Get status;
	Copy headers;
	Add header;
	Get headers

340.11. Add a class for rest utils. It allows to:

	Decode;
	Decode query string;
	Add param;
	Decode component;
	Needed rest utils;
	Decode rest utils;
	Decode hex nibble;
	Check cors setting  for regex;
	Get cors setting as array

340.12. Add a class for rest utils tests. It allows to:

	Handle random delimiter;
	Handle test decode query string;
	Handle test decode query string edge cases;
	Handle test cors setting is A regex;
	Handle test crazy URL;
	Assert cors setting regex is null;
	Assert cors setting regex;
	Assert cors setting regex matches

341. Changes to package org.elasticsearch.rest.action:  

341.1. Add a class for rest action listener. It allows to:

	Instantiate rest action listener  with rest channel;
	Process rest action listener rest action listener on response;
	Handle process response;
	Process rest action listener rest action listener on failure

341.2. Add a class for rest actions tests. It allows to:

	Handle init;
	Handle cleanup;
	Handle test parse top level builder;
	Handle test parse top level builder empty object;
	Handle test parse top level builder malformed json;
	Handle test parse top level builder incomplete json;
	Handle test parse top level builder unknown parameter;
	Handle test build broadcast shards header;
	Create shard failure parsing exception;
	Create search shard target;
	X content registry

341.3. Add a class for rest builder listener. It allows to:

	Instantiate rest builder listener  with rest channel;
	Build response;
	Assert builder closed

341.4. Add a class for rest builder listener tests. It allows to:

	Handle test X content builder closed in build response;
	Build response;
	Handle test X content builder not closed in build response assertions disabled;
	Assert builder closed;
	Handle test X content builder not closed in build response assertions enabled;

341.5. Add a class for rest field capabilities action. It allows to:

	Instantiate rest field capabilities action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

341.6. Add a class for rest main action. It allows to:

	Instantiate rest main action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Convert main response;
	Can trip circuit breaker

341.7. Add a class for rest main action tests. It allows to:

	Handle test head response;
	Get method;
	Handle test get response

341.8. Add a class for rest response listener. It allows to:

	Instantiate rest response listener  with rest channel;
	Handle process response;
	Build response

341.9. Add a class for rest status to X content listener. It allows to:

	Instantiate rest status to X content listener  with rest channel;
	Instantiate rest status to X content listener  with rest channel, extract location function and extract location function;
	Build response

341.10. Add a class for rest to X content listener. It allows to:

	Instantiate rest to X content listener  with rest channel;
	Build response;
	Get status

342. Changes to package org.elasticsearch.rest.action.admin.cluster:  

342.1. Add a class for rest cancel tasks action. It allows to:

	Instantiate rest cancel tasks action  with settings, rest controller, nodes in cluster supplier and nodes in cluster supplier;
	Get name;
	Prepare request;
	Can trip circuit breaker

342.2. Add a class for rest cluster allocation explain action. It allows to:

	Instantiate rest cluster allocation explain action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.3. Add a class for rest cluster get settings action. It allows to:

	Instantiate rest cluster get settings action  with settings, rest controller, cluster settings, settings filter and settings filter;
	Get name;
	Prepare request;
	Get response params;
	Can trip circuit breaker;
	Render response;
	Get response

342.4. Add a class for rest cluster health action. It allows to:

	Instantiate rest cluster health action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Get response params;
	Can trip circuit breaker

342.5. Add a class for rest cluster reroute action. It allows to:

	Instantiate rest cluster reroute action  with settings, rest controller, settings filter and settings filter;
	Get name;
	Prepare request;
	Get response params;
	Create request

342.6. Add a class for rest cluster search shards action. It allows to:

	Instantiate rest cluster search shards action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.7. Add a class for rest cluster stats action. It allows to:

	Instantiate rest cluster stats action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Can trip circuit breaker

342.8. Add a class for rest cluster update settings action. It allows to:

	Instantiate rest cluster update settings action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Get response params;
	Can trip circuit breaker

342.9. Add a class for rest create snapshot action. It allows to:

	Instantiate rest create snapshot action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.10. Add a class for rest delete repository action. It allows to:

	Instantiate rest delete repository action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.11. Add a class for rest delete snapshot action. It allows to:

	Instantiate rest delete snapshot action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.12. Add a class for rest delete stored script action. It allows to:

	Instantiate rest delete stored script action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.13. Add a class for rest get repositories action. It allows to:

	Instantiate rest get repositories action  with settings, rest controller, settings filter and settings filter;
	Get name;
	Prepare request;
	Get response params

342.14. Add a class for rest get snapshots action. It allows to:

	Instantiate rest get snapshots action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.15. Add a class for rest get stored script action. It allows to:

	Instantiate rest get stored script action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.16. Add a class for rest get task action. It allows to:

	Instantiate rest get task action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.17. Add a class for rest list tasks action. It allows to:

	Instantiate rest list tasks action  with settings, rest controller, nodes in cluster supplier and nodes in cluster supplier;
	Get name;
	Prepare request;
	Generate list tasks request;
	Get list tasks response listener;
	Build response;
	Can trip circuit breaker

342.18. Add a class for rest nodes hot threads action. It allows to:

	Instantiate rest nodes hot threads action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Can trip circuit breaker

342.19. Add a class for rest nodes info action. It allows to:

	Instantiate rest nodes info action  with settings, rest controller, settings filter and settings filter;
	Get name;
	Prepare request;
	Get response params;
	Can trip circuit breaker

342.20. Add a class for rest nodes stats action. It allows to:

	Instantiate rest nodes stats action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Get response params;
	Can trip circuit breaker

342.21. Add a class for rest nodes stats action tests. It allows to:

	Set rest nodes stats action tests;
	Handle test unrecognized metric;
	Handle test unrecognized metric did you mean;
	Test all request  with other metrics;
	Handle test unrecognized index metric;
	Handle test unrecognized index metric did you mean;
	Handle test index metrics request without indices metric;
	Handle test index metrics request on all request

342.22. Add a class for rest nodes usage action. It allows to:

	Instantiate rest nodes usage action  with settings, rest controller and rest controller;
	Prepare request;
	Get name;
	Can trip circuit breaker

342.23. Add a class for rest pending cluster tasks action. It allows to:

	Instantiate rest pending cluster tasks action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.24. Add a class for rest put repository action. It allows to:

	Instantiate rest put repository action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.25. Add a class for rest put stored script action. It allows to:

	Instantiate rest put stored script action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.26. Add a class for rest remote cluster info action. It allows to:

	Instantiate rest remote cluster info action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Can trip circuit breaker

342.27. Add a class for rest restore snapshot action. It allows to:

	Instantiate rest restore snapshot action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.28. Add a class for rest snapshots status action. It allows to:

	Instantiate rest snapshots status action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

342.29. Add a class for rest verify repository action. It allows to:

	Instantiate rest verify repository action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343. Changes to package org.elasticsearch.rest.action.admin.indices:  

343.1. Add a class for aliases not found exception. It allows to:

	Instantiate aliases not found exception;
	Instantiate aliases not found exception  with stream input

343.2. Add a class for rest analyze action tests. It allows to:

	Handle test parse X content for analyze request;
	Handle test parse X content for analyze request with custom filters;
	Handle test parse X content for analyze request with invalid json throws exception;
	Handle test parse X content for analyze request with unknown param throws exception;
	Handle test parse X content for analyze request with invalid string explain param throws exception;
	Handle test parse X content for analyze request with invalid normalizer throws exception;
	Convert test deprecated param in

343.3. Add a class for rest clear indices cache action. It allows to:

	Instantiate rest clear indices cache action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Can trip circuit breaker;
	Process rest clear indices cache action rest clear indices cache action from request

343.4. Add a class for rest clear indices cache action tests. It allows to:

	Handle test request cache set

343.5. Add a class for rest close index action. It allows to:

	Instantiate rest close index action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.6. Add a class for rest create index action. It allows to:

	Instantiate rest create index action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Prepare mappings

343.7. Add a class for rest delete index action. It allows to:

	Instantiate rest delete index action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.8. Add a class for rest delete index template action. It allows to:

	Instantiate rest delete index template action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.9. Add a class for rest flush action. It allows to:

	Instantiate rest flush action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.10. Add a class for rest force merge action. It allows to:

	Instantiate rest force merge action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.11. Add a class for rest get aliases action. It allows to:

	Instantiate rest get aliases action  with settings, rest controller and rest controller;
	Get name;
	Build rest response;
	Prepare request

343.12. Add a class for rest get field mapping action. It allows to:

	Instantiate rest get field mapping action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Check if rest get field mapping action is field mapping missing field

343.13. Add a class for rest get index template action. It allows to:

	Instantiate rest get index template action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Get response params

343.14. Add a class for rest get indices action. It allows to:

	Instantiate rest get indices action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Get response params

343.15. Add a class for rest get mapping action. It allows to:

	Instantiate rest get mapping action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.16. Add a class for rest get settings action. It allows to:

	Instantiate rest get settings action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.17. Add a class for rest index delete aliases action. It allows to:

	Instantiate rest index delete aliases action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.18. Add a class for rest index put alias action. It allows to:

	Instantiate rest index put alias action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.19. Add a class for rest indices aliases action. It allows to:

	Get name;
	Instantiate rest indices aliases action  with settings, rest controller and rest controller;
	Prepare request

343.20. Add a class for rest indices segments action. It allows to:

	Instantiate rest indices segments action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.21. Add a class for rest indices shard stores action. It allows to:

	Instantiate rest indices shard stores action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.22. Add a class for rest indices stats action. It allows to:

	Instantiate rest indices stats action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Can trip circuit breaker;
	Get response params

343.23. Add a class for rest indices stats action tests. It allows to:

	Set rest indices stats action tests;
	Handle test unrecognized metric;
	Handle test unrecognized metric did you mean;
	Test all request  with other metrics

343.24. Add a class for rest open index action. It allows to:

	Instantiate rest open index action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.25. Add a class for rest put index template action. It allows to:

	Instantiate rest put index template action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.26. Add a class for rest put mapping action. It allows to:

	Instantiate rest put mapping action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.27. Add a class for rest recovery action. It allows to:

	Instantiate rest recovery action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.28. Add a class for rest refresh action. It allows to:

	Instantiate rest refresh action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.29. Add a class for rest rollover index action. It allows to:

	Instantiate rest rollover index action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.30. Add a class for rest synced flush action. It allows to:

	Instantiate rest synced flush action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.31. Add a class for rest update settings action. It allows to:

	Instantiate rest update settings action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Get response params

343.32. Add a class for rest upgrade action. It allows to:

	Instantiate rest upgrade action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

343.33. Add a class for rest validate query action. It allows to:

	Instantiate rest validate query action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Handle exception;
	Build error response

344. Changes to package org.elasticsearch.rest.action.cat:  

344.1. Add a class for abstract cat action. It allows to:

	Instantiate abstract cat action  with settings;
	Do cat request;
	Handle documentation;
	Get table  with header;
	Prepare request;
	Get response params

344.2. Add a class for rest alias action. It allows to:

	Instantiate rest alias action  with settings, rest controller and rest controller;
	Get name;
	Do cat request;
	Handle documentation;
	Get table  with header;
	Build table

344.3. Add a class for rest allocation action. It allows to:

	Instantiate rest allocation action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Build table

344.4. Add a class for rest cat action. It allows to:

	Instantiate rest cat action  with settings, rest controller, cat actions list and cat actions list;
	Get name;
	Prepare request

344.5. Add a class for rest count action. It allows to:

	Instantiate rest count action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Build table

344.6. Add a class for rest fielddata action. It allows to:

	Instantiate rest fielddata action  with settings, rest controller and rest controller;
	Get name;
	Do cat request;
	Handle documentation;
	Get table  with header;
	Build table

344.7. Add a class for rest health action. It allows to:

	Instantiate rest health action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Build table

344.8. Add a class for rest indices action. It allows to:

	Instantiate rest indices action  with settings, rest controller, index name expression resolver and index name expression resolver;
	Get name;
	Handle documentation;
	Do cat request;
	Get response params;
	Get table  with header;
	Build table;
	Get ordered index meta data

344.9. Add a class for rest indices action tests. It allows to:

	Build random indices meta data;
	Build cluster state;
	Build cluster health response;
	Handle test build table;
	Handle random indices stats response;
	Remove random element

344.10. Add a class for rest master action. It allows to:

	Instantiate rest master action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Build table

344.11. Add a class for rest node attrs action. It allows to:

	Instantiate rest node attrs action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Build table

344.12. Add a class for rest nodes action. It allows to:

	Instantiate rest nodes action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Build table;
	Calculate percentage

344.13. Add a class for rest nodes action tests. It allows to:

	Set up action;
	Handle test build table does not throw given null node info and stats

344.14. Add a class for rest pending cluster tasks action. It allows to:

	Instantiate rest pending cluster tasks action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Build table

344.15. Add a class for rest plugins action. It allows to:

	Instantiate rest plugins action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Build table

344.16. Add a class for rest recovery action tests. It allows to:

	Handle test rest recovery action;
	Get percent

344.17. Add a class for rest repositories action. It allows to:

	Instantiate rest repositories action  with settings, rest controller and rest controller;
	Do cat request;
	Get name;
	Handle documentation;
	Get table  with header;
	Build table

344.18. Add a class for rest segments action. It allows to:

	Instantiate rest segments action  with settings, rest controller and rest controller;
	Get name;
	Do cat request;
	Handle documentation;
	Get table  with header;
	Build table

344.19. Add a class for rest shards action. It allows to:

	Instantiate rest shards action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Get stats;
	Build table

344.20. Add a class for rest snapshot action. It allows to:

	Instantiate rest snapshot action  with settings, rest controller and rest controller;
	Get name;
	Do cat request;
	Handle documentation;
	Get table  with header;
	Build table

344.21. Add a class for rest table tests. It allows to:

	Handle setup;
	Handle test that display headers support wildcards;
	Handle test that display headers are not added twice;
	Handle test that we use the accept header json;
	Handle test that we use the accept header yaml;
	Handle test that we use the accept header smile;
	Handle test that we use the accept header cbor;
	Handle test that we use the accept header text;
	Handle test ignore content type;
	Handle test that display headers without timestamp;
	Handle test compare row;
	Handle test row out of bounds;
	Handle test unknown header;
	Handle test alias sort;
	Handle test reversed sort;
	Handle test multi sort;
	Assert response content type;
	Send response;
	Assert response;
	Get header names

344.22. Add a class for rest tasks action. It allows to:

	Instantiate rest tasks action  with settings, rest controller, nodes in cluster supplier and nodes in cluster supplier;
	Get name;
	Handle documentation;
	Do cat request;
	Get response params;
	Get table  with header;
	Build row;
	Build groups;
	Build table

344.23. Add a class for rest templates action. It allows to:

	Instantiate rest templates action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get table  with header;
	Build table

344.24. Add a class for rest thread pool action. It allows to:

	Instantiate rest thread pool action  with settings, rest controller and rest controller;
	Get name;
	Handle documentation;
	Do cat request;
	Get response params;
	Get table  with header;
	Build table

345. Changes to package org.elasticsearch.rest.action.document:  

345.1. Add a class for rest bulk action. It allows to:

	Instantiate rest bulk action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Handle supports content stream

345.2. Add a class for rest bulk action tests. It allows to:

	Handle test bulk pipeline upsert;
	Handle matches

345.3. Add a class for rest delete action. It allows to:

	Instantiate rest delete action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

345.4. Add a class for rest get action. It allows to:

	Instantiate rest get action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

345.5. Add a class for rest index action tests. It allows to:

	Set up action;
	Handle test type in path;
	Handle test create with type in path;
	Handle test create op type validation

345.6. Add a class for rest multi get action. It allows to:

	Instantiate rest multi get action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

345.7. Add a class for rest multi term vectors action. It allows to:

	Instantiate rest multi term vectors action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

345.8. Add a class for rest term vectors action. It allows to:

	Instantiate rest term vectors action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Read URI parameters;
	Add field strings  from parameter

345.9. Add a class for rest update action. It allows to:

	Instantiate rest update action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

346. Changes to package org.elasticsearch.rest.action.ingest:  

346.1. Add a class for rest delete pipeline action. It allows to:

	Instantiate rest delete pipeline action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

346.2. Add a class for rest get pipeline action. It allows to:

	Instantiate rest get pipeline action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

346.3. Add a class for rest put pipeline action. It allows to:

	Instantiate rest put pipeline action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

346.4. Add a class for rest simulate pipeline action. It allows to:

	Instantiate rest simulate pipeline action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

347. Changes to package org.elasticsearch.rest.action.search:  

347.1. Add a class for rest clear scroll action. It allows to:

	Instantiate rest clear scroll action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

347.2. Add a class for rest explain action. It allows to:

	Instantiate rest explain action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

347.3. Add a class for rest multi search action. It allows to:

	Instantiate rest multi search action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Parse request;
	Parse multi line request;
	Handle supports content stream;
	Get response params

347.4. Add a class for rest search action. It allows to:

	Instantiate rest search action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Parse search request;
	Parse search source;
	Check rest total hits;
	Get response params

347.5. Add a class for rest search scroll action. It allows to:

	Instantiate rest search scroll action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Get response params

348. Changes to package org.elasticsearch.routing:  

348.1. Add a class for alias resolve routing IT. It allows to:

	Handle test search closed wildcard index;
	Handle test resolve index routing;
	Handle test resolve search routing;
	Handle new set;
	Handle new map;

348.2. Add a class for alias routing IT. It allows to:

	Handle minimum number of shards;
	Handle test alias crud routing;
	Handle test alias search routing;
	Get index settings;
	Handle test alias search routing with two indices;
	Handle test alias search routing with concrete and aliased indices issue 2682;
	Handle test alias search routing with concrete and aliased indices issue 3268;
	Handle test indexing aliases over time

348.3. Add a class for partitioned routing IT. It allows to:

	Handle test various partition sizes;
	Handle test shrinking;
	Verify routed searches;
	Verify broad searches;
	Gets routing to document ids map;
	Generate routed document ids

348.4. Add a class for simple routing IT. It allows to:

	Handle minimum number of shards;
	Find non matching routing value;
	Handle test simple crud routing;
	Handle test simple search routing;
	Handle test required routing crud apis;
	Handle test required routing bulk;
	Handle test required routing mapping various AP is;
	Get index or alias

349. Changes to package org.elasticsearch.script:  

349.1. Add a class for class permission. It allows to:

	Instantiate class permission;
	Check if class permission implies;
	Handle new permission collection;
	Add permission;
	Check if  implies;
	Get elements

349.2. Add a class for class permission tests. It allows to:

	Handle test equals;
	Handle test implies;
	Handle test standard;
	Handle test permission collection;
	Handle test permission collection standard;
	Handle test wildcards;
	Handle test permission collection wildcards

349.3. Add a class for general script exception. It allows to:

	Instantiate general script exception;
	Instantiate general script exception  with cause throwable;
	Instantiate general script exception  with stream input

349.4. Add a class for mock script plugin. It allows to:

	Get script engine;
	Plugin scripts;
	Plugin context compilers;
	Plugin script lang

349.5. Add a class for script context. It allows to:

	Instantiate script context  with factory clazz class;
	Find method

349.6. Add an interface declaration  for script engine. It allows to:

	Get type;
	Compile script context;
	Close script engine

349.7. Add a class for script exception. It allows to:

	Instantiate script exception  with cause throwable, script stack list and script stack list;
	Instantiate script exception  with stream input;
	Write  to stream output;
	Convert metadata;
	Get script stack;
	Get script;
	Get lang;
	Convert script exception to json string;
	Get status

349.8. Add a class for script exception tests. It allows to:

	Handle test round trip;
	Handle test json output;
	Handle test immutable stack;
	Handle test no leniency

349.9. Add a class for script meta data tests. It allows to:

	Handle test from X content loading;
	Handle test get script;
	Handle test diff;
	Handle test builder;
	Handle test load empty scripts;
	Enable warnings check;
	Handle random script meta data;
	Create test instance;
	Get instance reader;
	Mutate instance;
	Do parse instance

349.10. Add a class for script metrics. It allows to:

	Get stats;
	Process script metrics script metrics on compilation;
	Process script metrics script metrics on cache eviction;
	Process script metrics script metrics on compilation limit

349.11. Add a class for script module. It allows to:

	Instantiate script module  with settings, script plugins list and script plugins list;
	Get script service;
	Register cluster settings listeners

349.12. Add a class for script service tests. It allows to:

	Handle setup;
	Build script service;
	Get scripts  from cluster state;
	Get script  from cluster state;
	Handle test compilation circuit breaking;
	Handle test max compilation rate setting;
	Assert exception;
	Handle test not supported disable dynamic setting;
	Handle test inline script compiled once cache;
	Handle test allow all script type settings;
	Handle test allow all script context settings;
	Handle test allow some script type settings;
	Handle test allow some script context settings;
	Handle test allow no script type settings;
	Handle test allow no script context settings;
	Handle test compile non registered context;
	Handle test compile counted in compilation stats;
	Handle test multiple compilations counted in compilation stats;
	Handle test compilation stats on cache hit;
	Handle test indexed script counted in compilation stats;
	Handle test cache eviction counted in cache evictions stats;
	Handle test store script;
	Handle test delete script;
	Handle test get stored script;
	Handle test max size limit;
	Assert script type;

349.13. Add a class for script tests. It allows to:

	Handle test script parsing;
	Handle test script serialization;
	Create script;
	Handle test parse

349.14. Add a class for stored script source tests. It allows to:

	Create test instance;
	Do parse instance;
	Get instance reader;
	Mutate instance

349.15. Add a class for stored script tests. It allows to:

	Handle test basic add delete;
	Handle test invalid delete;
	Handle test source parsing;
	Handle test source parsing errors;
	Handle test empty template deprecations;
	Create test instance;
	Get instance reader;
	Do parse instance;
	Mutate instance

350. Changes to package org.elasticsearch.script.expression:  

350.1. Add a class for count method value source. It allows to:

	Instantiate count method value source  with index field data;
	Get values;
	Handle double val;
	Check if count method value source equals;
	Hash code;
	Get description

350.2. Add an object creator class for date field. It allows to:

	Instantiate date field;
	Get variable;
	Get method

350.3. Add a class for date method value source. It allows to:

	Instantiate date method value source  with index field data, multi value mode and multi value mode;
	Get values;
	Handle double val;
	Get description;
	Check if date method value source equals;
	Hash code

350.4. Add an object creator class for date object. It allows to:

	Instantiate date object;
	Get variable;
	Get method

350.5. Add a class for date object value source. It allows to:

	Instantiate date object value source  with index field data, multi value mode, to int function and to int function;
	Get values;
	Handle double val;
	Get description;
	Check if date object value source equals;
	Hash code

350.6. Add a class for empty member value source. It allows to:

	Instantiate empty member value source  with index field data;
	Get values;
	Handle double val;
	Hash code;
	Check if empty member value source equals;
	Get description

350.7. Add an object creator class for expression plugin. It allows to:

	Get script engine

350.8. Add a class for expression script engine. It allows to:

	Get type;
	Compile script context;
	Run;
	Load class;
	Handle new bucket aggregation script factory;
	Handle new sort script;
	Handle new terms set query script;
	Handle new aggregation script;
	Handle new field script;
	Handle new filter script;
	Handle new score script;
	Convert cause throwable to script exception;
	Get doc value source;
	Handle bind from params

350.9. Add a class for field data value source. It allows to:

	Instantiate field data value source  with index field data, multi value mode and multi value mode;
	Check if field data value source equals;
	Hash code;
	Get values;
	Handle double val;
	Get description

350.10. Add a class for geo empty value source. It allows to:

	Instantiate geo empty value source  with index field data;
	Get values;
	Handle double val;
	Hash code;
	Check if geo empty value source equals;
	Get description

350.11. Add an object creator class for geo field. It allows to:

	Instantiate geo field;
	Get variable;
	Get method

350.12. Add a class for geo latitude value source. It allows to:

	Instantiate geo latitude value source  with index field data;
	Get values;
	Handle double val;
	Hash code;
	Check if geo latitude value source equals;
	Get description

350.13. Add a class for geo longitude value source. It allows to:

	Instantiate geo longitude value source  with index field data;
	Get values;
	Handle double val;
	Hash code;
	Check if geo longitude value source equals;
	Get description

350.14. Add a class for lang expression client yaml test suite IT. It allows to:

	Instantiate lang expression client yaml test suite IT  with client yaml test candidate;
	Get parameters

350.15. Add a class for more expression tests. It allows to:

	Handle node plugins;
	Build request;
	Handle test basic;
	Handle test function;
	Handle test basic using dot value;
	Handle test score;
	Handle test date methods;
	Handle test date object methods;
	Handle test multi value methods;
	Handle test invalid date method call;
	Handle test sparse field;
	Handle test missing field;
	Handle test params;
	Handle test compile failure;
	Handle test non numeric param;
	Handle test non numeric field;
	Handle test invalid global variable;
	Handle test doc without field;
	Handle test invalid field member;
	Handle test special value variable;
	Handle test string special value variable;
	Handle test invalid update script;
	Handle test pipeline aggregation script;
	Handle test geo;
	Handle test boolean;
	Handle test filter script

350.16. Add an object creator class for numeric field. It allows to:

	Instantiate numeric field;
	Get variable;
	Get method

350.17. Add a class for replaceable const double value source. It allows to:

	Instantiate replaceable const double value source;
	Get values;
	Handle needs scores;
	Explain ctx leaf reader context;
	Check if replaceable const double value source equals;
	Hash code;
	Get set value;
	Convert replaceable const double value source to string;
	Check if replaceable const double value source is cacheable;
	Rewrite reader index searcher

350.18. Add a class for replaceable const double values. It allows to:

	Get set value;
	Handle double value;
	Handle advance exact

350.19. Add a class for stored expression tests. It allows to:

	Handle node settings;
	Handle node plugins;
	Test all ops disabled indexed scripts

351. Changes to package org.elasticsearch.script.mustache:  

351.1. Add a class for custom mustache factory tests. It allows to:

	Handle test create encoder;
	Handle test json escape encoder;
	Handle test default encoder;
	Handle test url encoder

351.2. Add a class for lang mustache client yaml test suite IT. It allows to:

	Instantiate lang mustache client yaml test suite IT  with client yaml test candidate;
	Get parameters

351.3. Add an object creator class for multi search template action. It allows to:

	Instantiate multi search template action;
	Handle new response

351.4. Add a class for multi search template IT. It allows to:

	Handle node plugins;
	Transport client plugins;
	Handle test basic

351.5. Add a class for multi search template request. It allows to:

	Add search template request builder;
	Add search template request;
	Max concurrent search requests;
	Get requests;
	Validate multi search template request;
	Get indices options;
	Read  from stream input;
	Write  to stream output;
	Check if multi search template request equals;
	Hash code;
	Write multi line format

351.6. Add a class for multi search template request tests. It allows to:

	Handle test parse request;
	Handle test parse with carriage return;
	Handle test max concurrent search requests;
	Convert test multi search template;
	Convert multi search template request tests to json string

351.7. Add a class for mustache plugin. It allows to:

	Get script engine;
	Get actions;
	Get rest handlers

351.8. Add a class for mustache script engine tests. It allows to:

	Handle setup;
	Handle test simple parameter replace;
	Handle test simple;
	Handle test parse template as single string with conditional clause;
	Handle test escape json;
	Get chars;
	Check if mustache script engine tests is escape char

351.9. Add a class for mustache tests. It allows to:

	Handle test basics;
	Handle test array access;
	Handle test array in array access;
	Handle test map in array access;
	Handle test size access for collections and arrays;
	Convert test primitive;
	Convert test simple map;
	Convert test multiple maps;
	Convert test simple array;
	Convert test simple list;
	Convert tests unsupported tags;
	Convert test embedded;
	Handle test simple array join;
	Handle test embedded array join;
	Convert test join with;
	Handle tests unsupported tags join;
	Handle test join with custom delimiter;
	Handle test url encoder;
	Handle test url encoder with param;
	Handle test url encoder with join;
	Assert script;
	Compile mustache tests

351.10. Add a class for rest multi search template action. It allows to:

	Instantiate rest multi search template action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Parse request;
	Handle supports content stream;
	Get response params

351.11. Add a class for rest render search template action. It allows to:

	Instantiate rest render search template action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

351.12. Add a class for rest search template action. It allows to:

	Instantiate rest search template action  with settings, rest controller and rest controller;
	Get name;
	Prepare request;
	Get response params

351.13. Add an object creator class for search template action. It allows to:

	Instantiate search template action;
	Handle new response

351.14. Add a class for search template IT. It allows to:

	Get plugins;
	Handle setup;
	Handle test search request fail;
	Handle test template query as escaped string;
	Handle test template query as escaped string starting with conditional clause;
	Handle test template query as escaped string with conditional clause at end;
	Handle test indexed template client;
	Handle test indexed template;
	Handle test indexed template overwrite;
	Handle test indexed template with array

351.15. Add a class for search template request. It allows to:

	Instantiate search template request;
	Instantiate search template request  with search request;
	Set request;
	Get request;
	Check if search template request equals;
	Hash code;
	Check if search template request is simulate;
	Simulate search template request;
	Check if search template request is explain;
	Explain search template request;
	Check if search template request is profile;
	Set profile;
	Get script type;
	Set script type;
	Get script;
	Set script;
	Get script params;
	Set script params;
	Validate search template request;
	Process search template request search template request from X content;
	Convert search template request to X content;
	Read  from stream input;
	Write  to stream output

351.16. Add a class for search template request builder. It allows to:

	Instantiate search template request builder  with elasticsearch client, search template action and search template action;
	Instantiate search template request builder  with elasticsearch client;
	Set request;
	Simulate search template request builder;
	Explain search template request builder;
	Set profile;
	Set script type;
	Set script;
	Set script params

351.17. Add a class for search template request tests. It allows to:

	Create blank instance;
	Create test instance;
	Mutate instance;
	Create random request

351.18. Add a class for search template response. It allows to:

	Instantiate search template response;
	Get source;
	Set source;
	Get response;
	Set response;
	Check if search template response has response;
	Convert search template response to string;
	Write  to stream output;
	Read  from stream input;
	Process search template response search template response from X content;
	Convert search template response to X content;
	Get status

351.19. Add a class for search template without content IT. It allows to:

	Handle test search template missing body;
	Handle test multi search template missing body

351.20. Add a class for transport multi search template action. It allows to:

	Instantiate transport multi search template action  with transport service, action filters, script service, named X content registry, node client and node client;
	Execute task

351.21. Add a class for transport search template action. It allows to:

	Instantiate transport search template action  with transport service, action filters, script service, named X content registry, node client and node client;
	Execute task;
	Process  on response;
	Process  on failure;
	Convert search template request

352. Changes to package org.elasticsearch.search:  

352.1. Add a class for clear scroll response tests. It allows to:

	Convert test;
	Create test item

352.2. Add a class for default search context. It allows to:

	Instantiate default search context  with shard search request, search shard target, engine searcher, cluster service, index service, index shard, big arrays, relative time supplier, timeout value, fetch phase, min node version and min node version;
	Do default search context close;
	Pre process;
	Build filtered query;
	Create type filter;
	I default search context;
	Get source;
	Get request;
	Search type;
	Shard target;
	Get number of shards;
	Get query boost;
	Get origin nano time;
	Scroll context;
	Get aggregations;
	Add search ext;
	Get search ext;
	Highlight default search context;
	Highlight search context highlight;
	Suggest default search context;
	Suggest suggestion search context;
	Rescore default search context;
	Add rescore;
	Check if default search context has script fields;
	Get script fields;
	Handle source requested;
	Check if default search context has fetch source context;
	Fetch source context;
	Handle doc value fields context;
	Get searcher;
	Get index shard;
	Handle mapper service;
	Get similarity service;
	Handle big arrays;
	Handle bitset filter cache;
	Get mapped field type for field;
	Get timeout;
	Handle timeout;
	Terminate default search context after;
	Handle minimum score;
	Get sort;
	Track scores;
	Track total hits  up to;
	Get search after;
	Handle low level cancellation;
	Get collapse;
	Slice builder;
	Get parsed post filter;
	Get alias filter;
	Get parsed query;
	Get query;
	Process default search context default search context from;
	Get size;
	Check if default search context has stored fields;
	Check if default search context has stored fields context;
	Get stored fields context;
	Get stored fields requested;
	Explain default search context;
	Get group stats;
	Handle group stats;
	Handle version;
	Seq no and primary term;
	Convert doc ids;
	Get accessed;
	Handle last access time;
	Keep alive;
	Get dfs result;
	Handle query result;
	Fetch phase;
	Fetch result;
	Handle smart name field type;
	Get object mapper;
	Get relative time  in millis;
	Get query collectors;
	Get query shard context;
	Get profilers;
	Set profilers;
	Set task;
	Get task;
	Check if default search context is canceled

352.3. Add a class for default search context tests. It allows to:

	Handle test pre process

352.4. Add a class for doc value format tests. It allows to:

	Handle test serialization;
	Handle test raw format;
	Handle test binary format;
	Handle test boolean format;
	Handle test ip format;
	Handle test decimal format;
	Handle test raw parse;
	Handle test boolean parse;
	Test IP parse;
	Handle test decimal parse

352.5. Add a class for mock search service tests. It allows to:

	Handle test assert no in flight context;
	Shard target;
	Search type;
	Get query

352.6. Add a class for nested identity tests. It allows to:

	Create test item;
	Handle test from X content;
	Convert test;
	Handle test equals and hashcode;
	Handle test serialization;
	Mutate original nested identity;
	Get copy

352.7. Add a class for random search request generator. It allows to:

	Instantiate random search request generator;
	Handle random search request;
	Handle random search source builder

352.8. Add a class for scroll. It allows to:

	Instantiate scroll  with stream input;
	Instantiate scroll  with keep alive time value;
	Keep alive;
	Write  to stream output;
	Check if scroll equals;
	Hash code;
	Convert scroll to string

352.9. Add a class for search cancellation tests. It allows to:

	Handle setup;
	Handle index random documents;
	Handle cleanup;
	Handle test cancellable collector

352.10. Add a class for search context exception. It allows to:

	Instantiate search context exception  with search context;
	Instantiate search context exception  with search context, throwable and throwable;
	Instantiate search context exception  with stream input

352.11. Add a class for search context missing exception. It allows to:

	Instantiate search context missing exception;
	I search context missing exception;
	Get status;
	Instantiate search context missing exception  with stream input;
	Write  to stream output

352.12. Add a class for search exception. It allows to:

	Instantiate search exception  with search shard target;
	Instantiate search exception  with search shard target, cause throwable and cause throwable;
	Instantiate search exception  with stream input;
	Write  to stream output;
	Get shard

352.13. Add a class for search ext builder. It allows to:

	Hash code;
	Check if search ext builder equals

352.14. Add a class for search hit tests. It allows to:

	Create test item;
	Get instance reader;
	Create test instance;
	Handle test from X content;
	Handle test from X content lenient parsing;
	Handle test from X content without type and id;
	Convert test;
	Handle test serialize shard target;
	Handle test null source;
	Handle test has source;
	Handle test weird script fields;
	Create explanation

352.15. Add a class for search hits tests. It allows to:

	Create test item;
	Create search hit array;
	Handle random total hits;
	Create sort fields;
	Create collapse values;
	Mutate instance;
	Get random fields exclude filter;
	Get shuffle fields exceptions;
	Get instance reader;
	Create test instance;
	Create X context test instance;
	Do parse instance;
	Convert test;
	Handle test from X content with shards

352.16. Add a class for search module. It allows to:

	Instantiate search module  with settings, plugins list and plugins list;
	Get named writeables;
	Get named X contents;
	Get highlighters;
	Get significance heuristic parser registry;
	Register aggregations;
	Register aggregation;
	Register pipeline aggregations;
	Register pipeline aggregation;
	Register shapes;
	Register rescorers;
	Register rescorer;
	Register sorts;
	Register plugins list from plugin;
	Register smoothing models;
	Register suggesters;
	Register suggester;
	Get setup highlighters;
	Register score functions;
	Register score function;
	Register value formats;
	Register value format;
	Register significance heuristics;
	Register significance heuristic;
	Register fetch sub phases;
	Register search exts;
	Register search ext;
	Register fetch sub phase;
	Register query parsers;
	Register intervals source providers;
	Register query;
	Get fetch phase

352.17. Add a class for search parse exception. It allows to:

	Instantiate search parse exception  with search context, X content location and X content location;
	Instantiate search parse exception  with search context, X content location, cause throwable and cause throwable;
	Instantiate search parse exception  with stream input;
	Write  to stream output;
	Get status;
	Convert metadata;
	Get line number;
	Get column number

352.18. Add a class for search phase result. It allows to:

	Get request id;
	Get shard index;
	Get search shard target;
	Set search shard target;
	Set shard index;
	Handle query result;
	Fetch result

352.19. Add a class for search shard target. It allows to:

	Instantiate search shard target  with stream input;
	Instantiate search shard target  with shard id, original indices and original indices;
	Get node id;
	Get node id text;
	Get index;
	Get shard id;
	Get original indices;
	Get cluster  alias;
	Get search shard target fully qualified index name;
	Compare  to o search shard target;
	Write  to stream output;
	Check if search shard target equals;
	Hash code;
	Convert search shard target to string

352.20. Add a class for search sort values. It allows to:

	Instantiate search sort values;
	Instantiate search sort values  with sort value format;
	Instantiate search sort values  with stream input;
	Write  to stream output;
	Convert search sort values to X content;
	Process search sort values search sort values from X content;
	Get formatted sort values;
	Get raw sort values;
	Check if search sort values equals;
	Hash code

352.21. Add a class for search sort values tests. It allows to:

	Create test item;
	Handle random sort value;
	Handle random doc value format;
	Do parse instance;
	Create X context test instance;
	Create test instance;
	Get instance reader;
	Get shuffle fields exceptions;
	Convert test;
	Mutate instance

352.22. Add a class for search with rejections IT. It allows to:

	Handle node settings;
	Handle test open contexts after rejections

352.23. Add a class for stress search service reaper IT. It allows to:

	Handle node settings;
	Handle test stress reaper

353. Changes to package org.elasticsearch.search.aggregations:  

353.1. Add a class for abstract aggregation builder. It allows to:

	Instantiate abstract aggregation builder;
	Instantiate abstract aggregation builder  with clone abstract aggregation builder, aggregator factories builder, meta data map and meta data map;
	Instantiate abstract aggregation builder  with stream input;
	Write  to stream output;
	Do write  to stream output;
	Sub aggregation;
	Handle sub aggregations;
	Set meta data;
	Get meta data;
	Get writeable name;
	Build search context;
	Convert abstract aggregation builder to X content;
	Handle internal X content;
	Hash code;
	Do hash code;
	Check if abstract aggregation builder equals;
	Equals abstract aggregation builder

353.2. Add an object creator class for aggregation builders. It allows to:

	Instantiate aggregation builders;
	Get count;
	Process aggregation builders aggregation builders avg;
	Handle weighted avg;
	Get max;
	Get min;
	Get sum;
	Get stats;
	Handle extended stats;
	Get filter;
	Get filters;
	Get adjacency matrix;
	Get sampler;
	Handle diversified sampler;
	Handle global;
	Missing aggregation builders;
	Get nested;
	Nested aggregation builders;
	Geo distance;
	Get histogram;
	Handle geohash grid;
	Geotile grid;
	Handle significant terms;
	Handle significant text;
	Get date histogram;
	Get range;
	Get date range;
	Ip range;
	Get terms;
	Get percentiles;
	Handle percentile ranks;
	Handle median absolute deviation;
	Get cardinality;
	Handle top hits;
	Geo bounds;
	Get geo centroid;
	Get scripted metric;
	Handle composite

353.3. Add a class for aggregation collector tests. It allows to:

	Handle test needs scores;
	Handle needs scores

353.4. Add a class for aggregation execution exception. It allows to:

	Instantiate aggregation execution exception;
	Instantiate aggregation execution exception  with cause throwable;
	Instantiate aggregation execution exception  with stream input

353.5. Add a class for aggregation initialization exception. It allows to:

	Instantiate aggregation initialization exception;
	Instantiate aggregation initialization exception  with cause throwable;
	Instantiate aggregation initialization exception  with stream input

353.6. Add a class for aggregation phase. It allows to:

	Instantiate aggregation phase;
	Pre process;
	Execute search context

353.7. Add a class for aggregation test scripts plugin. It allows to:

	Plugin scripts

353.8. Add a class for aggregations. It allows to:

	Instantiate aggregations;
	Instantiate aggregations  with aggregations list;
	Get iterator;
	Process aggregations aggregations as list;
	Process aggregations aggregations as map;
	Get aggregations as map;
	Get aggregations;
	Check if aggregations equals;
	Hash code;
	Convert aggregations to X content;
	Convert aggregations to X content internal;
	Process aggregations aggregations from X content

353.9. Add a class for aggregations integration IT. It allows to:

	Handle setup suite scope cluster;
	Handle test scroll

353.10. Add a class for aggregations tests. It allows to:

	Get aggs tests;
	X content registry;
	Handle init;
	Clean aggregations tests;
	Test all aggs are being tested;
	Handle test from X content;
	Handle test from X content with random fields;
	Parse aggregations tests;
	Handle test parsing exception on unknown aggregation;
	Create test instance;

353.11. Add a class for aggregator base. It allows to:

	Instantiate aggregator base  with aggregator factories, search context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Add request circuit breaker bytes;
	Score mode;
	Handle meta data;
	Get pipeline aggregators;
	Get leaf collector;
	Pre get sub leaf collectors;
	Do pre collection;
	Pre collection;
	Name aggregator base;
	Get parent;
	Handle sub aggregators;
	Sub aggregator;
	Get context;
	Post collection;
	Close aggregator base;
	Do aggregator base close;
	Do post collection;
	Build empty sub aggregations;
	Convert aggregator base to string

353.12. Add a class for aggregator factories tests. It allows to:

	Set aggregator factories tests;
	Handle test get aggregator factories returns unmodifiable list;
	Handle test get pipeline aggregator factories returns unmodifiable list;
	Test two types;
	Handle test invalid aggregation name;
	Handle test missing name;
	Handle test missing type;
	Handle test rewrite;
	X content registry

353.13. Add an interface declaration  for base aggregation builder. It allows to:

	Get type;
	Set meta data;
	Handle sub aggregations

353.14. Add a class for base aggregation test case. It allows to:

	Create test aggregator builder;
	Handle test from X content;
	Handle test from X content multi;
	Handle test serialization multi;
	Convert test;
	Parse X content parser;
	Handle test serialization;
	Handle test equals and hashcode;
	Handle test shallow copy;
	Copy aggregation;
	Handle random numeric field;
	Handle random field or script;
	Create test aggregator builders

353.15. Add a class for base pipeline aggregation test case. It allows to:

	Get current types;
	Create test aggregator factory;
	Set base pipeline aggregation test case;
	Handle test from X content;
	Parse X content parser;
	Handle test serialization;
	Handle test equals and hashcode;
	Copy aggregation;
	Get random types;
	Handle random numeric field;
	X content registry

353.16. Add a class for bucket collector. It allows to:

	Get leaf collector;
	Pre collection;
	Post collection;
	Score mode;

353.17. Add a class for bucket order. It allows to:

	Get count;
	Handle key;
	Get aggregation;
	Get compound;
	Get comparator;
	I bucket order;
	Hash code;
	Check if bucket order equals;
	Write  to stream output;
	Convert bucket order to string

353.18. Add a class for combi IT. It allows to:

	Handle test multiple aggs on same field with different required value source type;
	Handle test sub aggregation for top aggregation on unmapped field

353.19. Add a class for filters aggs rewrite IT. It allows to:

	Handle test wrapper query is rewritten

353.20. Add an interface declaration  for has aggregations. It allows to:

	Get aggregations

353.21. Add a class for internal aggregations. It allows to:

	Instantiate internal aggregations;
	Instantiate internal aggregations  with aggregations list;
	Instantiate internal aggregations  with aggregations list, top level pipeline aggregators list and top level pipeline aggregators list;
	Get top level pipeline aggregators;
	Reduce aggregations list;
	Read aggregations;
	Read  from stream input;
	Write  to stream output

353.22. Add a class for internal order tests. It allows to:

	Create test instance;
	Get random order;
	Get instance reader;
	Do parse instance;
	Assert equal instances;
	Handle test aggregation order equals and hash code;
	Mutate instance

353.23. Add a class for internal single bucket aggregation test case. It allows to:

	Set internal single bucket aggregation test case;
	Create test instance;
	Handle extra assert reduced;
	Mutate instance;
	Reduced reduced;
	Assert aggregation from X content;
	Get implementation class

353.24. Add a class for invalid aggregation path exception. It allows to:

	Instantiate invalid aggregation path exception;
	Instantiate invalid aggregation path exception  with cause throwable;
	Instantiate invalid aggregation path exception  with stream input

353.25. Add an interface declaration  for key comparable. It allows to:

	Compare key

353.26. Add a class for leaf bucket collector. It allows to:

	Set scorer;
	Collect;
	Wrap collectors iterable;
	Collect leaf bucket collector;

353.27. Add a class for leaf bucket collector base. It allows to:

	Instantiate leaf bucket collector base  with sub leaf bucket collector;
	Set scorer;
	Collect leaf bucket collector base

353.28. Add an object creator class for matrix stats aggregation builders. It allows to:

	Handle matrix stats

353.29. Add a class for meta data IT. It allows to:

	Handle test meta data set on aggregation result;
	Assert meta data

353.30. Add a class for missing value IT. It allows to:

	Handle maximum number of shards;
	Handle setup suite scope cluster;
	Handle test unmapped terms;
	Handle test string terms;
	Handle test long terms;
	Handle test double terms;
	Handle test unmapped histogram;
	Handle test histogram;
	Handle test date histogram;
	Handle test cardinality;
	Handle test percentiles;
	Handle test stats;
	Handle test unmapped geo bounds;
	Handle test geo bounds;
	Handle test geo centroid

353.31. Add a class for multi bucket aggregator wrapper tests. It allows to:

	Handle test no null scorer is delegated

353.32. Add a class for non collecting aggregator. It allows to:

	Instantiate non collecting aggregator  with search context, parent aggregator, sub factories, pipeline aggregators list, meta data map and meta data map;
	Instantiate non collecting aggregator  with search context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Get leaf collector;
	Build aggregation

353.33. Add a class for parsed aggregation. It allows to:

	Declare aggregation fields;
	Get name;
	Set name;
	Get meta data;
	Convert parsed aggregation to X content;
	Do X content body;
	Parse double

353.34. Add a class for pipeline aggregation builder. It allows to:

	Instantiate pipeline aggregation builder;
	Get name;
	Get buckets paths;
	Validate parent aggregator factory;
	Create pipeline aggregation builder;
	Set meta data;
	Handle sub aggregations;
	Convert pipeline aggregation builder to string

353.35. Add a class for search context aggregations. It allows to:

	Instantiate search context aggregations  with aggregator factories, multi bucket consumer and multi bucket consumer;
	Get factories;
	Get aggregators;
	Handle aggregators;
	Get multi bucket consumer;
	Reset bucket multi consumer

353.36. Add a class for sub agg collection mode tests. It allows to:

	Handle test valid ordinals;
	Handle testwrite to;
	Handle test read from;
	Handle test invalid read from

354. Changes to package org.elasticsearch.search.aggregations.bucket:  

354.1. Add a class for abstract terms test case. It allows to:

	Handle random execution hint;
	Get sum of doc counts;
	Handle test other doc count

354.2. Add a class for best buckets deferring collector tests. It allows to:

	Handle test replay;
	Score mode;
	Get bla;
	Get leaf collector;
	Collect;
	Pre collection;
	Post collection;

354.3. Add a class for boolean terms IT. It allows to:

	Handle setup suite scope cluster;
	Handle test single value field;
	Handle test multi value field;
	Handle test unmapped

354.4. Add a class for bucket utils. It allows to:

	Instantiate bucket utils;
	Suggest shard side queue size

354.5. Add a class for bucket utils tests. It allows to:

	Handle test bad input;
	Handle test over flow;
	Handle test shard size is greater than global size

354.6. Add a class for buckets aggregator. It allows to:

	Instantiate buckets aggregator  with aggregator factories, search context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Max bucket ord;
	Grow buckets aggregator;
	Collect bucket;
	Collect existing bucket;
	Merge buckets;
	Get doc counts;
	Handle increment bucket doc count;
	Get bucket doc count;
	Consume buckets and  maybe break;
	Get bucket aggregations;
	Get bucket empty aggregations;
	Close buckets aggregator

354.7. Add a class for date histogram IT. It allows to:

	Get date;
	Get format;
	Get index doc;
	Handle setup suite scope cluster;
	Add expected bucket;
	Get multi sort docs;
	Handle node plugins;
	Process date histogram IT date histogram IT after each test;
	Get bucket key  as string;
	Handle test single valued field;
	Handle test single valued field with time zone;
	Handle test single valued time zone epoch;
	Handle test single valued field ordered by key asc;
	Handle test single valued field ordered by key desc;
	Handle test single valued field ordered by count asc;
	Handle test single valued field ordered by count desc;
	Handle test single valued field with sub aggregation;
	Handle test single valued field ordered by sub aggregation asc;
	Handle test single valued field ordered by sub aggregation desc;
	Handle test single valued field ordered by multi valued sub aggregation desc;
	Handle test single valued field ordered by tie breaker;
	Handle test single valued field ordered by illegal agg;
	Handle test single valued field with value script;
	Handle test multi valued field;
	Handle test multi valued field ordered by count desc;
	Handle test multi valued field with value script;
	Handle test script single value;
	Handle test script multi valued;
	Handle test unmapped;
	Handle test partially unmapped;
	Handle test empty aggregation;
	Handle test single value with time zone;
	Handle test single value field with extended bounds;
	Handle test single value field with extended bounds timezone;
	Handle test single value field with extended bounds offset;
	Handle test single value with multiple date formats from mapping;
	Handle test issue 6965;
	Handle test DST boundary issue 9491;
	Handle test issue 8209;
	Handle test exception on negative interval;
	Handle test format index unmapped;
	Handle test rewrite time zone epoch millis format;
	Handle test DST end transition;
	Handle test dont cache scripts;
	Handle test single valued field ordered by single value sub aggregation asc and key desc;
	Handle test single valued field ordered by single value sub aggregation asc and key asc;
	Handle test single valued field ordered by single value sub aggregation desc and key asc;
	Handle test single valued field ordered by count asc and single value sub aggregation asc;
	Handle test single valued field ordered by single value sub aggregation asc single value sub aggregation asc;
	Handle test single valued field ordered by three criteria;
	Handle test single valued field ordered by single value sub aggregation asc as compound;
	Assert multi sort response;
	Handle key;
	Handle test date nanos histogram;
	Handle test date key formatting

354.8. Add a class for date histogram offset IT. It allows to:

	Get date;
	Process date histogram offset IT date histogram offset IT before each test;
	Process date histogram offset IT date histogram offset IT after each test;
	Prepare index;
	Handle test single value with positive offset;
	Handle test single value with negative offset;
	Handle test single value with offset min doc count;
	Check bucket  for histogram bucket

354.9. Add a class for date range IT. It allows to:

	Get index doc;
	Get date;
	Handle setup suite scope cluster;
	Handle node plugins;
	Handle test date math;
	Handle test single value field;
	Handle test single value field with string dates;
	Handle test single value field with string dates with custom format;
	Handle test single value field with date math;
	Handle test single value field with custom key;
	Handle test single valued field with sub aggregation;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test script single value;
	Handle test script multi valued;
	Handle test unmapped;
	Handle test unmapped with string dates;
	Handle test partially unmapped;
	Handle test empty aggregation;
	Handle test no ranges in query;
	Handle test dont cache scripts;
	Handle test range with format string value;
	Handle test range with format numeric value;
	Check buckets;
	Assert bucket

354.10. Add a class for date range tests. It allows to:

	Create test aggregator builder;
	Handle test parsing range strict

354.11. Add a class for date script mocks plugin. It allows to:

	Plugin scripts

354.12. Add a class for deferable bucket aggregator. It allows to:

	Instantiate deferable bucket aggregator  with aggregator factories, search context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Do pre collection;
	Check if deferable bucket aggregator descends from global aggregator;
	Get deferring collector;
	Defer aggregator;
	Run deferred collections

354.13. Add a class for diversified sampler IT. It allows to:

	Handle random execution hint;
	Handle setup suite scope cluster;
	Handle test issue 10719;
	Handle test simple diversity;
	Handle test nested diversity;
	Handle test nested samples;
	Handle test partially unmapped diversify field;
	Handle test wholly unmapped diversify field;
	Handle test ridiculous size diversity

354.14. Add a class for filter IT. It allows to:

	Handle setup suite scope cluster;
	Handle test simple;
	Handle test empty filter declarations;
	Handle test with sub aggregation;
	Handle test as sub aggregation;
	Handle test with context based sub aggregation;
	Handle test empty aggregation

354.15. Add an object creator class for filter tests. It allows to:

	Create test aggregator builder

354.16. Add a class for filters IT. It allows to:

	Handle setup suite scope cluster;
	Handle test simple;
	Handle test empty filter declarations;
	Handle test with sub aggregation;
	Handle test as sub aggregation;
	Handle test with context based sub aggregation;
	Handle test empty aggregation;
	Handle test simple non keyed;
	Handle test other bucket;
	Handle test other named bucket;
	Handle test other non keyed;
	Handle test other with sub aggregation;
	Handle test empty aggregation with other bucket;
	Handle random order

354.17. Add a class for filters tests. It allows to:

	Create test aggregator builder;
	Handle test filters sorted by key;
	Handle test other bucket;
	Handle test rewrite;
	Handle test rewrite preserves other bucket

354.18. Add a class for geo distance IT. It allows to:

	Handle forbid private index settings;
	Get index city;
	Handle setup suite scope cluster;
	Handle test simple;
	Handle test simple with custom keys;
	Handle test unmapped;
	Handle test partially unmapped;
	Handle test with sub aggregation;
	Handle test empty aggregation;
	Handle test no ranges in query;
	Handle test multi values

354.19. Add a class for geo distance range tests. It allows to:

	Create test aggregator builder;
	Handle test parsing range strict;
	Handle test parsing null

354.20. Add a class for geo hash grid IT. It allows to:

	Handle forbid private index settings;
	Get index city;
	Handle setup suite scope cluster;
	Handle test simple;
	Handle test multivalued;
	Handle test filtered;
	Handle test unmapped;
	Handle test partially unmapped;
	Handle test top match;
	Handle test size is zero;
	Handle test shard size is zero

354.21. Add a class for geo hash grid tests. It allows to:

	Create test aggregator builder

354.22. Add a class for global aggregator tests. It allows to:

	Handle test no docs;
	Test some docs;
	Handle test case

354.23. Add a class for global IT. It allows to:

	Handle setup suite scope cluster;
	Handle test with stats sub aggregator;
	Handle test non top level

354.24. Add an object creator class for global tests. It allows to:

	Create test aggregator builder

354.25. Add a class for histogram tests. It allows to:

	Create test aggregator builder;
	Handle test invalid bounds;
	Handle random order

354.26. Add a class for internal single bucket aggregation. It allows to:

	Instantiate internal single bucket aggregation  with internal aggregations, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal single bucket aggregation  with stream input;
	Do write  to stream output;
	Get doc count;
	Get aggregations;
	Create sub aggregations;
	Handle new aggregation;
	Reduce aggregations list;
	Get property;
	Do X content body;
	Equals internal single bucket aggregation;
	Do hash code

354.27. Add a class for ip range tests. It allows to:

	Handle random ip;
	Create test aggregator builder;
	Handle test mask

354.28. Add a class for missing IT. It allows to:

	Handle setup suite scope cluster;
	Handle test unmapped;
	Handle test partially unmapped;
	Handle test simple;
	Handle test with sub aggregation;
	Handle test empty aggregation

354.29. Add a class for missing tests. It allows to:

	Create test aggregator builder

354.30. Add an interface declaration  for multi bucket aggregation builder

354.31. Add a class for na N sorting IT. It allows to:

	Get builder;
	Get value;
	Get sort key;
	Sub aggregation;
	Handle setup suite scope cluster;
	Assert terms correctly sorted;
	Assert histogram correctly sorted;
	Handle test terms;
	Handle test string terms;
	Handle test long terms;
	Handle test double terms;
	Handle test long histogram

354.32. Add a class for nested IT. It allows to:

	Handle setup suite scope cluster;
	Handle test simple;
	Handle test non existing nested field;
	Handle test nested with sub terms agg;
	Handle test nested as sub aggregation;
	Handle test nest nested aggs;
	Handle test empty aggregation;
	Handle test nested on object field;
	Handle test parent filter resolved correctly;
	Handle test nested same doc id processed multiple time;
	Handle test filter agg inside nested agg;
	Handle test extract inner hit builders with duplicate hit name;
	Handle test extract inner hit builders with duplicate path

354.33. Add a class for parsed single bucket aggregation. It allows to:

	Get doc count;
	Set doc count;
	Get aggregations;
	Do X content body;
	Parse X content

354.34. Add a class for range tests. It allows to:

	Create test aggregator builder;
	Handle test parsing range strict;
	Handle test parsing null

354.35. Add a class for reverse nested IT. It allows to:

	Handle setup suite scope cluster;
	Insert idx 1;
	Insert idx 2;
	Convert test simple reverse nested;
	Convert test simple nested 1;
	Handle test reverse nested agg without nested agg;
	Handle test non existing nested field;
	Handle test same parent doc having multiple buckets;
	Handle test field alias

354.36. Add a class for sampler IT. It allows to:

	Handle random execution hint;
	Handle setup suite scope cluster;
	Handle test issue 10719;
	Handle test simple sampler;
	Handle test unmapped child agg no diversity;
	Handle test partially unmapped child agg no diversity;
	Handle test ridiculous shard size sampler

354.37. Add a class for sampler tests. It allows to:

	Create test aggregator builder

354.38. Add a class for shard reduce IT. It allows to:

	Get index doc;
	Handle setup suite scope cluster;
	Handle test global;
	Handle test filter;
	Handle test missing;
	Handle test global with filter with missing;
	Handle test nested;
	Handle test string terms;
	Handle test long terms;
	Handle test double terms;
	Handle test range;
	Handle test date range;
	Handle test ip range;
	Handle test histogram;
	Handle test date histogram;
	Handle test geo hash grid;
	Handle test geo tile grid

354.39. Add a class for shard size terms IT. It allows to:

	Handle test no shard size string;
	Handle test shard size equals size string;
	Handle test with shard size string;
	Handle test with shard size string single shard;
	Handle test no shard size term order string;
	Handle test no shard size long;
	Handle test shard size equals size long;
	Handle test with shard size long;
	Handle test with shard size long single shard;
	Handle test no shard size term order long;
	Handle test no shard size double;
	Handle test shard size equals size double;
	Handle test with shard size double;
	Handle test with shard size double single shard;
	Handle test no shard size term order double

354.40. Add a class for shard size test case. It allows to:

	Get number of shards;
	Create idx;
	Handle index data;
	Get index doc

354.41. Add a class for significant terms tests. It allows to:

	Create test aggregator builder;
	Get significance heuristic;
	Get significant terms tests

354.42. Add a class for significant text tests. It allows to:

	Create test aggregator builder

354.43. Add an interface declaration  for single bucket aggregation. It allows to:

	Get doc count;
	Get aggregations

354.44. Add an interface declaration  for single bucket aggregator. It allows to:

	Get bucket doc count

354.45. Add a class for terms doc count error IT. It allows to:

	Handle random execution hint;
	Handle setup suite scope cluster;
	Assert doc count error  within bounds;
	Assert no doc count error;
	Assert no doc count error single response;
	Assert unbounded doc count error;
	Handle test string value field;
	Handle test string value field single shard;
	Handle test string value field with routing;
	Handle test string value field doc count asc;
	Handle test string value field term sort asc;
	Handle test string value field term sort desc;
	Handle test string value field sub agg asc;
	Handle test string value field sub agg desc;
	Handle test long value field;
	Handle test long value field single shard;
	Handle test long value field with routing;
	Handle test long value field doc count asc;
	Handle test long value field term sort asc;
	Handle test long value field term sort desc;
	Handle test long value field sub agg asc;
	Handle test long value field sub agg desc;
	Handle test double value field;
	Handle test double value field single shard;
	Handle test double value field with routing;
	Handle test double value field doc count asc;
	Handle test double value field term sort asc;
	Handle test double value field term sort desc;
	Handle test double value field sub agg asc;
	Handle test double value field sub agg desc;
	Handle test fixed docs

354.46. Add a class for terms shard min doc count IT. It allows to:

	Handle random execution hint;
	Handle test shard min doc count significant terms test;
	Add terms docs;
	Handle test shard min doc count terms test;

354.47. Add a class for terms tests. It allows to:

	Create test aggregator builder;
	Handle random order

355. Changes to package org.elasticsearch.search.aggregations.bucket.adjacency:  

355.1. Add a class for adjacency matrix aggregation builder. It allows to:

	Parse X content parser;
	Check consistency;
	Set filters  as map;
	Set filters  as list;
	Instantiate adjacency matrix aggregation builder;
	Instantiate adjacency matrix aggregation builder  with filters map;
	Instantiate adjacency matrix aggregation builder  with clone adjacency matrix aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate adjacency matrix aggregation builder  with stream input;
	Do write  to stream output;
	Get separator;
	Get filters;
	Build search context;
	Handle internal X content;
	Do hash code;
	Equals adjacency matrix aggregation builder;
	Get type

355.2. Add a class for adjacency matrix aggregation builder tests. It allows to:

	Handle test filter size limitation

355.3. Add an object creator class for adjacency matrix aggregator factory. It allows to:

	Instantiate adjacency matrix aggregator factory  with filters list, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create internal

355.4. Add a class for internal adjacency matrix tests. It allows to:

	Max number  of buckets;
	Set internal adjacency matrix tests;
	Create test instance;
	Reduced reduced internal adjacency matrix;
	Get instance reader;
	Get implementation class;
	Mutate instance

356. Changes to package org.elasticsearch.search.aggregations.bucket.composite:  

356.1. Add a class for composite aggregation builder. It allows to:

	Parse X content parser;
	Instantiate composite aggregation builder;
	Instantiate composite aggregation builder  with sources list;
	Instantiate composite aggregation builder  with clone composite aggregation builder, aggregator factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate composite aggregation builder  with stream input;
	Do write  to stream output;
	Get type;
	Set sources;
	Get sources;
	Handle aggregate after;
	Get size;
	Check parent is null or nested;
	Build search context;
	Handle internal X content;
	Do hash code;
	Equals composite aggregation builder

356.2. Add a class for composite aggregation builder tests. It allows to:

	Handle random date histogram source builder;
	Handle random terms source builder;
	Handle random histogram source builder;
	Create test aggregator builder

356.3. Add an object creator class for composite aggregation factory. It allows to:

	Instantiate composite aggregation factory  with search context, parent aggregator factory, sub factories builder, meta data map, sources config, after key and after key;
	Create internal

356.4. Add a class for composite aggregator tests. It allows to:

	Set composite aggregator tests;
	Tear composite aggregator tests;
	Handle test unmapped field;
	Handle test with keyword;
	Handle test with keyword and missing bucket;
	Handle test with keyword missing after;
	Handle test with keyword desc;
	Handle test multi valued with keyword;
	Handle test multi valued with keyword desc;
	Handle test with keyword and long;
	Handle test with keyword and long desc;
	Handle test with keyword long and missing bucket;
	Handle test multi valued with keyword and long;
	Handle test multi valued with keyword and long desc;
	Handle test multi valued with keyword long and double;
	Handle test with date histogram;
	Handle test with date terms;
	Handle test with date histogram and format;
	Handle test that date histogram fails format after;
	Handle test with date histogram and time zone;
	Handle test with date histogram and keyword;
	Handle test with keyword and histogram;
	Handle test with histogram and keyword;
	Handle test with keyword and date histogram;
	Handle test with keyword and top hits;
	Handle test with terms sub agg execution mode;
	Handle test random strings;
	Handle test random longs;
	Handle test random ints;
	Handle test random terms;
	Handle test with IP;
	Handle test search case;
	Execute test case;
	Add document to document;
	Create composite aggregator tests after key;
	Create document;
	As long

356.5. Add a class for composite key. It allows to:

	Instantiate composite key  with values comparable;
	Instantiate composite key  with stream input;
	Write  to stream output;
	Get values;
	Get size;
	Get composite key;
	Check if composite key equals;
	Hash code;
	Convert composite key to string

356.6. Add a class for composite values source builder. It allows to:

	Instantiate composite values source builder;
	Instantiate composite values source builder  with value type;
	Instantiate composite values source builder  with stream input;
	Write  to stream output;
	Handle inner write to;
	Do X content body;
	Convert composite values source builder to X content;
	Hash code;
	Handle inner hash code;
	Check if composite values source builder equals;
	Handle inner equals;
	Name composite values source builder;
	Get type;
	Get field;
	Get script;
	Get value type;
	Missing bucket;
	Get order;
	Get format;
	Handle inner build;
	Build search context

356.7. Add a class for composite values source config. It allows to:

	Instantiate composite values source config  with mapped field type, vs values source, doc value format, sort order and sort order;
	Name composite values source config;
	Get field type;
	Get values source;
	Get format;
	Missing bucket;
	Reverse mul

356.8. Add a class for composite values source parser helper. It allows to:

	Declare values source fields;
	Write  to composite values source builder;
	Read  from stream input;
	Process composite values source parser helper composite values source parser helper from X content;
	Convert composite values source parser helper to X content

356.9. Add a class for date histogram values source builder. It allows to:

	Parse X content parser;
	Instantiate date histogram values source builder;
	Instantiate date histogram values source builder  with stream input;
	Handle inner write to;
	Do X content body;
	Handle inner hash code;
	Handle inner equals;
	Get type;
	Get interval;
	Get date histogram interval;
	Get time zone;
	Rounding date histogram values source builder;
	Handle inner build

356.10. Add a class for histogram values source. It allows to:

	Instantiate histogram values source  with vs numeric;
	Check if histogram values source is floating point;
	Handle double values;
	Handle next value;
	Handle doc value count;
	Handle advance exact;
	Get bytes values;
	Long values

356.11. Add a class for histogram values source builder. It allows to:

	Parse X content parser;
	Instantiate histogram values source builder;
	Instantiate histogram values source builder  with stream input;
	Handle inner write to;
	Do X content body;
	Handle inner hash code;
	Handle inner equals;
	Get type;
	Get interval;
	Handle inner build

356.12. Add a class for internal composite tests. It allows to:

	Handle random doc value format;
	Set internal composite tests;
	Tear internal composite tests;
	Get instance reader;
	Get implementation class;
	Parse internal aggregation;
	Create composite key;
	Get key comparator;
	Create test instance;
	Mutate instance;
	Reduced reduced internal composite;
	Handle test reduce same;
	Handle test compare composite key bigger field name;
	Handle test compare composite key smaller field name;
	Handle test compare composite key bigger value;
	Handle test compare composite key smaller value;
	Handle test compare composite key null value is smaller 1;
	Convert test compare composite key null value is smaller;
	Handle test compare composite key more fields is greater;
	Handle test compare composite key less fields is lesser;
	Handle test compare composite key equal;
	Handle test compare composite key values have different types;
	Create map

356.13. Add a class for rounding values source. It allows to:

	Instantiate rounding values source  with vs numeric, rounding and rounding;
	Check if rounding values source is floating point;
	Get round;
	Long values;
	Handle next value;
	Handle doc value count;
	Handle advance exact;
	Get doc ID;
	Handle next doc;
	Get advance;
	Get cost;
	Get bytes values;
	Handle double values

356.14. Add a class for terms values source builder. It allows to:

	Parse X content parser;
	Instantiate terms values source builder;
	Instantiate terms values source builder  with stream input;
	Handle inner write to;
	Do X content body;
	Handle inner hash code;
	Handle inner equals;
	Get type;
	Handle inner build

357. Changes to package org.elasticsearch.search.aggregations.bucket.filter:  

357.1. Add an interface declaration  for filter

357.2. Add a class for filter aggregation builder. It allows to:

	Instantiate filter aggregation builder  with filter query builder;
	Instantiate filter aggregation builder  with clone filter aggregation builder, aggregator factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate filter aggregation builder  with stream input;
	Do write  to stream output;
	Rewrite query rewrite context;
	Build search context;
	Handle internal X content;
	Parse X content parser;
	Do hash code;
	Equals filter aggregation builder;
	Get type;
	Get filter

357.3. Add an object creator class for filter aggregator. It allows to:

	Instantiate filter aggregator  with filter supplier, aggregator factories, search context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Get leaf collector;
	Collect;
	Build aggregation;
	Build empty aggregation

357.4. Add a class for filter aggregator factory. It allows to:

	Instantiate filter aggregator factory  with filter builder, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Get weight;
	Create internal

357.5. Add a class for filter aggregator tests. It allows to:

	Set up test;
	Handle test empty;
	Handle test random

357.6. Add a class for filters aggregation builder. It allows to:

	Instantiate filters aggregation builder  with filters;
	Instantiate filters aggregation builder  with filters list;
	Instantiate filters aggregation builder  with filters query builder;
	Instantiate filters aggregation builder  with clone filters aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate filters aggregation builder  with stream input;
	Do write  to stream output;
	Handle other bucket;
	Get filters;
	Check if filters aggregation builder is keyed;
	Handle other bucket key;
	Rewrite query rewrite context;
	Build search context;
	Handle internal X content;
	Parse X content parser;
	Do hash code;
	Equals filters aggregation builder;
	Get type

357.7. Add a class for filters aggregator factory. It allows to:

	Instantiate filters aggregator factory  with filters list, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Get weights;
	Create internal

357.8. Add a class for filters aggregator tests. It allows to:

	Set up test;
	Handle test empty;
	Handle test keyed filter;
	Handle test random

357.9. Add a class for internal filter. It allows to:

	Instantiate internal filter  with sub aggregations, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal filter  with stream input;
	Get writeable name;
	Handle new aggregation

357.10. Add a class for internal filter tests. It allows to:

	Create test instance;
	Handle extra assert reduced;
	Get instance reader;
	Get implementation class

357.11. Add a class for internal filters tests. It allows to:

	Set internal filters tests;
	Create test instance;
	Reduced reduced internal filters;
	Get instance reader;
	Get implementation class;
	Mutate instance

357.12. Add a class for parsed filter. It allows to:

	Get type;
	Process parsed filter parsed filter from X content

358. Changes to package org.elasticsearch.search.aggregations.bucket.geogrid:  

358.1. Add an object creator class for geo hash grid aggregator. It allows to:

	Instantiate geo hash grid aggregator  with aggregator factories, values source, aggregation context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Build aggregation;
	Build empty aggregation;
	Handle new empty bucket

358.2. Add an object creator class for geo hash grid aggregator factory. It allows to:

	Instantiate geo hash grid aggregator factory  with values source config, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create unmapped;
	Build empty aggregation;
	Do create internal

358.3. Add a class for geo hash grid aggregator tests. It allows to:

	Handle random precision;
	Hash geo hash grid aggregator tests as string;
	Create builder

358.4. Add a class for geo hash grid parser tests. It allows to:

	Handle test parse valid from ints;
	Handle test parse valid from strings;
	Handle test parse distance unit precision;
	Handle test parse invalid unit precision;
	Handle test parse distance unit precision too small;
	Handle test parse error on boolean precision;
	Handle test parse error on precision out of range

358.5. Add a class for internal geo hash grid. It allows to:

	Instantiate internal geo hash grid  with buckets list, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal geo hash grid  with stream input;
	Create buckets list;
	Create bucket;
	Get bucket reader;
	Get writeable name

358.6. Add a class for parsed geo hash grid. It allows to:

	Process parsed geo hash grid parsed geo hash grid from X content;
	Get type

359. Changes to package org.elasticsearch.search.aggregations.bucket.global:  

359.1. Add an interface declaration  for global

359.2. Add a class for global aggregation builder. It allows to:

	Instantiate global aggregation builder;
	Instantiate global aggregation builder  with clone global aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate global aggregation builder  with stream input;
	Do write  to stream output;
	Build search context;
	Handle internal X content;
	Parse X content parser;
	Equals global aggregation builder;
	Do hash code;
	Get type

359.3. Add a class for global aggregator. It allows to:

	Instantiate global aggregator  with sub factories, aggregation context, pipeline aggregators list, meta data map and meta data map;
	Get leaf collector;
	Build aggregation;
	Build empty aggregation

359.4. Add an object creator class for global aggregator factory. It allows to:

	Instantiate global aggregator factory  with search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create internal

359.5. Add a class for internal global. It allows to:

	Instantiate internal global  with internal aggregations, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal global  with stream input;
	Get writeable name;
	Handle new aggregation

359.6. Add a class for internal global tests. It allows to:

	Create test instance;
	Handle extra assert reduced;
	Get instance reader;
	Get implementation class

359.7. Add a class for parsed global. It allows to:

	Get type;
	Process parsed global parsed global from X content

360. Changes to package org.elasticsearch.search.aggregations.bucket.histogram:  

360.1. Add a class for date histogram aggregation builder. It allows to:

	Parse X content parser;
	Instantiate date histogram aggregation builder;
	Instantiate date histogram aggregation builder  with clone date histogram aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate date histogram aggregation builder  with stream input;
	Handle inner write to;
	Get interval;
	Get date histogram interval;
	Offset date histogram aggregation builder;
	Parse string offset;
	Handle extended bounds;
	Get order;
	Get keyed;
	Min doc count;
	Do X content body;
	Get type;
	Rewrite time zone;
	Handle inner build;
	Get interval  as date time unit;
	Get interval  as time value;
	Rounding time zone id;
	Handle inner hash code;
	Handle inner equals

360.2. Add a class for date histogram aggregator. It allows to:

	Instantiate date histogram aggregator  with aggregator factories, rounding, shard rounding, bucket order, extended bounds, values source numeric, formatter, aggregation context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Score mode;
	Get leaf collector;
	Build aggregation;
	Build empty aggregation;
	Do date histogram aggregator close

360.3. Add a class for date histogram aggregator factory. It allows to:

	Instantiate date histogram aggregator factory  with values source config, bucket order, rounding, shard rounding, extended bounds, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Min doc count;
	Do create internal;
	Create aggregator;
	Create unmapped

360.4. Add a class for date histogram aggregator tests. It allows to:

	Handle test match no docs;
	Handle test match all docs;
	Handle test no docs;
	Handle test aggregate wrong field;
	Handle test interval year;
	Handle test interval month;
	Handle test interval day;
	Handle test interval hour;
	Handle test interval minute;
	Handle test interval second;
	Handle test min doc count;
	Handle test max bucket;
	Handle test search case;
	Handle test search and reduce case;
	Test both cases;
	Execute test case;
	As long

360.5. Add a class for date histogram interval. It allows to:

	Get seconds;
	Get minutes;
	Get hours;
	Get days;
	Get weeks;
	Instantiate date histogram interval;
	Instantiate date histogram interval  with stream input;
	Write  to stream output;
	Convert date histogram interval to string;
	Hash code;
	Check if date histogram interval equals;
	Convert date histogram interval to X content

360.6. Add a class for extended bounds. It allows to:

	Instantiate extended bounds;
	Instantiate extended bounds  with stream input;
	Write  to stream output;
	Parse search context;
	Get round;
	Convert extended bounds to X content;
	Hash code;
	Check if extended bounds equals;
	Get min;
	Get max;
	Convert extended bounds to string

360.7. Add a class for extended bounds tests. It allows to:

	Handle random extended bounds;
	Handle random parsed extended bounds;
	Handle unparsed;
	Handle test parse and validate;
	Handle test transport round trip;
	Handle test X content round trip

360.8. Add a class for histogram aggregation builder. It allows to:

	Parse X content parser;
	Instantiate histogram aggregation builder;
	Instantiate histogram aggregation builder  with clone histogram aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate histogram aggregation builder  with stream input;
	Handle inner write to;
	Get interval;
	Offset histogram aggregation builder;
	Bound histogram aggregation builder;
	Handle extended bounds;
	Get order;
	Get keyed;
	Min doc count;
	Do X content body;
	Get type;
	Handle inner build;
	Handle inner hash code;
	Handle inner equals

360.9. Add a class for histogram aggregator. It allows to:

	Instantiate histogram aggregator  with aggregator factories, bucket order, values source numeric, formatter, search context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Score mode;
	Get leaf collector;
	Build aggregation;
	Build empty aggregation;
	Do histogram aggregator close

360.10. Add a class for histogram aggregator factory. It allows to:

	Instantiate histogram aggregator factory  with values source config, bucket order, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Min doc count;
	Do create internal;
	Create aggregator;
	Create unmapped

360.11. Add a class for histogram aggregator tests. It allows to:

	Handle test longs;
	Handle test doubles;
	Handle test irrational interval;
	Handle test min doc count;
	Handle test missing;
	Handle test offset;
	Handle test extended bounds

360.12. Add an interface declaration  for histogram factory. It allows to:

	Get key;
	Handle next key;
	Create aggregation;
	Create bucket

360.13. Add a class for internal date histogram tests. It allows to:

	Set internal date histogram tests;
	Create test instance;
	Reduced reduced internal date histogram;
	Get instance reader;
	Get implementation class;
	Mutate instance

360.14. Add a class for internal histogram tests. It allows to:

	Set internal histogram tests;
	Get round;
	Create test instance;
	Convert test handles;
	Reduced reduced internal histogram;
	Get instance reader;
	Get implementation class;
	Mutate instance

361. Changes to package org.elasticsearch.search.aggregations.bucket.missing:  

361.1. Add a class for internal missing. It allows to:

	Instantiate internal missing  with internal aggregations, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal missing  with stream input;
	Get writeable name;
	Handle new aggregation

361.2. Add a class for internal missing tests. It allows to:

	Create test instance;
	Handle extra assert reduced;
	Get instance reader;
	Get implementation class

361.3. Add an interface declaration  for missing

361.4. Add a class for missing aggregation builder. It allows to:

	Parse X content parser;
	Instantiate missing aggregation builder  with target value type;
	Instantiate missing aggregation builder  with clone missing aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate missing aggregation builder  with stream input;
	Handle inner write to;
	Serialize target value type;
	Handle inner build;
	Do X content body;
	Handle inner hash code;
	Handle inner equals;
	Get type

361.5. Add a class for missing aggregator. It allows to:

	Instantiate missing aggregator  with aggregator factories, values source, aggregation context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Get leaf collector;
	Handle advance exact;
	Collect;
	Build aggregation;
	Build empty aggregation

361.6. Add an object creator class for missing aggregator factory. It allows to:

	Instantiate missing aggregator factory  with values source config, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create unmapped;
	Do create internal

361.7. Add a class for missing aggregator tests. It allows to:

	Handle test match no docs;
	Handle test match all docs;
	Handle test match sparse;
	Handle test missing field;
	Test both cases;
	Execute test case

361.8. Add a class for parsed missing. It allows to:

	Get type;
	Process parsed missing parsed missing from X content

362. Changes to package org.elasticsearch.search.aggregations.bucket.nested:  

362.1. Add a class for internal nested. It allows to:

	Instantiate internal nested  with internal aggregations, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal nested  with stream input;
	Get writeable name;
	Handle new aggregation

362.2. Add a class for internal nested tests. It allows to:

	Create test instance;
	Handle extra assert reduced;
	Get instance reader;
	Get implementation class;
	Assert aggregation internal nested from X content

362.3. Add a class for internal reverse nested. It allows to:

	Instantiate internal reverse nested  with internal aggregations, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal reverse nested  with stream input;
	Get writeable name;
	Handle new aggregation

362.4. Add a class for internal reverse nested tests. It allows to:

	Create test instance;
	Handle extra assert reduced;
	Get instance reader;
	Get implementation class;
	Assert aggregation internal reverse nested from X content

362.5. Add an interface declaration  for nested

362.6. Add a class for nested aggregation builder. It allows to:

	Instantiate nested aggregation builder;
	Instantiate nested aggregation builder  with clone nested aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate nested aggregation builder  with stream input;
	Do write  to stream output;
	Get path;
	Build search context;
	Handle internal X content;
	Parse X content parser;
	Do hash code;
	Equals nested aggregation builder;
	Get type

362.7. Add a class for nested aggregator tests. It allows to:

	Get field aliases;
	Handle test no docs;
	Handle test single nesting max;
	Handle test double nesting max;
	Handle test orphaned docs;
	Handle test reset root doc id;
	Handle test nested ordering;
	Handle test nested ordering random;
	Handle test pre get child leaf collectors;
	Handle test field alias;
	Generate max docs;
	Generate sum docs;
	Generate documents;
	Generate book

362.8. Add an object creator class for nested tests. It allows to:

	Create test aggregator builder

362.9. Add a class for parsed nested. It allows to:

	Get type;
	Process parsed nested parsed nested from X content

362.10. Add a class for parsed reverse nested. It allows to:

	Get type;
	Process parsed reverse nested parsed reverse nested from X content

362.11. Add an interface declaration  for reverse nested

362.12. Add a class for reverse nested aggregation builder. It allows to:

	Instantiate reverse nested aggregation builder;
	Instantiate reverse nested aggregation builder  with clone reverse nested aggregation builder, factories builder, map and map;
	Handle shallow copy;
	Instantiate reverse nested aggregation builder  with stream input;
	Do write  to stream output;
	Get path;
	Build search context;
	Find nested aggregator factory;
	Handle internal X content;
	Parse X content parser;
	Do hash code;
	Equals reverse nested aggregation builder;
	Get type

362.13. Add a class for reverse nested aggregator. It allows to:

	Instantiate reverse nested aggregator  with aggregator factories, object mapper, search context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Get leaf collector;
	Build aggregation;
	Build empty aggregation;
	Get parent filter

362.14. Add a class for reverse nested aggregator tests. It allows to:

	Get field aliases;
	Handle test no docs;
	Handle test max from parent docs;
	Handle test field alias

362.15. Add a class for reverse nested tests. It allows to:

	Create test aggregator builder

363. Changes to package org.elasticsearch.search.aggregations.bucket.range:  

363.1. Add an object creator class for abstract range aggregator factory. It allows to:

	Instantiate abstract range aggregator factory  with values source config, ranges, internal range factory, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create unmapped;
	Do create internal

363.2. Add a class for abstract range builder. It allows to:

	Instantiate abstract range builder  with internal range factory;
	Instantiate abstract range builder  with clone abstract range builder, aggregator factories builder, meta data map and meta data map;
	Instantiate abstract range builder  with stream input, internal range factory, range reader and range reader;
	Get process ranges;
	Sort ranges;
	Handle swap;
	Compare;
	Handle inner write to;
	Add range;
	Get ranges;
	Get keyed;
	Do X content body;
	Handle inner hash code;
	Handle inner equals

363.3. Add an object creator class for binary range aggregator factory. It allows to:

	Instantiate binary range aggregator factory  with values source config, ranges list, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create unmapped;
	Do create internal

363.4. Add a class for date range aggregation builder. It allows to:

	Parse X content parser;
	Parse range;
	Instantiate date range aggregation builder;
	Instantiate date range aggregation builder  with clone date range aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate date range aggregation builder  with stream input;
	Get type;
	Add range;
	Add unbounded  to;
	Add unbounded  from;
	Convert date time;
	Add unbounded  to to zoned date time;
	Add unbounded  from from zoned date time;
	Handle inner build

363.5. Add a class for date range aggregator factory. It allows to:

	Instantiate date range aggregator factory  with values source config, ranges aggregator range, internal range factory, search context, parent aggregator factory, sub factories builder, meta data map and meta data map

363.6. Add a class for internal binary range tests. It allows to:

	Min number  of buckets;
	Set internal binary range tests;
	Create test instance;
	Get instance reader;
	Get implementation class;
	Reduced reduced internal binary range;
	Handle internal range bucket class;
	Handle parsed range bucket class;
	Mutate instance;
	Handle test key generation

363.7. Add a class for internal date range tests. It allows to:

	Set internal date range tests;
	Create test instance;
	Get instance reader;
	Get implementation class;
	Handle internal range bucket class;
	Handle parsed range bucket class;
	Mutate instance

363.8. Add a class for internal geo distance tests. It allows to:

	Set internal geo distance tests;
	Get instance reader;
	Create test instance;
	Get implementation class;
	Handle internal range bucket class;
	Handle parsed range bucket class;
	Mutate instance

363.9. Add a class for internal range test case. It allows to:

	Set internal range test case;
	Create test instance;
	Reduced reduced;
	Assert bucket;
	Handle internal range bucket class;
	Handle parsed range bucket class

363.10. Add a class for internal range tests. It allows to:

	Set internal range tests;
	Create test instance;
	Get instance reader;
	Get implementation class;
	Handle internal range bucket class;
	Handle parsed range bucket class;
	Mutate instance

363.11. Add a class for ip range aggregator tests. It allows to:

	Handle random ip;
	Check if ip range aggregator tests is in range;
	Compare a bytes ref;
	Handle test ranges

363.12. Add a class for range aggregation builder. It allows to:

	Parse X content parser;
	Parse range;
	Instantiate range aggregation builder;
	Instantiate range aggregation builder  with stream input;
	Instantiate range aggregation builder  with clone range aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Add range;
	Add unbounded  to;
	Add unbounded  from;
	Handle inner build;
	Get type

363.13. Add a class for range aggregator factory. It allows to:

	Instantiate range aggregator factory  with values source config, ranges, range factory, search context, parent aggregator factory, sub factories builder, meta data map and meta data map

364. Changes to package org.elasticsearch.search.aggregations.bucket.sampler:  

364.1. Add a class for best docs deferring collector tests. It allows to:

	Handle test replay;
	Get test collector;
	Get leaf collector;
	Collect;
	Pre collection;
	Post collection;
	Score mode

364.2. Add a class for diversified aggregation builder. It allows to:

	Parse X content parser;
	Instantiate diversified aggregation builder;
	Instantiate diversified aggregation builder  with clone diversified aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate diversified aggregation builder  with stream input;
	Handle inner write to;
	Shard size;
	Max docs  per value;
	Get execution hint;
	Handle inner build;
	Do X content body;
	Handle inner hash code;
	Handle inner equals;
	Get type

364.3. Add a class for diversified aggregation builder tests. It allows to:

	Create test aggregator builder

364.4. Add an object creator class for diversified aggregator factory. It allows to:

	Instantiate diversified aggregator factory  with values source config, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Do create internal;
	Create unmapped;
	Build empty aggregation

364.5. Add a class for diversified sampler tests. It allows to:

	Handle test diversified sampler;
	Handle test ridiculous size;
	Handle test case;
	Handle test diversified sampler no docs

364.6. Add a class for internal sampler. It allows to:

	Instantiate internal sampler  with sub aggregations, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal sampler  with stream input;
	Get writeable name;
	Get type;
	Handle new aggregation

364.7. Add a class for internal sampler tests. It allows to:

	Create test instance;
	Handle extra assert reduced;
	Get instance reader;
	Get implementation class

364.8. Add a class for parsed sampler. It allows to:

	Get type;
	Process parsed sampler parsed sampler from X content

364.9. Add an interface declaration  for sampler

364.10. Add a class for sampler aggregation builder. It allows to:

	Instantiate sampler aggregation builder;
	Instantiate sampler aggregation builder  with clone sampler aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate sampler aggregation builder  with stream input;
	Do write  to stream output;
	Shard size;
	Build search context;
	Handle internal X content;
	Parse X content parser;
	Do hash code;
	Equals sampler aggregation builder;
	Get type

364.11. Add a class for sampler aggregator. It allows to:

	Create aggregator factories;
	Handle needs global ordinals;
	Process sampler aggregator sampler aggregator from string;
	Get execution mode;
	Convert sampler aggregator to string;
	Instantiate sampler aggregator  with aggregator factories, search context, parent aggregator, pipeline aggregators list, meta data map and meta data map;
	Score mode;
	Get deferring collector;
	Defer aggregator;
	Build aggregation;
	Build empty aggregation;
	Get leaf collector;
	Do sampler aggregator close

364.12. Add an object creator class for sampler aggregator factory. It allows to:

	Instantiate sampler aggregator factory  with search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create internal

364.13. Add a class for sampler aggregator tests. It allows to:

	Handle test sampler;
	Handle test ridiculous size

364.14. Add a class for unmapped sampler. It allows to:

	Instantiate unmapped sampler  with pipeline aggregators list, meta data map and meta data map;
	Instantiate unmapped sampler  with stream input;
	Get writeable name;
	Reduce aggregations list;
	Check if unmapped sampler is mapped;
	Do X content body

365. Changes to package org.elasticsearch.search.aggregations.bucket.significant:  

365.1. Add a class for bucket significance priority queue. It allows to:

	Instantiate bucket significance priority queue;
	Handle less than

365.2. Add a class for global ordinals significant terms aggregator. It allows to:

	Instantiate global ordinals significant terms aggregator  with aggregator factories, values source bytes with ordinals field data, doc value format, bucket count thresholds, include exclude ordinals filter, search context, parent aggregator, significance heuristic, terms aggregator factory, pipeline aggregators list, meta data map and meta data map;
	Get leaf collector;
	Collect;
	Build aggregation;
	Build empty aggregation;
	Do global ordinals significant terms aggregator close

365.3. Add a class for internal mapped significant terms. It allows to:

	Instantiate internal mapped significant terms  with pipeline aggregators list, meta data map, doc value format, significance heuristic, buckets list and buckets list;
	Instantiate internal mapped significant terms  with stream input, bucket reader and bucket reader;
	Write term type info  to stream output;
	Get iterator;
	Get buckets;
	Get bucket  by key;
	Get subset size;
	Get superset size;
	Get significance heuristic;
	Equals internal mapped significant terms;
	Do hash code;
	Do X content body

365.4. Add a class for internal significant terms test case. It allows to:

	Set internal significant terms test case;
	Create test instance;
	Create unmapped instance;
	Reduced reduced internal significant terms;
	Assert multi buckets aggregation;
	Assert bucket;
	Convert internal significant terms test case to counts;
	Handle random significance heuristic

365.5. Add a class for significant long terms aggregator. It allows to:

	Instantiate significant long terms aggregator  with aggregator factories, values source numeric, doc value format, bucket count thresholds, search context, parent aggregator, significance heuristic, terms aggregator factory, include exclude long filter, pipeline aggregators list, meta data map and meta data map;
	Get leaf collector;
	Collect;
	Build aggregation;
	Build empty aggregation;
	Do significant long terms aggregator close

365.6. Add a class for significant long terms tests. It allows to:

	Set significant long terms tests;
	Create test instance;
	Get instance reader;
	Get implementation class;
	Mutate instance

365.7. Add a class for significant string terms aggregator. It allows to:

	Instantiate significant string terms aggregator  with aggregator factories, values source, doc value format, bucket count thresholds, include exclude string filter, aggregation context, parent aggregator, significance heuristic, terms aggregator factory, pipeline aggregators list, meta data map and meta data map;
	Get leaf collector;
	Collect;
	Build aggregation;
	Build empty aggregation;
	Do significant string terms aggregator close

365.8. Add a class for significant string terms tests. It allows to:

	Create test instance;
	Get instance reader;
	Get implementation class;
	Mutate instance

365.9. Add a class for significant terms aggregation builder. It allows to:

	Get parser;
	Parse X content parser;
	Instantiate significant terms aggregation builder  with value type;
	Instantiate significant terms aggregation builder  with stream input;
	Instantiate significant terms aggregation builder  with clone significant terms aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Handle inner write to;
	Serialize target value type;
	Get bucket count thresholds;
	Get size;
	Shard size;
	Min doc count;
	Shard min doc count;
	Get execution hint;
	Get background filter;
	Exclude include exclude;
	Exclude significant terms aggregation builder;
	Get significance heuristic;
	Handle inner build;
	Do X content body;
	Handle inner hash code;
	Handle inner equals;
	Get type

365.10. Add a class for significant terms aggregator factory. It allows to:

	Instantiate significant terms aggregator factory  with values source config, include exclude, filter builder, terms aggregator bucket count thresholds, significance heuristic, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Get superset num docs;
	Get terms enum;
	Get background frequency;
	Create unmapped;
	Build empty aggregation;
	Do create internal;
	Create aggregator factories;
	Process significant terms aggregator factory significant terms aggregator factory from string;
	Get execution mode;
	Convert significant terms aggregator factory to string;
	Close significant terms aggregator factory

365.11. Add a class for significant terms aggregator tests. It allows to:

	Set up test;
	Get field aliases;
	Handle test significance;
	Handle test numeric significance;
	Handle test unmapped;
	Handle test field alias;
	Add mixed text docs;
	Add fields;
	Handle random execution hint

365.12. Add a class for significant text aggregation builder. It allows to:

	Get parser;
	Parse X content parser;
	Instantiate significant text aggregation builder  with clone significant text aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Get bucket count thresholds;
	Handle sub aggregations;
	Sub aggregation;
	Get size;
	Shard size;
	Get field name;
	Get source field names;
	Get filter duplicate text;
	Min doc count;
	Shard min doc count;
	Get background filter;
	Exclude include exclude;
	Exclude significant text aggregation builder;
	Get significance heuristic;
	Instantiate significant text aggregation builder;
	Instantiate significant text aggregation builder  with stream input;
	Do write  to stream output;
	Build search context;
	Handle internal X content;
	Do hash code;
	Equals significant text aggregation builder;
	Get type

365.13. Add a class for significant text aggregator. It allows to:

	Instantiate significant text aggregator  with aggregator factories, search context, parent aggregator, pipeline aggregators list, bucket count thresholds, include exclude string filter, significance heuristic, terms aggregator factory, meta data map and meta data map;
	Get leaf collector;
	Collect;
	Handle process token stream;
	Collect  from source;
	Build aggregation;
	Build empty aggregation;
	Do significant text aggregator close

365.14. Add a class for significant text aggregator factory. It allows to:

	Instantiate significant text aggregator factory  with include exclude, filter builder, terms aggregator bucket count thresholds, significance heuristic, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Get superset num docs;
	Get terms enum;
	Get background frequency;
	Close significant text aggregator factory;
	Create internal

365.15. Add a class for significant text aggregator tests. It allows to:

	Get field aliases;
	Handle test significance;
	Handle test field alias;
	Handle index documents;
	Handle test significance on text arrays

366. Changes to package org.elasticsearch.search.aggregations.bucket.significant.heuristics:  

366.1. Add a class for significance heuristic. It allows to:

	Get score;
	Check frequency validity;
	Rewrite internal aggregation reduce context;
	Rewrite search context

366.2. Add an interface declaration  for significance heuristic builder

366.3. Add an interface declaration  for significance heuristic parser. It allows to:

	Parse X content parser

367. Changes to package org.elasticsearch.search.aggregations.bucket.terms:  

367.1. Add an object creator class for abstract string terms aggregator. It allows to:

	Instantiate abstract string terms aggregator  with aggregator factories, search context, parent aggregator, bucket order, doc value format, bucket count thresholds, sub agg collection mode, pipeline aggregators list, meta data map and meta data map;
	Build empty aggregation

367.2. Add a class for bucket priority queue. It allows to:

	Instantiate bucket priority queue  with comparator;
	Handle less than

367.3. Add a class for double terms aggregator. It allows to:

	Instantiate double terms aggregator  with aggregator factories, values source numeric, doc value format, bucket order, bucket count thresholds, aggregation context, parent aggregator, sub agg collection mode, include exclude long filter, pipeline aggregators list, meta data map and meta data map;
	Get values;
	Build aggregation;
	Build empty aggregation;
	Convert long terms to double;
	Convert long terms bucket to double

367.4. Add a class for double terms tests. It allows to:

	Create test instance;
	Get instance reader;
	Get implementation class;
	Mutate instance

367.5. Add a class for internal mapped terms. It allows to:

	Instantiate internal mapped terms  with bucket order, pipeline aggregators list, meta data map, doc value format, buckets list and buckets list;
	Instantiate internal mapped terms  with stream input, bucket reader and bucket reader;
	Write term type info  to stream output;
	Set doc count error;
	Get shard size;
	Get doc count error;
	Get sum  of other doc counts;
	Get buckets;
	Get bucket  by key;
	Equals internal mapped terms;
	Do hash code;
	Do X content body

367.6. Add a class for internal terms test case. It allows to:

	Handle init;
	Create test instance;
	Create unmapped instance;
	Reduced reduced internal terms;
	Convert internal terms test case to counts

367.7. Add a class for long terms aggregator. It allows to:

	Instantiate long terms aggregator  with aggregator factories, values source numeric, doc value format, bucket order, bucket count thresholds, aggregation context, parent aggregator, sub agg collection mode, include exclude long filter, pipeline aggregators list, meta data map and meta data map;
	Score mode;
	Get values;
	Get leaf collector;
	Build aggregation;
	Build empty aggregation;
	Do long terms aggregator close

367.8. Add a class for long terms tests. It allows to:

	Create test instance;
	Get instance reader;
	Get implementation class;
	Mutate instance

367.9. Add a class for string terms aggregator. It allows to:

	Instantiate string terms aggregator  with aggregator factories, values source, bucket order, doc value format, bucket count thresholds, include exclude string filter, search context, parent aggregator, sub agg collection mode, pipeline aggregators list, meta data map and meta data map;
	Score mode;
	Get leaf collector;
	Build aggregation;
	Do string terms aggregator close

367.10. Add a class for string terms tests. It allows to:

	Create test instance;
	Get instance reader;
	Get implementation class;
	Mutate instance

367.11. Add a class for terms aggregation builder. It allows to:

	Parse X content parser;
	Instantiate terms aggregation builder  with value type;
	Instantiate terms aggregation builder  with clone terms aggregation builder, factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate terms aggregation builder  with stream input;
	Serialize target value type;
	Handle inner write to;
	Get size;
	Shard size;
	Min doc count;
	Shard min doc count;
	Get order;
	Get execution hint;
	Collect mode;
	Exclude include exclude;
	Exclude terms aggregation builder;
	Show term doc count error;
	Handle inner build;
	Do X content body;
	Handle inner hash code;
	Handle inner equals;
	Get type

367.12. Add a class for terms aggregator factory. It allows to:

	Instantiate terms aggregator factory  with values source config, bucket order, include exclude, collection mode, terms aggregator bucket count thresholds, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create unmapped;
	Build empty aggregation;
	Check if terms aggregator factory is aggregation sort;
	Do create internal;
	Sub agg collection mode;
	Get values source;
	Create aggregator factories;
	Process terms aggregator factory terms aggregator factory from string;
	Get execution mode;
	Convert terms aggregator factory to string

367.13. Add a class for terms aggregator factory tests. It allows to:

	Handle test sub agg collect mode

367.14. Add a class for terms aggregator tests. It allows to:

	Create aggregator;
	Handle test global ordinals execution hint;
	Handle test simple;
	Handle test string include exclude;
	Handle test numeric include exclude;
	Handle test string terms aggregator;
	Handle test long terms aggregator;
	Handle test double terms aggregator;
	Handle test ip terms aggregator;
	Handle terms aggregator;
	Handle terms aggregator with nested max agg;
	Handle test empty;
	Handle test unmapped;
	Handle test nested terms agg;
	Handle test mix long and double;
	Handle test global aggregation with score;
	Handle test with nested aggregations;
	Assert nested top hits score;
	Handle test order by pipeline aggregation;
	Generate docs  with nested;
	Create index  with longs;
	Create index  with doubles;
	Build internal aggregation

368. Changes to package org.elasticsearch.search.aggregations.matrix:  

368.1. Add a class for matrix aggregation plugin. It allows to:

	Get aggregations

368.2. Add a class for matrix stats client yaml test suite IT. It allows to:

	Instantiate matrix stats client yaml test suite IT  with client yaml test candidate;
	Get parameters

369. Changes to package org.elasticsearch.search.aggregations.matrix.spi:  

369.1. Add a class for matrix stats named X content provider. It allows to:

	Get named X content parsers

370. Changes to package org.elasticsearch.search.aggregations.matrix.stats:  

370.1. Add a class for base matrix stats test case. It allows to:

	Handle setup;
	Create stats

370.2. Add a class for internal matrix stats tests. It allows to:

	Set internal matrix stats tests;
	Get named X contents;
	Create test instance;
	Get instance reader;
	Mutate instance;
	Handle test reduce random;
	Reduced reduced internal matrix stats;
	Assert expected internal matrix stats from X content;
	Exclude paths  from X content insertion

370.3. Add an interface declaration  for matrix stats. It allows to:

	Get doc count;
	Get field count;
	Mean matrix stats;
	Get variance;
	Get skewness;
	Get kurtosis;
	Get covariance;
	Get correlation

370.4. Add a class for matrix stats aggregation builder. It allows to:

	Instantiate matrix stats aggregation builder;
	Instantiate matrix stats aggregation builder  with clone matrix stats aggregation builder, aggregator factories builder, meta data map and meta data map;
	Handle shallow copy;
	Instantiate matrix stats aggregation builder  with stream input;
	Handle inner write to;
	Get multi value mode;
	Handle inner build;
	Do X content body;
	Handle inner hash code;
	Handle inner equals;
	Get type

370.5. Add a class for matrix stats aggregator. It allows to:

	Instantiate matrix stats aggregator  with values sources map, search context, parent aggregator, multi value mode, pipeline aggregators list, meta data map and meta data map;
	Score mode;
	Get leaf collector;
	Collect;
	Include document;
	Build aggregation;
	Build empty aggregation;
	Do matrix stats aggregator close

370.6. Add an object creator class for matrix stats aggregator factory. It allows to:

	Instantiate matrix stats aggregator factory  with configs map, multi value mode, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create unmapped;
	Do create internal

370.7. Add a class for matrix stats aggregator tests. It allows to:

	Handle test no data;
	Test two fields;
	Test two fields reduce

370.8. Add a class for matrix stats parser. It allows to:

	Instantiate matrix stats parser;
	Handle token;
	Create factory

370.9. Add a class for matrix stats results. It allows to:

	Instantiate matrix stats results;
	Instantiate matrix stats results  with running stats;
	Instantiate matrix stats results  with stream input;
	Write  to stream output;
	Get doc count;
	Get field counts;
	Get field count;
	Get means;
	Mean matrix stats results;
	Get variances;
	Get variance;
	Get skewness;
	Get kurtosis;
	Get covariances;
	Get covariance;
	Get correlations;
	Get correlation;
	Get map val from upper triangular matrix;
	Check field;
	Compute matrix stats results;
	Check if matrix stats results equals;
	Hash code

370.10. Add a class for multi pass stats. It allows to:

	Instantiate multi pass stats;
	Compute stats;
	Assert matrix stats results nearly equal;
	Assert internal matrix stats nearly equal;
	Nearly equal

370.11. Add a class for running stats. It allows to:

	Instantiate running stats;
	Handle init;
	Instantiate running stats  with stream input;
	Write  to stream output;
	Add running stats;
	Update covariance;
	Merge other running stats;
	Merge covariance;
	Clone running stats;
	Check if running stats equals;
	Hash code

370.12. Add a class for running stats tests. It allows to:

	Handle test running stats;
	Handle test merged stats;
	Create running stats

371. Changes to package org.elasticsearch.search.aggregations.metrics:  

371.1. Add a class for abstract geo test case. It allows to:

	Handle setup suite scope cluster;
	Update geohash buckets centroid;
	Update hash centroid;
	Update bounds bottom right;
	Update bounds top left

371.2. Add a class for abstract numeric metric test case. It allows to:

	Create test aggregator builder;
	Do create test aggregator factory

371.3. Add a class for abstract numeric test case. It allows to:

	Handle setup suite scope cluster;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test single valued field;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test order by empty aggregation

371.4. Add a class for adjacency matrix tests. It allows to:

	Create test aggregator builder;
	Handle test filters same map

371.5. Add a class for avg IT. It allows to:

	Handle node plugins;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test single valued field;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test single valued field with formatter;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test order by empty aggregation;
	Handle test dont cache scripts

371.6. Add an object creator class for avg tests. It allows to:

	Do create test aggregator factory

371.7. Add a class for cardinality aggregator tests. It allows to:

	Handle test no docs;
	Handle test no matching field;
	Test some matches sorted numeric doc values;
	Test some matches numeric doc values;
	Handle test query filtering;
	Handle test query filters all;
	Handle test case

371.8. Add a class for extended stats IT. It allows to:

	Handle node plugins;
	Std dev;
	Get variance;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test partially unmapped;
	Handle test single valued field;
	Handle test single valued field default sigma;
	Handle test single valued field with formatter;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test empty sub aggregation;
	Handle test order by empty aggregation;
	Check upper lower bounds;
	Handle test dont cache scripts

371.9. Add a class for extended stats tests. It allows to:

	Do create test aggregator factory

371.10. Add a class for geo bounds IT. It allows to:

	Handle test single valued field;
	Handle test single valued field get property;
	Handle test multi valued field;
	Handle test unmapped;
	Handle test partially unmapped;
	Handle test empty aggregation;
	Handle test single valued field near date line;
	Handle test single valued field near date line wrap longitude;
	Convert test single valued field as sub agg;
	Handle test single valued field with zero lon

371.11. Add a class for geo bounds tests. It allows to:

	Create test aggregator builder

371.12. Add a class for geo centroid IT. It allows to:

	Handle test empty aggregation;
	Handle test unmapped;
	Handle test partially unmapped;
	Handle test single valued field;
	Handle test single value field get property;
	Handle test multi valued field;
	Convert test single value field as sub agg

371.13. Add a class for geo centroid tests. It allows to:

	Create test aggregator builder

371.14. Add a class for hDR percentile ranks IT. It allows to:

	Handle node plugins;
	Handle random percents;
	Handle random significant digits;
	Assert consistent;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test single valued field;
	Handle test null values field;
	Handle test empty values field;
	Handle test single valued field get property;
	Handle test single valued field outside range;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script reverse;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test order by sub aggregation;
	Handle test order by empty aggregation;
	Handle test dont cache scripts

371.15. Add a class for hDR percentiles IT. It allows to:

	Handle node plugins;
	Handle random percentiles;
	Handle random significant digits;
	Assert consistent;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test single valued field;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script reverse;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test order by sub aggregation;
	Handle test order by empty aggregation;
	Handle test dont cache scripts

371.16. Add a class for internal extended stats tests. It allows to:

	Set internal extended stats tests;
	Create test instance;
	Create instance;
	Reduced reduced internal extended stats;
	Assert aggregation internal extended stats from X content;
	Get instance reader;
	Mutate instance;
	Handle test summation accuracy;
	Verify sum  of sqrs of doubles

371.17. Add a class for internal max tests. It allows to:

	Create test instance;
	Get instance reader;
	Reduced reduced internal max;
	Assert internal max from X content;
	Mutate instance

371.18. Add a class for internal min tests. It allows to:

	Create test instance;
	Get instance reader;
	Reduced reduced internal min;
	Assert internal min from X content;
	Mutate instance

371.19. Add a class for internal stats bucket tests. It allows to:

	Create instance;
	Handle test reduce random;
	Reduced reduced internal stats;
	Get instance reader;
	Assert aggregation internal stats from X content

371.20. Add a class for internal stats tests. It allows to:

	Create test instance;
	Create instance;
	Reduced reduced internal stats;
	Handle test summation accuracy;
	Verify stats  of doubles;
	Assert aggregation internal stats from X content;
	Assert stats;
	Get instance reader;
	Mutate instance;
	Handle test do X content body

371.21. Add a class for internal sum tests. It allows to:

	Create test instance;
	Get instance reader;
	Reduced reduced internal sum;
	Handle test summation accuracy;
	Verify summation  of doubles;
	Assert internal sum from X content;
	Mutate instance

371.22. Add a class for max aggregator tests. It allows to:

	Handle test no docs;
	Handle test no matching field;
	Test some matches sorted numeric doc values;
	Test some matches numeric doc values;
	Handle test query filtering;
	Handle test query filters all;
	Handle test case;
	Handle test max shortcut random;
	Handle test max shortcut case;
	Assert live docs bits;
	Handle visit;
	Compare

371.23. Add a class for max IT. It allows to:

	Handle node plugins;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test single valued field;
	Handle test single valued field with formatter;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test order by empty aggregation;
	Handle test dont cache scripts;
	Handle test early termination

371.24. Add an object creator class for max tests. It allows to:

	Do create test aggregator factory

371.25. Add a class for metric agg script plugin. It allows to:

	Plugin script lang;
	Plugin scripts

371.26. Add a class for metrics aggregator. It allows to:

	Instantiate metrics aggregator  with search context, parent aggregator, pipeline aggregators list, meta data map and meta data map

371.27. Add a class for min aggregator tests. It allows to:

	Handle test min aggregator numeric dv;
	Handle test min aggregator sorted numeric dv;
	Handle test min aggregator no value;
	Handle test min aggregator no docs;
	Handle test shortcut is applicable;
	Handle test min shortcut random;
	Handle test min case;
	Handle test min shortcut case;
	Handle mock search context;
	Handle mock aggregator;
	Handle mock numeric values source config;
	Handle mock date values source config

371.28. Add a class for min IT. It allows to:

	Handle node plugins;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test single valued field;
	Handle test single valued field with formatter;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script reverse;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test order by empty aggregation;
	Handle test dont cache scripts;
	Handle test early termination

371.29. Add an object creator class for min tests. It allows to:

	Do create test aggregator factory

371.30. Add a class for parsed single value numeric metrics aggregation. It allows to:

	Get value  as string;
	Get value;
	Get set value;
	Get set value as string;
	Declare single value fields

371.31. Add a class for percentile ranks tests. It allows to:

	Create test aggregator builder

371.32. Add a class for percentiles tests. It allows to:

	Create test aggregator builder;
	Handle test null or empty percentiles throws;
	Handle test exception multiple methods

371.33. Add a class for scripted metric tests. It allows to:

	Create test aggregator builder;
	Handle random script

371.34. Add a class for stats IT. It allows to:

	Handle node plugins;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test partially unmapped;
	Handle test single valued field;
	Handle test single valued field with formatter;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test order by empty aggregation;
	Assert shard execution state;
	Handle test dont cache scripts

371.35. Add an object creator class for stats tests. It allows to:

	Do create test aggregator factory

371.36. Add a class for sum aggregator tests. It allows to:

	Handle test no docs;
	Handle test no matching field;
	Handle test numeric doc values;
	Handle test sorted numeric doc values;
	Handle test query filtering;
	Handle test string field;
	Handle test summation accuracy;
	Verify summation  of doubles;
	Handle test case;

371.37. Add a class for sum IT. It allows to:

	Handle node plugins;
	Handle setup suite scope cluster;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test single valued field;
	Handle test single valued field with formatter;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script with params;
	Handle test order by empty aggregation;
	Handle test dont cache scripts;
	Handle test field alias;
	Handle test field alias in sub aggregation

371.38. Add an object creator class for sum tests. It allows to:

	Do create test aggregator factory

371.39. Add a class for t digest percentile ranks IT. It allows to:

	Handle node plugins;
	Handle random percents;
	Handle random compression;
	Assert consistent;
	Handle test empty aggregation;
	Handle test null values field;
	Handle test empty values field;
	Handle test unmapped;
	Handle test single valued field;
	Handle test single valued field get property;
	Handle test single valued field outside range;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script reverse;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test order by sub aggregation;
	Handle test order by empty aggregation;
	Handle test dont cache scripts

371.40. Add a class for t digest percentiles IT. It allows to:

	Handle node plugins;
	Handle random percentiles;
	Handle random compression;
	Assert consistent;
	Handle test empty aggregation;
	Handle test unmapped;
	Handle test single valued field;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test single valued field with value script;
	Handle test single valued field with value script with params;
	Handle test multi valued field;
	Handle test multi valued field with value script;
	Handle test multi valued field with value script reverse;
	Handle test multi valued field with value script with params;
	Handle test script single valued;
	Handle test script single valued with params;
	Handle test script multi valued;
	Handle test script multi valued with params;
	Handle test order by sub aggregation;
	Handle test order by empty aggregation;
	Handle test dont cache scripts

371.41. Add a class for top hits tests. It allows to:

	Create test aggregator builder;
	Handle test fail with sub agg

371.42. Add a class for value count IT. It allows to:

	Handle setup suite scope cluster;
	Handle node plugins;
	Handle test unmapped;
	Handle test single valued field;
	Handle test single valued field get property;
	Handle test single valued field partially unmapped;
	Handle test multi valued field;
	Handle test single valued script;
	Handle test multi valued script;
	Handle test single valued script with params;
	Handle test multi valued script with params;
	Handle test dont cache scripts;
	Handle test order by empty aggregation

371.43. Add a class for value count tests. It allows to:

	Create test aggregator builder

372. Changes to package org.elasticsearch.search.aggregations.pipeline:  

372.1. Add a class for abstract pipeline aggregation builder. It allows to:

	Instantiate abstract pipeline aggregation builder;
	Instantiate abstract pipeline aggregation builder  with stream input;
	Write  to stream output;
	Do write  to stream output;
	Get type;
	Validate parent aggregator factory;
	Create internal;
	Create abstract pipeline aggregation builder;
	Validate parent aggregator factory sequentially ordered parent aggs;
	Set meta data;
	Convert abstract pipeline aggregation builder to X content;
	Override buckets path;
	Handle internal X content;
	Hash code;
	Do hash code;
	Check if abstract pipeline aggregation builder equals;
	Equals abstract pipeline aggregation builder;

372.2. Add a class for avg bucket IT. It allows to:

	Handle setup suite scope cluster;
	Handle test doc count top level;
	Handle test doc count as sub agg;
	Handle test metric top level;
	Handle test metric as sub agg;
	Handle test metric as sub agg with insert zeros;
	Handle test no buckets;
	Handle test nested

372.3. Add a class for bucket helpers. It allows to:

	Parse token location;
	Get gap policy;
	Write  to stream output;
	Read  from stream input;
	Get name;
	Resolve bucket value;

372.4. Add a class for bucket script tests. It allows to:

	Create test aggregator factory

372.5. Add a class for bucket selector tests. It allows to:

	Create test aggregator factory

372.6. Add a class for cumulative sum tests. It allows to:

	Create test aggregator factory

372.7. Add a class for date derivative IT. It allows to:

	Get date;
	Get index doc;
	Handle setup suite scope cluster;
	Process date derivative IT date derivative IT after each test;
	Handle test single valued field;
	Handle test single valued field normalised;
	Handle test single valued field normalised time zone CET dst start;
	Handle test single valued field normalised time zone CET dst end;
	Handle test single valued field normalised time zone asia kathmandu;
	Add N times;
	Assert bucket;
	Handle test single valued field with sub aggregation;
	Handle test multi valued field;
	Handle test unmapped;
	Handle test partially unmapped

372.8. Add a class for derivative IT. It allows to:

	Handle setup suite scope cluster;
	Handle new doc builder;
	Handle test doc count derivative;
	Handle test single valued field normalised;
	Handle test single value agg derivative;
	Handle test multi value agg derivative;
	Handle test unmapped;
	Handle test partially unmapped;
	Handle test doc count derivative with gaps;
	Handle test doc count derivative with gaps random;
	Handle test doc count derivative with gaps insert zeros;
	Handle test single value agg derivative with gaps;
	Handle test single value agg derivative with gaps insert zeros;
	Handle test single value agg derivative with gaps random;
	Handle test single value agg derivative invalid path;
	Handle test deriv deriv NPE;
	Check bucket key and doc count

372.9. Add a class for derivative tests. It allows to:

	Create test aggregator factory;
	Handle test validate;
	Handle test validate exception

372.10. Add a class for extended stats bucket IT. It allows to:

	Handle setup suite scope cluster;
	Handle test gappy index with sigma;
	Handle test doc count top level;
	Handle test doc count as sub agg;
	Handle test metric top level;
	Handle test metric as sub agg;
	Handle test metric as sub agg with insert zeros;
	Handle test no buckets;
	Handle test bad sigma as sub agg;
	Handle test nested

372.11. Add a class for internal simple value. It allows to:

	Instantiate internal simple value  with formatter, pipeline aggregators list, meta data map and meta data map;
	Instantiate internal simple value  with stream input;
	Do write  to stream output;
	Get writeable name;
	Get value;
	Get formatter;
	Reduce aggregations list;
	Do X content body;
	Do hash code;
	Equals internal simple value

372.12. Add a class for internal simple value tests. It allows to:

	Create test instance;
	Handle test reduce random;
	Reduced reduced internal simple value;
	Get instance reader;
	Assert internal simple value from X content;
	Mutate instance

372.13. Add a class for max bucket IT. It allows to:

	Handle setup suite scope cluster;
	Handle test doc count top level;
	Handle test doc count as sub agg;
	Handle test metric top level;
	Handle test metric as sub agg;
	Handle test metric as sub agg of single bucket agg;
	Handle test metric as sub agg with insert zeros;
	Handle test no buckets;
	Handle test nested;
	Handle test field isnt written out twice

372.14. Add a class for min bucket IT. It allows to:

	Handle setup suite scope cluster;
	Handle test doc count top level;
	Handle test doc count as sub agg;
	Handle test metric top level;
	Handle test metric as sub agg;
	Handle test metric as sub agg with insert zeros;
	Handle test no buckets;
	Handle test nested

372.15. Add a class for parsed simple value. It allows to:

	Get type;
	Process parsed simple value parsed simple value from X content;
	Do X content body

372.16. Add a class for percentiles bucket IT. It allows to:

	Handle setup suite scope cluster;
	Handle test doc countop level;
	Handle test doc count as sub agg;
	Handle test metric top level;
	Handle test metric top level default percents;
	Handle test metric as sub agg;
	Handle test metric as sub agg with insert zeros;
	Handle test no buckets;
	Handle test wrong percents;
	Handle test bad percents;
	Handle test bad percents as sub agg;
	Handle test nested;
	Handle test nested with decimal;
	Assert percentile bucket;

372.17. Add a class for serial difference tests. It allows to:

	Create test aggregator factory;
	Handle test validate;
	Handle test validate exception

372.18. Add a class for sibling pipeline aggregator. It allows to:

	Instantiate sibling pipeline aggregator  with meta data map;
	Instantiate sibling pipeline aggregator  with stream input;
	Reduce internal aggregation;
	Reduce aggregations

372.19. Add an interface declaration  for simple value

372.20. Add a class for stats bucket IT. It allows to:

	Handle setup suite scope cluster;
	Handle test doc count top level;
	Handle test doc count as sub agg;
	Handle test metric top level;
	Handle test metric as sub agg;
	Handle test metric as sub agg with insert zeros;
	Handle test no buckets;
	Handle test nested

372.21. Add a class for sum bucket IT. It allows to:

	Handle setup suite scope cluster;
	Handle test doc count top level;
	Handle test doc count as sub agg;
	Handle test metric top level;
	Handle test metric as sub agg;
	Handle test metric as sub agg with insert zeros;
	Handle test no buckets;
	Handle test nested

373. Changes to package org.elasticsearch.search.aggregations.support:  

373.1. Add a class for field context. It allows to:

	Instantiate field context  with index field data, mapped field type and mapped field type;
	Get field;
	Get index field data;
	Get field type

373.2. Add a class for include exclude tests. It allows to:

	Handle test empty terms with ords;
	Handle test single term with ords;
	Handle advance exact;
	Handle next ord;
	Lookup ord;
	Get value count;
	Handle test partitioned equals;
	Handle test exact include values equals;
	Handle test exact exclude values equals;
	Handle test regex include;
	Handle test regex exclude;
	Serialize include exclude;
	Handle test regex include and exclude;
	Serialize mixed regex

373.3. Add a class for missing values tests. It allows to:

	Handle test missing bytes;
	Handle next value;
	Handle advance exact;
	Handle doc value count;
	Handle test missing ords;
	Lookup ord;
	Get value count;
	Handle next ord;
	Handle test global mapping;
	Do test global mapping;
	Process missing values tests missing values tests as ords;
	Handle test missing longs;
	Handle test missing doubles;
	Handle test missing geo points;
	Handle test floating point detection

373.4. Add a class for value type tests. It allows to:

	Handle test resolve;
	Handle test compatibility

373.5. Add a class for values source aggregator factory. It allows to:

	Instantiate values source aggregator factory  with values source config, search context, parent aggregator factory, sub factories builder, meta data map and meta data map;
	Create internal;
	Create unmapped;
	Do create internal

373.6. Add a class for values source config. It allows to:

	Resolve query shard context;
	Create script;
	Resolve format;
	Instantiate values source config  with values source type;
	Get value source type;
	Get field context;
	Get script;
	Handle unmapped;
	Handle valid;
	Get script value type;
	Get format;
	Missing values source config;
	Get timezone;
	Convert values source config to values source;
	Handle original values source;
	Handle numeric script;
	Handle numeric field;
	Get bytes field;
	Get bytes script;
	Handle geo point field

373.7. Add a class for values source config tests. It allows to:

	Handle test keyword;
	Handle test empty keyword;
	Handle test unmapped keyword;
	Handle test long;
	Handle test empty long;
	Handle test unmapped long;
	Handle test boolean;
	Handle test empty boolean;
	Handle test unmapped boolean;
	Handle test type field deprecation;
	Handle test field alias

373.8. Add a class for values source parser helper. It allows to:

	Instantiate values source parser helper;
	Declare any fields;
	Declare numeric fields;
	Declare bytes fields;
	Declare geo fields;
	Declare fields

374. Changes to package org.elasticsearch.search.aggregations.support.values:  

374.1. Add a class for script bytes values. It allows to:

	Instantiate script bytes values  with aggregation script;
	Set script bytes values;
	Handle advance exact;
	Set scorer

374.2. Add a class for script double values. It allows to:

	Instantiate script double values  with aggregation script;
	Handle advance exact;
	Convert script double values to double value;
	Set scorer

374.3. Add a class for script long values. It allows to:

	Instantiate script long values  with aggregation script;
	Handle advance exact;
	Convert script long values to long value;
	Set scorer

375. Changes to package org.elasticsearch.search.basic:  

375.1. Add a class for search red state index IT. It allows to:

	Handle test allow partials with red state;
	Handle test cluster allow partials with red state;
	Handle test disallow partials with red state;
	Handle test cluster disallow partials with red state;
	Set cluster default allow partial results;
	Build red index;
	Handle cleanup

375.2. Add a class for search while creating index IT. It allows to:

	Handle test index causes index creation;
	Handle test no replicas;
	Handle test one replica;
	Test two replicas;
	Handle search while creating index

375.3. Add a class for search while relocating IT. It allows to:

	Handle test search and relocate concurrently random replicas;
	Handle test search and relocate concurrently;
	Run

375.4. Add a class for search with random IO exceptions IT. It allows to:

	Handle node plugins;
	Handle test remove when awaits fix is resolved;
	Handle test random directory IO exceptions

375.5. Add a class for transport search failures IT. It allows to:

	Handle maximum number of replicas;
	Handle test failed search with wrong query;
	Handle index;
	Get source

375.6. Add a class for transport two nodes search IT. It allows to:

	Get number of replicas;
	Prepare data;
	Handle index;
	Get source;
	Handle test dfs query then fetch;
	Handle test dfs query then fetch with sort;
	Handle test query then fetch;
	Handle test query then fetch with from;
	Handle test query then fetch with sort;
	Handle test simple facets;
	Handle test failed search with wrong query;
	Handle test failed search with wrong from;
	Handle test failed multi search with wrong query;
	Handle test failed multi search with wrong query with function score

376. Changes to package org.elasticsearch.search.builder:  

376.1. Add a class for search source builder exception. It allows to:

	Instantiate search source builder exception;
	Instantiate search source builder exception  with cause throwable;
	Instantiate search source builder exception  with stream input

376.2. Add a class for search source builder tests. It allows to:

	Handle test from X content;
	Handle test from X content invalid;
	Assert parse search source;
	Handle test serialization;
	Handle test equals and hashcode;
	Copy builder;
	Handle test parse include exclude;
	Handle test multiple query objects are rejected;
	Handle test parse and rewrite;
	Handle test parse sort;
	Handle test aggs parsing;
	Handle test parse rescore;
	Handle test timeout with units;
	Handle test timeout without units;
	Convert test;
	Handle test parse indices boost;
	Handle test negative from errors;
	Handle test negative size errors;
	Assert indices boost parse error message;
	Rewrite search source builder

377. Changes to package org.elasticsearch.search.collapse:  

377.1. Add a class for collapse builder. It allows to:

	Instantiate collapse builder;
	Instantiate collapse builder  with stream input;
	Write  to stream output;
	Process collapse builder collapse builder from X content;
	Set field;
	Set inner hits;
	Set max concurrent group requests;
	Get field;
	Get inner hits;
	Get max concurrent group requests;
	Convert collapse builder to X content;
	Handle inner to X content;
	Check if collapse builder equals;
	Hash code;
	Build search context

377.2. Add a class for collapse builder tests. It allows to:

	Handle init;
	Process collapse builder tests collapse builder tests after class;
	Handle random collapse builder;
	Create test instance;
	Get instance reader;
	Mutate instance;
	Get named writeable registry;
	X content registry;
	Handle mock search context;
	Handle test build;
	Handle test build with search context exceptions;
	Clone;
	Get type name;
	Get term query;
	Check if  exists query;
	Do parse instance;
	Get shuffle fields exceptions

377.3. Add a class for collapse context. It allows to:

	Instantiate collapse context  with mapped field type, inner hits list and inner hits list;
	Get field name;
	Get field type;
	Get inner hit;
	Create top docs

378. Changes to package org.elasticsearch.search.dfs:  

378.1. Add a class for aggregated dfs. It allows to:

	Instantiate aggregated dfs;
	Instantiate aggregated dfs  with term statistics object object hash map, field statistics object object hash map and field statistics object object hash map;
	Get term statistics;
	Get field statistics;
	Max aggregated dfs;
	Read aggregated dfs;
	Read  from stream input;
	Write  to stream output

378.2. Add a class for dfs phase. It allows to:

	Pre process;
	Execute search context;
	Get term statistics;
	Get collection statistics

378.3. Add a class for dfs phase execution exception. It allows to:

	Instantiate dfs phase execution exception  with search context, throwable and throwable;
	Instantiate dfs phase execution exception  with search context;
	Instantiate dfs phase execution exception  with stream input

378.4. Add a class for dfs search result. It allows to:

	Instantiate dfs search result;
	Instantiate dfs search result  with stream input;
	Instantiate dfs search result  with search shard target;
	Max dfs search result;
	Get terms statistics;
	Get field statistics;
	Get terms;
	Get term statistics;
	Read  from stream input;
	Write  to stream output;
	Write field stats;
	Write term stats;
	Write single term stats;
	Read field stats;
	Read term stats;
	Add dfs search result;
	Sub dfs search result

379. Changes to package org.elasticsearch.search.fetch:  

379.1. Add a class for fetch phase. It allows to:

	Instantiate fetch phase  with fetch sub phases list;
	Pre process;
	Execute search context;
	Find root document  if nested;
	Create search hit;
	Get search fields;
	Create nested search hit;
	Get internal nested identity;
	Load stored fields

379.2. Add a class for fetch phase execution exception. It allows to:

	Instantiate fetch phase execution exception  with search context, throwable and throwable;
	Instantiate fetch phase execution exception  with search context;
	Instantiate fetch phase execution exception  with stream input

379.3. Add a class for fetch search result. It allows to:

	Instantiate fetch search result;
	Instantiate fetch search result  with stream input;
	Instantiate fetch search result  with search shard target;
	Handle query result;
	Fetch result;
	Handle hits;
	Assert no search target;
	Get hits;
	Handle init counter;
	Counter get and increment;
	Read fetch search result;
	Read  from stream input;
	Write  to stream output

379.4. Add a class for query fetch search result. It allows to:

	Instantiate query fetch search result;
	Instantiate query fetch search result  with stream input;
	Instantiate query fetch search result  with query search result, fetch search result and fetch search result;
	Get request id;
	Get search shard target;
	Set search shard target;
	Set shard index;
	Handle query result;
	Fetch result;
	Read query fetch search result;
	Read  from stream input;
	Write  to stream output

379.5. Add a class for scroll query fetch search result. It allows to:

	Instantiate scroll query fetch search result;
	Instantiate scroll query fetch search result  with stream input;
	Instantiate scroll query fetch search result  with query fetch search result, search shard target and search shard target;
	Result scroll query fetch search result;
	Set search shard target;
	Set shard index;
	Handle query result;
	Fetch result;
	Read  from stream input;
	Write  to stream output

379.6. Add a class for shard fetch request. It allows to:

	Instantiate shard fetch request;
	Instantiate shard fetch request  with int array list, last emitted doc and last emitted doc;
	Instantiate shard fetch request  with stream input;
	Write  to stream output;
	I shard fetch request;
	Get doc ids;
	Get doc ids size;
	Handle last emitted doc;
	Read  from stream input;
	Create task;
	Get description

379.7. Add a class for shard fetch search request. It allows to:

	Instantiate shard fetch search request;
	Instantiate shard fetch search request  with original indices, int array list, last emitted doc and last emitted doc;
	Instantiate shard fetch search request  with stream input;
	Write  to stream output;
	Get indices;
	Get indices options;
	Read  from stream input

379.8. Add a class for stored fields context. It allows to:

	Instantiate stored fields context;
	Instantiate stored fields context  with field names list;
	Instantiate stored fields context  with other stored fields context;
	Instantiate stored fields context  with stream input;
	Write  to stream output;
	Get field names;
	Add field names;
	Add field name;
	Fetch fields;
	Check if stored fields context equals;
	Hash code;
	Convert stored fields context to X content;
	Process stored fields context stored fields context from list;
	Process stored fields context stored fields context from X content;
	Process stored fields context stored fields context from rest request

380. Changes to package org.elasticsearch.search.fetch.subphase:  

380.1. Add a class for doc value fields fetch sub phase. It allows to:

	Handle hits execute

380.2. Add a class for explain fetch sub phase. It allows to:

	Execute search context

380.3. Add a class for fetch source context. It allows to:

	Instantiate fetch source context;
	Instantiate fetch source context  with stream input;
	Write  to stream output;
	Fetch source;
	Check if fetch source context includes;
	Check if fetch source context excludes;
	Parse rest request from rest request;
	Process fetch source context fetch source context from X content;
	Convert fetch source context to X content;
	Check if fetch source context equals;
	Hash code;
	Get filter

380.4. Add a class for fetch source sub phase. It allows to:

	Execute search context;
	Get nested source

380.5. Add a class for inner hits fetch sub phase. It allows to:

	Instantiate inner hits fetch sub phase  with fetch phase;
	Handle hits execute

380.6. Add a class for matched queries fetch sub phase. It allows to:

	Handle hits execute

380.7. Add a class for matched queries IT. It allows to:

	Handle test simple matched query from filtered query;
	Handle test simple matched query from top level filter;
	Handle test simple matched query from top level filter and filtered query;
	Handle test reg exp query supports name;
	Handle test prefix query supports name;
	Handle test fuzzy query supports name;
	Handle test wildcard query supports name;
	Handle test span first query supports name;
	Handle test matched with should;
	Handle test matched with wrapper query

380.8. Add a class for script fields fetch sub phase. It allows to:

	Handle hits execute;
	Create leaf scripts

380.9. Add a class for version fetch sub phase. It allows to:

	Handle hits execute

381. Changes to package org.elasticsearch.search.fetch.subphase.highlight:  

381.1. Add a class for abstract highlighter builder. It allows to:

	Instantiate abstract highlighter builder;
	Instantiate abstract highlighter builder  with template abstract highlighter builder, query builder and query builder;
	Instantiate abstract highlighter builder  with stream input;
	Write  to stream output;
	Do write  to stream output;
	Pre tags;
	Post tags;
	Get fragment size;
	Get num of fragments;
	Get highlighter type;
	Get fragmenter;
	Highlight query;
	Get order;
	Highlight filter;
	Get boundary scanner type;
	Get boundary max scan;
	Get boundary chars;
	Get boundary scanner locale;
	Get options;
	Require field match;
	No match size;
	Get phrase limit;
	Force source;
	Convert abstract highlighter builder to X content;
	Handle inner X content;
	Handle common options to X content;
	Get setup parser;
	Hash code;
	Do hash code;
	Check if abstract highlighter builder equals;
	Equals other HB;
	Convert abstract highlighter builder to string

381.2. Add a class for custom highlighter plugin. It allows to:

	Get highlighters

381.3. Add a class for custom highlighter search IT. It allows to:

	Handle node plugins;
	Handle setup;
	Handle test that custom highlighters are supported;
	Handle test that custom highlighter can be configured per field;
	Handle test that custom highlighter can be configured globally;
	Handle test that custom highlighter receives fields in order

381.4. Add a class for fragment builder helper. It allows to:

	Instantiate fragment builder helper;
	Fix weighted frag info;
	Compare fragment builder helper;
	Check if fragment builder helper contains broken analysis

381.5. Add a class for highlight builder tests. It allows to:

	Handle init;
	Process highlight builder tests highlight builder tests after class;
	Handle test serialization;
	Handle test equals and hashcode;
	Handle test from X content;
	Handle test unknown array name expection;
	Expect parse throws;
	Handle test unknown fieldname expection;
	Handle test unknown object fieldname expection;
	Handle test string in fields array;
	Handle test no fields in object in fields array;
	Test two fields  in object in fields array;
	Handle test build search context highlight;
	Get field mapper;
	Merge highlight builder before chek;
	Get field builder  by name;
	Handle test parsing tags schema;
	Handle test parsing empty structure;
	Handle test pre tags without post tags;
	Handle test valid order ordinals;
	Handle test order serialization;
	Convert highlight builder tests to X content;
	Handle random highlighter builder;
	Set random common options;
	Mutate common options;
	Toggle flag boolean;
	Handle random string array;
	Mutate original highlight builder;
	Get serialized copy;
	X content registry

381.6. Add a class for highlight field. It allows to:

	Instantiate highlight field;
	Instantiate highlight field  with fragments text;
	Name highlight field;
	Get name;
	Get fragments;
	Convert highlight field to string;
	Read highlight field;
	Read  from stream input;
	Write  to stream output;
	Process highlight field highlight field from X content;
	Convert highlight field to X content;
	Check if highlight field equals;
	Hash code

381.7. Add a class for highlight field tests. It allows to:

	Create test item;
	Handle test from X content;
	Convert test;
	Handle test equals and hashcode;
	Handle test serialization;
	Mutate original highlight field;
	Get copy

381.8. Add a class for highlight phase. It allows to:

	Instantiate highlight phase  with highlighters map;
	Execute search context

381.9. Add an interface declaration  for highlighter. It allows to:

	Highlight highlighter context;
	Highlight mapped field type

381.10. Add a class for highlighter context. It allows to:

	Instantiate highlighter context  with search context highlight field, mapped field type, search context, fetch sub phase hit context, query and query

381.11. Add a class for plain highlighter. It allows to:

	Highlight highlighter context;
	Compare o 1 text fragment;
	Highlight mapped field type;
	Find good end  for no highlight excerpt

381.12. Add a class for plain highlighter tests. It allows to:

	Handle test highlight phrase

381.13. Add a class for simple fragments builder. It allows to:

	Instantiate simple fragments builder  with mapped field type, boundary scanner and boundary scanner;
	Make fragment

381.14. Add a class for source score order fragments builder. It allows to:

	Instantiate source score order fragments builder  with mapped field type, search context, boundary scanner and boundary scanner;
	Get fields;
	Make fragment

381.15. Add a class for source simple fragments builder. It allows to:

	Instantiate source simple fragments builder  with mapped field type, search context, boundary scanner and boundary scanner;
	Get fields

381.16. Add a class for unified highlighter. It allows to:

	Highlight mapped field type;
	Highlight highlighter context;
	Get passage formatter;
	Get analyzer;
	Load field values;
	Get break iterator;
	Get filter snippets;
	Convert field value;
	Merge field values;
	Get offset source

382. Changes to package org.elasticsearch.search.functionscore:  

382.1. Add a class for decay function score IT. It allows to:

	Handle forbid private index settings;
	Handle test distance score geo lin gauss exp;
	Handle test distance score geo lin gauss exp with offset;
	Handle test boost mode setting works;
	Handle test parse geo point;
	Handle test combine modes;
	Handle test exception thrown if scale LE 0;
	Handle test parse date math;
	Handle test value missing lin;
	Handle test date without origin;
	Test many docs lin;
	Handle test parsing exception if field does not exist;
	Handle test parsing exception if field type does not match;
	Handle test no query given;
	Handle test multi field options

382.2. Add a class for function score field value IT. It allows to:

	Handle test field value factor

382.3. Add a class for query rescorer IT. It allows to:

	Handle test enforce window size;
	Handle test rescore phrase;
	Test more docs;
	Handle test small rescore window;
	Handle test rescorer made scores worse;
	Compare hit;
	Assert equivalent;
	Handle test equivalence;
	Handle test explain;
	Handle test scoring;
	Handle test multiple rescores;
	Get index random numbers;
	Handle test from size;
	Handle test rescore phase with invalid sort

383. Changes to package org.elasticsearch.search.geo:  

383.1. Add a class for geo bounding box IT. It allows to:

	Handle forbid private index settings;
	Handle test simple bounding box test;
	Convert test limit;
	Handle test complete lon range

383.2. Add a class for geo filter IT. It allows to:

	Handle forbid private index settings;
	Create nodes;
	Handle un zip data;
	Handle test shape builders;
	Handle test shape relations;
	Handle test bulk;
	Handle test neighbors;
	Get distance;
	Handle test relation support;
	Get randomhash;

383.3. Add a class for geo polygon IT. It allows to:

	Handle forbid private index settings;
	Handle setup suite scope cluster;
	Handle test simple polygon;
	Handle test simple unclosed polygon;
	Handle test field alias

383.4. Add a class for geo shape integration IT. It allows to:

	Handle test orientation persistence;
	Handle test ignore malformed;
	Handle test index shape routing;
	Handle test index polygon date line;
	Find node name

383.5. Add a class for geo shape query tests. It allows to:

	Create mapping;
	Handle test null shape;
	Handle test index points filter rectangle;
	Handle test edge cases;
	Handle test indexed shape reference;
	Handle test indexed shape reference with types;
	Handle test indexed shape reference source disabled;
	Handle test reusable builder;
	Assert unmodified;
	Handle test shape fetching path;
	Handle test query random geo collection;
	Handle test random geo collection query;
	Handle test point query;
	Handle test contains shape query;
	Handle test exists query;
	Handle test shape filter with defined geo collection;
	Handle test points only;
	Handle test points only explicit;
	Handle test field alias;
	Handle test envelope spanning dateline

384. Changes to package org.elasticsearch.search.internal:  

384.1. Add a class for alias filter. It allows to:

	Instantiate alias filter  with filter query builder;
	Instantiate alias filter  with stream input;
	Rewrite query rewrite context;
	Write  to stream output;
	Get aliases;
	Get query builder;
	Check if alias filter equals;
	Hash code;
	Convert alias filter to string

384.2. Add a class for alias filter tests. It allows to:

	Handle test equals and hash code

384.3. Add a class for cancellable bulk scorer. It allows to:

	Instantiate cancellable bulk scorer  with bulk scorer, check cancelled runnable and check cancelled runnable;
	Get score;
	Get cost

384.4. Add a class for context index searcher. It allows to:

	Instantiate context index searcher  with engine searcher, query cache, query caching policy and query caching policy;
	Close context index searcher;
	Set profiler;
	Set check canceled;
	Set aggregated dfs;
	Rewrite original query;
	Create weight;
	Handle search;
	Extract terms;
	Explain leaf reader context;
	Get scorer;
	Check if  is cacheable;
	Handle bulk scorer;
	Explain query;
	Get term statistics;
	Get collection statistics;
	Get directory reader;
	Get engine searcher

384.5. Add a class for filtered search context. It allows to:

	Instantiate filtered search context  with in search context;
	Check if filtered search context has stored fields;
	Check if filtered search context has stored fields context;
	Get stored fields requested;
	Get stored fields context;
	Do filtered search context close;
	Pre process;
	Build filtered query;
	I filtered search context;
	Get source;
	Get request;
	Search type;
	Shard target;
	Get number of shards;
	Get query boost;
	Get origin nano time;
	Scroll context;
	Get aggregations;
	Highlight filtered search context;
	Highlight search context highlight;
	Handle inner hits;
	Suggest filtered search context;
	Suggest suggestion search context;
	Rescore filtered search context;
	Add rescore;
	Check if filtered search context has script fields;
	Get script fields;
	Handle source requested;
	Check if filtered search context has fetch source context;
	Fetch source context;
	Get searcher;
	Get index shard;
	Handle mapper service;
	Get similarity service;
	Handle big arrays;
	Handle bitset filter cache;
	Get mapped field type for field;
	Get timeout;
	Handle timeout;
	Terminate filtered search context after;
	Handle low level cancellation;
	Handle minimum score;
	Get sort;
	Track scores;
	Track total hits  up to;
	Get search after;
	Get parsed post filter;
	Get alias filter;
	Get parsed query;
	Get query;
	Process filtered search context filtered search context from;
	Get size;
	Explain filtered search context;
	Get group stats;
	Handle group stats;
	Handle version;
	Seq no and primary term;
	Convert doc ids;
	Get accessed;
	Handle last access time;
	Keep alive;
	Get lookup;
	Get dfs result;
	Handle query result;
	Fetch result;
	Fetch phase;
	Handle smart name field type;
	Get object mapper;
	Get relative time  in millis;
	Add search ext;
	Get search ext;
	Get profilers;
	Get query collectors;
	Get query shard context;
	Set task;
	Get task;
	Check if filtered search context is canceled;
	Get collapse;

384.6. Add a class for internal scroll search request. It allows to:

	Instantiate internal scroll search request;
	Instantiate internal scroll search request  with search scroll request;
	Instantiate internal scroll search request  with stream input;
	Write  to stream output;
	I internal scroll search request;
	Get scroll;
	Read  from stream input;
	Create task;
	Get description

384.7. Add a class for internal search response. It allows to:

	Handle empty;
	Instantiate internal search response  with search hits, internal aggregations, suggest, profile shard results, terminated early boolean and terminated early boolean;
	Instantiate internal search response  with stream input;
	Write  to stream output

384.8. Add a class for scroll context. It allows to:

	Get scroll context from context;
	Put in context

384.9. Add a class for scroll context tests. It allows to:

	Handle test storing objects in scroll context

384.10. Add a class for search context. It allows to:

	Instantiate search context;
	Set task;
	Get task;
	Check if search context is canceled;
	Close search context;
	Close internal;
	Handle already closed;
	Do search context close;
	Pre process;
	Build filtered query;
	I search context;
	Get source;
	Get request;
	Search type;
	Shard target;
	Get number of shards;
	Get query boost;
	Get origin nano time;
	Scroll context;
	Get aggregations;
	Add search ext;
	Get search ext;
	Highlight search context;
	Highlight search context highlight;
	Handle inner hits;
	Suggest search context;
	Suggest suggestion search context;
	Rescore search context;
	Add rescore;
	Check if search context has script fields;
	Get script fields;
	Handle source requested;
	Check if search context has fetch source context;
	Fetch source context;
	Handle doc value fields context;
	Get searcher;
	Get index shard;
	Handle mapper service;
	Get similarity service;
	Handle big arrays;
	Handle bitset filter cache;
	Get mapped field type for field;
	Get timeout;
	Handle timeout;
	Terminate search context after;
	Handle low level cancellation;
	Handle minimum score;
	Get sort;
	Track scores;
	Track total hits  up to;
	Get search after;
	Get collapse;
	Get parsed post filter;
	Get alias filter;
	Get parsed query;
	Get query;
	Process search context search context from;
	Get size;
	Check if search context has stored fields;
	Check if search context has stored fields context;
	Get stored fields requested;
	Get stored fields context;
	Explain search context;
	Get group stats;
	Handle group stats;
	Handle version;
	Seq no and primary term;
	Convert doc ids;
	Get accessed;
	Handle last access time;
	Keep alive;
	Get lookup;
	Get dfs result;
	Handle query result;
	Fetch phase;
	Fetch result;
	Get profilers;
	Add releasable;
	Handle clear releasables;
	Check if search context has only suggest;
	Handle smart name field type;
	Get object mapper;
	Get relative time  in millis;
	Get query collectors;
	Get query shard context;
	Convert search context to string

384.11. Add an interface declaration  for shard search request. It allows to:

	Shard id;
	Get types;
	Get source;
	Get alias filter;
	Set alias filter;
	Handle source;
	Get number of shards;
	Search type;
	Get index boost;
	Now shard search request in millis;
	Get request cache;
	Allow partial search results;
	Get scroll;
	Get index routings;
	Get preference;
	Cache key;
	Parse alias filter;
	Get cluster  alias;
	Get rewriteable

384.12. Add a class for shard search transport request. It allows to:

	Instantiate shard search transport request  with original indices, search request, shard id, alias filter and alias filter;
	Instantiate shard search transport request  with stream input;
	Write  to stream output;
	Get indices;
	Get indices options;
	Shard id;
	Get types;
	Get source;
	Get alias filter;
	Set alias filter;
	Handle source;
	Get number of shards;
	Search type;
	Get index boost;
	Now shard search transport request in millis;
	Get request cache;
	Allow partial search results;
	Get scroll;
	Get index routings;
	Get preference;
	Read  from stream input;
	Cache key;
	Create task;
	Get description;
	Get cluster  alias;
	Get rewriteable

384.13. Add a class for shard search transport request tests. It allows to:

	Handle test serialization;
	Create shard search transport request;
	Handle test filtering aliases;
	Handle test removed alias filter;
	Handle test unknown alias filter;
	Get filter;
	Remove index meta data;
	Add index meta data;
	Get alias filter

384.14. Add a class for sub search context. It allows to:

	Instantiate sub search context  with search context;
	Do sub search context close;
	Pre process;
	Build filtered query;
	Scroll context;
	Get aggregations;
	Highlight sub search context;
	Highlight search context highlight;
	Suggest suggestion search context;
	Add rescore;
	Check if sub search context has script fields;
	Get script fields;
	Handle source requested;
	Check if sub search context has fetch source context;
	Fetch source context;
	Handle doc value fields context;
	Handle timeout;
	Terminate sub search context after;
	Handle minimum score;
	Get sort;
	Get parsed query;
	Get query;
	Track scores;
	Get parsed post filter;
	Process sub search context sub search context from;
	Get size;
	Check if sub search context has stored fields;
	Check if sub search context has stored fields context;
	Get stored fields requested;
	Get stored fields context;
	Explain sub search context;
	Handle group stats;
	Handle version;
	Seq no and primary term;
	Convert doc ids;
	Get collapse;
	Get accessed;
	Keep alive;
	Handle query result;
	Fetch result;
	Get relative time  in millis

385. Changes to package org.elasticsearch.search.lookup:  

385.1. Add a class for doc lookup. It allows to:

	Instantiate doc lookup  with mapper service, field data lookup function and field data lookup function;
	Handle mapper service;
	Get mapped field type for field;
	Get leaf doc lookup;
	Get types

385.2. Add a class for field lookup. It allows to:

	Instantiate field lookup  with mapped field type;
	Get field type;
	Get fields;
	Handle fields;
	Handle clear;
	Check if field lookup is empty;
	Get value;
	Get values

385.3. Add an object creator class for fields lookup. It allows to:

	Instantiate fields lookup  with mapper service;
	Get leaf fields lookup

385.4. Add a class for leaf doc lookup. It allows to:

	Instantiate leaf doc lookup  with mapper service, field data lookup function, leaf reader context and leaf reader context;
	Handle mapper service;
	Get mapped field type for field;
	Set document;
	Get leaf doc lookup;
	Run;
	Check if leaf doc lookup contains key;
	Get size;
	Check if leaf doc lookup is empty;
	Check if leaf doc lookup contains value;
	Put script doc values;
	Remove leaf doc lookup;
	Put map;
	Handle clear;
	Handle key set;
	Get values;
	Get entry set

385.5. Add a class for leaf fields lookup. It allows to:

	Instantiate leaf fields lookup  with mapper service, leaf reader and leaf reader;
	Set document;
	Get leaf fields lookup;
	Check if leaf fields lookup contains key;
	Get size;
	Check if leaf fields lookup is empty;
	Handle key set;
	Get values;
	Get entry set;
	Put leaf fields lookup;
	Remove leaf fields lookup;
	Handle clear;
	Put map;
	Check if leaf fields lookup contains value;
	Load field data;
	Handle clear cache

385.6. Add a class for leaf search lookup. It allows to:

	Instantiate leaf search lookup  with ctx leaf reader context, doc lookup, source lookup, leaf fields lookup and leaf fields lookup;
	Process leaf search lookup leaf search lookup as map;
	Get source;
	Get fields;
	Get doc;
	Set document

385.7. Add a class for search lookup. It allows to:

	Instantiate search lookup  with mapper service, field data lookup function and field data lookup function;
	Get leaf search lookup;
	Get doc;
	Get source

385.8. Add a class for source lookup. It allows to:

	Get source;
	Get source content type;
	Load source  if needed;
	Get source as map and type;
	Get source as map;
	Set segment and document;
	Set source;
	Set source content type;
	Handle internal source ref;
	Extract raw values;
	Get filter;
	Extract value;
	Get source lookup;
	Get size;
	Check if source lookup is empty;
	Check if source lookup contains key;
	Check if source lookup contains value;
	Handle key set;
	Get values;
	Get entry set;
	Put source lookup;
	Remove source lookup;
	Put map;
	Handle clear

386. Changes to package org.elasticsearch.search.morelikethis:  

386.1. Add a class for more like this IT. It allows to:

	Handle node plugins;
	Handle test simple more like this;
	Handle test simple more like this with types;
	Test more  like this for zero tokens in one of the analyzed fields;
	Handle test simple more like on long field;
	Test more  like this with aliases;
	Test more  like this with aliases in like documents;
	Test more  like this issue 2197;
	Test more  like with custom routing;
	Test more  like this issue routing not serialized;
	Handle test numeric field;
	Test more  like this with field alias;
	Handle test simple more like include;
	Handle test simple more like this ids;
	Test more  like this multi value fields;
	Handle test minimum should match;
	Test more  like this artificial docs;
	Test more  like this malformed artificial docs;
	Test more  like this unlike;
	Handle test select fields;
	Handle test with routing;
	Handle test with missing routing

387. Changes to package org.elasticsearch.search.msearch:  

387.1. Add a class for multi search IT. It allows to:

	Handle test simple multi search;
	Handle test simple multi search more requests

388. Changes to package org.elasticsearch.search.nested:  

388.1. Add a class for simple nested IT. It allows to:

	Handle test simple nested;
	Handle test multi nested;
	Handle test delete nested docs with alias;
	Handle test explain;
	Handle test simple nested sorting;
	Handle test simple nested sorting with nested filter missing;
	Handle test nested sort with multi level filtering;
	Handle test leaking sort values;
	Handle test sort nested with nested filter;
	Handle test nested sorting with nested filter as filter;
	Handle test check fixed bit set cache;
	Assert document count

389. Changes to package org.elasticsearch.search.preference:  

389.1. Add a class for search preference IT. It allows to:

	Handle node settings;
	Handle test stop one node preference with red state;
	Handle test no preference random;
	Handle test simple preference;
	Handle test that specifying non existing nodes returns useful error;
	Handle test nodes only random;
	Assert search  on random nodes

390. Changes to package org.elasticsearch.search.profile:  

390.1. Add a class for abstract internal profile tree. It allows to:

	Instantiate abstract internal profile tree;
	Get profile breakdown;
	Add dependency node;
	Create profile breakdown;
	Poll last;
	Get tree;
	Do get tree;
	Get type  from element;
	Get description  from element;
	Update parent

390.2. Add a class for abstract profile breakdown. It allows to:

	Instantiate abstract profile breakdown  with clazz class;
	Get timer;
	Set timer;
	Convert abstract profile breakdown to timing map

390.3. Add a class for abstract profiler. It allows to:

	Instantiate abstract profiler  with abstract internal profile tree;
	Get query breakdown;
	Poll last element;
	Get tree

390.4. Add a class for profile result. It allows to:

	Instantiate profile result  with timings map, children list and children list;
	Instantiate profile result  with stream input;
	Write  to stream output;
	Get lucene description;
	Get query name;
	Get time breakdown;
	Get time;
	Get profiled children;
	Convert profile result to X content;
	Process profile result profile result from X content;
	Get total time

390.5. Add a class for profile result tests. It allows to:

	Create test item;
	Handle test from X content;
	Handle test from X content with random fields;
	Do profile result tests from X content test with random fields;
	Convert test

390.6. Add a class for profile shard result. It allows to:

	Instantiate profile shard result  with query profile results list, aggregation profile shard result and aggregation profile shard result;
	Instantiate profile shard result  with stream input;
	Write  to stream output;
	Get query profile results;
	Get aggregation profile results

390.7. Add a class for profilers. It allows to:

	Instantiate profilers  with context index searcher;
	Add query profiler;
	Get current query profiler;
	Get query profilers;
	Get aggregation profiler

390.8. Add a class for search profile shard results. It allows to:

	Instantiate search profile shard results  with shard results map;
	Instantiate search profile shard results  with stream input;
	Get shard results;
	Write  to stream output;
	Convert search profile shard results to X content;
	Process search profile shard results search profile shard results from X content;
	Parse search profile results entry;
	Build shard results

390.9. Add a class for search profile shard results tests. It allows to:

	Create test item;
	Handle test from X content;
	Handle test from X content with random fields;
	Do search profile shard results tests from X content test with random fields

390.10. Add a class for timer. It allows to:

	Handle nano time;
	Start timer;
	Stop timer;
	Get count;
	Get approximate timing

390.11. Add a class for timer tests. It allows to:

	Handle test timing interval;
	Handle nano time;
	Handle test extrapolate;

391. Changes to package org.elasticsearch.search.profile.aggregation:  

391.1. Add a class for aggregation profile breakdown. It allows to:

	Instantiate aggregation profile breakdown

391.2. Add a class for aggregation profile shard result. It allows to:

	Instantiate aggregation profile shard result  with agg profile results list;
	Instantiate aggregation profile shard result  with stream input;
	Write  to stream output;
	Get profile results;
	Convert aggregation profile shard result to X content;
	Process aggregation profile shard result aggregation profile shard result from X content

391.3. Add a class for aggregation profile shard result tests. It allows to:

	Create test item;
	Handle test from X content;
	Convert test

391.4. Add a class for aggregation profiler. It allows to:

	Instantiate aggregation profiler;
	Get query breakdown;
	Get aggregator path

391.5. Add a class for aggregation profiler IT. It allows to:

	Get number of shards;
	Handle setup suite scope cluster;
	Handle test simple profile;
	Handle test multi level profile;
	Handle test multi level profile breadth first;
	Handle test diversified agg profile;
	Handle test complex profile;
	Test no profile

391.6. Add a class for internal aggregation profile tree. It allows to:

	Create profile breakdown;
	Get type  from element;
	Get description  from element

391.7. Add a class for profiling aggregator. It allows to:

	Instantiate profiling aggregator  with delegate aggregator, aggregation profiler and aggregation profiler;
	Close profiling aggregator;
	Score mode;
	Name profiling aggregator;
	Get context;
	Get parent;
	Sub aggregator;
	Build aggregation;
	Build empty aggregation;
	Get leaf collector;
	Pre collection;
	Post collection;
	Convert profiling aggregator to string;
	Get unwrap

391.8. Add a class for profiling leaf bucket collector. It allows to:

	Instantiate profiling leaf bucket collector  with delegate leaf bucket collector, aggregation profile breakdown and aggregation profile breakdown;
	Collect profiling leaf bucket collector;
	Set scorer

392. Changes to package org.elasticsearch.search.profile.query:  

392.1. Add a class for collector result. It allows to:

	Instantiate collector result  with children list;
	Instantiate collector result  with stream input;
	Write  to stream output;
	Get time;
	Get reason;
	Get name;
	Get profiled children;
	Convert collector result to X content;
	Process collector result collector result from X content

392.2. Add a class for collector result tests. It allows to:

	Create test item;
	Handle test from X content;
	Handle test from X content with random fields;
	Do collector result tests from X content test with random fields;
	Convert test

392.3. Add a class for internal profile collector. It allows to:

	Instantiate internal profile collector  with collector, children list and children list;
	Get time;
	Get reason;
	Get name;
	Handle derive collector name;
	Get leaf collector;
	Score mode;
	Get collector tree;
	Do get collector tree

392.4. Add a class for internal query profile tree. It allows to:

	Create profile breakdown;
	Get type  from element;
	Get description  from element;
	Start rewrite time;
	Stop and add rewrite time;
	Get rewrite time

392.5. Add a class for profile collector. It allows to:

	Instantiate profile collector  with in collector;
	Get delegate;
	Score mode;
	Get leaf collector;
	Collect;
	Set scorer;
	Get time

392.6. Add a class for profile scorer. It allows to:

	Instantiate profile scorer  with profile weight, scorer, query profile breakdown and query profile breakdown;
	Get doc ID;
	Get score;
	Get weight;
	Get children;
	Get iterator;
	Get advance;
	Handle next doc;
	Get cost;
	Two phase iterator;
	Handle matches;
	Match cost;
	Get advance shallow;
	Get max score

392.7. Add a class for profile weight. It allows to:

	Instantiate profile weight  with query, sub query weight, query profile breakdown and query profile breakdown;
	Get scorer;
	Handle scorer supplier;
	Get;
	Get cost;
	Handle bulk scorer;
	Explain leaf reader context;
	Extract terms;
	Check if profile weight is cacheable

392.8. Add a class for query profile breakdown. It allows to:

	Instantiate query profile breakdown

392.9. Add a class for query profile shard result. It allows to:

	Instantiate query profile shard result  with query profile results list, profile collector result and profile collector result;
	Instantiate query profile shard result  with stream input;
	Write  to stream output;
	Get query results;
	Get rewrite time;
	Get collector result;
	Convert query profile shard result to X content;
	Process query profile shard result query profile shard result from X content

392.10. Add a class for query profile shard result tests. It allows to:

	Create test item;
	Handle test from X content

392.11. Add a class for query profiler. It allows to:

	Instantiate query profiler;
	Set collector;
	Start rewrite time;
	Stop and add rewrite time;
	Get rewrite time;
	Get collector

392.12. Add a class for query profiler IT. It allows to:

	Handle test profile query;
	Handle test profile matches regular;
	Handle test simple match;
	Handle test bool;
	Handle test empty bool;
	Handle test collapsing bool;
	Handle test boosting;
	Handle test dis max range;
	Handle test range;
	Handle test phrase;
	Test no profile

392.13. Add a class for random query generator. It allows to:

	Handle random query builder;
	Handle random terminal query;
	Handle random query string;
	Handle random field;
	Handle random term query;
	Handle random terms query;
	Handle random range query;
	Handle random bool query;
	Handle random boosting query;
	Handle random constant score query;
	Handle random common terms query;
	Handle random fuzzy query;
	Handle random dis max query;
	Handle random I ds query

393. Changes to package org.elasticsearch.search.query:  

393.1. Add a class for cancellable collector. It allows to:

	Instantiate cancellable collector  with cancelled boolean supplier, in collector and in collector;
	Get leaf collector

393.2. Add a class for exists IT. It allows to:

	Handle test empty index;
	Handle test exists;
	Handle test field alias;
	Handle test field alias with no doc values

393.3. Add a class for multi match query IT. It allows to:

	Handle node plugins;
	Handle init;
	Create mapping;
	Handle test defaults;
	Handle test phrase type;
	Handle test single field;
	Handle test cutoff freq;
	Handle test equivalence;
	Handle test cross field mode;
	Handle test fuzzy field level boosting;
	Assert equivalent;
	Fill list;
	Fill random;
	Handle random pick except;
	Randomize type

393.4. Add a class for query collector context. It allows to:

	Instantiate query collector context;
	Create in collector;
	Create internal profile collector with profiler;
	Post process;
	Create query collector;
	Create query collector  with profiler;
	Create min score collector context;
	Create filtered collector context;
	Create multi collector context;
	Create cancellable collector context;
	Create early termination collector context

393.5. Add a class for query phase execution exception. It allows to:

	Instantiate query phase execution exception  with search context, cause throwable and cause throwable;
	Instantiate query phase execution exception  with stream input;
	Instantiate query phase execution exception  with search context

393.6. Add a class for query search request. It allows to:

	Instantiate query search request;
	Instantiate query search request  with original indices, aggregated dfs and aggregated dfs;
	Instantiate query search request  with stream input;
	Write  to stream output;
	I query search request;
	Get dfs;
	Get indices;
	Get indices options;
	Read  from stream input;
	Create task;
	Get description

393.7. Add a class for query search result. It allows to:

	Instantiate query search result;
	Instantiate query search result  with stream input;
	Instantiate query search result  with search shard target;
	Handle query result;
	Search query search result;
	Get terminated early;
	Handle top docs;
	Check if query search result has consumed top docs;
	Consume top docs;
	Set top docs;
	Get sort value formats;
	Check if query search result has aggs;
	Consume aggs;
	Handle aggregations;
	Consume profile result;
	Check if query search result has profile results;
	Profile results;
	Suggest query search result;
	Suggest suggest;
	Process query search result query search result from;
	Get size;
	Get service time EWMA;
	Node queue size;
	Check if query search result has suggest hits;
	Check if query search result has search context;
	Read query search result;
	Read  from stream input;
	Read stream input from with id;
	Write  to stream output;
	Write stream output to no id;
	Get total hits;
	Get max score

393.8. Add a class for query string IT. It allows to:

	Create random cluster setting;
	Handle setup;
	Handle node settings;
	Handle test basic all query;
	Handle test with date;
	Handle test with lots of types;
	Handle test doc with all types;
	Handle test keyword with whitespace;
	Test all fields;
	Handle test phrase query on field with no positions;
	Handle test boolean strict query;
	Test all fields  with specified leniency;
	Handle test limit on expanded fields;
	Handle test field alias;
	Handle test field alias with embedded field names;
	Handle test field alias with wildcard field;
	Handle test field alias on disallowed field type;
	Assert hits

393.9. Add a class for scroll query search result. It allows to:

	Instantiate scroll query search result;
	Instantiate scroll query search result  with stream input;
	Instantiate scroll query search result  with query search result, search shard target and search shard target;
	Set search shard target;
	Set shard index;
	Handle query result;
	Read  from stream input;
	Write  to stream output

393.10. Add a class for search query IT. It allows to:

	Handle node plugins;
	Handle maximum number of shards;
	Handle maximum number of replicas;
	Handle test empty query string;
	Handle test issue 3177;
	Handle test index options;
	Handle test constant score query;
	Test all docs query string;
	Handle test common terms query;
	Handle test query string analyzed wildcard;
	Handle test lowercase expanded terms;
	Handle test date range in query string;
	Handle test date range in query string with time zone 7880;
	Handle test date range in query string with time zone 10477;
	Handle test type filter;
	Handle test ids query tests id indexed;
	Handle test term index query;
	Handle test filter exists missing;
	Handle test pass query or filter as JSON string;
	Handle test filters with custom cache key;
	Handle test match query numeric;
	Handle test match query fuzzy;
	Handle test multi match query;
	Handle test match query zero terms query;
	Handle test multi match query zero terms query;
	Handle test multi match query min should match;
	Handle test bool query min should match bigger than number of should clauses;
	Handle test fuzzy query string;
	Handle test quoted query string with boost;
	Handle test special range syntax in query string;
	Handle test emptyterms query;
	Handle test terms query;
	Handle test terms lookup filter;
	Handle test basic query by id;
	Handle test numeric terms and ranges;
	Handle test numeric range filter 2826;
	Handle test must not;
	Handle test intervals;
	Handle test simple span;
	Handle test span multi term query;
	Handle test span not;
	Handle test simple DFS query;
	Handle test multi field query string;
	Handle test multi match lenient issue 3797;
	Handle test min score;
	Handle test query string with slop and fields;
	Handle test date provided as number;
	Handle test range query with time zone;
	Handle test range query with locale mapping;
	Handle test search empty doc;
	Handle test match phrase prefix query;
	Handle test query string parser cache;
	Handle test range query range fields 24744;
	Handle test range query type field 31476;
	Handle test nested query with field alias;
	Handle test field aliases for meta fields

394. Changes to package org.elasticsearch.search.rescore:  

394.1. Add a class for query rescore mode tests. It allows to:

	Handle test query rescore mode

394.2. Add a class for rescore context. It allows to:

	Instantiate rescore context  with rescorer;
	Get rescorer;
	Get window size;
	Set rescored docs;
	Check if rescore context is rescored;
	Get queries

394.3. Add a class for rescore phase. It allows to:

	Pre process;
	Execute search context;
	Handle top docs sorted by score

394.4. Add an interface declaration  for rescorer. It allows to:

	Rescore top docs;
	Explain index searcher

394.5. Add a class for rescorer builder. It allows to:

	Instantiate rescorer builder;
	Instantiate rescorer builder  with stream input;
	Write  to stream output;
	Do write  to stream output;
	Get window size;
	Parse X content parser from X content;
	Convert rescorer builder to X content;
	Do X content;
	Build context;
	Handle inner build context;
	Hash code;
	Check if rescorer builder equals;
	Convert rescorer builder to string

395. Changes to package org.elasticsearch.search.scroll:  

395.1. Add a class for rest clear scroll action tests. It allows to:

	Handle test parse clear scroll request with invalid json throws exception;
	Handle test body params override query string params

395.2. Add a class for rest search scroll action tests. It allows to:

	Handle test parse search scroll request with invalid json throws exception;
	Handle test body params override query string params

395.3. Add a class for search scroll IT. It allows to:

	Handle cleanup;
	Handle test simple scroll query then fetch;
	Handle test simple scroll query then fetch small size uneven distribution;
	Handle test scroll and update index;
	Handle test simple scroll query then fetch clear scroll ids;
	Handle test clear non existent scroll id;
	Handle test clear illegal scroll id;
	Handle test simple scroll query then fetch clear all scroll ids;
	Handle test deep scrolling does not blow up;
	Handle test that non existing scroll id returns correct exception;
	Handle test string sort missing asc terminates;
	Handle test close and reopen or delete with active scroll;
	Handle test scroll invalid default keep alive;
	Handle test invalid scroll keep alive;
	Assert clear scroll response to X content response

395.4. Add a class for search scroll with failing nodes IT. It allows to:

	Get number of shards;
	Get number of replicas;
	Handle test scan scroll with shard exceptions

396. Changes to package org.elasticsearch.search.searchafter:  

396.1. Add a class for search after builder. It allows to:

	Instantiate search after builder;
	Instantiate search after builder  with stream input;
	Write  to stream output;
	Set sort values;
	Get sort values;
	Build field doc;
	Extract sort type;
	Convert value  from sort field;
	Convert value  from sort type;
	Convert search after builder to X content;
	Handle inner to X content;
	Process search after builder search after builder from X content;
	Check if search after builder equals;
	Hash code;
	Convert search after builder to string

396.2. Add a class for search after builder tests. It allows to:

	Handle random search after builder;
	Handle random json search from builder;
	Get serialized copy;
	Handle test serialization;
	Handle test equals and hashcode;
	Handle test from X content;
	Handle test with null array;
	Handle test with empty array;
	Handle test bad types;
	Handle random search from builder with sort value throws;
	Handle test extract sort type;
	Get reduced type;
	Handle new comparator

397. Changes to package org.elasticsearch.search.simple:  

397.1. Add a class for simple search IT. It allows to:

	Handle test search null index;
	Handle test search random preference;
	Handle test simple ip;
	Handle test ip cidr;
	Handle test simple id;
	Handle test simple date range;
	Handle test simple terminate after count;
	Handle test simple index sort early terminate;
	Handle test insane from and size;
	Handle test too large from and size;
	Test large  from and size succeeds;
	Handle test too large from and size ok by setting;
	Handle test too large from and size ok by dynamic setting;
	Handle test too large from and size backwards compatibility recommendation;
	Handle test too large rescore window;
	Handle test too large rescore ok by setting;
	Handle test too large rescore ok by result window setting;
	Handle test too large rescore ok by dynamic setting;
	Handle test too large rescore ok by dynamic result window setting;
	Handle test query numeric field with regex;
	Test simple search IT too long regex in regexp query;
	Assert window fails;
	Assert rescore window fails

398. Changes to package org.elasticsearch.search.slice:  

398.1. Add a class for doc values slice query. It allows to:

	Instantiate doc values slice query;
	Create weight;
	Get scorer;
	Handle matches;
	Match cost;
	Check if  is cacheable

398.2. Add a class for doc values slice query tests. It allows to:

	Handle test basics;
	Handle test search;
	Get leaf collector;
	Set scorer;
	Collect;
	Score mode

398.3. Add a class for search slice IT. It allows to:

	Handle setup index;
	Handle test search sort;
	Handle test with preference and routings;
	Handle test invalid fields;
	Handle test invalid query;
	Assert search slices  with scroll;
	Find root cause

398.4. Add a class for slice builder. It allows to:

	Instantiate slice builder;
	Instantiate slice builder  with stream input;
	Write  to stream output;
	Set field;
	Get field;
	Set id;
	Get id;
	Set max;
	Get max;
	Convert slice builder to X content;
	Handle inner to X content;
	Process slice builder slice builder from X content;
	Check if slice builder equals;
	Hash code;
	Convert slice builder to filter;
	Build shard iterator;
	Convert slice builder to string

398.5. Add a class for slice query. It allows to:

	Instantiate slice query;
	Check if slice query contains;
	Get field;
	Get id;
	Get max;
	Check if slice query equals;
	Hash code;
	Convert slice query to string

398.6. Add a class for terms slice query. It allows to:

	Instantiate terms slice query;
	Create weight;
	Get scorer;
	Check if  is cacheable;
	Build leaf reader

398.7. Add a class for terms slice query tests. It allows to:

	Handle test basics;
	Handle test search;
	Get leaf collector;
	Set scorer;
	Collect;
	Score mode

399. Changes to package org.elasticsearch.search.sort:  

399.1. Add a class for abstract sort test case. It allows to:

	Handle init;
	Process abstract sort test case abstract sort test case after class;
	Create test item;
	Mutate original;
	Process abstract sort test case abstract sort test case from X content;
	Handle test from X content;
	Assert warnings;
	Handle test build sort field;
	Handle sort field assertions;
	Handle test serialization;
	Handle test equals and hashcode;
	Create mock shard context;
	Get field mapper;
	Get object mapper;
	Provide mapped field type;
	X content registry;
	Handle random nested filter;
	Get copy

399.2. Add a class for field sort builder. It allows to:

	Instantiate field sort builder  with template field sort builder;
	Instantiate field sort builder;
	Instantiate field sort builder  with stream input;
	Write  to stream output;
	Get field name;
	Missing field sort builder;
	Handle unmapped type;
	Get sort mode;
	Set nested filter;
	Get nested filter;
	Set nested path;
	Get nested path;
	Get nested sort;
	Set nested sort;
	Get numeric type;
	Set numeric type;
	Convert field sort builder to X content;
	Resolve numeric type;
	Build query shard context;
	Check if field sort builder equals;
	Hash code;
	Get writeable name;
	Process field sort builder field sort builder from X content;
	Rewrite ctx query rewrite context

399.3. Add a class for field sort builder tests. It allows to:

	Create test item;
	Handle random field sort builder;
	Mutate original field sort builder;
	Handle sort field assertions;
	Handle test build sort field missing value;
	Handle test build sort field order;
	Handle test multi value mode;
	Handle test build nested;
	Handle test unknown option fails;
	Provide mapped field type;
	Handle test mode non numeric field;
	Handle test nested sort both throws;
	Handle test nested rewrites;
	Rewrite query rewrite context;
	Handle test nested sort rewrites;
	Assert warnings;
	Process field sort builder tests field sort builder tests from X content

399.4. Add a class for geo distance IT. It allows to:

	Handle forbid private index settings;
	Handle test distance sorting MV fields;
	Handle test distance sorting with missing geo point;
	Handle test distance sorting nested fields;
	Handle test geo distance filter;
	Handle test distance sorting with unmapped field

399.5. Add a class for geo distance sort builder. It allows to:

	Instantiate geo distance sort builder  with points;
	Instantiate geo distance sort builder;
	Instantiate geo distance sort builder  with original geo distance sort builder;
	Instantiate geo distance sort builder  with stream input;
	Write  to stream output;
	Get field name;
	Get point;
	Get points;
	Geo distance;
	Get unit;
	Get validation;
	Get sort mode;
	Set nested filter;
	Get nested filter;
	Set nested path;
	Get nested path;
	Get nested sort;
	Set nested sort;
	Ignore unmapped;
	Convert geo distance sort builder to X content;
	Get writeable name;
	Check if geo distance sort builder equals;
	Hash code;
	Process geo distance sort builder geo distance sort builder from X content;
	Build query shard context;
	Get reduced type;
	Handle new comparator;
	Get numeric doc values;
	Parse geo points;
	Rewrite ctx query rewrite context

399.6. Add a class for geo distance sort builder IT. It allows to:

	Handle forbid private index settings;
	Test many  to many geo points;
	Convert test singe;
	Create shuffeld JSON array;
	Test many  to many geo points with different formats;
	Handle test single point geo distance sort;
	Check correct sort order  for geo sort;
	Handle test cross index ignore unmapped

399.7. Add a class for geo distance sort builder tests. It allows to:

	Create test item;
	Handle random geo distance sort builder;
	Provide mapped field type;
	Get points;
	Geo distance;
	Mutate original geo distance sort builder;
	Handle sort field assertions;
	Handle test sort mode sum is rejected in setter;
	Handle test sort mode sum is rejected in JSON;
	Handle test geo distance sort can be parsed from geo hash;
	Handle test geo distance sort parser many points no exception;
	Handle test geo distance sort deprecated sort mode exception;
	Parse sort builder;
	Assert warnings;
	Process geo distance sort builder tests geo distance sort builder tests from X content;
	Handle test common case is optimized;
	Handle test build sort field order;
	Handle test multi value mode;
	Handle test build nested;
	Handle test build coerce;
	Handle test build invalid points;
	Handle test nested sort both throws;
	Handle test nested rewrites;
	Rewrite query rewrite context;
	Handle test nested sort rewrites;

399.8. Add a class for nested sort builder. It allows to:

	Instantiate nested sort builder;
	Instantiate nested sort builder  with stream input;
	Get path;
	Get filter;
	Get max children;
	Set filter;
	Set max children;
	Get nested sort;
	Set nested sort;
	Write  to stream output;
	Convert nested sort builder to X content;
	Process nested sort builder nested sort builder from X content;
	Check if nested sort builder equals;
	Hash code;
	Rewrite ctx query rewrite context

399.9. Add a class for nested sort builder tests. It allows to:

	Handle init;
	Process nested sort builder tests nested sort builder tests after class;
	X content registry;
	Handle test from X content;
	Create random nested sort;
	Handle test serialization;
	Get copy;
	Mutate original nested sort builder;
	Handle test equals and hashcode;
	Handle test rewrite;
	Rewrite query query rewrite context

399.10. Add a class for score sort builder. It allows to:

	Instantiate score sort builder;
	Instantiate score sort builder  with stream input;
	Write  to stream output;
	Convert score sort builder to X content;
	Process score sort builder score sort builder from X content;
	Build query shard context;
	Check if score sort builder equals;
	Hash code;
	Get writeable name;
	Rewrite ctx query rewrite context

399.11. Add a class for score sort builder tests. It allows to:

	Create test item;
	Handle random score sort builder;
	Mutate original score sort builder;
	Handle test illegal order;
	Handle test parse order;
	Handle test reverse option fails;
	Handle sort field assertions;
	Process score sort builder tests score sort builder tests from X content

399.12. Add a class for script sort builder. It allows to:

	Instantiate script sort builder  with script, script sort type and script sort type;
	Instantiate script sort builder  with original script sort builder;
	Instantiate script sort builder  with stream input;
	Write  to stream output;
	Get script;
	Get type;
	Get sort mode;
	Set nested filter;
	Get nested filter;
	Set nested path;
	Get nested path;
	Get nested sort;
	Set nested sort;
	Convert script sort builder to X content;
	Process script sort builder script sort builder from X content;
	Build query shard context;
	Get values;
	Handle advance exact;
	Handle binary value;
	Set scorer;
	Handle double value;
	Check if script sort builder equals;
	Hash code;
	Get writeable name;
	Read stream input from stream;
	Process script sort builder script sort builder from string;
	Convert script sort builder to string;
	Rewrite ctx query rewrite context

399.13. Add a class for script sort builder tests. It allows to:

	Create test item;
	Handle random script sort builder;
	Mutate original script sort builder;
	Handle sort field assertions;
	Handle test script sort type;
	Handle test script sort type null;
	Handle test script sort type illegal argument;
	Handle test parse json;
	Handle test parse json simple;
	Handle test parse bad field name exceptions;
	Handle test parse bad field name exceptions on start object;
	Handle test parse unexpected token;
	Handle test bad sort mode;
	Handle test multi value mode;
	Handle test build correct comparator type;
	Handle test build nested;
	Handle test nested sort both throws;
	Handle test nested rewrites;
	Rewrite query rewrite context;
	Handle test nested sort rewrites;
	Process script sort builder tests script sort builder tests from X content

399.14. Add a class for sort and formats. It allows to:

	Instantiate sort and formats  with sort, formats and formats

399.15. Add a class for sort builder tests. It allows to:

	Handle init;
	Process sort builder tests sort builder tests after class;
	Handle test single field sort;
	Handle test random sort builders;
	Handle random sort builder list;
	Handle test multi field sort;
	X content registry;
	Parse sort

399.16. Add an object creator class for sort builders. It allows to:

	Score sort;
	Get field sort;
	Get script sort;
	Geo distance sort;

399.17. Add a class for sort field and format. It allows to:

	Instantiate sort field and format  with sort field, doc value format and doc value format

399.18. Add a class for sort mode tests. It allows to:

	Handle test sort mode;
	Handle test parsing from string exceptions

399.19. Add a class for sort order tests. It allows to:

	Handle test distance unit names;
	Handle test read write;
	Handle test from string

400. Changes to package org.elasticsearch.search.source:  

400.1. Add a class for metadata fetching IT. It allows to:

	Handle test simple;
	Handle test inner hits;
	Handle test with routing;
	Handle test invalid

400.2. Add a class for source fetching IT. It allows to:

	Handle test source default behavior;
	Handle test source filtering;
	Handle test source with wildcard filtering

401. Changes to package org.elasticsearch.search.suggest:  

401.1. Add a class for abstract suggestion builder test case. It allows to:

	Handle init;
	Process abstract suggestion builder test case abstract suggestion builder test case after class;
	Handle test serialization;
	Handle random test builder;
	Set common properties  on random builder;
	Handle random suggestion builder;
	Handle test equals and hashcode;
	Handle test from X content;
	Handle test build;
	Assert suggestion context;
	Handle mock field type;
	Get shuffle protected fields;
	Mutate first builder SB;
	Mutate specific parameters;
	Get copy;
	X content registry

401.2. Add a class for completion suggestion option tests. It allows to:

	Create test item;
	Handle test from X content;
	Handle test from X content with random fields;
	Do test  from X content;
	Convert test

401.3. Add a class for context completion suggest search IT. It allows to:

	Get number of replicas;
	Handle test context prefix;
	Handle test context regex;
	Handle test context fuzzy;
	Handle test context filtering works with UTF 8 categories;
	Handle test single context filtering;
	Handle test single context boosting;
	Handle test multi context filtering;
	Handle test multi context boosting;
	Test several contexts;
	Handle test geo filtering;
	Handle test geo boosting;
	Handle test geo point context;
	Handle test geo neighbors;
	Handle test geo field;
	Handle test skip duplicates with contexts;
	Assert suggestions;
	Create index and mapping;
	Create index and mapping and settings

401.4. Add a class for direct spellchecker settings. It allows to:

	Suggest mode;
	Get accuracy;
	Handle accuracy;
	Get sort;
	Handle sort;
	String distance;
	Max edits;
	Get max inspections;
	Handle max inspections;
	Max term freq;
	Prefix length;
	Min word length;
	Min doc freq;
	Create direct spell checker;
	Convert direct spellchecker settings to string

401.5. Add a class for suggest builder. It allows to:

	Instantiate suggest builder;
	Instantiate suggest builder  with stream input;
	Write  to stream output;
	Set global text;
	Get global text;
	Add suggestion;
	Get suggestions;
	Convert suggest builder to X content;
	Process suggest builder suggest builder from X content;
	Build query shard context;
	Check if suggest builder equals;
	Hash code;
	Convert suggest builder to string

401.6. Add a class for suggest builder tests. It allows to:

	Handle init;
	Process suggest builder tests suggest builder tests after class;
	Handle test from X content;
	Handle test equals and hashcode;
	Handle test serialization;
	Handle test illegal suggestion name;
	Create mutation;
	Handle random suggest builder;
	Handle random suggestion builder;
	X content registry

401.7. Add an object creator class for suggest builders. It allows to:

	Get term suggestion;
	Get phrase suggestion;
	Get completion suggestion

401.8. Add a class for suggest phase. It allows to:

	Pre process;
	Execute search context

401.9. Add a class for suggest tests. It allows to:

	Get default named X contents;
	Get suggesters registry;
	X content registry;
	Create test item;
	Handle test from X content;
	Convert test;
	Handle test filter;
	Handle test suggestion ordering;
	Handle test parsing exception on unknown suggestion;
	Handle test merging suggestion options;
	Handle test serialization

401.10. Add a class for suggester. It allows to:

	Handle inner execute;
	Execute suggestion

401.11. Add a class for suggestion builder. It allows to:

	Instantiate suggestion builder;
	Instantiate suggestion builder  with in suggestion builder;
	Instantiate suggestion builder  with stream input;
	Write  to stream output;
	Do write  to stream output;
	Get text;
	Prefix suggestion builder;
	Get regex;
	Get field;
	Get analyzer;
	Get size;
	Shard size;
	Convert suggestion builder to X content;
	Handle inner to X content;
	Process suggestion builder suggestion builder from X content;
	Build query shard context;
	Populate common fields;
	Get suggester name;
	Check if suggestion builder equals;
	Equals other;
	Hash code;
	Do hash code

401.12. Add a class for suggestion entry tests. It allows to:

	Create test item;
	Handle test from X content;
	Handle test from X content with random fields;
	Do test  from X content;
	Convert test

401.13. Add a class for suggestion option tests. It allows to:

	Create test item;
	Handle test from X content;
	Handle test from X content with random fields;
	Do test  from X content;
	Convert test

401.14. Add a class for suggestion tests. It allows to:

	Create test item;
	X content registry;
	Handle test from X content;
	Handle test from X content with random fields;
	Do test  from X content;
	Handle test from X content without type param;
	Handle test unknown suggestion type throws;
	Convert test

401.15. Add a class for term suggestion option tests. It allows to:

	Create test item;
	Handle test from X content;
	Handle test from X content with random fields;
	Do test  from X content;
	Convert test

402. Changes to package org.elasticsearch.search.suggest.completion:  

402.1. Add a class for category context mapping tests. It allows to:

	Handle test indexing with no contexts;
	Handle test indexing with simple contexts;
	Handle test indexing with simple number contexts;
	Handle test indexing with simple boolean contexts;
	Handle test indexing with simple NULL contexts;
	Handle test indexing with context list;
	Handle test indexing with mixed type context list;
	Handle test indexing with mixed type context list having NULL;
	Handle test indexing with multiple contexts;
	Handle test query context parsing basic;
	Handle test boolean query context parsing basic;
	Test number query context parsing basic;
	Handle test NULL query context parsing basic;
	Handle test query context parsing array;
	Handle test query context parsing mixed type values array;
	Handle test query context parsing mixed type values array having NULL;
	Handle test query context parsing object;
	Handle test query context parsing object having boolean;
	Handle test query context parsing object having number;
	Handle test query context parsing object having NULL;
	Handle test query context parsing object array;
	Handle test query context parsing mixed type object array;
	Handle test query context parsing mixed type object array having NULL;
	Handle test query context parsing mixed;
	Handle test query context parsing mixed having NULL;
	Handle test unknown query context parsing;
	Handle test parsing context from document;
	Assert context suggest fields

402.2. Add a class for category query context tests. It allows to:

	Handle random category query context;
	Create test model;
	Process category query context tests category query context tests from X content;
	Handle test null category is illegal;
	Handle test illegal arguments

402.3. Add a class for completion stats. It allows to:

	Instantiate completion stats;
	Instantiate completion stats  with stream input;
	Instantiate completion stats  with fields memory stats;
	Get size  in bytes;
	Get size;
	Get fields;
	Read  from stream input;
	Write  to stream output;
	Convert completion stats to X content;
	Add completion stats

402.4. Add a class for completion suggester. It allows to:

	Instantiate completion suggester;
	Handle inner execute;
	Suggest index searcher

402.5. Add a class for completion suggester builder tests. It allows to:

	Handle random suggestion builder;
	Handle random completion suggestion builder;
	Get shuffle protected fields;
	Mutate specific parameters;
	Handle mock field type;
	Assert suggestion context

402.6. Add a class for completion suggestion context. It allows to:

	Instantiate completion suggestion context  with query shard context;
	Get field type;
	Set field type;
	Set regex options;
	Set fuzzy options;
	Set query contexts;
	Set skip duplicates;
	Get fuzzy options;
	Get regex options;
	Get query contexts;
	Check if completion suggestion context is skip duplicates;
	Convert completion suggestion context to query;
	Create completion query

402.7. Add a class for completion suggestion tests. It allows to:

	Handle test reduce;
	Handle test reduce with duplicates;
	Handle test reduce tiebreak

402.8. Add a class for fuzzy options tests. It allows to:

	Handle random fuzzy options;
	Create mutation;
	Handle test serialization;
	Handle test equals and hash code;
	Handle test illegal arguments

402.9. Add a class for geo context mapping tests. It allows to:

	Handle test indexing with no contexts;
	Handle test indexing with simple contexts;
	Handle test indexing with context list;
	Handle test indexing with multiple contexts;
	Handle test malformed geo field;
	Handle test missing geo field;
	Handle test parsing query context basic;
	Handle test parsing query context geo point;
	Handle test parsing query context object;
	Handle test parsing query context object array;
	Handle test parsing query context mixed

402.10. Add a class for geo query context tests. It allows to:

	Handle random geo query context;
	Create test model;
	Process geo query context tests geo query context tests from X content;
	Handle test null geo point is illegal;
	Handle test illegal arguments;
	Handle test string precision

402.11. Add a class for query context test case. It allows to:

	Create test model;
	Process query context test case query context test case from X content;
	Convert test

402.12. Add a class for regex options tests. It allows to:

	Handle random regex options;
	Create mutation;
	Handle test serialization;
	Handle test illegal argument

403. Changes to package org.elasticsearch.search.suggest.completion.context:  

403.1. Add an object creator class for context builder. It allows to:

	Instantiate context builder;
	Build context builder;
	Get geo;
	Get category

404. Changes to package org.elasticsearch.search.suggest.phrase:  

404.1. Add a class for candidate generator. It allows to:

	Check if candidate generator is known word;
	Get term stats;
	Draw candidates;
	Create candidate;

404.2. Add a class for candidate scorer. It allows to:

	Instantiate candidate scorer  with word scorer;
	Find best candiates;
	Find candidates;
	Update top;
	Get score

404.3. Add a class for correction. It allows to:

	Instantiate correction  with candidates;
	Convert correction to string;
	Join separator bytes ref;
	Compare  to other correction;
	Compare  to other candidates

404.4. Add a class for direct candidate generator builder. It allows to:

	Instantiate direct candidate generator builder;
	Instantiate direct candidate generator builder  with stream input;
	Write  to stream output;
	Get field;
	Suggest mode;
	Get accuracy;
	Get size;
	Get sort;
	String distance;
	Max edits;
	Get max inspections;
	Max term freq;
	Prefix length;
	Min word length;
	Min doc freq;
	Pre filter;
	Post filter;
	Get type;
	Convert direct candidate generator builder to X content;
	Handle output field if not null;
	Build mapper service;
	Resolve suggest mode;
	Resolve distance;
	Transfer value if not null;
	Convert direct candidate generator builder to string;
	Hash code;
	Check if direct candidate generator builder equals

404.5. Add a class for direct candidate generator tests. It allows to:

	Handle test serialization;
	Handle test equals and hashcode;
	Handle test from string;
	Mutate original direct candidate generator builder;
	Handle test from X content;
	Assert equal generators;
	Handle test illegal X content;
	Handle test frequency threshold;
	Assert illegal X content;
	Handle random candidate generator;
	Get copy

404.6. Add a class for laplace. It allows to:

	Instantiate laplace;
	Instantiate laplace  with stream input;
	Write  to stream output;
	Get alpha;
	Handle inner to X content;
	Get writeable name;
	Equals other smoothing model;
	Do hash code;
	Process laplace laplace from X content;
	Build word scorer factory

404.7. Add a class for laplace model tests. It allows to:

	Create test model;
	Create random model;
	Create mutation;
	Assert word scorer;
	Process laplace model tests laplace model tests from X content

404.8. Add a class for laplace scorer. It allows to:

	Instantiate laplace scorer  with index reader, terms, separator bytes ref and separator bytes ref;
	Get alpha;
	Score unigram;
	Score bigram;
	Score trigram

404.9. Add a class for linear interpolating scorer. It allows to:

	Instantiate linear interpolating scorer  with index reader, terms, separator bytes ref and separator bytes ref;
	Trigram lambda;
	Bigram lambda;
	Unigram lambda;
	Score bigram;
	Score trigram

404.10. Add a class for linear interpolation. It allows to:

	Instantiate linear interpolation;
	Instantiate linear interpolation  with stream input;
	Write  to stream output;
	Get trigram lambda;
	Get bigram lambda;
	Get unigram lambda;
	Handle inner to X content;
	Get writeable name;
	Equals other smoothing model;
	Do hash code;
	Process linear interpolation linear interpolation from X content;
	Build word scorer factory

404.11. Add a class for linear interpolation model tests. It allows to:

	Create test model;
	Create random model;
	Create mutation;
	Assert word scorer;
	Process linear interpolation model tests linear interpolation model tests from X content

404.12. Add a class for multi candidate generator wrapper. It allows to:

	Instantiate multi candidate generator wrapper  with candidate generators;
	Check if multi candidate generator wrapper is known word;
	Get term stats;
	Draw candidates;
	Reduce candidate set;
	Create candidate

404.13. Add an object creator class for noisy channel spell checker tests. It allows to:

	Handle test ngram;
	Create components;
	Handle test multi generator;
	Handle test trigram;
	Handle test few docs egde case

404.14. Add a class for phrase suggester. It allows to:

	Instantiate phrase suggester;
	Handle inner execute;
	Build result entry

404.15. Add a class for phrase suggestion builder tests. It allows to:

	Handle random suggestion builder;
	Handle random phrase suggestion builder;
	Handle random smoothing model;
	Mutate specific parameters;
	Handle test invalid parameters;
	Assert suggestion context;
	Assert optional equals

404.16. Add a class for smoothing model. It allows to:

	Convert smoothing model to X content;
	Check if smoothing model equals;
	Hash code;
	Do hash code;
	Process smoothing model smoothing model from X content;
	Build word scorer factory;
	Equals other smoothing model;
	Handle inner to X content

404.17. Add a class for smoothing model test case. It allows to:

	Handle init;
	Process smoothing model test case smoothing model test case after class;
	Create test model;
	Create mutation;
	Process smoothing model test case smoothing model test case from X content;
	Handle test from X content;
	Handle test build word scorer;
	Assert word scorer;
	Handle test serialization;
	Handle test equals and hashcode;
	Get copy

404.18. Add a class for stupid backoff. It allows to:

	Instantiate stupid backoff;
	Instantiate stupid backoff  with stream input;
	Write  to stream output;
	Get discount;
	Handle inner to X content;
	Get writeable name;
	Equals other smoothing model;
	Do hash code;
	Process stupid backoff stupid backoff from X content;
	Build word scorer factory

404.19. Add a class for stupid backoff model tests. It allows to:

	Create test model;
	Create random model;
	Create mutation;
	Assert word scorer;
	Process stupid backoff model tests stupid backoff model tests from X content

404.20. Add a class for stupid backoff scorer. It allows to:

	Instantiate stupid backoff scorer  with index reader, terms, separator bytes ref and separator bytes ref;
	Get discount;
	Score bigram;
	Score trigram

405. Changes to package org.elasticsearch.search.suggest.term:  

405.1. Add a class for sort by tests. It allows to:

	Instantiate sort by tests;
	Handle test valid ordinals;
	Handle test from string;
	Convert test write;
	Handle test read from

405.2. Add a class for string distance impl tests. It allows to:

	Instantiate string distance impl tests;
	Handle test valid ordinals;
	Handle test from string;
	Convert test write;
	Handle test read from

405.3. Add a class for suggest mode tests. It allows to:

	Instantiate suggest mode tests;
	Handle test valid ordinals;
	Handle test from string;
	Convert test write;
	Handle test read from

405.4. Add a class for term suggestion builder. It allows to:

	Instantiate term suggestion builder;
	Instantiate term suggestion builder  with in term suggestion builder;
	Instantiate term suggestion builder  with stream input;
	Do write  to stream output;
	Suggest mode;
	Get accuracy;
	Get sort;
	String distance;
	Max edits;
	Get max inspections;
	Max term freq;
	Prefix length;
	Min word length;
	Min doc freq;
	Handle inner to X content;
	Process term suggestion builder term suggestion builder from X content;
	Build query shard context;
	Get writeable name;
	Equals other term suggestion builder;
	Do hash code;
	Convert term suggestion builder to lucene;
	Write  to stream output;
	Read stream input from stream;
	Resolve term suggestion builder;

405.5. Add a class for term suggestion builder tests. It allows to:

	Handle random suggestion builder;
	Handle random term suggestion builder;
	Handle random suggest mode;
	Handle random sort;
	Handle random string distance;
	Mutate specific parameters;
	Handle test invalid parameters;
	Handle test default values set;
	Handle test malformed json;
	Assert suggestion context

405.6. Add a class for term suggestion context. It allows to:

	Instantiate term suggestion context  with query shard context;
	Get direct spell checker settings;
	Convert term suggestion context to string

406. Changes to package org.elasticsearch.secure_sm:  

406.1. Add a class for secure SM. It allows to:

	Instantiate secure SM;
	Create test secure SM;
	Run;
	Check access;
	Debug thread groups;
	Check thread access;
	Check thread group access;
	Check exit;
	Handle inner check exit;
	Handle class can exit

406.2. Add a class for secure SM tests. It allows to:

	Check if  implies;
	Convert test try;
	Handle test class can exit;
	Handle test create thread;
	Handle test create thread group;
	Handle test modify child;
	Run;
	Test no modify sibling;

406.3. Add a class for thread permission. It allows to:

	Instantiate thread permission;

406.4. Add a class for thread permission tests. It allows to:

	Handle test equals;
	Handle test implies

407. Changes to package org.elasticsearch.similarity:  

407.1. Add a class for similarity IT. It allows to:

	Handle test custom BM 25 similarity

408. Changes to package org.elasticsearch.smoketest:  

408.1. Add a class for eS smoke client test case. It allows to:

	Start client;
	Get client;
	Initialize settings;
	Stop transport client;
	Define index name;
	Handle clean index;
	Do clean

408.2. Add a class for smoke test client IT. It allows to:

	Handle test simple client;
	Handle test put document

408.3. Add a class for smoke test ingest disabled client yaml test suite IT. It allows to:

	Instantiate smoke test ingest disabled client yaml test suite IT  with client yaml test candidate;
	Get parameters

408.4. Add a class for smoke test ingest with all deps client yaml test suite IT. It allows to:

	Instantiate smoke test ingest with all deps client yaml test suite IT  with client yaml test candidate;
	Get parameters

408.5. Add a class for smoke test multi node client yaml test suite IT. It allows to:

	Instantiate smoke test multi node client yaml test suite IT  with client yaml test candidate;
	Get parameters

408.6. Add a class for smoke test plugins client yaml test suite IT. It allows to:

	Instantiate smoke test plugins client yaml test suite IT  with client yaml test candidate;
	Get parameters

409. Changes to package org.elasticsearch.snapshots:  

409.1. Add a class for abstract snapshot integ test case. It allows to:

	Handle node settings;
	Handle node plugins;
	Assert consistent history  in lucene index;
	Get failure count;
	Assert file count;
	Visit file;
	Get number of files;
	Stop node;
	Wait timeout value for block;
	Wait timeout value for completion;
	Block master  from finalizing snapshot on index file;
	Block master  from finalizing snapshot on snap file;
	Block node  with index;
	Block all data nodes;
	Unblock all data nodes;
	Wait timeout value for block on any data node;
	Unblock node

409.2. Add a class for concurrent snapshot execution exception. It allows to:

	Instantiate concurrent snapshot execution exception;
	Instantiate concurrent snapshot execution exception  with snapshot;
	Instantiate concurrent snapshot execution exception  with stream input;
	Get status

409.3. Add a class for invalid snapshot name exception. It allows to:

	Instantiate invalid snapshot name exception;
	Instantiate invalid snapshot name exception  with stream input;
	Get status

409.4. Add a class for min threads snapshot restore IT. It allows to:

	Handle node settings;
	Handle node plugins;
	Handle test concurrent snapshot deletions not allowed;
	Handle test snapshotting with in progress deletion not allowed;
	Handle test restore with in progress deletions not allowed

409.5. Add a class for repositories IT. It allows to:

	Handle test repository creation;
	Find repository;
	Handle test misconfigured repository;
	Handle test repository ack timeout;
	Handle test repository verification

409.6. Add a class for repositories meta data serialization tests. It allows to:

	Create test instance;
	Get instance reader;
	Mutate instance;
	Handle random settings;
	Make test changes;
	Diff reader;
	Get named writeable registry;
	Do parse instance

409.7. Add a class for shared cluster snapshot restore IT. It allows to:

	Handle node plugins;
	Handle random repo settings;
	Handle test basic work flow;
	Handle test single get after restore;
	Handle test fresh index UUID;
	Handle test restore with different mappings and settings;
	Handle test empty snapshot;
	Handle test restore aliases;
	Handle test restore templates;
	Handle test include global state;
	Handle test snapshot file failure during snapshot;
	Handle test data file failure during snapshot;
	Handle test data file failure during restore;
	Handle test data file corruption during restore;
	Handle test unrestorable files during restore;
	Handle test unrestorable index during restore;
	Handle unrestorable use case;
	Convert test deletion of failing;
	Handle test unallocated shards;
	Handle test delete snapshot;
	Handle test delete snapshot with missing index and shard metadata;
	Handle test delete snapshot with missing metadata;
	Handle test delete snapshot with corrupted snapshot file;
	Handle test delete snapshot with corrupted global state;
	Handle test snapshot with missing shard level index file;
	Handle test snapshot closed index;
	Handle test rename on restore;
	Handle test move shard while snapshotting;
	Handle test delete repository while snapshotting;
	Handle test readonly repository;
	Handle test throttling;
	Handle test snapshot status;
	Handle test snapshot relocating primary;
	Handle test snapshot more than once;
	Handle test change settings on restore;
	Handle test recreate blocks on restore;
	Handle test close or delete index during snapshot;
	Handle test close index during restore;
	Handle test delete snapshot while restoring fails;
	Handle test delete orphan snapshot;
	Execute current state;
	Process  on failure;
	Handle cluster state processed;
	Wait timeout value for index;
	Wait timeout value for relocations to start;
	Handle test snapshot name;
	Handle test list corrupted snapshot;
	Handle test restore snapshot with corrupted global state;
	Handle test restore snapshot with corrupted index metadata;
	Handle test can not create snapshots with same name;
	Handle test get snapshots request;
	Handle test snapshot canceled on removed shard;
	Handle test snapshot succeeds after snapshot failure;
	Handle test snapshot status on failed index;
	Handle test get snapshots from index blob only;
	Handle test snapshotting with missing sequence numbers;
	Handle test parallel restore operations;
	Handle test parallel restore operations from single snapshot;
	Handle test aborted snapshot during init does not start;
	Handle test restore increases primary terms;
	Get repository data;
	Verify snapshot info

409.8. Add a class for snapshot. It allows to:

	Instantiate snapshot  with snapshot id;
	Instantiate snapshot  with stream input;
	Get repository;
	Get snapshot id;
	Convert snapshot to string;
	Check if snapshot equals;
	Hash code;
	Compute hash code;
	Write  to stream output

409.9. Add a class for snapshot creation exception. It allows to:

	Instantiate snapshot creation exception  with snapshot id, cause throwable and cause throwable;
	Instantiate snapshot creation exception  with stream input

409.10. Add a class for snapshot exception. It allows to:

	Instantiate snapshot exception  with snapshot;
	Instantiate snapshot exception  with snapshot, cause throwable and cause throwable;
	Instantiate snapshot exception  with snapshot id, cause throwable and cause throwable;
	Instantiate snapshot exception;
	Instantiate snapshot exception  with cause throwable;
	Instantiate snapshot exception  with stream input;
	Write  to stream output;
	Get repository name;
	Get snapshot name

409.11. Add a class for snapshot id. It allows to:

	Instantiate snapshot id;
	Instantiate snapshot id  with stream input;
	Get name;
	Get UUID;
	Convert snapshot id to string;
	Check if snapshot id equals;
	Hash code;
	Compare  to other snapshot id;
	Compute hash code;
	Write  to stream output;
	Convert snapshot id to X content;
	Process snapshot id snapshot id from X content

409.12. Add a class for snapshot missing exception. It allows to:

	Instantiate snapshot missing exception  with snapshot id, cause throwable and cause throwable;
	Instantiate snapshot missing exception;
	Instantiate snapshot missing exception  with stream input;
	Get status

409.13. Add a class for snapshot requests tests. It allows to:

	Handle test restore snapshot request parsing;
	Handle test create snapshot request parsing

409.14. Add a class for snapshot restore exception. It allows to:

	Instantiate snapshot restore exception;
	Instantiate snapshot restore exception  with snapshot;
	Instantiate snapshot restore exception  with snapshot, cause throwable and cause throwable;
	Instantiate snapshot restore exception  with stream input

409.15. Add a class for snapshot shard failure. It allows to:

	Instantiate snapshot shard failure;
	Instantiate snapshot shard failure  with shard id;
	Instantiate snapshot shard failure  with shard id, rest status and rest status;
	Node id;
	Read snapshot shard failure;
	Read  from stream input;
	Write  to stream output;
	Convert snapshot shard failure to string;
	Construct snapshot shard failure;
	Process snapshot shard failure snapshot shard failure from X content;
	Convert snapshot shard failure to X content;
	Check if snapshot shard failure equals;
	Hash code

409.16. Add a class for snapshot shards service IT. It allows to:

	Handle node plugins;
	Handle test retry posting snapshot status messages

409.17. Add a class for snapshot tests. It allows to:

	Handle test snapshot equals;
	Handle test serialization;
	Handle test create snapshot request descrptions;
	Handle test restore snapshot request descrptions

409.18. Add a class for snapshot utils. It allows to:

	Get filter indices

409.19. Add a class for snapshot utils tests. It allows to:

	Handle test index name filtering;
	Assert index name filtering;

409.20. Add an object creator class for snapshots in progress serialization tests. It allows to:

	Create test instance;
	Handle random snapshot;
	Get instance reader;
	Make test changes;
	Diff reader;
	Get named writeable registry;
	Mutate instance

410. Changes to package org.elasticsearch.snapshots.mockstore:  

410.1. Add a class for blob container wrapper. It allows to:

	Instantiate blob container wrapper  with delegate blob container;
	Get path;
	Handle blob exists;
	Read blob;
	Write blob;
	Write blob atomic;
	Delete blob;
	Delete blob ignoring  if not exists;
	Get list blobs;
	Get list blobs by prefix

410.2. Add a class for blob store wrapper. It allows to:

	Instantiate blob store wrapper  with delegate blob store;
	Blob container;
	Delete blob path;
	Close blob store wrapper;
	Delegate blob store wrapper

411. Changes to package org.elasticsearch.tasks:  

411.1. Add a class for cancellable task. It allows to:

	Instantiate cancellable task  with parent task id, headers map and headers map;
	Cancel cancellable task;
	Cancel cancellable task on parent leaving;
	Should cancel children  on cancellation;
	Check if cancellable task is canceled;
	Get reason canceled;
	Handle on canceled

411.2. Add a class for list tasks response tests. It allows to:

	Convert test empty;
	Convert test non empty;
	Create test instance;
	Handle random tasks;
	Do parse instance;
	Handle supports unknown fields;
	Get random fields exclude filter;
	Assert equal instances;
	Assert node failures list on node failures;
	Assert task failures list on task failures;
	Handle test from X content with failures;
	Create test instance  with failures

411.3. Add a class for logging task listener. It allows to:

	Get instance;
	Instantiate logging task listener;
	Process logging task listener logging task listener on response;
	Process logging task listener logging task listener on failure

411.4. Add a class for raw task status. It allows to:

	Instantiate raw task status  with status bytes reference;
	Instantiate raw task status  with stream input;
	Write  to stream output;
	Convert raw task status to X content;
	Get writeable name;
	Convert raw task status to string;
	Convert raw task status to map;
	Check if raw task status equals;
	Hash code

411.5. Add an interface declaration  for task aware request. It allows to:

	Set parent task;
	Get parent task;
	Create task;
	Get description

411.6. Add a class for task canceled exception. It allows to:

	Instantiate task canceled exception;
	Instantiate task canceled exception  with stream input

411.7. Add a class for task id. It allows to:

	Instantiate task id;
	Read stream input from stream;
	Write  to stream output;
	Get parser;
	Get node id;
	Get id;
	Check if task id is set;
	Convert task id to string;
	Check if task id equals;
	Hash code

411.8. Add a class for task id tests. It allows to:

	Handle test serialization;
	Handle test serialization of empty;
	Round trip

411.9. Add a class for task info. It allows to:

	Instantiate task info  with task id, task status, parent task id, headers map and headers map;
	Instantiate task info  with stream input;
	Write  to stream output;
	Get task id;
	Get id;
	Get type;
	Get action;
	Get description;
	Get status;
	Get start time;
	Get running time nanos;
	Check if task info is cancellable;
	Get parent task id;
	Get headers;
	Convert task info to X content;
	Process task info task info from X content;
	Convert task info to string;
	Check if task info equals;
	Hash code

411.10. Add an interface declaration  for task listener. It allows to:

	Process task listener task listener on response;
	Process task listener task listener on failure

411.11. Add a class for task result. It allows to:

	Instantiate task result  with task info;
	Instantiate task result  with task info, error exception and error exception;
	Instantiate task result  with task info, response to content and response to content;
	Instantiate task result  with task info, error bytes reference, result bytes reference and result bytes reference;
	Instantiate task result  with stream input;
	Write  to stream output;
	Get task;
	Get error;
	Get error  as map;
	Get response;
	Get response  as map;
	Check if task result is completed;
	Convert task result to X content;
	Handle inner to X content;
	Convert task result to string;
	Check if task result equals;
	Hash code;

411.12. Add a class for task result tests. It allows to:

	Handle test binary round trip;
	Handle test X content round trip;
	Handle test task info is forward compatible;
	Add random unknown fields;
	Handle random task result;
	Handle random task response;
	Convert to X content

411.13. Add a class for task results service. It allows to:

	Instantiate task results service  with client, cluster service, thread pool and thread pool;
	Handle store result;
	Process  on response;
	Process  on failure;
	Get task result mapping version;
	Do store result;
	Get task result index settings;
	Get task result index mapping

412. Changes to package org.elasticsearch.test:  

412.1. Add a class for abstract diffable serialization test case. It allows to:

	Make test changes;
	Diff reader;
	Handle test diffable serialization

412.2. Add a class for abstract diffable wire serialization test case. It allows to:

	Make test changes;
	Diff reader;
	Handle test diffable serialization

412.3. Add a class for abstract query test case. It allows to:

	Create test query builder;
	Do create test query builder;
	Handle test negative boosts;
	Handle test from X content;
	Get shuffle protected fields;
	Handle test unknown field;
	Handle test unknown object exception;
	Handle alterate queries;
	Get objects holding arbitrary content;
	Handle test query wrapped in array;
	Handle query wrapped in array test;
	Get alternate versions;
	Assert parsed query;
	Parse query;
	Handle builder generates cacheable queries;
	Convert test;
	Rewrite query;
	Check if abstract query test case is cacheable;
	Check if abstract query test case supports boost;
	Check if abstract query test case supports query name;
	Assert lucene query;
	Do assert lucene query;
	Assert term or boost query;
	Assert term query;
	Handle test serialization;
	Assert serialization;
	Handle test equals and hashcode;
	Mutate instance;
	Handle test valid output;
	Change name or boost;
	Copy query;
	Get random value  for field name;
	Get random query text;
	Get random field name;
	Get random rewrite method;
	Handle random fuzziness;
	Handle random analyzer;
	Handle random minimum should match;
	Check generated json;
	Get msg;
	Handle test must rewrite;
	Rewrite query builder;
	Check if abstract query test case is text field

412.4. Add a class for abstract query test case tests. It allows to:

	Handle test alterate queries;
	Handle test alterate queries with arbitrary content;
	Assert alterations

412.5. Add a class for abstract serializing test case. It allows to:

	Handle test from X content;
	Do parse instance;
	Create X context test instance;
	Handle supports unknown fields;
	Get random fields exclude filter;
	Get shuffle fields exceptions;
	Get abstract serializing test case to X content params;
	Assert abstract serializing test case to X content equivalence;
	Handle random date

412.6. Add a class for abstract streamable test case. It allows to:

	Copy instance;
	Get instance reader;
	Create blank instance

412.7. Add a class for abstract streamable X content test case. It allows to:

	Handle test from X content;
	Create X context test instance;
	Do parse instance;
	Handle supports unknown fields;
	Get random fields exclude filter;
	Get shuffle fields exceptions;
	Get abstract streamable X content test case to X content params

412.8. Add a class for abstract wire serializing test case. It allows to:

	Copy instance

412.9. Add a class for abstract wire test case. It allows to:

	Create test instance;
	Get instance reader;
	Mutate instance;
	Handle test equals and hashcode;
	Handle test serialization;
	Assert serialization;
	Assert equal instances;
	Copy instance;
	Get named writeable registry

412.10. Add a class for background indexer. It allows to:

	Instantiate background indexer  with client;
	Instantiate background indexer  with client, random and random;
	Generate source;
	Set budget;
	Start background indexer;
	Pause indexing;
	Continue indexing;
	Stop background indexer;
	Handle total indexed docs;
	Get failures;
	Assert no failures;
	Set assert no failures  on stop;
	Close background indexer;
	Get client;
	Get ids

412.11. Add a class for cluster service utils. It allows to:

	Create master service;
	Set state;
	Process  on success;
	Process  on failure;
	Execute current state;
	Handle cluster state processed;
	Create cluster service;
	Create no op node connections service;
	Connect discovery nodes to nodes;
	Disconnect  from nodes except nodes;
	Create cluster state publisher;

412.12. Add a class for corruption utils. It allows to:

	Instantiate corruption utils;
	Handle corrupt index;
	Handle corrupt file;
	Handle corrupt at

412.13. Add a class for diffable test utils. It allows to:

	Instantiate diffable test utils;
	Assert diff application;
	Copy instance;
	Handle test diffable serialization;
	Assert serialization

412.14. Add a class for dummy shard lock. It allows to:

	Instantiate dummy shard lock  with shard id;
	Close internal

412.15. Add a class for eS single node test case. It allows to:

	Start node;
	Stop node;
	Set eS single node test case;
	Tear eS single node test case;
	Set up class;
	Tear down class;
	Reset node  after test;
	Get plugins;
	Plugin list;
	Handle node settings;
	Add mock http transport;
	Handle new node;
	Get client;
	Wrap client;
	Node eS single node test case;
	Get instance  from node;
	Create index;
	Resolve index;
	Create search context;
	Ensure green;
	X content registry;
	Handle forbid private index settings

412.16. Add a class for eS token stream test case. It allows to:

	Handle new analysis settings builder

412.17. Add a class for external test cluster. It allows to:

	Instantiate external test cluster  with temp dir path, additional settings, plugin classes collection, transport addresses and transport addresses;
	Process external test cluster external test cluster after test;
	Get client;
	Get size;
	Handle num data nodes;
	Handle num data and master nodes;
	Http addresses;
	Close external test cluster;
	Ensure estimated stats;
	Get clients;
	Get named writeable registry;
	Get cluster name

412.18. Add a class for field masking reader. It allows to:

	Instantiate field masking reader  with in directory reader;
	Wrap leaf reader;
	Get reader cache helper;
	Get core cache helper;
	Do wrap directory reader;

412.19. Add a class for index settings module. It allows to:

	Instantiate index settings module  with index, settings and settings;
	Configure index settings module;
	Handle new index settings;

412.20. Add a class for internal aggregation test case. It allows to:

	Get default named X contents;
	Get named X contents;
	Create test instance;
	Create unmapped instance;
	Handle test reduce random;
	Handle mock script service;
	Reduced reduced;
	Get named writeable registry;
	X content registry;
	Handle test from X content;
	Handle test from X content with random fields;
	Assert aggregation from X content;
	Parse internal aggregation;
	Exclude paths  from X content insertion;
	Handle random numeric doc value format;
	Assert multi bucket consumer;

412.21. Add a class for internal multi bucket aggregation test case. It allows to:

	Handle random number of buckets;
	Min number  of buckets;
	Max number  of buckets;
	Set max number  of buckets;
	Set sub aggregations supplier;
	Set internal multi bucket aggregation test case;
	Create test instance;
	Get implementation class;
	Assert aggregation from X content;
	Handle test iterators;
	Assert multi buckets aggregations;
	Assert multi buckets aggregation;
	Assert bucket

412.22. Add a class for internal settings plugin. It allows to:

	Get settings

412.23. Add a class for node configuration source. It allows to:

	Handle node settings;
	Handle node config path;
	Transport client settings;
	Handle node plugins;
	Transport client plugins

412.24. Add a class for noop discovery. It allows to:

	Publish cluster changed event;
	Get stats;
	Start initial join;
	Get lifecycle state;
	Add lifecycle listener;
	Remove lifecycle listener;
	Start noop discovery;
	Stop noop discovery;
	Close noop discovery

412.25. Add a class for not equal message builder. It allows to:

	Instantiate not equal message builder;
	Convert not equal message builder to string;
	Compare maps;
	Compare lists;
	Compare not equal message builder;
	Indent not equal message builder;
	Handle field

412.26. Add a class for posix permissions resetter. It allows to:

	Instantiate posix permissions resetter  with path;
	Close posix permissions resetter;
	Set permissions;
	Get copy permissions

412.27. Add a class for random objects. It allows to:

	Instantiate random objects;
	Handle random stored field values;
	Get expected parsed value;
	Handle random source;
	Add fields;
	Handle random data type;
	Handle random field value;
	Handle random shard info;
	Handle random shard info failure

412.28. Add a class for streams utils. It allows to:

	Copy class loader to string from classpath;
	Copy streams utils to string from classpath;
	Copy streams utils to bytes from classpath

412.29. Add a class for test cluster. It allows to:

	Instantiate test cluster;
	Get seed;
	Process test cluster test cluster before test;
	Wipe exclude templates set;
	Process test cluster test cluster before index deletion;
	Assert test cluster after test;
	Process test cluster test cluster after test;
	Get client;
	Get size;
	Handle num data nodes;
	Handle num data and master nodes;
	Http addresses;
	Close test cluster;
	Wipe indices;
	Wipe all templates;
	Wipe templates;
	Wipe repositories;
	Ensure estimated stats;
	Get cluster name;
	Get clients;
	Get named writeable registry

412.30. Add a class for test custom meta data. It allows to:

	Instantiate test custom meta data;
	Get data;
	Check if test custom meta data equals;
	Hash code;
	Read  from supplier function;
	Read diff  from stream input;
	Write  to stream output;
	Process test custom meta data test custom meta data from X content;
	Convert test custom meta data to X content;
	Convert test custom meta data to string

412.31. Add a class for test search context. It allows to:

	Instantiate test search context  with big arrays, index service and index service;
	Instantiate test search context  with query shard context;
	Instantiate test search context  with query shard context, index shard and index shard;
	Pre process;
	Build filtered query;
	I test search context;
	Get source;
	Get request;
	Search type;
	Shard target;
	Get number of shards;
	Get query boost;
	Get origin nano time;
	Scroll context;
	Get aggregations;
	Add search ext;
	Get search ext;
	Highlight test search context;
	Highlight search context highlight;
	Suggest test search context;
	Suggest suggestion search context;
	Rescore test search context;
	Add rescore;
	Check if test search context has script fields;
	Get script fields;
	Handle source requested;
	Check if test search context has fetch source context;
	Fetch source context;
	Handle doc value fields context;
	Get searcher;
	Get index shard;
	Handle mapper service;
	Get similarity service;
	Handle big arrays;
	Handle bitset filter cache;
	Get mapped field type for field;
	Get timeout;
	Handle timeout;
	Terminate test search context after;
	Handle low level cancellation;
	Handle minimum score;
	Get sort;
	Track scores;
	Track total hits  up to;
	Get search after;
	Get collapse;
	Get parsed post filter;
	Get alias filter;
	Get parsed query;
	Get query;
	Process test search context test search context from;
	Get size;
	Set size;
	Check if test search context has stored fields;
	Check if test search context has stored fields context;
	Get stored fields requested;
	Get stored fields context;
	Explain test search context;
	Get group stats;
	Handle group stats;
	Handle version;
	Seq no and primary term;
	Convert doc ids;
	Get accessed;
	Handle last access time;
	Keep alive;
	Get dfs result;
	Handle query result;
	Fetch result;
	Fetch phase;
	Handle smart name field type;
	Get object mapper;
	Do test search context close;
	Get relative time  in millis;
	Get profilers;
	Get query collectors;
	Get query shard context;
	Set task;
	Get task;
	Check if test search context is canceled

412.32. Add a class for version utils. It allows to:

	Resolve released versions;
	Get split by minor;
	Move last  to unreleased;
	All released versions;
	All unreleased versions;
	All versions;
	Get previous version;
	Get previous minor version;
	Get version utils first version;
	Handle random version;
	Handle random compatible version;
	Handle random version between;
	Handle incompatible future version;
	Handle compatible future version;
	Max compatible version

412.33. Add a class for x content test utils. It allows to:

	Instantiate x content test utils;
	Convert part to content to map;
	Get difference between maps ignoring array order;
	Get difference between objects ignoring array order;
	Insert random fields;
	Get insert paths;
	Insert X content into X content

412.34. Add a class for x content test utils tests. It allows to:

	Handle test get insert paths;
	Handle test insert into X content;
	Handle test insert random X content

413. Changes to package org.elasticsearch.test.client:  

413.1. Add a class for no op client. It allows to:

	Instantiate no op client  with thread pool;
	Instantiate no op client;
	Execute action;
	Close no op client

413.2. Add a class for randomizing client. It allows to:

	Instantiate randomizing client  with client, random and random;
	Prepare search;
	Convert randomizing client to string;
	I randomizing client

414. Changes to package org.elasticsearch.test.disruption:  

414.1. Add a class for block cluster state processing. It allows to:

	Instantiate block cluster state processing  with random;
	Disrupting block cluster state processing;
	Remove and ensure healthy;
	Get expected time to heal

414.2. Add a class for long GC disruption. It allows to:

	Instantiate long GC disruption  with random;
	Disrupting long GC disruption;
	Check if long GC disruption is disrupted node thread;
	Trace stack trace elements;
	Stop block detection;
	Remove and ensure healthy;
	Get expected time to heal;
	Suspend threads;
	Get unsafe classes;
	Get suspending timeout  in millis;
	Check if long GC disruption is block detection supported;
	Get block detection interval  in millis;
	Handle on block detected;
	Resume threads

414.3. Add a class for network disruption IT. It allows to:

	Handle node plugins;
	Prepare disrupted cluster;
	Handle test clear disruption scheme when node is down;
	Handle test network partition removal restores connections

414.4. Add a class for network disruption tests. It allows to:

	Test two partitions;
	Handle test random two partitions;
	Check two partitions;
	Handle test isolate all;
	Handle test bridge;
	Handle test random bridge;
	Check bridge;
	Generate random string set

414.5. Add an interface declaration  for service disruption scheme. It allows to:

	Apply internal test cluster to cluster;
	Remove internal test cluster from cluster;
	Remove and ensure healthy;
	Apply internal test cluster to node;
	Remove internal test cluster from node;
	Disrupting service disruption scheme;
	Handle test cluster closed;
	Get expected time to heal

414.6. Add a class for single node disruption. It allows to:

	Instantiate single node disruption  with random;
	Apply internal test cluster to cluster;
	Remove internal test cluster from cluster;
	Apply internal test cluster to node;
	Remove internal test cluster from node;
	Handle test cluster closed;
	Ensure node count

415. Changes to package org.elasticsearch.test.engine:  

415.1. Add an object creator class for mock engine factory. It allows to:

	Instantiate mock engine factory  with wrapper class;
	Handle new read write engine

415.2. Add a class for mock internal engine. It allows to:

	Instantiate mock internal engine  with engine config, wrapper class and wrapper class;
	Get support;
	Close mock internal engine;
	Handle flush and close;
	Handle flush and close internal;
	Acquire searcher

416. Changes to package org.elasticsearch.test.gateway:  

416.1. Add a class for test gateway allocator. It allows to:

	Fetch data;
	Check if  has initiated fetching;
	Apply started shards;
	Apply failed shards;
	Allocate unassigned;
	Add known allocation

417. Changes to package org.elasticsearch.test.geo:  

417.1. Add a class for random geo generator. It allows to:

	Handle random point;
	Handle random point in;
	Normalize latitude;
	Normalize longitude

417.2. Add a class for random shape generator. It allows to:

	Handle random type;
	Create shape;
	Create shape  near random;
	Create shape  within random;
	Create geometry collection;
	Create geometry collection  near random;
	Create geometry collection  within random;
	X random point;
	X random point  in;
	X random rectangle;
	Rarely random shape generator;
	X random range;
	X random shape generator;
	X make norm rect

418. Changes to package org.elasticsearch.test.hamcrest:  

418.1. Add an object creator class for collection assertions. It allows to:

	Check if collection assertions has key;
	Check if collection assertions has all keys

418.2. Add a class for elasticsearch assertions. It allows to:

	Acked acknowledged request builder;
	Assert no timeout;
	Acked acknowledged response;
	Acked delete index request builder;
	Acked create index response;
	Blocked action request builder;
	Blocked replicated broadcast response;
	Get format shard status;
	Assert no search hits;
	Assert search hits;
	Assert sort values;
	Assert ordered search hits;
	Assert hit count;
	Exists get response;
	Assert search response first hit;
	Assert second hit;
	Assert third hit;
	Assert fourth hit;
	Assert search hit;
	Assert no failures;
	Assert failures;
	Assert all successful;
	Assert highlight;
	Assert search response not highlighted;
	Assert suggestion size;
	Assert suggestion phrase collate match exists;
	Assert suggestion;
	Assert index template missing;
	Assert index template exists;
	Assert aliases missing;
	Assert aliases exist;
	Check if elasticsearch assertions has id;
	Check if elasticsearch assertions has type;
	Check if elasticsearch assertions has index;
	Check if elasticsearch assertions has score;
	Check if elasticsearch assertions has property;
	Get field from source;
	Assert boolean sub query;
	Assert disjunction sub query;
	Throws action request builder;
	Throws action future;
	Assert search response;
	Assert file exists;
	Assert file  not exists;
	Assert expected bytes reference to X content equivalent;
	Latch count down latch;
	Assert map equals;
	Assert list equals;
	Assert object equals

418.3. Add a class for elasticsearch assertions tests. It allows to:

	Handle test assert X content equivalent;
	Handle test assert X content equivalent errors

418.4. Add a class for elasticsearch geo assertions. It allows to:

	Handle top;
	Prev points coordinate;
	Handle next;
	Get fixed ordered ring;
	Equals coordinate;
	Check if elasticsearch geo assertions is ring;
	Equals line string;
	Equals polygon;
	Equals s 1 geometry;
	Equals geometry;
	Equals shape collection;
	Equals elasticsearch geo assertions;
	Unwrap JTS;
	Assert multi polygon;
	Assert polygon;
	Assert line string;
	Assert multi line string;
	Assert distance;
	Get distance;
	Assert valid exception

418.5. Add a class for regex matcher. It allows to:

	Instantiate regex matcher;
	Check if regex matcher matches safely;
	Describe  to description;
	Get matches;

419. Changes to package org.elasticsearch.test.junit.listeners:  

419.1. Add a class for logging listener. It allows to:

	Handle test run started;
	Handle test run finished;
	Handle test started;
	Handle test finished;
	Resolve logger;
	Get process test logging;
	Get loggers and levels  from annotation;
	Reset map

420. Changes to package org.elasticsearch.test.loggerusage:  

420.1. Add a class for eS logger usage tests. It allows to:

	Handle test logger usage checks;
	Convert test logger usage checker compatibility with log 4 j;
	Check number  of arguments 1;
	Check fail number  of arguments 1;
	Check ignore when annotation present;
	Check number  of arguments 2;
	Check fail number  of arguments 2;
	Check number  of arguments 3;
	Check fail number  of arguments 3;
	Check number  of arguments parameterized message 1;
	Check fail number  of arguments parameterized message 1;
	Check number  of arguments parameterized message 2;
	Check fail number  of arguments parameterized message 2;
	Check number  of arguments parameterized message 3;
	Check fail number  of arguments parameterized message 3;
	Check order  of exception argument;
	Check order  of exception argument 1;
	Check fail order  of exception argument 1;
	Check order  of exception argument 2;
	Check fail order  of exception argument 2;
	Check eS logger usage tests non constant message with zero arguments;
	Check fail non constant message  with arguments;
	Check complex usage;
	Check fail complex usage 1;
	Check fail complex usage 2

421. Changes to package org.elasticsearch.test.rest:  

421.1. Add a class for created location header IT. It allows to:

	Handle test create;
	Handle test index with id;
	Handle test index without id;
	Handle test upsert;
	Handle location test case;

421.2. Add a class for fake rest channel. It allows to:

	Instantiate fake rest channel  with rest request;
	Send response;
	Get captured response;
	Get responses;
	Get errors

421.3. Add a class for integ test zip client yaml test suite IT. It allows to:

	Instantiate integ test zip client yaml test suite IT  with client yaml test candidate;
	Get parameters

421.4. Add a class for node rest usage IT. It allows to:

	Handle test with rest usage;
	Handle test metrics with all

421.5. Add a class for requests without content IT. It allows to:

	Handle test index missing body;
	Handle test bulk missing body;
	Handle test put settings missing body;
	Handle test put mappings missing body;
	Handle test put index template missing body;
	Handle test multi search missing body;
	Handle test put pipeline missing body;
	Handle test simulate pipeline missing body;
	Handle test put script missing body;
	Assert response exception

422. Changes to package org.elasticsearch.test.rest.yaml:  

422.1. Add a class for blacklisted path pattern matcher. It allows to:

	Instantiate blacklisted path pattern matcher;
	Check if blacklisted path pattern matcher is suffix match

422.2. Add a class for blacklisted path pattern matcher tests. It allows to:

	Handle test matches exact;
	Handle test matches simple wildcard patterns;
	Handle test matches multi wildcard patterns;
	Handle test matches patterns with escaped commas;
	Handle test matches mixed patterns;
	Assert match;
	Assert no match

422.3. Add an object creator class for client yaml docs test client. It allows to:

	Instantiate client yaml docs test client  with client yaml suite rest spec, rest client, hosts list, es version, master version, client builder with sniffed nodes checked supplier and client builder with sniffed nodes checked supplier;
	Call  api params map

422.4. Add a class for client yaml test candidate. It allows to:

	Instantiate client yaml test candidate  with rest test suite, client yaml test section and client yaml test section;
	Get client yaml test candidate api;
	Get name;
	Get suite path;
	Get test path;
	Get setup section;
	Get teardown section;
	Get test section;
	Convert client yaml test candidate to string

422.5. Add a class for client yaml test client. It allows to:

	Instantiate client yaml test client  with client yaml suite rest spec, rest client, hosts list, es version, master version, client builder with sniffed nodes checked supplier and client builder with sniffed nodes checked supplier;
	Get es version;
	Get master version;
	Call  api params map;
	Get rest client;
	Set options;
	Send body  as source param;
	Rest client yaml test client api;
	Close client yaml test client

422.6. Add a class for client yaml test execution context. It allows to:

	Instantiate client yaml test execution context  with client yaml test client;
	Call  api params map;
	Create entity;
	Get content type;
	Get body as bytes ref;
	Call api internal;
	Get response;
	Handle clear;
	Stash client yaml test execution context;
	Get es version;
	Get master version

422.7. Add a class for client yaml test execution context tests. It allows to:

	Handle test headers support stashed value replacement;
	Call api internal;
	Get es version

422.8. Add a class for client yaml test response. It allows to:

	Instantiate client yaml test response  with response;
	Get status code;
	Get reason phrase;
	Get warning headers;
	Get body;
	Get body  as string;
	Check if client yaml test response is error;
	Evaluate client yaml test response;
	Evaluate stash

422.9. Add a class for client yaml test response exception. It allows to:

	Instantiate client yaml test response exception  with response exception;
	Get rest test response;
	Get response exception

422.10. Add a class for eS client yaml suite test case. It allows to:

	Instantiate eS client yaml suite test case  with client yaml test candidate;
	Initialize use default number  of shards;
	Handle init and reset context;
	Handle init client yaml test client;
	Close client;
	Create parameters;
	Load suites;
	Add suite;
	Resolve paths property;
	Get admin execution context;
	Validate spec;
	Read versions  from cat nodes;
	Get cat nodes version master request options;
	Handle test;
	Execute section;
	Get error message;
	Randomize content type;
	Get client builder  with sniffed hosts

422.11. Add a class for eS client yaml suite test case tests. It allows to:

	Handle test load all yaml suites;
	Handle test load single yaml suite;
	Handle test load multiple yaml suites;
	Assert single file;

422.12. Add a class for features. It allows to:

	Instantiate features;
	Are features list

422.13. Add a class for object path. It allows to:

	Create response from response;
	Create X content from X content;
	Instantiate object path;
	Evaluate object path;
	Evaluate stash;
	Parse path;
	Convert object path to X content builder

422.14. Add a class for object path tests. It allows to:

	Handle random X content builder;
	Handle test evaluate object path escape;
	Handle test evaluate object path with dots;
	Handle test evaluate integer;
	Handle test evaluate double;
	Handle test evaluate array;
	Handle test evaluate array element object;
	Handle test evaluate object keys;
	Handle test evaluate arbitrary key;
	Handle test evaluate stash in property name;
	Handle test evaluate array as root

422.15. Add a class for stash. It allows to:

	Handle stash value;
	Handle clear;
	Check if stash contains stashed value;
	Get value;
	Handle unstash;
	Replace stashed values;
	Handle unstash object;
	Convert stash to X content

422.16. Add a class for stash tests. It allows to:

	Handle test replace stashed values stash key in map value;
	Handle test replace stashed values stash key in map key;
	Handle test replace stashed values stash key in map key conflicts;
	Handle test replace stashed values stash key in list;
	Handle test path in list;
	Handle test path in map value

423. Changes to package org.elasticsearch.test.rest.yaml.restspec:  

423.1. Add a class for client yaml suite rest api. It allows to:

	Instantiate client yaml suite rest api;
	Get name;
	Get location;
	Get methods;
	Get supported methods;
	Add method;
	Get paths;
	Add path;
	Get path parts;
	Add path part;
	Get params;
	Add param;
	Set body optional;
	Set body required;
	Check if client yaml suite rest api is body supported;
	Check if client yaml suite rest api is body required;
	Get final paths;
	Find matching rest paths;
	Build rest paths

423.2. Add a class for client yaml suite rest api parser failing tests. It allows to:

	Handle test duplicate methods;
	Handle test duplicate paths;
	Test broken spec should throw useful exception when parsing fails  on params;
	Test broken spec should throw useful exception when parsing fails  on parts;
	Handle test spec name matches filename;
	Parse and expect failure

423.3. Add a class for client yaml suite rest api parser tests. It allows to:

	Handle test parse rest spec index api;
	Handle test parse rest spec get template api;
	Handle test parse rest spec count api;
	Handle test required body without url parts

423.4. Add a class for client yaml suite rest spec. It allows to:

	Instantiate client yaml suite rest spec;
	Add  api client yaml suite rest api;
	Get client yaml suite rest spec api;
	Get apis;
	Check if client yaml suite rest spec is global parameter;
	Check if client yaml suite rest spec is client parameter;
	Get load;
	Parse spec file

424. Changes to package org.elasticsearch.test.rest.yaml.section:  

424.1. Add a class for abstract client yaml test fragment parser test case. It allows to:

	Tear abstract client yaml test fragment parser test case;
	X content registry

424.2. Add a class for api call section. It allows to:

	Instantiate api call section;
	Get api call section api;
	Get params;
	Add param;
	Add headers;
	Get headers;
	Get bodies;
	Add body;
	Check if api call section has body;
	Get node selector;
	Set node selector

424.3. Add a class for assertion. It allows to:

	Instantiate assertion  with X content location;
	Get field;
	Get expected value;
	Resolve expected value;
	Get actual value;
	Get location;
	Execute client yaml test execution context;
	Assert assertion;
	Handle safe class

424.4. Add a class for assertion tests. It allows to:

	Handle test parse is true;
	Handle test parse is false;
	Handle test parse greater than;
	Handle test parse less than;
	Handle test parse length;
	Handle test parse match simple integer value;
	Handle test parse match simple string value;
	Handle test parse match array;
	Handle test parse contains;
	Handle test parse match source values

424.5. Add a class for client yaml test section. It allows to:

	Parse X content parser;
	Instantiate client yaml test section  with X content location, skip section, executable sections list and executable sections list;
	Get location;
	Get name;
	Get skip section;
	Get executable sections;
	Check if client yaml test section equals;
	Hash code;
	Compare  to client yaml test section

424.6. Add a class for client yaml test section tests. It allows to:

	Handle test wrong indentation;
	Handle test parse test section with do section;
	Handle test parse test section with do set and skip sections no skip;
	Handle test parse test section with multiple do sections;
	Handle test parse test section with do sections and assertions;
	Handle test small section

424.7. Add a class for client yaml test suite. It allows to:

	Parse executeable section registry;
	Parse X content parser;
	Instantiate client yaml test suite  with setup section, teardown section, test sections list and test sections list;
	Get client yaml test suite api;
	Get name;
	Get path;
	Get setup section;
	Get teardown section;
	Validate client yaml test suite;
	Validate executable sections;
	Check if client yaml test suite has skip feature;
	Get test sections

424.8. Add a class for client yaml test suite tests. It allows to:

	Handle test parse test setup teardown and sections;
	Handle test parse test single test section;
	Handle test parse test multiple test sections;
	Handle test parse test duplicate test sections;
	Handle test adding do without skips;
	Handle test adding do with warning without skip warnings;
	Handle test adding do with header without skip headers;
	Handle test adding do with node selector without skip node selector;
	Handle test adding contains without skip contains;
	Handle test multiple validation errors;
	Handle test adding do with warning with skip;
	Handle test adding do with node selector with skip;
	Handle test adding do with headers with skip;
	Handle test adding contains with skip;
	Create test suite

424.9. Add a class for do section tests. It allows to:

	Handle test warning headers;
	Handle test ignore types warnings;
	Handle test parse do section no body;
	Handle test parse do section no params no body;
	Handle test parse do section with json body;
	Handle test parse do section with json multiple bodies as long string;
	Handle test parse do section with yaml body;
	Handle test parse do section with yaml multiple bodies;
	Handle test parse do section with yaml body multi get;
	Handle test parse do section with body stringified;
	Handle test parse do section with bodies stringified and not;
	Handle test parse do section with catch;
	Handle test unsupported top level field;
	Handle test parse do section with headers;
	Handle test parse do section without client call section;
	Handle test parse do section multivalued field;
	Handle test parse do section expected warnings;
	Handle test node selector by version;
	Node do section tests with version;
	Handle test node selector by attribute;
	Node attributes map with attributes;
	Handle test node selector by two things;
	Node attributes map with version and attributes;
	Assert json equals

424.10. Add an interface declaration  for executable section. It allows to:

	Parse X content parser;
	Get location;
	Execute client yaml test execution context

424.11. Add a class for greater than assertion. It allows to:

	Parse X content parser;
	Instantiate greater than assertion  with X content location;
	Assert greater than assertion;
	Get error message

424.12. Add a class for greater than equal to assertion. It allows to:

	Parse X content parser;
	Instantiate greater than equal to assertion  with X content location;
	Assert greater than equal to assertion;
	Get error message

424.13. Add a class for is false assertion. It allows to:

	Parse X content parser;
	Instantiate is false assertion  with X content location;
	Assert is false assertion;
	Get error message

424.14. Add a class for is true assertion. It allows to:

	Parse X content parser;
	Instantiate is true assertion  with X content location;
	Assert is true assertion;
	Get error message

424.15. Add a class for length assertion. It allows to:

	Parse X content parser;
	Instantiate length assertion  with X content location;
	Assert length assertion;
	Get error message

424.16. Add a class for less than assertion. It allows to:

	Parse X content parser;
	Instantiate less than assertion  with X content location;
	Assert less than assertion;
	Get error message

424.17. Add a class for less than or equal to assertion. It allows to:

	Parse X content parser;
	Instantiate less than or equal to assertion  with X content location;
	Assert less than or equal to assertion;
	Get error message

424.18. Add a class for match assertion. It allows to:

	Parse X content parser;
	Instantiate match assertion  with X content location;
	Assert match assertion

424.19. Add a class for parser utils. It allows to:

	Instantiate parser utils;
	Parse field;
	Parse tuple;
	Convert advance

424.20. Add a class for set section. It allows to:

	Parse X content parser;
	Instantiate set section  with X content location;
	Add set;
	Get stash;
	Get location;
	Execute client yaml test execution context

424.21. Add a class for set section tests. It allows to:

	Handle test parse set section single value;
	Handle test parse set section multiple values;
	Handle test parse set section no values

424.22. Add a class for setup section. It allows to:

	Parse X content parser if next;
	Parse X content parser;
	Instantiate setup section  with skip section, executable sections list and executable sections list;
	Get skip section;
	Get executable sections;
	Check if setup section is empty

424.23. Add a class for setup section tests. It allows to:

	Handle test parse setup section;
	Handle test parse set section in setup section;
	Handle test parse setup and skip section no skip

424.24. Add a class for skip section. It allows to:

	Parse X content parser if next;
	Parse X content parser;
	Instantiate skip section;
	Instantiate skip section  with features list;
	Get lower version;
	Get upper version;
	Get features;
	Get reason;
	Skip current version;
	Check if skip section is version check;
	Check if skip section is empty;
	Parse version range;
	Get skip message

424.25. Add a class for skip section tests. It allows to:

	Handle test skip;
	Handle test message;
	Handle test parse skip section version no feature;
	Handle test parse skip section all versions;
	Handle test parse skip section feature no version;
	Handle test parse skip section features no version;
	Handle test parse skip section both feature and version;
	Handle test parse skip section no reason;
	Handle test parse skip section no version nor feature

424.26. Add a class for teardown section. It allows to:

	Parse X content parser if next;
	Parse X content parser;
	Instantiate teardown section  with skip section, do sections list and do sections list;
	Get skip section;
	Get do sections;
	Check if teardown section is empty

424.27. Add a class for teardown section tests. It allows to:

	Handle test parse teardown section;
	Handle test parse with skip

425. Changes to package org.elasticsearch.test.search.aggregations.bucket:  

425.1. Add a class for shared significant terms test methods. It allows to:

	Handle aggregate and check from several shards;
	Check significant terms aggregation correct;
	Handle index 01 docs

426. Changes to package org.elasticsearch.test.tasks:  

426.1. Add a class for mock task manager. It allows to:

	Instantiate mock task manager  with settings, thread pool, task headers set and task headers set;
	Register task aware request;
	Get unregister;
	Wait task for task completion;
	Add listener;
	Remove listener

426.2. Add an interface declaration  for mock task manager listener. It allows to:

	Handle on task registered;
	Process mock task manager listener mock task manager listener on task unregistered;
	Wait task for task completion

427. Changes to package org.elasticsearch.test.test:  

427.1. Add a class for eS test case tests. It allows to:

	Handle test expect throws;
	Handle test shuffle map;
	Handle test shuffle X content exclude fields;
	Handle test random unique not unique;
	Handle test random unique totally unique;
	Handle test random unique normal usage alway more than one;
	Handle test random value other than

427.2. Add a class for suite scope cluster IT. It allows to:

	Handle test reproducible;
	Build test cluster

427.3. Add a class for test scope cluster IT. It allows to:

	Handle test reproducible;
	Build test cluster

428. Changes to package org.elasticsearch.threadpool:  

428.1. Add a class for auto queue adjusting executor builder tests. It allows to:

	Handle test validating min max settings;
	Handle test set lower settings;
	Handle test set higher settings

428.2. Add a class for eS thread pool test case. It allows to:

	Info thread pool;
	Get stats;
	Terminate thread pool  if needed;
	Handle random thread pool

428.3. Add a class for evil thread pool tests. It allows to:

	Set up thread pool;
	Tear down thread pool;
	Handle test execution error on default thread pool types;
	Handle test execution error on direct executor service;
	Handle test execution error on fixed ES thread pool executor;
	Handle test execution error on scaling ES thread pool executor;
	Handle test execution error on auto queue fixed ES thread pool executor;
	Handle test execution error on single prioritizing thread pool executor;
	Handle test execution error on scheduler;
	Check execution error;
	Process  on failure;
	Run;
	Handle test execution exception on default thread pool types;
	Handle test execution exception on direct executor service;
	Handle test execution exception on fixed ES thread pool executor;
	Handle test execution exception on scaling ES thread pool executor;
	Handle test execution exception on auto queue fixed ES thread pool executor;
	Handle test execution exception on single prioritizing thread pool executor;
	Handle test execution exception on scheduler;
	Delay millis;
	Check execution exception;
	Get execute runner;
	Accept runnable;
	Convert to string;
	Get submit runner;
	Get schedule runner;
	Run execution test

428.4. Add a class for fixed thread pool tests. It allows to:

	Handle test rejected execution counter

428.5. Add a class for scaling thread pool tests. It allows to:

	Handle test scaling thread pool configuration;
	Get expected size;
	Handle test scaling thread pool is bounded;
	Handle test scaling thread pool threads are terminated after keep alive;
	Run scaling thread pool test

428.6. Add a class for simple thread pool IT. It allows to:

	Handle node settings;
	Handle test thread names

428.7. Add a class for test thread pool. It allows to:

	Instantiate test thread pool;
	Instantiate test thread pool  with settings

428.8. Add a class for thread pool serialization tests. It allows to:

	Set thread pool serialization tests;
	Handle test that queue size serialization works;
	Handle test that negative queue sizes can be serialized;
	Convert test that;
	Convert test that negative setting allows;
	Handle test that thread pool type is serialized correctly

428.9. Add a class for thread pool stats tests. It allows to:

	Handle test thread pool stats sort;
	Convert test thread pool stats

428.10. Add a class for thread pool tests. It allows to:

	Handle test bounded by below min;
	Handle test bounded by above max;
	Handle test bounded by between min and max;
	Handle test absolute time;
	Handle test estimated time interval setting accepts only zero and positive time;
	Handle factorial;
	Handle factorial forked;
	Handle test assert current method is not called recursively

428.11. Add a class for update thread pool settings tests. It allows to:

	Handle test correct thread pool type permitted in settings;
	Handle test write thread pools max size;
	Get expected thread pool size;
	Handle test fixed executor type;
	Handle test scaling executor type;
	Handle test shutdown now interrupts;
	Handle test custom thread pool;
	Handle random thread pool name

429. Changes to package org.elasticsearch.tools.launchers:  

429.1. Add a class for jvm options parser tests. It allows to:

	Handle test unversioned options;
	Handle test single version option;
	Handle test unbounded version option;
	Handle test bounded version option;
	Handle test complex options;
	Assert expected jvm options;
	Accept;
	Handle test invalid lines;
	Assert invalid lines;
	Handle test space delimited jvm options

429.2. Add a class for launchers. It allows to:

	Out println;
	Err println;
	Handle exit;
	Create temp directory

429.3. Add a class for launchers test case

430. Changes to package org.elasticsearch.transport:  

430.1. Add a class for action not found transport exception. It allows to:

	Instantiate action not found transport exception  with stream input;
	Instantiate action not found transport exception;
	Write  to stream output;
	Get action

430.2. Add a class for action transport exception. It allows to:

	Instantiate action transport exception  with stream input;
	Instantiate action transport exception  with transport address, cause throwable and cause throwable;
	Write  to stream output;
	Get address;
	Get action;
	Build message

430.3. Add a class for bind transport exception. It allows to:

	Instantiate bind transport exception  with stream input;
	Instantiate bind transport exception  with cause throwable;
	Instantiate bind transport exception

430.4. Add a class for bytes transport request. It allows to:

	Instantiate bytes transport request;
	Instantiate bytes transport request  with bytes reference, version and version;
	Get version;
	Get bytes;
	Read  from stream input;
	Write thin;
	Write  to stream output

430.5. Add a class for compressible bytes output stream. It allows to:

	Instantiate compressible bytes output stream  with bytes stream output;
	Materialize bytes;
	Write byte;
	Write bytes;
	Handle flush;
	Close compressible bytes output stream;
	Reset compressible bytes output stream

430.6. Add a class for connect transport exception. It allows to:

	Instantiate connect transport exception  with discovery node;
	Instantiate connect transport exception  with discovery node, cause throwable and cause throwable;
	Instantiate connect transport exception  with stream input;
	Write  to stream output;
	Node connect transport exception

430.7. Add a class for connection profile tests. It allows to:

	Handle test build connection profile;
	Handle test no channels;
	Handle test connection profile resolve;
	Handle test default connection profile

430.8. Add a class for empty transport response handler. It allows to:

	Instantiate empty transport response handler;
	Read stream input;
	Handle response;
	Handle exception;
	Get executor

430.9. Add a class for future transport response handler. It allows to:

	Handle response;
	Handle exception;
	Get executor

430.10. Add a class for mock transport client. It allows to:

	Instantiate mock transport client  with settings, plugins class and plugins class;
	Instantiate mock transport client  with settings, plugins collection and plugins collection;
	Instantiate mock transport client  with settings, plugins collection, host failure listener and host failure listener;
	Add mock transport  if missing;
	Get named writeable registry

430.11. Add a class for netty 4 plugin. It allows to:

	Get settings;
	Handle additional settings;
	Get transports;
	Get http transports

430.12. Add a class for node disconnected exception. It allows to:

	Instantiate node disconnected exception  with discovery node;
	Instantiate node disconnected exception  with stream input;
	Fill node disconnected exception in stack trace

430.13. Add a class for node not connected exception. It allows to:

	Instantiate node not connected exception  with discovery node;
	Instantiate node not connected exception  with stream input

430.14. Add a class for node should not connect exception. It allows to:

	Instantiate node should not connect exception  with stream input

430.15. Add a class for not serializable transport exception. It allows to:

	Instantiate not serializable transport exception  with stream input;
	Fill not serializable transport exception in stack trace

430.16. Add a class for plain transport future. It allows to:

	Instantiate plain transport future  with transport response handler;
	Get plain transport future;
	Read stream input;
	Get executor;
	Handle response;
	Handle exception;
	Convert plain transport future to string

430.17. Add a class for publish port tests. It allows to:

	Handle test publish port;
	Get address;
	Handle random address;
	Handle random addresses

430.18. Add a class for receive timeout transport exception. It allows to:

	Instantiate receive timeout transport exception  with discovery node;
	Instantiate receive timeout transport exception  with stream input

430.19. Add a class for remote cluster aware. It allows to:

	Setting;
	Get key;
	Instantiate remote cluster aware  with settings;
	Build remote clusters dynamic config;
	Build seed node;
	Get group cluster indices;
	Update remote cluster;
	Listen cluster settings for updates;
	Parse seed address;
	Parse host port;
	Parse port;
	Get index of port separator;
	Build remote index name

430.20. Add a class for remote cluster connection tests. It allows to:

	Tear remote cluster connection tests;
	Start transport;
	Handle test remote profile is used for local cluster;
	Read stream input;
	Handle test remote profile is used for remote cluster;
	Handle test discover single node;
	Handle test discover single node with incompatible seed;
	Handle test node disconnected;
	Handle on node disconnected;
	Handle on node connected;
	Handle test filter discovered nodes;
	Update seed nodes;
	Handle test connect with incompatible transports;
	Handle test remote connection version matches transport connection version;
	Get node;
	Send request;
	Handle test slow node can be canceled;
	Run;
	Get seed nodes;
	Handle test trigger updates concurrently;
	Handle test close while concurrently connecting;
	Handle test get connection info;
	Handle test remote connection info;
	Assert serialization;
	Handle test render connection info X content;
	Handle test ensure connected;
	Process  on response;
	Process  on failure;
	Handle test collect nodes;
	Handle test connected nodes concurrent access;
	Handle test cluster name is checked;
	Handle test get connection;
	Handle test lazy resolve transport address;
	Handle test proxy mode;
	Get proxy transport

430.21. Add a class for remote cluster service. It allows to:

	Setting;
	Get key;
	Instantiate remote cluster service  with settings, transport service and transport service;
	Update remote clusters;
	Get node predicate;
	Check if remote cluster service is cross cluster search enabled;
	Check if remote cluster service is remote node connected;
	Get group indices;
	Check if remote cluster service is remote cluster registered;
	Get registered remote cluster names;
	Get connection;
	Ensure connected;
	Check if remote cluster service is skip unavailable;
	Get remote cluster connection;
	Get remote cluster names;
	Listen cluster settings for updates;
	Update skip unavailable;
	Update remote cluster;
	Initialize remote clusters;
	Initialize connection profiles;
	Build connection profile  from settings;
	Close remote cluster service;
	Get remote connection infos;
	Handle connection profile changed;
	Collect nodes;
	Process  on response;
	Process  on failure;
	Get remote cluster client;
	Get connections

430.22. Add a class for remote cluster service tests. It allows to:

	Tear remote cluster service tests;
	Start transport;
	Handle test settings are registered;
	Handle test remote cluster seed setting;
	Handle test build remote clusters dynamic config;
	Handle test build remote clusters dynamic config with duplicate;
	Handle test build remote clusters dynamic config with duplicates;
	Handle test group cluster indices;
	Handle test group indices;
	Handle test incrementally add clusters;
	Handle test default ping schedule;
	Handle test custom ping schedule;
	Handle test change settings;
	Handle test remote node attribute;
	Handle test remote node roles;
	Get connection listener;
	Handle test collect nodes;
	Process  on response;
	Process  on failure;
	Handle test remote cluster skip if disconnected setting;
	Handle test get node predicate node roles;
	Handle test get node predicate node version;
	Handle test get node predicate node attrs;
	Handle test get node predicates combination;
	Handle test remote cluster with proxy;
	Update remote cluster;
	Update skip unavailable;
	Add connection listener;
	Handle test skip unavailable;
	Handle generic profile

430.23. Add a class for remote connection info. It allows to:

	Instantiate remote connection info  with seed nodes list, initial connection timeout value and initial connection timeout value;
	Instantiate remote connection info  with stream input;
	Get seed nodes;
	Get connections  per cluster;
	Get initial connection timeout;
	Get num nodes connected;
	Get cluster  alias;
	Check if remote connection info is skip unavailable;
	Write  to stream output;
	Convert remote connection info to X content;
	Check if remote connection info equals;
	Hash code

430.24. Add a class for remote transport exception. It allows to:

	Instantiate remote transport exception  with cause throwable;
	Instantiate remote transport exception  with transport address, cause throwable and cause throwable;
	Instantiate remote transport exception  with stream input;
	Fill remote transport exception in stack trace

430.25. Add a class for request handler registry. It allows to:

	Instantiate request handler registry  with request reader, task manager, transport request handler and transport request handler;
	Get action;
	Handle new request;
	Handle process message received;
	Check if request handler registry is force execution;
	Can trip circuit breaker;
	Get executor;
	Convert request handler registry to string

430.26. Add a class for response handler failure transport exception. It allows to:

	Instantiate response handler failure transport exception  with cause throwable;
	Instantiate response handler failure transport exception  with stream input;
	Fill response handler failure transport exception in stack trace

430.27. Add a class for send request transport exception. It allows to:

	Instantiate send request transport exception  with discovery node, cause throwable and cause throwable;
	Instantiate send request transport exception  with stream input

430.28. Add a class for task transport channel. It allows to:

	Instantiate task transport channel  with task manager, task, transport channel and transport channel;
	Get profile name;
	Get channel type;
	Send response;
	Get version;
	Get channel;
	End task

430.29. Add a class for tcp header. It allows to:

	Write header

430.30. Add a class for tcp transport channel. It allows to:

	Instantiate tcp transport channel  with outbound handler, tcp channel, version, features set, circuit breaker service and circuit breaker service;
	Get profile name;
	Send response;
	Handle release;
	Get channel type;
	Get version;
	Get channel

430.31. Add a class for tcp transport tests. It allows to:

	Handle test parse V 4 default port;
	Handle test parse V 4 default range;
	Handle test parse V 4 with port;
	Handle test parse V 4 with port range;
	Handle test parse V 6 un bracketed;
	Handle test parse V 6 default port;
	Handle test parse V 6 default range;
	Handle test parse V 6 with port;
	Handle test parse V 6 with port range;
	Handle test address limit;
	Handle test decode with incomplete header;
	Handle test decode ping;
	Handle test decode ping with start of second message;
	Handle test decode message;
	Handle test decode incomplete message;
	Handle test invalid length;
	Handle test invalid header;
	Handle test HTTP header

430.32. Add an interface declaration  for transport channel. It allows to:

	Get profile name;
	Get channel type;
	Send response;
	Get version

430.33. Add a class for transport channel response handler. It allows to:

	Instantiate transport channel response handler  with logger, transport channel, writeable reader and writeable reader;
	Read stream input;
	Handle response;
	Handle exception;
	Get executor

430.34. Add an interface declaration  for transport connection listener. It allows to:

	Handle on connection opened;
	Handle on connection closed;
	Handle on node connected;
	Handle on node disconnected

430.35. Add a class for transport exception. It allows to:

	Instantiate transport exception  with cause throwable;
	Instantiate transport exception  with stream input;
	Instantiate transport exception;

430.36. Add an interface declaration  for transport future. It allows to:

	Get transport future

430.37. Add a class for transport message. It allows to:

	Handle remote address;
	Instantiate transport message;
	Instantiate transport message  with stream input;
	Read  from stream input;
	Write  to stream output

430.38. Add an interface declaration  for transport request handler. It allows to:

	Handle message received

430.39. Add an interface declaration  for transport response handler. It allows to:

	Handle response;
	Handle exception;
	Get executor;
	Wrap converter function;
	Read stream input

430.40. Add a class for transport serialization exception. It allows to:

	Instantiate transport serialization exception  with stream input;
	Instantiate transport serialization exception  with cause throwable

430.41. Add a class for transport status. It allows to:

	Check if transport status is request;
	Set request;
	Set response;
	Check if transport status is error;
	Set error;
	Check if transport status is compress;
	Set compress;
	Check if transport status is handshake;
	Set handshake

431. Changes to package org.elasticsearch.transport.client:  

431.1. Add a class for pre built transport client. It allows to:

	Initialize netty;
	Set system property  if unset;
	Instantiate pre built transport client  with settings, plugins class and plugins class;
	Instantiate pre built transport client  with settings, plugins collection and plugins collection;
	Instantiate pre built transport client  with settings, plugins collection, host failure listener and host failure listener;
	Close pre built transport client

431.2. Add a class for pre built transport client tests. It allows to:

	Handle test plugin installed;
	Handle test install plugin twice

432. Changes to package org.elasticsearch.transport.netty4:  

432.1. Add a class for byte buf bytes reference. It allows to:

	Instantiate byte buf bytes reference  with buffer;
	Get byte buf bytes reference;
	Get int;
	Get index of;
	Get length;
	Get slice;
	Get stream input;
	Write  to os output stream;
	Convert byte buf bytes reference to byte buf;
	Convert utf 8;
	Convert byte buf bytes reference to bytes ref;
	Handle ram bytes used

432.2. Add a class for byte buf bytes reference tests. It allows to:

	Handle new bytes reference;
	Handle new bytes reference with offset of zero;
	Handle test slice on advanced buffer;
	Handle test immutable

432.3. Add a class for byte buf stream input. It allows to:

	Instantiate byte buf stream input  with buffer;
	Read bytes reference;
	Read bytes ref;
	Handle available;
	Ensure can read bytes;
	Handle mark;
	Handle mark supported;
	Read byte buf stream input;
	Read short;
	Read int;
	Read byte buf stream input long;
	Reset byte buf stream input;
	Skip byte buf stream input;
	Skip bytes;
	Read byte;
	Read bytes;
	Close byte buf stream input

432.4. Add a class for eS logging handler. It allows to:

	Instantiate eS logging handler;
	Handle channel read complete

432.5. Add a class for eS logging handler IT. It allows to:

	Set eS logging handler IT;
	Tear eS logging handler IT;
	Handle test logging handler

432.6. Add a class for netty 4 internal ES logger. It allows to:

	Instantiate netty 4 internal ES logger;
	Check if netty 4 internal ES logger is trace enabled;
	Trace netty 4 internal ES logger;
	Trace throwable;
	Check if netty 4 internal ES logger is debug enabled;
	Debug netty 4 internal ES logger;
	Debug throwable;
	Check if netty 4 internal ES logger is info enabled;
	Info netty 4 internal ES logger;
	Info throwable;
	Check if netty 4 internal ES logger is warn enabled;
	Warn netty 4 internal ES logger;
	Warn throwable;
	Check if netty 4 internal ES logger is error enabled;
	Handle error;

432.7. Add a class for netty 4 size header frame decoder. It allows to:

	Decode ctx channel handler context

432.8. Add a class for netty 4 size header frame decoder tests. It allows to:

	Start thread pool;
	Terminate thread pool;
	Handle test that text message is returned on HTTP like request;
	Handle test that nothing is returned for other invalid packets

432.9. Add a class for netty 4 transport multi port integration IT. It allows to:

	Handle node settings;
	Handle test that transport client can connect;
	Handle test that infos are exposed

432.10. Add a class for netty 4 transport publish address IT. It allows to:

	Handle node settings;
	Handle test different ports

432.11. Add a class for netty 4 utils. It allows to:

	Handle new instance;
	Handle setup;
	Set available processors;
	Convert netty 4 utils to byte buf;
	Convert netty 4 utils to bytes reference;

432.12. Add a class for netty 4 utils tests. It allows to:

	Convert test;
	Get randomized bytes reference

432.13. Add a class for netty transport multi port tests. It allows to:

	Handle setup;
	Convert test that netty can bind;
	Handle test that default profile inherits from standard settings;
	Handle test that profile without port settings fails;
	Handle test that default profile port overrides general configuration;
	Start transport

432.14. Add a class for simple netty 4 transport tests. It allows to:

	Get netty from thread pool;
	Execute handshake;
	Build settings;
	Handle test connect exception;
	Handle test bind unavailable address

433. Changes to package org.elasticsearch.transport.nio:  

433.1. Add a class for mock nio transport plugin. It allows to:

	Get transports

433.2. Add a class for nio transport plugin. It allows to:

	Get settings;
	Get transports;
	Get http transports;
	Get nio group factory

433.3. Add a class for simple mock nio transport tests. It allows to:

	Get nio from thread pool;
	Execute handshake;
	Build settings;
	Get channels per node connection;
	Handle test connect exception;
	Handle test bind unavailable address

433.4. Add a class for simple nio transport tests. It allows to:

	Get nio from thread pool;
	Execute handshake;
	Build settings;
	Handle test connect exception;
	Handle test bind unavailable address

434. Changes to package org.elasticsearch.update:  

434.1. Add a class for update noop IT. It allows to:

	Handle test single field;
	Test two fields;
	Handle test array field;
	Handle test map;
	Handle test map and field;
	Handle test totally empty;
	Get fields;
	Update and check source;
	Update detect noop boolean;
	Handle total noop updates;
	Handle setup

435. Changes to package org.elasticsearch.upgrades:  

435.1. Add a class for full cluster restart IT. It allows to:

	Set index;
	Handle test search;
	Test new replicas work;
	Handle test cluster state;
	Handle test shrink;
	Handle test shrink after upgrade;
	Handle test rollover;
	Assert basic search works;
	Assert all search works;
	Assert basic aggregation works;
	Assert realtime get works;
	Assert stored binary fields;
	Convert full cluster restart IT to str;
	Assert no failures;
	Assert total hits;
	Extract total hits;
	Handle test single doc;
	Handle test empty shard;
	Handle test recovery;
	Handle test snapshot restore;
	Handle test history UUID is added;
	Handle test soft deletes;
	Handle test closed indices;
	Assert closed index;
	Check snapshot;
	Handle index random documents;
	Get count of indexed random documents;
	Save info document;
	Load info document;
	Refresh full cluster restart IT;
	Get data nodes;
	Ensure green long wait

435.2. Add a class for recovery IT. It allows to:

	Handle test history UUID is generated;
	Get index docs;
	Handle async index docs;
	Process  on failure;
	Run;
	Handle test recovery with concurrent indexing;
	Assert count;
	Get node id;
	Handle test relocation with concurrent indexing;
	Handle test recover synced flush index;
	Handle test recovery with soft deletes;
	Handle test recovery closed index;
	Handle test close index during rolling upgrade;
	Handle index version created;
	Handle minimum node version;
	Assert closed index

436. Changes to package org.elasticsearch.usage:  

436.1. Add a class for usage service. It allows to:

	Instantiate usage service;
	Add rest handler;
	Get usage stats

437. Changes to package org.elasticsearch.validate:  

437.1. Add a class for simple validate query IT. It allows to:

	Handle test simple validate query;
	Handle test explain validate query two nodes;
	Handle test explain date range in query string;
	Handle test validate empty cluster;
	Handle test explain no query;
	Handle test explain filtered alias;
	Handle test explain with rewrite validate query;
	Handle test explain with rewrite validate query all shards;
	Handle test irrelevant properties before query;
	Handle test irrelevant properties after query;
	Assert explanation;
	Assert explanations;
	Handle test explain terms query with lookup

438. Changes to package org.elasticsearch.versioning:  

438.1. Add a class for concurrent document operation IT. It allows to:

	Handle test concurrent operation on same doc;
	Process  on response;
	Process  on failure

439. Changes to package org.elasticsearch.watcher:  

439.1. Add a class for abstract resource watcher. It allows to:

	Handle init;
	Check abstract resource watcher;
	Add listener;
	Remove listener;
	Get listeners;
	Do init;
	Do abstract resource watcher

439.2. Add an interface declaration  for file changes listener. It allows to:

	Process file changes listener file changes listener on file init;
	Process file changes listener file changes listener on directory init;
	Handle on file created;
	Handle on file deleted;
	Handle on file changed;
	Handle on directory created;
	Handle on directory deleted

439.3. Add an interface declaration  for resource watcher. It allows to:

	Handle init;
	Check resource watcher

439.4. Add a class for resource watcher service tests. It allows to:

	Handle test settings;
	Handle test handle;
	Handle init;
	Check

439.5. Add a class for watcher handle. It allows to:

	Instantiate watcher handle  with resource watcher service resource monitor, watcher and watcher;
	Get watcher;
	Get frequency;
	Stop watcher handle;
	Resume watcher handle

440. Changes to package org.elasticsearch.wildfly:  

440.1. Add a class for wildfly IT. It allows to:

	Handle test transport client

441. Changes to package org.elasticsearch.wildfly.model:  

441.1. Add a class for employee. It allows to:

	Get employee first name;
	Set first name;
	Get last name;
	Get set last name;
	Get age;
	Set age;
	Get employee about;
	Set employee about;
	Get interests;
	Set interests

442. Changes to package org.elasticsearch.wildfly.transport:  

442.1. Add a class for transport client activator. It allows to:

	Get classes

442.2. Add a class for transport client employee resource. It allows to:

	Get employee  by id;
	Put employee  by id

442.3. Add a class for transport client producer. It allows to:

	Create transport client;
	Get path

442.4. Add a class for transport jackson json provider

