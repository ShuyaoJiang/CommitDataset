BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (rest-high-level-signatures.txt).  renames some files.
 This change set is mainly composed of:  

1. Changes to package org.elasticsearch:  

1. Changes to package org.elasticsearch.action.admin.cluster.reroute:  

1. Changes to package org.elasticsearch.action.admin.cluster.state:  

1. Changes to package org.elasticsearch.action.admin.indices.rollover:  

1. Changes to package org.elasticsearch.action.admin.indices.settings.put:  

1. Changes to package org.elasticsearch.action.admin.indices.shrink:  

1. Changes to package org.elasticsearch.action.ingest:  

1. Changes to package org.elasticsearch.bootstrap:  

1. Changes to package org.elasticsearch.client:  

1.1. Add a class for graph client. It allows to:

	Instantiate graph client  with rest high level client;
	Explore graph explore request;
	Explore async

1.2. Add a class for graph IT. It allows to:

	Handle index documents;
	Handle test clean explore;
	Handle test bad explore

1.3. Add a class for index lifecycle client. It allows to:

	Instantiate index lifecycle client  with rest high level client;
	Get lifecycle policy;
	Get lifecycle policy async;
	Put lifecycle policy;
	Put lifecycle policy async;
	Delete lifecycle policy;
	Delete lifecycle policy async;
	Remove index lifecycle policy;
	Remove index lifecycle policy async;
	Start ILM;
	Start ILM  async start ILM request;
	Stop ILM;
	Get lifecycle management status;
	Handle lifecycle management status async;
	Stop ILM  async stop ILM request;
	Explain lifecycle;
	Explain lifecycle async;
	Retry lifecycle policy;
	Retry lifecycle policy async

1.4. Add a class for index lifecycle IT. It allows to:

	Handle test remove index lifecycle policy;
	Handle test start stop ILM;
	Handle test explain lifecycle;
	Handle test delete lifecycle;
	Handle test put lifecycle;
	Handle test get multiple lifecycle policies;
	Handle test retry lifecycle step

1.5. Add an interface declaration  for validatable. It allows to:

	Validate validatable

1.6. Add a class for validation exception. It allows to:

	Add validation error;
	Add validation errors;
	Get validation errors;
	Get message

2. Changes to package org.elasticsearch.client.documentation:  

2.1. Add a class for graph documentation IT. It allows to:

	Handle index documents;
	Handle test explore

3. Changes to package org.elasticsearch.cluster:  

3. Changes to package org.elasticsearch.common.geo:  

3. Changes to package org.elasticsearch.common.settings:  

3. Changes to package org.elasticsearch.discovery:  

3. Changes to package org.elasticsearch.gradle:  

3. Changes to package org.elasticsearch.http.netty4:  

3. Changes to package org.elasticsearch.http.nio:  

3. Changes to package org.elasticsearch.index:  

3. Changes to package org.elasticsearch.index.engine:  

3. Changes to package org.elasticsearch.index.mapper:  

3. Changes to package org.elasticsearch.index.query:  

3. Changes to package org.elasticsearch.index.search:  

3. Changes to package org.elasticsearch.index.translog:  

3.1. Add a class for tragic exception holder. It allows to:

	Set tragic exception;
	Get tragic exception holder

4. Changes to package org.elasticsearch.indices.cluster:  

4. Changes to package org.elasticsearch.indices.recovery:  

4. Changes to package org.elasticsearch.ingest:  

4. Changes to package org.elasticsearch.license:  

4.1. Add a class for remote cluster license checker tests. It allows to:

	Handle test is not remote index;
	Handle test is remote index;
	Handle test no remote index;
	Handle test remote index;
	Handle test no remote indices;
	Handle test remote indices;
	Handle test no remote cluster aliases;
	Handle test one remote cluster alias;
	Test more  than one remote cluster alias;
	Handle test duplicate remote cluster alias;
	Handle test simple wildcard remote cluster alias;
	Handle test partial wildcard remote cluster alias;
	Handle test non matching wildcard remote cluster alias;
	Handle test check remote cluster licenses given compatible licenses;
	Process  on response;
	Process  on failure;
	Handle test check remote cluster licenses given incompatible license;
	Handle test check remote cluster licences given non existent cluster;
	Handle test remote cluster license call uses system context;
	Handle test listener is executed with calling context;
	Handle test build error message for active compatible license;
	Handle test build error message for incompatible license;
	Handle test build error message for inactive license;
	Handle test check remote cluster licences no license metadata;
	Handle double invocation protecting listener;
	Create mock thread pool;
	Create mock client;
	Create mock client that throws  on get remote cluster client;
	Create platinum license response;
	Create basic license response;
	Create expired license response

5. Changes to package org.elasticsearch.multi_node:  

5. Changes to package org.elasticsearch.node:  

5. Changes to package org.elasticsearch.protocol.xpack:  

5.1. Add a class for x pack info request. It allows to:

	Convert x pack info request to set;
	Instantiate x pack info request;
	Set verbose;
	Check if x pack info request is verbose;
	Set categories;
	Get categories;
	Validate x pack info request;
	Read  from stream input;
	Write  to stream output

5.2. Add a class for x pack info response tests. It allows to:

	Create blank instance;
	Do hlrc parse instance;
	Convert hlrc  to internal;
	Get random fields exclude filter;
	Get x pack info response tests to X content params;
	Create test instance;
	Mutate instance;
	Handle random build info;
	Mutate build info;
	Handle random license info;
	Mutate license info;
	Handle random feature sets info;
	Mutate feature sets info;
	Handle random feature set;
	Handle random native code info

5.3. Add a class for x pack usage request. It allows to:

	Validate x pack usage request

5.4. Add a class for x pack usage response. It allows to:

	Instantiate x pack usage response  with usages map;
	Cast map;
	Get usages;
	Process x pack usage response x pack usage response from X content

6. Changes to package org.elasticsearch.protocol.xpack.common:  

6.1. Add a class for protocol utils. It allows to:

	Check if protocol utils equals;
	Hash code

6.2. Add a class for protocol utils tests. It allows to:

	Handle test map string equals and hash

7. Changes to package org.elasticsearch.protocol.xpack.graph:  

7.1. Add a class for graph explore response. It allows to:

	Instantiate graph explore response;
	Instantiate graph explore response  with shard operation failed exception, vertices map, connections map and connections map;
	Took graph explore response;
	Get took in millis;
	Check if graph explore response is timed out;
	Get shard failures;
	Read  from stream input;
	Get connections;
	Get vertices;
	Get vertex;
	Write  to stream output;
	Convert graph explore response to X content;
	Process graph explore response graph explore response from X content

7.2. Add a class for graph explore response tests. It allows to:

	Do hlrc parse instance;
	Convert hlrc  to internal;
	Convert vertices;
	Convert connections;
	Create test instance;
	Create instance;
	Create test instance  with failures;
	Do parse instance;
	Handle supports unknown fields;
	Assert graph explore response tests to X content equivalence;
	Get shuffle fields exceptions;
	Get random fields exclude filter when result has errors;
	Assert equal instances;
	Compare o 1 connection;
	Compare o 1 vertex;
	Handle test from X content with failures

7.3. Add a class for hop. It allows to:

	Instantiate hop  with parent hop;
	Validate action request validation exception;
	Get parent hop;
	Write  to stream output;
	Read  from stream input;
	Guiding query;
	Add vertex request;
	Get effective vertex requests;
	Get number vertex requests;
	Get vertex request;
	Convert hop to X content

7.4. Add a class for vertex request. It allows to:

	Instantiate vertex request;
	Read  from stream input;
	Write  to stream output;
	Get field name;
	Get size;
	Check if vertex request has include clauses;
	Check if vertex request has exclude clauses;
	Exclude vertex request;
	Include vertex request;
	Include values;
	Include values  as string array;
	Check if vertex request excludes as array;
	Min doc count;
	Shard min doc count;
	Convert vertex request to X content

8. Changes to package org.elasticsearch.protocol.xpack.license:  

8.1. Add a class for delete license request. It allows to:

	Validate delete license request

8.2. Add a class for get license request. It allows to:

	Instantiate get license request;
	Instantiate get license request  with stream input;
	Validate get license request

8.3. Add a class for get license response. It allows to:

	Instantiate get license response;
	Get license definition

8.4. Add a class for license status tests. It allows to:

	Handle test serialization;
	Handle test compatibility

8.5. Add a class for put license request. It allows to:

	Instantiate put license request;
	Validate put license request;
	Set license definition;
	Get license definition;
	Acknowledge put license request;
	Check if put license request is acknowledge

8.6. Add a class for put license response. It allows to:

	Instantiate put license response;
	Instantiate put license response  with licenses status;
	Instantiate put license response  with licenses status, acknowledge messages map and acknowledge messages map;
	Get status;
	Acknowledge messages;
	Acknowledge header;
	Read  from stream input;
	Write  to stream output;
	Add custom fields;
	Convert put license response to string;
	Check if put license response equals;
	Hash code

8.7. Add a class for put license response tests. It allows to:

	Do hlrc parse instance;
	Convert hlrc  to internal;
	Handle supports unknown fields;
	Get random fields exclude filter;
	Create test instance;
	Handle random ack messages;
	Create blank instance;
	Mutate instance;
	Mutate status

9. Changes to package org.elasticsearch.protocol.xpack.migration:  

9.1. Add a class for index upgrade info request. It allows to:

	Instantiate index upgrade info request;
	Instantiate index upgrade info request  with stream input;
	Write  to stream output;
	Get indices;
	Get indices options;
	Handle indices options;
	Validate index upgrade info request;
	Read  from stream input;
	Check if index upgrade info request equals;
	Hash code

9.2. Add a class for index upgrade info response. It allows to:

	Instantiate index upgrade info response;
	Instantiate index upgrade info response  with actions map;
	Read  from stream input;
	Write  to stream output;
	Get actions;
	Convert index upgrade info response to X content;
	Check if index upgrade info response equals;
	Hash code

10. Changes to package org.elasticsearch.protocol.xpack.watcher:  

10.1. Add a class for delete watch request. It allows to:

	Instantiate delete watch request;
	Get id;
	Set id;
	Validate delete watch request;
	Read  from stream input;
	Write  to stream output;
	Convert delete watch request to string

10.2. Add a class for delete watch response. It allows to:

	Instantiate delete watch response;
	Get id;
	Get version;
	Check if delete watch response is found;
	Set id;
	Get set version;
	Found delete watch response;
	Check if delete watch response equals;
	Hash code;
	Read  from stream input;
	Write  to stream output;
	Convert delete watch response to X content;
	Process delete watch response delete watch response from X content

10.3. Add a class for delete watch response tests. It allows to:

	Create test instance;
	Do parse instance;
	Do hlrc parse instance;
	Convert hlrc  to internal;
	Handle supports unknown fields

10.4. Add a class for put watch request. It allows to:

	Instantiate put watch request;
	Instantiate put watch request  with stream input;
	Instantiate put watch request  with source bytes reference, X content type and X content type;
	Read  from stream input;
	Write  to stream output;
	Get id;
	Set id;
	Get source;
	Set source;
	Check if put watch request is active;
	Set active;
	X content type;
	Get version;
	Get set version;
	Get set if seq no;
	Set put watch request if primary term;
	Get put watch request if seq no;
	Get put watch request if primary term;
	Validate put watch request;
	Check if put watch request is valid id

10.5. Add a class for put watch response. It allows to:

	Instantiate put watch response;
	Set id;
	Get set version;
	Set put watch response;
	Set primary term;
	Created put watch response;
	Get id;
	Get version;
	Get put watch response;
	Get primary term;
	Check if put watch response is created;
	Check if put watch response equals;
	Hash code;
	Write  to stream output;
	Read  from stream input;
	Convert put watch response to X content;
	Process put watch response put watch response from X content

10.6. Add a class for put watch response tests. It allows to:

	Create test instance;
	Do parse instance;
	Do hlrc parse instance;
	Convert hlrc  to internal;
	Handle supports unknown fields

11. Changes to package org.elasticsearch.qa.die_with_dignity:  

11. Changes to package org.elasticsearch.rest.action.search:  

11. Changes to package org.elasticsearch.search.query:  

11. Changes to package org.elasticsearch.smoketest:  

11.1. Rename type MlWithSecurityIT with MlWithSecurityIT

11.2. Rename type MlWithSecurityInsufficientRoleIT with MlWithSecurityInsufficientRoleIT

11.3. Rename type MlWithSecurityUserRoleIT with MlWithSecurityUserRoleIT

12. Changes to package org.elasticsearch.test:  

12. Changes to package org.elasticsearch.test.rest.yaml.section:  

12.1. Add a class for match assertion tests. It allows to:

	Handle test null

13. Changes to package org.elasticsearch.transport:  

13. Changes to package org.elasticsearch.transport.netty4:  

13. Changes to package org.elasticsearch.xpack.core:  

13. Changes to package org.elasticsearch.xpack.core.graph.action:  

13. Changes to package org.elasticsearch.xpack.core.indexlifecycle:  

13.1. Add a class for abstract action test case. It allows to:

	Convert test;
	Check if abstract action test case is safe action;
	Handle test is safe action;

13.2. Add a class for abstract step test case. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test hashcode and equals;
	Handle random step key;
	Handle test step name not error

13.3. Add a class for allocate action. It allows to:

	Parse X content parser;
	Instantiate allocate action  with number of replicas integer, include map, exclude map, require map and require map;
	Instantiate allocate action  with stream input;
	Get number  of replicas;
	Include allocate action;
	Exclude allocate action;
	Require allocate action;
	Write  to stream output;
	Get writeable name;
	Convert allocate action to X content;
	Check if allocate action is safe action;
	Convert allocate action to steps;
	Convert allocate action to step keys;
	Hash code;
	Check if allocate action equals;
	Convert allocate action to string

13.4. Add a class for allocate action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Get instance reader;
	Mutate instance;
	Test all maps null or empty;
	Handle test invalid number of replicas;
	Handle random map;
	Convert test

13.5. Add a class for allocation routed step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

13.6. Add a class for allocation routed step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test condition met;
	Handle test condition met only one copy allocated;
	Convert test condition not met due;
	Handle test execute allocate not complete;
	Handle test execute allocate not complete only one copy allocated;
	Handle test execute allocate unassigned;
	Handle test execute replicas not allocated on single node;
	Handle test execute index missing;
	Assert allocate status

13.7. Add a class for cluster state action step. It allows to:

	Instantiate cluster state action step  with step key, next step key and next step key;
	Perform action

13.8. Add a class for delete action. It allows to:

	Parse X content parser;
	Instantiate delete action;
	Instantiate delete action  with stream input;
	Write  to stream output;
	Get writeable name;
	Convert delete action to X content;
	Check if delete action is safe action;
	Convert delete action to steps;
	Convert delete action to step keys;
	Hash code;
	Check if delete action equals;
	Convert delete action to string

13.9. Add a class for delete action tests. It allows to:

	Do parse instance;
	Create test instance;
	Get instance reader;
	Convert test

13.10. Add a class for delete step. It allows to:

	Instantiate delete step  with step key, next step key, client and client;
	Perform index meta data during no snapshot;
	Handle index survives

13.11. Add a class for delete step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test index survives;
	Handle test deleted;
	Process  on response;
	Process  on failure;
	Handle test exception thrown;
	Answer invocation on mock;

13.12. Add a class for error step. It allows to:

	Instantiate error step  with step key

13.13. Add a class for error step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test invalid step key;
	Handle test step name not error

13.14. Add a class for force merge action. It allows to:

	Parse X content parser;
	Instantiate force merge action;
	Instantiate force merge action  with stream input;
	Get max num segments;
	Write  to stream output;
	Get writeable name;
	Check if force merge action is safe action;
	Convert force merge action to X content;
	Convert force merge action to steps;
	Convert force merge action to step keys;
	Hash code;
	Check if force merge action equals;
	Convert force merge action to string

13.15. Add a class for force merge action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Mutate instance;
	Get instance reader;
	Handle test missing max num segments;
	Handle test invalid negative segment number;
	Convert test

13.16. Add a class for force merge step. It allows to:

	Instantiate force merge step  with step key, next step key, client and client;
	Get max num segments;
	Perform action;
	Hash code;
	Check if force merge step equals

13.17. Add a class for force merge step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action complete;
	Process  on response;
	Process  on failure;
	Handle test perform action throws exception;

13.18. Add a class for initialize policy context step. It allows to:

	Instantiate initialize policy context step  with step step key, next step key and next step key;
	Perform action

13.19. Add a class for initialize policy context step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test add creation date;
	Handle test do nothing;
	Get index lifecycle date

13.20. Add an interface declaration  for lifecycle action. It allows to:

	Convert lifecycle action to steps;
	Convert lifecycle action to step keys;
	Check if lifecycle action is safe action

13.21. Add a class for lifecycle policy. It allows to:

	Instantiate lifecycle policy  with phases map;
	Instantiate lifecycle policy  with stream input;
	Instantiate lifecycle policy  with lifecycle type, phases map and phases map;
	Parse X content parser;
	Write  to stream output;
	Get name;
	Get type;
	Get phases;
	Convert lifecycle policy to X content;
	Convert lifecycle policy to steps;
	Check if lifecycle policy is action safe;
	Validate policy name;
	Hash code;
	Check if lifecycle policy equals;
	Convert lifecycle policy to string

13.22. Add a class for lifecycle policy metadata. It allows to:

	Parse X content parser;
	Instantiate lifecycle policy metadata  with lifecycle policy, headers map and headers map;
	Instantiate lifecycle policy metadata  with stream input;
	Get headers;
	Get policy;
	Get name;
	Get version;
	Get modified date;
	Get modified date string;
	Convert lifecycle policy metadata to X content;
	Write  to stream output;
	Hash code;
	Check if lifecycle policy metadata equals

13.23. Add a class for lifecycle policy metadata tests. It allows to:

	Handle setup;
	Get named writeable registry;
	X content registry;
	Do parse instance;
	Create test instance;
	Get instance reader;
	Mutate instance

13.24. Add a class for lifecycle policy tests. It allows to:

	Do parse instance;
	Get named writeable registry;
	X content registry;
	Create test instance;
	Handle random timeseries lifecycle policy with all phases;
	Handle random timeseries lifecycle policy;
	Handle random test lifecycle policy;
	Mutate instance;
	Get instance reader;
	Handle test first and last steps;
	Convert test;
	Handle test is action safe;
	Handle test validate policy name

13.25. Add an object creator class for lifecycle policy tests utils. It allows to:

	Handle new test lifecycle policy;
	Handle new lockable lifecycle policy;
	Handle random timeseries lifecycle policy

13.26. Add a class for lifecycle settings

13.27. Add an interface declaration  for lifecycle type. It allows to:

	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name;
	Validate phases collection

13.28. Add a class for mock action. It allows to:

	Parse X content parser;
	Instantiate mock action;
	Instantiate mock action  with steps list;
	Instantiate mock action  with stream input;
	Convert mock action to X content;
	Get writeable name;
	Get steps;
	Check if mock action is safe action;
	Convert mock action to steps;
	Convert mock action to step keys;
	Write  to stream output;
	Hash code;
	Check if mock action equals

13.29. Add a class for mock action tests. It allows to:

	Create test instance;
	Do parse instance;
	Get instance reader;
	Mutate instance;
	Handle random step key;
	Convert test

13.30. Add a class for mock step. It allows to:

	Instantiate mock step  with step key, next step step key and next step step key;
	Instantiate mock step  with other step;
	Instantiate mock step  with stream input;
	Read optional next step key;
	Write  to stream output

13.31. Add a class for phase. It allows to:

	Parse X content parser;
	Instantiate phase  with minimum age time value, actions map and actions map;
	Instantiate phase  with stream input;
	Write  to stream output;
	Get minimum age;
	Get name;
	Get actions;
	Convert phase to X content;
	Hash code;
	Check if phase equals;
	Convert phase to string

13.32. Add a class for phase tests. It allows to:

	Handle setup;
	Create test instance;
	Handle random test phase;
	Do parse instance;
	Get instance reader;
	Get named writeable registry;
	X content registry;
	Mutate instance;
	Handle test default after

13.33. Add a class for read only action. It allows to:

	Parse X content parser;
	Instantiate read only action;
	Instantiate read only action  with stream input;
	Get writeable name;
	Convert read only action to X content;
	Write  to stream output;
	Check if read only action is safe action;
	Convert read only action to steps;
	Convert read only action to step keys;
	Hash code;
	Check if read only action equals;
	Convert read only action to string

13.34. Add a class for read only action tests. It allows to:

	Do parse instance;
	Create test instance;
	Get instance reader;
	Convert test

13.35. Add a class for rollover action. It allows to:

	Parse X content parser;
	Instantiate rollover action  with max size value, max age time value and max age time value;
	Instantiate rollover action  with stream input;
	Write  to stream output;
	Get writeable name;
	Get max size;
	Get max age;
	Get rollover action;
	Convert rollover action to X content;
	Check if rollover action is safe action;
	Convert rollover action to steps;
	Convert rollover action to step keys;
	Hash code;
	Check if rollover action equals;
	Convert rollover action to string

13.36. Add a class for rollover action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Get instance reader;
	Mutate instance;
	Handle test no conditions;
	Convert test

13.37. Add a class for rollover step. It allows to:

	Instantiate rollover step  with step key, next step key, client and client;
	Perform action;
	Hash code;
	Check if rollover step equals

13.38. Add a class for rollover step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Assert rollover index request;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action with indexing complete;
	Handle test perform action failure;
	Handle test perform action invalid null or empty alias;
	Convert test perform action alias does not point;

13.39. Add a class for segment count step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

13.40. Add a class for segment count step tests. It allows to:

	Create random instance;
	Make meta;
	Mutate instance;
	Copy instance;
	Handle test is condition met;
	Process  on response;
	Process  on failure;
	Handle test is condition fails;
	Handle test throws exception;

13.41. Add a class for set single node allocate step. It allows to:

	Instantiate set single node allocate step  with step key, next step key, client and client;
	Perform action

13.42. Add a class for set single node allocate step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Assert settings request contains value  from update settings request;
	Handle test perform action no attrs;
	Handle test perform action attrs all nodes valid;
	Handle test perform action attrs some nodes valid;
	Handle test perform action attrs no nodes valid;
	Handle test perform action attrs request fails;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action attrs no shard;
	Assert node selected;
	Assert no valid node;

13.43. Add a class for shrink action. It allows to:

	Parse X content parser;
	Instantiate shrink action;
	Instantiate shrink action  with stream input;
	Get number  of shards;
	Write  to stream output;
	Get writeable name;
	Convert shrink action to X content;
	Check if shrink action is safe action;
	Convert shrink action to steps;
	Convert shrink action to step keys;
	Check if shrink action equals;
	Hash code;
	Convert shrink action to string

13.44. Add a class for shrink action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Mutate instance;
	Get instance reader;
	Handle test non positive shard number;
	Handle test perform action with skip;
	Handle test perform action without skip;
	Convert test;
	Check if shrink action tests is safe action

13.45. Add a class for shrink set alias step. It allows to:

	Instantiate shrink set alias step  with step key, next step key, client and client;
	Get shrunk index prefix;
	Perform index meta data during no snapshot;
	Handle index survives;
	Hash code;
	Check if shrink set alias step equals

13.46. Add a class for shrink set alias step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action failure;

13.47. Add a class for shrink step. It allows to:

	Instantiate shrink step  with step key, next step key, client and client;
	Get number  of shards;
	Get shrunk index prefix;
	Perform action;
	Hash code;
	Check if shrink step equals

13.48. Add a class for shrink step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action not complete;
	Handle test perform action failure;

13.49. Add a class for shrunk shards allocated step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

13.50. Add a class for shrunk shards allocated step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test condition met;
	Handle test condition not met because of active;
	Handle test condition not met because of shrunk index doesnt exist yet

13.51. Add a class for shrunken index check step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

13.52. Add a class for shrunken index check step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test condition met;
	Handle test condition not met because not same shrunken index;
	Handle test condition not met because source index exists;
	Handle test illegal state

13.53. Add a class for step key tests. It allows to:

	Create test instance;
	Get instance reader;
	Do parse instance;
	Mutate instance

13.54. Add a class for terminal policy step. It allows to:

	Instantiate terminal policy step  with step key, next step key and next step key

13.55. Add an object creator class for terminal policy step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test instance

13.56. Add a class for test lifecycle type. It allows to:

	Instantiate test lifecycle type;
	Write  to stream output;
	Get writeable name;
	Validate phases collection;
	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name

13.57. Add a class for timeseries lifecycle type. It allows to:

	Instantiate timeseries lifecycle type;
	Write  to stream output;
	Get writeable name;
	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name;
	Validate phases collection

13.58. Add a class for timeseries lifecycle type tests. It allows to:

	Handle test validate phases;
	Handle test validate hot phase;
	Handle test validate warm phase;
	Handle test validate cold phase;
	Handle test validate delete phase;
	Handle test get ordered phases;
	Handle test unfollow injections;
	Check if timeseries lifecycle type tests is unfollow injected;
	Handle test get ordered actions invalid phase;
	Handle test get ordered actions hot;
	Handle test get ordered actions warm;
	Handle test get ordered actions cold;
	Handle test get ordered actions delete;
	Handle test get next phase name;
	Handle test get previous phase name;
	Handle test get next action name;
	Assert next action name;
	Assert invalid action;
	Convert action names  to actions;
	Assert next phase name;
	Assert previous phase name;
	Check if timeseries lifecycle type tests is sorted;
	Get test action

13.59. Add a class for update rollover lifecycle date step. It allows to:

	Instantiate update rollover lifecycle date step  with step key, next step key, fallback time supplier and fallback time supplier;
	Perform action;
	Hash code;
	Check if update rollover lifecycle date step equals

13.60. Add a class for update rollover lifecycle date step tests. It allows to:

	Create random instance;
	Create random instance  with fallback time;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Handle test perform action before rollover happened;
	Handle test perform action with no rollover alias setting;
	Handle test perform action with indexing complete

13.61. Add a class for update settings step. It allows to:

	Instantiate update settings step  with step key, next step key, client, settings and settings;
	Perform action;
	Get settings;
	Hash code;
	Check if update settings step equals

13.62. Add a class for update settings step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action failure;

14. Changes to package org.elasticsearch.xpack.core.indexlifecycle.action:  

14.1. Add an object creator class for delete lifecycle request tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

14.2. Add an object creator class for delete lifecycle response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

14.3. Add an object creator class for explain lifecycle action. It allows to:

	Instantiate explain lifecycle action;
	Handle new response

14.4. Add an object creator class for get lifecycle request tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

14.5. Add an object creator class for get lifecycle response tests. It allows to:

	Create test instance;
	Create blank instance;
	Get named writeable registry;
	Mutate instance

14.6. Add a class for move to step request tests. It allows to:

	Handle setup;
	Create test instance;
	Create blank instance;
	Do parse instance;
	Handle supports unknown fields;
	Mutate instance

14.7. Add an object creator class for move to step response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

14.8. Add a class for put lifecycle request tests. It allows to:

	Handle setup;
	Create test instance;
	Create blank instance;
	Do parse instance;
	Get named writeable registry;
	X content registry;
	Handle supports unknown fields;
	Mutate instance

14.9. Add an object creator class for put lifecycle response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

14.10. Add a class for retry request tests. It allows to:

	Create test instance;
	Mutate instance;
	Create blank instance

14.11. Add an object creator class for retry response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

14.12. Add an object creator class for start ILM action. It allows to:

	Instantiate start ILM action;
	Handle new response

14.13. Add an object creator class for stop ILM action. It allows to:

	Instantiate stop ILM action;
	Handle new response

15. Changes to package org.elasticsearch.xpack.core.scheduler:  

15.1. Add a class for evil scheduler engine tests. It allows to:

	Test evil scheduler engine tests out of memory error while triggered is rethrown and is uncaught

15.2. Add a class for scheduler engine tests. It allows to:

	Handle test listeners throwing exceptions do not cause other listeners to be skipped;
	Handle test listeners throwing exceptions do not cause next scheduled task to be skipped;
	Assert failed listener log message

16. Changes to package org.elasticsearch.xpack.core.security.action.role:  

16. Changes to package org.elasticsearch.xpack.core.security.action.user:  

16.1. Add a class for has privileges response tests. It allows to:

	Handle test serialization V 64 or V 65;
	Handle test serialization V 63;
	Convert test;
	Handle supports unknown fields;
	Create blank instance;
	Create test instance;
	Do hlrc parse instance;
	Convert hlrc  to internal;
	Convert has privileges response tests to resource privileges;
	Serialize original has privileges response;
	Handle random response;
	Handle random resource privileges

17. Changes to package org.elasticsearch.xpack.graph.rest.action:  

17. Changes to package org.elasticsearch.xpack.indexlifecycle:  

17.1. Add a class for execute steps update task. It allows to:

	Instantiate execute steps update task  with index, start step, policy steps registry, index lifecycle runner, now supplier and now supplier;
	Get policy;
	Get index;
	Get start step;
	Get next step key;
	Execute current state;
	Handle cluster state processed;
	Process execute steps update task execute steps update task on failure;
	Move cluster state to error step

17.2. Add a class for execute steps update task tests. It allows to:

	Prepare state;
	Get setup index policy;
	Handle test never execute non cluster state step;
	Handle test success then failure unset next key;
	Handle test execute until first non cluster state step;
	Handle test execute invalid start step;
	Handle test execute incomplete wait step no info;
	Handle test execute incomplete wait step with info;
	Handle test on failure;
	Handle test cluster action step throws exception;
	Handle test cluster wait step throws exception;
	Set state  to key

17.3. Add a class for index lifecycle. It allows to:

	Instantiate index lifecycle  with settings;
	Get clock;
	Create guice modules;
	Get settings;
	Create components;
	Get named writeables;
	Get named X content;
	Get rest handlers;
	Get actions;
	Close index lifecycle

17.4. Add a class for index lifecycle feature set. It allows to:

	Instantiate index lifecycle feature set  with settings, X pack license state, cluster service and cluster service;
	Name index lifecycle feature set;
	Get description;
	Handle available;
	Get enabled;
	Handle native code info;
	Handle usage

17.5. Add a class for index lifecycle metadata tests. It allows to:

	Create test instance;
	Do parse instance;
	Get instance reader;
	Get named writeable registry;
	X content registry;
	Mutate instance;
	Make test changes;
	Diff reader;
	Handle test minimum supported version;
	Handle testcontext;

17.6. Add a class for index lifecycle runner. It allows to:

	Instantiate index lifecycle runner  with steps registry, cluster service, thread pool, now supplier and now supplier;
	Check if index lifecycle runner is ready to transition to this phase;
	Run periodic step;
	Process  on response;
	Process  on failure;
	Maybe run async action;
	Run policy  after state change;
	Get current step key;
	Get current step;
	Move cluster state  to step;
	Move cluster state  to next step;
	Move cluster state  to error step;
	Move cluster state  to failed step;
	Move execution state  to next step;
	Handle new cluster state with lifecycle state;
	Add step info  to cluster state;
	Move index to step;
	Move index to error step;
	Set step info;
	Remove policy  for indexes;
	Remove policy  for index;
	Handle mark policy does not exist

17.7. Add a class for index lifecycle service. It allows to:

	Instantiate index lifecycle service  with settings, client, cluster service, thread pool, clock, now supplier, named X content registry and named X content registry;
	Maybe run async action;
	Move cluster state  to step;
	Move cluster state  to failed step;
	Process index lifecycle service index lifecycle service on master;
	Off master;
	Executor name;
	Update poll interval;
	Get scheduler;
	Get scheduled job;
	Maybe schedule job;
	Handle cluster changed;
	Apply cluster state;
	Cancel job;
	Get triggered;
	Trigger policies;
	Close index lifecycle service;
	Submit operation mode update;
	Check if index lifecycle service is cluster service stopped or closed

17.8. Add a class for index lifecycle service tests. It allows to:

	Prepare services;
	Handle cleanup;
	Handle test stopped mode skip;
	Handle test requested stop on shrink;
	Handle test requested stop on safe action;
	Handle test triggered different job

17.9. Add a class for lifecycle policy client tests. It allows to:

	Handle test execute with headers async no headers;
	Handle test execute with headers async wrong headers;
	Handle test execute with headers async with headers

17.10. Add a class for lifecycle policy security client. It allows to:

	Instantiate lifecycle policy security client  with client, headers map and headers map;
	Close lifecycle policy security client;
	Execute action

17.11. Add a class for lockable lifecycle type. It allows to:

	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name;
	Validate phases collection;
	Get writeable name;
	Write  to stream output

17.12. Add a class for move to error step update task. It allows to:

	Instantiate move to error step update task  with index, current step step key, cause exception, now supplier and now supplier;
	Get index;
	Get policy;
	Get current step key;
	Get cause;
	Execute current state;
	Process move to error step update task move to error step update task on failure

17.13. Add a class for move to error step update task tests. It allows to:

	Handle setup cluster state;
	Handle test execute successfully moved;
	Handle test execute noop different step;
	Handle test execute noop different policy;
	Handle test on failure;
	Set state policy;
	Set state  to key

17.14. Add a class for move to next step update task. It allows to:

	Instantiate move to next step update task  with index, current step step key, next step step key, now supplier, state change consumer and state change consumer;
	Get index;
	Get policy;
	Get current step key;
	Get next step key;
	Execute current state;
	Handle cluster state processed;
	Process move to next step update task move to next step update task on failure

17.15. Add a class for move to next step update task tests. It allows to:

	Handle setup cluster state;
	Handle test execute successfully moved;
	Handle test execute different current step;
	Handle test execute different policy;
	Handle test execute successful move with invalid next step;
	Handle test on failure;
	Set state policy;
	Set state  to key

17.16. Add a class for operation mode update task. It allows to:

	Instantiate operation mode update task  with operation mode;
	Get operation mode;
	Execute current state;
	Process operation mode update task operation mode update task on failure

17.17. Add a class for operation mode update task tests. It allows to:

	Handle test execute;
	Handle test execute with empty metadata;
	Assert move;
	Assert no move;
	Update current mode

17.18. Add a class for policy steps registry. It allows to:

	Instantiate policy steps registry  with named X content registry, client and client;
	Instantiate policy steps registry  with lifecycle policy map, first step map, step map, named X content registry, client and client;
	Get lifecycle policy map;
	Get first step map;
	Get step map;
	Update cluster state;
	Parse steps  from phase;
	Step index meta data;
	Exists step step key;
	Handle policy exists;
	Get first step;
	Get index age  for phase

17.19. Add a class for policy steps registry tests. It allows to:

	Handle empty meta data;
	Handle test get first step;
	Handle test get first step unknown policy;
	Handle test get step;
	Handle test get step error step;
	Handle test get step unknown policy;
	Handle test get step for index with no phase gets initialization step;
	Handle test get step unknown step key;
	Convert test update from nothing;
	Handle test update changed policy;
	Handle test update policy but no phase change index steps dont change

17.20. Add a class for random step info. It allows to:

	Instantiate random step info  with random string supplier;
	Convert random step info to X content;
	Hash code;
	Check if random step info equals;
	Convert random step info to string

17.21. Add a class for set step info update task tests. It allows to:

	Handle setup cluster state;
	Handle test execute successfully set;
	Get random step info;
	Handle test execute noop different step;
	Handle test execute noop different policy;
	Handle test on failure;
	Set state policy;
	Set state  to key

17.22. Add a class for time value schedule. It allows to:

	Instantiate time value schedule  with interval time value;
	Get interval;
	Handle next scheduled time after;
	Hash code;
	Check if time value schedule equals

17.23. Add a class for time value schedule tests. It allows to:

	Create random instance;
	Create random time value;
	Set up start and interval;
	Handle test hashcode and equals;
	Handle test next scheduled time first trigger not reached;
	Handle test next scheduled time at first interval;
	Handle test next scheduled time at start time;
	Handle test next scheduled time after first trigger;
	Handle test invalid interval

18. Changes to package org.elasticsearch.xpack.indexlifecycle.action:  

18.1. Add a class for rest delete lifecycle action. It allows to:

	Instantiate rest delete lifecycle action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

18.2. Add a class for rest explain lifecycle action. It allows to:

	Instantiate rest explain lifecycle action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

18.3. Add a class for rest get lifecycle action. It allows to:

	Instantiate rest get lifecycle action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

18.4. Add a class for rest get status action. It allows to:

	Instantiate rest get status action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

18.5. Add a class for rest move to step action. It allows to:

	Instantiate rest move to step action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

18.6. Add a class for rest put lifecycle action. It allows to:

	Instantiate rest put lifecycle action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

18.7. Add a class for rest retry action. It allows to:

	Instantiate rest retry action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

18.8. Add a class for rest start ILM action. It allows to:

	Instantiate rest start ILM action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

18.9. Add a class for rest stop action. It allows to:

	Instantiate rest stop action  with settings, rest controller and rest controller;
	Get name;
	Prepare request

18.10. Add a class for transport delete lifecycle action. It allows to:

	Instantiate transport delete lifecycle action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Handle master operation;
	Execute current state;
	Check block

18.11. Add a class for transport explain lifecycle action. It allows to:

	Instantiate transport explain lifecycle action  with transport service, cluster service, thread pool, action filters, index name expression resolver, named X content registry and named X content registry;
	Handle new response;
	Get executor;
	Check block;
	Do master operation

18.12. Add a class for transport get lifecycle action. It allows to:

	Instantiate transport get lifecycle action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Handle master operation;
	Check block

18.13. Add a class for transport get status action. It allows to:

	Instantiate transport get status action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Handle master operation;
	Check block

18.14. Add a class for transport move to step action. It allows to:

	Instantiate transport move to step action  with transport service, cluster service, thread pool, action filters, index name expression resolver, index lifecycle service and index lifecycle service;
	Get executor;
	Handle new response;
	Handle master operation;
	Execute current state;
	Handle cluster state processed;
	Check block

18.15. Add a class for transport put lifecycle action. It allows to:

	Instantiate transport put lifecycle action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Handle master operation;
	Execute current state;
	Check block

18.16. Add a class for transport retry action. It allows to:

	Instantiate transport retry action  with transport service, cluster service, thread pool, action filters, index name expression resolver, index lifecycle service and index lifecycle service;
	Get executor;
	Handle new response;
	Handle master operation;
	Execute current state;
	Handle cluster state processed;
	Check block

18.17. Add a class for transport start ILM action. It allows to:

	Instantiate transport start ILM action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Handle master operation;
	Execute current state;
	Check block

18.18. Add a class for transport stop ILM action. It allows to:

	Instantiate transport stop ILM action  with transport service, cluster service, thread pool, action filters, index name expression resolver and index name expression resolver;
	Get executor;
	Handle new response;
	Handle master operation;
	Execute current state;
	Check block

19. Changes to package org.elasticsearch.xpack.ml.action:  

19. Changes to package org.elasticsearch.xpack.ml.integration:  

19.1. Rename type AutodetectMemoryLimitIT with AutodetectMemoryLimitIT

19.2. Rename type BasicRenormalizationIT with BasicRenormalizationIT

19.3. Rename type CategorizationIT with CategorizationIT

19.4. Rename type DatafeedJobsIT with DatafeedJobsIT

19.5. Rename type DeleteExpiredDataIT with DeleteExpiredDataIT

19.6. Rename type DetectionRulesIT with DetectionRulesIT

19.7. Rename type ForecastIT with ForecastIT

19.8. Rename type InterimResultsDeletedAfterReopeningJobIT with InterimResultsDeletedAfterReopeningJobIT

19.9. Add a class for ml basic multi node IT. It allows to:

	Handle test machine learning installed;
	Handle test invalid job;
	Handle test mini farequote;
	Handle test mini farequote with datafeeder;
	Handle test mini farequote reopen;
	Create datafeed;
	Create farequote job;
	Assert flush response

19.10. Rename type MlJobIT with MlJobIT

19.11. Rename type MlNativeAutodetectIntegTestCase with MlNativeAutodetectIntegTestCase

19.12. Add a class for ml plugin disabled IT. It allows to:

	Handle test actions fail

19.13. Rename type ModelPlotsIT with ModelPlotsIT

19.14. Rename type OverallBucketsIT with OverallBucketsIT

19.15. Rename type PersistJobIT with PersistJobIT

19.16. Rename type ReopenJobWithGapIT with ReopenJobWithGapIT

19.17. Rename type RestoreModelSnapshotIT with RestoreModelSnapshotIT

19.18. Rename type RevertModelSnapshotIT with RevertModelSnapshotIT

19.19. Rename type ScheduledEventsIT with ScheduledEventsIT

20. Changes to package org.elasticsearch.xpack.ml.rest.job:  

20. Changes to package org.elasticsearch.xpack.monitoring.collector.cluster:  

20. Changes to package org.elasticsearch.xpack.monitoring.integration:  

20. Changes to package org.elasticsearch.xpack.rollup:  

20. Changes to package org.elasticsearch.xpack.rollup.job:  

20. Changes to package org.elasticsearch.xpack.security:  

20.1. Add a class for permissions IT. It allows to:

	Rest client settings;
	Rest admin settings;
	Handle init;
	Handle test can manage index and policy different users;
	Handle test can manage index with no permissions;
	Handle test can view explain on unmanaged index;
	Create new singleton policy;
	Create index  as admin

21. Changes to package org.elasticsearch.xpack.security.authc.kerberos:  

21. Changes to package org.elasticsearch.xpack.security.authz:  

21. Changes to package org.elasticsearch.xpack.sql.expression.function.scalar.string:  

21. Changes to package org.elasticsearch.xpack.watcher.trigger.schedule:  

21. Changes to package org.elasticsearch.xpack.watcher.trigger.schedule.tool:  

