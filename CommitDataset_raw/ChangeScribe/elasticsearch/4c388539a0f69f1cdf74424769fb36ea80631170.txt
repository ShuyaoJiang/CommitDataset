BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (sql_whitelist.txt). 
 This change set is mainly composed of:  

1. Changes to package org.elasticsearch:  

1. Changes to package org.elasticsearch.action.admin.cluster.reroute:  

1. Changes to package org.elasticsearch.action.admin.cluster.state:  

1. Changes to package org.elasticsearch.cluster:  

1. Changes to package org.elasticsearch.xpack.monitoring.collector.cluster:  

1. Changes to package org.elasticsearch.xpack.sql.analysis.analyzer:  

1. Changes to package org.elasticsearch.xpack.sql.expression.function.scalar:  

1. Changes to package org.elasticsearch.xpack.sql.expression.function.scalar.string:  

1.1. Add a class for binary string function. It allows to:

	Instantiate binary string function  with source, left expression, right expression and right expression;
	Get operation;
	Resolve type;
	Resolve second parameter input type;
	Fold binary string function;
	Get script method name;
	Get script with field;
	Hash code;
	Check if binary string function equals

1.2. Add a class for binary string numeric function. It allows to:

	Instantiate binary string numeric function  with source, left expression, right expression and right expression;
	Get operation;
	Resolve second parameter input type;
	Make pipe;
	Get data type

1.3. Add a class for binary string numeric processor. It allows to:

	Handle binary string numeric operation;
	Apply count number;
	Instantiate binary string numeric processor  with left processor, right processor, binary string numeric operation and binary string numeric operation;
	Instantiate binary string numeric processor  with stream input;
	Get writeable name;
	Do process

1.4. Add a class for binary string numeric processor tests. It allows to:

	Create test instance;
	Get instance reader;
	Get named writeable registry;
	Handle test left function with valid input;
	Handle test left function with edge cases;
	Handle test left function input validation;
	Test right function  with valid input;
	Test right function  with edge cases;
	Test right function input validation;
	Handle test repeat function with valid input;
	Handle test repeat function with edge cases;
	Handle test repeat function inputs validation

1.5. Add a class for binary string string function. It allows to:

	Instantiate binary string string function  with source, left expression, right expression and right expression;
	Resolve second parameter input type;
	Get data type

1.6. Add a class for binary string string processor. It allows to:

	Handle binary string string operation;
	Apply binary string string processor;
	Instantiate binary string string processor  with stream input;
	Instantiate binary string string processor  with left processor, right processor, binary string string operation and binary string string operation;
	Get writeable name;
	Do process

1.7. Add a class for binary string string processor tests. It allows to:

	Create test instance;
	Get instance reader;
	Get named writeable registry;
	Handle test position function with valid input;
	Handle test position function with edge cases;
	Handle test position function inputs validation

1.8. Add a class for concat. It allows to:

	Instantiate concat  with source, source 1 expression, source 2 expression and source 2 expression;
	Resolve type;
	Make pipe;
	Handle nullable;
	Handle foldable;
	Fold concat;
	Replace children;
	Info concat;
	Get script with field;
	Get data type

1.9. Add a class for concat function processor. It allows to:

	Instantiate concat function processor  with source 1 processor, source 2 processor and source 2 processor;
	Instantiate concat function processor  with stream input;
	Get process;
	Do process;
	Get writeable name;
	Check if concat function processor equals;
	Hash code;
	Write stream output

1.10. Add a class for concat processor tests. It allows to:

	Create test instance;
	Get instance reader;
	Get named writeable registry;
	Handle test concat function with valid input;
	Handle test concat function with edge cases;
	Handle test concat function inputs validation

1.11. Add a class for insert. It allows to:

	Instantiate insert  with source, src expression, start expression, length expression, replacement expression and replacement expression;
	Resolve type;
	Handle foldable;
	Fold insert;
	Make pipe;
	Info insert;
	Process insert insert as script;
	Process insert insert as script from;
	Get script with field;
	Get data type;
	Replace children

1.12. Add a class for insert function processor. It allows to:

	Instantiate insert function processor  with source processor, start processor, length processor, replacement processor and replacement processor;
	Instantiate insert function processor  with stream input;
	Write  to stream output;
	Get process;
	Do process;
	Check if insert function processor equals;
	Hash code;
	Get source;
	Start insert function processor;
	Get length;
	Get replacement;
	Get writeable name

1.13. Add a class for insert processor tests. It allows to:

	Create test instance;
	Get instance reader;
	Get named writeable registry;
	Handle test insert with valid inputs;
	Handle test insert with edge cases;
	Handle test insert inputs validation

1.14. Add a class for left. It allows to:

	Instantiate left  with source, left expression, right expression and right expression;
	Get operation;
	Replace children;
	Info left

1.15. Add a class for locate. It allows to:

	Instantiate locate  with source, pattern expression, src expression, start expression and start expression;
	Resolve type;
	Make pipe;
	Info locate;
	Handle foldable;
	Fold locate;
	Process locate locate as script;
	Process locate locate as script from;
	Get script with field;
	Get data type;
	Replace children

1.16. Add a class for locate function processor. It allows to:

	Instantiate locate function processor  with pattern processor, source processor, start processor and start processor;
	Instantiate locate function processor  with stream input;
	Write  to stream output;
	Get process;
	Do process;
	Check if locate function processor equals;
	Hash code;
	Get pattern;
	Get source;
	Start locate function processor;
	Get writeable name

1.17. Add a class for locate processor tests. It allows to:

	Create test instance;
	Get instance reader;
	Get named writeable registry;
	Handle test locate function with valid input;
	Handle test locate function with edge cases inputs;
	Handle test locate function validating inputs

1.18. Add a class for position. It allows to:

	Instantiate position  with source, left expression, right expression and right expression;
	Get operation;
	Replace children;
	Make pipe;
	Info position

1.19. Add a class for repeat. It allows to:

	Instantiate repeat  with source, left expression, right expression and right expression;
	Get operation;
	Replace children;
	Info repeat

1.20. Add a class for replace. It allows to:

	Instantiate replace  with source, src expression, pattern expression, replacement expression and replacement expression;
	Resolve type;
	Make pipe;
	Info replace;
	Handle foldable;
	Fold replace;
	Process replace replace as script;
	Process replace replace as script from;
	Get script with field;
	Get data type;
	Replace children

1.21. Add a class for replace function processor. It allows to:

	Instantiate replace function processor  with source processor, pattern processor, replacement processor and replacement processor;
	Instantiate replace function processor  with stream input;
	Write  to stream output;
	Get process;
	Do process;
	Check if replace function processor equals;
	Hash code;
	Get source;
	Get pattern;
	Get replacement;
	Get writeable name

1.22. Add a class for replace processor tests. It allows to:

	Create test instance;
	Get instance reader;
	Get named writeable registry;
	Handle test replace function with valid input;
	Handle test replace function with edge cases;
	Handle test replace function inputs validation

1.23. Add a class for right. It allows to:

	Instantiate right  with source, left expression, right expression and right expression;
	Get operation;
	Replace children;
	Info right

1.24. Add a class for substring. It allows to:

	Instantiate substring  with source, src expression, start expression, length expression and length expression;
	Resolve type;
	Make pipe;
	Handle foldable;
	Fold substring;
	Info substring;
	Process substring substring as script;
	Process substring substring as script from;
	Get script with field;
	Get data type;
	Replace children

1.25. Add a class for substring function processor. It allows to:

	Instantiate substring function processor  with source processor, start processor, length processor and length processor;
	Instantiate substring function processor  with stream input;
	Write  to stream output;
	Get process;
	Do process;
	Get source;
	Start substring function processor;
	Get length;
	Check if substring function processor equals;
	Hash code;
	Get writeable name

1.26. Add a class for substring processor tests. It allows to:

	Create test instance;
	Get instance reader;
	Get named writeable registry;
	Handle test substring function with valid input;
	Handle test substring function with edge cases;
	Handle test substring function inputs validation

2. Changes to package org.elasticsearch.xpack.sql.expression.function.scalar.whitelist:  

