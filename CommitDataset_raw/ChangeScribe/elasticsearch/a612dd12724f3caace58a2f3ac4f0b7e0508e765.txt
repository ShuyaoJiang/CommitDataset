BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (checkstyle.xml, sql_whitelist.txt).  renames some files.
 This change set is mainly composed of:  

1. Changes to package org.elasticsearch:  

1. Changes to package org.elasticsearch.action.admin.cluster.reroute:  

1. Changes to package org.elasticsearch.action.admin.cluster.state:  

1. Changes to package org.elasticsearch.action.admin.indices.create:  

1. Changes to package org.elasticsearch.action.bulk:  

1. Changes to package org.elasticsearch.action.ingest:  

1. Changes to package org.elasticsearch.analysis.common:  

1. Changes to package org.elasticsearch.client:  

1. Changes to package org.elasticsearch.client.documentation:  

1. Changes to package org.elasticsearch.cluster:  

1. Changes to package org.elasticsearch.cluster.coordination:  

1.1. Add a class for apply commit request. It allows to:

	Instantiate apply commit request  with source node;
	Instantiate apply commit request  with stream input;
	Write  to stream output;
	Convert apply commit request to string

1.2. Add a class for apply commit response handler. It allows to:

	Process apply commit response handler apply commit response handler on response;
	Handle publication completed iff all targets inactive or canceled;
	Process apply commit response handler apply commit response handler on failure;

1.3. Add a class for coordination state rejected exception. It allows to:

	Instantiate coordination state rejected exception;
	Instantiate coordination state rejected exception  with stream input

1.4. Add a class for coordinator. It allows to:

	Instantiate coordinator  with settings, cluster settings, transport service, named writeable registry, allocation service, master service, persisted state supplier, seed hosts provider, cluster applier, on join validators collection, random and random;
	Get cluster formation state;
	Get coordinator on leader failure;
	Run;
	Convert to string;
	Remove node;
	Process coordinator coordinator on follower check request;
	Handle apply commit request;
	Process  on failure;
	Process  on success;
	Handle publish request;
	Join last join optional with destination;
	Close prevoting and election scheduler;
	Update max term seen;
	Start election;
	Abdicate  to new master discovery node;
	Handle election quorum contains local node;
	Handle election quorum contains;
	Ensure term  at least;
	Join leader  in term;
	Handle join request;
	Get local node;
	Send validate join request;
	Process  on response;
	Handle process join request;
	Become candidate;
	Become leader;
	Become follower;
	Handle clean master service;
	Execute current state;
	Get pre vote response;
	Get current term;
	Get mode;
	Handle publication in progress;
	Start coordinator;
	Get stats;
	Start initial join;
	Stop coordinator;
	Do coordinator close;
	Handle invariant;
	Get state  for master service;
	Check if coordinator is initial configuration set;
	Set initial configuration;
	Get election quorum contains local node;
	Improve configuration;
	Schedule reconfiguration  if needed;
	Check if coordinator has join vote from;
	Join join;
	Handle join ignoring exceptions;
	Get last accepted state;
	Get applier state;
	Get discovered nodes;
	Get cluster state with no master block;
	Publish cluster changed event;
	Assert previous state consistency;
	Wrap action listener with mutex;
	Cancel active publication;
	Get coordinator on join validators

1.5. Add a class for deterministic task queue tests. It allows to:

	Handle test run random task;
	Handle test run random task varies order;
	Get results  of running randomly random;
	Handle test starts at time zero;
	Convert advance;
	Handle test does not defer tasks for immediate execution;
	Handle test does not defer tasks scheduled in the past;
	Handle test defers tasks with positive delays;
	Handle test keeps future tasks deferred;
	Handle test executes tasks in time order;
	Handle test run in time order;
	Handle test executor service enqueues tasks;
	Handle test thread pool enqueues tasks;
	Handle test thread pool wraps runnable;
	Handle test executor service wraps runnable;
	Handle test thread pool schedules future tasks;
	Convert test delay variability applies;
	Handle test thread pool schedules periodic future tasks;
	Handle new task queue;

1.6. Add a class for election scheduler factory tests. It allows to:

	Handle random grace period;
	Assert election schedule;
	Handle test retries on correct schedule;
	Handle test settings validation;
	Handle test random positive long less than

1.7. Add a class for failed to commit cluster state exception. It allows to:

	Instantiate failed to commit cluster state exception  with stream input;
	Instantiate failed to commit cluster state exception;
	Instantiate failed to commit cluster state exception  with cause throwable

1.8. Add a class for join. It allows to:

	Instantiate join  with source node, target node and target node;
	Instantiate join  with stream input;
	Write  to stream output;
	Get source node;
	Get target node;
	Target matches;
	Get last accepted version;
	Get term;
	Get last accepted term;
	Convert join to string;
	Check if join equals;
	Hash code

1.9. Add a class for join request. It allows to:

	Instantiate join request  with source node, optional join and optional join;
	Instantiate join request  with stream input;
	Write  to stream output;
	Get source node;
	Get optional join;
	Check if join request equals;
	Hash code;
	Convert join request to string

1.10. Add a class for messages tests. It allows to:

	Create node;
	Handle test join equals hash code serialization;
	Handle test publish request equals hash code;
	Handle test publish response equals hash code serialization;
	Handle test publish with join response equals hash code serialization;
	Handle test start join request equals hash code serialization;
	Handle test apply commit equals hash code serialization;
	Handle test join request equals hash code serialization;
	Handle random cluster state;
	Handle test pre vote request equals hash code serialization;
	Handle test pre vote response equals hash code serialization

1.11. Add a class for peers response. It allows to:

	Instantiate peers response  with master node optional, known peers list and known peers list;
	Instantiate peers response  with stream input;
	Write  to stream output;
	Get master node;
	Get known peers;
	Get term;
	Convert peers response to string;
	Check if peers response equals;
	Hash code

1.12. Add a class for pre vote collector tests. It allows to:

	Create objects;
	Get local pre vote response;
	Start and run collector;
	Run collector;
	Make cluster state;
	Start collector;
	Handle test starts election if local node is only node;
	Handle test starts election if local node is quorum;
	Handle test starts election if other node is quorum;
	Handle test does not starts election if other node is quorum and does not respond;
	Handle test does not start election if stopped;
	Handle test ignores pre votes from later terms;
	Handle test ignores pre votes from later version in same term;
	Handle test accepts pre votes from any version in earlier terms;
	Handle random pre vote response;
	Handle test prevoting indicates election success;
	Handle pre vote request  via transport service;
	Read stream input;
	Handle response;
	Handle exception;
	Get executor;
	Handle test response if candidate;
	Convert test response;

1.13. Add a class for pre vote request. It allows to:

	Instantiate pre vote request  with source node;
	Instantiate pre vote request  with stream input;
	Write  to stream output;
	Get source node;
	Get current term;
	Convert pre vote request to string;
	Check if pre vote request equals;
	Hash code

1.14. Add a class for pre vote response. It allows to:

	Instantiate pre vote response;
	Instantiate pre vote response  with stream input;
	Write  to stream output;
	Get current term;
	Get last accepted term;
	Get last accepted version;
	Convert pre vote response to string;
	Check if pre vote response equals;
	Hash code

1.15. Add a class for publish request. It allows to:

	Instantiate publish request  with accepted state;
	Get accepted state;
	Check if publish request equals;
	Hash code;
	Convert publish request to string

1.16. Add a class for publish response. It allows to:

	Instantiate publish response;
	Instantiate publish response  with stream input;
	Write  to stream output;
	Get term;
	Get version;
	Convert publish response to string;
	Check if publish response equals;
	Hash code

1.17. Add a class for publish with join response. It allows to:

	Instantiate publish with join response  with publish response, optional join and optional join;
	Instantiate publish with join response  with stream input;
	Write  to stream output;
	Get publish response;
	Join publish with join response;
	Check if publish with join response equals;
	Hash code;
	Convert publish with join response to string

1.18. Add a class for start join request. It allows to:

	Instantiate start join request  with source node;
	Instantiate start join request  with stream input;
	Write  to stream output;
	Get source node;
	Get term;
	Convert start join request to string;
	Check if start join request equals;
	Hash code

1.19. Add a class for term version request. It allows to:

	Instantiate term version request  with source node;
	Instantiate term version request  with stream input;
	Write  to stream output;
	Get source node;
	Get term;
	Get version;
	Check if term version request equals;
	Hash code;
	Convert term version request to string

2. Changes to package org.elasticsearch.cluster.health:  

2. Changes to package org.elasticsearch.common.logging:  

2. Changes to package org.elasticsearch.common.settings:  

2. Changes to package org.elasticsearch.common.util.concurrent:  

2. Changes to package org.elasticsearch.discovery:  

2.1. Add a class for handshaking transport address connector. It allows to:

	Instantiate handshaking transport address connector  with settings, transport service and transport service;
	Connect transport address to remote master node;
	Run;
	Process  on failure;
	Convert to string

2.2. Add a class for peer finder messages tests. It allows to:

	Create node;
	Handle test peers request equals hash code serialization;
	Handle test peers response equals hash code serialization;
	Modify discovery nodes list

2.3. Add a class for peers request. It allows to:

	Instantiate peers request  with source node, known peers list and known peers list;
	Instantiate peers request  with stream input;
	Write  to stream output;
	Get known peers;
	Get source node;
	Convert peers request to string;
	Check if peers request equals;
	Hash code

3. Changes to package org.elasticsearch.index.engine:  

3. Changes to package org.elasticsearch.index.mapper:  

3. Changes to package org.elasticsearch.index.reindex:  

3. Changes to package org.elasticsearch.index.replication:  

3. Changes to package org.elasticsearch.index.seqno:  

3. Changes to package org.elasticsearch.index.shard:  

3. Changes to package org.elasticsearch.indices.cluster:  

3.1. Add a class for fake thread pool master service. It allows to:

	Instantiate fake thread pool master service  with on task available to run consumer;
	Create mock thread pool;
	Create thread pool executor;
	Execute command runnable;
	Schedule next task  if necessary;
	Get increment version;
	Publish cluster changed event;
	Wrap ack listener

3.2. Add a class for fake thread pool master service tests. It allows to:

	Handle test fake master service;
	Execute current state;
	Handle cluster state processed;
	Process  on failure;
	Get index builder

4. Changes to package org.elasticsearch.indices.recovery:  

4. Changes to package org.elasticsearch.ingest:  

4. Changes to package org.elasticsearch.ingest.common:  

4. Changes to package org.elasticsearch.painless:  

4. Changes to package org.elasticsearch.search.aggregations.bucket:  

4. Changes to package org.elasticsearch.search.fetch.subphase.highlight:  

4. Changes to package org.elasticsearch.smoketest:  

4. Changes to package org.elasticsearch.test:  

4. Changes to package org.elasticsearch.test.disruption:  

4.1. Add a class for disruptable mock transport. It allows to:

	Instantiate disruptable mock transport  with local node, logger and logger;
	Get connection status;
	Get disruptable mock transport;
	Execute runnable;
	Get local node;
	Create transport service;
	Handle open connection;
	Get node;
	Send request;
	Process disruptable mock transport disruptable mock transport on send request;
	Get disconnect exception;
	Run;
	Convert to string;
	Get request description;
	Process disruptable mock transport disruptable mock transport on blackholed during send;
	Process disruptable mock transport disruptable mock transport on disconnected during send;
	Process disruptable mock transport disruptable mock transport on connected during send;
	Get profile name;
	Get channel type;
	Send response;

4.2. Add a class for disruptable mock transport tests. It allows to:

	Get connection status;
	Handle init transports;
	Get disruptable mock transport;
	Execute runnable;
	Handle request handler should not be called;
	Get request handler replies normally;
	Get request handler replies exceptionally;
	Get request handler captures;
	Handle response handler should not be called;
	Read stream input;
	Handle response;
	Handle exception;
	Get executor;
	Get response handler should be called normally;
	Get response handler should be called exceptionally;
	Register request handler;
	Send transport service;
	Handle test successful response;
	Handle test exceptional response;
	Handle test disconnected on request;
	Handle test unavailable on request;
	Handle test unavailable on request only;
	Handle test disconnected on successful response;
	Handle test disconnected on exceptional response;
	Handle test unavailable on successful response;
	Handle test unavailable on exceptional response;
	Handle test unavailable on request only receives successful response;
	Handle test unavailable on request only receives exceptional response

5. Changes to package org.elasticsearch.test.rest.yaml.restspec:  

5. Changes to package org.elasticsearch.test.transport:  

5.1. Add a class for mock transport. It allows to:

	Create transport service;
	Handle response;
	Handle local error;
	Handle remote error;
	Handle error;
	Handle open connection;
	Create connection;
	Get node;
	Send request;
	Process mock transport mock transport on send request;
	Node connected;
	Get stats;
	Get bound address;
	Profile bound addresses;
	Get addresses from string;
	Get lifecycle state;
	Add lifecycle listener;
	Remove lifecycle listener;
	Start mock transport;
	Stop mock transport;
	Close mock transport;
	Get local addresses;
	Register request handler;
	Get response handlers;
	Get request handler;
	Set message listener;
	Handle writeable registry

6. Changes to package org.elasticsearch.transport:  

6. Changes to package org.elasticsearch.transport.nio:  

6. Changes to package org.elasticsearch.upgrades:  

6. Changes to package org.elasticsearch.xpack.ccr:  

6. Changes to package org.elasticsearch.xpack.ccr.action:  

6. Changes to package org.elasticsearch.xpack.core.ccr:  

6. Changes to package org.elasticsearch.xpack.core.ml.job.config:  

6. Changes to package org.elasticsearch.xpack.ml:  

6. Changes to package org.elasticsearch.xpack.ml.action:  

6. Changes to package org.elasticsearch.xpack.ml.job:  

6. Changes to package org.elasticsearch.xpack.ml.job.persistence:  

6. Changes to package org.elasticsearch.xpack.ml.job.results:  

6. Changes to package org.elasticsearch.xpack.monitoring.collector.cluster:  

6. Changes to package org.elasticsearch.xpack.monitoring.integration:  

6. Changes to package org.elasticsearch.xpack.security.authc:  

6. Changes to package org.elasticsearch.xpack.sql.expression.function.scalar.math:  

6. Changes to package org.elasticsearch.xpack.sql.expression.function.scalar.whitelist:  

6. Changes to package org.elasticsearch.xpack.sql.parser:  

6. Changes to package org.elasticsearch.xpack.sql.plugin:  

6. Changes to package org.elasticsearch.xpack.test.rest:  

6. Changes to package org.elasticsearch.xpack.watcher:  

6. Changes to package org.elasticsearch.xpack.watcher.trigger.schedule.engine:  

