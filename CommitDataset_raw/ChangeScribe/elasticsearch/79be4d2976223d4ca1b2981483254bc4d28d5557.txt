BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (api-common-LICENSE.txt, api-common-NOTICE.txt, gax-LICENSE.txt, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package com.google.cloud.storage:  

1.1. Add a class for storage rpc option utils. It allows to:

	Instantiate storage rpc option utils;
	Get prefix

1.2. Add an object creator class for storage test utils. It allows to:

	Instantiate storage test utils;
	Create bucket;
	Create blob

2. Changes to package org.elasticsearch.action:  

2. Changes to package org.elasticsearch.action.admin.cluster.repositories.put:  

2.1. Add a class for put repository request tests. It allows to:

	Convert test create repository

3. Changes to package org.elasticsearch.action.admin.cluster.shards:  

3. Changes to package org.elasticsearch.action.admin.cluster.snapshots.create:  

3. Changes to package org.elasticsearch.action.admin.indices.create:  

3. Changes to package org.elasticsearch.action.admin.indices.shrink:  

3. Changes to package org.elasticsearch.action.admin.indices.template.put:  

3. Changes to package org.elasticsearch.action.support:  

3. Changes to package org.elasticsearch.client:  

3. Changes to package org.elasticsearch.client.documentation:  

3. Changes to package org.elasticsearch.cluster.metadata:  

3. Changes to package org.elasticsearch.cluster.routing:  

3. Changes to package org.elasticsearch.common.io.stream:  

3. Changes to package org.elasticsearch.common.lucene.uid:  

3. Changes to package org.elasticsearch.common.settings:  

3. Changes to package org.elasticsearch.http:  

3.1. Add a class for http handling settings. It allows to:

	Instantiate http handling settings;
	Process http handling settings http handling settings from settings;
	Get http handling settings max content length;
	Get max chunk size;
	Get max header size;
	Get max initial line length;
	Check if http handling settings is reset cookies;
	Check if http handling settings is compression;
	Get compression level;
	Get detailed errors enabled;
	Get pipelining max events;
	Check if http handling settings is cors enabled

4. Changes to package org.elasticsearch.http.netty4:  

4. Changes to package org.elasticsearch.http.nio:  

4.1. Add a class for http read write handler. It allows to:

	Instantiate http read write handler  with nio http channel, nio http server transport, http handling settings, nio cors config and nio cors config;
	Reads inbound channel buffer;
	Create write operation;
	Write write operation to bytes;
	Handle poll flush operations;
	Close http read write handler;
	Handle request

4.2. Add a class for http write operation. It allows to:

	Instantiate http write operation  with socket channel context, nio http response, listener bi consumer and listener bi consumer;
	Get listener;
	Get channel;
	Get object

4.3. Add a class for netty adaptor. It allows to:

	Instantiate netty adaptor  with handlers;
	Write ctx channel handler context;
	Close netty adaptor;
	Add close listener;
	Read buffers;
	Read pages;
	Handle poll inbound message;
	Write write operation;
	Poll outbound operation;
	Get outbound count

4.4. Add a class for netty listener. It allows to:

	Instantiate netty listener  with channel promise;
	Accept void;
	Get channel;
	Set success;
	Try success;
	Set failure;
	Try failure;
	Set uncancellable;
	Check if netty listener is success;
	Check if netty listener is cancellable;
	Cause netty listener;
	Add listener;
	Add listeners;
	Remove listener;
	Remove listeners;
	Get sync;
	Get sync uninterruptibly;
	Await netty listener;
	Await uninterruptibly;
	Await time unit;
	Get netty listener now;
	Cancel netty listener;
	Check if netty listener is canceled;
	Check if netty listener is done;
	Get netty listener;
	Get time unit;
	Check if netty listener is void;
	Handle unvoid;
	Process netty listener netty listener from bi consumer;
	Process netty listener netty listener from channel promise

4.5. Add a class for nio http channel. It allows to:

	Instantiate nio http channel  with socket channel;
	Send response;
	Add close listener;
	Convert nio http channel to string

4.6. Add a class for nio http server transport tests. It allows to:

	Handle setup;
	Handle shutdown;
	Handle test cors config;
	Handle test cors config with defaults;
	Handle test cors config with bad regex;
	Handle test expect continue header;
	Handle test expect continue header content length too long;
	Handle test expect unsupported expectation;
	Run expect header test;
	Dispatch request;
	Dispatch bad request;
	Handle test bind unavailable address;
	Handle test bad request;

5. Changes to package org.elasticsearch.index:  

5. Changes to package org.elasticsearch.index.analysis:  

5. Changes to package org.elasticsearch.index.engine:  

5. Changes to package org.elasticsearch.index.mapper:  

5. Changes to package org.elasticsearch.index.replication:  

5. Changes to package org.elasticsearch.index.shard:  

5. Changes to package org.elasticsearch.index.translog:  

5. Changes to package org.elasticsearch.indices.cluster:  

5. Changes to package org.elasticsearch.indices.recovery:  

5. Changes to package org.elasticsearch.indices.stats:  

5. Changes to package org.elasticsearch.integration:  

5. Changes to package org.elasticsearch.qa.die_with_dignity:  

5. Changes to package org.elasticsearch.repositories.blobstore:  

5. Changes to package org.elasticsearch.repositories.gcs:  

5. Changes to package org.elasticsearch.rest:  

5. Changes to package org.elasticsearch.rest.action.admin.indices:  

5. Changes to package org.elasticsearch.script:  

5. Changes to package org.elasticsearch.script.mustache:  

5.1. Add a class for search template request X content tests. It allows to:

	Create test instance;
	Do parse instance;
	Assert equal instances;
	Handle supports unknown fields;
	Convert test;
	Handle test from X content with embedded template;
	Handle test from X content with embedded template and params;
	Handle test from X content with malformed request;
	Handle new parser

5.2. Add a class for search template response tests. It allows to:

	Create test instance;
	Do parse instance;
	Create search response;
	Create source;
	Get random fields exclude filter;
	Assert equal instances;
	Handle supports unknown fields;
	Convert test source;
	Convert test search response

6. Changes to package org.elasticsearch.search:  

6. Changes to package org.elasticsearch.search.aggregations.metrics:  

6. Changes to package org.elasticsearch.smoketest:  

6. Changes to package org.elasticsearch.snapshots:  

6. Changes to package org.elasticsearch.test.rest.yaml:  

6. Changes to package org.elasticsearch.test.rest.yaml.section:  

6. Changes to package org.elasticsearch.transport.nio:  

6.1. Add a class for tcp read write handler. It allows to:

	Instantiate tcp read write handler  with nio tcp channel, tcp transport and tcp transport;
	Reads inbound channel buffer

7. Changes to package org.elasticsearch.upgrades:  

7. Changes to package org.elasticsearch.xpack.core:  

7. Changes to package org.elasticsearch.xpack.core.indexlifecycle:  

7.1. Add a class for abstract step test case. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test hashcode and equals;
	Handle random step key;
	Handle test step name not error

7.2. Add a class for allocate action. It allows to:

	Parse X content parser;
	Instantiate allocate action  with number of replicas integer, include map, exclude map, require map and require map;
	Instantiate allocate action  with stream input;
	Get number  of replicas;
	Include allocate action;
	Exclude allocate action;
	Require allocate action;
	Write  to stream output;
	Get writeable name;
	Convert allocate action to X content;
	Check if allocate action is safe action;
	Convert allocate action to steps;
	Convert allocate action to step keys;
	Hash code;
	Check if allocate action equals;
	Convert allocate action to string

7.3. Add a class for allocate action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Get instance reader;
	Mutate instance;
	Test all maps null or empty;
	Handle test invalid number of replicas;
	Handle random map;
	Convert test

7.4. Add a class for allocation routed step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

7.5. Add a class for allocation routed step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test condition met;
	Handle test condition met only one copy allocated;
	Convert test condition not met due;
	Handle test execute allocate not complete;
	Handle test execute allocate not complete only one copy allocated;
	Handle test execute allocate unassigned;
	Handle test execute replicas not allocated on single node;
	Handle test execute index missing;
	Assert allocate status

7.6. Add a class for delete action. It allows to:

	Parse X content parser;
	Instantiate delete action;
	Instantiate delete action  with stream input;
	Write  to stream output;
	Get writeable name;
	Convert delete action to X content;
	Check if delete action is safe action;
	Convert delete action to steps;
	Convert delete action to step keys;
	Hash code;
	Check if delete action equals;
	Convert delete action to string

7.7. Add a class for delete action tests. It allows to:

	Do parse instance;
	Create test instance;
	Get instance reader;
	Convert test

7.8. Add a class for delete step. It allows to:

	Instantiate delete step  with step key, next step key, client and client;
	Perform index meta data during no snapshot;
	Handle index survives

7.9. Add a class for delete step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test index survives;
	Handle test deleted;
	Process  on response;
	Process  on failure;
	Handle test exception thrown;
	Answer invocation on mock;

7.10. Add a class for error step. It allows to:

	Instantiate error step  with step key

7.11. Add a class for error step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test invalid step key;
	Handle test step name not error

7.12. Add a class for force merge action. It allows to:

	Parse X content parser;
	Instantiate force merge action;
	Instantiate force merge action  with stream input;
	Get max num segments;
	Write  to stream output;
	Get writeable name;
	Check if force merge action is safe action;
	Convert force merge action to X content;
	Convert force merge action to steps;
	Convert force merge action to step keys;
	Hash code;
	Check if force merge action equals;
	Convert force merge action to string

7.13. Add a class for force merge action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Mutate instance;
	Get instance reader;
	Handle test missing max num segments;
	Handle test invalid negative segment number;
	Convert test

7.14. Add a class for force merge step. It allows to:

	Instantiate force merge step  with step key, next step key, client and client;
	Get max num segments;
	Perform action;
	Hash code;
	Check if force merge step equals

7.15. Add a class for force merge step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action complete;
	Process  on response;
	Process  on failure;
	Handle test perform action throws exception;

7.16. Add a class for initialize policy context step. It allows to:

	Instantiate initialize policy context step  with step step key, next step key and next step key;
	Perform action

7.17. Add a class for initialize policy context step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test add creation date;
	Handle test do nothing;
	Get index lifecycle date

7.18. Add an interface declaration  for lifecycle action. It allows to:

	Convert lifecycle action to steps;
	Convert lifecycle action to step keys;
	Check if lifecycle action is safe action

7.19. Add a class for lifecycle policy. It allows to:

	Instantiate lifecycle policy  with phases map;
	Instantiate lifecycle policy  with stream input;
	Instantiate lifecycle policy  with lifecycle type, phases map and phases map;
	Parse X content parser;
	Write  to stream output;
	Get name;
	Get type;
	Get phases;
	Convert lifecycle policy to X content;
	Convert lifecycle policy to steps;
	Check if lifecycle policy is action safe;
	Validate policy name;
	Hash code;
	Check if lifecycle policy equals;
	Convert lifecycle policy to string

7.20. Add a class for lifecycle policy tests. It allows to:

	Do parse instance;
	Get named writeable registry;
	X content registry;
	Create test instance;
	Handle random timeseries lifecycle policy with all phases;
	Handle random timeseries lifecycle policy;
	Handle random test lifecycle policy;
	Mutate instance;
	Get instance reader;
	Handle test first and last steps;
	Convert test;
	Handle test is action safe;
	Handle test validate policy name

7.21. Add a class for lifecycle settings

7.22. Add an interface declaration  for lifecycle type. It allows to:

	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name;
	Validate phases collection

7.23. Add a class for mock action. It allows to:

	Parse X content parser;
	Instantiate mock action;
	Instantiate mock action  with steps list;
	Instantiate mock action  with stream input;
	Convert mock action to X content;
	Get writeable name;
	Get steps;
	Check if mock action is safe action;
	Convert mock action to steps;
	Convert mock action to step keys;
	Write  to stream output;
	Hash code;
	Check if mock action equals

7.24. Add a class for mock action tests. It allows to:

	Create test instance;
	Do parse instance;
	Get instance reader;
	Mutate instance;
	Handle random step key;
	Convert test

7.25. Add a class for mock step. It allows to:

	Instantiate mock step  with step key, next step step key and next step step key;
	Instantiate mock step  with other step;
	Instantiate mock step  with stream input;
	Read optional next step key;
	Write  to stream output

7.26. Add a class for phase. It allows to:

	Parse X content parser;
	Instantiate phase  with minimum age time value, actions map and actions map;
	Instantiate phase  with stream input;
	Write  to stream output;
	Get minimum age;
	Get name;
	Get actions;
	Convert phase to X content;
	Hash code;
	Check if phase equals;
	Convert phase to string

7.27. Add a class for phase tests. It allows to:

	Handle setup;
	Create test instance;
	Handle random test phase;
	Do parse instance;
	Get instance reader;
	Get named writeable registry;
	X content registry;
	Mutate instance;
	Handle test default after

7.28. Add a class for read only action. It allows to:

	Parse X content parser;
	Instantiate read only action;
	Instantiate read only action  with stream input;
	Get writeable name;
	Convert read only action to X content;
	Write  to stream output;
	Check if read only action is safe action;
	Convert read only action to steps;
	Convert read only action to step keys;
	Hash code;
	Check if read only action equals;
	Convert read only action to string

7.29. Add a class for read only action tests. It allows to:

	Do parse instance;
	Create test instance;
	Get instance reader;
	Convert test

7.30. Add a class for rollover action. It allows to:

	Parse X content parser;
	Instantiate rollover action  with max size value, max age time value and max age time value;
	Instantiate rollover action  with stream input;
	Write  to stream output;
	Get writeable name;
	Get max size;
	Get max age;
	Get rollover action;
	Convert rollover action to X content;
	Check if rollover action is safe action;
	Convert rollover action to steps;
	Convert rollover action to step keys;
	Hash code;
	Check if rollover action equals;
	Convert rollover action to string

7.31. Add a class for rollover action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Get instance reader;
	Mutate instance;
	Handle test no conditions;
	Convert test

7.32. Add a class for rollover step. It allows to:

	Instantiate rollover step  with step key, next step key, client and client;
	Perform action;
	Hash code;
	Check if rollover step equals

7.33. Add a class for rollover step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Assert rollover index request;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action with indexing complete;
	Handle test perform action failure;
	Handle test perform action invalid null or empty alias;
	Convert test perform action alias does not point;

7.34. Add a class for segment count step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

7.35. Add a class for segment count step tests. It allows to:

	Create random instance;
	Make meta;
	Mutate instance;
	Copy instance;
	Handle test is condition met;
	Process  on response;
	Process  on failure;
	Handle test is condition fails;
	Handle test throws exception;

7.36. Add a class for set single node allocate step. It allows to:

	Instantiate set single node allocate step  with step key, next step key, client and client;
	Perform action

7.37. Add a class for set single node allocate step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Assert settings request contains value  from update settings request;
	Handle test perform action no attrs;
	Handle test perform action attrs all nodes valid;
	Handle test perform action attrs some nodes valid;
	Handle test perform action attrs no nodes valid;
	Handle test perform action attrs request fails;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action attrs no shard;
	Assert node selected;
	Assert no valid node;

7.38. Add a class for shrink action. It allows to:

	Parse X content parser;
	Instantiate shrink action;
	Instantiate shrink action  with stream input;
	Get number  of shards;
	Write  to stream output;
	Get writeable name;
	Convert shrink action to X content;
	Check if shrink action is safe action;
	Convert shrink action to steps;
	Convert shrink action to step keys;
	Check if shrink action equals;
	Hash code;
	Convert shrink action to string

7.39. Add a class for shrink action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Mutate instance;
	Get instance reader;
	Handle test non positive shard number;
	Handle test perform action with skip;
	Handle test perform action without skip;
	Convert test;
	Check if shrink action tests is safe action

7.40. Add a class for shrink set alias step. It allows to:

	Instantiate shrink set alias step  with step key, next step key, client and client;
	Get shrunk index prefix;
	Perform index meta data during no snapshot;
	Handle index survives;
	Hash code;
	Check if shrink set alias step equals

7.41. Add a class for shrink set alias step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action failure;

7.42. Add a class for shrink step. It allows to:

	Instantiate shrink step  with step key, next step key, client and client;
	Get number  of shards;
	Get shrunk index prefix;
	Perform action;
	Hash code;
	Check if shrink step equals

7.43. Add a class for shrink step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action not complete;
	Handle test perform action failure;

7.44. Add a class for shrunk shards allocated step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

7.45. Add a class for shrunk shards allocated step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test condition met;
	Handle test condition not met because of active;
	Handle test condition not met because of shrunk index doesnt exist yet

7.46. Add a class for shrunken index check step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

7.47. Add a class for shrunken index check step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test condition met;
	Handle test condition not met because not same shrunken index;
	Handle test condition not met because source index exists;
	Handle test illegal state

7.48. Add a class for step key tests. It allows to:

	Create test instance;
	Get instance reader;
	Do parse instance;
	Mutate instance

7.49. Add a class for terminal policy step. It allows to:

	Instantiate terminal policy step  with step key, next step key and next step key

7.50. Add an object creator class for terminal policy step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test instance

7.51. Add a class for test lifecycle type. It allows to:

	Instantiate test lifecycle type;
	Write  to stream output;
	Get writeable name;
	Validate phases collection;
	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name

7.52. Add a class for timeseries lifecycle type. It allows to:

	Instantiate timeseries lifecycle type;
	Write  to stream output;
	Get writeable name;
	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name;
	Validate phases collection

7.53. Add a class for timeseries lifecycle type tests. It allows to:

	Handle test validate phases;
	Handle test validate hot phase;
	Handle test validate warm phase;
	Handle test validate cold phase;
	Handle test validate delete phase;
	Handle test get ordered phases;
	Handle test unfollow injections;
	Check if timeseries lifecycle type tests is unfollow injected;
	Handle test get ordered actions invalid phase;
	Handle test get ordered actions hot;
	Handle test get ordered actions warm;
	Handle test get ordered actions cold;
	Handle test get ordered actions delete;
	Handle test get next phase name;
	Handle test get previous phase name;
	Handle test get next action name;
	Assert next action name;
	Assert invalid action;
	Convert action names  to actions;
	Assert next phase name;
	Assert previous phase name;
	Check if timeseries lifecycle type tests is sorted;
	Get test action

7.54. Add a class for update settings step. It allows to:

	Instantiate update settings step  with step key, next step key, client, settings and settings;
	Perform action;
	Get settings;
	Hash code;
	Check if update settings step equals

7.55. Add a class for update settings step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action failure;

8. Changes to package org.elasticsearch.xpack.core.indexlifecycle.action:  

8.1. Add an object creator class for delete lifecycle request tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

8.2. Add an object creator class for delete lifecycle response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

8.3. Add an object creator class for get lifecycle request tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

8.4. Add an object creator class for get lifecycle response tests. It allows to:

	Create test instance;
	Create blank instance;
	Get named writeable registry;
	Mutate instance

8.5. Add a class for put lifecycle request tests. It allows to:

	Handle setup;
	Create test instance;
	Create blank instance;
	Do parse instance;
	Get named writeable registry;
	X content registry;
	Handle supports unknown fields;
	Mutate instance

8.6. Add an object creator class for put lifecycle response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

9. Changes to package org.elasticsearch.xpack.core.ml.job.results:  

9. Changes to package org.elasticsearch.xpack.core.security.authz.privilege:  

9. Changes to package org.elasticsearch.xpack.core.ssl:  

9. Changes to package org.elasticsearch.xpack.ml.action:  

9. Changes to package org.elasticsearch.xpack.ml.job.categorization:  

9.1. Add a class for grok pattern creator tests. It allows to:

	Handle test build field name;
	Handle test populate prefaces and epilogues given timestamp;
	Handle test populate prefaces and epilogues given email address;
	Handle test append best grok match for strings given timestamps and log levels;
	Handle test append best grok match for strings given tomcat datestamps;
	Handle test append best grok match for strings given trappy float candidates;
	Handle test append best grok match for strings given numbers in brackets;
	Handle test append best grok match for strings given negative numbers without break;
	Handle test append best grok match for strings given hex numbers;
	Handle test append best grok match for strings given hostnames with numbers;
	Handle test append best grok match for strings given email addresses;
	Handle test append best grok match for strings given uris;
	Handle test append best grok match for strings given paths;
	Handle test find best grok match from examples given named logs;
	Handle test find best grok match from examples given catalina logs;
	Handle test find best grok match from examples given multi timestamp logs

10. Changes to package org.elasticsearch.xpack.ml.job.results:  

10. Changes to package org.elasticsearch.xpack.security.action.saml:  

10. Changes to package org.elasticsearch.xpack.security.action.user:  

10. Changes to package org.elasticsearch.xpack.security.authc:  

10. Changes to package org.elasticsearch.xpack.security.authc.esnative:  

10. Changes to package org.elasticsearch.xpack.security.authc.support.mapper:  

10. Changes to package org.elasticsearch.xpack.security.authz:  

10. Changes to package org.elasticsearch.xpack.security.authz.store:  

10. Changes to package org.elasticsearch.xpack.security.support:  

10. Changes to package org.elasticsearch.xpack.security.test:  

10. Changes to package org.elasticsearch.xpack.security.user:  

10. Changes to package org.elasticsearch.xpack.sql.action:  

10. Changes to package org.elasticsearch.xpack.sql.analysis.analyzer:  

10. Changes to package org.elasticsearch.xpack.sql.cli:  

10. Changes to package org.elasticsearch.xpack.sql.cli.command:  

10. Changes to package org.elasticsearch.xpack.sql.execution:  

10. Changes to package org.elasticsearch.xpack.sql.execution.search:  

10. Changes to package org.elasticsearch.xpack.sql.expression:  

10. Changes to package org.elasticsearch.xpack.sql.parser:  

10. Changes to package org.elasticsearch.xpack.sql.plan.logical.command.sys:  

10. Changes to package org.elasticsearch.xpack.sql.plugin:  

10. Changes to package org.elasticsearch.xpack.sql.proto:  

10.1. Add a class for abstract sql request. It allows to:

	Instantiate abstract sql request  with request info;
	Get request info;
	Get mode;
	Get client id;
	Check if abstract sql request equals;
	Hash code

10.2. Add a class for column info. It allows to:

	Instantiate column info  with display size integer;
	Instantiate column info;
	Convert column info to X content;
	Process column info column info from X content;
	Get table;
	Name column info;
	Get es type;
	Display size;
	Check if column info equals;
	Hash code;
	Convert column info to string

10.3. Add a class for main response. It allows to:

	Instantiate main response;
	Get node name;
	Get version;
	Get cluster name;
	Get cluster uuid;
	Process main response main response from X content;
	Check if main response equals;
	Hash code

10.4. Add a class for protocol

10.5. Add a class for sql clear cursor request. It allows to:

	Instantiate sql clear cursor request  with request info;
	Get cursor;
	Check if sql clear cursor request equals;
	Hash code;
	Convert sql clear cursor request to X content

10.6. Add a class for sql clear cursor response. It allows to:

	Instantiate sql clear cursor response;
	Check if sql clear cursor response is succeeded;
	Check if sql clear cursor response equals;
	Hash code;
	Process sql clear cursor response sql clear cursor response from X content

10.7. Add a class for sql query request. It allows to:

	Instantiate sql query request  with params list, zone id, request timeout value, page timeout value, filter to content, columnar boolean, request info and request info;
	Instantiate sql query request  with request timeout value, page timeout value, request info and request info;
	Get cursor;
	Get query;
	Get params;
	Get zone id;
	Fetch size;
	Get request timeout;
	Get page timeout;
	Get filter;
	Get columnar;
	Handle field multi value leniency;
	Check if sql query request equals;
	Hash code;
	Convert sql query request to X content

10.8. Add a class for sql query response. It allows to:

	Instantiate sql query response  with columns list, rows list and rows list;
	Get cursor;
	Get size;
	Get columns;
	Get rows;
	Process sql query response sql query response from X content;
	Parse rows;
	Parse row;
	Check if sql query response equals;
	Hash code

10.9. Add a class for sql typed param value. It allows to:

	Instantiate sql typed param value;
	Convert sql typed param value to X content;
	Process sql typed param value sql typed param value from X content;
	Check if sql typed param value equals;
	Hash code;
	Convert sql typed param value to string

11. Changes to package org.elasticsearch.xpack.sql.session:  

