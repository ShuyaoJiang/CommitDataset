BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (version.properties). 
 This change set is mainly composed of:  

1. Changes to package org.elasticsearch.cluster.routing:  

1. Changes to package org.elasticsearch.common.geo.parsers:  

1. Changes to package org.elasticsearch.common.lucene.uid:  

1. Changes to package org.elasticsearch.common.settings:  

1. Changes to package org.elasticsearch.gateway:  

1. Changes to package org.elasticsearch.http.netty4.cors:  

1. Changes to package org.elasticsearch.http.nio.cors:  

1. Changes to package org.elasticsearch.index:  

1.1. Add a class for es tiered merge policy. It allows to:

	Instantiate es tiered merge policy;
	Find forced merges;
	Find forced deletes merges;
	Set force merge deletes pct allowed;
	Get force merge deletes pct allowed;
	Set floor segment MB;
	Get floor segment MB;
	Set max merge  at once;
	Get max merge  at once;
	Set max merge  at once explicit;
	Get max merge  at once explicit;
	Set max merged segment MB;
	Get max merged segment MB;
	Set segments  per tier;
	Get segments  per tier;
	Set deletes pct allowed;
	Get deletes pct allowed

1.2. Add a class for es tiered merge policy tests. It allows to:

	Handle test defaults;
	Handle test set max merged segment MB;
	Handle test set force merge deletes pct allowed;
	Handle test set floor segment MB;
	Handle test set max merge at once;
	Handle test set max merge at once explicit;
	Handle test set segments per tier;
	Handle test set deletes pct allowed

2. Changes to package org.elasticsearch.index.analysis:  

2. Changes to package org.elasticsearch.index.engine:  

2. Changes to package org.elasticsearch.index.fieldvisitor:  

2. Changes to package org.elasticsearch.index.mapper:  

2. Changes to package org.elasticsearch.index.query:  

2. Changes to package org.elasticsearch.index.rankeval:  

2. Changes to package org.elasticsearch.index.replication:  

2. Changes to package org.elasticsearch.index.shard:  

2. Changes to package org.elasticsearch.index.store:  

2. Changes to package org.elasticsearch.index.translog:  

2. Changes to package org.elasticsearch.indices.flush:  

2. Changes to package org.elasticsearch.indices.recovery:  

2. Changes to package org.elasticsearch.indices.stats:  

2. Changes to package org.elasticsearch.ingest:  

2. Changes to package org.elasticsearch.painless:  

2. Changes to package org.elasticsearch.painless.lookup:  

2. Changes to package org.elasticsearch.painless.node:  

2. Changes to package org.elasticsearch.painless.spi:  

2. Changes to package org.elasticsearch.plugin.store.smb:  

2. Changes to package org.elasticsearch.plugins:  

2.1. Add an interface declaration  for index store plugin. It allows to:

	Get index store factories

3. Changes to package org.elasticsearch.search.aggregations.bucket.histogram:  

3. Changes to package org.elasticsearch.snapshots:  

3. Changes to package org.elasticsearch.test:  

3. Changes to package org.elasticsearch.xpack.core:  

3. Changes to package org.elasticsearch.xpack.core.indexlifecycle:  

3.1. Add a class for abstract action test case. It allows to:

	Convert test;
	Check if abstract action test case is safe action;
	Handle test is safe action;

3.2. Add a class for abstract step test case. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test hashcode and equals;
	Handle random step key;
	Handle test step name not error

3.3. Add a class for allocate action. It allows to:

	Parse X content parser;
	Instantiate allocate action  with number of replicas integer, include map, exclude map, require map and require map;
	Instantiate allocate action  with stream input;
	Get number  of replicas;
	Include allocate action;
	Exclude allocate action;
	Require allocate action;
	Write  to stream output;
	Get writeable name;
	Convert allocate action to X content;
	Check if allocate action is safe action;
	Convert allocate action to steps;
	Convert allocate action to step keys;
	Hash code;
	Check if allocate action equals;
	Convert allocate action to string

3.4. Add a class for allocate action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Get instance reader;
	Mutate instance;
	Test all maps null or empty;
	Handle test invalid number of replicas;
	Handle random map;
	Convert test

3.5. Add a class for allocation routed step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

3.6. Add a class for allocation routed step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test condition met;
	Handle test condition met only one copy allocated;
	Convert test condition not met due;
	Handle test execute allocate not complete;
	Handle test execute allocate not complete only one copy allocated;
	Handle test execute allocate unassigned;
	Handle test execute replicas not allocated on single node;
	Handle test execute index missing;
	Assert allocate status

3.7. Add a class for cluster state action step. It allows to:

	Instantiate cluster state action step  with step key, next step key and next step key;
	Perform action

3.8. Add a class for delete action. It allows to:

	Parse X content parser;
	Instantiate delete action;
	Instantiate delete action  with stream input;
	Write  to stream output;
	Get writeable name;
	Convert delete action to X content;
	Check if delete action is safe action;
	Convert delete action to steps;
	Convert delete action to step keys;
	Hash code;
	Check if delete action equals;
	Convert delete action to string

3.9. Add a class for delete action tests. It allows to:

	Do parse instance;
	Create test instance;
	Get instance reader;
	Convert test

3.10. Add a class for delete step. It allows to:

	Instantiate delete step  with step key, next step key, client and client;
	Perform index meta data during no snapshot;
	Handle index survives

3.11. Add a class for delete step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test index survives;
	Handle test deleted;
	Process  on response;
	Process  on failure;
	Handle test exception thrown;
	Answer invocation on mock;

3.12. Add a class for error step. It allows to:

	Instantiate error step  with step key

3.13. Add a class for error step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test invalid step key;
	Handle test step name not error

3.14. Add a class for force merge action. It allows to:

	Parse X content parser;
	Instantiate force merge action;
	Instantiate force merge action  with stream input;
	Get max num segments;
	Write  to stream output;
	Get writeable name;
	Check if force merge action is safe action;
	Convert force merge action to X content;
	Convert force merge action to steps;
	Convert force merge action to step keys;
	Hash code;
	Check if force merge action equals;
	Convert force merge action to string

3.15. Add a class for force merge action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Mutate instance;
	Get instance reader;
	Handle test missing max num segments;
	Handle test invalid negative segment number;
	Convert test

3.16. Add a class for force merge step. It allows to:

	Instantiate force merge step  with step key, next step key, client and client;
	Get max num segments;
	Perform action;
	Hash code;
	Check if force merge step equals

3.17. Add a class for force merge step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action complete;
	Process  on response;
	Process  on failure;
	Handle test perform action throws exception;

3.18. Add a class for initialize policy context step. It allows to:

	Instantiate initialize policy context step  with step step key, next step key and next step key;
	Perform action

3.19. Add a class for initialize policy context step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test add creation date;
	Handle test do nothing;
	Get index lifecycle date

3.20. Add an interface declaration  for lifecycle action. It allows to:

	Convert lifecycle action to steps;
	Convert lifecycle action to step keys;
	Check if lifecycle action is safe action

3.21. Add a class for lifecycle policy. It allows to:

	Instantiate lifecycle policy  with phases map;
	Instantiate lifecycle policy  with stream input;
	Instantiate lifecycle policy  with lifecycle type, phases map and phases map;
	Parse X content parser;
	Write  to stream output;
	Get name;
	Get type;
	Get phases;
	Convert lifecycle policy to X content;
	Convert lifecycle policy to steps;
	Check if lifecycle policy is action safe;
	Validate policy name;
	Hash code;
	Check if lifecycle policy equals;
	Convert lifecycle policy to string

3.22. Add a class for lifecycle policy metadata. It allows to:

	Parse X content parser;
	Instantiate lifecycle policy metadata  with lifecycle policy, headers map and headers map;
	Instantiate lifecycle policy metadata  with stream input;
	Get headers;
	Get policy;
	Get name;
	Get version;
	Get modified date;
	Get modified date string;
	Convert lifecycle policy metadata to X content;
	Write  to stream output;
	Hash code;
	Check if lifecycle policy metadata equals

3.23. Add a class for lifecycle policy metadata tests. It allows to:

	Handle setup;
	Get named writeable registry;
	X content registry;
	Do parse instance;
	Create test instance;
	Get instance reader;
	Mutate instance

3.24. Add a class for lifecycle policy tests. It allows to:

	Do parse instance;
	Get named writeable registry;
	X content registry;
	Create test instance;
	Handle random timeseries lifecycle policy with all phases;
	Handle random timeseries lifecycle policy;
	Handle random test lifecycle policy;
	Mutate instance;
	Get instance reader;
	Handle test first and last steps;
	Convert test;
	Handle test is action safe;
	Handle test validate policy name

3.25. Add a class for lifecycle settings

3.26. Add an interface declaration  for lifecycle type. It allows to:

	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name;
	Validate phases collection

3.27. Add a class for mock action. It allows to:

	Parse X content parser;
	Instantiate mock action;
	Instantiate mock action  with steps list;
	Instantiate mock action  with stream input;
	Convert mock action to X content;
	Get writeable name;
	Get steps;
	Check if mock action is safe action;
	Convert mock action to steps;
	Convert mock action to step keys;
	Write  to stream output;
	Hash code;
	Check if mock action equals

3.28. Add a class for mock action tests. It allows to:

	Create test instance;
	Do parse instance;
	Get instance reader;
	Mutate instance;
	Handle random step key;
	Convert test

3.29. Add a class for mock step. It allows to:

	Instantiate mock step  with step key, next step step key and next step step key;
	Instantiate mock step  with other step;
	Instantiate mock step  with stream input;
	Read optional next step key;
	Write  to stream output

3.30. Add a class for phase. It allows to:

	Parse X content parser;
	Instantiate phase  with minimum age time value, actions map and actions map;
	Instantiate phase  with stream input;
	Write  to stream output;
	Get minimum age;
	Get name;
	Get actions;
	Convert phase to X content;
	Hash code;
	Check if phase equals;
	Convert phase to string

3.31. Add a class for phase tests. It allows to:

	Handle setup;
	Create test instance;
	Handle random test phase;
	Do parse instance;
	Get instance reader;
	Get named writeable registry;
	X content registry;
	Mutate instance;
	Handle test default after

3.32. Add a class for read only action. It allows to:

	Parse X content parser;
	Instantiate read only action;
	Instantiate read only action  with stream input;
	Get writeable name;
	Convert read only action to X content;
	Write  to stream output;
	Check if read only action is safe action;
	Convert read only action to steps;
	Convert read only action to step keys;
	Hash code;
	Check if read only action equals;
	Convert read only action to string

3.33. Add a class for read only action tests. It allows to:

	Do parse instance;
	Create test instance;
	Get instance reader;
	Convert test

3.34. Add a class for rollover action. It allows to:

	Parse X content parser;
	Instantiate rollover action  with max size value, max age time value and max age time value;
	Instantiate rollover action  with stream input;
	Write  to stream output;
	Get writeable name;
	Get max size;
	Get max age;
	Get rollover action;
	Convert rollover action to X content;
	Check if rollover action is safe action;
	Convert rollover action to steps;
	Convert rollover action to step keys;
	Hash code;
	Check if rollover action equals;
	Convert rollover action to string

3.35. Add a class for rollover action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Get instance reader;
	Mutate instance;
	Handle test no conditions;
	Convert test

3.36. Add a class for rollover step. It allows to:

	Instantiate rollover step  with step key, next step key, client and client;
	Perform action;
	Hash code;
	Check if rollover step equals

3.37. Add a class for rollover step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Assert rollover index request;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action with indexing complete;
	Handle test perform action failure;
	Handle test perform action invalid null or empty alias;
	Convert test perform action alias does not point;

3.38. Add a class for segment count step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

3.39. Add a class for segment count step tests. It allows to:

	Create random instance;
	Make meta;
	Mutate instance;
	Copy instance;
	Handle test is condition met;
	Process  on response;
	Process  on failure;
	Handle test is condition fails;
	Handle test throws exception;

3.40. Add a class for set single node allocate step. It allows to:

	Instantiate set single node allocate step  with step key, next step key, client and client;
	Perform action

3.41. Add a class for set single node allocate step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Assert settings request contains value  from update settings request;
	Handle test perform action no attrs;
	Handle test perform action attrs all nodes valid;
	Handle test perform action attrs some nodes valid;
	Handle test perform action attrs no nodes valid;
	Handle test perform action attrs request fails;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action attrs no shard;
	Assert node selected;
	Assert no valid node;

3.42. Add a class for shrink action. It allows to:

	Parse X content parser;
	Instantiate shrink action;
	Instantiate shrink action  with stream input;
	Get number  of shards;
	Write  to stream output;
	Get writeable name;
	Convert shrink action to X content;
	Check if shrink action is safe action;
	Convert shrink action to steps;
	Convert shrink action to step keys;
	Check if shrink action equals;
	Hash code;
	Convert shrink action to string

3.43. Add a class for shrink action tests. It allows to:

	Do parse instance;
	Create test instance;
	Handle random instance;
	Mutate instance;
	Get instance reader;
	Handle test non positive shard number;
	Handle test perform action with skip;
	Handle test perform action without skip;
	Convert test;
	Check if shrink action tests is safe action

3.44. Add a class for shrink set alias step. It allows to:

	Instantiate shrink set alias step  with step key, next step key, client and client;
	Get shrunk index prefix;
	Perform index meta data during no snapshot;
	Handle index survives;
	Hash code;
	Check if shrink set alias step equals

3.45. Add a class for shrink set alias step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action failure;

3.46. Add a class for shrink step. It allows to:

	Instantiate shrink step  with step key, next step key, client and client;
	Get number  of shards;
	Get shrunk index prefix;
	Perform action;
	Hash code;
	Check if shrink step equals

3.47. Add a class for shrink step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action not complete;
	Handle test perform action failure;

3.48. Add a class for shrunk shards allocated step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

3.49. Add a class for shrunk shards allocated step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test condition met;
	Handle test condition not met because of active;
	Handle test condition not met because of shrunk index doesnt exist yet

3.50. Add a class for shrunken index check step info tests. It allows to:

	Create test instance;
	Do parse instance;
	Handle supports unknown fields;
	Handle test equals and hashcode;
	Copy instance;
	Mutate instance

3.51. Add a class for shrunken index check step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test condition met;
	Handle test condition not met because not same shrunken index;
	Handle test condition not met because source index exists;
	Handle test illegal state

3.52. Add a class for step key tests. It allows to:

	Create test instance;
	Get instance reader;
	Do parse instance;
	Mutate instance

3.53. Add a class for terminal policy step. It allows to:

	Instantiate terminal policy step  with step key, next step key and next step key

3.54. Add an object creator class for terminal policy step tests. It allows to:

	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test instance

3.55. Add a class for test lifecycle type. It allows to:

	Instantiate test lifecycle type;
	Write  to stream output;
	Get writeable name;
	Validate phases collection;
	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name

3.56. Add a class for timeseries lifecycle type. It allows to:

	Instantiate timeseries lifecycle type;
	Write  to stream output;
	Get writeable name;
	Get ordered phases;
	Get next phase name;
	Get previous phase name;
	Get ordered actions;
	Get next action name;
	Validate phases collection

3.57. Add a class for timeseries lifecycle type tests. It allows to:

	Handle test validate phases;
	Handle test validate hot phase;
	Handle test validate warm phase;
	Handle test validate cold phase;
	Handle test validate delete phase;
	Handle test get ordered phases;
	Handle test unfollow injections;
	Check if timeseries lifecycle type tests is unfollow injected;
	Handle test get ordered actions invalid phase;
	Handle test get ordered actions hot;
	Handle test get ordered actions warm;
	Handle test get ordered actions cold;
	Handle test get ordered actions delete;
	Handle test get next phase name;
	Handle test get previous phase name;
	Handle test get next action name;
	Assert next action name;
	Assert invalid action;
	Convert action names  to actions;
	Assert next phase name;
	Assert previous phase name;
	Check if timeseries lifecycle type tests is sorted;
	Get test action

3.58. Add a class for update rollover lifecycle date step. It allows to:

	Instantiate update rollover lifecycle date step  with step key, next step key, fallback time supplier and fallback time supplier;
	Perform action;
	Hash code;
	Check if update rollover lifecycle date step equals

3.59. Add a class for update rollover lifecycle date step tests. It allows to:

	Create random instance;
	Create random instance  with fallback time;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Handle test perform action before rollover happened;
	Handle test perform action with no rollover alias setting;
	Handle test perform action with indexing complete

3.60. Add a class for update settings step. It allows to:

	Instantiate update settings step  with step key, next step key, client, settings and settings;
	Perform action;
	Get settings;
	Hash code;
	Check if update settings step equals

3.61. Add a class for update settings step tests. It allows to:

	Handle setup;
	Create random instance;
	Mutate instance;
	Copy instance;
	Handle test perform action;
	Answer invocation on mock;
	Process  on response;
	Process  on failure;
	Handle test perform action failure;

4. Changes to package org.elasticsearch.xpack.core.indexlifecycle.action:  

4.1. Add an object creator class for delete lifecycle request tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

4.2. Add an object creator class for delete lifecycle response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

4.3. Add an object creator class for explain lifecycle action. It allows to:

	Instantiate explain lifecycle action;
	Handle new response

4.4. Add an object creator class for get lifecycle request tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

4.5. Add an object creator class for get lifecycle response tests. It allows to:

	Create test instance;
	Create blank instance;
	Get named writeable registry;
	Mutate instance

4.6. Add a class for move to step request tests. It allows to:

	Handle setup;
	Create test instance;
	Create blank instance;
	Do parse instance;
	Handle supports unknown fields;
	Mutate instance

4.7. Add an object creator class for move to step response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

4.8. Add a class for put lifecycle request tests. It allows to:

	Handle setup;
	Create test instance;
	Create blank instance;
	Do parse instance;
	Get named writeable registry;
	X content registry;
	Handle supports unknown fields;
	Mutate instance

4.9. Add an object creator class for put lifecycle response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

4.10. Add a class for retry request tests. It allows to:

	Create test instance;
	Mutate instance;
	Create blank instance

4.11. Add an object creator class for retry response tests. It allows to:

	Create test instance;
	Create blank instance;
	Mutate instance

5. Changes to package org.elasticsearch.xpack.core.ml.datafeed:  

5. Changes to package org.elasticsearch.xpack.core.ml.job.config:  

5. Changes to package org.elasticsearch.xpack.core.security.authz.privilege:  

5. Changes to package org.elasticsearch.xpack.ml:  

5. Changes to package org.elasticsearch.xpack.ml.job.config:  

5. Changes to package org.elasticsearch.xpack.ml.job.process.autodetect.writer:  

5. Changes to package org.elasticsearch.xpack.restart:  

5. Changes to package org.elasticsearch.xpack.security:  

5. Changes to package org.elasticsearch.xpack.test.rest:  

