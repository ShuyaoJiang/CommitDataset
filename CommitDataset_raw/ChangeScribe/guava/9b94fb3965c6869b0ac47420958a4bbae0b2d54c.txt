BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (alice_in_wonderland.txt, ascii.txt, i18n.txt, ... ). 
 This change set is mainly composed of:  

1. Changes to package com.google.common.base:  

1.1. Add a class for absent. It allows to:

	Process absent absent with type;
	Instantiate absent;
	Check if absent is present;
	Get absent;
	O default value;
	O second choice optional;
	O supplier;
	Null absent;
	Handle as set;
	Transform function;
	Check if absent equals;
	Hash code;
	Convert absent to string;
	Read resolve

1.2. Add a class for abstract iterator. It allows to:

	Instantiate abstract iterator;
	Compute next;
	Get end of data;
	Check if abstract iterator has next;
	Try abstract iterator to compute next;
	Handle next;
	Remove abstract iterator

1.3. Add a class for ascii. It allows to:

	Instantiate ascii;
	Convert ascii to lower case;
	Convert ascii to upper case;
	Check if ascii is lower case;
	Check if ascii is upper case;
	Truncate char sequence;
	Check if ascii equals ignore case;
	Get alpha index

1.4. Add a class for ascii benchmark. It allows to:

	Set ascii benchmark;
	Handle random alpha;
	Handle random non alpha;
	Convert ascii string;
	Convert ascii char sequence;
	String ascii benchmark to upper case;
	Check if ascii benchmark equals ignore case char sequence;
	Check if ascii benchmark equals ignore case string only;
	Check if ascii benchmark equals ignore case JDK;
	Check if ascii benchmark is upper case;
	Char sequence  to upper case

1.5. Add a class for ascii test. It allows to:

	Convert test;
	Handle test chars ignored;
	Handle test chars lower;
	Handle test chars upper;
	Handle test truncate;
	Handle test truncate illegal arguments;
	Handle test equals ignore case;
	Handle test equals ignore case unicode equivalence

1.6. Add a class for benchmark helpers. It allows to:

	Get sample matcher config;

1.7. Add a class for case format test. It allows to:

	Handle test identity;
	Handle test null arguments;
	Test lower hyphen  to lower hyphen;
	Test lower hyphen  to lower underscore;
	Test lower hyphen  to lower camel;
	Test lower hyphen  to upper camel;
	Test lower hyphen  to upper underscore;
	Test lower underscore  to lower hyphen;
	Test lower underscore  to lower underscore;
	Test lower underscore  to lower camel;
	Test lower underscore  to upper camel;
	Test lower underscore  to upper underscore;
	Test lower camel  to lower hyphen;
	Test lower camel  to lower underscore;
	Test lower camel  to lower camel;
	Test lower camel  to upper camel;
	Test lower camel  to upper underscore;
	Convert test upper camel;
	Convert test upper underscore;
	Convert test converter;
	Handle test converter null conversions;
	Handle test converter serialization

1.8. Add a class for char matcher test. It allows to:

	Handle test static null pointers;
	Handle matches;
	Test any and none logical ops;
	Handle test whitespace breaking whitespace subset;
	Handle test java iso control;
	Handle test set bits;
	Do test set bits;
	Handle test empty;
	Handle test null;
	Do test empty;
	Really test empty;
	Do test  null char matcher;
	Handle test no matches;
	Do test no matches;
	Test all matches;
	Do test all matches;
	Really test no matches;
	Really test all matches;
	Handle test general;
	Do test general;
	Do test one char match;
	Do test one char no match;
	Do test match  then no match;
	Do test no match  then match;
	Really test one char match;
	Really test one char no match;
	Really test match  then no match;
	Really test no match  then match;
	Assert equals same;
	Handle test collapse;
	Do test collapse;
	Do test collapse  with no change;
	Handle test collapse any;
	Handle test trim from;
	Do test trim  from;
	Handle test trim leading from;
	Do test trim leading  from;
	Handle test trim trailing from;
	Do test trim trailing  from;
	Handle test trim and collapse;
	Do test trim and collapse;
	Handle test replace from;
	Handle test precomputed optimizations;
	Handle bit set;
	Handle test small char matcher;
	Check exact matches;
	Handle random chars;
	Convert test;
	Assert char matcher to string works

1.9. Add a class for charsets. It allows to:

	Instantiate charsets

1.10. Add a class for charsets test. It allows to:

	Test us  ascii;
	Handle test iso 88591;
	Handle test utf 8;
	Handle test utf 16 be;
	Handle test utf 16 le;
	Handle test utf 16;
	Handle test why us ascii is dangerous

1.11. Add a class for common matcher. It allows to:

	Handle matches;
	Find common matcher;
	Replace common matcher;
	End common matcher;
	Start common matcher

1.12. Add a class for common pattern. It allows to:

	Matcher t char sequence;
	Get pattern;
	Get flags;
	Convert common pattern to string;
	Compile common pattern;
	Check if common pattern is pcre like

1.13. Add a class for defaults. It allows to:

	Instantiate defaults;
	Get default value

1.14. Add a class for defaults test. It allows to:

	Handle test get default value

1.15. Add a class for enums benchmark. It allows to:

	Set enums benchmark;
	Get enums benchmark if present

1.16. Add a class for enums test. It allows to:

	Handle test get if present;
	Handle test get if present case sensitive;
	Handle test get if present when no matching constant;
	Handle test get if present does not prevent class unloading;
	Do test class unloading;
	Handle test string converter convert;
	Handle test string converter convert error;
	Handle test string converter reverse;
	Handle test string converter null pointer tester;
	Handle test string converter null conversions;
	Convert test string converter;
	Handle test string converter serialization;
	Handle test null pointer exceptions;
	Handle test get field;
	Get class path urls;
	Parse java class path

1.17. Add a class for extra objects methods for web

1.18. Add a class for finalizable phantom reference. It allows to:

	Instantiate finalizable phantom reference  with referent, finalizable reference queue and finalizable reference queue

1.19. Add an interface declaration  for finalizable reference. It allows to:

	Finalize referent

1.20. Add a class for finalizable soft reference. It allows to:

	Instantiate finalizable soft reference  with referent, finalizable reference queue and finalizable reference queue

1.21. Add a class for finalizable weak reference. It allows to:

	Instantiate finalizable weak reference  with referent, finalizable reference queue and finalizable reference queue

1.22. Add an interface declaration  for function. It allows to:

	Apply input;
	Check if function equals

1.23. Add a class for functional equivalence. It allows to:

	Instantiate functional equivalence  with function, result equivalence and result equivalence;
	Do equivalent;
	Hash a;
	Check if functional equivalence equals;
	Hash code;
	Convert functional equivalence to string

1.24. Add a class for joiner benchmark. It allows to:

	Set joiner benchmark;
	Get joiner with string delimiter;
	Get joiner with character delimiter;
	Handle joiner inlined;
	String builder is empty;
	Boolean joiner benchmark if first;
	Assign delimiter;
	Always append  then back up

1.25. Add a class for lazy stack trace benchmark. It allows to:

	Get throwable;
	Handle time it;
	Do lazy stack trace benchmark before;
	Handle time find caller;

1.26. Add a class for objects. It allows to:

	Instantiate objects;
	Handle equal;
	Hash code

1.27. Add a class for objects benchmark. It allows to:

	Hash string 2;
	Hash string 3;
	Hash string 4;
	Hash string 5;
	Hash mixed 5

1.28. Add a class for objects test. It allows to:

	Handle test equal;
	Handle test hash code;
	Handle test null pointers

1.29. Add a class for optional. It allows to:

	Handle absent;
	O reference;
	Process optional optional from nullable;
	Instantiate optional;
	Check if optional is present;
	Get optional;
	O default value;
	O second choice optional;
	O supplier;
	Null optional;
	Handle as set;
	Transform function;
	Check if optional equals;
	Hash code;
	Convert optional to string;
	Handle present instances;
	Get iterator;
	Compute next

1.30. Add a class for optional test. It allows to:

	Handle test absent;
	Handle test of;
	Handle test of null;
	Handle test from nullable;
	Handle test from nullable null;
	Handle test is present no;
	Handle test is present yes;
	Handle test get absent;
	Handle test get present;
	Handle test or T present;
	Handle test or T absent;
	Handle test or supplier present;
	Handle test or supplier absent;
	Handle test or null supplier absent;
	Handle test or null supplier present;
	Handle test or optional present;
	Handle test or optional absent;
	Handle test or null present;
	Handle test or null absent;
	Handle test as set present;
	Handle test as set absent;
	Handle test as set present is immutable;
	Handle test as set absent is immutable;
	Handle test transform absent;
	Handle test transform present identity;
	Convert test transform present;
	Handle test transform present function returns null;
	Apply;
	Handle test transform absent function returns null;
	Handle test equals and hash code;
	Convert test;
	Handle test present instances all present;
	Handle test present instances all absent;
	Handle test present instances some present;
	Handle test present instances calling iterator twice;
	Handle test present instances wildcards;
	Get some optional int;
	Get some numbers;
	Handle test sample code error 1;
	Convert test sample code error;
	Handle test sample code fine 1;
	Convert test sample code fine;
	Handle test null pointers

1.31. Add a class for package sanity tests. It allows to:

	Instantiate package sanity tests

1.32. Add a class for pairwise equivalence. It allows to:

	Instantiate pairwise equivalence  with element equivalence;
	Do equivalent;
	Hash iterable;
	Check if pairwise equivalence equals;
	Hash code;
	Convert pairwise equivalence to string

1.33. Add an interface declaration  for pattern compiler. It allows to:

	Compile pattern compiler;
	Check if pattern compiler is pcre like

1.34. Add a class for preconditions. It allows to:

	Instantiate preconditions;
	Check argument;
	Check state;
	Check reference not null;
	Check obj not null;
	Check element index;
	Handle bad element index;
	Check position index;
	Handle bad position index;
	Check position indexes;
	Handle bad position indexes

1.35. Add an interface declaration  for predicate. It allows to:

	Apply input;
	Check if predicate equals

1.36. Add a class for predicates. It allows to:

	Instantiate predicates;
	Always true;
	Always false;
	Check if predicates is null;
	Not null;
	Not predicates;
	And components iterable;
	And components predicate;
	And first predicate;
	O components iterable;
	O components predicate;
	O first predicate;
	Handle equal to;
	Get instance of;
	Get subtype of;
	I target collection;
	Compose predicate;
	Check if predicates contains pattern;
	Check if predicates contains;
	Apply predicates;
	Convert predicates to string;
	Process predicates predicates with narrowed type

Add a local a class for not predicate. It allows to:

	Instantiate not predicate  with predicate;
	Apply T;
	Hash code;
	Check if not predicate equals;
	Convert not predicate to string

Add a local a class for and predicate. It allows to:

	Instantiate and predicate  with components list;
	Apply T;
	Hash code;
	Check if and predicate equals;
	Convert and predicate to string

1.37. Add a class for present. It allows to:

	Instantiate present  with reference;
	Check if present is present;
	Get present;
	O default value;
	O second choice optional;
	O supplier;
	Null present;
	Handle as set;
	Transform function;
	Check if present equals;
	Hash code;
	Convert present to string

1.38. Add a class for small char matcher. It allows to:

	Instantiate small char matcher;
	Smear small char matcher;
	Check filter;
	Choose table size;
	Process small char matcher small char matcher from;
	Handle matches;
	Set bits

1.39. Add a class for splitter benchmark. It allows to:

	Set splitter benchmark;
	Char splitter;
	String splitter

1.40. Add a class for splitter test. It allows to:

	Handle test split null string;
	Handle test character simple split;
	Convert test character simple split;
	Convert test;
	Handle test character simple split with no delimiter;
	Handle test character split with double delimiter;
	Handle test character split with double delimiter and space;
	Handle test character split with trailing delimiter;
	Handle test character split with leading delimiter;
	Handle test character split with multiple letters;
	Handle test character split with matcher delimiter;
	Handle test character split with double delimiter omit empty strings;
	Handle test character split empty token;
	Handle test character split empty token omit empty strings;
	Handle test character split on empty string;
	Handle test character split on empty string omit empty strings;
	Handle test character split on only delimiter;
	Handle test character split on only delimiters omit empty strings;
	Handle test character split with trim;
	Handle test string simple split;
	Handle test string simple split with no delimiter;
	Handle test string split with double delimiter;
	Handle test string split with double delimiter and space;
	Handle test string split with trailing delimiter;
	Handle test string split with leading delimiter;
	Handle test string split with multiple letters;
	Handle test string split with double delimiter omit empty strings;
	Handle test string split empty token;
	Handle test string split empty token omit empty strings;
	Handle test string split with long delimiter;
	Handle test string split with long leading delimiter;
	Handle test string split with long trailing delimiter;
	Handle test string split with delimiter substring in value;
	Handle test string split with empty string;
	Handle test string split on empty string;
	Handle test string split on empty string omit empty string;
	Handle test string split on only delimiter;
	Handle test string split on only delimiters omit empty strings;
	Handle test string split with trim;
	Handle test pattern simple split;
	Handle test pattern simple split with no delimiter;
	Handle test pattern split with double delimiter;
	Handle test pattern split with double delimiter and space;
	Handle test pattern split with trailing delimiter;
	Handle test pattern split with leading delimiter;
	Handle test pattern split with multiple letters;
	Handle literal dot pattern;
	Handle test pattern split with double delimiter omit empty strings;
	Handle test pattern split look behind;
	Handle test pattern split word boundary;
	Handle test pattern split word boundary single char input;
	Handle test pattern split word boundary single word input;
	Handle test pattern split empty token;
	Handle test pattern split empty token omit empty strings;
	Handle test pattern split on only delimiter;
	Handle test pattern split on only delimiters omit empty strings;
	Handle test pattern split matching is greedy;
	Handle test pattern split with long leading delimiter;
	Handle test pattern split with long trailing delimiter;
	Handle test pattern split invalid pattern;
	Handle test pattern split with trim;
	Handle test splitter iterable is unmodifiable char;
	Handle test splitter iterable is unmodifiable string;
	Handle test splitter iterable is unmodifiable pattern;
	Assert iterator is unmodifiable;
	Handle test splitter iterable is lazy char;
	Handle test splitter iterable is lazy string;
	Handle test splitter iterable is lazy pattern;
	Assert splitter iterable is lazy;
	Handle test fixed length simple split;
	Handle test fixed length split equal chunk length;
	Handle test fixed length split only one chunk;
	Handle test fixed length split smaller string;
	Handle test fixed length split empty string;
	Handle test fixed length split empty string with omit empty strings;
	Handle test fixed length split into chars;
	Handle test fixed length split zero chunk len;
	Handle test fixed length split negative chunk len;
	Handle test limit large;
	Handle test limit one;
	Handle test limit fixed length;
	Handle test limit 1 separator;
	Handle test limit separator;
	Handle test limit extra separators;
	Handle test limit extra separators omit empty;
	Handle test limit extra separators omit empty 3;
	Handle test limit extra separators trim;
	Handle test limit extra separators trim 3;
	Handle test limit extra separators trim 1;
	Handle test limit extra separators trim 1 no omit;
	Handle test limit extra separators trim 1 empty;
	Handle test limit extra separators trim 1 empty omit;
	Handle test invalid zero limit;
	Handle test null pointers;
	Handle test map splitter trimmed both;
	Handle test map splitter trimmed entries;
	Handle test map splitter trimmed key value;
	Handle test map splitter not trimmed;
	Handle test map splitter character separator;
	Handle test map splitter multi character separator;
	Handle test map splitter empty separator;
	Handle test map splitter malformed entry;
	Handle test map splitter ordered results;
	Handle test map splitter duplicate keys;
	Handle test map splitter varying trim levels

1.41. Add a class for standard system property test. It allows to:

	Handle test get key matches string;
	Handle test get value;
	Convert test;
	Handle test no null values

1.42. Add a class for stopwatch. It allows to:

	Create unstarted;
	Started stopwatch;
	Started ticker;
	Instantiate stopwatch;
	Instantiate stopwatch  with ticker;
	Check if stopwatch is running;
	Start stopwatch;
	Stop stopwatch;
	Reset stopwatch;
	Handle elapsed nanos;
	Get elapsed;
	Convert stopwatch to string;
	Choose unit;
	Abbreviate time unit

1.43. Add a class for stopwatch benchmark. It allows to:

	Get stopwatch;
	Get manual

1.44. Add a class for stopwatch test. It allows to:

	Handle test create started;
	Handle test create unstarted;
	Handle test initial state;
	Handle test start;
	Handle test start while running;
	Handle test stop;
	Handle test stop new;
	Handle test stop already stopped;
	Handle test reset new;
	Handle test reset while running;
	Handle test elapsed while running;
	Handle test elapsed not running;
	Handle test elapsed multiple segments;
	Handle test elapsed micros;
	Handle test elapsed millis;
	Convert test

1.45. Add a class for string converter. It allows to:

	Instantiate string converter  with source format, target format and target format;
	Do string converter forward;
	Do string converter backward;
	Check if string converter equals;
	Hash code;
	Convert string converter to string;
	Normalize word;
	Normalize first word;
	Handle first char only to upper

1.46. Add a class for strings. It allows to:

	Instantiate strings;
	Handle null to empty;
	Handle empty to null;
	Check if strings is null or empty;
	Get pad start;
	Get pad end;
	Get repeat;
	Handle common prefix;
	Handle common suffix;
	Handle valid surrogate pair at;
	Handle lenient format;
	Handle lenient to string

1.47. Add a class for strings repeat benchmark. It allows to:

	Set strings repeat benchmark;
	Handle old repeat;
	Handle mike repeat;
	Martin repeat;

1.48. Add an interface declaration  for supplier. It allows to:

	Get supplier

1.49. Add a class for throwables. It allows to:

	Instantiate throwables;
	Throw  if instance of throwable;
	Propagate  if instance of throwable;
	Throw throwable if unchecked;
	Propagate throwable if possible;
	Propagate throwable;
	Get root cause;
	Get causal chain;
	Get cause  as throwable;
	Get stack trace  as string;
	Handle lazy stack trace;
	Handle lazy stack trace is lazy;
	Get jla stack trace;
	Get;
	Get size;
	Invoke accessible non throwing method;
	Get JLA;
	Get get method;
	Get size method;
	Get jla method

1.50. Add a class for ticker. It allows to:

	Instantiate ticker;
	Read ticker;
	Get system ticker;
	Read

1.51. Add a class for to string helper benchmark. It allows to:

	Add entries;
	Convert to string helper benchmark to string

1.52. Add a class for utf 8. It allows to:

	Get encoded length;
	Get encoded length general;
	Check if utf 8 is well formed;
	Check if utf 8 is well formed slow path;
	Handle unpaired surrogate msg;
	Instantiate utf 8

1.53. Add a class for utf 8 test. It allows to:

	Handle test encoded length valid strings;
	Convert test encoded length valid strings;
	Handle test encoded length invalid strings;
	Handle test encoded length fails;
	Handle test is well formed 1 byte;
	Convert test is well formed;
	Handle test is well formed 3 bytes;
	Handle test is well formed 4 bytes samples;
	Test some sequences;
	Handle test shards have expected round trippables;
	Handle new string;
	Convert utf 8 test to byte array;
	Assert utf 8 test well formed;
	Assert utf 8 test not well formed;
	Generate four byte shards expected runnables;
	Handle test bytes;

1.54. Add a class for verify. It allows to:

	Verify verify;
	Verify reference not null;
	Instantiate verify

1.55. Add a class for verify exception. It allows to:

	Instantiate verify exception;
	Instantiate verify exception  with cause throwable;

1.56. Add a class for verify test. It allows to:

	Handle test verify simple success;
	Handle test verify simple failure;
	Handle test verify simple message success;
	Handle test verify simple message failure;
	Handle test verify complex message success;
	Handle test verify complex message failure;
	Handle test verify not null simple success;
	Handle test verify not null simple failure;
	Handle test verify not null complex message success;
	Handle test verify not null simple message failure;
	Convert to string;
	Check message

1.57. Add a class for whitespace matcher benchmark. It allows to:

	Handle matches;
	Set whitespace matcher benchmark;
	Count whitespace matcher benchmark in;
	Get collapse from;
	All matching chars;
	Handle new test string

2. Changes to package com.google.common.base.internal:  

2.1. Add a class for finalizer. It allows to:

	Start finalizer;
	Instantiate finalizer  with finalizable reference class, reference queue, frq reference and frq reference;
	Run finalizer;
	Clean reference;
	Get finalize referent method;
	Get inheritable thread locals field;
	Get big thread constructor

3. Changes to package com.google.common.cache:  

3.1. Add a class for abstract cache test. It allows to:

	Handle test get if present;
	Get  if present;
	Handle test get all present empty;
	Handle test get all present cached;
	Handle test invalidate all;
	Invalidate;
	Handle test empty simple stats;
	Handle test single simple stats;
	Handle test simple stats increment by

3.2. Add a class for abstract loading cache. It allows to:

	Instantiate abstract loading cache;
	Get unchecked;
	Get keys iterable;
	Apply key;
	Refresh key

3.3. Add a class for abstract loading cache test. It allows to:

	Handle test get unchecked checked;
	Get;
	Get  if present;
	Handle test get unchecked unchecked;
	Handle test get unchecked error;
	Handle test get unchecked other throwable;

3.4. Add an interface declaration  for cache. It allows to:

	Get cache if present;
	Get key;
	Get all present;
	Put key;
	Put map;
	Invalidate cache;
	Invalidate keys iterable;
	Get size;
	Get stats;
	Process cache cache as map;
	Clean cache

3.5. Add a class for cache builder. It allows to:

	Process cache builder cache builder on removal;
	Weigh cache builder;
	Instantiate cache builder;
	Handle new builder;
	Process cache builder cache builder from;
	Handle lenient parsing;
	Handle key equivalence;
	Get key equivalence;
	Get value equivalence;
	Handle initial capacity;
	Get initial capacity;
	Get concurrency level;
	Handle maximum size;
	Handle maximum weight;
	Get weigher;
	Get maximum weight;
	Handle weak keys;
	Set key strength;
	Get key strength;
	Handle weak values;
	Handle soft values;
	Get set value strength;
	Get value strength;
	Expire time unit after write;
	Get expire  after write nanos;
	Expire time unit after access;
	Get expire  after access nanos;
	Refresh time unit after write;
	Get refresh nanos;
	Process cache builder cache builder ticker;
	Get cache builder ticker;
	Get removal listener;
	Record stats;
	Check if cache builder is recording stats;
	Get stats  counter supplier;
	Build cache loader;
	Build cache builder;
	Check cache builder non loading cache;
	Check weight  with weigher;
	Convert cache builder to string

3.6. Add a class for cache builder gwt test. It allows to:

	Set cache builder gwt test;
	Handle test loader;
	Call;
	Handle test size constraint;
	Handle test loading cache;
	Get load;
	Handle test expire after access;
	Handle test expire after write;
	Handle test expire after write and access;
	Handle test map methods;
	Handle test removal listener;
	Process  on removal;
	Handle test put all;
	Handle test invalidate;
	Handle test invalidate all;
	Handle test as map contains value;
	Handle test as map contains key;
	Handle test as map values contains;
	Handle test as map key set;
	Handle test as map key set contains;
	Handle test as map entry set;
	Handle test as map values iterator remove

3.7. Add a class for cache builder spec test. It allows to:

	Handle test parse empty;
	Handle test parse initial capacity;
	Handle test parse initial capacity repeated;
	Handle test parse maximum size;
	Handle test parse maximum size repeated;
	Handle test parse maximum weight;
	Handle test parse maximum weight repeated;
	Handle test parse maximum size and maximum weight;
	Handle test parse concurrency level;
	Handle test parse concurrency level repeated;
	Handle test parse weak keys;
	Handle test parse weak keys can not have value;
	Handle test parse repeated key strength;
	Handle test parse soft values;
	Handle test parse soft values can not have value;
	Handle test parse weak values;
	Handle test parse weak values can not have value;
	Handle test parse repeated value strength;
	Handle test parse write expiration days;
	Handle test parse write expiration hours;
	Handle test parse write expiration minutes;
	Handle test parse write expiration seconds;
	Handle test parse write expiration repeated;
	Handle test parse access expiration days;
	Handle test parse access expiration hours;
	Handle test parse access expiration minutes;
	Handle test parse access expiration seconds;
	Handle test parse access expiration repeated;
	Handle test parse record stats;
	Handle test parse record stats value specified;
	Handle test parse record stats repeated;
	Handle test parse access expiration and write expiration;
	Handle test parse multiple keys;
	Handle test parse whitespace allowed;
	Handle test parse unknown key;
	Handle test parse extra comma is invalid;
	Handle test equals and hash code;
	Handle test maximum weight with weigher;
	Handle test maximum weight without weigher;
	Handle test maximum size with weigher;
	Handle test maximum size without weigher;
	Handle test disable caching;
	Handle test cache builder from string;
	Assert cache builder equivalence

3.8. Add a class for cache eviction test. It allows to:

	Handle test eviction set max segment size;
	Handle test eviction set max segment weight;
	Handle test eviction max size one segment;
	Handle test eviction max weight one segment;
	Handle test eviction max size;
	Handle test eviction max weight;
	Handle test eviction max weight zero;
	Weigh k integer;
	Handle test eviction max weight entry too big;
	Handle test eviction overflow;
	Handle test update recency on get;
	Accept reference entry;
	Handle test update recency on invalidate;
	Handle test eviction lru;
	Handle test eviction weighted lru;
	Handle test eviction overweight;
	Handle test eviction invalidate all;
	Get loading cache;
	Object cache eviction test with hash;
	Hash code

3.9. Add a class for cache loading test. It allows to:

	Set cache loading test;
	Tear cache loading test;
	Pop logged throwable;
	Check nothing logged;
	Check logged cause;
	Check logged invalid load;
	Handle test load;
	Handle test reload;
	Get load;
	Reload;
	Handle test refresh;
	Handle test refresh get if present;
	Handle test bulk load default;
	Handle test bulk load load all;
	Handle test bulk load extra;
	Load keys iterable;
	Handle test bulk load clobber;
	Handle test bulk load clobber null value;
	Handle test bulk load clobber null key;
	Handle test bulk load partial;
	Handle test load null;
	Handle test reload null;
	Handle test reload null future;
	Handle test refresh null;
	Handle test bulk load null;
	Handle test bulk load null map;
	Handle test load error;
	Call;
	Handle test reload error;
	Handle test reload future error;
	Handle test refresh error;
	Handle test bulk load error;
	Handle test load checked exception;
	Handle test load interrupted exception;
	Handle test reload checked exception;
	Handle test reload future checked exception;
	Handle test refresh checked exception;
	Handle test bulk load checked exception;
	Handle test bulk load interrupted exception;
	Handle test load unchecked exception;
	Handle test reload unchecked exception;
	Handle test reload future unchecked exception;
	Handle test refresh unchecked exception;
	Handle test bulk load unchecked exception;
	Handle test reload after failure;
	Handle test reload after value reclamation;
	Handle test reload after simulated value reclamation;
	Handle test reload after simulated key reclamation;
	Handle test loading exception with cause;
	Handle test bulk loading exception with cause;
	Handle test concurrent loading;
	Handle test concurrent expiration loading;
	Handle test concurrent loading default;
	Handle test concurrent loading null;
	Handle test concurrent loading unchecked exception;
	Handle test concurrent loading checked exception;
	Do concurrent get;
	Run;
	Handle test as map during loading;
	Handle test invalidate during loading;
	Handle test invalidate and reload during loading;
	Handle test expand during loading;
	Ignore test expand  during refresh;
	Throwing exception;

3.10. Add a class for cache manual test. It allows to:

	Handle test get if present;
	Handle test get all present

3.11. Add a class for cache refresh test. It allows to:

	Handle test auto refresh

3.12. Add a class for cache stats. It allows to:

	Instantiate cache stats;
	Get request count;
	Hit count;
	Hit rate;
	Miss count;
	Miss rate;
	Load count;
	Load success count;
	Load exception count;
	Load exception rate;
	Handle total load time;
	Handle average load penalty;
	Get eviction count;
	Minus other cache stats;
	Plus other cache stats;
	Hash code;
	Check if cache stats equals;
	Convert cache stats to string

3.13. Add a class for cache stats test. It allows to:

	Handle test empty;
	Handle test single;
	Handle test minus;
	Handle test plus

3.14. Add a class for chain benchmark. It allows to:

	Set chain benchmark;
	Get time

3.15. Add a class for empty caches test. It allows to:

	Handle test empty;
	Handle test invalidate empty;
	Handle test invalidate all empty;
	Handle test equals null;
	Handle test equals and hash code different;
	Handle test get null;
	Handle test get unchecked null;
	Convert test key set null;
	Handle test key set add not supported;
	Handle test key set clear;
	Handle test key set empty remove;
	Handle test key set remove;
	Convert test values null;
	Handle test values add not supported;
	Handle test values clear;
	Handle test values empty remove;
	Handle test values remove;
	Convert test entry set null;
	Handle test entry set add not supported;
	Handle test entry set clear;
	Handle test entry set empty remove;
	Handle test entry set remove;
	Get caches;
	Apply cache builder;
	Get cache factory;
	Warm loading cache;
	Get entry of

3.16. Add an interface declaration  for loading cache. It allows to:

	Get key;
	Get unchecked;
	Get keys iterable;
	Apply key;
	Refresh key;
	Process loading cache loading cache as map

3.17. Add a class for loading cache single thread benchmark. It allows to:

	Set loading cache single thread benchmark;
	Get load;
	Get time;
	Handle next random key;
	Tear loading cache single thread benchmark

3.18. Add a class for local cache. It allows to:

	Instantiate local cache  with cache builder, cache loader and cache loader;
	Handle evicts by size;
	Handle custom weigher;
	Check if local cache expires;
	Check if local cache expires after write;
	Check if local cache expires after access;
	Handle refreshes;
	Handle uses access queue;
	Handle uses write queue;
	Handle records write;
	Handle records access;
	Handle records time;
	Handle uses write entries;
	Handle uses access entries;
	Handle uses key references;
	Handle uses value references;
	Get reference value;
	Get default equivalence;
	Handle new entry;
	Copy entry;
	Get factory;
	Copy access entry;
	Copy write entry

Add a local an interface declaration  for value reference. It allows to:

	Get value reference;
	Wait value reference for value;
	Get weight;
	Get entry;
	Copy  for reference queue;
	Notify new value;
	Check if value reference is loading;
	Check if value reference is active;
	Handle unset;
	Get set value reference;
	Get next;
	Get hash;
	Get key;
	Get access time;
	Set access time;
	Get next  in access queue;
	Set next  in access queue;
	Get previous  in access queue;
	Set previous  in access queue;
	Get write time;
	Set write time;
	Get next  in write queue;
	Set next  in write queue;
	Get previous  in write queue;
	Set previous  in write queue

3.19. Add a class for local loading cache test. It allows to:

	Make cache;
	Create cache builder;
	Handle test computing function;
	Get load;
	Handle test null parameters;
	Handle test stats;
	Handle test stats noops;
	Handle test no stats;
	Handle test record stats;
	Handle test as map;
	Handle test as map recency;
	Handle test recursive computation;
	Run;
	Handle uncaught exception

3.20. Add an interface declaration  for long addable. It allows to:

	Handle increment;
	Add long addable;
	Get sum

3.21. Add a class for long adder. It allows to:

	F long adder;
	Instantiate long adder;
	Add long adder;
	Handle increment;
	Handle decrement;
	Get sum;
	Reset long adder;
	Sum long adder then reset;
	Convert long adder to string;
	Handle long value;
	Get int value;
	Float value;
	Handle double value;
	Write object;
	Read object

3.22. Add a class for long adder test. It allows to:

	Handle test nulls

3.23. Add a class for map maker comparison benchmark. It allows to:

	Set map maker comparison benchmark;
	Handle concurrent hash map;
	Handle cache builder stats;
	Handle cache builder

3.24. Add a class for null cache test. It allows to:

	Set null cache test;
	Handle test get;
	Handle test get expire after write;
	Handle test get expire after access;
	Handle test get compute null;
	Handle test get runtime exception

3.25. Add a class for package sanity tests. It allows to:

	Instantiate package sanity tests;
	Get load

3.26. Add a class for populated caches test. It allows to:

	Handle test size populated;
	Handle test contains key found;
	Handle test put populated;
	Handle test put if absent populated;
	Handle test put all populated;
	Handle test replace populated;
	Handle test remove by key;
	Handle test remove by key and value;
	Handle test key set populated;
	Handle test values populated;
	Handle test entry set populated;
	Handle test write through entry;
	Get caches;
	Apply cache builder;
	Get cache factory;
	Warm loading cache;
	Get entry of;
	Assert map size;
	Assert collection size

3.27. Add an interface declaration  for removal listener. It allows to:

	Process removal listener removal listener on removal

3.28. Add a class for removal listeners. It allows to:

	Instantiate removal listeners;
	Handle asynchronous;
	Process  on removal;
	Run

3.29. Add a class for removal notification. It allows to:

	Create key;
	Instantiate removal notification  with key, value, removal cause and removal cause;
	Get cause;
	Get was evicted

3.30. Add a class for removal notification test. It allows to:

	Handle test equals

3.31. Add a class for segment benchmark. It allows to:

	Set segment benchmark;
	Get time

3.32. Add an interface declaration  for weigher. It allows to:

	Weigh key

4. Changes to package com.google.common.collect:  

4.1. Add a class for abstract bi map test. It allows to:

	Handle test identity key set iterator remove;
	Handle test identity entry set iterator remove

4.2. Add a class for abstract immutable table test. It allows to:

	Get test instances;
	Handle test clear;
	Handle test put;
	Handle test put all;
	Handle test remove;
	Convert test consistent;
	Handle test consistent hash code

4.3. Add a class for abstract indexed list iterator. It allows to:

	Get abstract indexed list iterator;
	Instantiate abstract indexed list iterator;
	Check if abstract indexed list iterator has next;
	Handle next;
	Handle next index;
	Check if abstract indexed list iterator has previous;
	Handle previous;
	Handle previous index

4.4. Add a class for abstract iterator. It allows to:

	Instantiate abstract iterator;
	Compute next;
	Get end of data;
	Check if abstract iterator has next;
	Try abstract iterator to compute next;
	Handle next;
	Get peek

4.5. Add a class for abstract list multimap. It allows to:

	Instantiate abstract list multimap  with map;
	Create collection;
	Create unmodifiable empty collection;
	Handle unmodifiable collection subclass;
	Wrap collection;
	Get key;
	Remove abstract list multimap;
	Replace values;
	Put key;
	Process abstract list multimap abstract list multimap as map;
	Check if abstract list multimap equals

4.6. Add a class for abstract map entry. It allows to:

	Get key;
	Get value;
	Get set value;
	Check if abstract map entry equals;
	Hash code;
	Convert abstract map entry to string

4.7. Add a class for abstract map entry test. It allows to:

	Get entry;
	Get key;
	Get value;
	Control key;
	Convert test;
	Handle test equals;
	Handle test equals null;
	Handle test hash code;
	Handle test hash code null

4.8. Add a class for abstract multimap as map implements map test. It allows to:

	Instantiate abstract multimap as map implements map test;
	Populate multimap;
	Get key  not in populated map;
	Get value  not in populated map;
	Handle test remove

4.9. Add a class for abstract range set. It allows to:

	Instantiate abstract range set;
	Check if abstract range set contains;
	Get range containing;
	Check if abstract range set is empty;
	Add range;
	Remove range;
	Handle clear;
	Check if abstract range set encloses all;
	Add other range set;
	Add ranges iterable;
	Remove other range set;
	Remove ranges iterable;
	Handle intersects;
	Check if abstract range set encloses;
	Check if abstract range set equals;
	Hash code;
	Convert abstract range set to string

4.10. Add a class for abstract range set test. It allows to:

	Handle test invariants;
	Handle test invariants internal

4.11. Add a class for abstract sequential iterator. It allows to:

	Instantiate abstract sequential iterator  with first or null;
	Compute next;
	Check if abstract sequential iterator has next;
	Handle next

4.12. Add a class for abstract set multimap. It allows to:

	Instantiate abstract set multimap  with map;
	Create collection;
	Create unmodifiable empty collection;
	Handle unmodifiable collection subclass;
	Wrap collection;
	Get key;
	Get entries;
	Remove abstract set multimap;
	Replace values;
	Process abstract set multimap abstract set multimap as map;
	Put key;
	Check if abstract set multimap equals

4.13. Add a class for abstract sorted key sorted set multimap. It allows to:

	Instantiate abstract sorted key sorted set multimap  with sorted map;
	Process abstract sorted key sorted set multimap abstract sorted key sorted set multimap as map;
	Backing map;
	Handle key set;
	Create key set

4.14. Add a class for abstract sorted multiset. It allows to:

	Instantiate abstract sorted multiset;
	Instantiate abstract sorted multiset  with comparator;
	Get element set;
	Create element set;
	Get comparator;
	First entry;
	Handle last entry;
	Poll first entry;
	Poll last entry;
	Get sub multiset;
	Descending entry iterator;
	Descending iterator;
	Descending multiset;
	Create descending multiset

4.15. Add a class for abstract sorted set multimap. It allows to:

	Instantiate abstract sorted set multimap  with map;
	Create collection;
	Create unmodifiable empty collection;
	Handle unmodifiable collection subclass;
	Wrap collection;
	Get key;
	Remove abstract sorted set multimap;
	Replace values;
	Process abstract sorted set multimap abstract sorted set multimap as map;
	Get values

4.16. Add a class for abstract table read test. It allows to:

	Create abstract table read test;
	Assert size;
	Set abstract table read test;
	Handle test contains;
	Handle test contains row;
	Handle test contains column;
	Handle test contains value;
	Handle test get;
	Handle test is empty;
	Handle test size;
	Handle test equals;
	Handle test hash code;
	Convert test;
	Handle test row;
	Handle test row null;
	Handle test column;
	Handle test column null;
	Handle test column set partial overlap;
	Handle test null pointer instance

4.17. Add a class for abstract table test. It allows to:

	Populate table;
	Handle supports remove;
	Handle supports null values;
	Handle test clear;
	Handle test put;
	Handle test put null;
	Handle test put null replace;
	Handle test put all table;
	Handle test remove;
	Handle test row clear and put

4.18. Add a class for all equal ordering. It allows to:

	Compare all equal ordering;
	Get sorted copy;
	Handle immutable sorted copy;
	Reverse all equal ordering;
	Read resolve;
	Convert all equal ordering to string

4.19. Add a class for array list multimap. It allows to:

	Create array list multimap;
	Create multimap;
	Instantiate array list multimap;
	Instantiate array list multimap  with multimap;
	Create collection;
	Trim array list multimap to size;
	Write object;
	Read object

4.20. Add a class for array list multimap gwt serialization dependencies. It allows to:

	Instantiate array list multimap gwt serialization dependencies  with map

4.21. Add a class for array list multimap test. It allows to:

	Get suite;
	Create entries entry;
	Create array list multimap test;
	Handle test get random access;
	Handle test remove all random access;
	Handle test replace values random access;
	Handle test sublist concurrent modification exception;
	Handle test create from multimap;
	Handle test create;
	Handle test create from sizes;
	Handle test create from illegal sizes;
	Handle test create from hash multimap;
	Handle test create from array list multimap;
	Convert test trim

4.22. Add a class for array table test. It allows to:

	Create array table test;
	Assert size;
	Handle supports remove;
	Handle supports null values;
	Handle test contains;
	Handle test contains row;
	Handle test contains column;
	Handle test contains value;
	Handle test is empty;
	Handle test equals;
	Handle test hash code;
	Handle test row;
	Handle test column;
	Convert test;
	Handle test create duplicate rows;
	Handle test create duplicate columns;
	Handle test create empty rows;
	Handle test create empty columns;
	Handle test create empty rows X columns;
	Convert test empty;
	Handle test create copy array table;
	Handle test create copy hash based table;
	Handle test create copy empty table;
	Handle test create copy empty array table;
	Handle test serialization;
	Handle test null pointer static;
	Handle test to string ordered;
	Handle test cell set to string ordered;
	Handle test row key set to string ordered;
	Handle test column key set to string ordered;
	Handle test values to string ordered;
	Handle test row key list;
	Handle test column key list;
	Handle test get missing keys;
	Handle test at;
	Handle test set;
	Handle test erase all;
	Handle test put illegal;
	Handle test erase;
	Handle test cell reflects changes;
	Handle test row missing;
	Handle test column missing;
	Handle test row put illegal;
	Handle test column put illegal;
	Handle test nulls;
	Handle test serializable

4.23. Add an interface declaration  for bi map. It allows to:

	Put key;
	Force put;
	Put map;
	Get values;
	Handle inverse

4.24. Add a class for by function ordering. It allows to:

	Instantiate by function ordering  with function, ordering and ordering;
	Compare left;
	Check if by function ordering equals;
	Hash code;
	Convert by function ordering to string

4.25. Add a class for cartesian list. It allows to:

	Create lists;
	Instantiate cartesian list  with axes immutable list;
	Get axis index  for product index;
	Get index of;
	Get cartesian list;
	Get size;
	Get;
	Check if  is partial view;
	Check if cartesian list contains

4.26. Add an interface declaration  for class to instance map. It allows to:

	Get instance;
	Put instance

4.27. Add a class for collect preconditions. It allows to:

	Check entry  not null;
	Check nonnegative;
	Check positive;
	Remove collect preconditions

4.28. Add a class for collections 2 test. It allows to:

	Get suite;
	Apply;
	Get tests for filter;
	Create;
	Get tests for filter all;
	Get tests for filter linked list;
	Get tests for filter no nulls;
	Handle tests for filter filtered;
	Get tests for transform;
	Handle test null pointer exceptions;
	Handle test ordered permutation set empty;
	Handle test ordered permutation set one element;
	Handle test ordered permutation set three elements;
	Handle test ordered permutation set repeated elements;
	Handle test ordered permutation set repeated elements size;
	Handle test ordered permutation set size overflow;
	Handle test ordered permutation set contains;
	Handle test permutation set empty;
	Handle test permutation set one element;
	Handle test permutation set two elements;
	Handle test permutation set three elements;
	Handle test permutation set three elements out of order;
	Handle test permutation set three repeated elements;
	Handle test permutation set four elements;
	Handle test permutation set size;
	Handle test permutation set size overflow;
	Handle test permutation set contains;
	Assert next permutation;
	Assert no more permutations;
	Assert permutations count;
	Convert test

4.29. Add a class for comparator delegation overhead benchmark. It allows to:

	Set comparator delegation overhead benchmark;
	Get arrays sort no comparator;
	Get arrays sort ordering natural;
	Compare o 1 integer;
	Get arrays sort ordering from natural

4.30. Add a class for comparator ordering. It allows to:

	Instantiate comparator ordering  with comparator;
	Compare a;
	Check if comparator ordering equals;
	Hash code;
	Convert comparator ordering to string

4.31. Add a class for comparators. It allows to:

	Instantiate comparators;
	Handle lexicographical;
	Check if comparators is in order;
	Check if comparators is in strict order

4.32. Add a class for comparators test. It allows to:

	Handle test lexicographical;
	Handle test is in order;
	Handle test is in strict order

4.33. Add a class for composite. It allows to:

	Instantiate composite  with value;
	Compare  to that composite;
	Get value function;
	Apply from composite;
	Handle test null pointer exceptions;
	Get shuffled copy

4.34. Add a class for compound ordering. It allows to:

	Instantiate compound ordering  with primary comparator, secondary comparator and secondary comparator;
	Instantiate compound ordering  with comparators iterable;
	Compare left;
	Check if compound ordering equals;
	Hash code;
	Convert compound ordering to string

4.35. Add a class for computation exception. It allows to:

	Instantiate computation exception  with cause throwable

4.36. Add a class for concurrent hash multiset benchmark. It allows to:

	Set concurrent hash multiset benchmark;
	Add concurrent hash multiset benchmark;
	Call;
	Remove concurrent hash multiset benchmark;
	Do multithreaded loop;
	Run add single thread;
	Run add remove single thread;
	Handle cONCURRENT HASH MULTISET;
	Get concurrent hash multiset benchmark;
	Handle bOXED ATOMIC REPLACE;
	Handle sYNCHRONIZED MULTISET;

4.37. Add a class for concurrent hash multiset test. It allows to:

	Get suite;
	Handle concurrent hash multiset generator;
	Create;
	Handle concurrent skip list multiset generator;
	Get order;
	Set concurrent hash multiset test;
	Handle test count element present;
	Handle test count element absent;
	Handle test add zero;
	Handle test add first few with success;
	Handle test add later few with success;
	Handle test add later few with overflow;
	Handle test add with failures;
	Handle test remove zero from some;
	Handle test remove zero from none;
	Handle test remove none present;
	Handle test remove some remaining;
	Handle test remove none remaining;
	Handle test remove exactly;
	Handle test iterator remove actual map;
	Handle test set count basic;
	Handle test set count as remove;
	Handle test set count 0 none present;
	Handle test create;
	Handle test create from iterable;
	Handle test identity key equality strong keys;
	Handle test identity key equality weak keys;
	Handle test identity key equality;
	Handle test logical key equality strong keys;
	Handle test logical key equality weak keys;
	Handle test logical key equality;
	Handle test serialization with map maker 1;
	Convert test serialization with map maker;
	Handle test serialization with map maker 3;
	Handle test serialization with map maker preserves identity key equivalence

4.38. Add a class for consuming queue iterator. It allows to:

	Instantiate consuming queue iterator  with elements;
	Instantiate consuming queue iterator  with queue;
	Compute next

4.39. Add a class for contiguous set. It allows to:

	Create range;
	Get closed;
	Handle closed open;
	Instantiate contiguous set  with discrete domain;
	Get head set;
	Handle sub set;
	Handle tail set;
	Get head set impl;
	Handle sub set impl;
	Handle tail set impl;
	Get intersection;
	Get range;
	Create descending set;
	Convert contiguous set to string;
	Get builder

4.40. Add a class for count. It allows to:

	Instantiate count;
	Get count;
	Add count;
	Set count;
	Hash code;
	Check if count equals;
	Convert count to string

4.41. Add a class for count test. It allows to:

	Handle test get;
	Handle test get and add;
	Handle test add and get;
	Handle test get and set;
	Handle test set

4.42. Add a class for descending immutable sorted multiset. It allows to:

	Instantiate descending immutable sorted multiset  with forward immutable sorted multiset;
	Get count;
	First entry;
	Handle last entry;
	Get size;
	Get element set;
	Get entry;
	Descending multiset;
	Head multiset;
	Get tail multiset;
	Check if descending immutable sorted multiset is partial view

4.43. Add a class for descending immutable sorted set. It allows to:

	Instantiate descending immutable sorted set  with forward immutable sorted set;
	Check if descending immutable sorted set contains;
	Get size;
	Get iterator;
	Get head set impl;
	Handle sub set impl;
	Handle tail set impl;
	Descending set;
	Descending iterator;
	Create descending set;
	Handle lower;
	Get floor;
	Get ceiling;
	Handle higher;
	Get index of;
	Check if descending immutable sorted set is partial view

4.44. Add a class for descending multiset. It allows to:

	Forward multiset;
	Get comparator;
	Get element set;
	Poll first entry;
	Poll last entry;
	Head multiset;
	Get sub multiset;
	Get tail multiset;
	Delegate descending multiset;
	Descending multiset;
	First entry;
	Handle last entry;
	Get entry iterator;
	Get entry set;
	Create entry set;
	Get iterator;
	Convert descending multiset to array;
	Convert descending multiset to string

4.45. Add a class for discrete domain test. It allows to:

	Handle test serialization;
	Handle test integers offset;
	Handle test integers offset exceptions;
	Handle test longs offset;
	Handle test longs offset exceptions;
	Handle test big integers offset;
	Handle test big integers offset exceptions

4.46. Add a class for empty immutable list multimap. It allows to:

	Instantiate empty immutable list multimap;
	Read resolve

4.47. Add a class for empty immutable set multimap. It allows to:

	Instantiate empty immutable set multimap;
	Read resolve

4.48. Add a class for empty immutable table test. It allows to:

	Get test instances;
	Handle test hash code;
	Handle test equals object;
	Handle test equals object null values;
	Convert test;
	Handle test size;
	Handle test get;
	Handle test is empty;
	Handle test cell set;
	Handle test column;
	Handle test column key set;
	Handle test column map;
	Handle test contains;
	Handle test contains column;
	Handle test contains row;
	Handle test contains value;
	Handle test row;
	Handle test row key set;
	Handle test row map;
	Handle test values

4.49. Add a class for enum bi map. It allows to:

	Create key type class;
	Create map;
	Instantiate enum bi map  with key type class, value type class and value type class;
	Infer key type;
	Infer value type;
	Handle key type;
	Get value type;
	Check key;
	Check value;
	Write object;
	Read object

4.50. Add a class for enum hash bi map. It allows to:

	Create key type class;
	Create map;
	Instantiate enum hash bi map  with key type class;
	Check key;
	Put key;
	Force put;
	Handle key type;
	Write object;
	Read object

4.51. Add a class for evicting queue. It allows to:

	Instantiate evicting queue;
	Create evicting queue;
	Remaining capacity;
	Delegate evicting queue;
	Offer E;
	Add E;
	Add collection;
	Check if evicting queue contains;
	Remove evicting queue

4.52. Add a class for evicting queue test. It allows to:

	Handle test create with negative size;
	Handle test create with zero size;
	Handle test remaining capacity max size 0;
	Handle test remaining capacity max size 1;
	Handle test remaining capacity max size 3;
	Handle test evicting after one;
	Handle test evicting after three;
	Handle test add all;
	Handle test add all large list;
	Get size;
	Get;
	Handle test null pointer exceptions;
	Handle test serialization

4.53. Add a class for expensive computation. It allows to:

	Apply from integer;
	Get expensive computation;

4.54. Add a class for explicit ordering. It allows to:

	Instantiate explicit ordering  with values in order list;
	Instantiate explicit ordering  with rank map;
	Compare left;
	Get rank;
	Check if explicit ordering equals;
	Hash code;
	Convert explicit ordering to string

4.55. Add a class for filtered entry set multimap. It allows to:

	Instantiate filtered entry set multimap  with unfiltered set multimap, predicate and predicate;
	Handle unfiltered;
	Get key;
	Remove filtered entry set multimap;
	Replace values;
	Create entries;
	Get entries

4.56. Add a class for filtered key list multimap. It allows to:

	Instantiate filtered key list multimap  with unfiltered list multimap, key predicate and key predicate;
	Handle unfiltered;
	Get key;
	Remove filtered key list multimap;
	Replace values

4.57. Add an interface declaration  for filtered multimap. It allows to:

	Handle unfiltered;
	Get entry predicate

4.58. Add a class for filtered multimap test. It allows to:

	Apply entry;
	Create filtered multimap test;
	Apply;
	Handle test filter keys;
	Apply value integer;
	Handle test filter values;
	Handle test filter filtered

4.59. Add a class for filtered multimap values. It allows to:

	Instantiate filtered multimap values  with filtered multimap;
	Get iterator;
	Check if filtered multimap values contains;
	Get size;
	Remove filtered multimap values;
	Remove collection;
	Retain collection;
	Handle clear

4.60. Add an interface declaration  for filtered set multimap. It allows to:

	Handle unfiltered

4.61. Add a class for for map multimap as map implements map test. It allows to:

	Instantiate for map multimap as map implements map test;
	Make empty map;
	Make populated map;
	Handle test entry set remove all null from empty;
	Handle test entry set retain all null from empty;
	Handle test key set remove all null from empty;
	Handle test key set retain all null from empty;
	Handle test values remove all null from empty;
	Handle test values retain all null from empty

4.62. Add a class for forwarding blocking deque. It allows to:

	Instantiate forwarding blocking deque;
	Delegate forwarding blocking deque;
	Remaining capacity;
	Put  first E;
	Put last;
	Offer  first E;
	Offer last;
	Take first;
	Take last;
	Get poll first;
	Poll last;
	Put E;
	Offer E;
	Take forwarding blocking deque;
	Get poll;
	Drain  to collection;

4.63. Add a class for forwarding collection. It allows to:

	Instantiate forwarding collection;
	Delegate forwarding collection;
	Get iterator;
	Get size;
	Remove collection;
	Check if forwarding collection is empty;
	Check if forwarding collection contains;
	Add element;
	Remove forwarding collection;
	Check if forwarding collection contains all;
	Add collection;
	Retain collection;
	Handle clear;
	Convert forwarding collection to array;
	Handle standard contains;
	Handle standard contains all;
	Handle standard add all;
	Handle standard remove;
	Handle standard remove all;
	Handle standard retain all;
	Handle standard clear;
	Handle standard is empty;
	Handle standard to string;
	Handle standard to array;

4.64. Add a class for forwarding concurrent map. It allows to:

	Instantiate forwarding concurrent map;
	Delegate forwarding concurrent map;
	Put key if absent;
	Remove forwarding concurrent map;
	Replace key;

4.65. Add a class for forwarding deque. It allows to:

	Instantiate forwarding deque;
	Delegate forwarding deque;
	Add  first E;
	Add last;
	Descending iterator;
	Get forwarding deque first;
	Get last;
	Offer  first E;
	Offer last;
	Get peek first;
	Get peek last;
	Get poll first;
	Poll last;
	Get pop;
	Push E;
	Remove forwarding deque first;
	Remove last;
	Remove first occurrence;
	Remove last occurrence

4.66. Add a class for forwarding deque test. It allows to:

	Handle test forwarding;
	Apply delegate deque;
	Wrap delegate deque;
	Delegate

4.67. Add a class for forwarding immutable collection. It allows to:

	Instantiate forwarding immutable collection

4.68. Add a class for forwarding immutable list. It allows to:

	Instantiate forwarding immutable list

4.69. Add a class for forwarding immutable map. It allows to:

	Instantiate forwarding immutable map

4.70. Add a class for forwarding immutable set. It allows to:

	Instantiate forwarding immutable set

4.71. Add a class for forwarding iterator. It allows to:

	Instantiate forwarding iterator;
	Delegate forwarding iterator;
	Check if forwarding iterator has next;
	Handle next;
	Remove forwarding iterator

4.72. Add a class for forwarding list. It allows to:

	Instantiate forwarding list;
	Delegate forwarding list;
	Add element;
	Add elements collection;
	Get forwarding list;
	Get index of;
	Handle last index of;
	Get list iterator;
	Remove forwarding list;
	Set element;
	Sub list;
	Check if forwarding list equals;
	Hash code;
	Handle standard add;
	Handle standard add all;
	Handle standard index of;
	Handle standard last index of;
	Handle standard iterator;
	Handle standard list iterator;
	Handle standard sub list;
	Handle standard equals;
	Handle standard hash code

4.73. Add a class for forwarding list iterator. It allows to:

	Instantiate forwarding list iterator;
	Delegate forwarding list iterator;
	Add element;
	Check if forwarding list iterator has previous;
	Handle next index;
	Handle previous;
	Handle previous index;
	Set element

4.74. Add a class for forwarding list iterator test. It allows to:

	Handle test forwarding;
	Apply delegate list iterator;
	Wrap delegate list iterator;
	Delegate

4.75. Add a class for forwarding list multimap. It allows to:

	Instantiate forwarding list multimap;
	Delegate forwarding list multimap;
	Get key;
	Remove forwarding list multimap;
	Replace values

4.76. Add a class for forwarding list multimap test. It allows to:

	Handle test forwarding;
	Apply delegate list multimap;
	Handle test equals;
	Wrap delegate list multimap;
	Delegate

4.77. Add a class for forwarding map entry. It allows to:

	Instantiate forwarding map entry;
	Delegate forwarding map entry;
	Get key;
	Get value;
	Get set value;
	Check if forwarding map entry equals;
	Hash code;
	Handle standard equals;
	Handle standard hash code;
	Handle standard to string

4.78. Add a class for forwarding multimap. It allows to:

	Instantiate forwarding multimap;
	Delegate forwarding multimap;
	Process forwarding multimap forwarding multimap as map;
	Handle clear;
	Check if forwarding multimap contains entry;
	Check if forwarding multimap contains key;
	Check if forwarding multimap contains value;
	Get entries;
	Get key;
	Check if forwarding multimap is empty;
	Get keys;
	Handle key set;
	Put key;
	Put multimap;
	Remove forwarding multimap;
	Replace values;
	Get size;
	Get values;
	Check if forwarding multimap equals;
	Hash code

4.79. Add a class for forwarding multimap test. It allows to:

	Handle test forwarding;
	Apply delegate multimap;
	Handle test equals;
	Wrap delegate multimap;
	Delegate

4.80. Add a class for forwarding object. It allows to:

	Instantiate forwarding object;
	Delegate forwarding object;
	Convert forwarding object to string

4.81. Add a class for forwarding object test. It allows to:

	Handle test equals reflexive;
	Delegate;
	Handle test equals symmetric;

4.82. Add a class for forwarding queue. It allows to:

	Instantiate forwarding queue;
	Delegate forwarding queue;
	Offer o;
	Get poll;
	Remove forwarding queue;
	Get peek;
	Get element;
	Handle standard offer;
	Handle standard peek;
	Handle standard poll

4.83. Add a class for forwarding set. It allows to:

	Instantiate forwarding set;
	Delegate forwarding set;
	Check if forwarding set equals;
	Hash code;
	Handle standard remove all;
	Handle standard equals;
	Handle standard hash code

4.84. Add a class for forwarding set multimap. It allows to:

	Delegate forwarding set multimap;
	Get entries;
	Get key;
	Remove forwarding set multimap;
	Replace values

4.85. Add a class for forwarding set multimap test. It allows to:

	Handle test forwarding;
	Apply delegate set multimap;
	Handle test equals;
	Wrap delegate set multimap;
	Delegate

4.86. Add a class for forwarding sorted set. It allows to:

	Instantiate forwarding sorted set;
	Delegate forwarding sorted set;
	Get comparator;
	First forwarding sorted set;
	Get head set;
	Handle last;
	Handle sub set;
	Handle tail set;
	Handle unsafe compare;
	Handle standard contains;
	Handle standard remove;
	Handle standard sub set

4.87. Add a class for forwarding sorted set multimap. It allows to:

	Instantiate forwarding sorted set multimap;
	Delegate forwarding sorted set multimap;
	Get key;
	Remove forwarding sorted set multimap;
	Replace values;
	Get value comparator

4.88. Add a class for forwarding sorted set multimap test. It allows to:

	Handle test forwarding;
	Apply delegate sorted set multimap;
	Handle test equals;
	Wrap delegate sorted set multimap;
	Delegate

4.89. Add a class for forwarding table. It allows to:

	Instantiate forwarding table;
	Delegate forwarding table;
	Get cell set;
	Handle clear;
	Get column;
	Get column key set;
	Get column map;
	Check if forwarding table contains;
	Check if forwarding table contains column;
	Check if forwarding table contains row;
	Check if forwarding table contains value;
	Get forwarding table;
	Check if forwarding table is empty;
	Put row key;
	Put table;
	Remove forwarding table;
	Get row;
	Row key set;
	Row map;
	Get size;
	Get values;
	Check if forwarding table equals;
	Hash code

4.90. Add a class for forwarding table test. It allows to:

	Handle test forwarding;
	Apply delegate table;
	Handle test equals;
	Wrap delegate table;
	Delegate

4.91. Add a class for general range. It allows to:

	Process general range general range from;
	All comparator;
	Convert down;
	Convert up;
	Get range;
	Instantiate general range  with comparator, lower endpoint, lower bound type, upper endpoint, upper bound type and upper bound type;
	Get comparator;
	Check if general range has lower bound;
	Check if general range has upper bound;
	Check if general range is empty;
	Too low;
	Too high;
	Check if general range contains;
	Intersect other general range;
	Check if general range equals;
	Hash code;
	Reverse general range;
	Convert general range to string;
	Get lower endpoint;
	Get lower bound type;
	Get upper endpoint;
	Get upper bound type

4.92. Add a class for general range test. It allows to:

	Handle test create empty range fails;
	Handle test create empty range open open fails;
	Handle test create empty range closed open succeeds;
	Handle test create empty range open closed succeeds;
	Handle test create singleton range succeeds;
	Handle test singleton range;
	Test lower range;
	Handle test upper range;
	Handle test doubly bounded against range;
	Handle test intersect against matching endpoints range;
	Handle test intersect against bigger range;
	Handle test intersect against smaller range;
	Handle test intersect overlapping range;
	Handle test intersect non overlapping range;
	Handle test from range all;
	Handle test from range one end;
	Handle test from range two ends;
	Handle test reverse;
	Handle test null pointers

4.93. Add a class for hash based table test. It allows to:

	Create hash based table test;
	Handle test iteration order;
	Handle test create with valid sizes;
	Handle test create with invalid sizes;
	Handle test create copy;
	Handle test serialization;
	Handle test null pointer static

4.94. Add a class for hash multimap. It allows to:

	Create hash multimap;
	Create multimap;
	Instantiate hash multimap;
	Instantiate hash multimap  with multimap;
	Create collection;
	Write object;
	Read object

4.95. Add a class for hash multimap gwt serialization dependencies. It allows to:

	Instantiate hash multimap gwt serialization dependencies  with map

4.96. Add a class for hash multimap test. It allows to:

	Get suite;
	Create entries entry;
	Handle test create;
	Handle test create from multimap;
	Handle test create from sizes;
	Handle test create from illegal sizes;
	Handle test empty multimaps equal

4.97. Add a class for hash multiset. It allows to:

	Create hash multiset;
	Create elements iterable;
	Instantiate hash multiset;
	Handle init

4.98. Add a class for hash multiset add present benchmark. It allows to:

	Set hash multiset add present benchmark;
	Add hash multiset add present benchmark

4.99. Add a class for hash set supplier. It allows to:

	Instantiate hash set supplier;
	Get hash set supplier

Add a local a class for linked hash set supplier. It allows to:

	Instantiate linked hash set supplier;
	Get linked hash set supplier

Add a local an object creator class for tree set supplier. It allows to:

	Instantiate tree set supplier  with comparator;
	Get tree set supplier

Add a local a class for enum set supplier. It allows to:

	Instantiate enum set supplier  with clazz class;
	Get enum set supplier

4.100. Add a class for hashing. It allows to:

	Instantiate hashing;
	Smear hashing;
	Handle smeared hash;
	Handle closed table size;
	Handle needs resizing

4.101. Add a class for hashing test. It allows to:

	Handle test smear

4.102. Add a class for immutable collection test. It allows to:

	Handle test capacity expansion

4.103. Add a class for immutable entry. It allows to:

	Instantiate immutable entry  with key, value and value;
	Get key;
	Get value;
	Get set value

4.104. Add a class for immutable list creation benchmark. It allows to:

	Get builder add;
	Pre sized builder add;
	Copy array list;
	Copy pre sized array list

4.105. Add a class for immutable multimap as map implements map test. It allows to:

	Instantiate immutable multimap as map implements map test;
	Make empty map;
	Make populated map

4.106. Add a class for immutable multiset gwt serialization dependencies

4.107. Add a class for immutable range map test. It allows to:

	Handle test builder rejects empty ranges;
	Handle test overlap rejection;
	Handle test get;
	Handle test span empty;
	Handle test span single range;
	Handle test span two ranges;
	Handle test get entry;
	Handle test get large range map;
	Handle test as map of ranges;
	Handle test sub range map;
	Handle test serialization

4.108. Add a class for immutable set multimap as map implements map test. It allows to:

	Instantiate immutable set multimap as map implements map test;
	Make empty map;
	Make populated map

4.109. Add a class for immutable set test. It allows to:

	Get suite;
	O immutable set test;
	O E;
	O e 1;
	Get copy of;
	Handle test creation all duplicates;
	Handle test creation one duplicate;
	Handle test creation many duplicates;
	Handle test builder force copy;
	Handle test presized builder dedups;
	Handle test presized builder force copy;
	Handle test creation array of array;
	Handle test choose table size;
	Handle test resize table;
	Verify table size;
	Handle test copy of copies immutable sorted set;
	Handle test copy of thread safe;
	Get builder;
	Get complex builder set last element;
	Handle test equals;
	Handle test controls array size;
	Handle test reused builder

4.110. Add a class for immutable sorted map fauxveride shim. It allows to:

	Get builder;
	Get builder with expected size;
	O k 1;

4.111. Add a class for immutable sorted multiset fauxveride shim. It allows to:

	Get builder;
	O element;
	O e 1;
	Get copy of

4.112. Add a class for immutable sorted set fauxveride shim. It allows to:

	Get builder;
	Get builder with expected size;
	O element;
	O e 1;
	Get copy of

4.113. Add an interface declaration  for interner. It allows to:

	Get intern

4.114. Add a class for interners benchmark. It allows to:

	Handle weak interner;
	Handle strong interner;
	String intern

4.115. Add a class for interners test. It allows to:

	Handle test strong simplistic;
	Handle test strong null;
	Handle test strong builder;
	Handle test weak simplistic;
	Handle test weak null;
	Handle test weak builder;
	Handle test weak after GC;
	Handle test as function simplistic;
	Handle test null pointer exceptions;
	Handle test concurrency level zero;
	Handle test concurrency level negative

4.116. Add a class for iterator benchmark. It allows to:

	Set iterator benchmark;
	Handle array indexed;
	Get array indexed length;
	Get array for;
	Handle array list indexed;
	Get array list indexed length;
	Get array list for;
	Convert array list;
	Get linked list for;
	Get linked list to array for

4.117. Add a class for legacy comparable. It allows to:

	Instantiate legacy comparable;
	Compare legacy comparable to;
	Check if legacy comparable equals;
	Hash code

4.118. Add a class for lenient serializable tester. It allows to:

	Handle reserialize and assert lenient;
	Instantiate lenient serializable tester

4.119. Add a class for lexicographical ordering. It allows to:

	Instantiate lexicographical ordering  with element order comparator;
	Compare left iterable;
	Check if lexicographical ordering equals;
	Hash code;
	Convert lexicographical ordering to string

4.120. Add a class for linked hash multimap gwt serialization dependencies. It allows to:

	Instantiate linked hash multimap gwt serialization dependencies  with map

4.121. Add a class for linked hash multimap test. It allows to:

	Get suite;
	Create entries entry;
	Handle test value set hash table expansion;
	Initialize multimap 5;
	Convert test;
	Handle test ordering read only;
	Handle test ordering unmodifiable;
	Handle test ordering synchronized;
	Handle test serialization ordering;
	Handle test serialization ordering keys and entries;
	Assert ordering read  only multimap;
	Handle test ordering updates;
	Handle test put multimap ordered;
	Convert test keys;
	Handle test create;
	Handle test create from multimap;
	Handle test create from sizes;
	Handle test create from illegal sizes;
	Handle test get iteration;
	Handle new target iterator;
	Verify elements list;
	Handle test entries iteration;
	Handle test keys iteration;
	Handle test values iteration;
	Handle test key set iteration;
	Handle test as set iteration;

4.122. Add a class for linked hash multiset. It allows to:

	Create linked hash multiset;
	Create elements iterable;
	Instantiate linked hash multiset;
	Handle init

4.123. Add a class for linked hash multiset test. It allows to:

	Get suite;
	Get linked hash multiset generator;
	Create;
	Get order;
	Handle test create;
	Handle test create with size;
	Handle test create from iterable;
	Convert test;
	Handle test loses place in line

4.124. Add a class for linked list multimap test. It allows to:

	Get suite;
	Create entries entry;
	Create linked list multimap test;
	Handle test get random access;
	Handle test remove all random access;
	Handle test replace values random access;
	Handle test create from multimap;
	Handle test create from size;
	Handle test create from illegal size;
	Handle test linked get add;
	Handle test linked get insert;
	Handle test linked put in order;
	Handle test linked put out of order;
	Handle test linked put all multimap;
	Handle test linked replace values;
	Handle test linked clear;
	Handle test linked key set;
	Handle test linked keys;
	Handle test linked values;
	Handle test linked entries;
	Handle test linked as map entries;
	Handle test entries after multimap update;
	Handle test entries iteration;
	Handle new target iterator;
	Verify elements list;
	Handle test keys iteration;
	Handle test values iteration;
	Handle test key set iteration;
	Handle test as set iteration;
	Handle test equals

4.125. Add an interface declaration  for list multimap. It allows to:

	Get key;
	Remove list multimap;
	Replace values;
	Process list multimap list multimap as map;
	Check if list multimap equals

4.126. Add a class for map benchmark. It allows to:

	Create keys collection;
	Create contents collection;
	Set map benchmark;
	Get map benchmark;
	Create map benchmark;
	Iterate map benchmark with entry set;
	Iterate map benchmark with key set and get;
	Iterate values and get

4.127. Add a class for map maker. It allows to:

	Instantiate map maker;
	Handle key equivalence;
	Get key equivalence;
	Handle initial capacity;
	Get initial capacity;
	Get concurrency level;
	Handle weak keys;
	Set key strength;
	Get key strength;
	Handle weak values;
	Get set value strength;
	Get value strength;
	Make map;
	Convert map maker to string

4.128. Add a class for map maker internal map. It allows to:

	Instantiate map maker internal map  with builder map maker, internal entry helper and internal entry helper;
	Create builder map maker;
	Create builder map maker with dummy values;
	Get default equivalence;

Add a local an interface declaration  for internal entry helper. It allows to:

	Handle key strength;
	Get value strength;
	Handle new segment;
	Handle new entry;
	Get copy;
	Get set value

Add a local an interface declaration  for internal entry. It allows to:

	Get next;
	Get hash;
	Get key;
	Get value

Add a local a class for abstract strong key entry. It allows to:

	Instantiate abstract strong key entry  with key, next and next;
	Get key;
	Get hash;
	Get next

Add a local an interface declaration  for strong value entry

4.129. Add a class for map maker internal map test. It allows to:

	Make map;
	Create map maker;
	Handle test defaults;
	Handle test set key equivalence;
	Do equivalent;
	Hash;
	Handle test set concurrency level;
	Check concurrency level;
	Handle test set initial capacity;
	Check initial capacity;
	Handle test set maximum size;
	Check maximum size;
	Handle test set weak keys;
	Handle test set weak values;
	Check strength;
	Test new entry;
	Handle test copy entry;
	Handle test segment get and contains;
	Handle test segment replace value;
	Handle test segment replace;
	Handle test segment put;
	Handle test segment put if absent;
	Handle test segment put expand;
	Handle test segment remove;
	Handle test segment remove value;
	Handle test expand;
	Handle test remove from chain;
	Handle test expand cleanup;
	Count live entries;
	Handle test clear;
	Handle test remove entry;
	Handle test clear value;
	Handle test drain key reference queue on write;
	Handle test drain value reference queue on write;
	Handle test drain key reference queue on read;
	Handle test drain value reference queue on read;
	All weak key strength makers;
	All weak value strength makers;
	Handle test null parameters

4.130. Add a class for maps memory benchmark. It allows to:

	Prepare contents;
	Create maps memory benchmark;
	Iterate maps memory benchmark;
	Handle key iterate

4.131. Add a class for maps sorted transform values test. It allows to:

	Make empty map;
	Make populated map

4.132. Add a class for maps transform values test. It allows to:

	Instantiate maps transform values test;
	Make empty map;
	Make populated map;
	Get key  not in populated map;
	Get value  not in populated map;
	Assert maps equal;
	Handle test transform empty map equality;
	Handle test transform singleton map equality;
	Handle test transform identity function equality;
	Handle test transform put entry is unsupported;
	Handle test transform remove entry;
	Handle test transform equality of maps with null values;
	Apply;
	Handle test transform reflects underlying map;
	Handle test transform changes are reflected in underlying map;
	Handle test transform equals;
	Apply from integer;
	Handle test transform entry set contains;
	Apply from boolean;
	Handle test key set remove all null from empty;
	Handle test entry set remove all null from empty

4.133. Add a class for min max priority queue test. It allows to:

	Get suite;
	Create;
	Handle test creation simple;
	Handle test creation comparator;
	Handle test creation expected size;
	Handle test creation expected size comparator;
	Handle test creation maximum size;
	Handle test creation comparator maximum size;
	Handle test creation expected size maximum size;
	Handle test creation with contents;
	Handle test creation comparator with contents;
	Handle test creation expected size with contents;
	Handle test creation maximum size with contents;
	Handle test creation all options;
	Check natural;
	Check unbounded;
	Handle test heap intact;
	Handle test small;
	Handle test small min heap;
	Handle test remove;
	Handle test contains;
	Handle test iterator past end exception;
	Handle test iterator concurrent modification;
	Handle test iterator regression childless uncle;
	Handle test invalidating remove;
	Convert test invalidating remove;
	Handle test iterator invalidating iterator remove;
	Convert test iterator invalidating iterator remove;
	Handle test remove from string heap;
	Handle test create with ordering;
	Handle test create with capacity and ordering;
	Run iterator;
	Handle new target iterator;
	Verify elements list;
	Handle test iterator tester;
	Handle test iterator tester larger;
	Handle test remove at;
	Handle test remove at exhaustive;
	Handle test correct ordering regression;
	Handle test correct ordering small heaps poll first;
	Handle test correct ordering small heaps poll last;
	Handle test correct ordering medium heaps poll first;
	Handle test correct ordering 73 element bug;
	Handle test correct ordering medium heaps poll last;
	Handle test correct ordering random access;
	Handle test exhaustive poll and push;
	Handle test regression data corruption;
	Handle test remove regression;
	Handle test random removes;
	Handle test random adds and removes;
	Handle test random adds and removes duplicate elements;
	Insert  randomly elements array list;
	Create ordered list;
	Handle test is even level;
	Handle test null pointers;
	Insert replica map into replica;
	Remove min  from replica;
	Remove max  from replica;
	Remove replica map from replica;
	Assert intact;
	Assert intact using seed;
	Assert intact using started  with started with collection;
	Assert equals using seed;
	Assert equals using started  with started with collection

4.134. Add an interface declaration  for multimap. It allows to:

	Get size;
	Check if multimap is empty;
	Check if multimap contains key;
	Check if multimap contains value;
	Check if multimap contains entry;
	Put key;
	Remove multimap;
	Put multimap;
	Replace values;
	Handle clear;
	Get key;
	Handle key set;
	Get keys;
	Get values;
	Get entries;
	Process multimap multimap as map;
	Check if multimap equals;
	Hash code

4.135. Add a class for multimap builder test. It allows to:

	Handle test generics;
	Handle test generics gwt compatible;
	Handle test tree keys;
	Handle test tree keys gwt compatible;
	Handle test serialization;
	Handle reserialize and assert;
	Get reserialize

4.136. Add a class for multimaps filter entries as map test. It allows to:

	Apply entry;
	Instantiate multimaps filter entries as map test;
	Create multimap;
	Make empty map;
	Make populated map

4.137. Add a class for multimaps transform values as map test. It allows to:

	Instantiate multimaps transform values as map test;
	Make empty map;
	Make populated map

4.138. Add a class for multiple set contains benchmark. It allows to:

	Set multiple set contains benchmark;
	Check if multiple set contains benchmark contains

4.139. Add a class for multiset iterator benchmark. It allows to:

	Set multiset iterator benchmark;
	Hash multiset;
	Get linked hash multiset;
	Get tree multiset

4.140. Add a class for multisets collection test. It allows to:

	Get suite;
	Handle unmodifiable multiset generator;
	Create;
	Get order;
	Handle unmodifiable sorted multiset generator;
	Get union generator;
	Get intersection generator;
	Sum generator;
	Get difference generator;
	Get filtered generator;

4.141. Add a class for multisets immutable entry test. It allows to:

	Get entry;
	Control element;
	Convert test;
	Handle test equals;
	Handle test equals null;
	Handle test hash code;
	Handle test hash code null;
	Handle test negative count

4.142. Add a class for multisets test. It allows to:

	Test new tree multiset derived;
	Test new tree multiset non generic;
	Test new tree multiset comparator;
	Handle test retain occurrences empty;
	Handle test remove occurrences iterable empty;
	Handle test remove occurrences multiset empty;
	Handle test union;
	Handle test union equal multisets;
	Handle test union empty nonempty;
	Handle test union nonempty empty;
	Handle test intersect empty nonempty;
	Handle test intersect nonempty empty;
	Handle test sum;
	Handle test sum empty nonempty;
	Handle test sum nonempty empty;
	Handle test difference with no removed elements;
	Handle test difference with removed element;
	Handle test difference with more elements in second multiset;
	Handle test difference empty nonempty;
	Handle test difference nonempty empty;
	Handle test contains occurrences empty;
	Handle test contains occurrences;
	Handle test retain empty occurrences;
	Handle test retain occurrences;
	Handle test remove empty occurrences multiset;
	Handle test remove occurrences multiset;
	Handle test remove empty occurrences iterable;
	Handle test remove occurrences multiset iterable;
	Handle test unmodifiable multiset short circuit;
	Handle test highest count first;
	Handle test null pointers

4.143. Add a class for mutable class to instance map test. It allows to:

	Get suite;
	Create;
	Set mutable class to instance map test;
	Handle test constraint;
	Handle test put and get instance;
	Handle test null;
	Handle test primitive and wrapper

4.144. Add a class for natural ordering. It allows to:

	Compare left comparable;
	Get nulls first;
	Get nulls last;
	Reverse natural ordering;
	Read resolve;
	Convert natural ordering to string;
	Instantiate natural ordering

4.145. Add a class for new custom table test. It allows to:

	Create new custom table test;
	Get;
	Handle test row key set ordering;
	Handle test row ordering

4.146. Add a class for nulls first ordering. It allows to:

	Instantiate nulls first ordering  with ordering;
	Compare left;
	Reverse nulls first ordering;
	Get nulls first;
	Get nulls last;
	Check if nulls first ordering equals;
	Hash code;
	Convert nulls first ordering to string

4.147. Add a class for nulls last ordering. It allows to:

	Instantiate nulls last ordering  with ordering;
	Compare left;
	Reverse nulls last ordering;
	Get nulls first;
	Get nulls last;
	Check if nulls last ordering equals;
	Hash code;
	Convert nulls last ordering to string

4.148. Add a class for object arrays. It allows to:

	Instantiate object arrays;
	Handle new array;
	Get concat;
	Convert object arrays to array impl;
	Copy object arrays as object array;
	Fill array;
	Handle swap;
	Check elements  not null;
	Check element  not null

4.149. Add a class for object arrays test. It allows to:

	Handle test null pointer exceptions;
	Test new array  from class empty;
	Test new array  from class nonempty;
	Test new array  from class of array;
	Test new array  from array empty;
	Test new array  from array nonempty;
	Test new array  from array of array;
	Handle test concat empty empty;
	Handle test concat empty nonempty;
	Handle test concat nonempty empty;
	Handle test concat basic;
	Handle test concat with more general type;
	Convert test;
	Do test  to array impl 1;
	Do test  to array impl 2;
	Handle test prepend zero elements;
	Handle test prepend one element;
	Handle test prepend two elements;
	Handle test append zero elements;
	Handle test append one element;
	Handle test append two elements;
	Convert test empty array;
	Convert test non empty;
	Check array equals;
	Handle array equals;
	Do test new array equals

4.150. Add a class for object count linked hash map. It allows to:

	Create object count linked hash map;
	Create object count linked hash map with expected size;
	Instantiate object count linked hash map;
	Instantiate object count linked hash map  with object count hash map;
	Handle init;
	Handle first index;
	Handle next index;
	Handle next index after remove;
	Get predecessor;
	Get successor;
	Set successor;
	Set predecessor;
	Succeeds object count linked hash map;
	Insert entry;
	Move last entry;
	Resize entries;
	Handle clear

4.151. Add a class for package sanity tests. It allows to:

	Instantiate package sanity tests

4.152. Add an interface declaration  for peeking iterator. It allows to:

	Get peek;
	Handle next;
	Remove peeking iterator

4.153. Add a class for platform. It allows to:

	Handle new hash map with expected size;
	Handle new linked hash map with expected size;
	Handle new hash set with expected size;
	Handle new linked hash set with expected size;
	Check if platform preserves insertion order on puts map;
	Check if platform preserves insertion order on adds set;
	Handle new array;
	Get copy;
	Try weak keys;
	Reduce iterations  if gwt;
	Reduce exponent  if gwt;
	Instantiate platform

4.154. Add a class for power set benchmark. It allows to:

	Set power set benchmark;
	Get iteration

4.155. Add an object creator class for queues. It allows to:

	Instantiate queues;
	Handle new array blocking queue;
	Handle new array deque;
	Handle new concurrent linked queue;
	Handle new linked blocking deque;
	Handle new linked blocking queue;
	Handle new priority blocking queue;
	Handle new priority queue;
	Handle new synchronous queue;
	Drain blocking queue;
	Drain  uninterruptibly blocking queue;
	Get synchronized queue;
	Get synchronized deque

4.156. Add a class for range gwt serialization dependencies

4.157. Add an interface declaration  for range map. It allows to:

	Get key;
	Get entry;
	Span range map;
	Put range;
	Coalescing range;
	Put range map;
	Handle clear;
	Remove range;
	Process range map range map as map of ranges;
	Process range map range map as descending map of ranges;
	Handle sub range map;
	Check if range map equals;
	Hash code;
	Convert range map to string

4.158. Add a class for range non gwt test. It allows to:

	Handle test null pointers

4.159. Add an interface declaration  for range set. It allows to:

	Check if range set contains;
	Get range containing;
	Handle intersects;
	Check if range set encloses;
	Check if range set encloses all;
	Check if range set is empty;
	Span range set;
	Process range set range set as ranges;
	Process range set range set as descending set of ranges;
	Complement range set;
	Handle sub range set;
	Add range;
	Remove range;
	Handle clear;
	Add other range set;
	Add ranges iterable;
	Remove other range set;
	Remove ranges iterable;
	Check if range set equals;
	Hash code;
	Convert range set to string

4.160. Add a class for range test. It allows to:

	Handle test open;
	Handle test open invalid;
	Handle test closed;
	Handle test closed invalid;
	Handle test open closed;
	Handle test closed open;
	Handle test is connected;
	Contains range;
	Handle test singleton;
	Handle test empty 1;
	Convert test empty;
	Handle test less than;
	Handle test greater than;
	Handle test at least;
	Handle test at most;
	Test range test;
	Assert unbounded  below range;
	Assert unbounded  above range;
	Handle test ordering cuts;
	Handle test contains all;
	Handle test encloses open;
	Handle test encloses closed;
	Handle test intersection empty;
	Handle test intersection de facto empty;
	Handle test intersection singleton;
	Handle test intersection general;
	Handle test gap overlapping;
	Handle test gap connected adjacent yields empty;
	Handle test gap general;
	Handle test span general;
	Handle test apply;
	Handle test equals;
	Handle test legacy comparable;
	Handle next;
	Handle previous;
	Get distance;
	Handle test canonical;
	Handle test canonical unbounded domain;
	Handle test enclose all;
	Handle test enclose all empty;
	Handle test enclose all null value;
	Handle test equivalent factories

4.161. Add a class for regular immutable as list. It allows to:

	Instantiate regular immutable as list  with delegate immutable collection, delegate list and delegate list;
	Instantiate regular immutable as list  with delegate immutable collection;
	Delegate collection;
	Delegate list;
	Get list iterator;
	Copy regular immutable as list into array;
	Handle internal array;
	Handle internal array start;
	Handle internal array end;
	Get regular immutable as list

4.162. Add a class for regular immutable as list test. It allows to:

	Handle test doesnt check for null

4.163. Add a class for regular immutable bi map. It allows to:

	Instantiate regular immutable bi map;
	Instantiate regular immutable bi map  with inverse regular immutable bi map;
	Get size;
	Handle inverse;
	Get regular immutable bi map;
	Create entry set;
	Create key set;
	Check if regular immutable bi map is partial view

4.164. Add a class for regular immutable list. It allows to:

	Instantiate regular immutable list;
	Get size;
	Check if regular immutable list is partial view;
	Handle internal array;
	Handle internal array start;
	Handle internal array end;
	Copy regular immutable list into array;
	Get regular immutable list

4.165. Add a class for regular immutable set. It allows to:

	Instantiate regular immutable set;
	Check if regular immutable set contains;
	Get size;
	Get iterator;
	Handle internal array;
	Handle internal array start;
	Handle internal array end;
	Copy regular immutable set into array;
	Create regular immutable set as list;
	Check if regular immutable set is partial view;
	Hash code;
	Check if regular immutable set is hash code fast

4.166. Add a class for regular immutable sorted multiset. It allows to:

	Instantiate regular immutable sorted multiset  with comparator;
	Instantiate regular immutable sorted multiset  with element set;
	Get count;
	Get entry;
	First entry;
	Handle last entry;
	Get size;
	Get element set;
	Head multiset;
	Get tail multiset;
	Get sub multiset;
	Check if regular immutable sorted multiset is partial view

4.167. Add a class for regular immutable sorted set. It allows to:

	Instantiate regular immutable sorted set  with elements immutable list, comparator and comparator;
	Handle internal array;
	Handle internal array start;
	Handle internal array end;
	Get iterator;
	Descending iterator;
	Get size;
	Check if regular immutable sorted set contains;
	Check if regular immutable sorted set contains all;
	Handle unsafe binary search;
	Check if regular immutable sorted set is partial view;
	Copy regular immutable sorted set into array;
	Check if regular immutable sorted set equals;
	First regular immutable sorted set;
	Handle last;
	Handle lower;
	Get floor;
	Get ceiling;
	Handle higher;
	Get head set impl;
	Head index;
	Handle sub set impl;
	Handle tail set impl;
	Handle tail index;
	Handle unsafe comparator;
	Get sub set;
	Get index of;
	Process regular immutable sorted set regular immutable sorted set as list;
	Create descending set

4.168. Add a class for regular immutable table test. It allows to:

	Get test instances;
	Handle test cell set;
	Handle test values;
	Handle test size;
	Handle test contains value;
	Handle test is empty;
	Handle test for cells;
	Handle test get;
	Handle test column;
	Handle test column key set;
	Handle test column map;
	Handle test contains;
	Handle test contains column;
	Handle test contains row;
	Handle test row;
	Handle test row key set;
	Handle test row map

4.169. Add a class for reverse natural ordering. It allows to:

	Compare left comparable;
	Reverse reverse natural ordering;
	Get min;
	Get max;
	Read resolve;
	Convert reverse natural ordering to string;
	Instantiate reverse natural ordering

4.170. Add a class for reverse ordering. It allows to:

	Instantiate reverse ordering  with forward ordering;
	Compare a;
	Reverse reverse ordering;
	Get min;
	Get max;
	Hash code;
	Check if reverse ordering equals;
	Convert reverse ordering to string

4.171. Add an interface declaration  for row sorted table. It allows to:

	Row key set;
	Row map

4.172. Add a class for set contains benchmark. It allows to:

	Set set contains benchmark;
	Check if set contains benchmark contains

4.173. Add a class for set creation benchmark. It allows to:

	Set set creation benchmark;
	Get creation

4.174. Add a class for set iteration benchmark. It allows to:

	Set set iteration benchmark;
	Get iteration

4.175. Add an interface declaration  for set multimap. It allows to:

	Get key;
	Remove set multimap;
	Replace values;
	Get entries;
	Process set multimap set multimap as map;
	Check if set multimap equals

4.176. Add a class for singleton immutable set. It allows to:

	Instantiate singleton immutable set  with element;
	Get size;
	Check if singleton immutable set contains;
	Get iterator;
	Create singleton immutable set as list;
	Check if singleton immutable set is partial view;
	Copy singleton immutable set into array;
	Hash code;
	Check if singleton immutable set is hash code fast;
	Convert singleton immutable set to string

4.177. Add a class for singleton immutable table. It allows to:

	Instantiate singleton immutable table  with row key, column key, value and value;
	Instantiate singleton immutable table  with cell;
	Get column;
	Get column map;
	Row map;
	Get size;
	Create cell set;
	Create values;
	Create serialized form

4.178. Add a class for singleton immutable table test. It allows to:

	Handle test hash code;
	Handle test cell set;
	Handle test column;
	Handle test column key set;
	Handle test column map;
	Handle test row;
	Handle test row key set;
	Handle test row map;
	Handle test equals object;
	Handle test equals object null values;
	Convert test;
	Handle test contains;
	Handle test contains column;
	Handle test contains row;
	Handle test contains value;
	Handle test get;
	Handle test is empty;
	Handle test size;
	Handle test values;
	Get test instances

4.179. Add a class for sorted copy benchmark. It allows to:

	Arrange list;
	Set sorted copy benchmark;
	Get collections;
	Ordering sorted copy benchmark;
	Get sorted set

4.180. Add an interface declaration  for sorted iterable. It allows to:

	Get comparator;
	Get iterator

4.181. Add a class for sorted iterables. It allows to:

	Instantiate sorted iterables;
	Check if sorted iterables has same comparator;
	Get comparator

4.182. Add a class for sorted iterables test. It allows to:

	Handle test same comparator;
	Handle test comparator

4.183. Add a class for sorted lists. It allows to:

	Instantiate sorted lists;
	Result index;
	Handle binary search;

4.184. Add a class for sorted lists test. It allows to:

	Assert model agrees;
	Handle test without dups;
	Handle test with dups;
	Handle test nulls

4.185. Add an interface declaration  for sorted map difference. It allows to:

	Get entries only on left;
	Get entries only on right;
	Get entries in common;
	Get entries differing

4.186. Add an interface declaration  for sorted multiset. It allows to:

	Get comparator;
	First entry;
	Handle last entry;
	Poll first entry;
	Poll last entry;
	Get element set;
	Get entry set;
	Get iterator;
	Descending multiset;
	Head multiset;
	Get sub multiset;
	Get tail multiset

4.187. Add an interface declaration  for sorted multiset bridge. It allows to:

	Get element set

4.188. Add an interface declaration  for sorted set multimap. It allows to:

	Get key;
	Remove sorted set multimap;
	Replace values;
	Process sorted set multimap sorted set multimap as map;
	Get value comparator

4.189. Add a class for sparse immutable table. It allows to:

	Instantiate sparse immutable table  with cell list, row space immutable set, column space immutable set and column space immutable set;
	Get column map;
	Row map;
	Get size;
	Get cell;
	Get value;
	Create serialized form

4.190. Add a class for special random. It allows to:

	Get value of;
	Instantiate special random;
	Convert special random to string

4.191. Add a class for sub map multimap as map implements map test. It allows to:

	Instantiate sub map multimap as map implements map test;
	Create multimap;
	Make empty map;
	Make populated map;
	Get key  not in populated map;
	Get value  not in populated map;
	Handle test entry set remove all null from empty;
	Handle test entry set retain all null from empty;
	Handle test key set remove all null from empty;
	Handle test key set retain all null from empty;
	Handle test values remove all null from empty;
	Handle test values retain all null from empty

4.192. Add a class for tables test. It allows to:

	Handle test immutable entry serialization;
	Convert test immutable entry;
	Handle test entry equals;
	Handle test entry equals null

4.193. Add a class for tables transform values test. It allows to:

	Apply;
	Create tables transform values test;
	Handle test null pointer instance;
	Handle test put;
	Handle test put all table;
	Handle test put null;
	Handle test put null replace;
	Handle test row clear and put

4.194. Add a class for top K selector. It allows to:

	Handle least;
	Handle greatest;
	Instantiate top K selector  with comparator;
	Offer elem;
	Trim top K selector;
	Get partition;
	Handle swap;
	Offer elements iterable;
	Offer elements iterator;
	Handle top K

4.195. Add a class for top K selector test. It allows to:

	Handle test negative K;
	Handle test zero K;
	Handle test no elements offered;
	Handle test offered fewer than K;
	Handle test offered K plus one;
	Handle test offered three K;
	Handle test different comparator;
	Handle test worst case;
	Compare o 1 integer

4.196. Add a class for transformed iterator. It allows to:

	Instantiate transformed iterator  with backing iterator;
	Transform from;
	Check if transformed iterator has next;
	Handle next;
	Remove transformed iterator

4.197. Add a class for transformed list iterator. It allows to:

	Instantiate transformed list iterator  with backing iterator;
	Backing iterator;
	Check if transformed list iterator has previous;
	Handle previous;
	Handle next index;
	Handle previous index;
	Set element;
	Add element

4.198. Add a class for transposed table test. It allows to:

	Create transposed table test;
	Handle test transpose transposed;
	Handle test put original modifies transpose;
	Handle test put transpose modifies original;
	Handle test transposed views

4.199. Add a class for tree multimap. It allows to:

	Create tree multimap;
	Create key comparator;
	Create multimap;
	Instantiate tree multimap  with key comparator, value comparator and value comparator;
	Instantiate tree multimap  with key comparator, value comparator, multimap and multimap;
	Create tree multimap as map;
	Create collection;
	Handle key comparator;
	Get value comparator;
	Get key;
	Handle key set;
	Process tree multimap tree multimap as map;
	Write object;
	Read object

4.200. Add a class for tree multimap explicit test. It allows to:

	Compare tree multimap explicit test;
	Create tree multimap explicit test;
	Populate tree multimap explicit test;
	Handle test multimap create from tree multimap;
	Convert test;
	Handle test get comparator;
	Handle test ordered get;
	Handle test ordered key set;
	Handle test ordered as map entries;
	Handle test ordered entries;
	Handle test ordered values;
	Handle test comparator;
	Handle test multimap comparators;
	Handle test sorted key set;
	Handle test explicit comparator serialization

4.201. Add a class for tree multimap natural test. It allows to:

	Get suite;
	Create entries entry;
	Get order;
	Compare left entry;
	Create;
	Create key array;
	Create value array;
	Get samples;
	Create array;
	Process  below samples lesser;
	Process  below samples greater;
	Process  above samples lesser;
	Process  above samples greater;
	Create tree multimap natural test;
	Populate tree multimap natural test;
	Convert test;
	Handle test ordered get;
	Handle test ordered key set;
	Handle test ordered as map entries;
	Handle test ordered entries;
	Handle test ordered values;
	Handle test multimap constructor;
	Handle test create from tree multimap;
	Handle test create from hash multimap;
	Handle test create from sorted set multimap;
	Handle test comparators;
	Handle test explicit comparator serialization;
	Handle test tree multimap derived;
	Handle test tree multimap non generic;
	Handle test tree multimap as map sorted;
	Handle test tail set clear;
	Handle test key set bridge methods;
	Handle test as map bridge methods;
	Handle test get bridge methods

4.202. Add a class for tree multiset test. It allows to:

	Get suite;
	Create;
	Get order;
	Handle test create;
	Handle test create with comparator;
	Handle test create from iterable;
	Convert test;
	Handle test element set sorted set methods;
	Handle test element set subset remove;
	Handle test element set subset remove all;
	Handle test element set subset retain all;
	Handle test element set subset clear;
	Handle test custom comparator;
	Compare;
	Handle test null accepting comparator;
	Handle test degenerate comparator;
	Handle test sub multiset size;
	Handle test element set bridge methods

4.203. Add a class for tree range map test. It allows to:

	Get suite;
	Get samples;
	Create;
	Create array;
	Get order;
	Create key array;
	Create value array;
	Handle test span single range;
	Handle test span two ranges;
	Test all ranges  alone;
	Test all range pairs;
	Test all range triples;
	Handle test put all;
	Handle test put and remove;
	Handle test put two and remove;
	Handle test put coalescing two and remove;
	Handle test put coalescing;
	Handle test put coalescing empty;
	Handle test put coalescing complex;
	Handle test sub range map exhaustive;
	Handle test sub sub range map;
	Handle test sub range map put;
	Handle test sub range map put coalescing;
	Handle test sub range map remove;
	Handle test sub range map clear;
	Verify model map;
	Put model;
	Remove model

4.204. Add a class for tree range set test. It allows to:

	Handle test view against expected;
	Handle test ranges by lower bounds;
	Handle test navigation against expected;
	Handle test intersects;
	Handle test enclosing;
	Test all single ranges complement  against remove;
	Handle test invariants empty;
	Handle test empty intersecting;
	Test all single ranges intersecting;
	Test all two ranges intersecting;
	Handle test empty enclosing;
	Test all single ranges enclosing;
	Test all two ranges enclosing;
	Handle test create copy;
	Get expected sub range set;
	Get expected complement;
	Handle test sub range set;
	Handle test complement;
	Handle test sub range set of complement;
	Handle test complement of sub range set;
	Handle test ranges by upper bound;
	Handle test merges connected with overlap;
	Handle test merges connected disjoint;
	Handle test ignores smaller sharing no bound;
	Handle test ignores smaller sharing lower bound;
	Handle test ignores smaller sharing upper bound;
	Handle test ignores equal;
	Handle test extend same lower bound;
	Handle test extend same upper bound;
	Handle test extend both directions;
	Handle test add empty;
	Handle test fill hole exactly;
	Handle test fill hole with overlap;
	Handle test add many pairs;
	Do pair test;
	Handle test remove empty;
	Handle test remove part sharing lower bound;
	Handle test remove part sharing upper bound;
	Handle test remove middle;
	Handle test remove no overlap;
	Handle test remove part from below lower bound;
	Handle test remove part from above upper bound;
	Handle test remove exact;
	Handle test remove all from below lower bound;
	Handle test remove all from above upper bound;
	Handle test remove all extending both directions;
	Handle test range containing 1;
	Convert test range containing;
	Handle test add all;
	Handle test remove all;
	Handle test serialization

4.205. Add a class for unmodifiable iterator. It allows to:

	Instantiate unmodifiable iterator;
	Remove unmodifiable iterator

4.206. Add a class for unmodifiable iterator test. It allows to:

	Handle test remove;
	Check if  has next;
	Handle next

4.207. Add a class for unmodifiable list iterator. It allows to:

	Instantiate unmodifiable list iterator;
	Add E;
	Set E

4.208. Add a class for unmodifiable list iterator test. It allows to:

	Handle test remove;
	Handle test add;
	Handle test set;
	Create unmodifiable list iterator test;
	Check if  has next;
	Handle next;
	Check if  has previous;
	Handle next index;
	Handle previous;
	Handle previous index

4.209. Add a class for unmodifiable multimap as map implements map test. It allows to:

	Instantiate unmodifiable multimap as map implements map test;
	Make empty map;
	Make populated map

4.210. Add a class for unmodifiable sorted multiset. It allows to:

	Instantiate unmodifiable sorted multiset  with delegate sorted multiset;
	Delegate unmodifiable sorted multiset;
	Get comparator;
	Create element set;
	Get element set;
	Descending multiset;
	First entry;
	Handle last entry;
	Poll first entry;
	Poll last entry;
	Head multiset;
	Get sub multiset;
	Get tail multiset

4.211. Add a class for using to string ordering. It allows to:

	Compare using to string ordering;
	Read resolve;
	Convert using to string ordering to string;
	Instantiate using to string ordering

5. Changes to package com.google.common.collect.testing:  

5.1. Add a class for abstract collection test suite builder. It allows to:

	Get testers

5.2. Add a class for abstract collection tester. It allows to:

	Handle actual contents;
	Reset container;
	Reset collection;
	Create array  with null element;
	Handle init collection with null element;
	Expect null missing when null unsupported

5.3. Add a class for abstract map tester. It allows to:

	Get map;
	Handle actual contents;
	Reset map;
	Expect missing keys;
	Expect missing values;
	Create array  with null key;
	Get value  for null key;
	Get key  for null value;
	Get entry null replaces;
	Create array  with null value;
	Init map  with null key;
	Init map  with null value;
	Expect null key missing when null keys unsupported;
	Expect null value missing when null values unsupported;
	Create disjoint collection;
	Get num entries;
	Get sample entries;
	Missing entries entry;
	Handle equal;
	Get entry;
	Expect contents;
	Expect replacement;
	Replace value;
	Get key;
	Get k 0;
	V abstract map tester;
	Get k 1;
	Convert k;
	Get k 3;
	Get k 4;

5.4. Add a class for abstract tester. It allows to:

	Set abstract tester;
	Tear abstract tester;
	Handle init;
	Get subject generator;
	Get test method name;
	Get name

5.5. Add a class for base comparable. It allows to:

	Instantiate base comparable;
	Hash code;
	Check if base comparable equals;
	Compare  to base comparable

5.6. Add a class for concurrent map test suite builder. It allows to:

	Using test map generator;
	Get testers

5.7. Add a class for concurrent navigable map test suite builder. It allows to:

	Using test sorted map generator;
	Get testers;
	Get sub suite using

5.8. Add a class for derived comparable. It allows to:

	Instantiate derived comparable

5.9. Add an interface declaration  for derived generator. It allows to:

	Get inner generator

5.10. Add a class for derived test iterator generator. It allows to:

	Instantiate derived test iterator generator  with collection generator;
	Get inner generator;
	Get derived test iterator generator

5.11. Add a class for feature specific test suite builder. It allows to:

	Get self;
	Using generator;
	Get subject generator;
	Process feature specific test suite builder feature specific test suite builder with set up;
	Get feature specific test suite builder;
	Process feature specific test suite builder feature specific test suite builder with tear down;
	Process feature specific test suite builder feature specific test suite builder with features;
	Get features;
	Get named;
	Get name;
	Suppressing methods;
	Suppressing methods collection;
	Get suppressed tests;
	Create test suite;
	Check feature specific test suite builder;
	Get testers;
	Handle matches;
	Intersect a set;
	Extract method;
	Make suite  for tester class;
	Get filter suite;
	Get format feature set

5.12. Add a class for helpers test. It allows to:

	Handle test nulls before B;
	Handle test is empty iterable;
	Get iterator;
	Handle test is empty map;
	Handle test assert equal in order;
	Handle test assert contents in order;
	Handle test assert contains;
	Handle test assert contains all of

5.13. Add a class for iterator tester. It allows to:

	Instantiate iterator tester  with features iterable, expected elements iterable, known order and known order;
	Get stimulus values

5.14. Add a class for list iterator tester. It allows to:

	Instantiate list iterator tester  with elements to insert iterable, features iterable, expected elements iterable and expected elements iterable;
	Get stimulus values;
	Handle new target iterator

5.15. Add a class for minimal collection. It allows to:

	O contents;
	Process minimal collection minimal collection of class and contents;
	Instantiate minimal collection  with type class, contents and contents;
	Get size;
	Check if minimal collection contains;
	Check if minimal collection contains all;
	Get iterator;
	Convert minimal collection to array;
	Add elements to add collection;
	Remove elements to remove collection;
	Retain elements to retain collection;
	Handle clear;
	U minimal collection

5.16. Add a class for minimal collection test. It allows to:

	Get suite;
	Create

5.17. Add a class for minimal iterable. It allows to:

	O elements;
	Process minimal iterable minimal iterable from;
	Instantiate minimal iterable  with iterator;
	Get iterator

5.18. Add a class for minimal iterable test. It allows to:

	Handle test of empty;
	Handle test of one;
	Handle test from empty;
	Handle test from one

5.19. Add a class for minimal set. It allows to:

	O contents;
	Process minimal set minimal set from;
	Process minimal set minimal set of class and contents;
	Instantiate minimal set  with type class, contents and contents;
	Check if minimal set equals;
	Hash code

5.20. Add a class for minimal set test. It allows to:

	Get suite;
	Create

5.21. Add a class for one size generator. It allows to:

	Instantiate one size generator  with test container generator, collection size and collection size;
	Get inner generator;
	Get samples;
	Create one size generator;
	Create array;
	Create test subject;
	Get sample elements;
	Get collection size;
	Get order

5.22. Add an interface declaration  for one size test container generator. It allows to:

	Get inner generator;
	Get sample elements;
	Get collection size

5.23. Add a class for open jdk 6 list tests. It allows to:

	Get suite;
	Suppress open jdk 6 list tests for arrays as list;
	Suppress open jdk 6 list tests for checked list

5.24. Add a class for open jdk 6 map tests. It allows to:

	Get suite;
	Suppress open jdk 6 map tests for tree map natural;
	Suppress open jdk 6 map tests for concurrent hash map;
	Suppress open jdk 6 map tests for concurrent skip list map

5.25. Add a class for open jdk 6 queue tests. It allows to:

	Get suite;
	Suppress open jdk 6 queue tests for priority blocking queue;
	Suppress open jdk 6 queue tests for priority queue

5.26. Add a class for open jdk 6 set tests. It allows to:

	Get suite;
	Suppress open jdk 6 set tests for tree set natural;
	Suppress open jdk 6 set tests for checked set

5.27. Add a class for open jdk 6 tests. It allows to:

	Get suite

5.28. Add a class for platform. It allows to:

	Clone array;
	Check cast;
	Get format;
	Instantiate platform

5.29. Add a class for queue test suite builder. It allows to:

	Using test queue generator;
	Skip collection tests;
	Get testers

5.30. Add a class for reserializing test collection generator. It allows to:

	Instantiate reserializing test collection generator  with delegate test collection generator;
	Handle new instance;
	Create reserializing test collection generator;
	Get reserialize;
	Get samples;
	Create array;
	Get order

5.31. Add a class for reserializing test set generator. It allows to:

	Instantiate reserializing test set generator  with delegate test set generator;
	Handle new instance;
	Create reserializing test set generator

5.32. Add a class for safe tree map. It allows to:

	Compare;
	Instantiate safe tree map;
	Instantiate safe tree map  with comparator;
	Instantiate safe tree map  with map;
	Instantiate safe tree map  with sorted map;
	Instantiate safe tree map  with delegate navigable map;
	Get ceiling entry;
	Get ceiling key;
	Handle clear;
	Get comparator;
	Check if safe tree map contains key;
	Check if safe tree map contains value;
	Descending key set;
	Descending map;
	Get entry set;
	Delegate;
	Check if  contains;
	Get iterator;
	Get size;
	Remove;
	First entry;
	First key;
	Get floor entry;
	Get floor key;
	Get safe tree map;
	Head map;
	Handle higher entry;
	Handle higher key;
	Check if safe tree map is empty;
	Handle key set;
	Handle last entry;
	Handle last key;
	Handle lower entry;
	Handle lower key;
	Handle navigable key set;
	Poll first entry;
	Poll last entry;
	Put key;
	Put map;
	Remove safe tree map;
	Sub map;
	Get tail map;
	Get values;
	Check valid;
	Check if safe tree map equals;
	Hash code;
	Convert safe tree map to string

5.33. Add a class for safe tree set. It allows to:

	Compare;
	Instantiate safe tree set;
	Instantiate safe tree set  with collection;
	Instantiate safe tree set  with comparator;
	Instantiate safe tree set  with sorted set;
	Instantiate safe tree set  with delegate navigable set;
	Add element;
	Add collection;
	Get ceiling;
	Handle clear;
	Get comparator;
	Check if safe tree set contains;
	Check if safe tree set contains all;
	Descending iterator;
	Descending set;
	First safe tree set;
	Get floor;
	Get head set;
	Handle higher;
	Check if safe tree set is empty;
	Get iterator;
	Handle last;
	Handle lower;
	Get poll first;
	Poll last;
	Remove safe tree set;
	Remove collection;
	Retain collection;
	Get size;
	Handle sub set;
	Handle tail set;
	Convert safe tree set to array;
	Check valid;
	Check if safe tree set equals;
	Hash code;
	Convert safe tree set to string

5.34. Add a class for safe tree set test. It allows to:

	Get suite;
	Create;
	Get order;
	Handle test view serialization;
	Handle test empty serialization;
	Handle test single serialization;
	Test several serialization

5.35. Add a class for sorted map interface test. It allows to:

	Instantiate sorted map interface test;
	Make empty map;
	Make populated map;
	Make either map;
	Handle test tail map write through;
	Handle test tail map remove through;
	Handle test tail map clear through

5.36. Add a class for sorted map test suite builder. It allows to:

	Using test sorted map generator;
	Get testers;
	Create test suite;
	Create derived suites;
	Create derived key set suite;
	Get implied features;
	Create submap suite;
	Handle new builder using

5.37. Add a class for sorted set test suite builder. It allows to:

	Using test sorted set generator;
	Get testers;
	Create test suite;
	Create derived suites;
	Create subset suite;
	Handle new builder using

5.38. Add a class for test character list generator. It allows to:

	Get samples;
	Create test character list generator;
	Create elements character;
	Create array;
	Get order

5.39. Add an interface declaration  for test collection generator

5.40. Add a class for test colliding set generator. It allows to:

	Get samples;
	Create array;
	Get order

5.41. Add an interface declaration  for test container generator. It allows to:

	Get samples;
	Create test container generator;
	Create array;
	Get order

5.42. Add a class for test enum map generator. It allows to:

	Get samples;
	Create test enum map generator;
	Create entries entry;
	Create array;
	Create key array;
	Create value array;
	Get order

5.43. Add a class for test enum set generator. It allows to:

	Get samples;
	Create test enum set generator;
	Create elements an enum;
	Create array;
	Get order

5.44. Add a class for test integer set generator. It allows to:

	Get samples;
	Create test integer set generator;
	Create elements integer;
	Create array;
	Get order

5.45. Add a class for test integer sorted set generator. It allows to:

	Create elements integer;
	Get order

5.46. Add an interface declaration  for test iterator generator. It allows to:

	Get test iterator generator

5.47. Add an interface declaration  for test list generator. It allows to:

	Create test list generator

5.48. Add a class for test map entry set generator. It allows to:

	Instantiate test map entry set generator  with keys sample elements, values sample elements and values sample elements;
	Get samples;
	Create test map entry set generator;
	Create entries entry from entries;
	Create array;
	Get order

5.49. Add an interface declaration  for test map generator. It allows to:

	Create key array;
	Create value array

5.50. Add an interface declaration  for test queue generator. It allows to:

	Create test queue generator

5.51. Add an interface declaration  for test set generator. It allows to:

	Create test set generator

5.52. Add an interface declaration  for test sorted map generator. It allows to:

	Create test sorted map generator;
	Process test sorted map generator test sorted map generator below samples lesser;
	Process test sorted map generator test sorted map generator below samples greater;
	Process test sorted map generator test sorted map generator above samples lesser;
	Process test sorted map generator test sorted map generator above samples greater

5.53. Add an interface declaration  for test sorted set generator. It allows to:

	Create test sorted set generator;
	Process test sorted set generator test sorted set generator below samples lesser;
	Process test sorted set generator test sorted set generator below samples greater;
	Process test sorted set generator test sorted set generator above samples lesser;
	Process test sorted set generator test sorted set generator above samples greater

5.54. Add a class for test string collection generator. It allows to:

	Get samples;
	Create test string collection generator;
	Create array;
	Get order

5.55. Add a class for test string list generator. It allows to:

	Get samples;
	Create test string list generator;
	Create array;
	Get order

5.56. Add a class for test string map generator. It allows to:

	Get samples;
	Create test string map generator;
	Create entries entry;
	Create array;
	Create key array;
	Create value array;
	Get order

5.57. Add a class for test string queue generator. It allows to:

	Get samples;
	Create test string queue generator;
	Create array;
	Get order

5.58. Add a class for test string set generator. It allows to:

	Get samples;
	Create test string set generator;
	Create array;
	Get order

5.59. Add a class for test string sorted map generator. It allows to:

	Process test string sorted map generator test string sorted map generator below samples lesser;
	Process test string sorted map generator test string sorted map generator below samples greater;
	Process test string sorted map generator test string sorted map generator above samples lesser;
	Process test string sorted map generator test string sorted map generator above samples greater;
	Get order;
	Create entries entry;
	Create test string sorted map generator

5.60. Add a class for test string sorted set generator. It allows to:

	Create test string sorted set generator;
	Get order;
	Process test string sorted set generator test string sorted set generator below samples lesser;
	Process test string sorted set generator test string sorted set generator below samples greater;
	Process test string sorted set generator test string sorted set generator above samples lesser;
	Process test string sorted set generator test string sorted set generator above samples greater

5.61. Add an interface declaration  for test subject generator. It allows to:

	Create test subject

5.62. Add a class for test unhashable collection generator. It allows to:

	Get samples;
	Create test unhashable collection generator;
	Create elements unhashable object;
	Create array;
	Get order

5.63. Add a class for tests for lists in java util. It allows to:

	Get suite;
	All tests;
	Suppress tests for lists in java util for empty list;
	Suppress tests for lists in java util for singleton list;
	Suppress tests for lists in java util for arrays as list;
	Suppress tests for lists in java util for array list;
	Suppress tests for lists in java util for linked list;
	Suppress tests for lists in java util for copy on write array list;
	Suppress tests for lists in java util for unmodifiable list;
	Suppress tests for lists in java util for checked list;
	Suppress tests for lists in java util for abstract list;
	Suppress tests for lists in java util for abstract sequential list;
	Suppress tests for lists in java util for vector;
	Get tests for empty list;
	Create;
	Get tests for singleton list;
	Get tests for arrays as list;
	Get tests for array list;
	Get tests for linked list;
	Get tests for copy on write array list;
	Get tests for unmodifiable list;
	Get tests for checked list;
	Get tests for abstract list;
	Get size;
	Get;
	Get tests for abstract sequential list;
	Get list iterator;
	Get tests for vector;

5.64. Add a class for tests for queues in java util. It allows to:

	Get suite;
	All tests;
	Suppress tests for queues in java util for array deque;
	Suppress tests for queues in java util for linked list;
	Suppress tests for queues in java util for array blocking queue;
	Suppress tests for queues in java util for concurrent linked queue;
	Suppress tests for queues in java util for linked blocking deque;
	Suppress tests for queues in java util for linked blocking queue;
	Suppress tests for queues in java util for priority blocking queue;
	Suppress tests for queues in java util for priority queue;
	Get tests for array deque;
	Create;
	Get tests for linked list;
	Get tests for array blocking queue;
	Get tests for concurrent linked queue;
	Get tests for linked blocking deque;
	Get tests for linked blocking queue;
	Get tests for priority blocking queue;
	Get tests for priority queue;

5.65. Add a class for unhashable object. It allows to:

	Instantiate unhashable object;
	Check if unhashable object equals;
	Hash code;
	Convert unhashable object to string;
	Compare  to unhashable object

6. Changes to package com.google.common.collect.testing.features:  

6.1. Add a class for conflicting requirements exception. It allows to:

	Instantiate conflicting requirements exception  with conflicts set;
	Get conflicts;
	Get source;
	Get message

6.2. Add a class for example base interface tester. It allows to:

	Do example base interface tester not actually run this

Add a local a class for example derived interface tester. It allows to:

	Handle test requiring two explicit derived features;
	Handle test requiring all three derived features;
	Handle test requiring conflicting features

Add a local a class for conflicting requirements example derived interface tester. It allows to:

	Handle test test feature enums;
	Handle test add implied features returns same set instance;
	Handle test add implied features adds implied features;
	Handle test implied features returns new set instance;
	Handle test implied features returns implied features;
	Handle test build tester requirements class;
	Handle test build tester requirements method;
	Handle test build tester requirements class class conflict;
	Handle test build tester requirements method class conflict;
	Handle test build declared tester requirements

6.3. Add an interface declaration  for feature. It allows to:

	Get implied features

6.4. Add a class for feature enum test. It allows to:

	Assert good tester annotation;
	Assert good feature enum;
	Process feature enum test feature enum test as annotation;
	Handle test feature enums;
	Root locale format

6.5. Add a class for feature util. It allows to:

	Add implied features;
	Get implied features;
	Get tester requirements;
	Build tester requirements;
	Build declared tester requirements;
	Get tester annotations;
	Incorporate requirements;
	Check conflict;
	Get intersection

6.6. Add a class for tester requirements. It allows to:

	Instantiate tester requirements  with present features set, absent features set and absent features set;
	Instantiate tester requirements  with tr tester requirements;
	Instantiate tester requirements;
	Get present features;
	Get absent features;
	Check if tester requirements equals;
	Hash code;
	Convert tester requirements to string

7. Changes to package com.google.common.collect.testing.google:  

7.1. Add a class for abstract bi map tester. It allows to:

	Get map;
	Reverse entry;
	Expect contents;
	Missing entries entry

7.2. Add a class for abstract list multimap tester. It allows to:

	Get key;

7.3. Add a class for abstract multimap tester. It allows to:

	Get multimap;
	Create array  with null key;
	Create array  with null value;
	Create array  with null key and value;
	Get value  for null key;
	Get key  for null value;
	Get entry null replaces;
	Handle init multimap with null key;
	Handle init multimap with null value;
	Handle init multimap with null key and value;
	Get sample keys;
	Get sample values;
	Handle actual contents;
	Reset container;
	Reset collection;
	Get key;
	Get k 0;
	V abstract multimap tester;
	Get k 1;
	Convert k;
	Get k 3;
	Get k 4;

7.4. Add a class for abstract multiset set count tester. It allows to:

	Assert set count;
	Set count check return value;
	Set count no check return value;
	Assert set count increasing failure;
	Assert set count decreasing failure;
	Assert zero  to zero;
	Assert one  to one;
	Assert three  to three;
	Handle test set count zero to zero add supported;
	Handle test set count zero to zero remove supported;
	Convert test set count zero;
	Handle test set count one to one add supported;
	Handle test set count one to one remove supported;
	Convert test set count one;
	Handle test set count three to three add supported;
	Handle test set count three to three remove supported;
	Convert test set count three;
	Handle test set count zero to one supported;
	Handle test set count zero to three supported;
	Handle test set count one to three supported;
	Handle test set count one to zero supported;
	Handle test set count three to zero supported;
	Handle test set count three to one supported;
	Handle test set count remove null null supported;
	Handle test set count add null null supported;
	Handle test set count add null null unsupported;
	Handle test set count no op null null supported;
	Handle test set count no op null null unsupported;
	Handle test set count existing no nop null null supported;
	Handle test set count negative remove supported;
	Handle test set count negative remove unsupported;
	Get set count duplicate initializing methods;
	Get method

7.5. Add a class for abstract multiset tester. It allows to:

	Get multiset;
	Init three copies

7.6. Add a class for bi map clear tester. It allows to:

	Handle test clear clears inverse;
	Handle test key set clear clears inverse;
	Handle test values clear clears inverse;
	Handle test clear inverse clears;
	Handle test clear inverse key set clears;
	Handle test clear inverse values clears

7.7. Add a class for bi map put tester. It allows to:

	Handle test put with same value fails;
	Handle test put present key different value;
	Put distinct keys distinct values;
	Handle test force put key present;
	Handle test force put value present;
	Handle test force put key and value present;
	Handle test force put null key present;
	Handle test force put null value present;
	Handle test inverse put

7.8. Add a class for bi map remove tester. It allows to:

	Handle test remove key removes from inverse;
	Handle test remove key from key set removes from inverse;
	Handle test remove from values removes from inverse;
	Handle test remove from inverse removes from forward;
	Handle test remove from inverse key set removes from forward;
	Handle test remove from inverse values removes from inverse;
	Handle test key set iterator remove

7.9. Add a class for bi map test suite builder. It allows to:

	Using test bi map generator;
	Get testers;
	Get implied features;
	Create derived suites;
	Compute inverse features;
	Compute values set features;
	Compute common derived collection features

7.10. Add a class for google helpers. It allows to:

	Instantiate google helpers;
	Assert empty

7.11. Add a class for list multimap as map tester. It allows to:

	Handle test as map values implement list;
	Handle test as map get implements list;
	Handle test as map remove implements list;
	Handle test equals;
	Handle test entry set equals;
	Handle test values remove

7.12. Add a class for list multimap equals tester. It allows to:

	Handle test ordering affects equals comparisons

7.13. Add a class for list multimap put all tester. It allows to:

	Handle test put all adds at end in order

7.14. Add a class for list multimap put tester. It allows to:

	Handle test put adds value at end;
	Handle test put duplicate value

7.15. Add a class for list multimap remove tester. It allows to:

	Handle test multimap remove deletes first occurrence;
	Handle test remove at index from get propagates;
	Handle test remove at index from as map propagates;
	Handle test remove at index from as map entry set propagates

7.16. Add a class for list multimap replace values tester. It allows to:

	Handle test replace values preserves order

7.17. Add a class for multimap as map get tester. It allows to:

	Convert test propagates remove;
	Convert test propagates remove last element;
	Convert test propagates clear;
	Handle test add null value;
	Handle test remove null value;
	Handle test add null value unsupported;
	Convert test propagates add;
	Convert test propagates remove then add;
	Handle test reflects multimap remove

7.18. Add a class for multimap as map tester. It allows to:

	Handle test as map get;
	Handle test as map get null key present;
	Handle test as map get null key absent;
	Handle test as map get null key unsupported;
	Handle test as map remove;
	Handle test as map entry set reflects put same key;
	Handle test as map entry set reflects put different key;
	Convert test as map entry set remove propagates;
	Convert test as map entry set iterator remove propagates

7.19. Add a class for multimap clear tester. It allows to:

	Handle test clear unsupported;
	Cleared multimap clear tester;
	Handle test clear;
	Handle test clear through entries;
	Handle test clear through as map;
	Handle test clear through key set;
	Handle test clear through keys;
	Handle test clear through values;
	Convert test clear propagates;

7.20. Add a class for multimap contains entry tester. It allows to:

	Handle test contains entry yes;
	Handle test contains entry no;
	Handle test contains entry agrees with get;
	Handle test contains entry null yes;
	Handle test contains entry null no;
	Handle test contains entry null disallowed because key queries disallowed;
	Handle test contains entry null disallowed because value queries disallowed

7.21. Add a class for multimap contains key tester. It allows to:

	Handle test contains key yes;
	Handle test contains key no;
	Handle test contains keys from key set;
	Handle test contains key agrees with get;
	Handle test contains key agrees with as map;
	Handle test contains key agrees with key set;
	Handle test contains key null present;
	Handle test contains key null absent;
	Handle test contains key null disallowed

7.22. Add a class for multimap contains value tester. It allows to:

	Handle test contains value yes;
	Handle test contains value no;
	Handle test contains null value yes;
	Handle test contains null value no;
	Handle test contains null value fails

7.23. Add a class for multimap entries tester. It allows to:

	Handle test entries;
	Handle test contains entry with null key present;
	Handle test contains entry with null key absent;
	Handle test contains entry with null value present;
	Handle test contains entry with null value absent;
	Convert test remove propagates;
	Convert test remove all propagates;
	Convert test retain all propagates;
	Convert test iterator remove propagates;
	Handle test entries remain valid after remove

7.24. Add a class for multimap equals tester. It allows to:

	Handle test equals true;
	Handle test equals false;
	Handle test equals multimap with null key;
	Handle test equals multimap with null value;
	Handle test not equals empty;
	Handle test hash code matches as map

7.25. Add a class for multimap get tester. It allows to:

	Handle test get empty;
	Handle test get non empty;
	Handle test get multiple;
	Handle test get absent key;
	Convert test propagates remove;
	Convert test propagates remove last element;
	Convert test propagates add;
	Convert test propagates add all;
	Convert test propagates remove last then add;
	Handle test get null present;
	Handle test get null absent;
	Handle test get null forbidden;
	Handle test get with null value

7.26. Add a class for multimap key set tester. It allows to:

	Handle test key set;
	Handle test key set contains null key present;
	Handle test key set contains null key absent;
	Convert test key set remove propagates;
	Handle test key set iterator remove

7.27. Add a class for multimap keys tester. It allows to:

	Handle test keys;
	Handle test keys count absent null key;
	Handle test keys with null key;
	Handle test keys element set;
	Handle test keys remove;
	Handle test keys entry set iterator remove;
	Handle test keys entry set remove

7.28. Add a class for multimap put all multimap tester. It allows to:

	Handle test put unsupported;
	Handle test put all into empty;
	Handle test put all;
	Handle test put all with null value;
	Handle test put all with null key;
	Handle test put all rejects null value;
	Handle test put all rejects null key;
	Convert test put all propagates

7.29. Add a class for multimap put iterable tester. It allows to:

	Handle test put all non empty iterable on present key;
	Get iterator;
	Handle test put all non empty collection on present key;
	Handle test put all non empty iterable on absent key;
	Handle test put all non empty collection on absent key;
	Handle test put all null value on present key supported;
	Handle test put all null value on absent key supported;
	Handle test put all null value single unsupported;
	Handle test put all null value null last unsupported;
	Handle test put all null value null first unsupported;
	Handle test put all on present null key;
	Handle test put all null forbidden;
	Handle test put all empty collection on absent key;
	Handle test put all empty iterable on absent key;
	Handle test put all empty iterable on present key;
	Handle test put all only calls iterator once;
	Convert test put all propagates

7.30. Add a class for multimap put tester. It allows to:

	Handle test put unsupported;
	Handle test put empty;
	Handle test put present;
	Handle test put two elements;
	Handle test put null value supported;
	Handle test put null value unsupported;
	Handle test put null key;
	Convert test put not present key propagates;
	Convert test put present key propagates;

7.31. Add a class for multimap remove all tester. It allows to:

	Handle test remove all absent key;
	Handle test remove all present key;
	Convert test remove all propagates;
	Handle test remove all multiple values;
	Handle test remove all null key present;
	Handle test remove all null key absent

7.32. Add a class for multimap remove entry tester. It allows to:

	Handle test remove absent;
	Handle test remove present;
	Handle test remove null key present;
	Handle test remove null value present;
	Handle test remove null key absent;
	Handle test remove null value absent;
	Handle test remove null value forbidden;
	Handle test remove null key forbidden;
	Convert test remove propagates;

7.33. Add a class for multimap replace values tester. It allows to:

	Handle test replace values with null value;
	Handle test replace values with null key;
	Handle test replace empty values;
	Handle test replace values with empty;
	Handle test replace values with duplicates;
	Handle test replace non empty values;
	Convert test replace values propagates;
	Handle test replace values remove not supported;
	Handle test replace values put not supported

7.34. Add a class for multimap size tester. It allows to:

	Handle test size;
	Handle test is empty yes;
	Handle test is empty no;
	Handle test size null key;
	Handle test size null value;
	Handle test size null key and value;
	Handle test size multiple values

7.35. Add a class for multimap to string tester. It allows to:

	Convert test;

7.36. Add a class for multimap values tester. It allows to:

	Handle test values;
	Handle test values in order;
	Handle test values iterator remove

7.37. Add a class for multiset add tester. It allows to:

	Handle test add unsupported;
	Handle test add means add one;
	Handle test add occurrences zero;
	Handle test add occurrences;
	Handle test add several times;
	Handle test add occurrences unsupported;
	Handle test add occurrences negative;
	Handle test add too many;
	Handle test add all empty set;
	Handle test add all empty multiset;
	Handle test add all non empty list;
	Handle test add all non empty multiset

7.38. Add a class for multiset contains tester. It allows to:

	Handle test contains all multiset ignores frequency;
	Handle test contains all list ignores frequency

7.39. Add a class for multiset count tester. It allows to:

	Handle test count 0;
	Handle test count 1;
	Handle test count 3;
	Handle test count null absent;
	Handle test count null forbidden;
	Handle test count null present;
	Handle test count wrong type;
	Get count duplicate initializing methods

7.40. Add a class for multiset element set tester. It allows to:

	Handle test element set reflects add absent;
	Handle test element set reflects remove;
	Convert test element set remove propagates;
	Convert test element set remove duplicate propagates;
	Handle test element set remove absent;
	Handle test element set clear;
	Get element set duplicate initializing methods

7.41. Add a class for multiset entry set tester. It allows to:

	Handle test entry set clear;
	Handle test entry set iterator remove propagates;
	Handle test entry set remove present;
	Handle test entry set remove absent;
	Handle test entry set remove all present;
	Handle test entry set remove all absent;
	Handle test entry set retain all present;
	Handle test entry set retain all absent;
	Handle test entry view reflects remove;
	Handle test entry reflects iterator remove;
	Handle test entry reflects clear;
	Handle test entry reflects entry set clear;
	Handle test entry reflects entry set iterator remove;
	Handle test entry reflects element set clear;
	Handle test entry reflects element set iterator remove;
	Handle test entry reflects remove then add;
	Convert test

7.42. Add a class for multiset equals tester. It allows to:

	Handle test equals same contents;
	Handle test not equals empty;
	Handle test hash code matches entry set;
	Handle test equals multiset with null value

7.43. Add a class for multiset iterator tester. It allows to:

	Handle test removing iterator known order;
	Handle new target iterator;
	Handle test removing iterator unknown order;
	Handle test iterator known order;
	Handle test iterator unknown order;
	Get iterator duplicate initializing methods

7.44. Add a class for multiset navigation tester. It allows to:

	Cast iterable multiset;
	Set multiset navigation tester;
	Reset multiset navigation tester with hole;
	Handle test empty multiset first;
	Handle test empty multiset poll first;
	Handle test empty multiset nearby;
	Handle test empty multiset last;
	Handle test empty multiset poll last;
	Handle test singleton multiset first;
	Handle test singleton multiset poll first;
	Handle test singleton multiset nearby;
	Handle test singleton multiset last;
	Handle test singleton multiset poll last;
	Handle test first;
	Handle test poll first;
	Handle test poll first unsupported;
	Test lower;
	Handle test floor;
	Test ceiling;
	Handle test higher;
	Handle test last;
	Handle test poll last;
	Handle test poll last unsupported;
	Handle test descending navigation;
	Expect add failure;
	Expect sorted multiset;
	Expect set count failure;
	Handle test add out of tail bounds one;
	Handle test add out of tail bounds several;
	Handle test add out of head bounds one;
	Handle test add out of head bounds several;
	Handle test remove out of tail bounds one;
	Handle test remove out of tail bounds several;
	Handle test remove out of head bounds one;
	Handle test remove out of head bounds several;
	Handle test set count out of tail bounds one;
	Handle test set count out of tail bounds several;
	Handle test set count out of head bounds one;
	Handle test set count out of head bounds several;
	Handle test add with conflicting bounds;
	Handle test conflicting bounds;
	Handle test empty range sub multiset;
	Handle test empty range sub multiset supporting add;
	Handle total size;
	Get expected entries;
	Get sub multiset;
	Handle test sub multiset entry set;
	Handle test sub multiset size;
	Handle test sub multiset distinct elements;
	Handle test tail closed entry set;
	Handle test tail closed size;
	Handle test tail closed distinct elements;
	Handle test tail open entry set;
	Handle test tail open size;
	Handle test tail open distinct elements;
	Handle test head closed entry set;
	Handle test head closed size;
	Handle test head closed distinct elements;
	Handle test head open entry set;
	Handle test head open size;
	Handle test head open distinct elements;
	Handle test clear tail open;
	Handle test clear tail open entry set;
	Handle test clear tail closed;
	Handle test clear tail closed entry set;
	Handle test clear head open;
	Handle test clear head open entry set;
	Handle test clear head closed;
	Handle test clear head closed entry set

7.45. Add a class for multiset reads tester. It allows to:

	Handle test element set contains;
	Handle test entry set contains;
	Handle test entry set contains count 0;
	Handle test entry set contains nonentry;
	Handle test entry set twice;
	Handle test entry set hash code size 0;
	Handle test entry set hash code size 1;
	Handle test equals yes;
	Handle test equals different size;
	Handle test equals different elements;
	Handle test hash code size 0;
	Handle test hash code size 1

7.46. Add a class for multiset remove tester. It allows to:

	Handle test remove negative;
	Handle test remove unsupported;
	Handle test remove zero no op;
	Handle test remove occurrences present;
	Handle test remove some occurrences present;
	Handle test remove occurrences absent;
	Handle test remove occurrences unsupported absent;
	Handle test remove occurrences 0;
	Handle test remove occurrences negative;
	Handle test remove occurrences wrong type;
	Handle test remove null present;
	Handle test remove null absent;
	Handle test remove null forbidden;
	Handle test remove all ignores count;
	Handle test retain all ignores count;
	Get remove duplicate initializing methods

7.47. Add a class for multiset serialization tester. It allows to:

	Handle test entry set serialization;
	Handle test element set serialization

7.48. Add a class for multiset set count conditionally tester. It allows to:

	Set count check return value;
	Set count no check return value;
	Set count;
	Assert set count negative old count;
	Handle test set count conditional negative old count add supported;
	Handle test set count conditional negative old count add unsupported;
	Handle test set count conditional old count too large;
	Handle test set count conditional old count too small zero;
	Handle test set count conditional old count too small nonzero

7.49. Add a class for multiset set count unconditionally tester. It allows to:

	Set count check return value;
	Set count no check return value;
	Set count

7.50. Add a class for set multimap as map tester. It allows to:

	Handle test as map values implement set;
	Handle test as map get implements set;
	Handle test as map remove implements set;
	Handle test equals;
	Handle test entry set equals;
	Handle test values remove

7.51. Add a class for set multimap equals tester. It allows to:

	Handle test ordering doesnt affect equals comparisons

7.52. Add a class for set multimap put all tester. It allows to:

	Handle test put all handles duplicates

7.53. Add a class for set multimap put tester. It allows to:

	Handle test put duplicate value preserves size;
	Handle test put duplicate value;
	Handle test put duplicate value null

7.54. Add a class for set multimap replace values tester. It allows to:

	Handle test replace values handles duplicates

7.55. Add a class for sorted set multimap as map tester. It allows to:

	Handle test as map values implement sorted set;
	Handle test as map get implements sorted set;
	Handle test as map remove implements sorted set

7.56. Add a class for sorted set multimap get tester. It allows to:

	Handle test value comparator

7.57. Add a class for sorted set multimap test suite builder. It allows to:

	Using test set multimap generator;
	Get testers;
	Compute multimap get test suite;
	Compute multimap  as map get test suite

7.58. Add an interface declaration  for test bi map generator. It allows to:

	Create key array;
	Create value array

7.59. Add a class for test enum multiset generator. It allows to:

	Get samples;
	Create test enum multiset generator;
	Create elements an enum;
	Create array;
	Get order

7.60. Add an interface declaration  for test list multimap generator

7.61. Add an interface declaration  for test multimap generator. It allows to:

	Create key array;
	Create value array;
	Get sample keys;
	Get sample values;
	Create collection

7.62. Add an interface declaration  for test multiset generator. It allows to:

	Create test multiset generator

7.63. Add an interface declaration  for test set multimap generator

7.64. Add a class for test string bi map generator. It allows to:

	Get samples;
	Create test string bi map generator;
	Create entries entry;
	Create array;
	Create key array;
	Create value array;
	Get order

7.65. Add a class for test string list multimap generator. It allows to:

	Get samples;
	Get sample keys;
	Get sample values;
	Create collection;
	Create test string list multimap generator;
	Create entries entry;
	Create array;
	Create key array;
	Create value array;
	Get order

7.66. Add a class for test string multiset generator. It allows to:

	Get samples;
	Create test string multiset generator;
	Create array;
	Get order

7.67. Add a class for test string set multimap generator. It allows to:

	Get samples;
	Get sample keys;
	Get sample values;
	Create collection;
	Create test string set multimap generator;
	Create entries entry;
	Create array;
	Create key array;
	Create value array;
	Get order

7.68. Add a class for unmodifiable collection tests. It allows to:

	Assert map entry is unmodifiable;
	Assert iterator is unmodifiable;
	Assert iterators  in order;
	Assert collection is unmodifiable;
	Assert set is unmodifiable;
	Assert multiset is unmodifiable;
	Get count;
	Get element;
	Assert multimap is unmodifiable;
	Assert collections are equivalent;
	Assert multimap remains unmodified

8. Changes to package com.google.common.collect.testing.testers:  

8.1. Add a class for abstract list index of tester. It allows to:

	Find abstract list index of tester;
	Get method name;
	Handle test find yes;
	Handle test find no;
	Handle test find null not contained but supported;
	Handle test find null not contained and unsupported;
	Handle test find non null when null contained;
	Handle test find null contained;
	Handle test find wrong type

8.2. Add a class for abstract list tester. It allows to:

	Get list;
	Expect contents;
	Report context

8.3. Add a class for abstract queue tester. It allows to:

	Get queue

8.4. Add a class for abstract set tester. It allows to:

	Set abstract set tester

8.5. Add a class for collection add all tester. It allows to:

	Handle test add all supported nothing;
	Handle test add all unsupported nothing;
	Handle test add all supported none present;
	Handle test add all unsupported none present;
	Handle test add all supported some present;
	Handle test add all unsupported some present;
	Handle test add all concurrent with iteration;
	Handle test add all unsupported all present;
	Handle test add all null supported;
	Handle test add all null unsupported;
	Handle test add all null collection reference;
	Get add all null unsupported method;
	Get add all unsupported none present method;
	Get add all unsupported some present method

8.6. Add a class for collection add tester. It allows to:

	Handle test add supported not present;
	Handle test add unsupported not present;
	Handle test add unsupported present;
	Handle test add null supported;
	Handle test add null unsupported;
	Handle test add concurrent with iteration;
	Get add null supported method;
	Get add null unsupported method;
	Get add unsupported  not present method

8.7. Add a class for collection clear tester. It allows to:

	Handle test clear;
	Handle test clear unsupported;
	Handle test clear unsupported by empty collection;
	Handle test clear concurrent with iteration

8.8. Add a class for collection contains all tester. It allows to:

	Handle test contains all empty;
	Handle test contains all subset;
	Handle test contains all same elements;
	Handle test contains all self;
	Handle test contains all partial overlap;
	Handle test contains all disjoint;
	Handle test contains all null not allowed;
	Handle test contains all null allowed;
	Handle test contains all null present;
	Handle test contains all wrong type

8.9. Add a class for collection contains tester. It allows to:

	Handle test contains yes;
	Handle test contains no;
	Handle test contains null not contained but queries supported;
	Handle test contains null not contained and unsupported;
	Handle test contains non null when null contained;
	Handle test contains null contained;
	Handle test contains wrong type

8.10. Add a class for collection creation tester. It allows to:

	Handle test create with null supported;
	Handle test create with null unsupported;
	Get create  with null unsupported method

8.11. Add a class for collection equals tester. It allows to:

	Handle test equals self;
	Handle test equals null;
	Handle test equals not A collection

8.12. Add a class for collection is empty tester. It allows to:

	Handle test is empty yes;
	Handle test is empty no

8.13. Add a class for collection iterator tester. It allows to:

	Handle test iterator;
	Handle test iteration ordering;
	Handle test iterator remove affects backing collection;
	Handle test iterator known order remove supported;
	Handle test iterator known order remove unsupported;
	Handle test iterator unknown order remove supported;
	Handle test iterator unknown order remove unsupported;
	Run iterator test;
	Handle new target iterator;
	Verify elements list;
	Handle test iterator no such element exception

8.14. Add a class for collection remove all tester. It allows to:

	Handle test remove all empty collection;
	Handle test remove all none present;
	Handle test remove all all present;
	Handle test remove all some present;
	Handle test remove all some present concurrent with iteration;
	Convert test remove all some present large collection;
	Handle test remove all unsupported empty collection;
	Handle test remove all unsupported none present;
	Handle test remove all unsupported present;
	Handle test remove all null collection reference empty subject;
	Handle test remove all null collection reference non empty subject;
	Handle test remove all contains null no;
	Handle test remove all contains null no but allowed;
	Handle test remove all contains null yes;
	Handle test remove all contains wrong type

8.15. Add a class for collection remove tester. It allows to:

	Handle test remove present;
	Handle test remove present concurrent with iteration;
	Handle test remove not present;
	Handle test remove null present;
	Handle test remove unsupported;
	Handle test remove unsupported not present;
	Handle test remove null not supported;
	Handle test remove null allowed;
	Handle test iterator remove unsupported;
	Handle test remove wrong type

8.16. Add a class for collection serialization equal tester. It allows to:

	Handle test reserialize

8.17. Add a class for collection serialization tester. It allows to:

	Handle test reserialize

8.18. Add a class for collection size tester. It allows to:

	Handle test size

8.19. Add a class for collection to array tester. It allows to:

	Convert test;
	Handle test to array empty array ordered;
	Handle test to array right sized array ordered;
	Handle test to array right sized array of object ordered;
	Handle test to array oversized array ordered;
	Expect array contents any order;
	Expect array contents  in order;
	Get collection to array tester to array is plain object array method

8.20. Add a class for collection to string tester. It allows to:

	Convert test;

8.21. Add a class for concurrent map put if absent tester. It allows to:

	Get map;
	Handle test put if absent supported absent;
	Handle test put if absent supported present;
	Handle test put if absent unsupported absent;
	Handle test put if absent unsupported present existing value;
	Handle test put if absent unsupported present different value;
	Handle test put if absent null key unsupported;
	Handle test put if absent null value unsupported;
	Handle test put if absent put with null value unsupported;
	Put entry if absent

8.22. Add a class for concurrent map remove tester. It allows to:

	Get map;
	Handle test remove supported present;
	Handle test remove supported present key wrong value;
	Handle test remove supported wrong key present value;
	Handle test remove supported absent key absent value;
	Handle test remove null key queries unsupported;
	Handle test remove null value queries unsupported;
	Handle test remove unsupported present;
	Handle test remove unsupported absent

8.23. Add a class for concurrent map replace entry tester. It allows to:

	Get map;
	Handle test replace entry supported present;
	Handle test replace entry supported present unchanged;
	Handle test replace entry supported wrong value;
	Handle test replace entry supported absent key;
	Handle test replace entry present null value unsupported;
	Handle test replace entry wrong value null value unsupported;
	Handle test replace entry absent key null value unsupported;
	Handle test replace entry null different from absent;
	Handle test replace entry expect null unsupported;
	Handle test replace entry unsupported present;
	Handle test replace entry unsupported wrong value;
	Handle test replace entry unsupported absent key

8.24. Add a class for concurrent map replace tester. It allows to:

	Get map;
	Handle test replace supported present;
	Handle test replace supported present no change;
	Handle test replace supported absent;
	Handle test replace present null value unsupported;
	Handle test replace absent null value unsupported;
	Handle test replace absent null key unsupported;
	Handle test replace unsupported present

8.25. Add a class for list add all at index tester. It allows to:

	Handle test add all at index supported all present;
	Handle test add all at index unsupported all present;
	Handle test add all at index supported some present;
	Handle test add all at index unsupported some present;
	Handle test add all at index supported nothing;
	Handle test add all at index unsupported nothing;
	Handle test add all at index with duplicates;
	Handle test add all at index null supported;
	Handle test add all at index null unsupported;
	Handle test add all at index middle;
	Handle test add all at index end;
	Handle test add all at index null collection reference;
	Handle test add all at index negative;
	Handle test add all at index too large

8.26. Add a class for list add all tester. It allows to:

	Handle test add all supported all present;
	Handle test add all unsupported all present;
	Handle test add all with duplicates

8.27. Add a class for list add at index tester. It allows to:

	Handle test add at index supported present;
	Handle test add at index unsupported present;
	Handle test add at index supported not present;
	Handle test add at index concurrent with iteration;
	Handle test add at index unsupported not present;
	Handle test add at index middle;
	Handle test add at index end;
	Handle test add at index null supported;
	Handle test add at index null unsupported;
	Handle test add at index negative;
	Handle test add at index too large;
	Get add null supported method

8.28. Add a class for list add tester. It allows to:

	Handle test add supported present;
	Handle test add unsupported present;
	Handle test add supported null present;
	Get add supported null present method

8.29. Add a class for list creation tester. It allows to:

	Handle test create with duplicates

8.30. Add a class for list equals tester. It allows to:

	Handle test equals other list with same elements;
	Handle test equals other list with different elements;
	Handle test equals other list containing null;
	Handle test equals containing null;
	Handle test equals shorter list;
	Handle test equals longer list;
	Handle test equals set

8.31. Add a class for list get tester. It allows to:

	Handle test get valid;
	Handle test get negative;
	Handle test get too large

8.32. Add a class for list hash code tester. It allows to:

	Handle test hash code;
	Get hash code method

8.33. Add a class for list index of tester. It allows to:

	Find list index of tester;
	Get method name;
	Handle test index of duplicate

8.34. Add a class for list last index of tester. It allows to:

	Find list last index of tester;
	Get method name;
	Handle test last index of duplicate

8.35. Add a class for list list iterator tester. It allows to:

	Handle test list iterator unmodifiable;
	Handle test list iterator fully modifiable;
	Run list iterator test;
	Handle new target iterator;
	Verify elements list;
	Handle test list iterator too low;
	Handle test list iterator too high;
	Handle test list iterator at size;
	Get list iterator  fully modifiable method;
	Get list iterator unmodifiable method

8.36. Add a class for list remove all tester. It allows to:

	Handle test remove all duplicate

8.37. Add a class for list remove at index tester. It allows to:

	Handle test remove at index unsupported;
	Handle test remove at index negative;
	Handle test remove at index too large;
	Handle test remove at index first;
	Handle test remove at index middle;
	Handle test remove at index concurrent with iteration;
	Handle test remove at index last;
	Run remove test

8.38. Add a class for list remove tester. It allows to:

	Handle test remove duplicate

8.39. Add a class for list retain all tester. It allows to:

	Handle test retain all duplicates kept;
	Handle test retain all duplicates removed;
	Handle test retain all count ignored

8.40. Add a class for list set tester. It allows to:

	Handle test set;
	Handle test set null;
	Handle test set replacing null;
	Do test set;
	Handle test set index too low;
	Handle test set index too high;
	Handle test set unsupported;
	Handle test set unsupported by empty list;
	Handle test set null unsupported;
	A valid index;
	Get set null supported method

8.41. Add a class for list sub list tester. It allows to:

	Handle test sub list start negative;
	Handle test sub list end too large;
	Handle test sub list start greater than end;
	Handle test sub list empty;
	Handle test sub list entire list;
	Handle test sub list sub list remove affects original;
	Handle test sub list sub list clear affects original;
	Handle test sub list sub list add affects original;
	Handle test sub list sub list set affects original;
	Handle test sub list original list set affects sub list;
	Handle test sub list sub list remove affects original large list;
	Handle test sub list sub list add at index affects original large list;
	Handle test sub list sub list set affects original large list;
	Handle test sub list original list set affects sub list large list;
	Handle test sub list of sub list empty;
	Handle test sub list of sub list non empty;
	Handle test sub list size;
	Handle test sub list is empty;
	Handle test sub list get;
	Handle test sub list contains;
	Handle test sub list index of;
	Handle test sub list last index of;
	Handle test reserialize whole sub list;
	Handle test reserialize empty sub list;
	Handle test reserialize sub list;
	Get sub list original list set affects sub list method;
	Get sub list original list set affects sub list large list method;
	Get sub list sub list remove affects original large list method

8.42. Add a class for list to array tester. It allows to:

	Convert test;
	Assert array equals

8.43. Add a class for map clear tester. It allows to:

	Handle test clear;
	Handle test clear concurrent with entry set iteration;
	Handle test clear concurrent with key set iteration;
	Handle test clear concurrent with values iteration;
	Handle test clear unsupported;
	Handle test clear unsupported by empty collection

8.44. Add a class for map contains key tester. It allows to:

	Handle test contains yes;
	Handle test contains no;
	Handle test contains null not contained but allowed;
	Handle test contains null not contained and unsupported;
	Handle test contains non null when null contained;
	Handle test contains null contained;
	Handle test contains wrong type

8.45. Add a class for map contains value tester. It allows to:

	Handle test contains yes;
	Handle test contains no;
	Handle test contains null not contained but allowed;
	Handle test contains null not contained and unsupported;
	Handle test contains non null when null contained;
	Handle test contains null contained;
	Handle test contains wrong type

8.46. Add a class for map creation tester. It allows to:

	Handle test create with null key supported;
	Handle test create with null key unsupported;
	Handle test create with null value supported;
	Handle test create with null value unsupported;
	Handle test create with null key and value supported;
	Handle test create with duplicates null duplicates not rejected;
	Handle test create with duplicates non null duplicates not rejected;
	Handle test create with duplicates null duplicates rejected;
	Handle test create with duplicates non null duplicates rejected;
	Get entries multiple null keys;
	Get entries multiple non null keys;
	Expect first removed;
	Get create  with null key unsupported method

8.47. Add a class for map entry set tester. It allows to:

	Handle test entry set iterator remove;
	Handle test contains entry with incomparable key;
	Handle test contains entry with incomparable value;
	Handle test contains entry with null key absent;
	Handle test contains entry with null key present;
	Handle test contains entry with null value absent;
	Handle test contains entry with null value present;
	Handle test set value;
	Handle test set value with null values present;
	Handle test set value with null values absent;
	Get contains entry  with incomparable key method;
	Get contains entry  with incomparable value method;
	Get set value method;
	Get set value  with null values present method;
	Get set value  with null values absent method

8.48. Add a class for map equals tester. It allows to:

	Handle test equals other map with same entries;
	Handle test equals other map with different entries;
	Handle test equals containing null key;
	Handle test equals other contains null key;
	Handle test equals containing null value;
	Handle test equals other contains null value;
	Handle test equals smaller map;
	Handle test equals larger map;
	Handle test equals list;
	Handle new hash map

8.49. Add a class for map get tester. It allows to:

	Handle test get yes;
	Handle test get no;
	Handle test get null not contained but allowed;
	Handle test get null not contained and unsupported;
	Handle test get non null when null contained;
	Handle test get null contained;
	Handle test get wrong type

8.50. Add a class for map hash code tester. It allows to:

	Handle test hash code;
	Handle test hash code containing null key;
	Handle test hash code containing null value;
	Run entry  with null test;
	Hash entry

8.51. Add a class for map is empty tester. It allows to:

	Handle test is empty yes;
	Handle test is empty no

8.52. Add a class for map put all tester. It allows to:

	Set map put all tester;
	Handle test put all supported nothing;
	Handle test put all unsupported nothing;
	Handle test put all supported none present;
	Handle test put all unsupported none present;
	Handle test put all supported some present;
	Handle test put all some present concurrent with entry set iteration;
	Handle test put all unsupported some present;
	Handle test put all unsupported all present;
	Handle test put all null key supported;
	Handle test put all null key unsupported;
	Handle test put all null value supported;
	Handle test put all null value unsupported;
	Handle test put all null collection reference;
	Handle empty map;
	Put entries iterable;
	Get put all null key unsupported method

8.53. Add a class for map put tester. It allows to:

	Set map put tester;
	Handle test put supported present;
	Handle test put supported not present;
	Handle test put absent concurrent with entry set iteration;
	Handle test put absent concurrent with key set iteration;
	Handle test put absent concurrent with value iteration;
	Handle test put unsupported not present;
	Handle test put unsupported present existing value;
	Handle test put unsupported present different value;
	Handle test put null key supported not present;
	Handle test put null key supported present;
	Handle test put null key unsupported;
	Handle test put null value supported;
	Handle test put null value unsupported;
	Handle test put replace with null value supported;
	Handle test put replace with null value unsupported;
	Handle test put replace null value with null supported;
	Handle test put replace null value with non null supported;
	Handle test put null key and value supported;
	Put entry;
	Get put null key unsupported method

8.54. Add a class for map remove tester. It allows to:

	Handle test remove present;
	Handle test remove present concurrent with entry set iteration;
	Handle test remove present concurrent with key set iteration;
	Handle test remove present concurrent with values iteration;
	Handle test remove not present;
	Handle test remove null present;
	Handle test remove unsupported;
	Handle test remove unsupported not present;
	Handle test remove null queries not supported;
	Handle test remove null supported missing;
	Handle test remove wrong type

8.55. Add a class for map serialization tester. It allows to:

	Handle test reserialize map

8.56. Add a class for map size tester. It allows to:

	Handle test size

8.57. Add a class for map to string tester. It allows to:

	Convert test;
	Get expected to string

8.58. Add a class for navigable map navigation tester. It allows to:

	Set navigable map navigation tester;
	Reset navigable map navigation tester with hole;
	Handle test empty map first;
	Handle test empty map poll first;
	Handle test empty map nearby;
	Handle test empty map last;
	Handle test empty map poll last;
	Handle test singleton map first;
	Handle test singleton map poll first;
	Handle test singleton map nearby;
	Handle test singleton map last;
	Handle test singleton map poll last;
	Handle test first;
	Handle test poll first;
	Handle test poll first unsupported;
	Test lower;
	Handle test floor;
	Test ceiling;
	Handle test higher;
	Handle test last;
	Handle test poll last;
	Handle test poll last unsupported;
	Handle test descending navigation;
	Handle test head map exclusive;
	Handle test head map inclusive;
	Handle test tail map exclusive;
	Handle test tail map inclusive

8.59. Add a class for navigable set navigation tester. It allows to:

	Set navigable set navigation tester;
	Reset navigable set navigation tester with hole;
	Handle test empty set poll first;
	Handle test empty set nearby;
	Handle test empty set poll last;
	Handle test singleton set poll first;
	Handle test singleton set nearby;
	Handle test singleton set poll last;
	Handle test poll first;
	Handle test poll first unsupported;
	Test lower hole;
	Handle test floor hole;
	Test ceiling hole;
	Handle test higher hole;
	Test lower;
	Handle test floor;
	Test ceiling;
	Handle test higher;
	Handle test poll last;
	Handle test poll last unsupported;
	Handle test descending navigation;
	Handle test empty sub set;
	Get hole methods

8.60. Add a class for platform. It allows to:

	Get format;
	Get list list iterator tester num iterations;
	Get collection iterator tester num iterations;
	Instantiate platform

8.61. Add a class for queue element tester. It allows to:

	Handle test element empty;
	Handle test element size 1;
	Handle test element size many

8.62. Add a class for queue offer tester. It allows to:

	Handle test offer supported not present;
	Handle test offer null supported;
	Handle test offer null unsupported

8.63. Add a class for queue peek tester. It allows to:

	Handle test peek empty;
	Handle test peek size 1;
	Handle test peek size many

8.64. Add a class for queue poll tester. It allows to:

	Handle test poll empty;
	Handle test poll size 1;
	Handle test poll size many

8.65. Add a class for queue remove tester. It allows to:

	Handle test remove empty;
	Handle test remove size 1;
	Handle test remove size many

8.66. Add a class for set add all tester. It allows to:

	Handle test add all supported some present;
	Handle test add all with duplicates;
	Handle test add all supported all present

8.67. Add a class for set add tester. It allows to:

	Handle test add supported present;
	Handle test add supported null present;
	Get add supported null present method

8.68. Add a class for set creation tester. It allows to:

	Handle test create with duplicates null duplicates not rejected;
	Handle test create with duplicates non null duplicates not rejected;
	Handle test create with duplicates null duplicates rejected;
	Handle test create with duplicates non null duplicates rejected

8.69. Add a class for set equals tester. It allows to:

	Handle test equals other set with same elements;
	Handle test equals other set with different elements;
	Handle test equals containing null;
	Handle test equals other contains null;
	Handle test equals smaller set;
	Handle test equals larger set;
	Handle test equals list

8.70. Add a class for set hash code tester. It allows to:

	Handle test hash code;
	Handle test hash code containing null;
	Get hash code methods

8.71. Add a class for set remove tester. It allows to:

	Handle test remove present

8.72. Add a class for sorted map navigation tester. It allows to:

	Set sorted map navigation tester;
	Handle test empty map first;
	Handle test empty map last;
	Handle test singleton map first;
	Handle test singleton map last;
	Handle test first;
	Handle test last;
	Handle test head map exclusive;
	Handle test tail map inclusive;
	Handle test head map;
	Handle test tail map;
	Handle test sub map;
	Handle test sub map illegal;
	Handle test ordered by comparator;
	Compare o 1

8.73. Add a class for sorted set navigation tester. It allows to:

	Set sorted set navigation tester;
	Handle test empty set first;
	Handle test empty set last;
	Handle test singleton set first;
	Handle test singleton set last;
	Handle test first;
	Handle test last

9. Changes to package com.google.common.escape:  

9.1. Add a class for array based char escaper. It allows to:

	Instantiate array based char escaper  with replacement map;
	Instantiate array based char escaper  with array based escaper map;
	Escape array based char escaper;
	Escape unsafe

9.2. Add a class for array based char escaper test. It allows to:

	Handle test safe range;
	Escape unsafe;
	Handle test safe range max less than min;
	Handle test delete unsafe chars;
	Handle test replacement priority;

9.3. Add a class for array based escaper map. It allows to:

	Create replacements map;
	Instantiate array based escaper map;
	Get replacement array;
	Create replacement array

9.4. Add a class for array based escaper map test. It allows to:

	Handle test null map;
	Handle test empty map;
	Handle test map length;
	Handle test mapping

9.5. Add a class for array based unicode escaper. It allows to:

	Instantiate array based unicode escaper  with replacement map;
	Instantiate array based unicode escaper  with array based escaper map;
	Escape array based unicode escaper;
	Handle next escape index;
	Escape unsafe

9.6. Add a class for array based unicode escaper test. It allows to:

	Handle test replacements;
	Escape unsafe;
	Handle test safe range;
	Handle test delete unsafe chars;
	Handle test replacement priority;
	Handle test code points from surrogate pairs;

9.7. Add a class for char escaper. It allows to:

	Instantiate char escaper;
	Escape char escaper;
	Escape slow;
	Grow buffer

9.8. Add a class for char escaper builder test. It allows to:

	Handle test add escapes

9.9. Add a class for escaper. It allows to:

	Instantiate escaper;
	Escape escaper;
	Apply;
	Process escaper escaper as function

9.10. Add a class for escapers test. It allows to:

	Handle test null escaper;
	Handle test builder initial state no replacement;
	Handle test builder initial state none unsafe;
	Handle test builder retains state;
	Handle test builder creates independent escapers;
	Handle test as unicode escaper;
	Create simple char escaper;
	Escape;
	Create simple unicode escaper;

9.11. Add a class for package sanity tests

9.12. Add a class for platform. It allows to:

	Instantiate platform;
	Char buffer  from thread local;
	Handle initial value

9.13. Add a class for unicode escaper. It allows to:

	Instantiate unicode escaper;
	Escape unicode escaper;
	Handle next escape index;
	Escape slow;
	Get code point at;
	Grow buffer

9.14. Add a class for unicode escaper test. It allows to:

	Escape;
	Handle test nop escaper;
	Handle test simple escaper;
	Handle test grow buffer;
	Handle test surrogate pairs;
	Handle test trailing high surrogate;
	Handle test null input;
	Handle test bad strings;
	Handle test false positives for next escaped index;
	Handle next escape index;
	Handle test code point at index out of bounds exception;
	Escape escaper as string

10. Changes to package com.google.common.escape.testing:  

10.1. Add a class for escaper asserts. It allows to:

	Instantiate escaper asserts;
	Assert basic;
	Escaping char escaper;
	Escaping unicode escaper;
	Assert unescaped;
	Assert unicode escaping

11. Changes to package com.google.common.eventbus:  

11.1. Add a class for async event bus. It allows to:

	Instantiate async event bus  with executor;
	Instantiate async event bus  with executor, subscriber exception handler and subscriber exception handler;

11.2. Add a class for dead event. It allows to:

	Instantiate dead event;
	Get source;
	Get event;
	Convert dead event to string

11.3. Add a class for event bus benchmark. It allows to:

	Set event bus benchmark;
	Post strings;
	Handle strings

11.4. Add a class for string catcher. It allows to:

	Here have A string;
	Handle method without annotation;
	Get events

11.5. Add a class for subscriber exception context. It allows to:

	Instantiate subscriber exception context  with event bus, subscriber method and subscriber method;
	Get event bus;
	Get event;
	Get subscriber;
	Get subscriber method

11.6. Add an interface declaration  for subscriber exception handler. It allows to:

	Handle exception

12. Changes to package com.google.common.eventbus.outside:  

12.1. Add a class for outside event bus test. It allows to:

	Handle test anonymous;
	Accept

13. Changes to package com.google.common.graph:  

13.1. Add a class for abstract directed graph test. It allows to:

	Handle predecessors one edge;
	Handle successors one edge;
	Handle incident edges one edge;
	Process abstract directed graph test abstract directed graph test in degree one edge;
	Out degree one edge;
	Check if abstract directed graph test has edge connecting correct;
	Check if abstract directed graph test has edge connecting backwards;
	Check if abstract directed graph test has edge connecting mismatch;
	Put edge existing nodes;
	Put edge existing edge  between same nodes;
	Put edge order mismatch;
	Remove edge antiparallel edges;
	Remove edge order mismatch

13.2. Add a class for abstract directed network connections. It allows to:

	Instantiate abstract directed network connections  with in edge map, out edge map and out edge map;
	Handle adjacent nodes;
	Get incident edges;
	Get iterator;
	Get size;
	Check if  contains;
	Process abstract directed network connections abstract directed network connections in edges;
	Out edges;
	Handle adjacent node;
	Remove edge in edge;
	Remove out edge;
	Add edge in edge;
	Add out edge

13.3. Add a class for abstract directed network test. It allows to:

	Validate source and target;
	Handle edges contains order mismatch;
	Handle edges connecting order mismatch;
	Edge connecting or null order mismatch;
	Handle incident nodes one edge;
	Handle edges connecting one edge;
	Process abstract directed network test abstract directed network test in edges one edge;
	Out edges one edge;
	Handle predecessors one edge;
	Handle successors one edge;
	Handle source one edge;
	Handle source edge not in graph;
	Target one edge;
	Target edge  not in graph;
	Process abstract directed network test abstract directed network test in degree one edge;
	Out degree one edge;
	Add edge existing nodes;
	Add edge existing edge  between same nodes;
	Add edge existing edge  between different nodes;
	Add edge parallel edge;
	Add edge order mismatch

13.4. Add a class for abstract graph. It allows to:

	Check if abstract graph equals;
	Hash code;
	Convert abstract graph to string

13.5. Add a class for abstract graph builder. It allows to:

	Instantiate abstract graph builder

13.6. Add a class for abstract graph test. It allows to:

	Create graph;
	Add node;
	Put edge;
	Handle init;
	Validate graph state;
	Validate graph;
	Handle nodes check returned set mutability;
	Handle adjacent nodes check returned set mutability;
	Handle predecessors check returned set mutability;
	Handle successors check returned set mutability;
	Handle incident edges check returned set mutability;
	Handle nodes one node;
	Handle nodes no nodes;
	Handle adjacent nodes one edge;
	Handle adjacent nodes no adjacent nodes;
	Handle adjacent nodes node not in graph;
	Handle predecessors no predecessors;
	Handle predecessors node not in graph;
	Handle successors no successors;
	Handle successors node not in graph;
	Handle incident edges no incident edges;
	Handle incident edges node not in graph;
	Handle degree one edge;
	Handle degree isolated node;
	Handle degree node not in graph;
	Process abstract graph test abstract graph test in degree isolated node;
	Process abstract graph test abstract graph test in degree node not in graph;
	Out degree isolated node;
	Out degree node  not in graph;
	Add node new node;
	Add node existing node;
	Remove node existing node;
	Remove node antiparallel edges;
	Remove node node  not present;
	Remove node query  after removal;
	Remove edge existing edge;
	Remove edge one  of many;
	Remove edge node  not present;
	Remove edge edge  not present

13.7. Add a class for abstract network. It allows to:

	Process abstract network abstract network as graph;
	Get nodes;
	Get edges;
	Get iterator;
	Apply edge;
	Get size;
	Check if  contains;
	Handle node order;
	Check if  is directed;
	Check if  allows self loops;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get degree;
	Process abstract network abstract network in degree;
	Out degree;
	Handle adjacent edges;
	Get edges connecting;
	Handle connected predicate;
	Edge connecting or null;
	Check if abstract network has edge connecting;
	Validate endpoints;
	Check if abstract network is ordering compatible;
	Check if abstract network equals;
	Hash code;
	Convert abstract network to string;
	Edge incident nodes map;

13.8. Add a class for abstract network test. It allows to:

	Create graph;
	Add node;
	Add edge;
	Handle init;
	Validate network state;
	Validate network;
	Handle nodes check returned set mutability;
	Handle edges check returned set mutability;
	Handle incident edges check returned set mutability;
	Handle adjacent nodes check returned set mutability;
	Handle adjacent edges check returned set mutability;
	Handle edges connecting check returned set mutability;
	Process abstract network test abstract network test in edges check returned set mutability;
	Out edges check returned set mutability;
	Handle predecessors check returned set mutability;
	Handle successors check returned set mutability;
	Handle nodes one node;
	Handle nodes no nodes;
	Handle edges one edge;
	Handle edges no edges;
	Handle incident edges one edge;
	Handle incident edges isolated node;
	Handle incident edges node not in graph;
	Handle incident nodes one edge;
	Handle incident nodes edge not in graph;
	Handle adjacent nodes one edge;
	Handle adjacent nodes no adjacent nodes;
	Handle adjacent nodes node not in graph;
	Handle adjacent edges both endpoints;
	Handle adjacent edges no adjacent edges;
	Handle adjacent edges edge not in graph;
	Handle edges connecting disconnected nodes;
	Handle edges connecting nodes not in graph;
	Process abstract network test abstract network test in edges no in edges;
	Process abstract network test abstract network test in edges node not in graph;
	Out edges no  out edges;
	Out edges node  not in graph;
	Handle predecessors no predecessors;
	Handle predecessors node not in graph;
	Handle successors no successors;
	Handle successors node not in graph;
	Add node new node;
	Add node existing node;
	Remove node existing node;
	Remove node node  not present;
	Remove node query  after removal;
	Remove edge existing edge;
	Remove edge one  of many;
	Remove edge edge  not present;
	Remove edge query  after removal

13.9. Add a class for abstract undirected graph test. It allows to:

	Validate undirected edges;
	Handle predecessors one edge;
	Handle successors one edge;
	Handle incident edges one edge;
	Process abstract undirected graph test abstract undirected graph test in degree one edge;
	Out degree one edge;
	Check if abstract undirected graph test has edge connecting correct;
	Check if abstract undirected graph test has edge connecting mismatch;
	Add edge existing nodes;
	Add edge existing edge  between same nodes;
	Remove edge antiparallel edges

13.10. Add a class for abstract undirected network connections. It allows to:

	Instantiate abstract undirected network connections  with incident edge map;
	Get predecessors;
	Get successors;
	Get incident edges;
	Process abstract undirected network connections abstract undirected network connections in edges;
	Out edges;
	Handle adjacent node;
	Remove edge in edge;
	Remove out edge;
	Add edge in edge;
	Add out edge

13.11. Add a class for abstract undirected network test. It allows to:

	Validate undirected edges;
	Handle edges contains order mismatch;
	Handle edges connecting order mismatch;
	Edge connecting or null order mismatch;
	Handle edges connecting one edge;
	Process abstract undirected network test abstract undirected network test in edges one edge;
	Out edges one edge;
	Handle predecessors one edge;
	Handle successors one edge;
	Process abstract undirected network test abstract undirected network test in degree one edge;
	Out degree one edge;
	Add edge existing nodes;
	Add edge existing edge  between same nodes;
	Add edge existing edge  between different nodes;
	Add edge parallel edge;
	Add edge order mismatch

13.12. Add a class for abstract value graph. It allows to:

	Process abstract value graph abstract value graph as graph;
	Get nodes;
	Get edges;
	Check if  is directed;
	Check if  allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get degree;
	Process  in degree;
	Out degree;
	Check if abstract value graph equals;
	Hash code;
	Convert abstract value graph to string;
	Get edge value map;
	Apply edge endpoint pair

13.13. Add an interface declaration  for base graph. It allows to:

	Get nodes;
	Get edges;
	Check if base graph is directed;
	Check if base graph allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get incident edges;
	Get degree;
	Process base graph base graph in degree;
	Out degree;
	Check if base graph has edge connecting;

13.14. Add a class for configurable directed graph test. It allows to:

	Create graph;
	Handle adjacent nodes self loop;
	Handle predecessors self loop;
	Handle successors self loop;
	Handle incident edges self loop;
	Handle degree self loop;
	Process configurable directed graph test configurable directed graph test in degree self loop;
	Out degree self loop;
	Add edge self loop;
	Add edge existing self loop edge  between same nodes;
	Remove node existing node  with self loop edge;
	Remove edge existing self loop edge

13.15. Add a class for configurable directed multi network test. It allows to:

	Create graph;
	Handle adjacent edges parallel edges;
	Handle edges connecting parallel edges;
	Handle edges connecting parallel self loop edges;
	Add edge parallel edge;
	Add edge parallel self loop edge;
	Remove edge parallel edge;
	Remove edge parallel self loop edge

13.16. Add a class for configurable directed network test. It allows to:

	Create graph;
	Handle edges self loop;
	Handle incident edges self loop;
	Handle incident nodes self loop;
	Handle adjacent nodes self loop;
	Handle adjacent edges self loop;
	Handle edges connecting self loop;
	Process configurable directed network test configurable directed network test in edges self loop;
	Out edges self loop;
	Handle predecessors self loop;
	Handle successors self loop;
	Handle source self loop;
	Target self loop;
	Handle degree self loop;
	Process configurable directed network test configurable directed network test in degree self loop;
	Out degree self loop;
	Add edge self loop;
	Add edge existing self loop edge  between same nodes;
	Add edge existing edge  between different nodes self loops;
	Add edge parallel self loop edge;
	Remove node existing node  with self loop edge;
	Remove edge existing self loop edge

13.17. Add a class for configurable mutable graph. It allows to:

	Instantiate configurable mutable graph  with abstract graph builder;
	Delegate configurable mutable graph;
	Add node;
	Put edge;
	Remove node;
	Remove edge;

13.18. Add a class for configurable mutable network. It allows to:

	Instantiate configurable mutable network  with network builder;
	Add node;
	Add node internal;
	Add edge;
	Remove node;
	Remove edge;
	Handle new connections

13.19. Add a class for configurable mutable value graph. It allows to:

	Instantiate configurable mutable value graph  with abstract graph builder;
	Add node;
	Add node internal;
	Put edge value;
	Remove node;
	Remove edge;
	Handle new connections

13.20. Add a class for configurable network. It allows to:

	Instantiate configurable network  with network builder;
	Instantiate configurable network  with network builder, node connections map, edge to reference node map and edge to reference node map;
	Get nodes;
	Get edges;
	Check if configurable network is directed;
	Check if configurable network allows parallel edges;
	Check if configurable network allows self loops;
	Handle node order;
	Get edge order;
	Get incident edges;
	Get incident nodes;
	Handle adjacent nodes;
	Get edges connecting;
	Process configurable network configurable network in edges;
	Out edges;
	Get predecessors;
	Get successors;
	Get checked connections;
	Get checked reference node;
	Check if configurable network contains node;
	Check if configurable network contains edge

13.21. Add a class for configurable simple directed graph test. It allows to:

	Create graph;
	Handle nodes check returned set mutability;
	Handle adjacent nodes check returned set mutability;
	Handle predecessors check returned set mutability;
	Handle successors check returned set mutability;
	Handle incident edges check returned set mutability;
	Add edge self loop;
	Add edge nodes  not in graph

13.22. Add a class for configurable simple directed network test. It allows to:

	Create graph;
	Handle nodes check returned set mutability;
	Handle edges check returned set mutability;
	Handle incident edges check returned set mutability;
	Handle adjacent nodes check returned set mutability;
	Handle adjacent edges check returned set mutability;
	Handle edges connecting check returned set mutability;
	Process configurable simple directed network test configurable simple directed network test in edges check returned set mutability;
	Out edges check returned set mutability;
	Handle predecessors check returned set mutability;
	Handle successors check returned set mutability;
	Add edge self loop;
	Add edge nodes  not in graph

13.23. Add a class for configurable simple undirected graph test. It allows to:

	Create graph;
	Handle nodes check returned set mutability;
	Handle adjacent nodes check returned set mutability;
	Handle predecessors check returned set mutability;
	Handle successors check returned set mutability;
	Handle incident edges check returned set mutability;
	Add edge self loop;
	Add edge nodes  not in graph

13.24. Add a class for configurable simple undirected network test. It allows to:

	Create graph;
	Handle nodes check returned set mutability;
	Handle edges check returned set mutability;
	Handle incident edges check returned set mutability;
	Handle adjacent nodes check returned set mutability;
	Handle adjacent edges check returned set mutability;
	Handle edges connecting check returned set mutability;
	Process configurable simple undirected network test configurable simple undirected network test in edges check returned set mutability;
	Out edges check returned set mutability;
	Handle predecessors check returned set mutability;
	Handle successors check returned set mutability;
	Add edge self loop;
	Add edge nodes  not in graph

13.25. Add a class for configurable undirected graph test. It allows to:

	Create graph;
	Handle adjacent nodes self loop;
	Handle predecessors self loop;
	Handle successors self loop;
	Handle incident edges self loop;
	Handle degree self loop;
	Process configurable undirected graph test configurable undirected graph test in degree self loop;
	Out degree self loop;
	Add edge self loop;
	Add edge existing self loop edge  between same nodes;
	Remove node existing node  with self loop edge;
	Remove edge existing self loop edge

13.26. Add a class for configurable undirected multi network test. It allows to:

	Create graph;
	Handle adjacent edges parallel edges;
	Handle edges connecting parallel edges;
	Handle edges connecting parallel self loop edges;
	Add edge parallel edge;
	Add edge parallel self loop edge;
	Remove edge parallel edge;
	Remove edge parallel self loop edge

13.27. Add a class for configurable undirected network test. It allows to:

	Create graph;
	Handle edges self loop;
	Handle incident edges self loop;
	Handle incident nodes self loop;
	Handle adjacent nodes self loop;
	Handle adjacent edges self loop;
	Handle edges connecting self loop;
	Process configurable undirected network test configurable undirected network test in edges self loop;
	Out edges self loop;
	Handle predecessors self loop;
	Handle successors self loop;
	Handle degree self loop;
	Process configurable undirected network test configurable undirected network test in degree self loop;
	Out degree self loop;
	Add edge self loop;
	Add edge existing self loop edge  between same nodes;
	Add edge existing edge  between different nodes self loops;
	Add edge parallel self loop edge;
	Remove node existing node  with self loop edge;
	Remove edge existing self loop edge

13.28. Add a class for configurable value graph. It allows to:

	Instantiate configurable value graph  with abstract graph builder;
	Instantiate configurable value graph  with abstract graph builder, node connections map and node connections map;
	Get nodes;
	Check if configurable value graph is directed;
	Check if configurable value graph allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Check if configurable value graph has edge connecting;
	Get edge value or default;
	Edge count;
	Get checked connections;
	Check if configurable value graph contains node;
	Check if configurable value graph has edge connecting internal;
	Get edge value or default internal

13.29. Add a class for directed multi network connections. It allows to:

	Instantiate directed multi network connections  with in edges map, out edges map and out edges map;
	O directed multi network connections;
	Process directed multi network connections directed multi network connections of immutable;
	Get predecessors;
	Get predecessors multiset;
	Get successors;
	Get successors multiset;
	Get edges connecting;
	Get size;
	Remove edge in edge;
	Remove out edge;
	Add edge in edge;
	Add out edge;
	Get reference

13.30. Add a class for directed network connections. It allows to:

	Instantiate directed network connections  with in edge map, out edge map and out edge map;
	O directed network connections;
	Process directed network connections directed network connections of immutable;
	Get predecessors;
	Get successors;
	Get edges connecting

13.31. Add a class for edges connecting. It allows to:

	Instantiate edges connecting  with node to edge map;
	Get iterator;
	Get size;
	Check if edges connecting contains;
	Get connecting edge

13.32. Add a class for element order. It allows to:

	Instantiate element order  with type, comparator and comparator;
	Handle unordered;
	Get insertion;
	Handle natural;
	Get sorted;
	Get type;
	Get comparator;
	Check if element order equals;
	Hash code;
	Convert element order to string;
	Create map;
	Cast element order

13.33. Add a class for endpoint pair test. It allows to:

	Handle test ordered endpoint pair;
	Handle test unordered endpoint pair;
	Handle test self loop;
	Handle test adjacent node node not incident;
	Handle test equals;
	Handle endpoint pair directed graph;
	Handle endpoint pair undirected graph;
	Handle endpoint pair directed network;
	Handle endpoint pair undirected network;
	Handle endpoint pair unmodifiable view;
	Handle endpoint pair undirected contains;
	Handle endpoint pair directed contains;
	Check if endpoint pair test contains exactly sanity check

13.34. Add a class for forwarding graph. It allows to:

	Delegate forwarding graph;
	Get nodes;
	Edge count;
	Check if forwarding graph is directed;
	Check if forwarding graph allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get degree;
	Process forwarding graph forwarding graph in degree;
	Out degree;
	Check if forwarding graph has edge connecting;

13.35. Add an interface declaration  for graph. It allows to:

	Get nodes;
	Get edges;
	Check if graph is directed;
	Check if graph allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get incident edges;
	Get degree;
	Process graph graph in degree;
	Out degree;
	Check if graph has edge connecting;
	Check if graph equals;
	Hash code

13.36. Add a class for graph builder. It allows to:

	Instantiate graph builder;
	Get directed;
	Handle undirected;
	Process graph builder graph builder from;
	Handle immutable;
	Check if graph builder allows self loops;
	Get expected node count;
	Handle node order;
	Build graph builder;
	Cast graph builder

13.37. Add an interface declaration  for graph connections. It allows to:

	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get value;
	Remove predecessor;
	Remove successor;
	Add predecessor;
	Add successor

13.38. Add a class for graph constants. It allows to:

	Instantiate graph constants

13.39. Add a class for graph equivalence test. It allows to:

	Get parameters;
	Instantiate graph equivalence test  with edge type;
	Create graph;
	Handle opposite type;
	Handle equivalent node sets differ;
	Handle equivalent directed vs undirected;
	Handle equivalent self loop directed vs undirected;
	Handle equivalent properties differ;
	Handle equivalent edge add orders differ;
	Handle equivalent edge directions differ

13.40. Add a class for graph mutation test. It allows to:

	Get directed graph;
	Handle undirected graph;
	Handle test graph mutation;
	Get random element

13.41. Add a class for graph properties test. It allows to:

	Handle init;
	Check if graph properties test has cycle empty graph;
	Check if graph properties test has cycle isolated nodes;
	Check if graph properties test has cycle one edge;
	Check if graph properties test has cycle self loop edge;
	Check if graph properties test has cycle two acyclic edges;
	Check if graph properties test has cycle two cyclic edges;
	Check if graph properties test has cycle three acyclic edges;
	Check if graph properties test has cycle three cyclic edges;
	Check if graph properties test has cycle disconnected cyclic graph;
	Check if graph properties test has cycle multiple cycles;
	Check if graph properties test has cycle two parallel edges;
	Check if graph properties test has cycle cyclic multigraph

13.42. Add a class for graphs test. It allows to:

	Handle transitive closure directed graph;
	Handle transitive closure undirected graph;
	Handle transitive closure directed path graph;
	Handle transitive closure undirected path graph;
	Handle transitive closure directed cycle graph;
	Handle transitive closure undirected cycle graph;
	Transpose undirected graph;
	Transpose directed graph;
	Transpose undirected value graph;
	Transpose directed value graph;
	Transpose undirected network;
	Transpose directed network;
	Handle induced subgraph graph;
	Handle induced subgraph value graph;
	Handle induced subgraph network;
	Handle induced subgraph node not in graph;
	Handle copy of null argument;
	Handle copy of directed graph;
	Handle copy of undirected graph;
	Handle copy of directed value graph;
	Handle copy of undirected value graph;
	Handle copy of directed network;
	Handle copy of undirected network;
	Directed graphs test;
	Create undirected;
	Create directed multigraph;
	Create undirected multigraph;
	Create directed expected node count;
	Create undirected expected node count;
	Handle builder expected node count negative;
	Create directed expected edge count;
	Create undirected expected edge count;
	Handle builder expected edge count negative;
	Check transitive closure;
	Build directed graph;
	Build undirected graph;
	Build directed value graph;
	Build undirected value graph;
	Build directed network;
	Build undirected network

13.43. Add a class for immutable graph test. It allows to:

	Handle immutable graph;
	Handle copy of immutable graph optimized;
	Handle immutable graph builder applies graph builder config;
	Handle immutable graph builder copies graph builder;
	Handle immutable graph builder add node;
	Handle immutable graph builder put edge from nodes;
	Handle immutable graph builder put edge from endpoint pair

13.44. Add a class for immutable network test. It allows to:

	Handle immutable network;
	Handle copy of immutable network optimized;
	Handle edges connecting directed;
	Handle edges connecting undirected;
	Handle immutable network builder applies network builder config;
	Handle immutable network builder copies network builder;
	Handle immutable network builder add node;
	Handle immutable network builder put edge from nodes;
	Handle immutable network builder put edge from endpoint pair

13.45. Add a class for map cache test. It allows to:

	Instantiate map cache test  with map iterator cache;
	Get parameters;
	Handle init;
	Handle test key set iterator;
	Handle test put new value;
	Handle test remove equal key with different reference;
	Handle test handle nulls

13.46. Add a class for map iterator cache. It allows to:

	Instantiate map iterator cache  with backing map;
	Put key;
	Remove map iterator cache;
	Handle clear;
	Get map iterator cache;
	Get map iterator cache without caching;
	Check if map iterator cache contains key;
	Handle unmodifiable key set;
	Get iterator;
	Check if  has next;
	Handle next;
	Get size;
	Check if  contains;
	Get map iterator cache if cached;
	Handle clear cache

13.47. Add a class for multi edges connecting. It allows to:

	Instantiate multi edges connecting  with out edge to node map;
	Get iterator;
	Compute next;
	Check if multi edges connecting contains

13.48. Add an interface declaration  for mutable graph. It allows to:

	Add node;
	Put edge;
	Remove node;
	Remove edge;

13.49. Add an interface declaration  for mutable network. It allows to:

	Add node;
	Add edge;
	Remove node;
	Remove edge

13.50. Add an interface declaration  for mutable value graph. It allows to:

	Add node;
	Put edge value;
	Remove node;
	Remove edge;

13.51. Add an interface declaration  for network. It allows to:

	Get nodes;
	Get edges;
	Process network network as graph;
	Check if network is directed;
	Check if network allows parallel edges;
	Check if network allows self loops;
	Handle node order;
	Get edge order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get incident edges;
	Process network network in edges;
	Out edges;
	Get degree;
	Process network network in degree;
	Out degree;
	Get incident nodes;
	Handle adjacent edges;
	Get edges connecting;
	Edge connecting or null;
	Check if network has edge connecting;
	Check if network equals;
	Hash code

13.52. Add a class for network builder. It allows to:

	Instantiate network builder;
	Get directed;
	Handle undirected;
	Process network builder network builder from;
	Handle immutable;
	Check if network builder allows parallel edges;
	Check if network builder allows self loops;
	Get expected node count;
	Get expected edge count;
	Handle node order;
	Get edge order;
	Build network builder;
	Cast network builder

13.53. Add an interface declaration  for network connections. It allows to:

	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get incident edges;
	Process network connections network connections in edges;
	Out edges;
	Get edges connecting;
	Handle adjacent node;
	Remove edge in edge;
	Remove out edge;
	Add edge in edge;
	Add out edge

13.54. Add a class for network equivalence test. It allows to:

	Get parameters;
	Instantiate network equivalence test  with edge type;
	Create network;
	Handle opposite type;
	Handle equivalent node sets differ;
	Handle equivalent edge sets differ;
	Handle equivalent directed vs undirected;
	Handle equivalent self loop directed vs undirected;
	Handle equivalent connections differ;
	Handle equivalent properties differ;
	Handle equivalent edge add orders differ;
	Handle equivalent edge directions differ

13.55. Add a class for network mutation test. It allows to:

	Get directed network;
	Handle undirected network;
	Handle test network mutation;
	Get random element

13.56. Add a class for package sanity tests. It allows to:

	Instantiate package sanity tests;
	Handle test nulls;
	Get graph with node;
	Get network with node

13.57. Add an interface declaration  for predecessors function. It allows to:

	Get predecessors

13.58. Add an interface declaration  for successors function. It allows to:

	Get successors

13.59. Add a class for test util. It allows to:

	Instantiate test util;
	Assert node  not in graph error message;
	Assert edge  not in graph error message;
	Assert graph A strongly equivalent;
	Assert graph strongly equivalent;
	Assert network A strongly equivalent;
	Get sanity check set

13.60. Add a class for undirected graph connections. It allows to:

	Instantiate undirected graph connections  with adjacent node values map;
	O undirected graph connections;
	Process undirected graph connections undirected graph connections of immutable;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get value;
	Remove predecessor;
	Remove successor;
	Add predecessor;
	Add successor

13.61. Add a class for undirected multi network connections. It allows to:

	Instantiate undirected multi network connections  with incident edges map;
	O undirected multi network connections;
	Process undirected multi network connections undirected multi network connections of immutable;
	Handle adjacent nodes;
	Handle adjacent nodes multiset;
	Get edges connecting;
	Get size;
	Remove edge in edge;
	Remove out edge;
	Add edge in edge;
	Add out edge;
	Get reference

13.62. Add an object creator class for undirected network connections. It allows to:

	Instantiate undirected network connections  with incident edge map;
	O undirected network connections;
	Process undirected network connections undirected network connections of immutable;
	Handle adjacent nodes;
	Get edges connecting

13.63. Add an interface declaration  for value graph. It allows to:

	Get nodes;
	Get edges;
	Process value graph value graph as graph;
	Check if value graph is directed;
	Check if value graph allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get incident edges;
	Get degree;
	Process value graph value graph in degree;
	Out degree;
	Check if value graph has edge connecting;
	Get edge value or default;
	Check if value graph equals;
	Hash code

13.64. Add a class for value graph builder. It allows to:

	Instantiate value graph builder;
	Get directed;
	Handle undirected;
	Process value graph builder value graph builder from;
	Handle immutable;
	Check if value graph builder allows self loops;
	Get expected node count;
	Handle node order;
	Build value graph builder;
	Cast value graph builder

13.65. Add a class for value graph test. It allows to:

	Validate graph state;
	Get directed graph;
	Handle undirected graph;
	Check if value graph test has edge connecting directed correct;
	Check if value graph test has edge connecting directed backwards;
	Check if value graph test has edge connecting directed mismatch;
	Check if value graph test has edge connecting undirected correct;
	Check if value graph test has edge connecting undirected backwards;
	Check if value graph test has edge connecting undirected mismatch;
	Handle edge value or default directed correct;
	Handle edge value or default directed backwards;
	Handle edge value or default directed mismatch;
	Handle edge value or default undirected correct;
	Handle edge value or default undirected backwards;
	Handle edge value or default undirected mismatch;
	Put edge value directed;
	Put edge value directed order mismatch;
	Put edge value undirected order mismatch;
	Put edge value undirected;
	Remove edge directed;
	Remove edge undirected;
	Remove edge directed order mismatch;
	Remove edge undirected order mismatch;
	Handle edge value missing;
	Handle equivalence considers edge value

14. Changes to package com.google.common.hash:  

14.1. Add a class for abstract byte hasher. It allows to:

	Update abstract byte hasher;
	Update byte buffer;
	Put byte;
	Put bytes;
	Put short;
	Put int;
	Put abstract byte hasher long;
	Put char

14.2. Add a class for abstract composite hash function. It allows to:

	Instantiate abstract composite hash function  with functions;
	Make hash;
	Handle new hasher;
	Process abstract composite hash function abstract composite hash function from hashers;
	Put byte;
	Put bytes;
	Put short;
	Put int;
	Put  long;
	Put float;
	Put  double;
	Put boolean;
	Put char;
	Put unencoded chars;
	Put string;
	Put object;
	Hash

14.3. Add a class for abstract hasher. It allows to:

	Put boolean;
	Put abstract hasher double;
	Put float;
	Put unencoded chars;
	Put string;
	Put bytes;
	Put short;
	Put int;
	Put abstract hasher long;
	Put char;
	Put object

14.4. Add a class for checksum benchmark. It allows to:

	Set checksum benchmark;
	Handle crc 32 hash function;
	Handle crc 32 checksum;
	Handle adler 32 hash function;
	Adler 32 checksum;
	Run hash function

14.5. Add a class for checksum hash function test. It allows to:

	Handle test crc 32 equals checksum value;
	Handle test adler 32 equals checksum value;
	Handle test crc 32 known values;
	Handle test adler 32 known values;
	Assert checksum;
	Assert hash 32

14.6. Add a class for crc 32 c hash function test. It allows to:

	Handle test zeros;
	Handle test full;
	Handle test ascending;
	Handle test descending;
	Handle test scsi read command;
	Test some other known values;
	Assert crc;
	Handle test crc 32 c lookup table

14.7. Add a class for farm hash fingerprint 64. It allows to:

	Hash bytes;
	Get bits;
	Convert farm hash fingerprint 64 to string;
	Get fingerprint;
	Shift mix;
	Hash length 16;
	Handle weak hash length 32 with seeds;
	Hash length 0  to 16;
	Hash length 17  to 32;
	Hash length 33  to 64;
	Hash length 65 plus

14.8. Add a class for farm hash fingerprint 64 test. It allows to:

	Handle test really simple fingerprints;
	Handle test strings consistency;
	Handle test utf 8;
	Handle test put non chars;
	Handle test hash float is stable;
	Get fingerprint;
	Handle test multiple lengths;
	Get remix;
	Get char

14.9. Add an interface declaration  for funnel. It allows to:

	Funnel from

14.10. Add a class for funnels test. It allows to:

	Handle test for bytes;
	Handle test for bytes null;
	Handle test for strings;
	Handle test for strings null;
	Handle test for strings charset;
	Handle test for strings charset null;
	Handle test for ints;
	Handle test for ints null;
	Handle test for longs;
	Handle test for longs null;
	Handle test sequential;
	Assert nulls throw exception;
	Make hash;
	Handle process;
	Handle test as output stream;
	Handle test serialization;
	Handle test equals

14.11. Add a class for hash code benchmark. It allows to:

	Equals hash code benchmark;
	Set hash code benchmark;
	Hash function

14.12. Add an interface declaration  for hash function. It allows to:

	Handle new hasher;
	Hash int;
	Hash hash function long;
	Hash bytes;
	Hash unencoded chars;
	Hash string;
	Hash object;
	Get bits

14.13. Add a class for hash function benchmark. It allows to:

	Set hash function benchmark;
	Get hasher;
	Hash function;
	Hash function  with offset

14.14. Add an interface declaration  for hasher. It allows to:

	Put byte;
	Put bytes;
	Put short;
	Put int;
	Put hasher long;
	Put float;
	Put hasher double;
	Put boolean;
	Put char;
	Put unencoded chars;
	Put string;
	Put object;
	Hash hasher;
	Hash code

14.15. Add a class for hashing input stream. It allows to:

	Instantiate hashing input stream  with hash function, input stream and input stream;
	Read hashing input stream;
	Handle mark supported;
	Handle mark;
	Reset hashing input stream;
	Hash hashing input stream

14.16. Add a class for hashing input stream test. It allows to:

	Set hashing input stream test;
	Handle test read put single byte;
	Handle test read put byte array;
	Handle test read put byte array at pos;
	Handle test read put byte array out of bound;
	Handle test hash hashes correctly;
	Handle test hash hashes correctly read out of bound;
	Handle test hash hashes correctly for skipping;
	Handle test checks for null

14.17. Add a class for hashing output stream. It allows to:

	Instantiate hashing output stream  with hash function, output stream and output stream;
	Write hashing output stream;
	Hash hashing output stream;
	Close hashing output stream

14.18. Add a class for hashing output stream test. It allows to:

	Set hashing output stream test;
	Handle test write put single byte;
	Handle test write put byte array;
	Handle test write put byte array at pos;
	Handle test hash hashes correctly;
	Handle test checks for null

14.19. Add a class for hashing test. It allows to:

	Handle test md 5;
	Handle test sha 1;
	Handle test sha 256;
	Handle test sha 384;
	Handle test sha 512;
	Handle test crc 32;
	Handle test adler 32;
	Handle test murmur 3 128;
	Handle test murmur 3 32;
	Handle test sip hash 24;
	Test good fast hash;
	Test good fast hash 32;
	Test good fast hash 128;
	Test good fast hash 256;
	Handle test consistent hash correctness;
	Check consistent hash correctness;
	Handle test consistent hash probabilities;
	Count remaps;
	Handle test consistent hash out of range;
	Handle test consistent hash of hash code;
	Check same result;
	Handle test consistent hash linear congruential generator compatibility;
	Handle test combine ordered empty;
	Handle test combine ordered different bit lengths;
	Handle test combine ordered;
	Handle test combine ordered random hash codes;
	Handle test combine unordered empty;
	Handle test combine unordered different bit lengths;
	Handle test combine unordered;
	Handle test combine unordered random hash codes;
	Handle test concatenating equals;
	Handle test concatenating iterable bits;
	Handle test concatenating var args bits;
	Handle test concatenating hash function make hash;
	Convert test hash int reverse bytes vs hash bytes ints;
	Handle test hash int vs for loop;
	Test all hash functions have known hashes;
	Handle test known utf 8 hashing;
	Handle test null pointers;
	Handle test seedless hash function equals;
	Handle test seeded hash function equals;
	Test good fast hash equals;
	Assert seedless hash function equals;
	Assert seeded hash function equals

14.20. Add a class for lock free bit array. It allows to:

	Instantiate lock free bit array;
	Set lock free bit array;
	Get lock free bit array;
	Convert lock free bit array to plain array;
	Bit size;
	Bit count;
	Get copy;
	Put other lock free bit array;
	Check if lock free bit array equals;
	Hash code

14.21. Add a class for mac hash function test. It allows to:

	Handle test nulls;
	Handle test hashing;
	Handle test no providers;
	Handle test multiple updates;
	Handle test multiple updates do final;
	Handle test custom key;
	Get algorithm;
	Encoded;
	Get format;
	Handle test bad key empty key;
	Handle test empty inputs;
	Handle test empty inputs mixed algorithms;
	Handle test known inputs;
	Handle test known inputs mixed algorithms;
	Handle test put after hash;
	Handle test hash twice;
	Convert test;
	Assert mac hashing;
	Handle test rfc 2202 hmac sha 1 case 1;
	Convert test rfc 2202 hmac sha 1 case;
	Handle test rfc 2202 hmac sha 1 case 3;
	Handle test rfc 2202 hmac sha 1 case 4;
	Handle test rfc 2202 hmac sha 1 case 5;
	Handle test rfc 2202 hmac sha 1 case 6;
	Handle test rfc 2202 hmac sha 1 case 7;
	Handle test rfc 2202 hmac md 5 case 1;
	Convert test rfc 2202 hmac md 5 case;
	Handle test rfc 2202 hmac md 5 case 3;
	Handle test rfc 2202 hmac md 5 case 4;
	Handle test rfc 2202 hmac md 5 case 5;
	Handle test rfc 2202 hmac md 5 case 6;
	Handle test rfc 2202 hmac md 5 case 7;
	Check sha 1;
	Check md 5;
	Check hmac;
	Fill byte array

14.22. Add a class for message digest algorithm benchmark. It allows to:

	MESSAGE DIGEST API;
	Hash algorithm;
	HASH FUNCTION DIRECT;
	HASH FUNCTION VIA HASHER;
	MD message digest algorithm benchmark;
	Get algorithm;
	Get message digest;
	Get hash function;
	Set message digest algorithm benchmark;
	Hashing message digest algorithm benchmark

14.23. Add a class for message digest creation benchmark. It allows to:

	Set message digest creation benchmark;
	Get instance;
	Clone message digest creation benchmark

14.24. Add a class for message digest hash function test. It allows to:

	Handle test hashing;
	Handle test put after hash;
	Handle test hash twice;
	Convert test;
	Assert message digest hashing

14.25. Add a class for murmur 3 hash 128 test. It allows to:

	Handle test known values;
	Assert hash;
	Convert murmur 3 hash 128 test to hash code;
	Handle test paranoid;
	Hash;
	Handle test invariants

14.26. Add a class for murmur 3 hash 32 test. It allows to:

	Handle test known integer inputs;
	Handle test known long inputs;
	Handle test known string inputs;
	Handle test known utf 8 string inputs;
	Handle test simple string utf 8;
	Handle test string inputs utf 8;
	Assert hash;
	Handle test paranoid hash bytes;
	Hash;
	Handle test paranoid;
	Handle test invariants;
	Handle test invalid unicode hash string;
	Handle test invalid unicode hasher put string

14.27. Add a class for package sanity tests. It allows to:

	Instantiate package sanity tests

14.28. Add an interface declaration  for primitive sink. It allows to:

	Put byte;
	Put bytes;
	Put short;
	Put int;
	Put primitive sink long;
	Put float;
	Put primitive sink double;
	Put boolean;
	Put char;
	Put unencoded chars;
	Put string

14.29. Add a class for sip hash function test. It allows to:

	Handle test vectors;
	Handle test 15 byte string from sip hash paper;
	Handle test known values;
	Convert test collisions due;
	Convert test;
	Assert sip;

15. Changes to package com.google.common.html:  

15.1. Add a class for html escapers. It allows to:

	Handle html escaper;
	Instantiate html escapers

15.2. Add a class for html escapers test. It allows to:

	Handle test html escaper

16. Changes to package com.google.common.io:  

16.1. Add a class for appendable writer. It allows to:

	Instantiate appendable writer  with target appendable;
	Write appendable writer;
	Handle flush;
	Close appendable writer;
	Append appendable writer;
	Append char sequence;
	Check appendable writer not closed

16.2. Add a class for base encoding benchmark. It allows to:

	Encoding option;
	Set base encoding benchmark;
	Encode base encoding benchmark;
	Decode base encoding benchmark;
	Encoding stream;
	Decoding stream

16.3. Add a class for base encoding test. It allows to:

	Handle test separators explicitly;
	Handle test separator same as pad char;
	Handle test at most one separator;
	Handle test base 64;
	Handle test base 64 streaming;
	Handle test base 64 lenient padding;
	Handle test base 64 invalid decodings;
	Handle test base 64 can not upper case;
	Handle test base 64 can not lower case;
	Handle test base 64 alternate padding;
	Handle test base 64 streaming alternate padding;
	Handle test base 64 omit padding;
	Handle test base 64 streaming omit padding;
	Handle test base 64 offset;
	Handle test base 32;
	Handle test base 32 streaming;
	Handle test base 32 lenient padding;
	Handle test base 32 alternate padding;
	Handle test base 32 invalid decodings;
	Handle test base 32 upper case is no op;
	Handle test base 32 offset;
	Handle test base 32 hex;
	Handle test base 32 hex streaming;
	Handle test base 32 hex lenient padding;
	Handle test base 32 hex invalid decodings;
	Handle test base 32 hex upper case is no op;
	Handle test base 16;
	Handle test base 16 upper case is no op;
	Handle test base 16 invalid decodings;
	Handle test base 16 offset;
	Handle test encoding with casing;
	Handle test encoding with separators;
	Handle test encoding;
	Handle test encodes;
	Handle test encodes with offset;
	Handle test decodes;
	Assert fails  to decode;
	Handle test streaming encoding with casing;
	Handle test streaming encoding with separators;
	Handle test streaming encoding;
	Handle test streaming encodes;
	Handle test streaming decodes;
	Convert test

16.4. Add an interface declaration  for byte array data input. It allows to:

	Read byte array data input fully;
	Skip bytes;
	Read boolean;
	Read byte;
	Read unsigned byte;
	Read short;
	Read unsigned short;
	Read char;
	Read int;
	Read byte array data input long;
	Read float;
	Read double;
	Read line;
	Read UTF

16.5. Add an interface declaration  for byte array data output. It allows to:

	Write byte array data output;
	Write boolean;
	Write byte;
	Write short;
	Write char;
	Write int;
	Write byte array data output long;
	Write float;
	Write double;
	Write chars;
	Write UTF;
	Write bytes;
	Convert byte array data output to byte array

16.6. Add an interface declaration  for byte processor. It allows to:

	Handle process bytes;
	Get result

16.7. Add a class for byte sink test. It allows to:

	Set byte sink test;
	Handle test open buffered stream;
	Handle test write bytes;
	Handle test write from input stream;
	Handle test write from stream does not close that stream;
	Handle test closes on errors copying from byte source that throws;
	Handle test closes on errors when write throws;
	Handle test closes on errors writing from input stream that throws

16.8. Add a class for byte sink tester. It allows to:

	Get tests;
	Get suite for string;
	Get suite for bytes;
	Instantiate byte sink tester  with byte sink factory, method and method;
	Set byte sink tester;
	Handle test open stream;
	Handle test open buffered stream;
	Handle test write;
	Handle test write from input stream;
	Assert contains expected bytes

16.9. Add a class for byte source tester. It allows to:

	Get tests;
	Get suite for string;
	Get suite for bytes;
	Instantiate byte source tester  with byte source factory, method and method;
	Set byte source tester;
	Handle test open stream;
	Handle test open buffered stream;
	Handle test read;
	Convert test copy;
	Handle open stream;
	Handle test is empty;
	Handle test size;
	Handle test size if known;
	Handle test content equals;
	Handle test read using byte processor;
	Handle process bytes;
	Get result;
	Handle test hash;
	Handle test slice illegal arguments;
	Handle test slice constrained range;
	Assert expected bytes

16.10. Add a class for char sequence reader. It allows to:

	Instantiate char sequence reader  with char sequence;
	Check open;
	Check if char sequence reader has remaining;
	Remaining char sequence reader;
	Read target char buffer;
	Read char sequence reader;
	Skip char sequence reader;
	Handle ready;
	Handle mark supported;
	Handle mark;
	Reset char sequence reader;
	Close char sequence reader

16.11. Add a class for char sequence reader test. It allows to:

	Handle test read empty string;
	Handle test reads strings correctly;
	Handle test mark and reset;
	Handle test illegal arguments;
	Handle test methods throw when closed;
	Assert reads  correctly char sequence;
	Assert char sequence reader fully read;
	Read  fully char sequence reader

16.12. Add a class for char sink. It allows to:

	Instantiate char sink;
	Handle open stream;
	Handle open buffered stream;
	Write char sequence;
	Write lines;
	Write  from readable

16.13. Add a class for char sink test. It allows to:

	Set char sink test;
	Handle test open buffered stream;
	Handle test write string;
	Handle test write from reader;
	Handle test write from stream does not close that stream;
	Handle test write lines with specific separator;
	Handle test write lines with default separator;
	Handle test closes on errors copying from char source that throws;
	Handle test closes on errors when write throws;
	Handle test closes on errors when writing from reader that throws

16.14. Add a class for char sink tester. It allows to:

	Get tests;
	Get suite for string;
	Instantiate char sink tester  with char sink factory, method and method;
	Set char sink tester;
	Handle test open stream;
	Handle test open buffered stream;
	Handle test write;
	Handle test write lines system default separator;
	Handle test write lines specific separator;
	Assert contains expected string;
	Assert contains expected lines

16.15. Add a class for char source test. It allows to:

	Get suite;
	Set char source test;
	Handle test open buffered stream;
	Convert test copy;
	Convert test read;
	Handle test read first line;
	Convert test read lines;
	Handle test read lines with processor;
	Handle process line;
	Get result;
	Handle test read lines with processor stops on false;
	Convert test closes on errors copying;
	Handle test closes on errors when read throws;
	Handle test concat;
	Handle test concat infinite iterable;
	Handle test copy exceptions;
	Get and reset records;
	Run failure test;
	Run suppression failure test;
	Handle new normal char source;
	Handle new normal char sink;
	Handle open stream

16.16. Add a class for char source tester. It allows to:

	Get tests;
	Get suite for bytes;
	Get suite for string;
	Instantiate char source tester  with char source factory, method and method;
	Set char source tester;
	Handle test open stream;
	Handle test open buffered stream;
	Convert test copy;
	Convert test read;
	Handle test read first line;
	Convert test read lines;
	Handle test is empty;
	Handle test length;
	Handle test length if known;
	Handle test read lines with processor;
	Handle process line;
	Get result;
	Handle test read lines with processor stops on false;
	Assert expected string;
	Assert expected lines

16.17. Add a class for char streams test. It allows to:

	Convert test;
	Handle test read lines;
	Handle test read lines with line processor;
	Handle process line;
	Get result;
	Handle test skip fully EOF;
	Handle test skip fully;
	Handle test as writer;
	Handle test copy;
	Convert test copy;
	Handle test copy with reader that does not fill buffer;
	Handle test exhaust reader;
	Handle test exhaust readable;
	Handle test null writer;
	Handle new non buffer filling reader;
	Read;
	Wrap appendable as generic appendable;
	Append csq char sequence;
	Append;
	Wrap readable as generic readable;
	Read cb char buffer

16.18. Add a class for closeables. It allows to:

	Instantiate closeables;
	Close closeables;
	Close input stream quietly;
	Close reader quietly

16.19. Add a class for closeables test. It allows to:

	Handle test close closeable clean;
	Handle test close closeable with eaten exception;
	Handle test close closeable with thrown exception;
	Handle test close quietly input stream with eaten exception;
	Handle test close quietly reader with eaten exception;
	Handle test close null;
	Handle test close quietly null input stream;
	Handle test close quietly null reader;
	Handle setup closeable;
	Do  close closeable;

16.20. Add a class for counting input stream. It allows to:

	Instantiate counting input stream  with input stream;
	Get count;
	Read counting input stream;
	Skip counting input stream;
	Handle mark;
	Reset counting input stream

16.21. Add a class for counting output stream. It allows to:

	Instantiate counting output stream  with output stream;
	Get count;
	Write counting output stream;
	Close counting output stream

16.22. Add a class for counting output stream test. It allows to:

	Handle test count

16.23. Add a class for file backed output stream test. It allows to:

	Handle test threshold;
	Handle test finalize deletes file;
	Check if  is done;
	Handle test threshold reset on finalize;
	Write output stream;
	Handle test write error after close;
	Handle test reset

16.24. Add a class for files simplify path test. It allows to:

	Handle test simplify empty string;
	Handle test simplify dot;
	Handle test simplify white space;
	Convert test simplify;
	Handle test simplify 3;
	Handle test simplify 4;
	Handle test simplify 5;
	Handle test simplify 6;
	Handle test simplify 7;
	Handle test simplify 8;
	Handle test simplify 9;
	Handle test simplify 10;
	Handle test simplify 11;
	Handle test simplify 12;
	Handle test simplify 13;
	Handle test simplify dot dot;
	Handle test simplify dot dot slash;
	Handle test simplify dot dots;
	Handle test simplify rooted dot dots;
	Handle test madbots bug;
	Handle test 705;
	Handle test 716;
	Handle test hidden files;
	Handle test multiple dot filenames;
	Handle test slash dot;
	Handle test initial slash dot dot;
	Handle test initial slash dot;
	Handle test consecutive parents after present;
	Handle test rfc 2396 normal;
	Handle test rfc 2396 abnormal;
	Handle test rfc 3986 normal;
	Handle test rfc 3986 abnormal;
	Handle test extensive with absolute prefix;
	Handle test extensive no prefix;
	Do extensive test

16.25. Add a class for flushables. It allows to:

	Instantiate flushables;
	Handle flush;
	Handle flush quietly

16.26. Add a class for flushables test. It allows to:

	Handle test flush clean;
	Handle test flush flushable with eaten exception;
	Handle test flush flushable with thrown exception;
	Handle test flush quietly flushable with eaten exception;
	Handle setup flushable;
	Do flush

16.27. Add a class for io test case. It allows to:

	Tear io test case;
	Get test dir;
	Get test file;
	Create temp dir;
	Get temp dir;
	Create temp file;
	Handle new pre filled byte array;
	Handle copy;
	Delete file

16.28. Add a class for line buffer. It allows to:

	Add line buffer;
	Finish line;
	Finish line buffer;
	Handle line

16.29. Add a class for line buffer test. It allows to:

	Handle test process;
	Buffer helper;
	Apply;
	Handle line;
	Read using java;
	Read using reader;
	Get chunked readable;
	Read cbuf char buffer;
	Get chunked reader;
	Read

16.30. Add an interface declaration  for line processor. It allows to:

	Handle process line;
	Get result

16.31. Add a class for line reader. It allows to:

	Handle line;
	Instantiate line reader  with readable;
	Read line

16.32. Add a class for little endian data input stream. It allows to:

	Instantiate little endian data input stream  with input stream;
	Read line;
	Read little endian data input stream fully;
	Skip bytes;
	Read unsigned byte;
	Read unsigned short;
	Read int;
	Read little endian data input stream long;
	Read float;
	Read double;
	Read UTF;
	Read short;
	Read char;
	Read byte;
	Read boolean;
	Read and check byte

16.33. Add a class for little endian data input stream test. It allows to:

	Set little endian data input stream test;
	Initialize data;
	Handle test read fully;
	Handle test read unsigned byte eof;
	Handle test read unsigned short eof;
	Handle test read line;
	Handle test read little endian;
	Handle test skip bytes

16.34. Add a class for little endian data output stream. It allows to:

	Instantiate little endian data output stream  with output stream;
	Write little endian data output stream;
	Write boolean;
	Write byte;
	Write bytes;
	Write char;
	Write chars;
	Write double;
	Write float;
	Write int;
	Write little endian data output stream long;
	Write short;
	Write UTF;
	Close little endian data output stream

16.35. Add a class for little endian data output stream test. It allows to:

	Handle test write little endian;
	Handle test write bytes;
	Handle test write bytes discard high order bytes;
	Handle test write chars;
	Equals little endian data output stream test

16.36. Add a class for multi input stream. It allows to:

	Instantiate multi input stream  with iterator;
	Close multi input stream;
	Handle advance;
	Handle available;
	Handle mark supported;
	Read multi input stream;
	Skip multi input stream

16.37. Add a class for multi input stream test. It allows to:

	Handle test join;
	Handle test only one open;
	Handle open stream;
	Close;
	Join helper;
	Handle test read single byte;
	Handle test skip;
	Skip;
	Handle test read single no stack overflow;
	Handle test read array no stack overflow;
	Ten million empty sources;
	Handle new byte source;

16.38. Add a class for multi reader. It allows to:

	Instantiate multi reader  with readers iterator;
	Handle advance;
	Read multi reader;
	Skip multi reader;
	Handle ready;
	Close multi reader

16.39. Add a class for multi reader test. It allows to:

	Handle test only one open;
	Handle open stream;
	Close;
	Handle test ready;
	Handle test simple;
	Handle new char source;
	Handle test skip;
	Handle test skip zero

16.40. Add a class for package sanity tests. It allows to:

	Instantiate package sanity tests

16.41. Add a class for pattern filename filter. It allows to:

	Instantiate pattern filename filter;
	Instantiate pattern filename filter  with pattern;
	Accept dir file

16.42. Add a class for pattern filename filter test. It allows to:

	Handle test syntax exception;
	Handle test accept

16.43. Add a class for random amount input stream. It allows to:

	Instantiate random amount input stream  with input stream, random and random;
	Read random amount input stream

16.44. Add a class for reader input stream. It allows to:

	Instantiate reader input stream  with reader, charset and charset;
	Instantiate reader input stream  with reader, charset encoder and charset encoder;
	Close reader input stream;
	Read reader input stream;
	Grow char buffer;
	Read more chars;
	Handle available capacity;
	Draining reader input stream;
	Drain reader input stream

16.45. Add a class for resources test. It allows to:

	Get suite;
	Convert test;
	Handle test read lines;
	Handle test read lines with line processor;
	Handle process line;
	Get result;
	Convert test copy;
	Handle test get resource not found;
	Handle test get resource;
	Handle test get resource relative path not found;
	Handle test get resource relative path;
	Handle test get resource context class loader;
	Handle test get resource context class loader null;
	Handle test nulls;
	Get classfile

16.46. Add a class for source sink tester. It allows to:

	Instantiate source sink tester  with factory, data, method and method;
	Get name;
	Get lines;
	Handle open stream;
	Tear source sink tester;
	Get test methods

16.47. Add a class for test char sink. It allows to:

	Instantiate test char sink  with options;
	Get string;
	Get was stream opened;
	Get was stream closed;
	Handle open stream;
	Write;

16.48. Add a class for test char source. It allows to:

	Instantiate test char source  with options;
	Get was stream opened;
	Get was stream closed;
	Handle open stream

16.49. Add a class for test input stream. It allows to:

	Instantiate test input stream  with input stream, options and options;
	Instantiate test input stream  with input stream, options iterable and options iterable;
	Get closed;
	Read test input stream;
	Skip test input stream;
	Handle available;
	Close test input stream;
	Throw  if test option;
	Throw test input stream if

16.50. Add a class for test output stream. It allows to:

	Instantiate test output stream  with output stream, options and options;
	Instantiate test output stream  with output stream, options iterable and options iterable;
	Get closed;
	Write test output stream;
	Close test output stream;
	Throw  if test option;
	Throw test output stream if

16.51. Add a class for test reader. It allows to:

	Instantiate test reader  with options;
	Instantiate test reader  with test input stream;
	Get closed

16.52. Add an interface declaration  for test stream supplier. It allows to:

	Get was stream opened;
	Get was stream closed

16.53. Add a class for test writer. It allows to:

	Instantiate test writer  with options;
	Instantiate test writer  with test output stream;
	Write test writer;
	Get closed

17. Changes to package com.google.common.math:  

17.1. Add a class for apache benchmark. It allows to:

	Handle factorial double;
	Gcd int;
	Gcd apache benchmark long;
	Handle binomial coefficient;
	No add overflow;
	No mul overflow;
	Set apache benchmark;
	Int GCD;
	Long GCD;
	Int add overflow;
	Long add overflow;
	Get int mul overflow;
	Long apache benchmark mul overflow

17.2. Add a class for big integer math. It allows to:

	Get ceiling power of two;
	Get floor power of two;
	Check if big integer math is power of two;
	Log x big integer;
	Get sqrt;
	Sqrt floor;
	Handle sqrt approx with doubles;
	Divide p big integer;
	Handle factorial;
	Get list product;
	Handle binomial;
	Handle fits in long;
	Instantiate big integer math

17.3. Add a class for big integer math benchmark. It allows to:

	Set big integer math benchmark;
	Handle old slow factorial;
	Slow factorial;
	Handle factorial;
	Handle binomial

17.4. Add a class for big integer math rounding benchmark. It allows to:

	Set big integer math rounding benchmark;
	Log big integer math rounding benchmark;
	Get sqrt;
	Divide big integer math rounding benchmark

17.5. Add a class for big integer math test. It allows to:

	Test ceiling power  of two;
	Handle test floor power of two;
	Test ceiling power  of two negative;
	Handle test floor power of two negative;
	Test ceiling power  of two zero;
	Handle test floor power of two zero;
	Convert test constant sqrt;
	Handle test is power of two;
	Convert test log;
	Handle test log 10 zero always throws;
	Handle test log 10 negative always throws;
	Handle test log 10 floor;
	Handle test log 10 ceiling;
	Handle test log 10 exact;
	Handle test log 10 half up;
	Handle test log 10 half down;
	Handle test log 10 half even;
	Handle test log 10 trivial on power of 10;
	Handle test sqrt zero always zero;
	Handle test sqrt negative always throws;
	Handle test sqrt floor;
	Handle test sqrt ceiling;
	Handle test sqrt exact;
	Handle test sqrt half up;
	Handle test sqrt half down;
	Handle test sqrt half even;
	Handle test div non zero;
	Handle test div non zero exact;
	Handle test zero div is always zero;
	Handle test div by zero always fails;
	Handle test factorial;
	Handle test factorial 0;
	Handle test factorial negative;
	Handle test binomial small;
	Handle test binomial large;
	Run binomial test;
	Handle test binomial outside;
	Handle test null pointers;
	Fail format

17.6. Add a class for double math. It allows to:

	Round intermediate;
	Round rounding mode to int;
	Round  to long rounding mode;
	Round rounding mode to big integer;
	Check if double math is power of two;
	Log double math;
	Log rounding mode;
	Check if double math is mathematical integer;
	Handle factorial;
	Handle fuzzy equals;
	Handle fuzzy compare;
	Mean double math;
	Mean values iterable;
	Mean values iterator;
	Check finite;
	Instantiate double math

17.7. Add a class for double math benchmark. It allows to:

	Set double math benchmark;
	Log double math benchmark;
	Handle factorial;
	Check if double math benchmark is mathematical integer;
	Check if double math benchmark is power of two

17.8. Add a class for double math rounding benchmark. It allows to:

	Set double math rounding benchmark;
	Round double math rounding benchmark to int;
	Round double math rounding benchmark to long;
	Round double math rounding benchmark to big integer;
	Log 2 round

17.9. Add a class for double math test. It allows to:

	Handle test constants max factorial;
	Handle test constants every sixteenth factorial;
	Convert test round integral double;
	Convert test round fractional double;
	Convert test round exact integral double;
	Convert test round exact fractional double;
	Convert test round;
	Convert test round infinite;
	Convert test round log;
	Handle test is power of two yes;
	Handle test is power of two;
	Convert test log;
	Handle true log 2;
	Handle test is mathematical integer integral;
	Handle test is mathematical integer fractional;
	Handle test is mathematical integer not finite;
	Handle test factorial;
	Handle test factorial too high;
	Handle test factorial negative;
	Handle test fuzzy equals finite;
	Handle test fuzzy infinite versus finite with finite tolerance;
	Handle test fuzzy infinite versus infinite with finite tolerance;
	Handle test fuzzy equals infinite tolerance;
	Convert test fuzzy equals one;
	Convert test fuzzy equals two;
	Handle test fuzzy equals zero tolerance;
	Handle test fuzzy equals bad tolerance;
	Handle test fuzzy compare 0;
	Handle test fuzzy compare 1;
	Convert test fuzzy compare;
	Handle test fuzzy compare 3;
	Handle test fuzzy compare 4;
	Handle test fuzzy compare 5;
	Handle test fuzzy compare 6;
	Handle test fuzzy compare 7;
	Run test fuzzy compare;
	Handle test fuzzy compare bad tolerance;
	Handle test mean double varargs;
	Handle test mean int varargs;
	Handle test mean long varargs;
	Handle test mean empty varargs;
	Handle test mean double iterable;
	Handle test mean int iterable;
	Handle test mean long iterable;
	Handle test mean int iterator;
	Test mean long iterator;
	Handle test null pointers

17.10. Add a class for double utils. It allows to:

	Instantiate double utils;
	Process double utils double utils next down;
	Get significand;
	Check if double utils is finite;
	Check if double utils is normal;
	Get scale normalize;
	Handle big to double;
	Ensure non negative

17.11. Add a class for double utils test. It allows to:

	Handle test next down;
	Get jdk  next down;
	Convert test big;
	Handle test ensure non negative;
	Handle test one bits;
	Fail format

17.12. Add a class for int math. It allows to:

	Get ceiling power of two;
	Get floor power of two;
	Check if int math is power of two;
	Handle less than branch free;
	Log rounding mode;
	Log 10 floor;
	Get pow;
	Get sqrt;
	Sqrt floor;
	Divide rounding mode;
	Get mod;
	Get gcd;
	Get checked add;
	Get checked subtract;
	Get checked multiply;
	Get checked pow;
	Get saturated add;
	Get saturated subtract;
	Get saturated multiply;
	Get saturated pow;
	Handle factorial;
	Handle binomial;
	Mean int math;
	Check if int math is prime;
	Instantiate int math

17.13. Add a class for int math benchmark. It allows to:

	Set int math benchmark;
	Get pow;
	Get mod;
	G CD;
	Handle factorial;
	Handle binomial;
	Check if int math benchmark is prime

17.14. Add a class for int math rounding benchmark. It allows to:

	Set int math rounding benchmark;
	Log int math rounding benchmark;
	Get sqrt;
	Divide int math rounding benchmark

17.15. Add a class for int math test. It allows to:

	Handle test max signed power of two;
	Test ceiling power  of two;
	Handle test floor power of two;
	Test ceiling power  of two negative;
	Handle test floor power of two negative;
	Test ceiling power  of two zero;
	Handle test floor power of two zero;
	Convert test constant max power of sqrt;
	Handle test constants powers of 10;
	Handle test max log 10 for leading zeros;
	Handle test constants half powers of 10;
	Handle test constants biggest binomials;
	Handle test powers sqrt max int;
	Handle test less than branch free;
	Handle test is power of two;
	Convert test log;
	Handle test log 10 zero always throws;
	Handle test log 10 negative always throws;
	Handle test log 10 matches big integer;
	Handle test log 10 exact;
	Handle test log 10 trivial on power of ten;
	Handle test sqrt zero always zero;
	Handle test sqrt negative always throws;
	Handle test sqrt matches big integer;
	Handle test sqrt exact matches floor or throws;
	Handle test pow;
	Handle test div non zero;
	Handle test div non zero exact;
	Handle test zero div is always zero;
	Handle test div by zero always fails;
	Handle test mod;
	Handle test mod negative modulus fails;
	Handle test mod zero modulus fails;
	Handle test GCD;
	Handle test GCD zero;
	Handle test GCD negative positive throws;
	Handle test GCD negative zero throws;
	Handle test checked add;
	Handle test checked subtract;
	Handle test checked multiply;
	Handle test checked pow;
	Handle test saturated add;
	Handle test saturated subtract;
	Handle test saturated multiply;
	Handle test saturated pow;
	Get saturated cast;
	Assert operation equals;
	Handle test factorial;
	Handle test factorial negative;
	Handle test binomial;
	Handle test binomial outside;
	Handle test binomial negative;
	Handle test mean;
	Assert mean;
	Compute mean  safely;
	Handle fits in int;
	Handle test null pointers;
	Handle test is prime;
	Force int math test

17.16. Add a class for less than benchmark. It allows to:

	Set less than benchmark;
	Handle branch free lt int inlined;
	Get branch free lt int;
	Handle ternary lt int add outside ternary;
	Handle ternary lt int add inside ternary;
	Handle branch free lt long inlined;
	Get branch free lt long;
	Handle ternary lt long add outside ternary;
	Handle ternary lt long add inside ternary

17.17. Add a class for linear transformation test. It allows to:

	Handle test mapping and regular;
	Handle test mapping and horizontal;
	Handle test mapping and vertical;
	Handle test mapping infinite X 1;
	Handle test mapping infinite Y 1;
	Convert test mapping and infinite X;
	Convert test mapping and infinite Y;
	Handle test mapping nan X 1;
	Handle test mapping nan Y 1;
	Convert test mapping and nan X;
	Convert test mapping and nan Y;
	Handle test mapping and same point twice;
	Handle test mapping with slope regular;
	Handle test mapping with slope horizontal;
	Handle test mapping with slope vertical;
	Handle test mapping with slope minimal slope;
	Handle test mapping with slope maximal slope;
	Handle test mapping with slope nan slope;
	Handle test vertical regular;
	Handle test vertical infinite X;
	Handle test vertical nan X;
	Handle test horizontal regular;
	Handle test horizontal infinite Y;
	Handle test horizontal nan Y;
	Convert test for

17.18. Add a class for long math. It allows to:

	Get ceiling power of two;
	Get floor power of two;
	Check if long math is power of two;
	Handle less than branch free;
	Log rounding mode;
	Log 10 floor;
	Get pow;
	Get sqrt;
	Divide rounding mode;
	Get mod;
	Get gcd;
	Get checked add;
	Get checked subtract;
	Get checked multiply;
	Get checked pow;
	Get saturated add;
	Get saturated subtract;
	Get saturated multiply;
	Get saturated pow;
	Handle factorial;
	Handle binomial;
	Multiply fraction;
	Handle fits in int;
	Mean long math;
	Check if long math is prime;
	Handle mul mod;
	Handle square mod;
	Mod long math;
	Convert times;
	Handle test;
	Pow mod;
	Handle test witness;
	Instantiate long math

17.19. Add a class for long math benchmark. It allows to:

	Set long math benchmark;
	Get pow;
	Get mod;
	G CD;
	Handle factorial;
	Handle binomial;
	Check if long math benchmark is prime

17.20. Add a class for long math rounding benchmark. It allows to:

	Set long math rounding benchmark;
	Log long math rounding benchmark;
	Get sqrt;
	Divide long math rounding benchmark

17.21. Add a class for long math test. It allows to:

	Handle test max signed power of two;
	Test ceiling power  of two;
	Handle test floor power of two;
	Test ceiling power  of two negative;
	Handle test floor power of two negative;
	Test ceiling power  of two zero;
	Handle test floor power of two zero;
	Convert test constant max power of sqrt;
	Handle test max log 10 for leading zeros;
	Handle test constants powers of 10;
	Handle test constants half powers of 10;
	Handle test constants sqrt max long;
	Handle test constants factorials;
	Handle test constants biggest binomials;
	Handle test constants biggest simple binomials;
	Handle test less than branch free;
	Handle simple binomial;
	Handle test is power of two;
	Convert test log;
	Handle test log 10 zero always throws;
	Handle test log 10 negative always throws;
	Handle test log 10 matches big integer;
	Handle test log 10 exact;
	Handle test log 10 trivial on power of 10;
	Handle test sqrt negative always throws;
	Handle test sqrt matches big integer;
	Handle test sqrt exact matches floor or throws;
	Handle test pow;
	Handle test div non zero;
	Handle test div non zero exact;
	Handle test zero div is always zero;
	Handle test div by zero always fails;
	Handle test int mod;
	Handle test int mod negative modulus fails;
	Handle test int mod zero modulus fails;
	Handle test mod;
	Handle test mod negative modulus fails;
	Handle test GCD exhaustive;
	Handle test GCD zero;
	Handle test GCD negative positive throws;
	Handle test GCD negative zero throws;
	Handle test checked add;
	Handle test checked subtract;
	Handle test checked multiply;
	Handle test checked pow;
	Handle test saturated add;
	Handle test saturated subtract;
	Handle test saturated multiply;
	Handle test saturated pow;
	Assert operation equals;
	Handle test factorial;
	Handle test factorial negative;
	Handle test binomial;
	Handle test binomial exhaustive not overflowing;
	Handle test binomial outside;
	Handle test binomial negative;
	Handle test sqrt of perfect square as double is perfect;
	Handle test sqrt of long is at most floor sqrt max long;
	Handle test mean;
	Assert mean;
	Compute mean  safely;
	Handle fits in long;
	Get saturated cast;
	Handle test null pointers;
	Handle test is prime small;
	Handle test is prime many constants;
	Handle test is prime on uniform random;
	Handle test is prime on random primes;
	Handle test is prime on random composites;
	Handle test is prime throws on negative;
	Fail format

17.22. Add a class for math benchmarking. It allows to:

	Handle random positive big integer;
	Handle random non negative big integer;
	Handle random non zero big integer;
	Handle random big integer;
	Handle random double;
	Handle random exponent;
	Handle random positive double

17.23. Add a class for math preconditions. It allows to:

	Check positive;
	Check math preconditions non negative;
	Check x big integer non negative;
	Check rounding unnecessary;
	Check rounding mode in range for rounding inputs;
	Check no overflow;
	Instantiate math preconditions

17.24. Add a class for math preconditions test. It allows to:

	Handle test check positive zero int;
	Handle test check positive max int;
	Handle test check positive min int;
	Handle test check positive positive int;
	Handle test check positive negative int;
	Handle test check positive zero long;
	Handle test check positive max long;
	Handle test check positive min long;
	Handle test check positive positive long;
	Handle test check positive negative long;
	Handle test check positive zero big integer;
	Handle test check positive postive big integer;
	Handle test check positive negative big integer;
	Handle test check non negative zero int;
	Handle test check non negative max int;
	Handle test check non negative min int;
	Handle test check non negative positive int;
	Handle test check non negative negative int;
	Handle test check non negative zero long;
	Handle test check non negative max long;
	Handle test check non negative min long;
	Handle test check non negative positive long;
	Handle test check non negative negative long;
	Handle test check non negative zero big integer;
	Handle test check non negative positive big integer;
	Handle test check non negative negative big integer;
	Handle test check non negative zero float;
	Handle test check non negative max float;
	Handle test check non negative min float;
	Handle test check non negative positive float;
	Handle test check non negative negative float;
	Handle test check non negative nan float;
	Handle test check non negative zero double;
	Handle test check non negative max double;
	Handle test check non negative min double;
	Handle test check non negative positive double;
	Handle test check non negative negative double;
	Handle test check non negative nan double;
	Handle test check rounding unnnecessary success;
	Handle test check rounding unnecessary failure;
	Handle test check in range success;
	Handle test check in range failure;
	Handle test check no overflow success;
	Handle test check no overflow failure

17.25. Add a class for math testing. It allows to:

	Apply integer;
	Apply;
	Apply x integer;
	Apply x big integer;
	Apply input double

17.26. Add a class for package sanity tests. It allows to:

	Instantiate package sanity tests

17.27. Add a class for paired stats. It allows to:

	Instantiate paired stats  with x stats, y stats and y stats;
	Get count;
	X stats;
	Handle y stats;
	Get population covariance;
	Get sample covariance;
	Get pearsons correlation coefficient;
	Handle least squares fit;
	Check if paired stats equals;
	Hash code;
	Convert paired stats to string;
	Get sum of products of deltas;
	Ensure positive;
	Ensure paired stats in unit range;
	Convert paired stats to byte array;
	Process paired stats paired stats from byte array

17.28. Add a class for paired stats accumulator. It allows to:

	Add paired stats accumulator;
	Add values paired stats;
	Get snapshot;
	Get count;
	X stats;
	Handle y stats;
	Get population covariance;
	Get sample covariance;
	Get pearsons correlation coefficient;
	Handle least squares fit;
	Ensure positive;
	Ensure paired stats accumulator in unit range

17.29. Add a class for paired stats accumulator test. It allows to:

	Set paired stats accumulator test;
	Handle test count;
	Handle test count overflow does not throw;
	Handle test X stats;
	Handle test Y stats;
	Handle test population covariance;
	Handle test sample covariance;
	Handle test pearsons correlation coefficient;
	Handle test least squares fit

17.30. Add a class for paired stats test. It allows to:

	Handle test count;
	Handle test X stats;
	Handle test Y stats;
	Handle test population covariance;
	Handle test sample covariance;
	Handle test pearsons correlation coefficient;
	Handle test least squares fit;
	Handle test equals and hash code;
	Handle test serializable;
	Convert test;
	Create single stats;
	Handle test from byte array with null input throws null pointer exception;
	Handle test from byte array with empty array input throws illegal argument exception;
	Handle test from byte array with too long array input throws illegal argument exception;
	Handle test from byte array with too short array input throws illegal argument exception

17.31. Add a class for quantiles algorithm test. It allows to:

	Set quantiles algorithm test;
	Handle test single quantile median;
	Handle test single quantile percentile 99;
	Handle test multiple quantile

17.32. Add a class for quantiles benchmark. It allows to:

	Set quantiles benchmark;
	Get dataset;
	Get median;
	Handle percentile 90;
	Percentile quantiles benchmark;
	Get percentiles 90 and 99;
	Three percentiles;
	All deciles

17.33. Add a class for quantiles test. It allows to:

	Compare actual double;
	Convert to string;
	Handle test median compute double collection;
	Handle test median compute in place;
	Handle test quartiles index compute double collection;
	Handle test quartiles index compute in place;
	Handle test quartiles indexes varargs compute double collection;
	Handle test quartiles indexes varargs compute in place;
	Handle test scale index compute double collection;
	Handle test scale index compute long collection;
	Handle test scale index compute integer collection;
	Handle test scale index compute double varargs;
	Handle test scale index compute long varargs;
	Handle test scale index compute int varargs;
	Handle test scale index compute in place;
	Handle test scale index compute in place explicit varargs;
	Handle test scale indexes varargs compute double collection;
	Handle test scale indexes varargs compute double collection snapshots indexes;
	Handle test scale indexes large varargs compute double collection;
	Handle test scale indexes varargs compute long collection;
	Handle test scale indexes varargs compute integer collection;
	Handle test scale indexes varargs compute double varargs;
	Handle test scale indexes varargs compute long varargs;
	Handle test scale indexes varargs compute int varargs;
	Handle test scale indexes varargs compute in place;
	Handle test scale indexes varargs compute in place explicit varargs;
	Handle test scale indexes collection compute double collection;
	Handle test scale indexes collection compute in place;
	Handle test scale indexes varargs compute double collection positive infinity;
	Handle test scale index compute double collection positive infinity;
	Handle test scale indexes varargs compute double collection negative infinity;
	Handle test scale index compute double collection negative infinity;
	Handle test scale indexes varargs compute double collection both infinities;
	Handle test scale indexes varargs compute double collection nan;
	Handle test scale index compute double collection nan;
	Generate pseudorandom dataset;
	Get expected large dataset percentile;
	Handle test percentiles index compute double collection;
	Handle test percentiles index compute in place;
	Handle test percentiles indexes varargs pairs compute double collection;
	Handle test percentiles indexes varargs all compute double collection;
	Handle test percentiles indexes varargs all compute in place;
	Handle test scale zero;
	Handle test scale negative;
	Handle test scale index negative;
	Handle test scale index too high;
	Handle test scale indexes varargs negative;
	Handle test scale indexes varargs too high;
	Handle test scale indexes collection negative;
	Handle test scale indexes collection too high;
	Handle test scale index compute double collection empty;
	Handle test scale index compute double varargs empty;
	Handle test scale index compute long varargs empty;
	Handle test scale index compute int varargs empty;
	Handle test scale index compute in place empty;
	Handle test scale indexes varargs compute double collection empty;
	Handle test scale indexes varargs compute double varargs empty;
	Handle test scale indexes varargs compute long varargs empty;
	Handle test scale indexes varargs compute int varargs empty;
	Handle test scale indexes varargs compute in place empty

17.34. Add a class for stats. It allows to:

	Instantiate stats;
	O values iterable;
	O values iterator;
	O stats;
	Get count;
	Mean stats;
	Get sum;
	Get population variance;
	Get population standard deviation;
	Get sample variance;
	Get sample standard deviation;
	Get min;
	Get max;
	Check if stats equals;
	Hash code;
	Convert stats to string;
	Get sum of squares of deltas;
	Mean  of values iterable;
	Mean  of values iterator;
	Mean stats of;
	Convert stats to byte array;
	Write  to byte buffer;
	Process stats stats from byte array;
	Read  from byte buffer

17.35. Add a class for stats accumulator. It allows to:

	Add stats accumulator;
	Add values iterable;
	Add values iterator;
	Add values stats;
	Get snapshot;
	Get count;
	Mean stats accumulator;
	Get sum;
	Get population variance;
	Get population standard deviation;
	Get sample variance;
	Get sample standard deviation;
	Get min;
	Get max;
	Get sum of squares of deltas;
	Calculate new mean non finite

17.36. Add a class for stats accumulator test. It allows to:

	Set stats accumulator test;
	Handle test count;
	Handle test count overflow does not throw;
	Handle test mean;
	Handle test sum;
	Handle test population variance;
	Handle test population standard deviation;
	Handle test sample variance;
	Handle test sample standard deviation;
	Handle test max;
	Handle test min

17.37. Add a class for stats benchmark. It allows to:

	Mean stats benchmark;

Add a local a class for mean and variance. It allows to:

	Instantiate mean and variance;
	Hash code;
	Get variance;
	Set mean and variance;
	Mean mean and variance

17.38. Add a class for stats test. It allows to:

	Handle test count;
	Handle test mean;
	Handle test sum;
	Handle test population variance;
	Handle test population standard deviation;
	Handle test sample variance;
	Handle test sample standard deviation;
	Handle test max;
	Handle test min;
	Handle test equals and hash code;
	Handle test serializable;
	Convert test;
	Handle test mean of;
	Handle test from byte array with null input throws null pointer exception;
	Handle test from byte array with empty array input throws illegal argument exception;
	Handle test from byte array with too long array input throws illegal argument exception;
	Handle test from byte array with too short array input throws illegal argument exception

17.39. Add a class for test platform. It allows to:

	Handle ints can go out of range;
	Check if test platform is android

18. Changes to package com.google.common.net:  

18.1. Add a class for host and port. It allows to:

	Instantiate host and port;
	Get host;
	Check if host and port has port;
	Get port;
	Get port or default;
	Process host and port host and port from parts;
	Process host and port host and port from host;
	Process host and port host and port from string;
	Get host and port  from bracketed host;
	Process host and port host and port with default port;
	Require brackets  for I pv 6;
	Check if host and port equals;
	Hash code;
	Convert host and port to string;
	Check if host and port is valid port

18.2. Add a class for host and port test. It allows to:

	Handle test from string well formed;
	Handle test from string bad default port;
	Handle test from string unused default port;
	Handle test from string bad port;
	Handle test from string unparseable nonsense;
	Handle test from string parseable nonsense;
	Check host and port test from string case;
	Handle test from parts;
	Handle test from host;
	Handle test get port or default;
	Handle test hash code and equals;
	Handle test require brackets for I pv 6;
	Convert test;
	Handle test serialization

18.3. Add a class for host specifier. It allows to:

	Instantiate host specifier;
	Process host specifier host specifier from valid;
	Process host specifier host specifier from;
	Check if host specifier is valid;
	Check if host specifier equals;
	Hash code;
	Convert host specifier to string

18.4. Add a class for host specifier test. It allows to:

	Test good ip addresses;
	Handle test bad ip addresses;
	Test good domains;
	Handle test bad domains;
	Handle test equality;
	Spec host specifier test;
	Handle test nulls;
	Assert good;
	Assert bad

18.5. Add a class for http headers test. It allows to:

	Handle test constant name matches string;
	Assert constant name matches string;
	Handle relevant fields;
	Handle upper to http header name

18.6. Add a class for inet addresses test. It allows to:

	Handle test nulls;
	Handle test for string bogus input;
	Handle test 3 ff 31;
	Handle test for string I pv 4 input;
	Handle test for string I pv 6 input;
	Handle test for string I pv 6 eight colons;
	Convert test convert dotted quad;
	Convert test;
	Handle test for uri string I pv 4;
	Handle test for uri string I pv 6;
	Handle test for uri string I pv 4 mapped;
	Handle test is uri inet address;
	Handle test for uri string bad;
	Handle test compat I pv 4 addresses;
	Handle test mapped I pv 4 addresses;
	Convert test 6;
	Handle test teredo addresses;
	Handle test teredo address null server;
	Handle test isatap addresses;
	Handle test get embedded I pv 4 client address;
	Handle test get coerced I pv 4 address;
	Handle test from integer;
	Handle test from little endian byte array;
	Handle test is maximum;
	Handle test increment I pv 4;
	Handle test increment I pv 6;
	Handle test decrement I pv 4;
	Handle test decrement I pv 6

18.7. Add a class for internet domain name. It allows to:

	Instantiate internet domain name;
	Find suffix  of type;
	Process internet domain name internet domain name from;
	Validate syntax;
	Validate part;
	Get parts;
	Check if internet domain name is public suffix;
	Check if internet domain name has public suffix;
	Handle public suffix;
	Check if internet domain name is under public suffix;
	Check if internet domain name is top private domain;
	Handle top private domain;
	Check if internet domain name is registry suffix;
	Check if internet domain name has registry suffix;
	Get registry suffix;
	Check if internet domain name is under registry suffix;
	Check if internet domain name is top domain under registry suffix;
	Handle top domain under registry suffix;
	Check if internet domain name has parent;
	Get parent;
	Get ancestor;
	Get child;
	Check if internet domain name is valid;
	Check if internet domain name matches wildcard suffix type;
	Check if internet domain name matches type;
	Convert internet domain name to string;
	Check if internet domain name equals;
	Hash code

18.8. Add a class for internet domain name test. It allows to:

	Handle test valid;
	Handle test invalid;
	Test public suffix;
	Handle test under public suffix;
	Handle test top private domain;
	Handle test under private domain;
	Handle test registry suffix;
	Handle test under registry suffix;
	Handle test top domain under registry suffix;
	Handle test under top domain under registry suffix;
	Handle test parent;
	Handle test child;
	Handle test parent child;
	Handle test valid top private domain;
	Handle test invalid top private domain;
	Handle test is valid;
	Convert test;
	Test public suffix exclusion;
	Test public suffix multiple unders;
	Handle test registry suffix exclusion;
	Handle test registry suffix multiple unders;
	Handle test equality;
	Get idn;
	Handle test nulls

18.9. Add a class for media type test. It allows to:

	Handle test parse use constants;
	Handle test create use constants;
	Handle test constants charset;
	Handle test constants are unique;
	Get constant fields;
	Apply input field;
	Get constants;
	Handle test create invalid type;
	Handle test create invalid subtype;
	Handle test create wildcard type declared subtype;
	Handle test create application type;
	Handle test create audio type;
	Handle test create image type;
	Handle test create text type;
	Handle test create video type;
	Handle test get type;
	Handle test get subtype;
	Handle test get parameters;
	Handle test without parameters;
	Handle test with parameters;
	Handle test with parameters invalid attribute;
	Handle test with parameter;
	Handle test with parameter invalid attribute;
	Handle test with parameters iterable;
	Handle test with parameters iterable invalid attribute;
	Handle test with parameters iterable null value;
	Handle test with charset;
	Handle test has wildcard;
	Handle test is;
	Handle test parse empty;
	Handle test parse bad input;
	Handle test get charset;
	Handle test get charset utf 16;
	Handle test get charset too many;
	Handle test get charset illegal charset;
	Handle test get charset unsupported charset;
	Handle test equals;
	Handle test equals non utf 8 charsets;
	Handle test null pointer;
	Convert test

18.10. Add a class for package sanity tests. It allows to:

	Instantiate package sanity tests

18.11. Add a class for percent escaper. It allows to:

	Instantiate percent escaper;
	Create safe octets;
	Handle next escape index;
	Escape percent escaper;

18.12. Add a class for percent escaper test. It allows to:

	Handle test simple escaper;
	Handle test plus for space;
	Handle test custom escaper;
	Handle test custom escaper withpercent;
	Handle test bad arguments null;
	Handle test bad arguments badchars;
	Handle test bad arguments plusforspace;
	Escape ascii

18.13. Add a class for url escapers. It allows to:

	Instantiate url escapers;
	Get url form parameter escaper;
	Get url path segment escaper;
	Get url fragment escaper

18.14. Add a class for url escapers test. It allows to:

	Assert basic url escaper  except percent;
	Assert basic url escaper;
	Handle test url form parameter escaper;
	Handle test url path segment escaper;
	Assert path escaper;
	Handle test url fragment escaper

19. Changes to package com.google.common.primitives:  

19.1. Add a class for booleans test. It allows to:

	Handle test hash code;
	Handle test true first;
	Handle test false first;
	Handle test compare;
	Handle test contains;
	Handle test index of;
	Handle test index of arrays;
	Handle test last index of;
	Handle test concat;
	Handle test ensure capacity;
	Handle test ensure capacity fail;
	Handle test join;
	Handle test lexicographical comparator;
	Handle test lexicographical comparator serializable;
	Handle test reverse;
	Handle test reverse indexed;
	Convert test;
	Handle test as list is empty;
	Handle test as list size;
	Handle test as list index of;
	Handle test as list last index of;
	Handle test as list contains;
	Handle test as list equals;
	Handle test as list hashcode;
	Convert test as list;
	Handle test as list set;
	Handle test count true;
	Handle test nulls

19.2. Add a class for bytes test. It allows to:

	Handle test hash code;
	Handle test contains;
	Handle test index of;
	Handle test index of array target;
	Handle test last index of;
	Handle test concat;
	Handle test ensure capacity;
	Handle test ensure capacity fail;
	Convert test;
	Handle test as list is A view;
	Convert test as list;
	Convert test as list sub list;
	Handle test as list empty;
	Handle test reverse;
	Handle test reverse indexed;
	Handle test nulls

19.3. Add a class for chars test. It allows to:

	Handle test hash code;
	Handle test checked cast;
	Handle test saturated cast;
	Assert cast fails;
	Handle test compare;
	Handle test contains;
	Handle test index of;
	Handle test index of array target;
	Handle test last index of;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Convert test constrain;
	Handle test concat;
	Handle test from byte array;
	Handle test from byte array fails;
	Handle test from bytes;
	Handle test byte array round trips;
	Handle test byte array round trips fails;
	Handle test ensure capacity;
	Handle test ensure capacity fail;
	Handle test join;
	Handle test lexicographical comparator;
	Handle test lexicographical comparator serializable;
	Handle test reverse;
	Handle test reverse indexed;
	Handle test sort descending;
	Handle test sort descending indexed;
	Convert test;
	Handle test as list is A view;
	Convert test as list;
	Convert test as list sub list;
	Handle test as list empty;
	Handle test nulls

19.4. Add a class for doubles test. It allows to:

	Handle test hash code;
	Handle test is finite;
	Handle test compare;
	Handle test contains;
	Handle test index of;
	Handle test index of array target;
	Handle test last index of;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Convert test constrain;
	Handle test concat;
	Handle test ensure capacity;
	Handle test ensure capacity fail;
	Handle test join;
	Handle test join non trivial doubles;
	Handle test lexicographical comparator;
	Handle test reverse;
	Handle test reverse indexed;
	Handle test sort descending;
	Handle test sort descending indexed;
	Handle test lexicographical comparator serializable;
	Handle test string converter serialization;
	Convert test;
	Handle test as list is A view;
	Convert test as list;
	Convert test as list sub list;
	Handle test as list empty;
	Get reference try parse;
	Check try parse;
	Handle test try parse hex;
	Handle test try parse all code points;
	Convert test try parse of;
	Convert test try parse;
	Handle test try parse infinity;
	Handle test try parse failures;
	Handle test nulls;
	Handle test string converter convert;
	Handle test string converter convert error;
	Handle test string converter null conversions;
	Handle test string converter reverse;
	Handle test string converter null pointer tester;
	Handle test try parse with null no gwt

19.5. Add a class for floats test. It allows to:

	Handle test hash code;
	Handle test is finite;
	Handle test compare;
	Handle test contains;
	Handle test index of;
	Handle test index of array target;
	Handle test last index of;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Convert test constrain;
	Handle test concat;
	Handle test ensure capacity;
	Handle test ensure capacity fail;
	Handle test join;
	Handle test lexicographical comparator;
	Handle test lexicographical comparator serializable;
	Handle test reverse;
	Handle test reverse indexed;
	Handle test sort descending;
	Handle test sort descending indexed;
	Handle test string converter serialization;
	Convert test;
	Handle test as list is A view;
	Convert test as list;
	Convert test as list sub list;
	Handle test as list empty;
	Get reference try parse;
	Check try parse;
	Handle test try parse hex;
	Handle test try parse all code points;
	Convert test try parse of;
	Convert test try parse;
	Handle test try parse infinity;
	Handle test try parse failures;
	Handle test nulls;
	Handle test string converter convert;
	Handle test string converter convert error;
	Handle test string converter null conversions;
	Handle test string converter reverse;
	Handle test string converter null pointer tester;
	Handle test try parse with null no gwt

19.6. Add a class for ints test. It allows to:

	Handle test hash code;
	Handle test checked cast;
	Handle test saturated cast;
	Assert cast fails;
	Handle test compare;
	Handle test contains;
	Handle test index of;
	Handle test index of array target;
	Handle test last index of;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Convert test constrain;
	Handle test concat;
	Convert test;
	Handle test from byte array;
	Handle test from byte array fails;
	Handle test from bytes;
	Handle test byte array round trips;
	Handle test ensure capacity;
	Handle test ensure capacity fail;
	Handle test join;
	Handle test lexicographical comparator;
	Handle test lexicographical comparator serializable;
	Handle test reverse;
	Handle test reverse indexed;
	Handle test sort descending;
	Handle test sort descending indexed;
	Handle test string converter serialization;
	Handle test as list is A view;
	Convert test as list;
	Convert test as list sub list;
	Handle test as list empty;
	Handle test nulls;
	Handle test string converter convert;
	Handle test string converter convert error;
	Handle test string converter null conversions;
	Handle test string converter reverse;
	Handle test string converter null pointer tester;
	Handle test try parse;
	Try parse and assert equals;
	Handle test try parse radix;
	Radix value integer;
	Handle test try parse radix too big;
	Handle test try parse radix too small;
	Handle test try parse with null gwt

19.7. Add a class for longs test. It allows to:

	Handle test hash code;
	Handle test compare;
	Handle test contains;
	Handle test index of;
	Handle test index of array target;
	Handle test last index of;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Convert test constrain;
	Handle test concat;
	Assert byte array equals;
	Convert test;
	Handle test from byte array;
	Handle test from byte array fails;
	Handle test from bytes;
	Handle test byte array round trips;
	Handle test ensure capacity;
	Handle test ensure capacity fail;
	Handle test join;
	Handle test lexicographical comparator;
	Handle test lexicographical comparator serializable;
	Handle test reverse;
	Handle test reverse indexed;
	Handle test sort descending;
	Handle test sort descending indexed;
	Handle test string converter serialization;
	Handle test as list is A view;
	Convert test as list;
	Convert test as list sub list;
	Handle test as list empty;
	Handle test nulls;
	Handle test string converter convert;
	Handle test string converter convert error;
	Handle test string converter null conversions;
	Handle test string converter reverse;
	Handle test string converter null pointer tester;
	Handle test try parse;
	Try parse and assert equals;
	Handle test try parse radix;
	Radix longs test;
	Handle test try parse radix too big;
	Handle test try parse radix too small;
	Handle test try parse with null gwt

19.8. Add a class for package sanity tests. It allows to:

	Instantiate package sanity tests

19.9. Add an object creator class for parse request. It allows to:

	Instantiate parse request;
	Process parse request parse request from string

19.10. Add a class for primitives. It allows to:

	Instantiate primitives;
	Add forward map;
	All primitive types;
	All wrapper types;
	Check if primitives is wrapper type;
	Wrap type class;
	Get unwrap

19.11. Add a class for primitives test. It allows to:

	Handle test is wrapper type;
	Handle test wrap;
	Handle test unwrap;
	Test all primitive types;
	Test all wrapper types;
	Handle test null pointer exceptions

19.12. Add a class for shorts test. It allows to:

	Handle test hash code;
	Handle test checked cast;
	Handle test saturated cast;
	Assert cast fails;
	Handle test compare;
	Handle test contains;
	Handle test index of;
	Handle test index of array target;
	Handle test last index of;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Convert test constrain;
	Handle test concat;
	Convert test;
	Handle test from byte array;
	Handle test from byte array fails;
	Handle test from bytes;
	Handle test byte array round trips;
	Handle test ensure capacity;
	Handle test ensure capacity fail;
	Handle test join;
	Handle test lexicographical comparator;
	Handle test lexicographical comparator serializable;
	Handle test reverse;
	Handle test reverse indexed;
	Handle test sort descending;
	Handle test sort descending indexed;
	Handle test string converter serialization;
	Handle test as list is A view;
	Convert test as list;
	Convert test as list sub list;
	Handle test as list empty;
	Handle test nulls;
	Handle test string converter convert;
	Handle test string converter convert error;
	Handle test string converter null conversions;
	Handle test string converter reverse;
	Handle test string converter null pointer tester

19.13. Add a class for signed bytes. It allows to:

	Instantiate signed bytes;
	Get checked cast;
	Get saturated cast;
	Compare signed bytes;
	Get min;
	Get max;
	Join signed bytes;
	Handle lexicographical comparator;
	Convert signed bytes to string;
	Descending signed bytes;

19.14. Add a class for signed bytes test. It allows to:

	Handle test checked cast;
	Handle test saturated cast;
	Assert cast fails;
	Handle test compare;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Handle test join;
	Handle test lexicographical comparator;
	Handle test lexicographical comparator serializable;
	Handle test sort descending;
	Handle test sort descending indexed;
	Handle test nulls

19.15. Add a class for unsigned bytes benchmark. It allows to:

	Set unsigned bytes benchmark;
	Long equal java;
	Long equal unsafe;
	Diff last java;
	Diff last unsafe

19.16. Add a class for unsigned bytes test. It allows to:

	Convert test;
	Handle test checked cast;
	Handle test saturated cast;
	Assert cast fails;
	Handle test compare;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Assert unsigned bytes test;
	Handle test parse unsigned byte;
	Handle test max value;
	Handle test parse unsigned byte with radix;
	Handle test parse unsigned byte throws exception for invalid radix;
	Handle test join;
	Handle unsafe comparator class name;
	Handle unsafe comparator available;
	Handle test lexicographical comparator choice;
	Handle test lexicographical comparator;
	Handle test lexicographical comparator long inputs;
	Handle test sort;
	Handle test sort indexed;
	Handle test sort descending;
	Handle test sort descending indexed;
	Handle test nulls

19.17. Add a class for unsigned integer. It allows to:

	Instantiate unsigned integer;
	Process unsigned integer unsigned integer from int bits;
	Get value of;
	Plus val unsigned integer;
	Minus val unsigned integer;
	Get times;
	Get divided by;
	Get mod;
	Get int value;
	Handle long value;
	Float value;
	Handle double value;
	Handle big integer value;
	Compare  to other unsigned integer;
	Hash code;
	Check if unsigned integer equals;
	Convert unsigned integer to string;

19.18. Add a class for unsigned integer test. It allows to:

	Force unsigned integer test;
	Handle test from int bits and int value are inverses;
	Handle test from int bits long value;
	Handle test value of long;
	Handle test value of big integer;
	Convert test;
	Handle test float value;
	Handle test double value;
	Handle test plus;
	Handle test minus;
	Handle test times;
	Handle test divided by;
	Handle test divide by zero throws;
	Handle test mod;
	Handle test mod by zero;
	Handle test compare;
	Handle test equals;
	Handle test int value;
	Handle test serialization;
	Handle test nulls

19.19. Add a class for unsigned ints. It allows to:

	Instantiate unsigned ints;
	Flip unsigned ints;
	Compare unsigned ints;
	Convert unsigned ints to long;
	Get checked cast;
	Get saturated cast;
	Get min;
	Get max;
	Join unsigned ints;
	Handle lexicographical comparator;
	Convert unsigned ints to string;
	Handle sort;
	Descending unsigned ints;
	Divide unsigned ints;
	Get remainder;
	Decode unsigned ints;
	Parse unsigned int;

19.20. Add a class for unsigned ints test. It allows to:

	Handle test checked cast;
	Assert cast fails;
	Handle test saturated cast;
	Convert test;
	Handle test compare;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Handle test lexicographical comparator;
	Handle test sort;
	Handle test sort indexed;
	Handle test sort descending;
	Handle test sort descending indexed;
	Handle test divide;
	Handle test remainder;
	Handle test divide remainder euclidean property;
	Handle test parse int;
	Handle test parse int fail;
	Handle test parse int with radix;
	Handle test parse int with radix limits;
	Handle test parse int throws exception for invalid radix;
	Handle test decode int;
	Handle test decode int fails;
	Handle test join;
	Join unsigned ints test;
	Handle test nulls

19.21. Add a class for unsigned long. It allows to:

	Instantiate unsigned long;
	Process unsigned long unsigned long from long bits;
	Get value of;
	Plus val unsigned long;
	Minus val unsigned long;
	Get times;
	Get divided by;
	Get mod;
	Get int value;
	Handle long value;
	Float value;
	Handle double value;
	Handle big integer value;
	Compare  to unsigned long;
	Hash code;
	Check if unsigned long equals;
	Convert unsigned long to string;

19.22. Add a class for unsigned long test. It allows to:

	Handle test as unsigned and long value are inverses;
	Handle test as unsigned big integer value;
	Handle test value of long;
	Handle test value of big integer;
	Convert test;
	Handle test float value;
	Handle test double value;
	Handle test plus;
	Handle test minus;
	Handle test times;
	Handle test divided by;
	Handle test divide by zero throws;
	Handle test mod;
	Handle test mod by zero;
	Handle test compare;
	Handle test equals;
	Handle test int value;
	Handle test serialization;
	Handle test nulls

19.23. Add a class for unsigned longs benchmark. It allows to:

	Set unsigned longs benchmark;
	Divide unsigned longs benchmark;
	Get remainder;
	Parse unsigned  long;
	Parse unsigned longs benchmark;
	Convert unsigned longs benchmark to string;
	Handle random;
	Handle random divisor

19.24. Add a class for unsigned longs test. It allows to:

	Handle test compare;
	Handle test max no args;
	Handle test max;
	Handle test min no args;
	Handle test min;
	Handle test lexicographical comparator;
	Handle test sort;
	Handle test sort indexed;
	Handle test sort descending;
	Handle test sort descending indexed;
	Handle test divide;
	Handle test remainder;
	Handle test divide remainder euclidean property;
	Handle test parse long;
	Handle test parse long empty string;
	Handle test parse long fails;
	Handle test decode long;
	Handle test decode long fails;
	Handle test parse long with radix;
	Handle test parse long with radix limits;
	Handle test parse long throws exception for invalid radix;
	Convert test;
	Handle test join;
	Handle test nulls

20. Changes to package com.google.common.reflect:  

20.1. Add a class for abstract invocation handler. It allows to:

	Invoke method;
	Handle invocation;
	Check if abstract invocation handler equals;
	Hash code;
	Convert abstract invocation handler to string;
	Check if abstract invocation handler is proxy of same interfaces

20.2. Add a class for element. It allows to:

	Instantiate element  with member;
	Get owner type;
	Check if element is annotation present;
	Get annotation;
	Get annotations;
	Get declared annotations;
	Set accessible;
	Check if element is accessible;
	Get declaring class;
	Get name;
	Get modifiers;
	Check if element is synthetic;
	Check if element is public;
	Check if element is protected;
	Check if element is package private;
	Check if element is private;
	Check if element is static;
	Check if element is final;
	Check if element is abstract;
	Check if element is native;
	Check if element is synchronized;
	Check if element is volatile;
	Check if element is transient;
	Check if element equals;
	Hash code;
	Convert element to string

20.3. Add a class for mutable type to instance map test. It allows to:

	Get suite;
	Create;
	Set mutable type to instance map test;
	Handle test put throws;
	Handle test put all throws;
	Handle test entry set mutation throws;
	Convert test entry set;
	Handle test put and get instance;
	Handle test null;
	Handle test primitive and wrapper;
	Handle test parameterized type;
	Handle test generic array type;
	Handle test wildcard type;
	Handle test get instance with type variable;
	Handle test put instance with type variable;
	Any iterable type

20.4. Add a class for native type variable equals. It allows to:

	Get types

20.5. Add a class for package sanity tests

20.6. Add a class for parameter. It allows to:

	Instantiate parameter  with declaration invokable, type token, annotations and annotations;
	Get type;
	Get declaring invokable;
	Check if parameter is annotation present;
	Get annotation;
	Get annotations;
	Get annotations  by type;
	Get declared annotations;
	Get declared annotation;
	Get declared annotations  by type;
	Check if parameter equals;
	Hash code;
	Convert parameter to string

20.7. Add a class for parameter test. It allows to:

	Handle test nulls;
	Handle test equals;
	Some method;
	Another method

20.8. Add a class for reflection. It allows to:

	Get package name;
	Initialize classes;
	Handle new proxy;
	Instantiate reflection

20.9. Add a class for subtype tester. It allows to:

	Check if subtype tester is subtype;
	Not subtype;
	Test all declarations;
	Compare a method;
	Get subtype tester only parameter type;
	Get supertype;
	Get subtype

20.10. Add a class for type capture. It allows to:

	Capture type capture

20.11. Add a class for type parameter. It allows to:

	Instantiate type parameter;
	Hash code;
	Check if type parameter equals;
	Convert type parameter to string

20.12. Add a class for type parameter test. It allows to:

	Handle test capture type parameter;
	Handle test concrete type rejected;
	Handle test equals;
	Handle test null pointers

20.13. Add an interface declaration  for type to instance map. It allows to:

	Get instance;
	Put instance;

20.14. Add a class for type visitor. It allows to:

	Handle visit;
	Visit class;
	Visit generic array type;
	Visit parameterized type;
	Visit type variable;
	Visit wildcard type

21. Changes to package com.google.common.reflect.subpackage:  

21.1. Add a class for class in sub package

22. Changes to package com.google.common.testing:  

22.1. Add an interface declaration  for an interface

Add a local a class for an abstract class. It allows to:

	Instantiate an abstract class;
	Check if an abstract class fails to check null

Add a local a class for no public static methods. It allows to:

	Not public

22.2. Add a class for cluster exception. It allows to:

	Instantiate cluster exception  with exceptions collection;
	Create exceptions throwable;
	Create exceptions collection

22.3. Add a class for equals tester. It allows to:

	Instantiate equals tester;
	Instantiate equals tester  with relationship tester item reporter;
	Add equality group;
	Get test equals;
	Handle test items

22.4. Add a class for equivalence tester. It allows to:

	Instantiate equivalence tester  with equivalence;
	O equivalence;
	Add equivalence group;
	Get test;
	Handle test items

22.5. Add a class for fake ticker. It allows to:

	Get advance;
	Set auto increment step;
	Read fake ticker

22.6. Add a class for fake ticker test. It allows to:

	Handle test null pointer exceptions;
	Handle test advance;
	Handle test auto increment step returns same instance;
	Handle test auto increment step nanos;
	Handle test auto increment step millis;
	Handle test auto increment step seconds;
	Convert test auto increment step reset;
	Handle test auto increment negative;
	Handle test concurrent advance;
	Call;
	Handle test concurrent auto increment step;
	Run concurrent test;

22.7. Add a class for fresh value generator test. It allows to:

	Handle test fresh instance;
	Handle test string array;
	Handle test primitive array;
	Handle test range;
	Handle test immutable list;
	Handle test immutable set;
	Handle test immutable sorted set;
	Handle test immutable multiset;
	Handle test immutable collection;
	Handle test immutable map;
	Handle test immutable sorted map;
	Handle test immutable multimap;
	Handle test immutable list multimap;
	Handle test immutable set multimap;
	Handle test immutable bi map;
	Handle test immutable table;
	Handle test list;
	Handle test array list;
	Handle test linked list;
	Handle test set;
	Handle test hash set;
	Handle test linked hash set;
	Handle test tree set;
	Handle test sorted set;
	Handle test navigable set;
	Handle test multiset;
	Handle test sorted multiset;
	Handle test hash multiset;
	Handle test linked hash multiset;
	Handle test tree multiset;
	Handle test immutable sorted multiset;
	Handle test collection;
	Handle test iterable;
	Handle test map;
	Handle test hash map;
	Handle test linked hash map;
	Handle test tree map;
	Handle test sorted map;
	Handle test navigable map;
	Handle test concurrent map;
	Handle test multimap;
	Handle test hash multimap;
	Handle test linked hash multimap;
	Handle test list multimap;
	Handle test array list multimap;
	Handle test set multimap;
	Handle test bi map;
	Handle test hash bi map;
	Handle test table;
	Handle test hash based table;
	Handle test row sorted table;
	Handle test tree based table;
	Handle test object;
	Handle test enums;
	Handle test google optional;
	Handle test add sample instances two instances;
	Handle test add sample instances one instance;
	Handle test add sample instances no instance;
	Handle test fresh currency;
	Handle test nulls;
	Assert fresh instances;
	Assert fresh instance;
	Assert equal instance;
	Assert can generate  only type token;
	Assert type token not instantiable;
	Assert value and type equals

22.8. Add a class for null pointer tester. It allows to:

	Set default;
	Ignore method;
	Ignore constructor;
	Handle test constructors;
	Test all public constructors;
	Handle test static methods;
	Test all public static methods;
	Handle test instance methods;
	Get instance methods  to test;
	Test all public instance methods;
	Handle test method;
	Handle test constructor;
	Handle test method parameter;
	Handle test constructor parameter;
	Check if null pointer tester is visible;
	Get static methods;
	Get instance methods;
	Get visible methods

Add a local a class for signature. It allows to:

	Instantiate signature  with method;
	Instantiate signature  with parameter types immutable list;
	Check if signature equals;
	Hash code;
	Handle test parameter;
	Build param list;
	Get default value;
	Get default converter;
	Do  forward a;
	Do  backward b;
	Convert type token;
	Get type first type parameter;
	Handle new default returning proxy;
	Handle dummy return value;
	Handle invokable;
	Check if signature is primitive or nullable;
	Check if signature is nullable;
	Check if signature is ignored;
	Check if signature is equals;
	NPE OR UOE;
	Check if signature is expected type;
	NPE IAE OR UOE;

22.9. Add a class for package sanity tests

22.10. Add a class for platform. It allows to:

	Get reserialize;
	Instantiate platform

22.11. Add a class for relationship tester test. It allows to:

	Handle test nulls

22.12. Add a class for serializable tester. It allows to:

	Instantiate serializable tester;
	Get reserialize;
	Handle reserialize and assert

22.13. Add a class for sloppy tear down. It allows to:

	Tear sloppy tear down;
	Handle sloppy tear down

22.14. Add an interface declaration  for tear down. It allows to:

	Tear tear down

22.15. Add an interface declaration  for tear down accepter. It allows to:

	Add tear down

22.16. Add a class for tear down stack. It allows to:

	Instantiate tear down stack;
	Add tear down;
	Run tear down stack

22.17. Add a class for test log handler. It allows to:

	Publish log record;
	Handle flush;
	Close test log handler;
	Handle clear;
	Get stored log records

23. Changes to package com.google.common.testing.anotherpackage:  

23.1. Add a class for some class that does not use nullable. It allows to:

	Package private but does  not check null;
	Get protected but does not check null;
	Handle public but does not check null;
	Handle static but does not check null

24. Changes to package com.google.common.util.concurrent:  

24.1. Add a class for abstract chained listenable future test. It allows to:

	Set abstract chained listenable future test;
	Handle test future get before callback;
	Handle test future get throws wrapped exception;
	Handle test future get throws wrapped error;
	Handle test add listener after callback;
	Handle test future before callback;
	Convert test input future;
	Build chaining future;
	Get successful result

24.2. Add a class for abstract checked future. It allows to:

	Instantiate abstract checked future  with delegate listenable future;
	Map exception;
	Get checked get;

24.3. Add a class for abstract execution thread service. It allows to:

	Start;
	Get;
	Run;
	Stop;
	Convert to string;
	Instantiate abstract execution thread service;
	Start abstract execution thread service;
	Run abstract execution thread service;
	Shut abstract execution thread service;
	Trigger shutdown;
	Get executor;
	Execute command runnable;
	Convert abstract execution thread service to string;
	Check if abstract execution thread service is running;
	Get state;
	Add listener;
	Get failure cause;
	Start async;
	Stop async;
	Running abstract execution thread service;
	Running time unit;
	Terminated abstract execution thread service;
	Terminated time unit;
	Get service name

24.4. Add a class for abstract future cancellation cause test. It allows to:

	Set abstract future cancellation cause test;
	Load class;
	Tear abstract future cancellation cause test;
	Handle test cancel not done no interrupt;
	Handle test cancel not done interrupt;
	Handle test set future misbehaving future does not throw;
	Cancel;
	Check if  is done;
	Check if  is canceled;
	Get;
	Get time unit;
	Add listener;
	Handle new future instance;
	Try internal fast path get failure

24.5. Add a class for abstract future fallback atomic helper test. It allows to:

	Get suite;
	Run test;
	Run test method;
	Check helper version;
	Get class loader;
	Load class

24.6. Add a class for abstract future footprint benchmark. It allows to:

	Set abstract future footprint benchmark;
	Measure size;
	Run

24.7. Add a class for abstract listening executor service. It allows to:

	Handle new task for;
	Submit task runnable;
	Submit task callable

24.8. Add a class for aggregate future state fallback atomic helper test. It allows to:

	Get suite;
	Run test;
	Run test method;
	Check helper version;
	Get class loader;
	Load class

24.9. Add an interface declaration  for async callable. It allows to:

	Call async callable

24.10. Add an interface declaration  for async function. It allows to:

	Apply input

24.11. Add a class for atomic double. It allows to:

	Instantiate atomic double;
	Get atomic double;
	Set atomic double;
	Handle lazy set;
	Compare atomic double;
	Handle weak compare and set;
	Add atomic double;
	Convert atomic double to string;
	Get int value;
	Handle long value;
	Float value;
	Handle double value;
	Write object;
	Read object

24.12. Add a class for atomic double array. It allows to:

	Instantiate atomic double array;
	Get length;
	Get atomic double array;
	Set atomic double array;
	Handle lazy set;
	Compare atomic double array;
	Handle weak compare and set;
	Add atomic double array;
	Convert atomic double array to string;
	Write object;
	Read object

24.13. Add a class for atomic double test. It allows to:

	Equals equals;
	Assert bit equals;
	Handle test constructor;
	Convert test constructor;
	Handle test get set;
	Handle test get lazy set;
	Handle test compare and set;
	Handle test compare and set in multiple threads;
	Handle real run;
	Handle test weak compare and set;
	Handle test get and set;
	Handle test get and add;
	Handle test add and get;
	Handle test serialization;
	Convert test;
	Handle test int value;
	Handle test long value;
	Handle test float value;
	Handle test double value;
	Handle test distinct zeros

24.14. Add a class for atomic long map. It allows to:

	Instantiate atomic long map  with concurrent hash map;
	Create atomic long map;
	Create map;
	Get key;
	Get increment and get;
	Get decrement and get;
	Add key;
	Get and increment;
	Put key;
	Put map;
	Remove key;
	Remove key if zero;
	Remove all zeros;
	Get sum;
	Process atomic long map atomic long map as map;
	Create atomic long map as map;
	Apply atomic long;
	Check if atomic long map contains key;
	Get size;
	Check if atomic long map is empty;
	Handle clear;
	Convert atomic long map to string;
	Put key if absent;
	Replace key

24.15. Add a class for atomic long map test. It allows to:

	Handle test nulls;
	Handle test create map;
	Handle test increment and get;
	Handle test increment and get zero;
	Handle test get and increment;
	Handle test get and increment zero;
	Handle test decrement and get;
	Handle test decrement and get zero;
	Handle test get and decrement;
	Handle test get and decrement zero;
	Handle test add and get;
	Handle test add and get zero;
	Handle test get and add;
	Handle test get and add zero;
	Handle test put;
	Handle test put zero;
	Handle test put all;
	Handle test put if absent;
	Handle test put if absent zero;
	Handle test replace;
	Handle test replace zero;
	Handle test remove;
	Handle test remove zero;
	Handle test remove if zero;
	Handle test remove value;
	Handle test remove value zero;
	Handle test remove zeros;
	Handle test clear;
	Handle test sum;
	Handle test empty;
	Handle test serialization;
	Handle test modify basher;
	Run

24.16. Add an object creator class for atomics. It allows to:

	Instantiate atomics;
	Handle new reference;
	Handle new reference array;

24.17. Add a class for atomics test. It allows to:

	Test new reference;
	Test new reference  with initial value;
	Test new reference array  with length;
	Test new reference array  with negative length;
	Test new reference array  with string array;
	Test new reference array  with null array;
	Handle test null pointers

24.18. Add a class for callables. It allows to:

	Instantiate callables;
	Returning value;
	Call;
	Process callables callables as async callable;
	Get thread renaming;
	Run;
	Try set name

24.19. Add a class for callables test. It allows to:

	Handle test returning;
	Handle test as async callable;
	Call;
	Handle test as async callable exception;
	Handle test renaming;
	Handle test renaming exceptional return;
	Handle test renaming no permissions;
	Check access;
	Check permission;

24.20. Add an interface declaration  for checked future. It allows to:

	Get checked get;

24.21. Add a class for cycle detecting lock factory benchmark. It allows to:

	Set cycle detecting lock factory benchmark;
	Handle unordered plain locks;
	Handle unordered cycle detecting locks;
	Lock lock;
	Get ordered plain locks;
	Get ordered cycle detecting locks;
	Lock locks

24.22. Add a class for execution error. It allows to:

	Instantiate execution error;
	Instantiate execution error  with cause error;

24.23. Add a class for fake time limiter. It allows to:

	Handle new proxy;
	Call callable with timeout;
	Call uninterruptibly  with timeout;
	Run runnable with timeout;
	Run runnable uninterruptibly with timeout

24.24. Add a class for forwarding blocking deque. It allows to:

	Instantiate forwarding blocking deque;
	Delegate forwarding blocking deque;
	Remaining capacity;
	Put  first E;
	Put last;
	Offer  first E;
	Offer last;
	Take first;
	Take last;
	Get poll first;
	Poll last;
	Put E;
	Offer E;
	Take forwarding blocking deque;
	Get poll;
	Drain  to collection;

24.25. Add a class for forwarding blocking deque test. It allows to:

	Handle test forwarding

24.26. Add a class for forwarding blocking queue. It allows to:

	Instantiate forwarding blocking queue;
	Delegate forwarding blocking queue;
	Drain  to collection;
	Offer E;
	Get poll;
	Put E;
	Remaining capacity;
	Take forwarding blocking queue

24.27. Add a class for forwarding blocking queue test. It allows to:

	Handle test forwarding

24.28. Add a class for forwarding checked future test. It allows to:

	Handle test forwarding

24.29. Add a class for forwarding executor service. It allows to:

	Instantiate forwarding executor service;
	Delegate forwarding executor service;
	Await termination;
	Invoke tasks collection;
	Check if forwarding executor service is shutdown;
	Check if forwarding executor service is terminated;
	Handle shutdown;
	Get shutdown now;
	Execute command runnable;
	Submit task callable;
	Submit task runnable;

24.30. Add a class for forwarding executor service test. It allows to:

	Handle test forwarding

24.31. Add a class for forwarding future test. It allows to:

	Handle test forwarding

24.32. Add a class for forwarding listenable future test. It allows to:

	Handle test forwarding

24.33. Add a class for forwarding listening executor service. It allows to:

	Instantiate forwarding listening executor service;
	Delegate forwarding listening executor service;
	Submit task callable;
	Submit task runnable;

24.34. Add a class for forwarding listening executor service test. It allows to:

	Handle test forwarding

24.35. Add a class for forwarding object tester. It allows to:

	Handle test forwarding object;
	Apply

24.36. Add an interface declaration  for future callback. It allows to:

	Process future callback future callback on success;
	Process future callback future callback on failure

24.37. Add a class for futures get checked benchmark. It allows to:

	Get validator;
	Get sUCCESS;
	Result result future;
	Get cHECKED;
	Get exception type;
	Add other entries;
	Compute value;
	Handle benchmark get checked;
	Non caching  without constructor check validator;
	Validate class;
	Non caching  with constructor check validator;

24.38. Add a class for futures get done test. It allows to:

	Handle test successful;
	Handle test successful null;
	Handle test failed;
	Handle test canceled;
	Handle test pending

24.39. Add a class for futures get unchecked test. It allows to:

	Handle test get unchecked success;
	Handle test get unchecked interrupted;
	Handle test get unchecked canceled;
	Handle test get unchecked execution exception checked;
	Handle test get unchecked execution exception unchecked;
	Handle test get unchecked execution exception error;
	Handle test get unchecked execution exception other throwable;
	Handle test get unchecked runtime exception;
	Handle test get unchecked error

24.40. Add a class for gwt futures catching specialization

24.41. Add a class for interruptible monitor test. It allows to:

	Instantiate interruptible monitor test

24.42. Add an interface declaration  for listenable future. It allows to:

	Add listener

24.43. Add a class for listenable future task. It allows to:

	Create callable;
	Create runnable;
	Instantiate listenable future task  with callable;
	Instantiate listenable future task  with runnable, result and result;
	Add listener;
	Get done

24.44. Add a class for listenable future task test. It allows to:

	Call;
	Set listenable future task test;
	Run;
	Tear listenable future task test;
	Handle test listener does not run until task completes;
	Handle test listener called on exception;
	Handle test listener called on cancel from not running;
	Handle test listener called on cancel from running

24.45. Add a class for listenable future tester. It allows to:

	Instantiate listenable future tester  with listenable future;
	Set listenable future tester;
	Run;
	Tear listenable future tester;
	Handle test completed future;
	Handle test canceled future;
	Handle test failed future

24.46. Add an interface declaration  for listenable scheduled future

24.47. Add an interface declaration  for listening executor service. It allows to:

	Submit task callable;
	Submit task runnable;
	Invoke tasks collection;

24.48. Add an interface declaration  for listening scheduled executor service. It allows to:

	Get schedule;
	Get schedule at fixed rate;
	Get schedule with fixed delay

24.49. Add a class for monitor benchmark. It allows to:

	Set monitor benchmark;
	Check if monitor benchmark adds and removes

24.50. Add a class for partially. It allows to:

	Instantiate partially

24.51. Add a class for platform. It allows to:

	Check if platform is instance of throwable class;
	Instantiate platform

24.52. Add a class for runnables. It allows to:

	Run;
	Do nothing;
	Instantiate runnables

24.53. Add a class for runnables test. It allows to:

	Handle test do nothing runnable is singleton

24.54. Add an interface declaration  for service. It allows to:

	Start async;
	Check if service is running;
	Get state;
	Stop async;
	Running service;
	Running time unit;
	Terminated service;
	Terminated time unit;
	Get failure cause;
	Add listener;
	Check if service is terminal;

Add a local a class for listener. It allows to:

	Starting listener;
	Running listener;
	Stopping from state;
	Get terminated;
	Get failed

24.55. Add a class for service test. It allows to:

	Handle test state ordering;
	Assert less  than a

24.56. Add a class for settable future. It allows to:

	Create settable future;
	Set value;
	Set exception;
	Set future;
	Instantiate settable future

24.57. Add a class for simple time limiter. It allows to:

	Instantiate simple time limiter  with executor service;
	Create executor service;
	Handle new proxy;
	Invoke method;
	Call;
	Call callable with timeout;
	Call uninterruptibly  with timeout;
	Run runnable with timeout;
	Run runnable uninterruptibly with timeout;
	Throw cause;
	Find interruptible methods;
	Check if simple time limiter declares interrupted ex;
	Wrap and throw execution exception or error;
	Wrap and throw runtime execution exception or error;
	Check positive timeout

24.58. Add a class for single thread abstract future benchmark. It allows to:

	Set single thread abstract future benchmark;
	Get time complete normal;
	Get time complete failure;
	Get time complete cancel;
	Get time get with 0 timeout;
	Get time get with small timeout

24.59. Add a class for striped benchmark. It allows to:

	Get striped benchmark;
	Set striped benchmark;
	Get size of striped;
	Get size of populated striped;
	Get time construct;
	Get time get at;
	Get time bulk get

24.60. Add a class for striped test. It allows to:

	Handle strong implementations;
	Get;
	Handle weak implementations;
	All implementations;
	Handle test null;
	Handle test sizes;
	Handle test weak implementations;
	Handle test weak read write;
	Handle test strong implementations;
	Handle test maximal weak striped lock;
	Handle test bulk get returns sorted;
	Handle test basic invariants;
	Assert basic invariants;
	Handle test max size

24.61. Add a class for supplemental monitor test. It allows to:

	Handle test leave without enter throws IMSE;
	Handle test get wait queue length with wrong monitor throws IMSE;
	Handle test has waiters with wrong monitor throws IMSE;
	Handle test null monitor in guard constructor throws NPE;
	Handle test is fair;
	Handle test occupied methods;
	Verify occupied methods  in current thread;
	Verify occupied methods  in another thread;
	Run

24.62. Add a class for test platform. It allows to:

	Verify get  on pending future;
	Verify timed get  on pending future;
	Verify thread was  not interrupted;
	Handle clear interrupt;
	Get done  from timeout overload;
	Instantiate test platform

24.63. Add a class for thread factory builder. It allows to:

	Instantiate thread factory builder;
	Set name format;
	Set daemon;
	Set priority;
	Set uncaught exception handler;
	Set thread factory;
	Build thread factory builder;
	Handle new thread;
	Get format

24.64. Add a class for thread factory builder test. It allows to:

	Run;
	Handle uncaught exception;
	Set thread factory builder test;
	Handle test thread factory builder defaults;
	Check thread pool name;
	Handle test name format with percent S custom;
	Handle test name format with percent D custom;
	Handle test daemon false;
	Handle test daemon true;
	Handle test priority custom;
	Handle test priority too low;
	Handle test priority too high;
	Handle test uncaught exception handler custom;
	Handle test build mutate build;
	Handle test build twice;
	Handle test build mutate;
	Handle test thread factory;
	Handle new thread;
	Handle test nulls;
	Root locale format

24.65. Add an interface declaration  for time limiter. It allows to:

	Handle new proxy;
	Call callable with timeout;
	Call uninterruptibly  with timeout;
	Run runnable with timeout;
	Run runnable uninterruptibly with timeout

24.66. Add a class for trusted input future test. It allows to:

	Handle new delegate

24.67. Add a class for trusted listenable future task test. It allows to:

	Handle test successful;
	Handle test canceled;
	Handle test failed;
	Call;
	Handle test cancel interrupted;
	Run;
	Handle test run idempotency;
	Convert test;
	Await unchecked

24.68. Add a class for uncaught exception handlers test. It allows to:

	Set uncaught exception handlers test;
	Handle test exiter

24.69. Add a class for unchecked execution exception. It allows to:

	Instantiate unchecked execution exception;
	Instantiate unchecked execution exception  with cause throwable;

24.70. Add a class for unchecked timeout exception. It allows to:

	Instantiate unchecked timeout exception;
	Instantiate unchecked timeout exception  with cause throwable;

24.71. Add a class for uninterruptible monitor test. It allows to:

	Instantiate uninterruptible monitor test

24.72. Add a class for uninterruptibles. It allows to:

	Await uninterruptibly;
	Join  uninterruptibly to join thread;
	Get uninterruptibly;
	Take uninterruptibly;
	Put  uninterruptibly blocking queue;
	Sleep uninterruptibly;
	Try acquire uninterruptibly;
	Instantiate uninterruptibles

24.73. Add a class for untrusted input future test. It allows to:

	Handle new delegate

24.74. Add a class for wrapping executor service. It allows to:

	Instantiate wrapping executor service  with delegate executor service;
	Wrap task;
	Run;
	Wrap tasks;
	Execute command runnable;
	Submit task callable;
	Submit task runnable;
	Invoke tasks collection;
	Handle shutdown;
	Get shutdown now;
	Check if wrapping executor service is shutdown;
	Check if wrapping executor service is terminated;
	Await termination

24.75. Add a class for wrapping scheduled executor service. It allows to:

	Instantiate wrapping scheduled executor service  with delegate scheduled executor service;
	Get schedule;
	Get schedule at fixed rate;
	Get schedule with fixed delay

25. Changes to package com.google.common.util.concurrent.testing:  

25.1. Add a class for abstract checked future test. It allows to:

	Create checked future;
	Check canceled exception;
	Check execution exception;
	Check interrupted exception;
	Create listenable future;
	Handle test checked get throws application exception on cancellation;
	Run;
	Handle test checked get throws application exception on interruption;
	Handle test checked get throws application exception on error;

25.2. Add a class for abstract listenable future test. It allows to:

	Set abstract listenable future test;
	Tear abstract listenable future test;
	Create listenable future;
	Handle test get blocks until value available;
	Run;
	Handle test timeout on get works correctly;
	Handle test canceled future throws cancellation;
	Handle test listeners notified on error;
	Test all listeners complete  successfully;

25.3. Add a class for mock future listener. It allows to:

	Instantiate mock future listener  with listenable future;
	Run mock future listener;
	Assert success;
	Assert exception;
	Assert timeout

25.4. Add a class for testing executors test. It allows to:

	Handle test no op scheduled executor;
	Run;
	Handle test no op scheduled executor shutdown;
	Handle test no op scheduled executor invoke all;
	Call;
	Handle test same thread scheduled executor;
	Handle test same thread scheduled executor with exception;

26. Changes to package com.google.common.xml:  

26.1. Add a class for xml escapers. It allows to:

	Instantiate xml escapers;
	Xml content escaper;
	Handle xml attribute escaper

26.2. Add a class for xml escapers test. It allows to:

	Handle test xml content escaper;
	Handle test xml attribute escaper;
	Assert basic xml escaper

27. Changes to package com.google.thirdparty.publicsuffix:  

27.1. Add a class for public suffix patterns. It allows to:

	Instantiate public suffix patterns

27.2. Add a class for trie parser. It allows to:

	Parse trie;
	Do parse trie  to builder;
	Reverse char sequence

