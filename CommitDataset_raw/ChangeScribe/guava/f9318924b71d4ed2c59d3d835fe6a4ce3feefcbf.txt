BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. 
 This change set is mainly composed of:  

1. Changes to package com.google.common.hash:  

1.1. Add a class for abstract composite hash function. It allows to:

	Instantiate abstract composite hash function  with functions;
	Make hash;
	Handle new hasher;
	Process abstract composite hash function abstract composite hash function from hashers;
	Put byte;
	Put bytes;
	Put short;
	Put int;
	Put  long;
	Put float;
	Put  double;
	Put boolean;
	Put char;
	Put unencoded chars;
	Put string;
	Put object;
	Hash

1.2. Add a class for abstract hasher. It allows to:

	Put boolean;
	Put abstract hasher double;
	Put float;
	Put unencoded chars;
	Put string;
	Put bytes;
	Put short;
	Put int;
	Put abstract hasher long;
	Put char;
	Put object

1.3. Add an interface declaration  for funnel. It allows to:

	Funnel from

1.4. Add a class for funnels test. It allows to:

	Handle test for bytes;
	Handle test for bytes null;
	Handle test for strings;
	Handle test for strings null;
	Handle test for strings charset;
	Handle test for strings charset null;
	Handle test for ints;
	Handle test for ints null;
	Handle test for longs;
	Handle test for longs null;
	Handle test sequential;
	Assert nulls throw exception;
	Make hash;
	Handle process;
	Handle test as output stream;
	Handle test serialization;
	Handle test equals

1.5. Add an interface declaration  for hash function. It allows to:

	Handle new hasher;
	Hash int;
	Hash hash function long;
	Hash bytes;
	Hash unencoded chars;
	Hash string;
	Hash object;
	Get bits

1.6. Add an interface declaration  for hasher. It allows to:

	Put byte;
	Put bytes;
	Put short;
	Put int;
	Put hasher long;
	Put float;
	Put hasher double;
	Put boolean;
	Put char;
	Put unencoded chars;
	Put string;
	Put object;
	Hash hasher;
	Hash code

1.7. Add a class for hashing test. It allows to:

	Handle test md 5;
	Handle test sha 1;
	Handle test sha 256;
	Handle test sha 384;
	Handle test sha 512;
	Handle test crc 32;
	Handle test adler 32;
	Handle test murmur 3 128;
	Handle test murmur 3 32;
	Handle test sip hash 24;
	Test good fast hash;
	Test good fast hash 32;
	Test good fast hash 128;
	Test good fast hash 256;
	Handle test consistent hash correctness;
	Check consistent hash correctness;
	Handle test consistent hash probabilities;
	Count remaps;
	Handle test consistent hash out of range;
	Handle test consistent hash of hash code;
	Check same result;
	Handle test consistent hash linear congruential generator compatibility;
	Handle test combine ordered empty;
	Handle test combine ordered different bit lengths;
	Handle test combine ordered;
	Handle test combine ordered random hash codes;
	Handle test combine unordered empty;
	Handle test combine unordered different bit lengths;
	Handle test combine unordered;
	Handle test combine unordered random hash codes;
	Handle test concatenating equals;
	Handle test concatenating iterable bits;
	Handle test concatenating var args bits;
	Handle test concatenating hash function make hash;
	Convert test hash int reverse bytes vs hash bytes ints;
	Handle test hash int vs for loop;
	Test all hash functions have known hashes;
	Handle test known utf 8 hashing;
	Handle test null pointers;
	Handle test seedless hash function equals;
	Handle test seeded hash function equals;
	Test good fast hash equals;
	Assert seedless hash function equals;
	Assert seeded hash function equals

1.8. Add a class for lock free bit array. It allows to:

	Instantiate lock free bit array;
	Set lock free bit array;
	Get lock free bit array;
	Convert lock free bit array to plain array;
	Bit size;
	Bit count;
	Get copy;
	Put other lock free bit array;
	Check if lock free bit array equals;
	Hash code

1.9. Add a class for message digest hash function test. It allows to:

	Handle test hashing;
	Handle test put after hash;
	Handle test hash twice;
	Convert test;
	Assert message digest hashing

1.10. Add a class for murmur 3 hash 128 test. It allows to:

	Handle test known values;
	Assert hash;
	Convert murmur 3 hash 128 test to hash code;
	Handle test paranoid;
	Hash;
	Handle test invariants

1.11. Add a class for murmur 3 hash 32 test. It allows to:

	Handle test known integer inputs;
	Handle test known long inputs;
	Handle test known string inputs;
	Handle test known utf 8 string inputs;
	Handle test simple string utf 8;
	Handle test string inputs utf 8;
	Assert hash;
	Handle test paranoid hash bytes;
	Hash;
	Handle test paranoid;
	Handle test invariants;
	Handle test invalid unicode hash string;
	Handle test invalid unicode hasher put string

