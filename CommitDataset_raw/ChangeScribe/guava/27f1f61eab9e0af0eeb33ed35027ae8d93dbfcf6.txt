BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (Math.gwt.xml). 
 This change set is mainly composed of:  

1. Changes to package com.google.common.math:  

1.1. Add a class for big integer math. It allows to:

	Get ceiling power of two;
	Get floor power of two;
	Check if big integer math is power of two;
	Log x big integer;
	Get sqrt;
	Sqrt floor;
	Handle sqrt approx with doubles;
	Divide p big integer;
	Handle factorial;
	Get list product;
	Handle binomial;
	Handle fits in long;
	Instantiate big integer math

1.2. Add a class for big integer math test. It allows to:

	Test ceiling power  of two;
	Handle test floor power of two;
	Test ceiling power  of two negative;
	Handle test floor power of two negative;
	Test ceiling power  of two zero;
	Handle test floor power of two zero;
	Convert test constant sqrt;
	Handle test is power of two;
	Convert test log;
	Handle test log 10 zero always throws;
	Handle test log 10 negative always throws;
	Handle test log 10 floor;
	Handle test log 10 ceiling;
	Handle test log 10 exact;
	Handle test log 10 half up;
	Handle test log 10 half down;
	Handle test log 10 half even;
	Handle test log 10 trivial on power of 10;
	Handle test sqrt zero always zero;
	Handle test sqrt negative always throws;
	Handle test sqrt floor;
	Handle test sqrt ceiling;
	Handle test sqrt exact;
	Handle test sqrt half up;
	Handle test sqrt half down;
	Handle test sqrt half even;
	Handle test div non zero;
	Handle test div non zero exact;
	Handle test zero div is always zero;
	Handle test div by zero always fails;
	Handle test factorial;
	Handle test factorial 0;
	Handle test factorial negative;
	Handle test binomial small;
	Handle test binomial large;
	Run binomial test;
	Handle test binomial outside;
	Handle test null pointers;
	Fail format

1.3. Add a class for int math. It allows to:

	Get ceiling power of two;
	Get floor power of two;
	Check if int math is power of two;
	Handle less than branch free;
	Log rounding mode;
	Log 10 floor;
	Get pow;
	Get sqrt;
	Sqrt floor;
	Divide rounding mode;
	Get mod;
	Get gcd;
	Get checked add;
	Get checked subtract;
	Get checked multiply;
	Get checked pow;
	Get saturated add;
	Get saturated subtract;
	Get saturated multiply;
	Get saturated pow;
	Handle factorial;
	Handle binomial;
	Mean int math;
	Check if int math is prime;
	Instantiate int math

1.4. Add a class for int math test. It allows to:

	Handle test max signed power of two;
	Test ceiling power  of two;
	Handle test floor power of two;
	Test ceiling power  of two negative;
	Handle test floor power of two negative;
	Test ceiling power  of two zero;
	Handle test floor power of two zero;
	Convert test constant max power of sqrt;
	Handle test constants powers of 10;
	Handle test max log 10 for leading zeros;
	Handle test constants half powers of 10;
	Handle test constants biggest binomials;
	Handle test powers sqrt max int;
	Handle test less than branch free;
	Handle test is power of two;
	Convert test log;
	Handle test log 10 zero always throws;
	Handle test log 10 negative always throws;
	Handle test log 10 matches big integer;
	Handle test log 10 exact;
	Handle test log 10 trivial on power of ten;
	Handle test sqrt zero always zero;
	Handle test sqrt negative always throws;
	Handle test sqrt matches big integer;
	Handle test sqrt exact matches floor or throws;
	Handle test pow;
	Handle test div non zero;
	Handle test div non zero exact;
	Handle test zero div is always zero;
	Handle test div by zero always fails;
	Handle test mod;
	Handle test mod negative modulus fails;
	Handle test mod zero modulus fails;
	Handle test GCD;
	Handle test GCD zero;
	Handle test GCD negative positive throws;
	Handle test GCD negative zero throws;
	Handle test checked add;
	Handle test checked subtract;
	Handle test checked multiply;
	Handle test checked pow;
	Handle test saturated add;
	Handle test saturated subtract;
	Handle test saturated multiply;
	Handle test saturated pow;
	Get saturated cast;
	Assert operation equals;
	Handle test factorial;
	Handle test factorial negative;
	Handle test binomial;
	Handle test binomial outside;
	Handle test binomial negative;
	Handle test mean;
	Assert mean;
	Compute mean  safely;
	Handle fits in int;
	Handle test null pointers;
	Handle test is prime;
	Force int math test

1.5. Add a class for long math. It allows to:

	Get ceiling power of two;
	Get floor power of two;
	Check if long math is power of two;
	Handle less than branch free;
	Log rounding mode;
	Log 10 floor;
	Get pow;
	Get sqrt;
	Divide rounding mode;
	Get mod;
	Get gcd;
	Get checked add;
	Get checked subtract;
	Get checked multiply;
	Get checked pow;
	Get saturated add;
	Get saturated subtract;
	Get saturated multiply;
	Get saturated pow;
	Handle factorial;
	Handle binomial;
	Multiply fraction;
	Handle fits in int;
	Mean long math;
	Check if long math is prime;
	Handle mul mod;
	Handle square mod;
	Mod long math;
	Convert times;
	Handle test;
	Pow mod;
	Handle test witness;
	Instantiate long math

1.6. Add a class for long math test. It allows to:

	Handle test max signed power of two;
	Test ceiling power  of two;
	Handle test floor power of two;
	Test ceiling power  of two negative;
	Handle test floor power of two negative;
	Test ceiling power  of two zero;
	Handle test floor power of two zero;
	Convert test constant max power of sqrt;
	Handle test max log 10 for leading zeros;
	Handle test constants powers of 10;
	Handle test constants half powers of 10;
	Handle test constants sqrt max long;
	Handle test constants factorials;
	Handle test constants biggest binomials;
	Handle test constants biggest simple binomials;
	Handle test less than branch free;
	Handle simple binomial;
	Handle test is power of two;
	Convert test log;
	Handle test log 10 zero always throws;
	Handle test log 10 negative always throws;
	Handle test log 10 matches big integer;
	Handle test log 10 exact;
	Handle test log 10 trivial on power of 10;
	Handle test sqrt negative always throws;
	Handle test sqrt matches big integer;
	Handle test sqrt exact matches floor or throws;
	Handle test pow;
	Handle test div non zero;
	Handle test div non zero exact;
	Handle test zero div is always zero;
	Handle test div by zero always fails;
	Handle test int mod;
	Handle test int mod negative modulus fails;
	Handle test int mod zero modulus fails;
	Handle test mod;
	Handle test mod negative modulus fails;
	Handle test GCD exhaustive;
	Handle test GCD zero;
	Handle test GCD negative positive throws;
	Handle test GCD negative zero throws;
	Handle test checked add;
	Handle test checked subtract;
	Handle test checked multiply;
	Handle test checked pow;
	Handle test saturated add;
	Handle test saturated subtract;
	Handle test saturated multiply;
	Handle test saturated pow;
	Assert operation equals;
	Handle test factorial;
	Handle test factorial negative;
	Handle test binomial;
	Handle test binomial exhaustive not overflowing;
	Handle test binomial outside;
	Handle test binomial negative;
	Handle test sqrt of perfect square as double is perfect;
	Handle test sqrt of long is at most floor sqrt max long;
	Handle test mean;
	Assert mean;
	Compute mean  safely;
	Handle fits in long;
	Get saturated cast;
	Handle test null pointers;
	Handle test is prime small;
	Handle test is prime many constants;
	Handle test is prime on uniform random;
	Handle test is prime on random primes;
	Handle test is prime on random composites;
	Handle test is prime throws on negative;
	Fail format

1.7. Add a class for math preconditions. It allows to:

	Check positive;
	Check math preconditions non negative;
	Check x big integer non negative;
	Check rounding unnecessary;
	Check rounding mode in range for rounding inputs;
	Check no overflow;
	Instantiate math preconditions

1.8. Add a class for math testing. It allows to:

	Apply integer;
	Apply;
	Apply x integer;
	Apply x big integer;
	Apply input double

