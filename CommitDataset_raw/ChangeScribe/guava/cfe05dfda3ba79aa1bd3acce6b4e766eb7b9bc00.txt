BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  renames some files.
 This change set is mainly composed of:  

1. Changes to package com.google.common.graph:  

1.1. Add a class for abstract value graph. It allows to:

	Process abstract value graph abstract value graph as graph;
	Get nodes;
	Get edges;
	Check if  is directed;
	Check if  allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get degree;
	Process  in degree;
	Out degree;
	Get edge value;
	Check if abstract value graph equals;
	Hash code;
	Convert abstract value graph to string;
	Get edge value map;
	Apply edge endpoint pair

1.2. Add a class for configurable mutable value graph. It allows to:

	Instantiate configurable mutable value graph  with abstract graph builder;
	Add node;
	Add node internal;
	Put edge value;
	Remove node;
	Remove edge;
	Handle new connections

1.3. Add a class for configurable value graph. It allows to:

	Instantiate configurable value graph  with abstract graph builder;
	Instantiate configurable value graph  with abstract graph builder, node connections map and node connections map;
	Get nodes;
	Check if configurable value graph is directed;
	Check if configurable value graph allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Check if configurable value graph has edge connecting;
	Get edge value or default;
	Edge count;
	Get checked connections;
	Check if configurable value graph contains node;
	Check if configurable value graph has edge connecting internal;
	Get edge value or default internal

1.4. Add a class for endpoint pair test. It allows to:

	Handle test ordered endpoint pair;
	Handle test unordered endpoint pair;
	Handle test self loop;
	Handle test adjacent node node not incident;
	Handle test equals;
	Handle endpoint pair directed graph;
	Handle endpoint pair undirected graph;
	Handle endpoint pair directed network;
	Handle endpoint pair undirected network;
	Handle endpoint pair unmodifiable view;
	Handle endpoint pair undirected contains;
	Handle endpoint pair directed contains;
	Check if endpoint pair test contains exactly sanity check

1.5. Add a class for forwarding graph. It allows to:

	Delegate forwarding graph;
	Get nodes;
	Edge count;
	Check if forwarding graph is directed;
	Check if forwarding graph allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get degree;
	Process forwarding graph forwarding graph in degree;
	Out degree;
	Check if forwarding graph has edge connecting;

1.6. Add a class for graph equivalence test. It allows to:

	Get parameters;
	Instantiate graph equivalence test  with edge type;
	Create graph;
	Handle opposite type;
	Handle equivalent node sets differ;
	Handle equivalent directed vs undirected;
	Handle equivalent self loop directed vs undirected;
	Handle equivalent properties differ;
	Handle equivalent edge add orders differ;
	Handle equivalent edge directions differ

1.7. Add an interface declaration  for mutable value graph. It allows to:

	Add node;
	Put edge value;
	Remove node;
	Remove edge;

1.8. Add a class for network equivalence test. It allows to:

	Get parameters;
	Instantiate network equivalence test  with edge type;
	Create network;
	Handle opposite type;
	Handle equivalent node sets differ;
	Handle equivalent edge sets differ;
	Handle equivalent directed vs undirected;
	Handle equivalent self loop directed vs undirected;
	Handle equivalent connections differ;
	Handle equivalent properties differ;
	Handle equivalent edge add orders differ;
	Handle equivalent edge directions differ

1.9. Add an interface declaration  for value graph. It allows to:

	Get nodes;
	Get edges;
	Process value graph value graph as graph;
	Check if value graph is directed;
	Check if value graph allows self loops;
	Handle node order;
	Handle adjacent nodes;
	Get predecessors;
	Get successors;
	Get incident edges;
	Get degree;
	Process value graph value graph in degree;
	Out degree;
	Check if value graph has edge connecting;
	Get edge value;
	Get edge value or default;
	Check if value graph equals;
	Hash code

1.10. Add a class for value graph builder. It allows to:

	Instantiate value graph builder;
	Get directed;
	Handle undirected;
	Process value graph builder value graph builder from;
	Handle immutable;
	Check if value graph builder allows self loops;
	Get expected node count;
	Handle node order;
	Build value graph builder;
	Cast value graph builder

1.11. Add a class for value graph test. It allows to:

	Validate graph state;
	Get directed graph;
	Handle undirected graph;
	Check if value graph test has edge connecting directed correct;
	Check if value graph test has edge connecting directed backwards;
	Check if value graph test has edge connecting directed mismatch;
	Check if value graph test has edge connecting undirected correct;
	Check if value graph test has edge connecting undirected backwards;
	Check if value graph test has edge connecting undirected mismatch;
	Handle edge value directed correct;
	Handle edge value directed backwards;
	Handle edge value directed mismatch;
	Handle edge value undirected correct;
	Handle edge value undirected backwards;
	Handle edge value undirected mismatch;
	Handle edge value or default directed correct;
	Handle edge value or default directed backwards;
	Handle edge value or default directed mismatch;
	Handle edge value or default undirected correct;
	Handle edge value or default undirected backwards;
	Handle edge value or default undirected mismatch;
	Put edge value directed;
	Put edge value directed order mismatch;
	Put edge value undirected order mismatch;
	Put edge value undirected;
	Remove edge directed;
	Remove edge undirected;
	Remove edge directed order mismatch;
	Remove edge undirected order mismatch;
	Handle edge value missing;
	Handle equivalence considers edge value

