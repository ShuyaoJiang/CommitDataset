BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (.travis.yml, checkstyle.xml, pom.xml, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package com.iluwatar.abstractfactory:  

1. Changes to package com.iluwatar.dao:  

1.1. Add a class for app test. It allows to:

	Handle test

2. Changes to package com.iluwatar.fluentinterface.app:  

2.1. Add a class for app. It allows to:

	Handle main;
	Transform app to string;
	Get negatives;
	Get positives;
	Pretty print;

2.2. Add a class for app test. It allows to:

	Handle test

3. Changes to package com.iluwatar.fluentinterface.fluentiterable:  

3.1. Add an interface declaration  for fluent iterable. It allows to:

	Get filter;
	First fluent iterable;
	Handle last;
	Map function;
	Process fluent iterable fluent iterable as list;
	Copy iterable to list

4. Changes to package com.iluwatar.fluentinterface.fluentiterable.lazy:  

4.1. Add a class for decorating iterator. It allows to:

	Instantiate decorating iterator  with from iterator;
	Check if decorating iterator has next;
	Handle next;
	Compute next

4.2. Add a class for lazy fluent iterable. It allows to:

	Instantiate lazy fluent iterable  with iterable;
	Instantiate lazy fluent iterable;
	Get filter;
	Get iterator;
	Compute next;
	First lazy fluent iterable;
	Handle last;
	Initialize;
	Map function;
	Process lazy fluent iterable lazy fluent iterable as list;
	Process lazy fluent iterable lazy fluent iterable from

5. Changes to package com.iluwatar.fluentinterface.fluentiterable.simple:  

5.1. Add a class for simple fluent iterable. It allows to:

	Instantiate simple fluent iterable  with iterable;
	Get filter;
	First simple fluent iterable;
	Handle last;
	Map function;
	Process simple fluent iterable simple fluent iterable as list;
	Process simple fluent iterable simple fluent iterable from;
	Process simple fluent iterable simple fluent iterable from copy of;
	Get iterator;
	Process simple fluent iterable simple fluent iterable for each;
	Get spliterator;
	Get remaining elements count;
	Convert simple fluent iterable to list

6. Changes to package com.iluwatar.reactor.app:  

6.1. Add a class for app. It allows to:

	Instantiate app  with dispatcher;
	Handle main;
	Start app;
	Stop app;
	Handle tcp channel;
	Handle udp channel

6.2. Add a class for logging handler. It allows to:

	Handle channel read;
	Send reply;
	Logging data byte buffer

7. Changes to package com.iluwatar.reactor.framework:  

7.1. Add a class for abstract nio channel. It allows to:

	Instantiate abstract nio channel  with channel handler, selectable channel and selectable channel;
	Set reactor;
	Get java channel;
	Get interested ops;
	Handle bind;
	Read selection key;
	Get handler;
	Handle flush;
	Write selection key;

7.2. Add an interface declaration  for channel handler. It allows to:

	Handle channel read

7.3. Add an interface declaration  for dispatcher. It allows to:

	Process dispatcher dispatcher on channel read event;
	Stop dispatcher

7.4. Add a class for nio server socket channel. It allows to:

	Instantiate nio server socket channel  with channel handler;
	Get interested ops;
	Get java channel;
	Read selection key;
	Handle bind;
	Write selection key

7.5. Add a class for same thread dispatcher. It allows to:

	Process same thread dispatcher same thread dispatcher on channel read event;
	Stop same thread dispatcher

7.6. Add a class for thread pool dispatcher. It allows to:

	Instantiate thread pool dispatcher;
	Process thread pool dispatcher thread pool dispatcher on channel read event;
	Stop thread pool dispatcher

8. Changes to package com.iluwatar.servicelayer.app:  

8. Changes to package com.iluwatar.servicelayer.hibernate:  

8. Changes to package com.iluwatar.servicelayer.magic:  

8. Changes to package com.iluwatar.servicelayer.spell:  

8.1. Rename type Spell with Spell

8.2. Add an interface declaration  for spell dao. It allows to:

	Find spell dao by name

8.3. Rename type SpellDaoImpl with SpellDaoImpl

9. Changes to package com.iluwatar.servicelayer.spellbook:  

