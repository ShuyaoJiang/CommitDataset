BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (.gitignore).  renames some files.
 This change set is mainly composed of:  

1. Changes to package jadx.api:  

1. Changes to package jadx.core:  

1. Changes to package jadx.core.clsp:  

1. Changes to package jadx.core.codegen:  

1. Changes to package jadx.core.dex.attributes:  

1. Changes to package jadx.core.dex.attributes.nodes:  

1.1. Add a class for local vars debug info attr. It allows to:

	Instantiate local vars debug info attr  with local vars list;
	Get local vars;
	Get type;
	Convert local vars debug info attr to string

1.2. Add a class for reg debug info attr. It allows to:

	Instantiate reg debug info attr  with local var;
	Instantiate reg debug info attr  with arg type;
	Get name;
	Get reg type;
	Get type;
	Check if reg debug info attr equals;
	Hash code;
	Convert reg debug info attr to string

2. Changes to package jadx.core.dex.instructions:  

2. Changes to package jadx.core.dex.instructions.args:  

2. Changes to package jadx.core.dex.instructions.mods:  

2. Changes to package jadx.core.dex.nodes:  

2. Changes to package jadx.core.dex.regions:  

2. Changes to package jadx.core.dex.visitors:  

2.1. Add a class for constructor visitor. It allows to:

	Handle visit;
	Invoke mth method node;
	Handle process invoke;
	Get process constructor;
	All args  null;
	Remove assign chain

3. Changes to package jadx.core.dex.visitors.blocksmaker:  

3. Changes to package jadx.core.dex.visitors.debuginfo:  

3.1. Add a class for debug info apply visitor. It allows to:

	Handle visit;
	Check types;
	Apply debug info;
	Collect mth method node;
	Handle search debug info by offset;
	Check if debug info apply visitor is inside;
	Get insn offset  by arg;
	Detach debug info;
	Add reg dbd info;
	Fix lines  for return;
	Fix names  for phi insns;
	Add arg name;
	Set name  for insn

3.2. Add a class for debug info parse visitor. It allows to:

	Handle visit;
	Handle process debug info;
	Attach debug info;
	Set method source line

3.3. Add a class for debug info parser. It allows to:

	Instantiate debug info parser  with mth method node, insn node and insn node;
	Get process;
	Handle addr change;
	Set source lines;
	Set line;
	Restart var;
	Start var;
	End var

3.4. Add a class for local var. It allows to:

	Instantiate local var  with dex node;
	Instantiate local var  with arg type;
	Check signature;
	Start local var;
	End local var;
	Get reg num;
	Get name;
	Get type;
	Check if local var is end;
	Get start addr;
	Get end  addr;
	Check if local var equals;
	Hash code;
	Convert local var to string

4. Changes to package jadx.core.dex.visitors.regions:  

4. Changes to package jadx.core.dex.visitors.ssa:  

4. Changes to package jadx.core.dex.visitors.typeinference:  

4.1. Add an interface declaration  for i type bound. It allows to:

	Bound i type bound;
	Get type

4.2. Add an interface declaration  for i type listener. It allows to:

	Update type update info

4.3. Add a class for type bound const. It allows to:

	Instantiate type bound const  with bound enum, arg type and arg type;
	Bound type bound const;
	Get type;
	Check if type bound const equals;
	Hash code;
	Convert type bound const to string

4.4. Add a class for type compare test. It allows to:

	Handle init;
	Compare types;
	Compare primitives;
	Compare arrays;
	Compare generics;
	Compare generic types;
	Compare generic types NYI;
	First is narrow;
	Check first arg type

4.5. Add a class for type inference visitor. It allows to:

	Handle init;
	Handle visit;
	Run multi variable search;
	Set immutable type;
	Set best type;
	Apply immutable type;
	Calculate SSA var from bounds;
	Select best type  from bounds;
	Attach bounds;
	Merge phi bounds;
	Bound type info;
	Add type info;
	Make use bound;
	Try possible types;
	Make possible types list;
	Try deduce type;
	Try insert additional insn;
	Try wider objects

4.6. Add a class for type info. It allows to:

	Get type;
	Set type;
	Get bounds;
	Convert type info to string

4.7. Add a class for type update. It allows to:

	Instantiate type update  with root node;
	Apply SSA var;
	Apply SSA var with wider allow;
	Update type checked;
	Update type  for ssa var;
	Get request update for ssa var;
	Get request update;
	Run listeners;
	Process type update type update in bounds;
	Bound candidate type;
	Check assign  for unknown;
	Handle init listener registry;
	Handle same first arg listener;
	Move listener;
	All same listener;
	Suggest all same listener;
	Check cast listener;
	Get array get listener;
	Get array put listener;
	Process type update type update if listener;
	Check if type update is assign;
	Get comparator;
	Get arg type comparator

4.8. Add a class for type update info. It allows to:

	Handle request update;
	Check if type update info is processed;
	Handle rollback update;
	Get updates

4.9. Add a class for type update registry. It allows to:

	Add insn type;
	Get listeners  for insn

5. Changes to package jadx.core.utils:  

5. Changes to package jadx.tests.api:  

5. Changes to package jadx.tests.external:  

5. Changes to package jadx.tests.integration.debuginfo:  

5. Changes to package jadx.tests.integration.types:  

5.1. Add a class for test const inline. It allows to:

	Handle test

5.2. Add a class for test type resolver 5. It allows to:

	Handle test

6. Changes to package jadx.tests.integration.variables:  

6.1. Add a class for test variables generic. It allows to:

	Handle test

