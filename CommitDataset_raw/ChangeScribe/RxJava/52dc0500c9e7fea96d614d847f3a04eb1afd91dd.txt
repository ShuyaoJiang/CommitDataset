BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  renames some files.
 This change set is mainly composed of:  

1. Changes to package io.reactivex:  

1.1. Add an interface declaration  for maybe emitter. It allows to:

	Process maybe emitter maybe emitter on success;
	Process maybe emitter maybe emitter on error;
	Process maybe emitter maybe emitter on complete;
	Set disposable;
	Set cancellable;
	Check if maybe emitter is disposed;
	Try throwable on error

1.2. Add an interface declaration  for maybe on subscribe. It allows to:

	Subscribe maybe emitter

2. Changes to package io.reactivex.internal.fuseable:  

2.1. Add an interface declaration  for has upstream completable source. It allows to:

	Get source

2.2. Add an interface declaration  for has upstream maybe source. It allows to:

	Get source

2.3. Add an interface declaration  for has upstream observable source. It allows to:

	Get source

2.4. Add an interface declaration  for has upstream publisher. It allows to:

	Get source

2.5. Add an interface declaration  for has upstream single source. It allows to:

	Get source

3. Changes to package io.reactivex.internal.operators.completable:  

3. Changes to package io.reactivex.internal.operators.flowable:  

3. Changes to package io.reactivex.internal.operators.maybe:  

3.1. Add a class for abstract maybe with upstream. It allows to:

	Instantiate abstract maybe with upstream  with maybe source;
	Get source

3.2. Add a class for maybe create test. It allows to:

	Handle callback throws;
	Subscribe maybe emitter;
	Process maybe create test maybe create test on success null;
	Process maybe create test maybe create test on error null;
	Dispose maybe create test;
	Process maybe create test maybe create test on success throws;
	Process  on subscribe;
	Process  on success;
	Process  on error;
	Process  on complete;
	Process maybe create test maybe create test on error throws;
	Process maybe create test maybe create test on complete throws;
	Process maybe create test maybe create test on success throws 2;
	Process maybe create test maybe create test on error throws 2;
	Process maybe create test maybe create test on complete throws 2;
	Try maybe create test on error;
	Convert emitter has;

3.3. Add a class for maybe empty. It allows to:

	Subscribe actual;
	Call maybe empty

3.4. Add a class for maybe error callable. It allows to:

	Instantiate maybe error callable  with error supplier callable;
	Subscribe actual

3.5. Add a class for maybe from action. It allows to:

	Instantiate maybe from action  with action;
	Subscribe actual;
	Call maybe from action

3.6. Add a class for maybe from runnable. It allows to:

	Instantiate maybe from runnable  with runnable;
	Subscribe actual;
	Call maybe from runnable

3.7. Add a class for maybe unsafe create. It allows to:

	Instantiate maybe unsafe create  with maybe source;
	Subscribe actual

4. Changes to package io.reactivex.internal.operators.observable:  

4. Changes to package io.reactivex.internal.operators.single:  

4. Changes to package io.reactivex.maybe:  

4.1. Add a class for maybe test. It allows to:

	Process maybe test maybe test from flowable empty;
	Process maybe test maybe test from flowable just;
	Process maybe test maybe test from flowable error;
	Process maybe test maybe test from flowable value and error;
	Process maybe test maybe test from flowable many;
	Process maybe test maybe test from flowable dispose composes through;
	Process maybe test maybe test from observable empty;
	Process maybe test maybe test from observable just;
	Process maybe test maybe test from observable error;
	Process maybe test maybe test from observable value and error;
	Process maybe test maybe test from observable many;
	Process maybe test maybe test from observable dispose composes through;
	Handle from observable dispose composes through immediately canceled;
	Just maybe test;
	Just null;
	Handle empty;
	Never maybe test;
	Handle error null;
	Handle error callable null;
	Handle error;
	Handle error callable;
	Handle error callable returns null;
	Wrap custom;
	Subscribe maybe observer;
	Wrap maybe test maybe;
	Wrap null;
	Handle empty singleton;
	Never singleton;
	Lift null;
	Lift maybe test just;
	Apply t maybe observer;
	Throws maybe test;
	Defer null;
	Call;
	Defer returns  null;
	Defer maybe test;
	Handle flowable maybe flowable;
	Handle obervable maybeobervable;
	Handle single maybe single;
	Handle completable maybe completable;
	Handle unsafe create;
	Handle unsafe create null;
	Process maybe test maybe test t;
	Apply v maybe;
	A maybe test;
	Convert maybe test to null;
	Process maybe test maybe test as null;
	Compose maybe test;
	Apply maybe;
	Apply w integer;
	Compose null;
	Map null;
	Map return  null;
	Apply v integer;
	Map maybe test;
	Handle filter null;
	Handle filter throws;
	Handle test;
	Handle filter true;
	Handle filter false;
	Handle filter empty;
	Handle single filter null;
	Handle single filter throws;
	Handle single filter true;
	Handle single filter false;
	Cast maybe test;
	Observe maybe test on null;
	Subscribe maybe test on null;
	Observe maybe test on success;
	Observe maybe test on error;
	Observe maybe test on complete;
	Observe maybe test on dispose 2;
	Observe maybe test on double subscribe;
	Subscribe maybe test on success;
	Observe maybe test on error thread;
	Accept throwable;
	Observe maybe test on complete thread;
	Run;
	Subscribe maybe test on error;
	Subscribe maybe test on complete;
	Process maybe test maybe test from action;
	Process maybe test maybe test from action throws;
	Process maybe test maybe test from runnable;
	Process maybe test maybe test from runnable throws;
	Process maybe test maybe test from callable throws;
	Do maybe test on success;
	Accept v integer;
	Do maybe test on success empty;
	Do maybe test on success throws;
	Do maybe test on subscribe;
	Accept v disposable;
	Do maybe test on subscribe throws;
	Do maybe test on complete throws;
	Do maybe test on dispose;
	Do maybe test on dispose throws;
	Observe maybe test on dispose;
	Do maybe test after terminate success;
	Do maybe test after terminate error;
	Accept;
	Do maybe test after terminate complete;
	Handle source throws NPE;
	Handle source throws IAE;
	Handle flat map;
	Concat map;
	Handle flat map empty;
	Handle flat map error;
	Handle flat map notify success;
	Apply v throwable;
	Handle flat map notify error;
	Handle flat map notify complete;
	Ignore element success;
	Ignore element error;
	Ignore element complete;
	Ignore element success  maybe;
	Ignore element error  maybe;
	Ignore element complete  maybe;
	Handle single to maybe;
	Handle single to maybe error;
	Handle completable to maybe;
	Handle completable to maybe error;
	Handle empty to single;
	Convert error;
	Handle empty to completable;
	Convert concat;
	Concat 2 backpressured;
	Concat 2 backpressured non eager;
	Handle concat 3;
	Handle concat 3 empty;
	Concat 3 mixed 1;
	Concat 3 mixed 2;
	Concat 3 backpressured;
	Handle concat array zero;
	Handle concat array one;
	Concat maybe test;
	Handle concat iterable;
	Concat iterable empty;
	Concat iterable backpressured;
	Concat iterable backpressured non eager;
	Concat iterable zero;
	Concat iterable one;
	Handle concat publisher;
	Handle concat publisher prefetch;
	Handle null argument;
	Handle basic;
	Subscribe maybe emitter;
	Handle basic with error;
	Handle basic with complete;
	Handle unsafe create with maybe;
	Convert maybe;
	Handle amb array one is null;
	Handle amb array empty;
	Handle amb array one;
	Handle amb with order;
	Handle amb iterable order;
	Handle amb array order;
	Handle amb array 1 signals success;
	Convert amb array;
	Handle amb array 1 signals error;
	Handle amb array 1 signals complete;
	Handle amb iterable 1 signals success;
	Convert amb iterable;
	Handle amb iterable 1 signals error;
	Handle amb iterable 1 signals complete;
	Handle amb iterable null;
	Handle amb iterable iterator null;
	Get iterator;
	Handle amb iterable one is null;
	Handle amb iterable empty;
	Handle amb iterable one;
	Merge array;
	Merge maybe test;
	Merge array backpressured;
	Merge array backpressured mixed 1;
	Merge array backpressured mixed 2;
	Merge array backpressured mixed 3;
	Merge array fused;
	Merge array fused race;
	Merge array zero;
	Merge array one;
	Merge publisher;
	Merge publisher max concurrent;
	Merge maybe test maybe;
	Merge iterable;
	Merge A lot;
	Merge A lot last empty;
	Merge A lot fused;
	Merge error success;
	Merge success error;
	Subscribe maybe test;
	Subscribe zero error;
	Subscribe maybe test to on success;
	Accept integer;
	Subscribe maybe test to on error;
	Subscribe maybe test to on complete;
	Subscribe maybe test with;
	Process  on subscribe;
	Process  on success;
	Process  on error;
	Process  on complete;
	Do maybe test on event success;
	Do maybe test on event error;
	Do maybe test on event complete;
	Do maybe test on event null;
	Do maybe test on event success throws;
	Do maybe test on event error throws;
	Do maybe test on event complete throws;
	Concat array delay error;
	Concat iterable delay error;
	Handle concat publisher delay error;
	Concat eager array;
	Concat eager iterable;
	Concat eager publisher;
	Handle empty future;
	Process maybe test maybe test from future;
	Merge array delay error;
	Merge iterable delay error;
	Merge publisher delay error;
	Merge delay error 2;
	Merge delay error 3;
	Merge delay error 4;
	Handle sequence equal;
	Handle timer;
	Get maybe test;
	Convert maybe test to single default;
	Handle flat map continuation;
	Using maybe test;
	Accept d integer;
	Using non eager;
	Apply;
	Zip array;
	Zip iterable;
	Zip maybe test;
	Zip maybe test with;
	Handle amb with 1 signals success;
	Convert amb with;
	Zip iterable object;
	Get used memory now;
	Process maybe test maybe test on terminate detach;
	Handle repeat;
	Get  as boolean;
	Apply v flowable;
	Retry maybe test;
	Process maybe test maybe test on error resume next empty;
	Process maybe test maybe test on error resume next value;
	Process maybe test maybe test on error resume next error;
	Handle value concat with value;
	Handle error concat with value;
	Handle value concat with error;
	Handle empty concat with value;
	Handle empty concat with error

5. Changes to package io.reactivex.observers:  

5. Changes to package io.reactivex.plugins:  

5. Changes to package io.reactivex.single:  

5. Changes to package io.reactivex.subscribers:  

