BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. 
 This change set is mainly composed of:  

1. Changes to package io.reactivex:  

1. Changes to package io.reactivex.internal.util:  

1.1. Add a class for backpressure helper. It allows to:

	Instantiate backpressure helper;
	Add cap;
	Multiply cap;
	Add requested atomic long;
	Cancel requested atomic long;
	Get produced;
	Get produced cancel

1.2. Add a class for error notification. It allows to:

	Instantiate error notification  with throwable;
	Convert error notification to string;
	Hash code;
	Check if error notification equals

Add a local a class for subscription notification. It allows to:

	Instantiate subscription notification  with subscription;
	Convert subscription notification to string

Add a local a class for disposable notification. It allows to:

	Instantiate disposable notification  with disposable;
	Convert disposable notification to string;
	Handle next;
	Complete disposable notification;
	Get error;
	Get subscription;
	Handle disposable;
	Check if disposable notification is complete;
	Check if disposable notification is error;
	Check if disposable notification is subscription;
	Check if disposable notification is disposable;
	Get value;
	Get disposable;
	Accept subscriber;
	Accept observer;
	Accept full;

1.3. Add a class for queue drain helper. It allows to:

	Instantiate queue drain helper;
	Drain max loop;
	Terminated subscriber;
	Drain loop;
	Terminated observer;
	Create queue;
	Handle request;
	Post complete request;
	Check if queue drain helper is canceled;
	Post complete drain;
	Post complete

2. Changes to package io.reactivex.subjects:  

2.1. Add a class for serialized subject. It allows to:

	Instantiate serialized subject  with actual subject;
	Subscribe actual;
	Process serialized subject serialized subject on subscribe;
	Process serialized subject serialized subject on next;
	Process serialized subject serialized subject on error;
	Process serialized subject serialized subject on complete;
	Emit loop;
	Handle test;
	Check if serialized subject has observers;
	Check if serialized subject has throwable;
	Get throwable;
	Check if serialized subject has complete

2.2. Add a class for subject. It allows to:

	Check if subject has observers;
	Check if subject has throwable;
	Check if subject has complete;
	Get throwable;
	Handle to serialized

