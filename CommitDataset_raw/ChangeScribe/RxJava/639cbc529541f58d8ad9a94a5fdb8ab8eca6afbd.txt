BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (README.txt). 
 This change set is mainly composed of:  

1. Changes to package io.reactivex:  

1.1. Add a class for observable. It allows to:

	Get amb;
	Get amb array;
	Buffer size;
	Combine latest;
	Combine latest delay error;
	Get concat;
	Concat array;
	Concat array delay error;
	Concat array eager;
	Concat array eager delay error;
	Handle concat delay error;
	Concat eager;
	Create source observable on subscribe;
	Defer supplier callable;
	Handle empty;
	Get error;
	Process observable observable from array;
	Process observable observable from callable;
	Process observable observable from future;
	Process observable observable from iterable;
	Process observable observable from publisher;
	Generate generator consumer;
	Generate initial state callable;
	Get interval;
	Handle interval range;
	Just observable;
	Merge sources iterable;
	Merge array;
	Merge sources;
	Merge source;
	Merge delay error;
	Merge array delay error;
	Never observable;
	Get range;
	Get range long;
	Get sequence equal;
	Switch sources on next;
	Switch sources on next delay error;
	Get timer;
	Handle unsafe create;
	Using resource supplier callable;
	Wrap observable source;
	Get zip;
	Zip array;
	Zip iterable;
	All predicate;
	Get amb with;
	Any predicate;
	A observable converter;
	Blocking observable first;
	Blocking  first default item;
	Blocking on next consumer for each;
	Blocking iterable;
	Blocking last;
	Blocking latest;
	Blocking initial value most recent;
	Blocking next;
	Blocking single;
	Convert observable to future;
	Subscribe observable;
	Subscribe on next consumer;
	Subscribe observer;
	Get buffer;
	Get cache;
	Get cache with initial capacity;
	Cast clazz class;
	Collect initial value supplier callable;
	Collect  into initial value;
	Compose composer observable transformer;
	Concat map;
	Concat map delay error;
	Concat map eager;
	Concat map eager delay error;
	Concat map completable;
	Concat map completable delay error;
	Concat map iterable;
	Concat map  maybe mapper function;
	Concat map  maybe delay error;
	Concat map single;
	Concat map single delay error;
	Concat  with other observable source;
	Concat  with other single source;
	Concat  with other maybe source;
	Concat  with other completable source;
	Check if observable contains;
	Get count;
	Get debounce;
	Get default if empty;
	Get delay;
	Delay subscription;
	Dematerialize observable;
	Dematerialize selector function;
	Handle distinct;
	Handle distinct until changed;
	Do on after next consumer after next;
	Do on finally action after terminate;
	Do  finally on finally action;
	Do on dispose action on dispose;
	Do on complete action on complete;
	Do on next consumer on each;
	Do on notification consumer on each;
	Do observer on each;
	Do on error consumer on error;
	Do on subscribe consumer on lifecycle;
	Do on next consumer on next;
	Do on subscribe consumer on subscribe;
	Do on terminate action on terminate;
	Get element at;
	Get element at or error;
	Get filter;
	First element;
	First observable;
	First or error;
	Handle flat map;
	Handle flat map completable;
	Handle flat map iterable;
	Handle flat map maybe;
	Handle flat map single;
	Process observable observable for each;
	Process observable observable for each while;
	Get group by;
	Get group join;
	Hide observable;
	Ignore elements;
	Check if observable is empty;
	Join other observable source;
	Handle last element;
	Handle last;
	Handle last or error;
	Lift lifter observable operator;
	Map mapper function;
	Materialize observable;
	Merge  with other observable source;
	Merge  with other single source;
	Merge  with other maybe source;
	Merge  with other completable source;
	Observe  on scheduler;
	Process observable observable of type;
	Process observable observable on error resume next;
	Process observable observable on error return;
	Process observable observable on error return item;
	Process observable observable on exception resume next;
	Process observable observable on terminate detach;
	Publish observable;
	Publish selector function;
	Reduce reducer bi function;
	Reduce seed;
	Reduce  with seed supplier callable;
	Get repeat;
	Repeat  until stop boolean supplier;
	Repeat handler function;
	Get replay;
	Retry observable;
	Retry bi predicate;
	Retry predicate;
	Retry  until stop boolean supplier;
	Retry handler function;
	Handle safe subscribe;
	Get sample;
	Scan accumulator bi function;
	Scan initial value;
	Scan  with seed supplier callable;
	Serialize observable;
	Get share;
	Handle single element;
	Handle single;
	Handle single or error;
	Skip observable;
	Skip time unit;
	Skip last;
	Skip  until other observable source;
	Skip  while predicate;
	Get sorted;
	Start  with items iterable;
	Start  with other observable source;
	Start  with item;
	Start items with array;
	Subscribe actual;
	Subscribe  with observer;
	Subscribe  on scheduler;
	Switch other observable source if empty;
	Switch map;
	Switch map completable;
	Switch map completable delay error;
	Switch map  maybe mapper function;
	Switch map  maybe delay error;
	Switch map single;
	Switch map single delay error;
	Switch map delay error;
	Take observable;
	Take time unit;
	Take last;
	Take  until other observable source;
	Take  until stop predicate;
	Take while;
	Throttle  first time unit;
	Throttle last;
	Throttle latest;
	Throttle time unit with timeout;
	Get time interval;
	Get timeout;
	Get timeout 0;
	Timestamp observable;
	Timestamp scheduler;
	Timestamp time unit;
	Process observable observable t;
	Convert observable to list;
	Convert observable to map;
	Convert observable to multimap;
	Convert observable to flowable;
	Convert observable to sorted list;
	Unsubscribe  on scheduler;
	Get window;
	Process observable observable with latest from;
	Zip  with other iterable;
	Zip  with other observable source;
	Get test;

