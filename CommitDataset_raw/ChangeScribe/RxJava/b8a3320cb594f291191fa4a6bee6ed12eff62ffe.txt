BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. 
 This change set is mainly composed of:  

1. Changes to package io.reactivex:  

1.1. Add a class for maybe. It allows to:

	Get amb;
	Get amb array;
	Get concat;
	Concat array;
	Concat array delay error;
	Concat array eager;
	Handle concat delay error;
	Concat eager;
	Create maybe on subscribe;
	Defer maybe supplier callable;
	Handle empty;
	Get error;
	Process maybe maybe from action;
	Process maybe maybe from completable;
	Process maybe maybe from single;
	Process maybe maybe from callable;
	Process maybe maybe from future;
	Process maybe maybe from runnable;
	Just maybe;
	Merge sources iterable;
	Merge sources publisher;
	Merge maybe source;
	Merge source;
	Merge array;
	Merge array delay error;
	Merge delay error;
	Never maybe;
	Get sequence equal;
	Get timer;
	Handle unsafe create;
	Using resource supplier callable;
	Wrap maybe source;
	Get zip;
	Zip array;
	Get amb with;
	A maybe converter;
	Get maybe;
	Get default value;
	Get cache;
	Cast clazz class;
	Compose maybe transformer;
	Concat map;
	Concat  with other maybe source;
	Check if maybe contains;
	Get count;
	Get default if empty;
	Get delay;
	Delay subscription;
	Do on after success consumer after success;
	Do on after terminate action after terminate;
	Do  finally on finally action;
	Do on dispose action on dispose;
	Do on complete action on complete;
	Do on error consumer on error;
	Do on event bi consumer on event;
	Do on subscribe consumer on subscribe;
	Do on terminate action on terminate;
	Do on success consumer on success;
	Get filter;
	Handle flat map;
	Flatten mapper function as flowable;
	Flatten mapper function as observable;
	Handle flat map observable;
	Handle flat map publisher;
	Handle flat map single;
	Handle flat map single element;
	Handle flat map completable;
	Hide maybe;
	Ignore element;
	Check if maybe is empty;
	Lift lift maybe operator;
	Map mapper function;
	Materialize maybe;
	Merge  with other maybe source;
	Observe  on scheduler;
	Process maybe maybe of type;
	Process maybe maybe t;
	Convert maybe to flowable;
	Convert maybe to observable;
	Convert maybe to single;
	Process maybe maybe on error complete;
	Process maybe maybe on error resume next;
	Process maybe maybe on error return;
	Process maybe maybe on error return item;
	Process maybe maybe on exception resume next;
	Process maybe maybe on terminate detach;
	Get repeat;
	Repeat  until stop boolean supplier;
	Repeat handler function;
	Retry maybe;
	Retry bi predicate;
	Retry predicate;
	Retry  until stop boolean supplier;
	Retry handler function;
	Subscribe maybe;
	Subscribe on success consumer;
	Subscribe maybe observer;
	Subscribe actual;
	Subscribe  on scheduler;
	Subscribe  with observer;
	Switch other maybe source if empty;
	Switch other single source if empty;
	Take  until other maybe source;
	Take  until other publisher;
	Get timeout;
	Unsubscribe  on scheduler;
	Zip  with other maybe source;
	Get test;

1.2. Add an interface declaration  for maybe observer. It allows to:

	Process maybe observer maybe observer on subscribe;
	Process maybe observer maybe observer on success;
	Process maybe observer maybe observer on error;
	Process maybe observer maybe observer on complete

1.3. Add an interface declaration  for maybe operator. It allows to:

	Apply maybe observer

1.4. Add an interface declaration  for maybe source. It allows to:

	Subscribe maybe observer

1.5. Add an interface declaration  for maybe transformer. It allows to:

	Apply upstream maybe

2. Changes to package io.reactivex.internal.operators.maybe:  

2.1. Add a class for maybe defer. It allows to:

	Instantiate maybe defer  with maybe supplier callable;
	Subscribe actual

2.2. Add a class for maybe error. It allows to:

	Instantiate maybe error  with error throwable;
	Subscribe actual

2.3. Add a class for maybe from callable. It allows to:

	Instantiate maybe from callable  with callable;
	Subscribe actual;
	Call maybe from callable

2.4. Add a class for maybe just. It allows to:

	Instantiate maybe just  with value;
	Subscribe actual;
	Call maybe just

2.5. Add a class for maybe lift. It allows to:

	Instantiate maybe lift  with maybe source, maybe operator and maybe operator;
	Subscribe actual

2.6. Add a class for maybe never. It allows to:

	Subscribe actual

