BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. 
 This change set is mainly composed of:  

1. Changes to package io.reactivex:  

1. Changes to package io.reactivex.plugins:  

1.1. Add a class for rx java plugins. It allows to:

	Lockdown rx java plugins;
	Check if rx java plugins is lockdown;
	Set fail  on non blocking scheduler;
	Check if rx java plugins is fail on non blocking scheduler;
	Get computation scheduler handler;
	Get error handler;
	Get init computation scheduler handler;
	Get init io scheduler handler;
	Get init new thread scheduler handler;
	Get init single scheduler handler;
	Get io scheduler handler;
	Get new thread scheduler handler;
	Get schedule handler;
	Get single scheduler handler;
	Handle init computation scheduler;
	Handle init io scheduler;
	Init new thread scheduler;
	Handle init single scheduler;
	Process rx java plugins rx java plugins on computation scheduler;
	Process rx java plugins rx java plugins on error;
	Check if rx java plugins is bug;
	Handle uncaught;
	Process rx java plugins rx java plugins on io scheduler;
	Process rx java plugins rx java plugins on new thread scheduler;
	Process rx java plugins rx java plugins on schedule;
	Process rx java plugins rx java plugins on single scheduler;
	Reset rx java plugins;
	Set computation scheduler handler;
	Set error handler;
	Set init computation scheduler handler;
	Set init io scheduler handler;
	Set init new thread scheduler handler;
	Set init single scheduler handler;
	Set io scheduler handler;
	Set new thread scheduler handler;
	Set schedule handler;
	Set single scheduler handler;
	Unlock rx java plugins;
	Get rx java plugins on completable assembly;
	Get rx java plugins on completable subscribe;
	Get rx java plugins on flowable assembly;
	Get rx java plugins on connectable flowable assembly;
	Get rx java plugins on flowable subscribe;
	Get rx java plugins on maybe subscribe;
	Get rx java plugins on maybe assembly;
	Get rx java plugins on single assembly;
	Get rx java plugins on single subscribe;
	Get rx java plugins on observable assembly;
	Get rx java plugins on connectable observable assembly;
	Get rx java plugins on observable subscribe;
	Set on completable assembly function on completable assembly;
	Set on completable subscribe bi function on completable subscribe;
	Set on flowable assembly function on flowable assembly;
	Set on maybe assembly function on maybe assembly;
	Set on connectable flowable assembly function on connectable flowable assembly;
	Set on flowable subscribe bi function on flowable subscribe;
	Set on maybe subscribe bi function on maybe subscribe;
	Set on observable assembly function on observable assembly;
	Set on connectable observable assembly function on connectable observable assembly;
	Set on observable subscribe bi function on observable subscribe;
	Set on single assembly function on single assembly;
	Set on single subscribe bi function on single subscribe;
	Process rx java plugins rx java plugins on subscribe;
	Process rx java plugins rx java plugins on assembly;
	Set handler function on parallel assembly;
	Get rx java plugins on parallel assembly;
	Process rx java plugins rx java plugins on before blocking;
	Set on  before blocking;
	Get rx java plugins on before blocking;
	Create computation scheduler;
	Create io scheduler;
	Create new thread scheduler;
	Create single scheduler;
	Apply function;
	Apply bi function;
	Call require non  null s callable;
	Apply require non  null function;
	Instantiate rx java plugins

2. Changes to package io.reactivex.subjects:  

2. Changes to package io.reactivex.subscribers:  

2.1. Add a class for safe subscriber. It allows to:

	Instantiate safe subscriber  with downstream subscriber;
	Process safe subscriber safe subscriber on subscribe;
	Process safe subscriber safe subscriber on next;
	Process safe subscriber safe subscriber on next no subscription;
	Process safe subscriber safe subscriber on error;
	Process safe subscriber safe subscriber on complete;
	Process safe subscriber safe subscriber on complete no subscription;
	Handle request;
	Cancel safe subscriber

2.2. Add a class for serialized subscriber. It allows to:

	Instantiate serialized subscriber  with downstream subscriber;
	Instantiate serialized subscriber  with actual subscriber;
	Process serialized subscriber serialized subscriber on subscribe;
	Process serialized subscriber serialized subscriber on next;
	Process serialized subscriber serialized subscriber on error;
	Process serialized subscriber serialized subscriber on complete;
	Emit loop;
	Handle request;
	Cancel serialized subscriber

