BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. 
 This change set is mainly composed of:  

1. Changes to package io.reactivex:  

1. Changes to package io.reactivex.internal.operators.mixed:  

1.1. Add a class for observable concat map completable test. It allows to:

	Handle simple;
	Handle simple 2;
	Run;
	Handle simple long prefetch;
	Handle main error;
	Handle inner error;
	Handle inner error delayed;
	Apply v integer;
	Accept to test observer;
	Handle mapper crash;
	Handle mapper crash hidden;
	Handle immediate error;
	Handle immediate error 2;
	Handle boundary error;
	End error;
	Double observable concat map completable test on subscribe;
	Apply f observable;
	Handle disposed;
	Handle immediate outer inner error race;
	Handle test;
	Dispose observable concat map completable test in drain loop;
	Get done but not empty;
	Handle async fused;
	Handle fusion rejected;
	Handle empty scalar source;
	Just scalar source

1.2. Add a class for observable concat map maybe test. It allows to:

	Handle simple;
	Apply v integer;
	Handle simple long;
	Handle empty;
	Handle mixed;
	Handle mixed long;
	Accept to test observer;
	Handle main error;
	Handle inner error;
	Handle main boundary error inner success;
	Handle main boundary error inner empty;
	Double observable concat map maybe test on subscribe;
	Apply f observable;
	Take observable concat map maybe test;
	Cancel observable concat map maybe test;
	Handle main error after inner error;
	Subscribe actual;
	Handle inner error after main error;
	Delay all errors;
	Handle mapper crash;
	Handle scalar mapper crash;
	Handle disposed;
	Handle scalar empty source;
	Cancel no concurrent clean;
	Check unbounded inner queue;
	Handle inner success dispose race;
	Run;

1.3. Add a class for observable concat map single test. It allows to:

	Handle simple;
	Apply v integer;
	Handle simple long;
	Handle main error;
	Handle inner error;
	Handle main boundary error inner success;
	Double observable concat map single test on subscribe;
	Apply f observable;
	Take observable concat map single test;
	Cancel observable concat map single test;
	Handle main error after inner error;
	Subscribe actual;
	Handle inner error after main error;
	Delay all errors;
	Accept to test observer;
	Handle mapper crash;
	Handle mapper crash scalar;
	Handle disposed;
	Handle main completes while inner active;
	Handle scalar empty source;
	Cancel no concurrent clean;
	Check unbounded inner queue;
	Handle inner success dispose race;
	Run;

1.4. Add a class for observable switch map completable test. It allows to:

	Handle normal;
	Apply v integer;
	Handle main error;
	Handle inner error;
	Switch observable switch map completable test over;
	Dispose observable switch map completable test;
	Check disposed;
	Check bad source;
	Apply f observable;
	Handle mapper crash;
	Apply f integer;
	Handle mapper cancels;
	Process observable switch map completable test observable switch map completable test on next inner complete race;
	Run;
	Process observable switch map completable test observable switch map completable test on next inner error race;
	Handle test;
	Process observable switch map completable test observable switch map completable test on error inner error race;
	Handle inner error then main error;
	Subscribe actual;
	Handle inner error delayed;
	Handle main completesinner error delayed;
	Handle main error delayed;
	Handle scalar mapper crash;
	Handle scalar empty source;
	Handle scalar source

1.5. Add a class for observable switch map maybe test. It allows to:

	Handle simple;
	Apply v integer;
	Handle simple empty;
	Handle simple mixed;
	Handle main error;
	Handle inner error;
	Double observable switch map maybe test on subscribe;
	Apply f observable;
	Take observable switch map maybe test;
	Switch observable switch map maybe test over;
	Switch observable switch map maybe test over delay error;
	Handle main error inner complete delay error;
	Handle main error inner success delay error;
	Handle mapper crash;
	Dispose observable switch map maybe test before switch in on next;
	Dispose observable switch map maybe test on next after first;
	Cancel observable switch map maybe test;
	Handle main error after termination;
	Subscribe actual;
	Handle inner error after termination;
	Handle next cancel race;
	Run;
	Handle next inner error race;
	Handle main error inner error race;
	Handle test;
	Handle next inner success race;
	Check disposed;
	Drain reentrant;
	Process  on next;
	Handle scalar mapper crash;
	Handle scalar empty source;
	Handle scalar source

1.6. Add a class for observable switch map single test. It allows to:

	Handle simple;
	Apply v integer;
	Handle main error;
	Handle inner error;
	Double observable switch map single test on subscribe;
	Apply f observable;
	Take observable switch map single test;
	Switch observable switch map single test over;
	Switch observable switch map single test over delay error;
	Handle main error inner complete delay error;
	Handle main error inner success delay error;
	Handle mapper crash;
	Dispose observable switch map single test before switch in on next;
	Dispose observable switch map single test on next after first;
	Cancel observable switch map single test;
	Handle main error after termination;
	Subscribe actual;
	Handle inner error after termination;
	Handle next cancel race;
	Run;
	Handle next inner error race;
	Handle main error inner error race;
	Handle test;
	Handle next inner success race;
	Check disposed;
	Drain reentrant;
	Process  on next;
	Handle scalar mapper crash;
	Handle scalar empty source;
	Handle scalar source

2. Changes to package io.reactivex.tck:  

2.1. Add a class for concat map maybe tck test. It allows to:

	Create publisher;
	Apply v integer

2.2. Add a class for concat map single tck test. It allows to:

	Create publisher;
	Apply v integer

