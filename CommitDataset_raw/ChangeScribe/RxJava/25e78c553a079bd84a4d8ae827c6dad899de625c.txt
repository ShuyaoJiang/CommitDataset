BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  renames some files.
 This change set is mainly composed of:  

1. Changes to package io.reactivex:  

1. Changes to package io.reactivex.internal.operators.completable:  

1.1. Add a class for completable delay test. It allows to:

	Delay custom scheduler;
	Handle test on error called on scheduler;
	Accept throwable;
	Handle disposed;
	Double completable delay test on subscribe;
	Apply completable;
	Handle normal;
	Handle error not delayed;
	Handle error delayed

1.2. Add a class for completable merge test. It allows to:

	Handle invalid prefetch;
	Cancel completable merge test after first;
	Subscribe actual;
	Cancel completable merge test after first delay error;
	Process completable merge test completable merge test on error after complete;
	Handle complete after main;
	Handle complete after main delay error;
	Handle error after main delay error;
	Dispose completable merge test;
	Propagates completable merge test;
	Handle inner complete;
	Handle inner error;
	Handle inner error delay error;
	Handle main error inner error race;
	Apply v integer;
	Run;
	Handle main error inner error delayed race;
	Max completable merge test;
	Max concurrency one delay error;
	Max concurrency one delay error  first;
	Max concurrency one delay main errors;
	Apply v publish processor;
	Handle main double on error;
	Handle inner double on error;
	Handle inner is disposed;
	Merge array inner error race;
	Delay error iterable cancel;
	Delay error iterable cancel  after has next;
	Get iterator;
	Check if  has next;
	Handle next;
	Remove;
	Delay error iterable cancel  after next;

1.3. Add a class for completable repeat when test. It allows to:

	Handle when counted;
	Run;
	Apply flowable;
	Handle test

1.4. Add a class for completable subscribe test. It allows to:

	Subscribe completable subscribe test already canceled;
	Handle method test no cancel

1.5. Add a class for completable timeout test. It allows to:

	Handle timeout exception;
	Handle timeout continue other;
	Run;
	Should unsubscribe  from underlying subscription on dispose;
	Handle other errors;
	Handle main success;
	Handle main error;
	Handle error timeout race;
	Amb race

1.6. Add a class for completable unsafe test. It allows to:

	Handle unsafe create rejects completable;
	Wrap completable unsafe test already completable;
	Wrap custom completable;
	Subscribe completable observer;
	Handle unsafe create throws NPE;
	Handle unsafe create throws IAE;

2. Changes to package io.reactivex.internal.operators.flowable:  

2. Changes to package io.reactivex.internal.operators.observable:  

2.1. Add a class for observable blocking test. It allows to:

	Blocking observable blocking test first;
	Blocking observable blocking test first default;
	Blocking subscribe consumer;
	Accept v integer;
	Blocking subscribe consumer consumer;
	Blocking subscribe consumer consumer error;
	Accept;
	Blocking subscribe consumer consumer action;
	Run;
	Blocking subscribe observer;
	Process  on subscribe;
	Process  on next;
	Process  on error;
	Process  on complete;
	Blocking subscribe observer error;
	Blocking observable blocking test for each throws;
	Accept integer;
	Blocking observable blocking test first empty;
	Blocking last empty;
	Blocking observable blocking test first normal;
	Blocking last normal;
	Blocking single empty;
	Handle utility class;
	Dispose up front;
	Get delayed;
	Subscribe actual;
	Interrupt observable blocking test;
	Handle on complete delayed;
	Blocking cancel  upfront

2.2. Add a class for observable for each test. It allows to:

	Process observable for each test observable for each test for each wile;
	Accept v integer;
	Handle test;
	Process observable for each test observable for each test for each wile with error;
	Accept throwable;
	Handle bad source;
	Apply f observable;
	Dispose observable for each test;
	Process observable for each test observable for each test while predicate throws;
	Process observable for each test observable for each test while error throws;
	Accept v throwable;
	Process observable for each test observable for each test while complete throws;
	Run

2.3. Add a class for observable from test. It allows to:

	Process observable from test observable from test from future timeout;
	Process observable from test observable from test from publisher;
	Just 10;
	Process observable from test observable from test from array empty;
	Process observable from test observable from test from array single;
	Process observable from test observable from test from publisher dispose;
	Process observable from test observable from test from publisher double on subscribe;
	Apply flowable;
	Handle fusion rejected

2.4. Add a class for observable generate test. It allows to:

	Handle stateful biconsumer;
	Call;
	Accept emitter;
	Accept;
	Handle state supplier throws;
	Handle generator throws;
	Handle disposer throws;
	Dispose observable generate test;
	Handle null error;
	Accept s integer;
	Handle multiple on next;
	Handle multiple on error;
	Handle multiple on complete;

2.5. Add a class for observable interval range test. It allows to:

	Handle simple;
	Handle custom scheduler;
	Count observable interval range test;
	Count negative;
	Long overflow;
	Dispose observable interval range test;
	Cancel observable interval range test

2.6. Add a class for observable to X test. It allows to:

	Convert observable to X test to flowable buffer;
	Convert observable to X test to flowable drop;
	Convert observable to X test to flowable latest;
	Convert observable to X test to flowable error 1;
	Convert observable to X test to flowable error 2;
	Convert observable to X test to flowable missing

3. Changes to package io.reactivex.internal.operators.single:  

3.1. Add a class for single amb test. It allows to:

	Handle amb with first fires;
	Handle amb with second fires;
	Handle amb iterable with first fires;
	Handle amb iterable with second fires;
	Handle amb array empty;
	Handle amb single source;
	Handle error;
	Handle null source success race;
	Run;
	Handle multiple error race;
	Handle success error race;
	Handle many sources;
	Handle amb with order;
	Handle amb iterable order;
	Handle amb array order;
	No winner success dispose;
	Accept throwable;
	No winner error dispose;

3.2. Add a class for single concat test. It allows to:

	Concat single concat test with;
	Convert concat;
	Handle concat 3;
	Concat single concat test;
	Concat array;
	Concat array eager test;
	Concat eager iterable test;
	Concat eager publisher test;
	Concat observable;
	No subsequent subscription;
	Subscribe single emitter;
	No subsequent subscription iterable;

3.3. Add a class for single delay test. It allows to:

	Delay single delay test on success;
	Delay single delay test on error;
	Get delayed error on success;
	Get delayed error on error;
	Delay subscription completable;
	Delay subscription observable;
	Delay subscription flowable;
	Delay subscription single;
	Delay subscription time;
	Delay subscription time custom scheduler;
	Handle test on error called on scheduler;
	Accept throwable;
	Process single delay test single delay test with publisher dispose;
	Process single delay test single delay test with publisher error;
	Process single delay test single delay test with publisher error 2;
	Subscribe actual;
	Process single delay test single delay test with observable dispose;
	Process single delay test single delay test with observable error;
	Process single delay test single delay test with observable error 2;
	Process single delay test single delay test with single errors;
	Process single delay test single delay test with single dispose;
	Process single delay test single delay test with completable dispose;
	Process single delay test single delay test with completable double on subscribe;
	Apply completable;
	Process single delay test single delay test with single double on subscribe;
	Apply single

3.4. Add a class for single do on test. It allows to:

	Do single do on test on dispose;
	Run;
	Do single do on test on error;
	Accept throwable;
	Do single do on test on subscribe;
	Accept disposable;
	Do single do on test on success;
	Accept integer;
	Do single do on test on subscribe normal;
	Do single do on test on subscribe error;
	Do single do on test on subscribe just crash;
	Do single do on test on subscribe error crash;
	Process single do on test single do on test on error success;
	Accept v throwable;
	Process single do on test single do on test on error crashes;
	Do single do on test on event throws success;
	Accept v integer;
	Do single do on test on event throws error;
	Do single do on test on dispose dispose;
	Do single do on test on dispose success;
	Do single do on test on dispose error;
	Do single do on test on dispose double on subscribe;
	Apply single;
	Do single do on test on dispose crash;
	Do single do on test on success errors;
	Accept;
	Do single do on test on success crash;
	Process single do on test single do on test on subscribe crash;
	Subscribe actual;

3.5. Add a class for single from test. It allows to:

	Process single from test single from test from future;
	Process single from test single from test from future timeout;
	Process single from test single from test from publisher

3.6. Add a class for single merge test. It allows to:

	Merge single single;
	Merge single merge test;
	Merge errors;
	Merge delay error iterable;
	Merge delay error publisher;
	Merge delay error 2;
	Merge delay error 2 error  first;
	Merge delay error 3;
	Merge delay error 4

3.7. Add a class for single misc test. It allows to:

	Never single misc test;
	Handle timer;
	Wrap single misc test;
	Subscribe single observer;
	Cast single misc test;
	Check if single misc test contains;
	Compose single misc test;
	Apply f single;
	Apply v integer;
	Hide single misc test;
	Process single misc test single misc test on error resume next;
	Process single misc test single misc test on error return value;
	Handle repeat;
	Repeat times;
	Repeat single misc test until;
	Accept v integer;
	Get  as boolean;
	Retry single misc test;
	Call;
	Retry bi predicate;
	Handle test;
	Retry times;
	Retry predicate;
	Handle timeout;
	Timeout other;
	Convert single misc test to completable;
	Ignore element;
	Convert single misc test to observable;
	Check if single misc test equals

3.8. Add a class for single zip test. It allows to:

	Zip single zip test;
	Apply a integer;
	No dispose  on all success;
	Run;
	Convert no dispose on all success;
	Apply

4. Changes to package io.reactivex.internal.queue:  

4. Changes to package io.reactivex.observable:  

4. Changes to package io.reactivex.observers:  

4. Changes to package io.reactivex.schedulers:  

4. Changes to package io.reactivex.single:  

4. Changes to package io.reactivex.subscribers:  

