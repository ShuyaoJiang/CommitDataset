BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. 
 This change set is mainly composed of:  

1. Changes to package io.reactivex:  

1. Changes to package io.reactivex.internal.operators.maybe:  

1.1. Add a class for maybe amb test. It allows to:

	Amb lots;
	Handle amb first done;
	Dispose maybe amb test;
	Handle inner error race;
	Run;
	Dispose no further signals;
	Subscribe actual;
	No winner success dispose;
	Accept;
	No winner error dispose;
	Accept throwable;
	No winner complete dispose;
	Handle null source success race;

1.2. Add a class for maybe concat array test. It allows to:

	Cancel maybe concat array test;
	Cancel delay error;
	Handle backpressure;
	Handle backpressure delay error;
	Handle request cancel race;
	Run;
	Handle request cancel race delay error;
	Handle error after termination;
	Subscribe actual;
	No subsequent subscription;
	Subscribe s maybe emitter;
	No subsequent subscription delay error;

1.3. Add a class for maybe concat iterable test. It allows to:

	Take maybe concat iterable test;
	Handle iterator throws;
	Get iterator;
	Handle error;
	Handle success cancel race;
	Run;
	Check if maybe concat iterable test has next throws;
	Apply v integer;
	Handle next throws;
	Handle next returns null;
	No subsequent subscription;
	Subscribe s maybe emitter;
	No subsequent subscription delay error;

1.4. Add a class for maybe do on event test. It allows to:

	Dispose maybe do on event test;
	Accept v integer;
	Double maybe do on event test on subscribe;
	Apply maybe;
	Process maybe do on event test maybe do on event test on subscribe crash;
	Subscribe actual;
	Accept disposable

1.5. Add a class for maybe empty test. It allows to:

	Handle scalar callable

1.6. Add a class for maybe equal test. It allows to:

	Dispose maybe equal test;
	Throws maybe equal test;
	Handle test

1.7. Add a class for maybe error test. It allows to:

	Handle error callable throws;
	Call

1.8. Add a class for maybe filter single test. It allows to:

	Handle error;
	Dispose maybe filter single test;
	Double maybe filter single test on subscribe;
	Apply v single

1.9. Add a class for maybe flat map completable test. It allows to:

	Dispose maybe flat map completable test;
	Apply v integer;
	Handle mapper throws;
	Handle mapper returns null;

1.10. Add a class for maybe flatten test. It allows to:

	Dispose maybe flatten test;
	Apply v integer;
	Double maybe flatten test on subscribe;
	Apply v maybe;
	Handle main error;
	Handle main empty;
	Handle mapper throws;
	Handle mapper returns null;

1.11. Add a class for maybe ignore element test. It allows to:

	Dispose maybe ignore element test;
	Double maybe ignore element test on subscribe;
	Apply v maybe

1.12. Add a class for maybe just test. It allows to:

	Handle scalar callable

1.13. Add a class for maybe merge array test. It allows to:

	Handle normal;
	Get fused poll mixed;
	Get fused empty check;
	Process  on subscribe;
	Process  on next;
	Process  on error;
	Process  on complete;
	Cancel maybe merge array test;
	Handle first errors;
	Handle error fused;
	Handle error race;
	Run;
	Merge bad source;
	Subscribe actual;
	Handle small offer 2 throws;
	Handle large offer 2 throws;

1.14. Add a class for maybe peek test. It allows to:

	Handle disposed;
	Double maybe peek test on subscribe;
	Apply maybe;
	Handle double error;
	Subscribe actual;
	Accept throwable;
	Handle double complete;
	Run;
	Do maybe peek test on error throws;
	Accept;
	After terminate throws;

1.15. Add a class for maybe timer test. It allows to:

	Dispose maybe timer test;
	Handle timer interruptible;
	Apply

1.16. Add a class for maybe to single test. It allows to:

	Handle source;
	Dispose maybe to single test;
	Double maybe to single test on subscribe;
	Apply maybe

1.17. Add a class for maybe zip array test. It allows to:

	Apply;
	First error;
	Handle second error;
	Dispose maybe zip array test;
	Handle zipper throws;
	Apply a integer;
	Handle zipper returns null;
	Handle middle error;
	Handle inner error race;
	Run;
	Zip array one is null;
	Handle single source zipper returns null

1.18. Add a class for maybe zip iterable test. It allows to:

	Apply;
	First error;
	Handle second error;
	Dispose maybe zip iterable test;
	Handle zipper throws;
	Handle zipper returns null;
	Handle middle error;
	Handle inner error race;
	Run;
	Handle iterator throws;
	Apply v integer;
	Check if maybe zip iterable test has next throws;
	Handle next throws;
	Zip iterable one is null;
	Zip iterable two is null;
	Handle single source zipper returns null

2. Changes to package io.reactivex.maybe:  

