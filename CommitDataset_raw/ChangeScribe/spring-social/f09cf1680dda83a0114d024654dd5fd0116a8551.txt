BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (changelog.txt, apis.xml, connecting.xml, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package org.springframework.social:  

1. Changes to package org.springframework.social.connect:  

1. Changes to package org.springframework.social.connect.jdbc:  

1. Changes to package org.springframework.social.connect.support:  

1. Changes to package org.springframework.social.connect.web:  

1. Changes to package org.springframework.social.oauth1:  

1. Changes to package org.springframework.social.oauth2:  

1. Changes to package org.springframework.social.security:  

1.1. Add a class for social authentication exception. It allows to:

	Instantiate social authentication exception;
	Instantiate social authentication exception  with cause throwable

1.2. Add a class for social authentication filter. It allows to:

	Instantiate social authentication filter  with authentication manager, user id source, users connection repository, authentication service locator and authentication service locator;
	Set signup url;
	Set connection added redirect url;
	Set connection adding failure redirect url;
	Set update connections;
	Set post login url;
	Set social authentication filter always use post login url;
	Set post failure url;
	Set session strategy;
	Get users connection repository;
	Get auth service locator;
	Attempt authentication;
	Detect rejection;
	Check if social authentication filter requires authentication;
	Add connection;
	Set filter processes url;
	Get authentication;
	Attempt auth service;
	Get requested provider id;
	Do authentication;
	Build signup url;
	Update connections

1.3. Add a class for social authentication provider. It allows to:

	Instantiate social authentication provider  with users connection repository, social user details service and social user details service;
	Handle supports;
	Authenticate authentication;
	Convert social authentication provider to user id;
	Get authorities

1.4. Add a class for social authentication provider test. It allows to:

	Handle supports;
	Convert social authentication provider test to user id;
	Authenticate social authentication provider test;
	Handle dummy connection;
	Get list

1.5. Add a class for social authentication redirect exception. It allows to:

	Instantiate social authentication redirect exception  with redirect url;
	Instantiate social authentication redirect exception;
	Get redirect url

1.6. Add an interface declaration  for social authentication service locator. It allows to:

	Get authentication service;
	Get registered authentication provider ids

1.7. Add a class for social authentication service registry. It allows to:

	Get authentication service;
	Add authentication service;
	Set authentication services;
	Get registered authentication provider ids

1.8. Add a class for social authentication token. It allows to:

	Instantiate social authentication token  with connection, provider account data map and provider account data map;
	Instantiate social authentication token  with connection, details serializable, provider account data map, authorities collection and authorities collection;
	Get provider id;
	Get credentials;
	Get principal;
	Get connection;
	Get provider account data;
	Authenticated social authentication token

1.9. Add a class for social authentication token test. It allows to:

	Handle test unauthenticated;
	Handle dummy connection

1.10. Add an interface declaration  for social user details service. It allows to:

	Load user  by user id

2. Changes to package org.springframework.social.security.provider:  

2.1. Add a class for abstract social authentication service. It allows to:

	Handle after properties set;
	Get connection cardinality;
	Set connection cardinality;
	Get connection added redirect url;
	Set connection added redirect url

2.2. Add a class for o auth 1 authentication service. It allows to:

	Instantiate o auth 1 authentication service  with O auth 1 connection factory;
	Get connection factory;
	Set connection factory;
	Set return  to url parameters;
	Get return  to url parameters;
	Handle after properties set;
	Get auth token;
	Build return  to url;
	Extract cached request token

2.3. Add a class for o auth 1 authentication service test. It allows to:

	Handle test

2.4. Add a class for o auth 2 authentication service. It allows to:

	Instantiate o auth 2 authentication service  with O auth 2 connection factory;
	Get connection factory;
	Set connection factory;
	Set return  to url parameters;
	Get return  to url parameters;
	Set default scope;
	Handle after properties set;
	Get auth token;
	Generate state;
	Build return  to url;
	Get proxy header aware request URL;
	Set scope;
	Add custom parameters

2.5. Add a class for o auth 2 authentication service test. It allows to:

	Handle test;
	Handle test with proxy headers

2.6. Add an interface declaration  for social authentication service. It allows to:

	Get connection cardinality;
	Check if social authentication service is multi user id;
	Check if social authentication service is multi provider user id;
	Check if social authentication service is authenticate possible;
	Get connection factory;
	Get auth token;
	Get connection added redirect url

3. Changes to package org.springframework.social.security.test:  

3.1. Add a class for arg matchers. It allows to:

	Instantiate arg matchers;
	O auth 2 parameters;
	Handle matches;
	O auth token;
	Get authorized request token;
	E arg matchers

3.2. Add a class for dummy connection. It allows to:

	Get dummy;
	Instantiate dummy connection  with api;
	Get key;
	Get display name;
	Get profile url;
	Get image url;
	Handle sync;
	Handle test;
	Check if dummy connection has expired;
	Refresh dummy connection;
	Fetch user profile;
	Update status;
	Get dummy connection api;
	Create data;
	Answer dummy connection;
	Answer invocation on mock

3.3. Add a class for dummy user details. It allows to:

	Instantiate dummy user details;
	Get user id;
	Get username;
	Get password;
	Get authorities;
	Check if dummy user details is account non expired;
	Check if dummy user details is account non locked;
	Check if dummy user details is credentials non expired;
	Check if dummy user details is enabled

