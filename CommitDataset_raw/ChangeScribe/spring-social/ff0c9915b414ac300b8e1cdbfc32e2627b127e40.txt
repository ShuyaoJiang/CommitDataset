BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (changelog.txt, apis.xml, connecting.xml, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package org.springframework.social:  

1.1. Add an interface declaration  for api binding. It allows to:

	Check if api binding is authorized

1.2. Add a class for api exception. It allows to:

	Instantiate api exception;
	Instantiate api exception  with cause throwable;
	Get provider id

1.3. Add a class for not authorized exception. It allows to:

	Instantiate not authorized exception

1.4. Add a class for resource not found exception. It allows to:

	Instantiate resource not found exception

2. Changes to package org.springframework.social.connect:  

2.1. Add a class for connection repository exception. It allows to:

	Instantiate connection repository exception;
	Instantiate connection repository exception  with cause throwable

2.2. Add an interface declaration  for connection sign up. It allows to:

	Execute connection

2.3. Add a class for not connected exception. It allows to:

	Instantiate not connected exception;
	Get provider id

3. Changes to package org.springframework.social.connect.jdbc:  

3. Changes to package org.springframework.social.connect.support:  

3. Changes to package org.springframework.social.connect.web:  

3.1. Add a class for connect support. It allows to:

	Instantiate connect support;
	Instantiate connect support  with session strategy;
	Get set use authenticate url;
	Set application url;
	Set callback url;
	Build O auth url;
	Handle complete connection;
	Verify state parameter;
	Handle callback url;
	Build O auth 1 url;
	Get O auth 1 parameters;
	Fetch request token;
	Build O auth 2 url;
	Get O auth 2 parameters;
	Connect path;
	Extract cached request token;
	Extract cached O auth 2 state;
	Get request parameters

3.2. Add a class for provider sign in attempt. It allows to:

	Instantiate provider sign in attempt  with connection;
	Get connection;
	Add connection

3.3. Add a class for provider sign in controller. It allows to:

	Instantiate provider sign in controller  with connection factory locator, users connection repository, sign in adapter and sign in adapter;
	Set sign  in interceptors;
	Set sign  in url;
	Set sign  up url;
	Set post sign  in url;
	Set application url;
	Set session strategy;
	Add sign  in interceptor;
	Sign  in native web request;
	Get oauth 1 callback;
	Convert oauth;
	Get canceled authorization callback;
	Handle after properties set;
	Handle sign  in connection;
	Redirect provider sign in controller;
	Pre sign  in connection factory;
	Post sign  in connection factory;
	Intercepting sign  in to connection factory

3.4. Rename type ProviderSignInUtils with ProviderSignInUtils

3.5. Add an interface declaration  for sign in adapter. It allows to:

	Sign  in connection

4. Changes to package org.springframework.social.oauth1:  

4.1. Add a class for abstract O auth 1 api binding. It allows to:

	Instantiate abstract O auth 1 api binding;
	Set request factory;
	Check if abstract O auth 1 api binding is authorized;
	Get rest template;
	Configure rest template;
	Get message converters;
	Get form message converter;
	Get json message converter;
	Get byte array message converter;
	Create rest template;
	Handle after properties set;
	Post process;
	Post construction configuration;
	Create rest template  with culled message converters

5. Changes to package org.springframework.social.oauth2:  

5.1. Add a class for abstract O auth 2 api binding. It allows to:

	Instantiate abstract O auth 2 api binding;
	Instantiate abstract O auth 2 api binding  with token strategy;
	Set request factory;
	Check if abstract O auth 2 api binding is authorized;
	Get rest template;
	Get O auth 2 version;
	Configure rest template;
	Get message converters;
	Get form message converter;
	Get json message converter;
	Get byte array message converter;
	Create rest template;
	Create rest template  with culled message converters;
	Handle after properties set;
	Post process;
	Post construction configuration

