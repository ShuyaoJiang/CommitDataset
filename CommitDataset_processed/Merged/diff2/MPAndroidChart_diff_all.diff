[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + yVals1.add(new Entry((int) val1, i));, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + yVals1.add(new Entry((int) val1, i));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + yVals1.add(new Entry(val, i));, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + yVals1.add(new Entry((int) val1, i));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + yVals1.add(new Entry(val, i));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.utils.YLabels;, +import com.github.mikephil.charting.utils.YLabels.YLabelPosition;,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java, + calcRanges();, + calcRanges();, + mRanges[i] = new Range(negRemain, negRemain - value);, + negRemain -= value;]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + public void zoomAndCenter(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis) {]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + yVals.add(new Entry(i, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + yVals.add(new Entry(i, val));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +// /**, +// * Returns the lowest x-index (value on the x-axis) that is still visible on the chart., +// *, +// * @return, +// */, +// @Override, +// public float getLowestVisibleX() {, +//, +// float step = mData.getDataSetCount();, +// float div = (step <= 1) ? 1 : step + mData.getGroupSpace();, +//, +// float[] pts = new float[] { mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom() };, +//, +// getTransformer(AxisDependency.LEFT).pixelsToValue(pts);, +// return ((pts[0] <= getXChartMin()) ? 0 : (pts[0] / div) + 1);, +// }, +//, +// /**, +//
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + ArrayList<String> xVals = new ArrayList<String>();,
[+++ b/MPChartLib/build.gradle, +apply plugin: 'android-maven', +++ b/MPChartLib/build.gradle, +apply plugin: 'android-maven', +++ b/Projects_using_MPAndroidChart.txt, +HI - Health & Fitness Tracker - All-in-one Diet, Health & Fitness Tracker, +https://play.google.com/store/apps/details?id=com.droidinfinity.healthplus, +БИТ.Лидер, +https://play.google.com/store/apps/details?id=com.firstbit.bitlider, +++ b/MPChartLib/build.gradle, +apply plugin: 'android-maven', +++ b/Projects_using_MPAndroidChart.txt, +HI - Health & Fitness Tracker - All-in-one Diet, Health & Fitness Tracker, +https://play.google.com/store/apps/details?id=com.droidinfinity.healthplus, +БИТ.Лидер, +https://play.google.com/store/apps/details?id=com.firstbit.bitlider, +++ b/build.gradle, + classpath 'com.github.dcendents:android-maven-plugin:1.2']
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java, + if (Double.isInfinite(number) || , + Double.isNaN(number) || , + number == 0.0), + return 0;, + , + , + if (Float.isInfinite(i)), + return 0;, + ]
[+++ b/MPChartExample/res/layout/activity_bubblechart.xml, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, +++ b/README.md, +![alt tag](https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png), + - **BubbleChart** (area covered by bubbles indicates the value), +, +![alt tag](https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png), +, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, +++ b/README.md, +![alt tag](https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png), + - **BubbleChart** (area covered by bubbles indicates the value), +, +![alt tag](https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png), +, +++ b/screenshots/bubblechart.png, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, +++ b/README.md, +![alt tag](https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png), + - **BubbleChart** (area covered by bubbles indicates the value), +, +![alt tag](https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png), +, +++ b/screenshots/bubblechart.png, +++ b/screenshots/horizontal_barchart.jpg, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, +++ b/README.md, +![alt tag](https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png), + - **BubbleChart** (area covered by bubbles indicates the value), +, +![alt tag](https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png),
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + private DecimalFormat mFormat;, + mFormat = new DecimalFormat("######.0");, + return mFormat.format(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + private DecimalFormat mFormat;, + mFormat = new DecimalFormat("######.0");, + return mFormat.format(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, + private SimpleDateFormat mFormat = new SimpleDateFormat("dd MMM HH:mm");, + return mFormat.format(new Date((long) value));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + private DecimalFormat mFormat;, + mFormat = new DecimalFormat("######.0");, + return mFormat.format(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, + private SimpleDateFormat mFormat = new SimpleDateFormat("dd MMM HH:mm");, + return mFormat.format(new Date((long) value));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, + private DecimalFormat format = new DecimalFormat("###");, + return format.format(value) + "-" + format.format(value + 10);, + private DecimalFormat mFormat;, + mFormat =
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + float arcStartPointX = center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD);, + float arcStartPointY = center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD);]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java, + result.yAxis = axis;, + result.xAxisRange = xAxisRange;]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="34", + android:versionName="2.0.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="34", + android:versionName="2.0.2" >, +++ b/MPChartExample/build.gradle, + versionCode 34, + versionName '2.0.2']
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-3.jar, +++ /dev/null, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-3.jar, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + .abs(Math.abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin))) / 100f * 20f);, + , + if (Math.abs(mYChartMax - mYChartMin) < 0.00001f) {, + space = Math.abs(mYChartMax / 100f * 20f);, + Log.i(LOG_TAG, "Space: " + space);, +, +++ /dev/null, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-3.jar, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + .abs(Math.abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin))) / 100f * 20f);, + , + if (Math.abs(mYChartMax - mYChartMin) < 0.00001f) {, + space = Math.abs(mYChartMax / 100f * 20f);, + Log.i(LOG_TAG, "Space: " + space);, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +import com.github.mikephil.charting.data.ChartData;, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.utils.FillFormatter;, + private FillFormatter mFillFormatter;, +, + mFillFormatter = new
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/assets/sine.txt, +++
[+++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-0.jar, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-0.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-0.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="30", +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-0.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="30", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + private String[] mParties = new String[] {, + "Party A", "Party B", "Party C", "Party D", "Party E", "Party F", "Party G", + };, +, + // ArrayList<Entry> yVals2 = new ArrayList<Entry>();, + // for (int i = mSeekBarX.getProgress() / 2; i <, + // mSeekBarX.getProgress(); i++) {, + // yVals2.add(new Entry((float) (Math.random() * mult) + mult / 5, i));, + // }, +, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-0.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="30", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setGranularity(10f);, + float barWidth = 9f;, + float spaceForBar = 10f;, + yVals1.add(new BarEntry(i * spaceForBar, val));, + data.setBarWidth(barWidth);, + @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setGranularity(10f);, + float barWidth = 9f;, + float spaceForBar = 10f;, + yVals1.add(new BarEntry(i * spaceForBar, val));, + data.setBarWidth(barWidth);, + @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, +import com.github.mikephil.charting.utils.EntryXComparator;, +import java.util.Collections;, + xl.setAxisMinValue(0f);, + ArrayList<Entry> entries = new ArrayList<Entry>();, + float xVal = (float) (Math.random() * range);, + float yVal = (float) (Math.random() * range);, + entries.add(new Entry(xVal, yVal));, + // sort by x-value, + Collections.sort(entries, new EntryXComparator());, +, + LineDataSet set1 = new LineDataSet(entries, "DataSet
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ /dev/null, +++
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/AndroidManifest.xml, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + return mCenterAxisLabels && mEntryCount > 0;]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + float yPos = e.getY() * mAnimator.getPhaseY();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + float yPos = e.getY() * mAnimator.getPhaseY();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + IDataSet set = mData.getDataSetByIndex(highlight.getDataSetIndex());, +, + int entryIndex = set.getEntryIndex(e);, + if (e == null || entryIndex > set.getEntryCount() * mAnimator.getPhaseX())]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java, + public final static double DOUBLE_EPSILON = Double.longBitsToDouble(1);, + public final static float FLOAT_EPSILON = Float.intBitsToFloat(1);]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ /dev/null, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java, + float[] positions = getTransformedPositions();, + float[] positions = getTransformedPositions();, +, + // draw the grid, + for (int i = 0; i < positions.length; i += 2) {, + c.drawPath(linePath(gridLinePath, i, positions), mGridPaint);, + drawZeroLine(c);, + * Calculates the path for a grid line., + * @param p, + * @param i, + * @param positions, + * @return, + protected Path linePath(Path p, int i, float[] positions) {, +, + p.moveTo(mViewPortHandler.offsetLeft(), positions[i + 1]);, + p.lineTo(mViewPortHandler.contentRight(), positions[i + 1]);, +, + return p;, + },
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.view.View;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.view.View;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.view.View;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.view.View;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.view.View;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/AxisRenderer.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.view.View;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/AxisRenderer.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.view.View;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/AxisRenderer.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, +++
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="54", + android:versionName="3.0.1" >]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (mSavedXDist > mSavedYDist), + mTouchMode = X_ZOOM;, + else, + mTouchMode = Y_ZOOM;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (mSavedXDist > mSavedYDist), + mTouchMode = X_ZOOM;, + else, + mTouchMode = Y_ZOOM;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + if ((Math.abs(dataSet.getEntryForIndex(j).getY()) > 0.000001)) {, + if ((Math.abs(e.getY()) > 0.000001)) {, + if (sweepAngleOuter % 360f < Utils.FLOAT_EPSILON) {, + if ((Math.abs(set.getEntryForIndex(j).getY()) > 0.000001)) {, + if ((Math.abs(e.getY()) > 0.000001)) {]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Default: 500dp, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Default: 500dp, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Default: 500dp, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/Entry.java, + return "Entry, x: " + x + " y: " + getY();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Default: 500dp, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/Entry.java, + return "Entry, x: " + x + " y: " + getY();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java]
[+++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="500", +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="500", +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + mChart.setDragEnabled(true);, + mChart.setTouchEnabled(true);, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="500", +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + mChart.setDragEnabled(true);, + mChart.setTouchEnabled(true);, +++ b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java, + , + // immediately unselect, +// mChart.highlightValues(null);, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="500", +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + mChart.setDragEnabled(true);, + mChart.setTouchEnabled(true);, +++ b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java, + , + // immediately unselect, +// mChart.highlightValues(null);, +++ b/MPChartLib/src/com/github/mikephil/charting/BarChart.java, + @Override, + protected void init() {, + super.init();, + , + mHighlightPaint = new Paint(Paint.ANTI_ALIAS_FLAG);, + mHighlightPaint.setStyle(Paint.Style.STROKE);, + mHighlightPaint.setStrokeWidth(2f);, + mHighlightPaint.setColor(Color.rgb(255, 187,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/ComplexityFragment.java, +package com.xxmassdeveloper.mpchartexample.fragments;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.support.v4.app.Fragment;, +import android.view.LayoutInflater;, +import android.view.View;, +import android.view.ViewGroup;, +, +import com.github.mikephil.charting.charts.LineChart;, +import com.github.mikephil.charting.utils.Legend;, +import com.github.mikephil.charting.utils.YLabels;, +import com.xxmassdeveloper.mpchartexample.R;, +, +, +public class ComplexityFragment extends SimpleFragment {, +, + public static Fragment newInstance() {, + return new ComplexityFragment();, + }, +, + private LineChart mChart;, + , + @Override, + public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {, + View v = inflater.inflate(R.layout.frag_simple_line, container, false);, + , + mChart = (LineChart) v.findViewById(R.id.lineChart1);, + , + mChart.setDescription("");, + mChart.setDrawYValues(false);, + , + mChart.setHighlightIndicatorEnabled(false); , + mChart.setDrawBorder(false);, + mChart.setDrawGridBackground(false);, + mChart.setDrawVerticalGrid(false);, + mChart.setDrawXLabels(false);, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, + XLabels xl = mChart.getXLabels();, + xl.setAvoidFirstLastClipping(true);, +, + xVals.add((i % 30) + "/" + (i % 12) + "/14");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, + XLabels xl = mChart.getXLabels();, + xl.setAvoidFirstLastClipping(true);, +, + xVals.add((i % 30) + "/" + (i % 12) + "/14");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +// mChart.setTouchEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, + XLabels xl = mChart.getXLabels();, + xl.setAvoidFirstLastClipping(true);, +, + xVals.add((i % 30) + "/" + (i % 12) + "/14");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +// mChart.setTouchEnabled(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import android.view.MotionEvent;, +import android.view.View.OnTouchListener;, + drawXLabels(getHeight() - mOffsetBottom + mXLabels.mXLabelHeight + yoffset * 1.6f);, + String label = mCurrentData.getXVals().get(i);, +, + if (mXLabels.isAvoidFirstLastClippingEnabled())
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, + // content (user-interface), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, + // content (user-interface), +++ b/MPChartLib/build.gradle, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, + // content (user-interface), +++ b/MPChartLib/build.gradle, +++ b/MPChartLib/src/com/github/mikephil/charting/animation/ChartAnimator.java, +package com.github.mikephil.charting.animation;, +, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, +, +public class ChartAnimator {, + , + /** object that is updated upon animation update */, + private AnimatorUpdateListener mListener;, + , + public ChartAnimator(AnimatorUpdateListener listener) {, + mListener = listener;, + }, +, + /**, + * ################ ################ ################ ################, + * Animation support below Honeycomb thanks to Jake Wharton's awesome, + * nineoldandroids library: https://github.com/JakeWharton/NineOldAndroids, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, + protected float mLeftAxisMax = Float.MIN_VALUE;, + protected float mLeftAxisMin = Float.MAX_VALUE;, + protected float mRightAxisMax = Float.MIN_VALUE;, + protected float mRightAxisMin = Float.MAX_VALUE;, + * total number of values (entries) across all DataSet objects, + private int mValueCount = 0;, + mDataSets = arrayToList(dataSets);, + * Created because Arrays.asList(...) does not support modification., + *, + * @param array, + * @return, + */, + private List<T> arrayToList(T[] array) {, +, + List<T> list = new ArrayList<>();, +, + for (T set : array) {, + list.add(set);, + }, +, + return list;, + }, +,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + if (labelCount == 0 || range <= 0 || Double.isInfinite(range)) {, + mAxis.mCenteredEntries = new float[]{};, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + if (labelCount == 0 || range <= 0 || Double.isInfinite(range)) {, + mAxis.mCenteredEntries = new float[]{};, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java, + if (labelCount == 0 || range <= 0 || Double.isInfinite(range)) {, + mAxis.mCenteredEntries = new float[]{};]
[+++ b/.gitignore, +, +# maven, +target/, +++ b/.gitignore, +, +# maven, +target/, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="12", + android:versionName="1.2.2" >, +++ b/.gitignore, +, +# maven, +target/, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="12", + android:versionName="1.2.2" >, +++ b/MPChartExample/build.gradle, + versionCode 12, + versionName '1.2.2', +++ b/.gitignore, +, +# maven, +target/, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="12", + android:versionName="1.2.2" >, +++ b/MPChartExample/build.gradle, + versionCode 12, + versionName '1.2.2', +++ /dev/null, +++ b/.gitignore, +, +# maven, +target/, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="12", + android:versionName="1.2.2" >, +++ b/MPChartExample/build.gradle, + versionCode 12, + versionName '1.2.2', +++ /dev/null, +++ /dev/null, +++ b/.gitignore, +, +# maven, +target/, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="12", +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +import com.github.mikephil.charting.formatter.FormattedStringCache;, + private FormattedStringCache<Integer, Float> mFormattedStringCache;, + mFormattedStringCache = new FormattedStringCache<>(new DecimalFormat("######.0"));, + return mFormattedStringCache.getFormattedString(value, dataSetIndex);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +import com.github.mikephil.charting.formatter.FormattedStringCache;, + private FormattedStringCache<Integer, Float> mFormattedStringCache;, + mFormattedStringCache = new FormattedStringCache<>(new DecimalFormat("######.0"));, + return mFormattedStringCache.getFormattedString(value, dataSetIndex);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +import com.github.mikephil.charting.formatter.FormattedStringCache;, + private FormattedStringCache<Long, Date> mFormattedStringCache = new FormattedStringCache<Long, Date>(new SimpleDateFormat("dd MMM HH:mm"));, + Long v = (long) value;, + return mFormattedStringCache.getFormattedString(new Date(v), v);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +import com.github.mikephil.charting.formatter.FormattedStringCache;, + private FormattedStringCache<Integer, Float> mFormattedStringCache;, + mFormattedStringCache = new FormattedStringCache<>(new DecimalFormat("######.0"));, + return mFormattedStringCache.getFormattedString(value, dataSetIndex);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +import com.github.mikephil.charting.formatter.FormattedStringCache;, + private FormattedStringCache<Long, Date> mFormattedStringCache = new FormattedStringCache<Long, Date>(new SimpleDateFormat("dd MMM
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CandleStickChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CandleStickChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_candlechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.CandleStickChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, + , + <SeekBar, + android:id="@+id/seekBar2", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_toLeftOf="@+id/tvYMax", + android:layout_marginRight="5dp", + android:max="200", + android:paddingBottom="12dp" />, +, + <SeekBar, + android:id="@+id/seekBar1", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_above="@+id/seekBar2", + android:layout_margin="8dp", + android:layout_marginBottom="35dp", + android:layout_toLeftOf="@+id/tvXMax", + android:layout_marginRight="5dp", + android:max="500", + android:paddingBottom="12dp" />, +, + <TextView, + android:id="@+id/tvXMax", + android:layout_width="50dp", + android:layout_height="wrap_content", + android:layout_alignBottom="@+id/seekBar1", + android:layout_alignParentRight="true", + android:text="500", +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + final boolean isSingleColor = dataSet.getColors().size() == 1;, +, + if (isSingleColor) {, + mRenderPaint.setColor(dataSet.getColor());, + }, + if (!isSingleColor) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + final boolean isSingleColor = dataSet.getColors().size() == 1;, +, + if (isSingleColor) {, + mRenderPaint.setColor(dataSet.getColor());, + }, + if (!isSingleColor) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java, + final boolean isSingleColor = dataSet.getColors().size() == 1;, +, + if (isSingleColor) {, + mRenderPaint.setColor(dataSet.getColor());, + }, +, + if (!isSingleColor) {, + }, +]
[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.utils.SelectionDetail;, + List<SelectionDetail> valsAtIndex = getSelectionDetailsAtIndex(xIndex);, + * Returns an array of SelectionDetail objects for the given x-index. The SelectionDetail, + protected List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {, + List<SelectionDetail> vals = new ArrayList<SelectionDetail>();, + vals.add(new SelectionDetail(pts[1], i, dataSet));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.utils.SelectionDetail;, + List<SelectionDetail> valsAtIndex = getSelectionDetailsAtIndex(xIndex);, + * Returns an array of SelectionDetail objects for the given x-index. The SelectionDetail, + protected List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {, + List<SelectionDetail> vals = new ArrayList<SelectionDetail>();, + vals.add(new SelectionDetail(pts[1], i, dataSet));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import com.github.mikephil.charting.utils.SelectionDetail;, + * Returns an array of SelectionDetail objects for the given x-index. The SelectionDetail, +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.util.Log;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.SeekBar;, +import android.widget.SeekBar.OnSeekBarChangeListener;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.charts.LineChart;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.Legend.LegendForm;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.LineData;, +import com.github.mikephil.charting.data.LineDataSet;, +import com.github.mikephil.charting.data.XAxisValue;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;, +import com.github.mikephil.charting.listener.OnChartValueSelectedListener;, +import com.github.mikephil.charting.utils.ColorTemplate;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +import java.util.Date;, +import java.util.List;, +, +public class LineChartTime extends DemoBase implements OnSeekBarChangeListener {, +, + private LineChart mChart;, + private SeekBar mSeekBarX, mSeekBarY;, + private
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mAxisLeft.isEnabled()), + mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum, mAxisLeft.mAxisMaximum, mAxisLeft.isInverted());, +, + if (mAxisRight.isEnabled()), + mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum, mAxisRight.mAxisMaximum, mAxisRight.isInverted());, +, + if (mXAxis.isEnabled()), + mXAxisRenderer.computeAxis(mXAxis.mAxisMinimum, mXAxis.mAxisMaximum, false);, +, + if (mXAxis.isEnabled() && mXAxis.isDrawLimitLinesBehindDataEnabled()), + if (mAxisLeft.isEnabled() && mAxisLeft.isDrawLimitLinesBehindDataEnabled()), + if (mAxisRight.isEnabled() && mAxisRight.isDrawLimitLinesBehindDataEnabled()), + if (mXAxis.isEnabled() && !mXAxis.isDrawLimitLinesBehindDataEnabled()), + if (mAxisLeft.isEnabled() && !mAxisLeft.isDrawLimitLinesBehindDataEnabled()), + if (mAxisRight.isEnabled() && !mAxisRight.isDrawLimitLinesBehindDataEnabled()), +, + if (mAxisLeft.isEnabled()), + mAxisLeft.calculate(mData.getYMin(AxisDependency.LEFT),, + mData.getYMax(AxisDependency.LEFT));, +, + if (mAxisRight.isEnabled()), + mAxisRight.calculate(mData.getYMin(AxisDependency.RIGHT),, + mData.getYMax(AxisDependency.RIGHT));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mAxisLeft.isEnabled()), + mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum, mAxisLeft.mAxisMaximum, mAxisLeft.isInverted());, +, + if (mAxisRight.isEnabled()), + mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum, mAxisRight.mAxisMaximum, mAxisRight.isInverted());, +, + if (mXAxis.isEnabled()), + mXAxisRenderer.computeAxis(mXAxis.mAxisMinimum, mXAxis.mAxisMaximum, false);, +, +
[+++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + BarDataSet set2 = new BarDataSet(entries2, "");, + set2.setStackLabels(new String[]{"Stack 1", "Stack 2"});, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + BarDataSet set2 = new BarDataSet(entries2, "");, + set2.setStackLabels(new String[]{"Stack 1", "Stack 2"});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +import com.github.mikephil.charting.interfaces.dataprovider.CombinedDataProvider;, +public class CombinedChart extends BarLineChartBase<CombinedData> implements CombinedDataProvider {, + public CombinedData getCombinedData() {, + return mData;, + }, +, + @Override, + setHighlighter(new CombinedHighlighter(this, this));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + BarDataSet set2 = new BarDataSet(entries2, "");, + set2.setStackLabels(new String[]{"Stack 1", "Stack 2"});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +import com.github.mikephil.charting.interfaces.dataprovider.CombinedDataProvider;, +public class CombinedChart extends BarLineChartBase<CombinedData> implements CombinedDataProvider {, + public CombinedData getCombinedData() {, + return mData;, + }, +, + @Override,
[+++ b/CONTRIBUTING.md, +Bug-fixes and features often come from users of the Charts framework, and improving it greatly. We want to keep it as easy as possible to contribute changes that improve the experience for users all around the world. There are a few guidelines that we, +++ b/CONTRIBUTING.md, +Bug-fixes and features often come from users of the Charts framework, and improving it greatly. We want to keep it as easy as possible to contribute changes that improve the experience for users all around the world. There are a few guidelines that we, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >,
[+++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/IMarker.java, + * @return The desired (general) offset you wish the IMarker to have on the x- and y-axis., + * @return The offset for drawing at the specific `point`. This allows conditional adjusting of the Marker position., + * @param highlight The highlight object contains information about the highlighted value such as it's dataset-index, the]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, + FSize[] temp = new FSize[labelCount];, + int count = mCalculatedLabelSizes.length;, + for(int i = 0 ; i < count && i < labelCount ; i++){, + temp[i] = mCalculatedLabelSizes[i];, + }, + while(count > labelCount){, + count--;, + FSize.recycleInstance(mCalculatedLabelSizes[count]);, + }, + mCalculatedLabelSizes = temp;]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.LineChart, + <com.github.mikephil.charting.BarChart, + <com.github.mikephil.charting.PieChart, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.LineChart, + <com.github.mikephil.charting.BarChart, + <com.github.mikephil.charting.PieChart, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_piechart.xml, + <com.github.mikephil.charting.PieChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.LineChart, + <com.github.mikephil.charting.BarChart, + <com.github.mikephil.charting.PieChart, +
[+++ b/MPChartExample/res/layout/activity_barchart.xml, + android:layout_width="60dp", + android:textAppearance="?android:attr/textAppearanceSmall" />, + android:layout_width="60dp", + android:textAppearance="?android:attr/textAppearanceSmall" />, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:layout_width="60dp", + android:textAppearance="?android:attr/textAppearanceSmall" />, + android:layout_width="60dp", + android:textAppearance="?android:attr/textAppearanceSmall" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + tvX.setTextSize(10);, + l.setXOffset(10f);, + XAxis xAxis = mChart.getXAxis();, + xAxis.setTypeface(mTfLight);, + xAxis.setGranularity(1f);, + xAxis.setCenterAxisLabels(true);, + xAxis.setValueFormatter(new IAxisValueFormatter() {, + leftAxis.setSpaceTop(35f);, + float groupSpace = 0.08f;, + float barSpace = 0.03f; // x4 DataSet, + float barWidth = 0.2f; // x4 DataSet, + // (0.2 + 0.03) * 4 + 0.08 = 1.00 -> interval per "group", + int groupCount = mSeekBarX.getProgress() + 1;, + int endYear = startYear + groupCount;, + tvX.setText(startYear
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + private RectF mBarShadowRectBuffer = new RectF();, +, + // draw the bar shadow before the values, + if (mChart.isDrawBarShadowEnabled()) {, + mShadowPaint.setColor(dataSet.getBarShadowColor());, +, + BarData barData = mChart.getBarData();, +, + final float barWidth = barData.getBarWidth();, + final float barWidthHalf = barWidth / 2.0f;, + float x;, +, + for (int i = 0, count = Math.min((int)(Math.ceil((float)(dataSet.getEntryCount()) * phaseX)), dataSet.getEntryCount());, + i < count;, + i++) {, +, + BarEntry e = dataSet.getEntryForIndex(i);, +, + x = e.getX();, +, + mBarShadowRectBuffer.left = x - barWidthHalf;, + mBarShadowRectBuffer.right = x + barWidthHalf;, +, + trans.rectValueToPixel(mBarShadowRectBuffer);, +, + if
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="35", + android:versionName="2.0.3" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="35", + android:versionName="2.0.3" >, +++ b/MPChartExample/build.gradle, + versionCode 35, + versionName '2.0.3']
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java, + if (width == 0.f) {, + if (height == 0.f) {]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (mChart.isScaleXEnabled() != mChart.isScaleYEnabled()) {, + mTouchMode = mChart.isScaleXEnabled() ? X_ZOOM : Y_ZOOM;, + } else {, + mTouchMode = mSavedXDist > mSavedYDist ? X_ZOOM : Y_ZOOM;, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (mChart.isScaleXEnabled() != mChart.isScaleYEnabled()) {, + mTouchMode = mChart.isScaleXEnabled() ? X_ZOOM : Y_ZOOM;, + } else {, + mTouchMode = mSavedXDist > mSavedYDist ? X_ZOOM : Y_ZOOM;, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + if ((Math.abs(dataSet.getEntryForIndex(j).getY()) > Utils.FLOAT_EPSILON)) {, + if ((Math.abs(e.getY()) > Utils.FLOAT_EPSILON)) {, + if (sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {, + if ((Math.abs(set.getEntryForIndex(j).getY()) > Utils.FLOAT_EPSILON)) {, + if ((Math.abs(e.getY()) > Utils.FLOAT_EPSILON)) {]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + RectF bounds = mChart.getBarBounds((BarEntry) e);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + RectF bounds = mChart.getBarBounds((BarEntry) e);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + private DecimalFormat mFormat;, + mFormat = new DecimalFormat("######.0");, + return mFormat.format(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + RectF bounds = mChart.getBarBounds((BarEntry) e);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + private DecimalFormat mFormat;, + mFormat = new DecimalFormat("######.0");, + return mFormat.format(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + RectF bounds = mChart.getBarBounds((BarEntry) e);, + PointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(h.getDataSetIndex()), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + RectF bounds = mChart.getBarBounds((BarEntry) e);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++
[+++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + mChart.setYLabelCount(5);, + if (mChart.isAdjustXLabelsEnabled()), + mChart.setAdjustXLabels(false);, + mChart.setAdjustXLabels(true);, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + mChart.setYLabelCount(5);, + if (mChart.isAdjustXLabelsEnabled()), + mChart.setAdjustXLabels(false);, + mChart.setAdjustXLabels(true);, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivityMultiDataset.java, + mChart.setYLabelCount(5);, + mChart.setDrawLegend(false);, +, + if (mChart.isAdjustXLabelsEnabled()), + mChart.setAdjustXLabels(false);, + mChart.setAdjustXLabels(true);, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + mChart.setYLabelCount(5);, + if (mChart.isAdjustXLabelsEnabled()), + mChart.setAdjustXLabels(false);, + mChart.setAdjustXLabels(true);, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivityMultiDataset.java, + mChart.setYLabelCount(5);, + mChart.setDrawLegend(false);, +, + if (mChart.isAdjustXLabelsEnabled()), + mChart.setAdjustXLabels(false);, + mChart.setAdjustXLabels(true);, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, + mChart.setYLabelCount(6);, + if (mChart.isAdjustXLabelsEnabled()), + mChart.setAdjustXLabels(false);, + mChart.setAdjustXLabels(true);, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + mChart.setYLabelCount(5);, + if (mChart.isAdjustXLabelsEnabled()), + mChart.setAdjustXLabels(false);, + mChart.setAdjustXLabels(true);, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivityMultiDataset.java, + mChart.setYLabelCount(5);, + mChart.setDrawLegend(false);, +, + if (mChart.isAdjustXLabelsEnabled()), + mChart.setAdjustXLabels(false);, + mChart.setAdjustXLabels(true);, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java,
[+++ b/.gitignore, +generatedJar/, +docs/, +, +build.xml, +++ b/.gitignore, +generatedJar/, +docs/, +, +build.xml, +++ /dev/null, +++ b/.gitignore, +generatedJar/, +docs/, +, +build.xml, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java, + List<String> xVals = new ArrayList<String>();, +++ b/.gitignore, +generatedJar/, +docs/, +, +build.xml, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmUtils.java, + List<String> xVals = new ArrayList<String>();, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java, + originPosX = mViewPortHandler.contentLeft() + contentWidth / 2.f - mLegend.mNeededWidth / 2f;, + if (posX == originPosX && legendPosition == Legend.LegendPosition.BELOW_CHART_CENTER && lineIndex < calculatedLineSizes.length) {]
[+++ b/gradle/wrapper/gradle-wrapper.properties, +#Sun Jan 11 01:47:43 CST 2015, +distributionUrl=https\://services.gradle.org/distributions/gradle-2.2.1-all.zip]
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/assets/nlogn.txt, +O(nlogn), +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/assets/nlogn.txt, +O(nlogn), +++ b/MPChartExample/assets/sine.txt, +Sine function, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function,
[+++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), +
[+++ b/MPChartExample/res/drawable-hdpi/star.png, +++ b/MPChartExample/res/drawable-hdpi/star.png, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggleIcons", + android:title="Toggle Icons">, + </item>, + <item, +++ b/MPChartExample/res/drawable-hdpi/star.png, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggleIcons", + android:title="Toggle Icons">, + </item>, + <item, +++ b/MPChartExample/res/menu/bubble.xml, + android:id="@+id/actionToggleIcons", + android:title="Toggle Icons">, + </item>, + <item, +++ b/MPChartExample/res/drawable-hdpi/star.png, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggleIcons", + android:title="Toggle Icons">, + </item>, + <item, +++ b/MPChartExample/res/menu/bubble.xml, + android:id="@+id/actionToggleIcons", + android:title="Toggle Icons">, + </item>, + <item, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionToggleIcons", + android:title="Toggle Icons">, + </item>, + <item, +++ b/MPChartExample/res/drawable-hdpi/star.png, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggleIcons", + android:title="Toggle Icons">, + </item>, + <item, +++ b/MPChartExample/res/menu/bubble.xml, + android:id="@+id/actionToggleIcons", + android:title="Toggle Icons">, + </item>, + <item, +++
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mXAxis.isDrawGridLinesBehindDataEnabled()), +, + if (mAxisLeft.isDrawGridLinesBehindDataEnabled()), +, + if (mAxisRight.isDrawGridLinesBehindDataEnabled()), + if (!mXAxis.isDrawGridLinesBehindDataEnabled()), + mXAxisRenderer.renderGridLines(canvas);, +, + if (!mAxisLeft.isDrawGridLinesBehindDataEnabled()), + mAxisRendererLeft.renderGridLines(canvas);, +, + if (!mAxisRight.isDrawGridLinesBehindDataEnabled()), + mAxisRendererRight.renderGridLines(canvas);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mXAxis.isDrawGridLinesBehindDataEnabled()), +, + if (mAxisLeft.isDrawGridLinesBehindDataEnabled()), +, + if (mAxisRight.isDrawGridLinesBehindDataEnabled()), + if (!mXAxis.isDrawGridLinesBehindDataEnabled()), + mXAxisRenderer.renderGridLines(canvas);, +, + if (!mAxisLeft.isDrawGridLinesBehindDataEnabled()), + mAxisRendererLeft.renderGridLines(canvas);, +, + if (!mAxisRight.isDrawGridLinesBehindDataEnabled()), + mAxisRendererRight.renderGridLines(canvas);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + * flag indicating the grid lines layer depth, + */, + protected boolean mDrawGridLinesBehindData = true;, +, + /**, + * If this is set to false, the grid lines are draw on top
[+++ b/Projects_using_MPAndroidChart.txt, +, +ExpenseDroid - Expense Manager, +https://play.google.com/store/apps/details?id=com.tphoneix.avi.myapplication]
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:padding="10dp", + android:orientation="vertical" >, + android:text="MultipleCharts" />, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:padding="10dp", + android:orientation="vertical" >, + android:text="MultipleCharts" />, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +, +import java.util.ArrayList;, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + ArrayList<Float> yVals = new ArrayList<Float>();, + yVals.add(val);, + mChart.setData(xVals, yVals);, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:padding="10dp", + android:orientation="vertical" >, + android:text="MultipleCharts" />, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +, +import java.util.ArrayList;, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + ArrayList<Float> yVals = new ArrayList<Float>();, + yVals.add(val);, + mChart.setData(xVals, yVals);, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +, +import java.util.ArrayList;, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + pointF.y = 1.0f;]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mGetPositionBuffer[0] = e.getX();, + mGetPositionBuffer[1] = e.getY();, + getTransformer(axis).pointValuesToPixel(mGetPositionBuffer);, + return MPPointF.getInstance(mGetPositionBuffer[0], mGetPositionBuffer[1]);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mGetPositionBuffer[0] = e.getX();, + mGetPositionBuffer[1] = e.getY();, + getTransformer(axis).pointValuesToPixel(mGetPositionBuffer);, + return MPPointF.getInstance(mGetPositionBuffer[0], mGetPositionBuffer[1]);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mGetPositionBuffer[0] = e.getX();, + mGetPositionBuffer[1] = e.getY();, + getTransformer(axis).pointValuesToPixel(mGetPositionBuffer);, + return MPPointF.getInstance(mGetPositionBuffer[0], mGetPositionBuffer[1]);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mGetPositionBuffer[0] = e.getX();, + mGetPositionBuffer[1] = e.getY();, + getTransformer(axis).pointValuesToPixel(mGetPositionBuffer);, + return MPPointF.getInstance(mGetPositionBuffer[0], mGetPositionBuffer[1]);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * The maximum distance in dp away from an entry causing it
[+++ b/MPChartExample/.gitignore, +/release, +++ b/MPChartExample/.gitignore, +/release, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, + "Demonstration of charts inside ViewPager Fragments. In this example the focus was on the design and look and feel of the" +, + " chart."));, + objects.add(new ContentItem(, + "Simple demonstration of a time-chart. This chart draws one line entry per hour originating from the current time in " +, + "milliseconds."));, +++ b/MPChartExample/.gitignore, +/release, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, + "Demonstration of charts inside ViewPager Fragments. In this example the focus was on the design and look and feel of the" +, + " chart."));, + objects.add(new ContentItem(, + "Simple demonstration of
[+++ b/MPChartExample/res/menu/candle.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionToggleHighlight", + android:title="Toggle Highlight">, + </item>, + <item, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item, + android:id="@+id/animateXY", + android:title="Animate XY">, + </item>, + <item, + android:id="@+id/actionToggleAdjustXLegend", + android:title="Toggle AdjustXLegend">, + </item>, + <item, + android:id="@+id/actionSave", + android:title="Save to SD-Card">, + </item>, + <item, + android:id="@+id/actionTogglePinch", + android:title="Toggle PinchZoom">, + </item>, +, +</menu>, +++ b/MPChartExample/res/menu/candle.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionToggleHighlight", + android:title="Toggle
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.utils.Highlight;, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.utils.Highlight;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.utils.Highlight;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + ArrayList<BarDataSet> dataSets = (ArrayList<BarDataSet>) bd.getDataSets();, + ArrayList<BarEntry> entries = (ArrayList<BarEntry>) dataSet.getYVals();, + ArrayList<BarDataSet> dataSets = (ArrayList<BarDataSet>) mCurrentData.getDataSets();, + ArrayList<BarEntry> entries = (ArrayList<BarEntry>) dataSet.getYVals();, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.utils.Highlight;, +++
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggle3D", + android:title="Toggle 3D">, + </item>, + <item, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggle3D", + android:title="Toggle 3D">, + </item>, + <item, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggle3D", + android:title="Toggle 3D">, + </item>, + <item, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.utils.XLabels;, +import com.github.mikephil.charting.utils.XLabels.XLabelPosition;, + mChart.setDrawYValues(false);, +, + mChart.setUnit(" €");, + mChart.setDrawYValues(true);, +, + // disable 3D, + mChart.set3DEnabled(false);, + , + mChart.setDrawVerticalGrid(false);, + mChart.setDrawHorizontalGrid(false);, + XLabels xLabels = mChart.getXLabels();,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, + IAxisValueFormatter xAxisFormatter = new DayAxisValueFormatter(mChart);, + IAxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, + IAxisValueFormatter xAxisFormatter = new DayAxisValueFormatter(mChart);, + IAxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, + xl.setValueFormatter(new IAxisValueFormatter() {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, + IAxisValueFormatter xAxisFormatter = new DayAxisValueFormatter(mChart);, + IAxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, + xl.setValueFormatter(new IAxisValueFormatter() {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, +import com.github.mikephil.charting.formatter.IValueFormatter;, + xAxis.setValueFormatter(new IAxisValueFormatter() {, + private class ValueFormatter implements IValueFormatter, + {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, + IAxisValueFormatter xAxisFormatter = new DayAxisValueFormatter(mChart);, + IAxisValueFormatter custom = new MyAxisValueFormatter();, +++
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".FilledLineActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".FilledLineActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/FilledLineActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.os.Bundle;, +import android.view.WindowManager;, +, +import com.github.mikephil.charting.charts.LineChart;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.LineData;, +import com.github.mikephil.charting.data.LineDataSet;, +import com.github.mikephil.charting.formatter.FillFormatter;, +import com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider;, +import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class FilledLineActivity extends DemoBase {, +, + private LineChart mChart;, + private int mFillColor = Color.argb(150, 51, 181, 229);, +, + @Override, + protected void onCreate(Bundle savedInstanceState) {, + super.onCreate(savedInstanceState);, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + setContentView(R.layout.activity_linechart_noseekbar);, +, + mChart = (LineChart) findViewById(R.id.chart1);, + mChart.setBackgroundColor(Color.WHITE);, + mChart.setGridBackgroundColor(mFillColor);, + mChart.setDrawGridBackground(true);, +,
[+++ b/MPChartExample/res/layout/activity_piechart.xml, + android:layout_height="match_parent", +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:layout_height="match_parent", +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, + mChartTouchListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, + if (mChartTouchListener == null || mDataNotSet), + return mChartTouchListener.onTouch(this, event);, + if (mChartTouchListener instanceof BarLineChartTouchListener), + ((BarLineChartTouchListener<?>) mChartTouchListener).computeScroll();, + * @param enabled the y axis automatically adjusts to the min and max y, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:layout_height="match_parent", +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, + mChartTouchListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, + if (mChartTouchListener == null || mDataNotSet), + return mChartTouchListener.onTouch(this, event);, + if (mChartTouchListener instanceof BarLineChartTouchListener), + ((BarLineChartTouchListener<?>) mChartTouchListener).computeScroll();, + * @param enabled
[+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, + protected transient ValueFormatter mValueFormatter;, +++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, + protected transient ValueFormatter mValueFormatter;, +++ b/Projects_using_MPAndroidChart.txt]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, + yVals.add(new Entry(i * 0.001f, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, + yVals.add(new Entry(i * 0.001f, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +, + @Override, + public int getDecimalDigits() {, + return 0;, + }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, + yVals.add(new Entry(i * 0.001f, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +, + @Override, + public int getDecimalDigits() {, + return 0;, + }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java, +, + @Override, + public int getDecimalDigits() {, + return 0;, + }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, + yVals.add(new Entry(i * 0.001f, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +, + @Override, + public int getDecimalDigits() {, + return 0;, + }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java, +, + @Override, + public
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + <ScrollView, + android:id="@+id/scrollView1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_alignParentLeft="true", + android:layout_alignParentTop="true" >, +, + android:layout_gravity="center", + android:orientation="vertical", + android:padding="10dp" >, + android:text="MultilineChart" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + </ScrollView>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + <ScrollView, + android:id="@+id/scrollView1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_alignParentLeft="true", + android:layout_alignParentTop="true" >, +, + android:layout_gravity="center", + android:orientation="vertical", + android:padding="10dp" >, + android:text="MultilineChart" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp",
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer.java, + public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, + renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer.java, + public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, + renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronUpShapeRenderer.java, + public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, + renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer.java, + public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, + renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronUpShapeRenderer.java, + public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, + renderPaint, final float shapeSize)
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="39", + android:versionName="2.0.9" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="39", + android:versionName="2.0.9" >, +++ b/MPChartExample/build.gradle, + versionCode 39, + versionName '2.0.9', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.9' ]
[+++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="8", + android:targetSdkVersion="18" />, +++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="8", + android:targetSdkVersion="18" />, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +, + * This Activity demonstrates drawing into the Chart with the finger. Both line,, + * bar and scatter charts can be used for drawing., +public class DrawChartActivity extends Activity implements OnChartValueSelectedListener,, + OnDrawListener {, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + Log.i("VALS SELECTED",, + "Value: " + values[0].getVal() + ", xIndex: " + highlights[0].getXIndex(), +++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="8", + android:targetSdkVersion="18" />, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +, + * This Activity demonstrates drawing into the Chart with the finger. Both line,, + * bar and scatter
[+++ b/.gitignore, +, +# gradle wrapper working directory, +.gradle, +, +build/, +++ b/.gitignore, +, +# gradle wrapper working directory, +.gradle, +, +build/, +++ b/MPChartExample/.gitignore, +/build, +++ b/.gitignore, +, +# gradle wrapper working directory, +.gradle, +, +build/, +++ b/MPChartExample/.gitignore, +/build, +++ b/MPChartExample/build.gradle, +apply plugin: 'com.android.application', +, +android {, + compileSdkVersion 19, + buildToolsVersion '19.1.0', + defaultConfig {, + applicationId 'com.xxmassdeveloper.mpchartexample', + minSdkVersion 16, + targetSdkVersion 19, + versionCode 4, + versionName '1.0.4', +, + sourceSets {, + main {, + java.srcDirs = ['src'], + res.srcDirs = ['res'], + assets.srcDirs = ['assets'], + manifest.srcFile 'AndroidManifest.xml', + }, + }, + },
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + autoScale();, + /**, + * Performs auto scaling of the axis by recalculating the minimum and maximum y-values based on the entries currently in view., + */, + protected void autoScale() {, +, + final float fromX = getLowestVisibleX();, + final float toX = getHighestVisibleX();, +, + mData.calcMinMaxY(fromX, toX);, +, + mXAxis.calculate(mData.getXMin(), mData.getXMax());, +, + // calculate axis range (min / max) according to provided data, + mAxisLeft.calculate(mData.getYMin(AxisDependency.LEFT), mData.getYMax(AxisDependency.LEFT));, + mAxisRight.calculate(mData.getYMin(AxisDependency.RIGHT), mData.getYMax(AxisDependency, + .RIGHT));, +, + calculateOffsets();, + }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + autoScale();, + /**, + * Performs auto
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getXAxis().setAxisMinValue(0f);, + mChart.getXAxis().setAxisMaxValue(count);, +, + yVals1.add(new BarEntry(i + 0.5f, val));, + BarData data = new BarData(new ArrayList<XAxisValue>(), dataSets);, + data.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getXAxis().setAxisMinValue(0f);, + mChart.getXAxis().setAxisMaxValue(count);, +, + yVals1.add(new BarEntry(i + 0.5f, val));, + BarData data = new BarData(new ArrayList<XAxisValue>(), dataSets);, + data.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + float groupSpace = 0.8f;, + float barSpace = 0.15f;, +, + mChart.getBarData().groupBars(0, groupSpace, barSpace);, + mChart.getXAxis().setAxisMinValue(0f);, + mChart.getXAxis().setAxisMaxValue(mChart.getBarData().getIntervalWidth(groupSpace, barSpace) * mSeekBarX.getProgress());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getXAxis().setAxisMinValue(0f);, + mChart.getXAxis().setAxisMaxValue(count);, +, + yVals1.add(new BarEntry(i + 0.5f, val));, + BarData data = new BarData(new ArrayList<XAxisValue>(), dataSets);, + data.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + float groupSpace =
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="22", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="22", +++ b/MPChartExample/build.gradle, + versionCode 22, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="22", +++ b/MPChartExample/build.gradle, + versionCode 22, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="22", +++ b/MPChartExample/build.gradle, + versionCode 22, +++ /dev/null, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="22", +++ b/MPChartExample/build.gradle, + versionCode 22, +++ /dev/null, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/res/menu/dynamical.xml, + <item, + android:id="@+id/actionAddEmptyLineData", + android:title="Add empty LineData">, + </item>, + , + <item, + android:id="@+id/actionClear", + android:title="Clear chart">, + </item>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="22", +++ b/MPChartExample/build.gradle, + versionCode 22, +++ /dev/null, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/res/menu/dynamical.xml, + <item, + android:id="@+id/actionAddEmptyLineData", + android:title="Add empty LineData">, + </item>, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + * x and y are the values (NOT PIXELS) which to zoom to or from (the values of the zoom center)., + * Centers the viewport to the specified y value on the y-axis., + * @param axis - which axis should be used as a reference for the y-axis, + * x value on the x-axis, and center the viewport to the specified y value on the y-axis., + * @param xValue, + * @param axis - which axis should be used as a reference for the y-axis, + public void moveViewTo(float xValue, float yValue,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + //dataSet.setUsingSliceColorAsValueLineColor(true);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + //dataSet.setUsingSliceColorAsValueLineColor(true);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + private boolean mUsingSliceColorAsValueLineColor = false;, + /**, + * When valuePosition is OutsideSlice, use slice colors as line color if true, + * */, + @Override, + public boolean isUsingSliceColorAsValueLineColor() {, + return mUsingSliceColorAsValueLineColor;, + }, +, + public void setUsingSliceColorAsValueLineColor(boolean usingSliceColorAsValueLineColor) {, + this.mUsingSliceColorAsValueLineColor = usingSliceColorAsValueLineColor;, + }, +, + public void setValueLineColor(int valueLineColor) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + //dataSet.setUsingSliceColorAsValueLineColor(true);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + private boolean mUsingSliceColorAsValueLineColor = false;, + /**, + * When valuePosition is OutsideSlice, use slice colors as line color if true, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + final float phaseY = mAnimator.getPhaseY();, +, + transformed[k + 1] = y * phaseY;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + final float phaseY = mAnimator.getPhaseY();, +, + transformed[k + 1] = y * phaseY;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java, + final float phaseY = mAnimator.getPhaseY();, +, + transformed[k] = y * phaseY;]
[+++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleValues" android:title="Toggle Y-Values"></item>, +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleValues" android:title="Toggle Y-Values"></item>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + mChart.setLineWidth(4f);, + mChart.setCircleSize(4f);, + mChart.setHighlightEnabled(true);, +// mChart.highlightValues(new int[] {2, 6});, +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleValues" android:title="Toggle Y-Values"></item>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + mChart.setLineWidth(4f);, + mChart.setCircleSize(4f);, + mChart.setHighlightEnabled(true);, +// mChart.highlightValues(new int[] {2, 6});, +++ b/MPChartLib/src/com/github/mikephil/charting/BarChart.java, + @Override, + protected void drawHighlights() {, + , + // if there are values to highlight and highlighnting is enabled, do it, + if(mHighlightEnabled && valuesToHighlight()) {, + , + for(int i = 0; i < mIndicesToHightlight.length; i++) {, + , + , + }, + }, + },
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, + /**, + * Default constructor., + */, + /**, + * Constructor taking single or multiple DataSet objects., + *, + * @param dataSets, + */]
[+++ b/.gitignore, +projectFilesBackup/, +++ b/.gitignore, +projectFilesBackup/, +++ b/MPChartExample/src/main/res/layout/list_item.xml, + android:textColor="@android:color/black", +++ b/.gitignore, +projectFilesBackup/, +++ b/MPChartExample/src/main/res/layout/list_item.xml, + android:textColor="@android:color/black", +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:3.3.2', +++ b/.gitignore, +projectFilesBackup/, +++ b/MPChartExample/src/main/res/layout/list_item.xml, + android:textColor="@android:color/black", +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:3.3.2', +++ b/gradle/wrapper/gradle-wrapper.properties, +#Sat Mar 16 11:37:10 CET 2019, +distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="ScatterChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="ScatterChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + , + <Button, + android:id="@+id/button9", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="ScatterChart" />, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="ScatterChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + , + <Button, + android:id="@+id/button9", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="ScatterChart" />, +++ b/MPChartExample/res/layout/activity_scatterchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.ScatterChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, + , + <SeekBar, + android:id="@+id/seekBar2", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_toLeftOf="@+id/tvYMax", + android:layout_marginRight="5dp", + android:max="2000", + android:paddingBottom="12dp" />, +,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.os.Bundle;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.animation.Easing;, +import com.github.mikephil.charting.charts.RadarChart;, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.MarkerView;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.RadarData;, +import com.github.mikephil.charting.data.RadarDataSet;, +import com.github.mikephil.charting.data.RadarEntry;, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IRadarDataSet;, +import com.xxmassdeveloper.mpchartexample.custom.RadarMarkerView;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class RadarChartActivity extends DemoBase {, +, + private RadarChart mChart;, +, + @Override, + protected void onCreate(Bundle savedInstanceState) {, + super.onCreate(savedInstanceState);, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + protected DefaultValueFormatter mDefaultValueFormatter = new DefaultValueFormatter(0);, + if (set.needsFormatter() || set.getValueFormatter() == mDefaultValueFormatter), + set.setValueFormatter(mDefaultValueFormatter);, + mDefaultValueFormatter.setup(digits);, + return mDefaultValueFormatter;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + protected DefaultValueFormatter mDefaultValueFormatter = new DefaultValueFormatter(0);, + if (set.needsFormatter() || set.getValueFormatter() == mDefaultValueFormatter), + set.setValueFormatter(mDefaultValueFormatter);, + mDefaultValueFormatter.setup(digits);, + return mDefaultValueFormatter;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + return Utils.getDefaultValueFormatter();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + protected DefaultValueFormatter mDefaultValueFormatter = new DefaultValueFormatter(0);, + if (set.needsFormatter() || set.getValueFormatter() == mDefaultValueFormatter), + set.setValueFormatter(mDefaultValueFormatter);, + mDefaultValueFormatter.setup(digits);, + return mDefaultValueFormatter;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + return Utils.getDefaultValueFormatter();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java, +import com.github.mikephil.charting.formatter.DefaultValueFormatter;, +import com.github.mikephil.charting.formatter.IValueFormatter;, +, + private static IValueFormatter mDefaultValueFormatter = generateDefaultValueFormatter();, +, + private static IValueFormatter generateDefaultValueFormatter()
[+++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item android:id="@+id/animateXY" android:title="Animate XY"></item>, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item android:id="@+id/animateXY" android:title="Animate XY"></item>, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item, + android:id="@+id/animateXY", + android:title="Animate XY">, + </item>, + <item, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.BOTTOM);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.LEFT);, + l.setOrientation(Legend.LegendOrientation.HORIZONTAL);, + l.setDrawInside(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.BOTTOM);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.LEFT);, + l.setOrientation(Legend.LegendOrientation.HORIZONTAL);, + l.setDrawInside(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.TOP);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.RIGHT);, + l.setOrientation(Legend.LegendOrientation.VERTICAL);, + l.setDrawInside(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.BOTTOM);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.LEFT);, + l.setOrientation(Legend.LegendOrientation.HORIZONTAL);, + l.setDrawInside(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.TOP);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.RIGHT);, + l.setOrientation(Legend.LegendOrientation.VERTICAL);, + l.setDrawInside(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.BOTTOM);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.LEFT);, + l.setOrientation(Legend.LegendOrientation.HORIZONTAL);, + l.setDrawInside(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.BOTTOM);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.LEFT);, + l.setOrientation(Legend.LegendOrientation.HORIZONTAL);, + l.setDrawInside(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.TOP);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.RIGHT);, + l.setOrientation(Legend.LegendOrientation.VERTICAL);, + l.setDrawInside(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.BOTTOM);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.LEFT);, + l.setOrientation(Legend.LegendOrientation.HORIZONTAL);, + l.setDrawInside(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + l.setVerticalAlignment(Legend.LegendVerticalAlignment.TOP);, + l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.RIGHT);, + l.setOrientation(Legend.LegendOrientation.VERTICAL);, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Calculates the offsets of the chart to the border depending on the, + * Calculates the y-min and y-max value and the y-delta and x-delta value]
[+++ b/MPChartExample/res/layout/activity_colored_lines.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_colored_lines.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/res/layout/custom_marker_view.xml, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/res/layout/custom_marker_view.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +public class BarChartActivity extends DemoBase implements OnSeekBarChangeListener, OnChartValueSelectedListener {, + public void onNothingSelected() {};, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray"
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + // scaling can now only be done on x- and y-axis separately, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + // scaling can now only be done on x- and y-axis separately, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + // scaling can now only be done on x- and y-axis separately, + Log.i("x-index",, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + // scaling can now only be done on x- and y-axis separately, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + // scaling can now only be done on x- and y-axis separately, + Log.i("x-index",, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + // scaling can now only be done on x- and y-axis separately, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + // scaling
[+++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-1.jar, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-1.jar, +++ b/MPChartExample/project.properties, +target=android-19, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-1.jar, +++ b/MPChartExample/project.properties, +target=android-19, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-1.jar, +++ b/MPChartExample/project.properties, +target=android-19, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="9", + android:versionName="1.1.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="9", + android:versionName="1.1.1" >, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, + * Returns all colors used across all DataSet objects this object, + * represents., + * , + * @return, + */, + public int[] getColors() {, +, + int clrcnt = 0;, +, + for (int i = 0; i < mDataSets.size(); i++) {, + clrcnt += mDataSets.get(i).getColors().size();, + }, +, + int[] colors = new int[clrcnt];, + int cnt = 0;, +, + for (int i = 0; i < mDataSets.size(); i++) {, +, + ArrayList<Integer> clrs = mDataSets.get(i).getColors();, +,
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/assets/nlogn.txt, +O(nlogn), +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/assets/nlogn.txt, +O(nlogn), +++ b/MPChartExample/assets/sine.txt, +Sine function, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, + for (IDataSet set : mChart.getData().getDataSets()), + ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local',
[+++ b/MPChartExample/res/menu/realtime.xml, + <item, + android:id="@+id/actionClear", + android:title="Clear Values">, + </item>, +++ b/MPChartExample/res/menu/realtime.xml, + <item, + android:id="@+id/actionClear", + android:title="Clear Values">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +import android.widget.Toast;, + case R.id.actionClear: {, + mChart.clearValues();, + Toast.makeText(this, "Chart cleared!", Toast.LENGTH_SHORT).show();, + break;, + }, + data.addXValue(mMonths[data.getXValCount() % 12] + " ", + + (year + data.getXValCount() / 12));, + // mChart.moveViewTo(data.getXValCount()-7, 55f,, + // AxisDependency.LEFT);, +++ b/MPChartExample/res/menu/realtime.xml, + <item, + android:id="@+id/actionClear", + android:title="Clear Values">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +import android.widget.Toast;, + case R.id.actionClear: {, + mChart.clearValues();, + Toast.makeText(this, "Chart cleared!", Toast.LENGTH_SHORT).show();, + break;, + }, + data.addXValue(mMonths[data.getXValCount() % 12] + " ",
[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +, + mHighlightPaint.setColor(ds.getHighLightColor());, + mHighlightPaint.setAlpha(ds.getHighLightAlpha());, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +, + mHighlightPaint.setColor(ds.getHighLightColor());, + mHighlightPaint.setAlpha(ds.getHighLightAlpha());, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.BarLineScatterCandleData;, + ArrayList<LimitLine> limitLines = ((BarLineScatterCandleData) mOriginalData).getLimitLines();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +, + mHighlightPaint.setColor(ds.getHighLightColor());, + mHighlightPaint.setAlpha(ds.getHighLightAlpha());, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.BarLineScatterCandleData;, + ArrayList<LimitLine> limitLines = ((BarLineScatterCandleData) mOriginalData).getLimitLines();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java, + mHighlightPaint.setColor(set.getHighLightColor());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +, + mHighlightPaint.setColor(ds.getHighLightColor());, + mHighlightPaint.setAlpha(ds.getHighLightAlpha());, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.BarLineScatterCandleData;, + ArrayList<LimitLine> limitLines = ((BarLineScatterCandleData) mOriginalData).getLimitLines();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java, + mHighlightPaint.setColor(set.getHighLightColor());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, + LineDataSet set = (LineDataSet) getDataSetByIndex(mIndicesToHightlight[i].getDataSetIndex());, + , + mHighlightPaint.setColor(set.getHighLightColor());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +, + mHighlightPaint.setColor(ds.getHighLightColor());, + mHighlightPaint.setAlpha(ds.getHighLightAlpha());, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.BarLineScatterCandleData;, + ArrayList<LimitLine> limitLines = ((BarLineScatterCandleData)
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.DataSet;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.DataSet;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.DataSet;, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java, + * Returns the value of the Entry object at the given xPos. Returns, + float getYValueForXValue(float xPos);, +, + * Removes the Entry object closest to the given xPos from the DataSet.]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + <ScrollView, + android:id="@+id/scrollView1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_alignParentLeft="true", + android:layout_alignParentTop="true" >, +, + android:layout_gravity="center", + android:orientation="vertical", + android:padding="10dp" >, + android:text="MultilineChart" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + </ScrollView>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + <ScrollView, + android:id="@+id/scrollView1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_alignParentLeft="true", + android:layout_alignParentTop="true" >, +, + android:layout_gravity="center", + android:orientation="vertical", + android:padding="10dp" >, + android:text="MultilineChart" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp",
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="5", + android:versionName="1.0.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="5", + android:versionName="1.0.5" >, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import android.graphics.Typeface;, + Typeface tf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");, + , + mChart.setValueTypeface(tf);, + mChart.setCenterTextTypeface(Typeface.createFromAsset(getAssets(), "OpenSans-Light.ttf"));, + , + ct.addDataSetColors(ColorTemplate.VORDIPLOM_COLORS, this);, + // set a space between the slices, + mChart.setSliceSpace(3f);, + , + mChart.setHoleRadius(60f);, +, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="5", + android:versionName="1.0.5" >, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import android.graphics.Typeface;, + Typeface tf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");, + , + mChart.setValueTypeface(tf);, + mChart.setCenterTextTypeface(Typeface.createFromAsset(getAssets(), "OpenSans-Light.ttf"));, + , + ct.addDataSetColors(ColorTemplate.VORDIPLOM_COLORS, this);, + // set a space between the slices, + mChart.setSliceSpace(3f);, + , + mChart.setHoleRadius(60f);, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + yleft
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="12", + android:versionName="1.2.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="12", + android:versionName="1.2.2" >, +++ b/MPChartExample/build.gradle, + versionCode 12, + versionName '1.2.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="12", + android:versionName="1.2.2" >, +++ b/MPChartExample/build.gradle, + versionCode 12, + versionName '1.2.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java, + mSeekBarX.setProgress(20);, + private int[] mColors = new int[] { R.color.vordiplom_1, R.color.vordiplom_2, R.color.vordiplom_3 };, +, + , + int color = getResources().getColor(mColors[z % mColors.length]);, + d.setColor(color);, + d.setCircleColor(color);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="12", + android:versionName="1.2.2" >, +++ b/MPChartExample/build.gradle, + versionCode 12, + versionName '1.2.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java, + mSeekBarX.setProgress(20);, + private int[] mColors = new int[] { R.color.vordiplom_1, R.color.vordiplom_2, R.color.vordiplom_3 };, +,
[+++ b/.idea/runConfigurations/MPChartExample.xml, +<component name="ProjectRunConfigurationManager">, + <configuration default="false" name="MPChartExample" type="AndroidRunConfigurationType" factoryName="Android App" activateToolWindowBeforeRun="false">, + <module name="MPChartExample" />, + <option name="DEPLOY" value="true" />, + <option name="DEPLOY_APK_FROM_BUNDLE" value="false" />, + <option name="ARTIFACT_NAME" value="" />, + <option name="PM_INSTALL_OPTIONS" value="" />, + <option name="DYNAMIC_FEATURES_DISABLED_LIST" value="" />, + <option name="ACTIVITY_EXTRA_FLAGS" value="" />, + <option name="MODE" value="default_activity" />, + <option name="CLEAR_LOGCAT" value="false" />, + <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />, + <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />, + <option name="FORCE_STOP_RUNNING_APP" value="true" />, + <option name="TARGET_SELECTION_MODE" value="SHOW_DIALOG" />, + <option name="USE_LAST_SELECTED_DEVICE" value="false" />, + <option name="PREFERRED_AVD" value="" />, + <option name="SELECTED_CLOUD_MATRIX_CONFIGURATION_ID" value="-1" />, + <option name="SELECTED_CLOUD_MATRIX_PROJECT_ID" value="" />, + <option name="DEBUGGER_TYPE"
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue value = new XAxisValue(i, mMonths[i % 12]);, + xVals.add(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals =
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, + AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, + AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, + leftAxis.setValueFormatter(new MyAxisValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, + AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, + leftAxis.setValueFormatter(new MyAxisValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, + private class CustomFormatter implements ValueFormatter, AxisValueFormatter {, + public String getFormattedValue(float value, AxisBase axis) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, + AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, + leftAxis.setValueFormatter(new MyAxisValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, + private
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java, + * sets the size of the label text in pixels min = 6f, max = 24f, default, + * @param size, + * returns the text size that is currently set for the labels, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java, + * sets the size of the label text in pixels min = 6f, max = 24f, default, + * @param size, + * returns the text size that is currently set for the labels, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + spline.lineTo(dataSet.getEntryForIndex(bounds.min + bounds.range).getX(), fillMin);, + spline.lineTo(dataSet.getEntryForIndex(bounds.min).getX(), fillMin);]
[+++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java, +public class HorizontalBarChart extends BarChart, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java, +public class HorizontalBarChart extends BarChart, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.data.Entry;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.data.Entry;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +// @Override, +// protected float[] getMarkerPosition(Highlight high) {, +// return new float[] { high.getXPx(), high.getYPx() };, +//, +// int dataSetIndex = highlight.getDataSetIndex();, +// float xPos = e.getX();, +// float yPos = e.getY() * mAnimator.getPhaseY();, +//, +// // position of the marker depends on selected value index and value, +// float[] pts = new float[]{, +// xPos, yPos, +// };, +//, +// getTransformer(mData.getDataSetByIndex(dataSetIndex).getAxisDependency()), +// .pointValuesToPixel(pts);, +//, +// return pts;, +// }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.data.Entry;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +// @Override, +// protected float[] getMarkerPosition(Highlight high) {, +// return new float[] {
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +,
[+++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:0.12.+', +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++
[+++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-2.jar, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-2.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-2.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, + Log.i("Fling", "Chart flinged. VeloX: " + velocityX + ", VeloY: " + velocityY);]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, + versionCode 27, + versionName '1.7.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, + versionCode 27, + versionName '1.7.0', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, + versionCode 27, + versionName '1.7.0', +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, + versionCode 27, + versionName '1.7.0', +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.setDrawValueAboveBar(true);, +, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, + versionCode 27, + versionName '1.7.0',
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MonthXAxisFormatter;, + xl.setValueFormatter(new MonthXAxisFormatter());, + set2.setScatterShapeHoleRadius(3f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MonthXAxisFormatter;, + xl.setValueFormatter(new MonthXAxisFormatter());, + set2.setScatterShapeHoleRadius(3f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java, +package com.xxmassdeveloper.mpchartexample.custom;, +, +import com.github.mikephil.charting.formatter.XAxisValueFormatter;, +import com.github.mikephil.charting.utils.ViewPortHandler;, +, +import java.text.DecimalFormat;, +, +/**, + * Created by Philipp Jahoda on 14/09/15., + */, +public class MonthXAxisFormatter implements XAxisValueFormatter {, +, + protected String[] mMonths = new String[] {, + "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec", + };, +, + public MonthXAxisFormatter() {, + // maybe do something here or provide parameters in constructor, +, + }, +, + @Override, + public String getXValue(float xValue,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, + ((CombinedChartRenderer)mRenderer).createRenderers();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, + ((CombinedChartRenderer)mRenderer).createRenderers();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java, +import com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider;, + createRenderers();, + public void createRenderers() {, + CombinedChart chart = (CombinedChart)mChart.get();, + if (chart == null), + return;, +, + mRenderers.add(new BarChartRenderer(chart, mAnimator, mViewPortHandler));, + mRenderers.add(new BubbleChartRenderer(chart, mAnimator, mViewPortHandler));, + mRenderers.add(new LineChartRenderer(chart, mAnimator, mViewPortHandler));, + mRenderers.add(new CandleStickChartRenderer(chart, mAnimator, mViewPortHandler));, + mRenderers.add(new ScatterChartRenderer(chart, mAnimator, mViewPortHandler));]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + //return Math.abs(x1 - x2);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + //return Math.abs(x1 - x2);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + if (mChart.isDrawHoleEnabled() && mBitmapCanvas != null) {]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + Log.i("Gesture", "START, x: " + me.getX() + ", y: " + me.getY());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + Log.i("Gesture", "START, x: " + me.getX() + ", y: " + me.getY());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + Log.i("Gesture", "START, x: " + me.getX() + ", y: " + me.getY());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.jobs.ZoomJob;, + * Zooms in or out by the given scale factor., + * x and y are the values to or which to zoom from (the values of the zoom center)., +
[+++ b/.settings/gradle/org.springsource.ide.eclipse.gradle.core.prefs, +#org.springsource.ide.eclipse.gradle.core.preferences.GradleProjectPreferences, +#Mon Jan 18 23:02:46 CET 2016, +build.family.org.gradle.tooling.model.eclipse.HierarchicalEclipseProject=;MPChartExample;MPChartLib;, +org.springsource.ide.eclipse.gradle.rootprojectloc=, +++ b/.settings/gradle/org.springsource.ide.eclipse.gradle.core.prefs, +#org.springsource.ide.eclipse.gradle.core.preferences.GradleProjectPreferences, +#Mon Jan 18 23:02:46 CET 2016, +build.family.org.gradle.tooling.model.eclipse.HierarchicalEclipseProject=;MPChartExample;MPChartLib;, +org.springsource.ide.eclipse.gradle.rootprojectloc=, +++ b/MPChartExample/.settings/gradle/org.springsource.ide.eclipse.gradle.core.prefs, +#org.springsource.ide.eclipse.gradle.core.preferences.GradleProjectPreferences, +#Mon Jan 18 23:02:46 CET 2016, +org.springsource.ide.eclipse.gradle.rootprojectloc=.., +++ b/.settings/gradle/org.springsource.ide.eclipse.gradle.core.prefs, +#org.springsource.ide.eclipse.gradle.core.preferences.GradleProjectPreferences, +#Mon Jan 18 23:02:46 CET 2016, +build.family.org.gradle.tooling.model.eclipse.HierarchicalEclipseProject=;MPChartExample;MPChartLib;, +org.springsource.ide.eclipse.gradle.rootprojectloc=, +++ b/MPChartExample/.settings/gradle/org.springsource.ide.eclipse.gradle.core.prefs, +#org.springsource.ide.eclipse.gradle.core.preferences.GradleProjectPreferences, +#Mon Jan 18 23:02:46 CET 2016, +org.springsource.ide.eclipse.gradle.rootprojectloc=.., +++ b/MPChartExample/project.properties, +target=android-23, +++ b/.settings/gradle/org.springsource.ide.eclipse.gradle.core.prefs, +#org.springsource.ide.eclipse.gradle.core.preferences.GradleProjectPreferences, +#Mon Jan 18 23:02:46 CET 2016, +build.family.org.gradle.tooling.model.eclipse.HierarchicalEclipseProject=;MPChartExample;MPChartLib;, +org.springsource.ide.eclipse.gradle.rootprojectloc=, +++ b/MPChartExample/.settings/gradle/org.springsource.ide.eclipse.gradle.core.prefs, +#org.springsource.ide.eclipse.gradle.core.preferences.GradleProjectPreferences, +#Mon Jan 18 23:02:46 CET 2016, +org.springsource.ide.eclipse.gradle.rootprojectloc=.., +++ b/MPChartExample/project.properties, +target=android-23, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java, + this.stackValues = new RealmList<RealmFloat>();, +++ b/.settings/gradle/org.springsource.ide.eclipse.gradle.core.prefs, +#org.springsource.ide.eclipse.gradle.core.preferences.GradleProjectPreferences, +#Mon Jan 18 23:02:46 CET 2016, +build.family.org.gradle.tooling.model.eclipse.HierarchicalEclipseProject=;MPChartExample;MPChartLib;, +org.springsource.ide.eclipse.gradle.rootprojectloc=, +++
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + if (sweepAngleOuter >= 360.f && sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {, + if (sweepAngleOuter >= 360.f && sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {, + if (sweepAngleOuter % 360f > Utils.FLOAT_EPSILON) {, + if (sweepAngleOuter >= 360.f && sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {, + if (sweepAngleOuter >= 360.f && sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {, + if (sweepAngleOuter % 360f > Utils.FLOAT_EPSILON) {]
[+++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/OnDrawLineChartTouchListener.java, +package com.github.mikephil.charting.interfaces;, +, +import android.view.GestureDetector.SimpleOnGestureListener;, +import android.view.MotionEvent;, +import android.view.View;, +import android.view.View.OnTouchListener;, +, +public class OnDrawLineChartTouchListener extends SimpleOnGestureListener implements OnTouchListener {, +, + @Override, + public boolean onTouch(View v, MotionEvent event) {, + return false;, + }, +, +}, +++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/OnDrawLineChartTouchListener.java, +package com.github.mikephil.charting.interfaces;, +, +import android.view.GestureDetector.SimpleOnGestureListener;, +import android.view.MotionEvent;, +import android.view.View;, +import android.view.View.OnTouchListener;, +, +public class OnDrawLineChartTouchListener extends SimpleOnGestureListener implements OnTouchListener {, +, + @Override, + public boolean onTouch(View v, MotionEvent event) {, + return false;, + }, +, +}, +++ /dev/null]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + , + /**, + * Enables the grid line to be drawn in dashed mode, e.g. like this, + * "- - - - - -". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF., + * Keep in mind that hardware acceleration boosts performance., + *, + * @param effect the DashPathEffect, + */, + public void setGridDashedLine(DashPathEffect effect) {, + mGridDashPathEffect = effect;, + }]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setDrawGridLines(false);, + mChart.setFitBars(true);, + mChart.setFitBars(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setDrawGridLines(false);, + mChart.setFitBars(true);, + mChart.setFitBars(true);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java, + float[] positions = new float[mXAxis.mEntryCount * 2];, + for (int i = 0; i < positions.length; i += 2) {, + positions[i + 1] = mXAxis.mEntries[i / 2];, + }, +, + mTrans.pointValuesToPixel(positions);, +, + for (int i = 0; i < positions.length; i += 2) {, +, + float y = positions[i + 1];, +, + if (mViewPortHandler.isInBoundsY(y)) {, +, + c.drawLine(mViewPortHandler.contentLeft(), y,, + mViewPortHandler.contentRight(), y, mGridPaint);, + }, + }]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java, + protected float mTextSize = 10f;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java, + protected float mTextSize = 10f;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + c.drawBitmap(circleBitmap, mCirclesBuffer[0] - circleRadius, mCirclesBuffer[1] - circleRadius, null);]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, + <activity android:name=".realm.RealmWikiExample"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, + <activity android:name=".realm.RealmWikiExample"></activity>, +++ b/MPChartExample/build.gradle, +apply plugin: 'realm-android', +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="HorizontalBarChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="HorizontalBarChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.HorizontalBarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, + , + <SeekBar, + android:id="@+id/seekBar2", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_toLeftOf="@+id/tvYMax", + android:layout_marginRight="5dp", + android:max="200", + android:paddingBottom="12dp" />, +, + <SeekBar, + android:id="@+id/seekBar1", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_above="@+id/seekBar2", + android:layout_margin="8dp", + android:layout_marginBottom="35dp", + android:layout_toLeftOf="@+id/tvXMax", + android:layout_marginRight="5dp", + android:max="500", + android:paddingBottom="12dp" />, +, + <TextView, + android:id="@+id/tvXMax", + android:layout_width="50dp", + android:layout_height="wrap_content", + android:layout_alignBottom="@+id/seekBar1", + android:layout_alignParentRight="true", + android:text="500", +
[+++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_margin="4dp", + android:layout_margin="4dp", + android:layout_margin="4dp", + android:layout_margin="4dp", + <Button, + android:id="@+id/button5", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="View on GitHub" />, +, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_margin="4dp", + android:layout_margin="4dp", + android:layout_margin="4dp", + android:layout_margin="4dp", + <Button, + android:id="@+id/button5", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="View on GitHub" />, +, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +import android.graphics.Color;, +import android.view.View;, + TextView textView = new TextView(this); , + textView.setVisibility(View.VISIBLE);, + textView.setBackgroundColor(Color.WHITE);, + textView.setPadding(15, 15, 15, 15);, + textView.setText("Marker View");, +, + mChart.setDrawMarkerView(true);, + mChart.setMarkerView(textView);, + , +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_margin="4dp", + android:layout_margin="4dp", + android:layout_margin="4dp", + android:layout_margin="4dp", + <Button, + android:id="@+id/button5", +
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.setDrawBarShadow(true);, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.setDrawBarShadow(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + data.setValueTextSize(9f);, + data.setDrawValues(false);, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.setDrawBarShadow(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + data.setValueTextSize(9f);, + data.setDrawValues(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setGridLineWidth(0.3f);, + yl.setGridLineWidth(0.3f);, + yr.setDrawGridLines(false);, + PointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(dataSetIndex), + .getAxisDependency());, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.setDrawBarShadow(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + data.setValueTextSize(9f);, + data.setDrawValues(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setGridLineWidth(0.3f);, + yl.setGridLineWidth(0.3f);, + yr.setDrawGridLines(false);, + PointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(dataSetIndex), + .getAxisDependency());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + data.setValueTextSize(10f);, +++ /dev/null,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + // don't include DataSets that cannot be highlighted, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + // don't include DataSets that cannot be highlighted, +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java, +, + closest = set.getEntryForXValue(4f, DataSet.Rounding.CLOSEST);, + assertEquals(4, closest.getX(), 0.01f);, + assertEquals(60, closest.getY(), 0.01f);, +, + List<Entry> entries = set.getEntriesForXValue(4f);, + assertEquals(2, entries.size());, + assertEquals(60, entries.get(0).getY(), 0.01f);, + assertEquals(70, entries.get(1).getY(), 0.01f);, +, + entries = set.getEntriesForXValue(3.5f);, + assertEquals(0, entries.size());, +, + entries = set.getEntriesForXValue(2f);, + assertEquals(1, entries.size());, + assertEquals(30, entries.get(0).getY(), 0.01f);]
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ /dev/null, +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="500", +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ /dev/null, +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + tvX.setText("" + (mSeekBarX.getProgress() + 1));, + float mult = mSeekBarY.getProgress() * 10000000f;, + data.setValueFormatter(new LargeValueFormatter());, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ /dev/null, +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + tvX.setText("" + (mSeekBarX.getProgress() + 1));, + float mult = mSeekBarY.getProgress() * 10000000f;,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + protected void calcMinMax(BarEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + protected void calcMinMax(BarEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, + protected void calcMinMax(BubbleEntry e) {, + super.calcMinMax(e);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + protected void calcMinMax(BarEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, + protected void calcMinMax(BubbleEntry e) {, + super.calcMinMax(e);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, + * <p/>, + protected void calcMinMax(CandleEntry e)
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + //mChart.highlightValue(9.7f, 1, false);, + float val = (float) (Math.random() * mult) + 50;, + for (int i = 0; i < count-1; i++) {, + float val = (float) (Math.random() * mult) + 450;, +// if(i == 10) {, +// yVals2.add(new Entry(i, val + 50));, +// }, + ArrayList<Entry> yVals3 = new ArrayList<Entry>();, +, + for (int i = 0; i < count; i++) {, + float mult = range;, + float val = (float) (Math.random() * mult) + 500;, + yVals3.add(new Entry(i, val));, + }, +, + LineDataSet set1, set2, set3;, + set3 = (LineDataSet)
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, + protected DrawOrder[] mDrawOrder;, + // Default values are not ready here yet, + mDrawOrder = new DrawOrder[]{, + DrawOrder.BAR, DrawOrder.BUBBLE, DrawOrder.LINE, DrawOrder.CANDLE, DrawOrder.SCATTER, + };, +, +, + mRenderer = new CombinedChartRenderer(this, mAnimator, mViewPortHandler);]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="13", + android:versionName="1.3.1" >, + <activity android:name="CandleStickChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="13", + android:versionName="1.3.1" >, + <activity android:name="CandleStickChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 13, + versionName '1.3.1', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="13", + android:versionName="1.3.1" >, + <activity android:name="CandleStickChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 13, + versionName '1.3.1', +++ b/MPChartExample/res/layout/activity_candlechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.CandleStickChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, + , + <SeekBar, + android:id="@+id/seekBar2", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_toLeftOf="@+id/tvYMax", + android:layout_marginRight="5dp", + android:max="200", + android:paddingBottom="12dp" />, +, + <SeekBar, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + mChart.moveViewToX(data.getEntryCount());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + mChart.moveViewToX(data.getEntryCount());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + mChart.moveViewToX(data.getEntryCount());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java, + * indicates if the bottom y-label entry is drawn or not, + */, + private boolean mDrawBottomYLabelEntry = true;, +, + /**, + * returns true if drawing the bottom y-axis label entry is enabled, + *, + * @return, + */, + public boolean isDrawBottomYLabelEntryEnabled() {, + return mDrawBottomYLabelEntry;, + }, +, + /**, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java, + * indicates if the bottom y-label entry is drawn or not, + */, + private boolean mDrawBottomYLabelEntry = true;, +, + /**, + * returns true if drawing the bottom y-axis label entry is enabled, + *, +
[+++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + targetSdkVersion 21, + versionCode 33, + versionName '2.0.1', +++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + targetSdkVersion 21, + versionCode 33, + versionName '2.0.1', +++ b/MPChartLib/pom.xml, +++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + targetSdkVersion 21, + versionCode 33, + versionName '2.0.1', +++ b/MPChartLib/pom.xml, +++ b/README.md, +A simple charting library for Android, supporting line-, bar-, scatter-, candlestick-, pie- and radarcharts (spider web), as well as scaling, dragging, selecting and animations. **Supporting Android 2.2 (API level 8)** and upwards., + - Combined-Charts (line-, bar-, scatter-, candle-data), +Documentation, +For a **detailed documentation**, please have a look at the [**Wiki**](https://github.com/PhilJay/MPAndroidChart/wiki).,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.1.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.1.1" >, +++ b/MPChartExample/build.gradle, + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1', +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.1.1" >, +++ b/MPChartExample/build.gradle, + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.1.1" >, +++ b/MPChartExample/build.gradle, + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.1.1" >, +++ b/MPChartExample/build.gradle, + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.1.1" >, +++ b/MPChartExample/build.gradle, + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java, +import com.github.mikephil.charting.highlight.Highlight;, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.1.1"
[+++ b/MPChartExample/build.gradle, + implementation 'com.android.support:appcompat-v7:27.1.1', +++ b/MPChartExample/build.gradle, + implementation 'com.android.support:appcompat-v7:27.1.1', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, + mChart.animateY(1400, Easing.EaseInOutQuad);, +++ b/MPChartExample/build.gradle, + implementation 'com.android.support:appcompat-v7:27.1.1', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, + mChart.animateY(1400, Easing.EaseInOutQuad);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.animateY(3000, Easing.EaseInCubic);, +++ b/MPChartExample/build.gradle, + implementation 'com.android.support:appcompat-v7:27.1.1', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, + mChart.animateY(1400, Easing.EaseInOutQuad);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.animateY(3000, Easing.EaseInCubic);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mChart.animateY(1400, Easing.EaseInOutQuad);, + mChart.spin(1000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EaseInCubic);, +++ b/MPChartExample/build.gradle, + implementation 'com.android.support:appcompat-v7:27.1.1', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, + mChart.animateY(1400, Easing.EaseInOutQuad);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.animateY(3000, Easing.EaseInCubic);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mChart.animateY(1400, Easing.EaseInOutQuad);, + mChart.spin(1000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EaseInCubic);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + mChart.animateY(1400, Easing.EaseInOutQuad);, +++ b/MPChartExample/build.gradle, + implementation 'com.android.support:appcompat-v7:27.1.1', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, + mChart.animateY(1400, Easing.EaseInOutQuad);,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/DefaultValueFormatter.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/DefaultValueFormatter.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/StackedValueFormatter.java, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/DefaultValueFormatter.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/StackedValueFormatter.java, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java, + //result.resetAnimator();]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + FSize.recycleInstance(labelSize);, + MPPointF.recycleInstance(pointF);]
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:padding="10dp", + android:orientation="vertical" >, + android:text="MultipleCharts" />, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:padding="10dp", + android:orientation="vertical" >, + android:text="MultipleCharts" />, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + ArrayList<Float> yVals = new ArrayList<Float>();, + yVals.add(val);, + mChart.setData(xVals, yVals);, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:padding="10dp", + android:orientation="vertical" >, + android:text="MultipleCharts" />, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + ArrayList<Float> yVals = new ArrayList<Float>();, + yVals.add(val);, + mChart.setData(xVals, yVals);, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + mChart.setLineWidth(4f);, + mChart.setCircleSize(4f);, + ArrayList<Float>
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, + this.mTextSize = Utils.convertDpToPixel(10f);, + float formToTextSpace = Utils.convertDpToPixel(mFormToTextSpace);, + final float formSize = Utils.convertDpToPixel(, + Float.isNaN(entry.formSize), + ? mFormSize : entry.formSize);, + return max + maxFormSize + formToTextSpace;, + mFormSize = size;, + mFormLineWidth = size;, + mXEntrySpace = space;, + mYEntrySpace = space;, + this.mFormToTextSpace = space;, + float defaultFormSize = Utils.convertDpToPixel(mFormSize);, + float stackSpace = Utils.convertDpToPixel(mStackSpace);, + float formToTextSpace = Utils.convertDpToPixel(mFormToTextSpace);, + float xEntrySpace = Utils.convertDpToPixel(mXEntrySpace);, + float yEntrySpace = Utils.convertDpToPixel(mYEntrySpace);, + float formSize = Float.isNaN(e.formSize), + ? defaultFormSize, + : Utils.convertDpToPixel(e.formSize);, + float formSize = Float.isNaN(e.formSize), + ? defaultFormSize, + : Utils.convertDpToPixel(e.formSize);, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + Runnable job = ZoomJob.getInstance(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);, + Runnable job = AnimatedZoomJob.getInstance(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis, +, + Runnable job = MoveViewJob.getInstance(mViewPortHandler, xValue, 0f,, + Runnable job = MoveViewJob.getInstance(mViewPortHandler, xValue, yValue + yInView / 2f,, + Runnable job = AnimatedMoveViewJob.getInstance(mViewPortHandler, xValue, yValue + yInView / 2f,, + Runnable job = MoveViewJob.getInstance(mViewPortHandler, 0f, yValue + valsInView / 2f,, + Runnable job = MoveViewJob.getInstance(mViewPortHandler,, + Runnable job = AnimatedMoveViewJob.getInstance(mViewPortHandler,, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + Runnable job = ZoomJob.getInstance(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);, + Runnable job = AnimatedZoomJob.getInstance(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis, +, +
[+++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +1.0#0, +0.9999875000266004#1, +0.9999500004189004#2, +0.9998875021143881#3, +0.9998000066755178#4, +0.9996875162663903#5, +0.9995500337132301#6, +0.9993875625182742#7, +0.9992001066967312#8, +0.9989876709349848#9, +0.9987502605439158#10, +0.9984878814587691#11, +0.9982005402390055#12, +0.997888243826164#13, +0.997551000232435#14, +0.9971888178888995#15, +0.9968017058501071#16, +0.996389673793849#17, +0.995952732020916#18, +0.9954908914548417#19, +0.9950041636416285#20, +0.9944925607494591#21, +0.9939560955683934#22, +0.9933947815100469#23, +0.9928086326072573#24, +0.9921976635137321#25, +0.991561890469533#26, +0.9909013284769972#27, +0.9902159940501084#28, +0.9895059043221591#29, +0.9887710770453216#30, +0.9880115305902044#31, +0.9872272839453933#32, +0.986418356716976#33, +0.9855847691280525#34, +0.9847265420182294#35, +0.9838436968430989#36, +0.9829362556737022#37, +0.9820042411959782#38, +0.9810476767101955#39, +0.9800665861303712#40, +0.9790609939836716#41, +0.9780309254098003#42, +0.9769764061603686#43, +0.9758974625982528#44, +0.9747941216969342#45, +0.9736664110398252#46, +0.9725143588195798#47, +0.9713379938373885#48, +0.9701373455022586#49, +0.9689124438302785#50, +0.9676633194438681#51, +0.9663900035710121#52, +0.9650925280444805#53, +0.963770925301032#54, +0.9624252283806033#55, +0.9610554709254832#56, +0.9596616871794713#57, +0.9582439119870223#58, +0.9568021807923746#59, +0.955336529638664#60, +0.9538469951670234#61, +0.9523336146156658#62, +0.9507964258189542#63, +0.9492354672064549#64, +0.9476507778019777#65, +0.9460423972225994#66, +0.9444103656776743#67, +0.942754723967828#68, +0.941075513483938#69, +0.9393727762060992#70, +0.9376465547025732#71, +0.9358968921287257#72, +0.9341238322259465#73, +0.9323274193205561#74, +0.930507698322698#75, +0.9286647147252156#76, +0.926798514602515#77, +0.924909144609413#78, +0.9229966519799709#79, +0.9210610845263139#80, +0.9191024906374349#81, +0.9171209192779859#82, +0.9151164199870532#83, +0.9130890428769189#84, +0.9110388386318088#85, +0.9089658585066243#86, +0.9068701543256616#87, +0.9047517784813164#88, +0.9026107839327733#89, +0.9004472242046825#90, +0.8982611533858212#91, +0.8960526261277421#92, +0.8938216976434059#93, +0.8915684237058024#94,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java]
[+++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CircleBuffer.java, +, +package com.github.mikephil.charting.buffer;, +, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;, +, +public class CircleBuffer extends AbstractBuffer<ILineDataSet> {, +, + public CircleBuffer(int size) {, + super(size);, + }, +, + protected void addCircle(float x, float y) {, + buffer[index++] = x;, + buffer[index++] = y;, + }, +, + @Override, + public void feed(ILineDataSet data) {, +, + int size = (int)Math.ceil((mTo - mFrom) * phaseX + mFrom);, +, + for (int i = mFrom; i < size; i++) {, +, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:targetSdkVersion="22" />, +++ b/MPChartExample/AndroidManifest.xml, + android:targetSdkVersion="22" />, +++ b/MPChartExample/project.properties, +target=android-22, +++ b/MPChartExample/AndroidManifest.xml, + android:targetSdkVersion="22" />, +++ b/MPChartExample/project.properties, +target=android-22, +++ b/MPChartLib/project.properties, +target=android-22, +++ b/MPChartExample/AndroidManifest.xml, + android:targetSdkVersion="22" />, +++ b/MPChartExample/project.properties, +target=android-22, +++ b/MPChartLib/project.properties, +target=android-22, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + long starttime = System.currentTimeMillis();, + calcModulus();, + if (mViewPortHandler == null), + return 1f;, + else, + if (mViewPortHandler == null), + return 1f;, + else, +++ b/MPChartExample/AndroidManifest.xml, + android:targetSdkVersion="22" />, +++ b/MPChartExample/project.properties, +target=android-22, +++ b/MPChartLib/project.properties, +target=android-22, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + long starttime = System.currentTimeMillis();, + calcModulus();, + if (mViewPortHandler == null), + return 1f;, + else, + if (mViewPortHandler == null),
[+++ b/MPChartExample/res/menu/bar.xml, + <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, + <item android:id="@+id/actionToggleHighlightArrow" android:title="Toggle Highlight Arrow"></item>, +++ b/MPChartExample/res/menu/bar.xml, + <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, + <item android:id="@+id/actionToggleHighlightArrow" android:title="Toggle Highlight Arrow"></item>, +++ b/MPChartExample/res/menu/line.xml, + <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, +++ b/MPChartExample/res/menu/bar.xml, + <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, + <item android:id="@+id/actionToggleHighlightArrow" android:title="Toggle Highlight Arrow"></item>, +++ b/MPChartExample/res/menu/line.xml, + <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + case R.id.actionToggleHighlight: {, + if (mChart.isHighlightEnabled()), + mChart.setHighlightEnabled(false);, + else, + mChart.setHighlightEnabled(true);, + mChart.invalidate();, + break;, + }, + case R.id.actionToggleHighlightArrow: {, + if (mChart.isDrawHighlightArrowEnabled()), + mChart.setDrawHighlightArrow(false);, + else, + mChart.setDrawHighlightArrow(true);, + mChart.invalidate();, + break;, + }, +++ b/MPChartExample/res/menu/bar.xml, + <item android:id="@+id/actionToggleHighlight" android:title="Toggle
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + * When enabled, the borders rectangle will be rendered., + * If this is enabled, there is no point drawing the axis-lines of x- and y-axis., + * When enabled, the borders rectangle will be rendered., + * If this is enabled, there is no point drawing the axis-lines of x- and y-axis., + *, + * @return, + */, + public boolean isDrawBordersEnabled() {, + return mDrawBorders;, + }, +, + /**]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_linechart_time.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1"
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_piechart_half.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.PieChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_piechart_half.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.PieChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.graphics.Point;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.text.SpannableString;, +import android.text.style.ForegroundColorSpan;, +import android.text.style.RelativeSizeSpan;, +import android.text.style.StyleSpan;, +import android.view.Display;, +import android.view.WindowManager;, +import android.widget.RelativeLayout;, +, +import com.github.mikephil.charting.animation.Easing;, +import com.github.mikephil.charting.charts.PieChart;, +import com.github.mikephil.charting.components.Legend;, +import
[+++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_width="wrap_content", + android:text="", +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_width="wrap_content", + android:text="", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_width="wrap_content", + android:text="", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.view.View.MeasureSpec;, + mMarkerView.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),, + MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));, + mMarkerView.layout(0, 0, mMarkerView.getMeasuredWidth(), mMarkerView.getMeasuredHeight());]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue value = new XAxisValue(i, mMonths[i % 12]);, + xVals.add(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals =
[+++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="9", + android:targetSdkVersion="19" />, +++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="9", + android:targetSdkVersion="19" />, +++ b/MPChartLib/AndroidManifest.xml, + android:targetSdkVersion="19" />]
[+++ b/MPChartExample/res/menu/radar.xml, + </item>, + <item, + android:id="@+id/actionToggleSpin", + android:title="Spin Animation">, +++ b/MPChartExample/res/menu/radar.xml, + </item>, + <item, + android:id="@+id/actionToggleSpin", + android:title="Spin Animation">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +// mChart.spin(2000, 0, 360);, +++ b/MPChartExample/res/menu/radar.xml, + </item>, + <item, + android:id="@+id/actionToggleSpin", + android:title="Spin Animation">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +// mChart.spin(2000, 0, 360);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, + // create a custom MarkerView (extend MarkerView) and specify the layout, + // to use for it, + MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);, +, + // define an offset to change the original position of the marker, + // (optional), + mv.setOffsets(-mv.getMeasuredWidth() / 2, -mv.getMeasuredHeight());, +, + // set the
[+++ b/MPChartExample/res/layout/activity_linechart_time.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, +, + <SeekBar, + android:id="@+id/seekBar1", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_marginBottom="8dp", + android:max="1500", + android:layout_alignParentBottom="true", + android:layout_marginLeft="8dp", + android:layout_marginTop="8dp", + android:layout_toLeftOf="@+id/tvXMax"/>, +, + <TextView, + android:id="@+id/tvXMax", + android:layout_width="50dp", + android:layout_height="wrap_content", + android:layout_alignParentRight="true", + android:text="500", + android:layout_marginBottom="15dp", + android:layout_marginRight="10dp", + android:gravity="right", + android:layout_alignParentBottom="true", + android:textAppearance="?android:attr/textAppearanceMedium" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/layout/activity_linechart_time.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, +, + <SeekBar, + android:id="@+id/seekBar1", +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + if ((Math.abs(dataSet.getEntryForIndex(j).getY()) > Utils.FLOAT_EPSILON)) {, + if ((Math.abs(e.getY()) > Utils.FLOAT_EPSILON)) {, + if (sweepAngleOuter % 360f < Utils.FLOAT_EPSILON) {, + if ((Math.abs(set.getEntryForIndex(j).getY()) > Utils.FLOAT_EPSILON)) {, + if ((Math.abs(e.getY()) > Utils.FLOAT_EPSILON)) {]
[+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, + protected ValueFormatter mValueFormatter;, +++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, + protected ValueFormatter mValueFormatter;, +++ b/Projects_using_MPAndroidChart.txt, +, +Speaker Recognition, +https://github.com/C-piace-il-C/Speaker_Recognition]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, + XAxis xAxis = mChart.getXAxis();, + xAxis.setPosition(XAxisPosition.BOTTOM);, + xAxis.setSpaceBetweenLabels(2);, + YAxis leftAxis = mChart.getAxisLeft(); , +// leftAxis.setEnabled(false);, + leftAxis.setLabelCount(7);, + leftAxis.setDrawGridLines(false);, + leftAxis.setDrawAxisLine(false);, + leftAxis.setStartAtZero(true);, + YAxis rightAxis = mChart.getAxisRight();, + rightAxis.setEnabled(false);, +// rightAxis.setStartAtZero(false);, + set1.setAxisDependency(AxisDependency.LEFT);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, + XAxis xAxis = mChart.getXAxis();, + xAxis.setPosition(XAxisPosition.BOTTOM);, + xAxis.setSpaceBetweenLabels(2);, + YAxis leftAxis = mChart.getAxisLeft(); , +// leftAxis.setEnabled(false);, + leftAxis.setLabelCount(7);, + leftAxis.setDrawGridLines(false);, + leftAxis.setDrawAxisLine(false);, + leftAxis.setStartAtZero(true);, + YAxis rightAxis = mChart.getAxisRight();, + rightAxis.setEnabled(false);, +// rightAxis.setStartAtZero(false);,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java, + float bottom = x - barWidthHalf;, + float top = x + barWidthHalf;, + float bottom = x - barWidthHalf;, + float top = x + barWidthHalf;]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="11", + android:versionName="1.2.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="11", + android:versionName="1.2.1" >, +++ b/MPChartExample/build.gradle, + versionCode 11, + versionName '1.2.1', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="11", + android:versionName="1.2.1" >, +++ b/MPChartExample/build.gradle, + versionCode 11, + versionName '1.2.1', +++ b/MPChartExample/res/menu/bar.xml, +, + <item, + android:id="@+id/actionToggleValues", + android:title="Toggle Values">, + </item>, + <item, + android:id="@+id/actionToggleHighlight", + android:title="Toggle Highlight">, + </item>, + <item, + android:id="@+id/actionToggleHighlightArrow", + android:title="Toggle Highlight Arrow">, + </item>, + <item, + android:id="@+id/actionToggle3D", + android:title="Toggle 3D">, + </item>, + <item, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item, + android:id="@+id/animateXY",
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, + case 8:, + case 9:, + case 10:, + case 11:, + case 12:, + case 13:, + case 14:, + case 15:, + case 16:, + case 17:, + case 18:, + case 19:, + case 20:, + case 21:, + case 22:, + case 23:, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, + case 8:, + case 9:, + case 10:, + case
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + * @param count the number of y-axis labels that should be displayed, + * @param count the number of y-axis labels that should be displayed]
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.LineChart, + <com.github.mikephil.charting.BarChart, + <com.github.mikephil.charting.PieChart, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.LineChart, + <com.github.mikephil.charting.BarChart, + <com.github.mikephil.charting.PieChart, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_piechart.xml, + <com.github.mikephil.charting.PieChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.LineChart, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public void setColors(int... colors) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public void setColors(int... colors) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, + public void setCircleColors(int... colors) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public void setColors(int... colors) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, + public void setCircleColors(int... colors) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public void setColors(int... colors) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, + public void setCircleColors(int... colors) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java, +, +, +, +, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public void setColors(int... colors) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, + public void setCircleColors(int... colors) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, + for (IDataSet set : mChart.getData().getDataSets()), + ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local',
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="50", + android:versionName="2.2.4" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="50", + android:versionName="2.2.4" >, +++ b/MPChartExample/build.gradle, + versionCode 50, + versionName '2.2.4']
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, + <activity android:name="RadarChartActivitry"></activity>, + <activity android:name="LineChartActivityColored"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, + <activity android:name="RadarChartActivitry"></activity>, + <activity android:name="LineChartActivityColored"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 16, + versionName '1.4.1', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, + <activity android:name="RadarChartActivitry"></activity>, + <activity android:name="LineChartActivityColored"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 16, + versionName '1.4.1', +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +<?xml version="1.0" encoding="utf-8"?>, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/white", + android:orientation="vertical" >, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_weight="1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart2", + android:layout_weight="1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart3", + android:layout_weight="1", +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + set1.setValues(yVals1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + set1.setValues(yVals1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + set1.setValues(yVals1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + set1.setValues(yVals1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + set1.setValues(yVals1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, + xl.setValueFormatter(new AxisValueFormatter() {, + @Override, + public String getFormattedValue(float value, AxisBase axis) {, + return String.valueOf((int) value);, + }, +, + @Override, + public int getDecimalDigits() {, + return 0;, + }, + });, + float barSpace = 0.02f; // x3, + float barWidth = 0.3f; // x3, + // (0.3 + 0.02) * 3 + 0.04 = 1.00, + set1.setValues(yVals1);, + set2.setValues(yVals2);, + set3.setValues(yVals3);, + data.setValueFormatter(new LargeValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + set1.setValues(yVals1);,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + //dataSet.setUsingSliceColorAsValueLineColor(true);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + //dataSet.setUsingSliceColorAsValueLineColor(true);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + private boolean mUsingSliceColorAsValueLineColor = false;, + /**, + * When valuePosition is OutsideSlice, use slice colors as line color if true, + * */, + @Override, + public boolean isUsingSliceColorAsValueLineColor() {, + return mUsingSliceColorAsValueLineColor;, + }, +, + public void setUsingSliceColorAsValueLineColor(boolean usingSliceColorAsValueLineColor) {, + this.mUsingSliceColorAsValueLineColor = usingSliceColorAsValueLineColor;, + }, +, + public void setValueLineColor(int valueLineColor) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + //dataSet.setUsingSliceColorAsValueLineColor(true);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + private boolean mUsingSliceColorAsValueLineColor = false;, + /**, + * When valuePosition is OutsideSlice, use slice colors as line color if true, +
[+++ b/MPChartExample/build.gradle, + //compile project(':MPChartLib-Realm') // clone "https://github.com/PhilJay/MPAndroidChart-Realm" to get this or uncomment the gradle dependency below:, + compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.0@aar', +, + compile project(':MPChartLib'), +++ b/MPChartExample/build.gradle, + //compile project(':MPChartLib-Realm') // clone "https://github.com/PhilJay/MPAndroidChart-Realm" to get this or uncomment the gradle dependency below:, + compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.0@aar', +, + compile project(':MPChartLib'), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Sets the last highlighted value for the touchlistener., + *, + * @param highs, + */, + protected void setLastHighlighted(Highlight[] highs) {, +, + if (highs == null || highs.length <= 0 || highs[0] == null) {, + mChartTouchListener.setLastHighlighted(null);, + } else {, + mChartTouchListener.setLastHighlighted(highs[0]);, + },
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="23", + android:versionName="1.6.3" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="23", + android:versionName="1.6.3" >, +++ b/MPChartExample/build.gradle, + versionCode 23, + versionName '1.6.3', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="23", + android:versionName="1.6.3" >, +++ b/MPChartExample/build.gradle, + versionCode 23, + versionName '1.6.3', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="23", + android:versionName="1.6.3" >, +++ b/MPChartExample/build.gradle, + versionCode 23, + versionName '1.6.3', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + mChart.disableScroll();, +, + mChart.disableScroll();, +]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.setFitBars(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.setFitBars(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + holder.chart.setFitBars(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.setFitBars(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + holder.chart.setFitBars(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java, + public RealmDemoData(float xValue, float yValue) {, + public RealmDemoData(float xValue, float[] stackValues) {, + public RealmDemoData(float xValue, float high, float low, float open, float close) {, + public RealmDemoData(float xValue, float yValue, float bubbleSize) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.setFitBars(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + holder.chart.setFitBars(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java, + public RealmDemoData(float xValue, float yValue) {, + public RealmDemoData(float xValue, float[] stackValues) {, + public RealmDemoData(float xValue, float high, float low, float open, float close) {, + public RealmDemoData(float xValue,
[+++ b/MPChartExample/res/layout/activity_performance_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/white">, +++ b/MPChartExample/res/layout/activity_performance_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/white">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.setDrawGridBackground(false);, +++ b/MPChartExample/res/layout/activity_performance_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/white">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.setDrawGridBackground(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (Math.abs(mDecelerationVelocity.x) >= 0.01 || Math.abs(mDecelerationVelocity.y) >= 0.01), +++ b/MPChartExample/res/layout/activity_performance_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/white">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.setDrawGridBackground(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (Math.abs(mDecelerationVelocity.x) >= 0.01 || Math.abs(mDecelerationVelocity.y) >= 0.01), +++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java, +++ b/MPChartExample/res/layout/activity_performance_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/white">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.setDrawGridBackground(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (Math.abs(mDecelerationVelocity.x) >= 0.01 || Math.abs(mDecelerationVelocity.y) >= 0.01), +++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java, +++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java, + @SuppressWarnings("deprecation"), +, + Log.e("MPAndroidChart, Utils.init(...)", "PROVIDED CONTEXT OBJECT IS NULL");, +, + },
[+++ b/.gitignore, +generated/, +finalOutput/]
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.LineChart, + <com.github.mikephil.charting.BarChart, + <com.github.mikephil.charting.PieChart, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.LineChart, + <com.github.mikephil.charting.BarChart, + <com.github.mikephil.charting.PieChart, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_piechart.xml, + <com.github.mikephil.charting.PieChart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.LineChart, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + protected SelectionDetail getDetails(IDataSet set, int dataSetIndex, float xVal, DataSet.Rounding rounding) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + protected SelectionDetail getDetails(IDataSet set, int dataSetIndex, float xVal, DataSet.Rounding rounding) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java, +import com.github.mikephil.charting.data.DataSet;, + * Returns a list of SelectionDetail object corresponding to the given xValue., + for (int j = 0, dataSetCount = dataObjects.get(i).getDataSetCount(); j < dataSetCount; j++) {, + // don't include datasets that cannot be highlighted, + SelectionDetail s1 = getDetails(dataSet, j, xVal, DataSet.Rounding.UP);, + s1.dataIndex = i;, + vals.add(s1);, + SelectionDetail s2 = getDetails(dataSet, j, xVal, DataSet.Rounding.DOWN);, + s2.dataIndex = i;, + vals.add(s2);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + private FormattedStringCache.PrimIntFloat mFormattedStringCache;, + mFormattedStringCache = new FormattedStringCache.PrimIntFloat(new DecimalFormat("######.0"));, + return mFormattedStringCache.getFormattedValue(value, dataSetIndex);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + private FormattedStringCache.PrimIntFloat mFormattedStringCache;, + mFormattedStringCache = new FormattedStringCache.PrimIntFloat(new DecimalFormat("######.0"));, + return mFormattedStringCache.getFormattedValue(value, dataSetIndex);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/DefaultAxisValueFormatter.java, + protected FormattedStringCache.PrimFloat mFormattedStringCache;, + mFormattedStringCache = new FormattedStringCache.PrimFloat(new DecimalFormat("###,###,###,##0" + b.toString()));, + return mFormattedStringCache.getFormattedValue(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + private FormattedStringCache.PrimIntFloat mFormattedStringCache;, + mFormattedStringCache = new FormattedStringCache.PrimIntFloat(new DecimalFormat("######.0"));, + return mFormattedStringCache.getFormattedValue(value, dataSetIndex);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/DefaultAxisValueFormatter.java, + protected FormattedStringCache.PrimFloat mFormattedStringCache;, + mFormattedStringCache = new FormattedStringCache.PrimFloat(new DecimalFormat("###,###,###,##0" + b.toString()));, + return mFormattedStringCache.getFormattedValue(value);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/FormattedStringCache.java, +import java.util.ArrayList;, + protected Format mFormat;, + public static class PrimIntFloat extends FormattedStringCache{, +, +
[+++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + case R.id.actionToggleCurvedSlices: {, + boolean toSet = !chart.isDrawRoundedSlicesEnabled() || !chart.isDrawHoleEnabled();, + chart.setDrawRoundedSlices(toSet);, + if (toSet && !chart.isDrawHoleEnabled()) {, + chart.setDrawHoleEnabled(true);, + }, + if (toSet && chart.isDrawSlicesUnderHoleEnabled()) {, + chart.setDrawSlicesUnderHole(false);, + }, + chart.invalidate();, + break;, + }, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + case R.id.actionToggleCurvedSlices: {, + boolean toSet = !chart.isDrawRoundedSlicesEnabled() || !chart.isDrawHoleEnabled();, + chart.setDrawRoundedSlices(toSet);, + if (toSet && !chart.isDrawHoleEnabled()) {, + chart.setDrawHoleEnabled(true);, + }, + if (toSet && chart.isDrawSlicesUnderHoleEnabled()) {, + chart.setDrawSlicesUnderHole(false);, + }, + chart.invalidate();, + break;, + }, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + case R.id.actionToggleCurvedSlices: {, + boolean toSet = !chart.isDrawRoundedSlicesEnabled() || !chart.isDrawHoleEnabled();, + chart.setDrawRoundedSlices(toSet);, + if
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +// /**, +// * flag that enables or disables the highlighting arrow, +// */, +// private boolean mDrawHighlightArrow = false;, +// /**, +// * set this to true to draw the highlightning arrow, +// *, +// * @param enabled, +// */, +// public void setDrawHighlightArrow(boolean enabled) {, +// mDrawHighlightArrow = enabled;, +// }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +// /**, +// * flag that enables or disables the highlighting arrow, +// */, +// private boolean mDrawHighlightArrow = false;, +// /**, +// * set this to true to draw the highlightning arrow, +// *, +//
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +import android.view.MotionEvent;, +import com.github.mikephil.charting.interfaces.OnChartGestureListener;, + OnChartGestureListener, OnChartValueSelectedListener {, + mChart.setOnChartGestureListener(this);, +, + @Override, + public void onChartLongPressed(MotionEvent me) {, + Log.i("LongPress", "Chart longpressed.");, + }, +, + @Override, + public void onChartDoubleTapped(MotionEvent me) {, + Log.i("DoubleTap", "Chart double-tapped."); , + }, +, + @Override, + public void onChartSingleTapped(MotionEvent me) {, + Log.i("SingleTap", "Chart single-tapped.");, + }, + , + @Override, + public void onValueSelected(Entry e, int dataSetIndex) {, + Log.i("Entry selected", e.toString());, + }, + , + @Override, + public void onNothingSelected() {, + Log.i("Nothing
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="LineChartActivityColored"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="LineChartActivityColored"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.SeekBar;, +import android.widget.SeekBar.OnSeekBarChangeListener;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.charts.BarLineChartBase.BorderPosition;, +import com.github.mikephil.charting.charts.LineChart;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.LineData;, +import com.github.mikephil.charting.data.LineDataSet;, +import com.github.mikephil.charting.data.filter.Approximator;, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, +import com.github.mikephil.charting.utils.Legend;, +import com.github.mikephil.charting.utils.Legend.LegendForm;, +import com.github.mikephil.charting.utils.XLabels;, +import com.github.mikephil.charting.utils.YLabels;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class LineChartActivityColored extends DemoBase implements OnSeekBarChangeListener {, +, + private LineChart mChart;, + private SeekBar mSeekBarX, mSeekBarY;, + private TextView tvX, tvY;, + private Typeface tf;, +, + @Override, + protected void onCreate(Bundle
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +// @Override, +// protected void calcMinMax() {, +// super.calcMinMax();, +//, +// mXAxis.mAxisMaximum += 0.5f;, +// mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +// }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +// @Override, +// protected void calcMinMax() {, +// super.calcMinMax();, +//, +// mXAxis.mAxisMaximum += 0.5f;, +// mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +// }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +// mXAxis.mAxisMinimum = -0.5f;]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();, +, + if (drawBitmap == null, + || (drawBitmap.getWidth() != width), + || (drawBitmap.getHeight() != height)) {, + drawBitmap = Bitmap.createBitmap(width, height, mBitmapConfig);, + mDrawBitmap = new WeakReference<>(drawBitmap);, + mBitmapCanvas = new Canvas(drawBitmap);, + drawBitmap.eraseColor(Color.TRANSPARENT);, + c.drawBitmap(drawBitmap, 0, 0, mRenderPaint);, + Bitmap drawBitmap = mDrawBitmap.get();, + if (drawBitmap != null) {, + drawBitmap.recycle();, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();, +, + if (drawBitmap == null, + || (drawBitmap.getWidth() != width), + || (drawBitmap.getHeight() != height)) {, +
[+++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent">, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent">, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent" >, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent">, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent" >, +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_marginLeft="5dp", + android:layout_marginRight="5dp", +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent">, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent" >, +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_marginLeft="5dp", + android:layout_marginRight="5dp", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +public class BarChartActivity extends DemoBase implements OnSeekBarChangeListener,, + OnChartValueSelectedListener {, + if (e == null), + return;, +, + public void onNothingSelected() {, + };, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent">, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent" >, +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_marginLeft="5dp", + android:layout_marginRight="5dp", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + mChart.setLogEnabled(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + mChart.setLogEnabled(true);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + mChart.setLogEnabled(true);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + /** buffer for storing lowest visible x point */, +, + /** buffer for storing highest visible x point */, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + mChart.setLogEnabled(true);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + /** buffer for storing lowest visible x point */, +, + /** buffer for storing highest visible x point */, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + mChart.setLogEnabled(true);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + /** buffer for storing lowest visible x point */, +, + /** buffer for storing highest visible x
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java, +import com.github.mikephil.charting.highlight.Highlight;, + @Override, + public Entry getEntryForHighlight(Highlight highlight) {, + return getDataSet().getEntryForIndex((int) highlight.getX());, + }, +]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", + android:versionName="1.6.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", + android:versionName="1.6.5" >, +++ b/MPChartExample/build.gradle, + versionCode 26, + versionName '1.6.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", + android:versionName="1.6.5" >, +++ b/MPChartExample/build.gradle, + versionCode 26, + versionName '1.6.5', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", + android:versionName="1.6.5" >, +++ b/MPChartExample/build.gradle, + versionCode 26, + versionName '1.6.5', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", + android:versionName="1.6.5" >, +++ b/MPChartExample/build.gradle, + versionCode 26, + versionName '1.6.5', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", + android:versionName="1.6.5" >, +++ b/MPChartExample/build.gradle, + versionCode 26, + versionName '1.6.5', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/project.properties, +++
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + mSeekBarX.setProgress(1);, + int count = mSeekBarX.getProgress();, + data.setDrawValues(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + mSeekBarX.setProgress(1);, + int count = mSeekBarX.getProgress();, + data.setDrawValues(false);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + mYMax = -Float.MAX_VALUE;, + mXMax = -Float.MAX_VALUE;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + mSeekBarX.setProgress(1);, + int count = mSeekBarX.getProgress();, + data.setDrawValues(false);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + mYMax = -Float.MAX_VALUE;, + mXMax = -Float.MAX_VALUE;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, + mYMax = -Float.MAX_VALUE;, + mXMax = -Float.MAX_VALUE;, + for (BubbleEntry e : mValues) {, + calcMinMax(e);, + final float size = e.getSize();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + mSeekBarX.setProgress(1);, + int count = mSeekBarX.getProgress();, + data.setDrawValues(false);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + mYMax = -Float.MAX_VALUE;, + mXMax = -Float.MAX_VALUE;,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent", + android:orientation="vertical">, +, + <TextView, + android:layout_width="match_parent", + android:layout_height="0dp", + android:layout_weight="0.6", + android:gravity="center", + android:textAppearance="?android:attr/textAppearanceLarge", +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="8", + android:versionName="1.0.8" >, + <activity android:name="ListViewBarChartActivity"></activity>, + <activity android:name="ListViewMultiChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="8", + android:versionName="1.0.8" >, + <activity android:name="ListViewBarChartActivity"></activity>, + <activity android:name="ListViewMultiChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 8, + versionName '1.0.8', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="8", + android:versionName="1.0.8" >, + <activity android:name="ListViewBarChartActivity"></activity>, + <activity android:name="ListViewMultiChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 8, + versionName '1.0.8', +++ b/MPChartExample/res/layout/list_item_barchart.xml, + android:layout_height="200dp" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="8", + android:versionName="1.0.8" >, + <activity android:name="ListViewBarChartActivity"></activity>, + <activity android:name="ListViewMultiChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 8, + versionName '1.0.8', +++ b/MPChartExample/res/layout/list_item_barchart.xml, + android:layout_height="200dp" />, +++ b/MPChartExample/res/layout/list_item_linechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:orientation="vertical"
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Calculates the offsets of the chart to the border depending on the, + * Calculates the y-min and y-max value and the y-delta and x-delta value]
[+++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, +import android.view.ViewGroup;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>, + extends ViewGroup, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, +import android.view.ViewGroup;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>, + extends ViewGroup, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.animation.ObjectAnimator;, +import android.graphics.PointF;, +import com.github.mikephil.charting.utils.Utils;, +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, +import android.view.ViewGroup;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + ArrayList<BarEntry> entries1 = new ArrayList<BarEntry>();, + ArrayList<BarEntry> entries2 = new ArrayList<BarEntry>();, + for (int index = 0; index < itemcount; index++) {, + entries1.add(new BarEntry(0, getRandom(25, 25)));, + entries2.add(new BarEntry(0, getRandom(25, 25)));, + }, + BarDataSet set1 = new BarDataSet(entries1, "Bar 1");, + set1.setColor(Color.rgb(60, 220, 78));, + set1.setValueTextColor(Color.rgb(60, 220, 78));, + set1.setValueTextSize(10f);, + set1.setAxisDependency(YAxis.AxisDependency.LEFT);, + BarDataSet set2 = new BarDataSet(entries2, "Bar 2");, + set2.setColor(Color.rgb(61, 165, 255));, + set2.setValueTextColor(Color.rgb(61, 165, 255));, + set2.setValueTextSize(10f);, + set2.setAxisDependency(YAxis.AxisDependency.LEFT);, + float groupSpace = 0.06f;, + float barSpace = 0.02f; // x2 dataset, + float barWidth = 0.45f; // x2 dataset, +
[+++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + buildToolsVersion '21.1.1', + targetSdkVersion 21, + classpath 'com.android.tools.build:gradle:1.1.0', + compile 'com.android.support:appcompat-v7:21.0.3', +++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + buildToolsVersion '21.1.1', + targetSdkVersion 21, + classpath 'com.android.tools.build:gradle:1.1.0', + compile 'com.android.support:appcompat-v7:21.0.3', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter custom = new MyValueFormatter();, + // data.setValueFormatter(new MyValueFormatter());, +++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + buildToolsVersion '21.1.1', + targetSdkVersion 21, + classpath 'com.android.tools.build:gradle:1.1.0', + compile 'com.android.support:appcompat-v7:21.0.3', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter custom = new MyValueFormatter();, + // data.setValueFormatter(new MyValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.utils.LargeValueFormatter;, +++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + buildToolsVersion '21.1.1', + targetSdkVersion 21, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, + android:minSdkVersion="8", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, + android:minSdkVersion="8", +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, + android:minSdkVersion="8", +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ b/MPChartLib/AndroidManifest.xml, + android:minSdkVersion="8", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, + android:minSdkVersion="8", +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ b/MPChartLib/AndroidManifest.xml, + android:minSdkVersion="8", +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, + android:minSdkVersion="8", +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ b/MPChartLib/AndroidManifest.xml, + android:minSdkVersion="8", +++ b/MPChartLib/build.gradle, + minSdkVersion 8,
[+++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleBarBorders", + android:title="Show Bar Borders">, + </item>, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleBarBorders", + android:title="Show Bar Borders">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + case R.id.actionToggleBarBorders: {, + for (IBarDataSet set : mChart.getData().getDataSets()), + ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);, +, + mChart.invalidate();, + break;, + }, + BarDataSet set1;, +, + if (mChart.getData() != null &&, + mChart.getData().getDataSetCount() > 0) {, + set1 = (BarDataSet)mChart.getData().getDataSetByIndex(0);, + set1.setYVals(yVals1);, + mChart.notifyDataSetChanged();, + } else {, + set1 = new BarDataSet(yVals1, "Data Set");, + }, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleBarBorders", + android:title="Show Bar Borders">, + </item>,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="37", + android:versionName="2.0.8" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="37", + android:versionName="2.0.8" >, +++ b/MPChartExample/build.gradle, + versionCode 37, + versionName '2.0.8', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.8' , +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="37", + android:versionName="2.0.8" >, +++ b/MPChartExample/build.gradle, + versionCode 37, + versionName '2.0.8', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.8' , +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java]
[+++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleValues" android:title="Toggle Y-Values"></item>, + <item android:id="@+id/actionToggleXVals" android:title="Toggle X-Values"></item>, + <item android:id="@+id/actionTogglePercent" android:title="Toggle Percent"></item>, + <item android:id="@+id/actionToggleHole" android:title="Toggle Hole"></item>, + <item android:id="@+id/actionDrawCenter" android:title="Draw CenterText"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleValues" android:title="Toggle Y-Values"></item>, + <item android:id="@+id/actionToggleXVals" android:title="Toggle X-Values"></item>, + <item android:id="@+id/actionTogglePercent" android:title="Toggle Percent"></item>, + <item android:id="@+id/actionToggleHole" android:title="Toggle Hole"></item>, + <item android:id="@+id/actionDrawCenter" android:title="Draw CenterText"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleValues" android:title="Toggle Y-Values"></item>, + <item android:id="@+id/actionToggleXVals" android:title="Toggle X-Values"></item>, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java, + c.clipRect(mZeroLineClippingRect);]
[+++ b/Projects_using_MPAndroidChart.txt, +, +Bluetooth Terminal/Graphics, +https://play.google.com/store/apps/details?id=com.emrctn.BluetoothGraphics&hl=de, +, +]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.LimitLine;, +// LimitLine ll = new LimitLine(130f);, +// ll.setLineWidth(4f);, +// ll.enableDashedLine(10f, 10f, 0f);, +// , +// LimitLine ll1 = new LimitLine(-30f);, +// ll1.setLineWidth(4f);, +// ll1.enableDashedLine(10f, 10f, 0f);, +// , +// data.addLimitLine(ll);, +// data.addLimitLine(ll1);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.LimitLine;, +// LimitLine ll = new LimitLine(130f);, +// ll.setLineWidth(4f);, +// ll.enableDashedLine(10f, 10f, 0f);, +// , +// LimitLine ll1 = new LimitLine(-30f);, +// ll1.setLineWidth(4f);, +// ll1.enableDashedLine(10f, 10f, 0f);, +// , +// data.addLimitLine(ll);, +// data.addLimitLine(ll1);, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.BarLineScatterData;, +import com.github.mikephil.charting.utils.LimitLine;, + /** paint used for the limit lines */, + protected Paint mLimitLinePaint;, +, +, + mLimitLinePaint = new
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, + return Math.min(content.width() / 2f, content.height() / 2f) / mYAxis.mAxisRange;, + return 360f / (float) mData.getMaxEntryCountSet().getEntryCount();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, + return Math.min(content.width() / 2f, content.height() / 2f) / mYAxis.mAxisRange;, + return 360f / (float) mData.getMaxEntryCountSet().getEntryCount();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/RadarChartRenderer.java, + int mostEntries = radarData.getMaxEntryCountSet().getEntryCount();, + int maxEntryCount = mChart.getData().getMaxEntryCountSet().getEntryCount();, + for (int i = 0; i < maxEntryCount; i += xIncrements) {]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.components.YAxis;, + high = new Highlight(high.getX(), Float.NaN, Float.NaN, Float.NaN, -1, YAxis.AxisDependency.LEFT);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.components.YAxis;, + high = new Highlight(high.getX(), Float.NaN, Float.NaN, Float.NaN, -1, YAxis.AxisDependency.LEFT);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import com.github.mikephil.charting.highlight.Highlight;, + /**, + * holds the normalized version of the current rotation angle of the chart, + */, + /**, + * holds the raw version of the current rotation angle of the chart, + */, + /**, + * flag that indicates if rotation is enabled or not, + */, + /**, + * Sets the minimum offset (padding) around the chart, defaults to 0.f, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + float start = 1f;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + float start = 1f;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BubbleChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BubbleChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.BubbleChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, + , + <SeekBar, + android:id="@+id/seekBar2", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_toLeftOf="@+id/tvYMax", + android:layout_marginRight="5dp", + android:max="200", + android:paddingBottom="12dp" />, +, + <SeekBar, + android:id="@+id/seekBar1", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_above="@+id/seekBar2", + android:layout_margin="8dp", + android:layout_marginBottom="35dp", + android:layout_toLeftOf="@+id/tvXMax", + android:layout_marginRight="5dp", + android:max="30", + android:paddingBottom="12dp" />, +, + <TextView, + android:id="@+id/tvXMax", + android:layout_width="50dp", + android:layout_height="wrap_content", + android:layout_alignBottom="@+id/seekBar1", + android:layout_alignParentRight="true", + android:text="500", +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent" >, + android:layout_height="match_parent" />, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyAxisValueFormatter.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyAxisValueFormatter.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyCustomXAxisValueFormatter.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++
[+++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="2000", +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="2000", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +import com.github.mikephil.charting.components.YAxis.YAxisLabelPosition;, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="2000", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +import com.github.mikephil.charting.components.YAxis.YAxisLabelPosition;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + Log.i(LOG_TAG, "Drawtime: " + drawtime + " ms, average: " + average + " ms, cycles: ", + + drawCycles);, + if (mRenderer != null), +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="2000", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +import com.github.mikephil.charting.components.YAxis.YAxisLabelPosition;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + Log.i(LOG_TAG, "Drawtime: " + drawtime + " ms, average: " + average + " ms, cycles: ", + + drawCycles);, + if (mRenderer != null), +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java, + mRenderer.initBuffers();, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="2000", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +import com.github.mikephil.charting.components.YAxis.YAxisLabelPosition;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +
[+++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, + if (e == null || e.getXIndex() != xIndex), + return false;, +, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, + if (e == null || e.getXIndex() != xIndex), + return false;, +, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java, + CandleShadowBuffer shadowBuffer = mShadowBuffers[dataSetIndex];, + shadowBuffer.setPhases(phaseX, phaseY);, + shadowBuffer.limitFrom(minx);, + shadowBuffer.limitTo(maxx);, + shadowBuffer.feed(entries);, +, + trans.pointValuesToPixel(shadowBuffer.buffer);, +, + mRenderPaint.setStyle(Paint.Style.STROKE);, +, + // If not set, use default functionality for backward compatibility, + if (dataSet.getShadowColor() == ColorTemplate.COLOR_NONE) {, + mRenderPaint.setColor(dataSet.getColor());, + } else
[+++ b/.gitignore, +, +.DS_Store]
[+++ b/MPChartExample/res/drawable/new_background.xml, +<?xml version="1.0" encoding="utf-8"?>, +<shape xmlns:android="http://schemas.android.com/apk/res/android">, + <stroke, + android:width="2dp", + android:color="#FA6185" />, +, + <solid android:color="#FA6185" />, + <corners android:radius="5dp" />, +</shape>, +++ b/MPChartExample/res/drawable/new_background.xml, +<?xml version="1.0" encoding="utf-8"?>, +<shape xmlns:android="http://schemas.android.com/apk/res/android">, + <stroke, + android:width="2dp", + android:color="#FA6185" />, +, + <solid android:color="#FA6185" />, + <corners android:radius="5dp" />, +</shape>, +++ b/MPChartExample/res/layout/list_item.xml, + android:padding="7dp", + android:background="@drawable/new_background", + android:textColor="@android:color/white", + android:textSize="11dp", +++ b/MPChartExample/res/drawable/new_background.xml, +<?xml version="1.0" encoding="utf-8"?>, +<shape xmlns:android="http://schemas.android.com/apk/res/android">, + <stroke, + android:width="2dp", + android:color="#FA6185" />, +, + <solid android:color="#FA6185" />, + <corners android:radius="5dp" />, +</shape>, +++ b/MPChartExample/res/layout/list_item.xml, + android:padding="7dp", + android:background="@drawable/new_background", + android:textColor="@android:color/white", + android:textSize="11dp", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, + setTitle("MPAndroidChart Example");, +, +++
[+++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++
[+++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++
[+++ b/MPChartExample/build.gradle, + compileSdkVersion 23, + buildToolsVersion '23.0.1', + targetSdkVersion 23, + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartExample/build.gradle, + compileSdkVersion 23, + buildToolsVersion '23.0.1', + targetSdkVersion 23, + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;, + YAxisValueFormatter custom = new MyYAxisValueFormatter();, +++ b/MPChartExample/build.gradle, + compileSdkVersion 23, + buildToolsVersion '23.0.1', + targetSdkVersion 23, + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;, + YAxisValueFormatter custom = new MyYAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.LargeValueFormatter;, +++ b/MPChartExample/build.gradle, + compileSdkVersion 23, + buildToolsVersion '23.0.1', + targetSdkVersion 23, + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.os.Bundle;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.animation.Easing;, +import com.github.mikephil.charting.charts.RadarChart;, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.MarkerView;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.RadarData;, +import com.github.mikephil.charting.data.RadarDataSet;, +import com.github.mikephil.charting.data.RadarEntry;, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IRadarDataSet;, +import com.xxmassdeveloper.mpchartexample.custom.RadarMarkerView;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class RadarChartActivity extends DemoBase {,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + set.setMode(LineDataSet.Mode.CUBIC_BEZIER);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + set.setMode(LineDataSet.Mode.CUBIC_BEZIER);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + set1.setMode(LineDataSet.Mode.CUBIC_BEZIER);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + set.setMode(LineDataSet.Mode.CUBIC_BEZIER);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + set1.setMode(LineDataSet.Mode.CUBIC_BEZIER);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, + if (set.getMode() == LineDataSet.Mode.CUBIC_BEZIER), + set.setMode(LineDataSet.Mode.LINEAR);, + set.setMode(LineDataSet.Mode.CUBIC_BEZIER);, + if (set.getMode() == LineDataSet.Mode.STEPPED), + set.setMode(LineDataSet.Mode.LINEAR);, + set.setMode(LineDataSet.Mode.STEPPED);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + set.setMode(LineDataSet.Mode.CUBIC_BEZIER);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + set1.setMode(LineDataSet.Mode.CUBIC_BEZIER);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, + if (set.getMode() == LineDataSet.Mode.CUBIC_BEZIER), + set.setMode(LineDataSet.Mode.LINEAR);, + set.setMode(LineDataSet.Mode.CUBIC_BEZIER);, + if (set.getMode() == LineDataSet.Mode.STEPPED), + set.setMode(LineDataSet.Mode.LINEAR);, + set.setMode(LineDataSet.Mode.STEPPED);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, + set1.setMode(LineDataSet.Mode.LINEAR);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + set.setMode(LineDataSet.Mode.CUBIC_BEZIER);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + set1.setMode(LineDataSet.Mode.CUBIC_BEZIER);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, + if (set.getMode() == LineDataSet.Mode.CUBIC_BEZIER), + set.setMode(LineDataSet.Mode.LINEAR);, + set.setMode(LineDataSet.Mode.CUBIC_BEZIER);, + if (set.getMode() == LineDataSet.Mode.STEPPED), + set.setMode(LineDataSet.Mode.LINEAR);, +
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/build.gradle, +//apply plugin: 'realm-android', +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/build.gradle, +//apply plugin: 'realm-android', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + XYMarkerView mv = new XYMarkerView(this, xAxisFormatter);, + mv.setChartView(mChart); // For bounds control, + mChart.setMarker(mv); // Set the marker to the chart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/build.gradle, +//apply plugin: 'realm-android', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + XYMarkerView mv = new XYMarkerView(this, xAxisFormatter);, + mv.setChartView(mChart); // For bounds control, + mChart.setMarker(mv); // Set the marker to the chart, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + mv.setChartView(mChart); // For bounds control, + mChart.setMarker(mv); // Set the marker to the chart, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/build.gradle, +//apply plugin: 'realm-android', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + XYMarkerView
[+++ b/Projects_using_MPAndroidChart.txt, +, +Speaker Recognition, +https://github.com/C-piace-il-C/Speaker_Recognition]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="7", + android:versionName="1.0.7" >, + <activity android:name="ListViewChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="7", + android:versionName="1.0.7" >, + <activity android:name="ListViewChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 7, + versionName '1.0.7', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="7", + android:versionName="1.0.7" >, + <activity android:name="ListViewChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 7, + versionName '1.0.7', +++ b/MPChartExample/res/layout/activity_listview_chart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:orientation="vertical" >, +, + <ListView, + android:id="@+id/listView1", + android:layout_width="match_parent", + android:layout_height="match_parent" >, + </ListView>, +, +</LinearLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="7", + android:versionName="1.0.7" >, + <activity android:name="ListViewChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 7, + versionName '1.0.7', +++ b/MPChartExample/res/layout/activity_listview_chart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android",
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + tvX = (TextView) findViewById(R.id.tvXMax);, + tvY = (TextView) findViewById(R.id.tvYMax);, + mSeekBarX = (SeekBar) findViewById(R.id.seekBar1);, + mSeekBarY = (SeekBar) findViewById(R.id.seekBar2);, + mChart = (BarChart) findViewById(R.id.chart1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + tvX = (TextView) findViewById(R.id.tvXMax);, + tvY = (TextView) findViewById(R.id.tvYMax);, + mSeekBarX = (SeekBar) findViewById(R.id.seekBar1);, + mSeekBarY = (SeekBar) findViewById(R.id.seekBar2);, + mChart = (BarChart) findViewById(R.id.chart1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + tvX = (TextView) findViewById(R.id.tvXMax);, + tvY = (TextView) findViewById(R.id.tvYMax);, + mSeekBarX = (SeekBar) findViewById(R.id.seekBar1);, + mSeekBarY = (SeekBar) findViewById(R.id.seekBar2);, + mChart = (BarChart) findViewById(R.id.chart1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + tvX = (TextView) findViewById(R.id.tvXMax);, + tvY = (TextView) findViewById(R.id.tvYMax);, + mSeekBarX = (SeekBar) findViewById(R.id.seekBar1);, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java, +package com.xxmassdeveloper.mpchartexample.custom;, +, +import com.github.mikephil.charting.utils.ValueFormatter;, +, +import java.text.DecimalFormat;, +, +public class PercentFormatter implements ValueFormatter {, +, + private DecimalFormat mFormat;, + , + public PercentFormatter() {, + mFormat = new DecimalFormat("#,##0.0");, + }, + , + @Override, + public String getFormattedValue(float value) {, + return mFormat.format(value) + " %";, + }, +, +}, +++ b/MPChartExample/AndroidManifest.xml,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, + private String[] mSuffix = new String[]{, + private int mMaxLength = 5;, + * @param suffix new suffix, + public void setSuffix(String[] suffix) {, + this.mSuffix = suffix;, + }, +, + public void setMaxLength(int maxLength) {, + this.mMaxLength = maxLength;, + r = r.replaceAll("E[0-9][0-9]", mSuffix[combined / 3]);, + while (r.length() > mMaxLength || r.matches("[0-9]+\\.[a-z]")) {]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + ArrayList<String> xVals = new ArrayList<String>();,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java, + min = entryFrom == null ? 0 : dataSet.getEntryIndex(entryFrom);, + max = entryTo == null ? 0 : dataSet.getEntryIndex(entryTo);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java, + min = entryFrom == null ? 0 : dataSet.getEntryIndex(entryFrom);, + max = entryTo == null ? 0 : dataSet.getEntryIndex(entryTo);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java, + final int count = (int) ((to - from) * phaseX) * 2;]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineRadarDataSet.java, + if (width < 0.0f), + width = 0.0f;]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, + float angle = getSliceAngle() * e.getX() * mAnimator.getPhaseX() + getRotationAngle();, + float val = e.getY() * getFactor() * mAnimator.getPhaseY();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, + float angle = getSliceAngle() * e.getX() * mAnimator.getPhaseX() + getRotationAngle();, + float val = e.getY() * getFactor() * mAnimator.getPhaseY();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + if(mViewPortHandler != null) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, + float angle = getSliceAngle() * e.getX() * mAnimator.getPhaseX() + getRotationAngle();, + float val = e.getY() * getFactor() * mAnimator.getPhaseY();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + if(mViewPortHandler != null) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java, + if(mViewPortHandler != null) {]
[+++ b/MPChartExample/res/menu/main.xml, +, + <item, + android:id="@+id/viewGithub", + android:title="View on GitHub">, + </item>, + <item, + android:id="@+id/report", + android:title="Problem Report">, + </item>, + <item, + android:id="@+id/blog", + android:title="Developer Blog">, + </item>, + <item, + android:id="@+id/website", + android:title="Developer Website">, + </item>, +, +++ b/MPChartExample/res/menu/main.xml, +, + <item, + android:id="@+id/viewGithub", + android:title="View on GitHub">, + </item>, + <item, + android:id="@+id/report", + android:title="Problem Report">, + </item>, + <item, + android:id="@+id/blog", + android:title="Developer Blog">, + </item>, + <item, + android:id="@+id/website", + android:title="Developer Website">, + </item>, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.getLegend().setEnabled(false);, +, +++ b/MPChartExample/res/menu/main.xml, +, + <item, + android:id="@+id/viewGithub", + android:title="View on GitHub">, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + protected Matrix mZoomInMatrixBuffer = new Matrix();, + mViewPortHandler.zoomIn(center.x, -center.y, mZoomInMatrixBuffer);, + mViewPortHandler.refresh(mZoomInMatrixBuffer, this, false);, + protected Matrix mZoomOutMatrixBuffer = new Matrix();, + mViewPortHandler.zoomOut(center.x, -center.y, mZoomOutMatrixBuffer);, + mViewPortHandler.refresh(mZoomOutMatrixBuffer, this, false);, + protected Matrix mZoomMatrixBuffer = new Matrix();, + Matrix save = mZoomMatrixBuffer;, + mViewPortHandler.zoom(scaleX, scaleY, x, y, save);, + protected Matrix mFitScreenMatrixBuffer = new Matrix();, + Matrix save = mFitScreenMatrixBuffer;, + mViewPortHandler.fitScreen(save);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + protected Matrix mZoomInMatrixBuffer = new Matrix();, + mViewPortHandler.zoomIn(center.x, -center.y, mZoomInMatrixBuffer);, + mViewPortHandler.refresh(mZoomInMatrixBuffer, this, false);, + protected Matrix mZoomOutMatrixBuffer = new Matrix();, + mViewPortHandler.zoomOut(center.x, -center.y, mZoomOutMatrixBuffer);, + mViewPortHandler.refresh(mZoomOutMatrixBuffer, this, false);, + protected Matrix
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="PiePolylineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="PiePolylineChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.text.SpannableString;, +import android.text.style.ForegroundColorSpan;, +import android.text.style.RelativeSizeSpan;, +import android.text.style.StyleSpan;, +import android.util.Log;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.SeekBar;, +import android.widget.SeekBar.OnSeekBarChangeListener;, +import android.widget.TextView;, +, +import com.github.mikephil.charting.animation.Easing;, +import com.github.mikephil.charting.charts.PieChart;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.PieData;, +import com.github.mikephil.charting.data.PieDataSet;, +import com.github.mikephil.charting.formatter.PercentFormatter;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +import com.github.mikephil.charting.listener.OnChartValueSelectedListener;, +import com.github.mikephil.charting.utils.ColorTemplate;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class PiePolylineChartActivity extends DemoBase implements OnSeekBarChangeListener,, + OnChartValueSelectedListener {, +, + private PieChart mChart;, + private SeekBar mSeekBarX, mSeekBarY;, + private TextView tvX,
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/CONTRIBUTING.md, +Bug-fixes and features often come from users of the MPAndroidChart library and improve it greatly. We want to keep it as easy as possible to contribute changes that improve the experience for users all around the world. There are a few guidelines that we, +need contributors to follow so that we can have a chance of keeping
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CombinedChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CombinedChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.CombinedChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CombinedChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.CombinedChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.os.Bundle;, +import android.view.WindowManager;, +, +import com.github.mikephil.charting.charts.CombinedChart;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.BarData;, +import com.github.mikephil.charting.data.BarDataSet;, +import com.github.mikephil.charting.data.BarEntry;, +import com.github.mikephil.charting.data.CombinedData;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.LineData;, +import com.github.mikephil.charting.data.LineDataSet;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public
[+++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleBarBorders", + android:title="Show Bar Borders">, + </item>, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleBarBorders", + android:title="Show Bar Borders">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + case R.id.actionToggleBarBorders: {, + for (IBarDataSet set : mChart.getData().getDataSets()), + ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);, +, + mChart.invalidate();, + break;, + }, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleBarBorders", + android:title="Show Bar Borders">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + case R.id.actionToggleBarBorders: {, + for (IBarDataSet set : mChart.getData().getDataSets()), + ((BarDataSet)set).setBarBorderWidth(set.getBarBorderWidth() == 1.f ? 0.f : 1.f);, +, + mChart.invalidate();, + break;, + }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + case R.id.actionToggleBarBorders: {, + for (IBarDataSet
[+++ b/Projects_using_MPAndroidChart.txt, +, +My Expenses, +https://play.google.com/store/apps/details?id=org.totschnig.myexpenses]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;, + YAxisValueFormatter custom = new MyYAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;, + YAxisValueFormatter custom = new MyYAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.LargeValueFormatter;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;, + YAxisValueFormatter custom = new MyYAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.LargeValueFormatter;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + //xAxis.setValueFormatter(new MyCustomXAxisValueFormatter());, + //mChart.getViewPortHandler().setMaximumScaleY(2f);, + //mChart.getViewPortHandler().setMaximumScaleX(2f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;, + YAxisValueFormatter custom = new MyYAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.LargeValueFormatter;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + //xAxis.setValueFormatter(new MyCustomXAxisValueFormatter());, + //mChart.getViewPortHandler().setMaximumScaleY(2f);, + //mChart.getViewPortHandler().setMaximumScaleX(2f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.formatter.PercentFormatter;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;, + YAxisValueFormatter custom = new MyYAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.LargeValueFormatter;, +++
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java, + pool.setReplenishPercentage(0.5f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java, + pool.setReplenishPercentage(0.5f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/MPPointF.java, + pool.setReplenishPercentage(0.5f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FSize.java, + pool.setReplenishPercentage(0.5f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/MPPointF.java, + pool.setReplenishPercentage(0.5f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/PointD.java, + pool.setReplenishPercentage(0.5f);]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, +import android.util.Log;, + * Sets the radius of the drawn circles., + * Default radius = 4f, Min = 1f, +, + if (radius >= 1f) {, + } else {, + Log.e("LineDataSet", "Circle radius cannot be < 1");, + }, + * Sets the hole radius of the drawn circles., + * Default radius = 2f, Min = 0.5f, +, + if (holeRadius >= 0.5f) {, + } else {, + Log.e("LineDataSet", "Circle radius cannot be < 0.5");, + }]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import android.graphics.Paint;, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, + Legend l = mChart.getLegend();, + l.setWordWrapEnabled(true);, + l.setPosition(Legend.LegendPosition.BELOW_CHART_CENTER);, +, + xAxis.setAxisMinValue(0f);, + xAxis.setGranularity(1f);, + xAxis.setValueFormatter(new AxisValueFormatter() {, + @Override, + public String getFormattedValue(float value, AxisBase axis) {, + return mMonths[(int) value % mMonths.length];, + }, +, + @Override, + public int getDecimalDigits() {, + return 0;, + }, + });, + data.setData(generateBubbleData());, + data.setData(generateScatterData());, + data.setData(generateCandleData());, +, + xAxis.setAxisMaxValue(data.getXMax() + 0.25f);, + entries.add(new Entry(index + 0.5f, getRandom(15, 5)));, + entries.add(new BarEntry(index + 0.5f, getRandom(25, 25)));, + for (float index = 0; index < itemcount; index += 0.5f), +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java, + /**, + * label for pie entries, + */, + private String label;, +, + public RealmDemoData(float yValue) {, + this.yValue = yValue;, + }, +, + /**, + * Constructor for pie chart., + *, + * @param yValue, + * @param label, + */, + public RealmDemoData(float yValue, String label) {, + this.yValue = yValue;, + this.label = label;, + }, +, + public String getLabel() {, + return label;, + }, +, + public void setLabel(String label) {, + this.label = label;, + }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java, + /**, + * label for pie
[+++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-BoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-BoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBold.ttf, +++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-BoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBold.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-BoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBold.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Italic.ttf, +++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-BoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBold.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Italic.ttf, +++ b/MPChartExample/assets/OpenSans-Light.ttf, +++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-BoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBold.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Italic.ttf, +++ b/MPChartExample/assets/OpenSans-Light.ttf, +++ b/MPChartExample/assets/OpenSans-LightItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-BoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBold.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Italic.ttf, +++ b/MPChartExample/assets/OpenSans-Light.ttf, +++ b/MPChartExample/assets/OpenSans-LightItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Regular.ttf, +++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-BoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBold.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Italic.ttf, +++ b/MPChartExample/assets/OpenSans-Light.ttf, +++ b/MPChartExample/assets/OpenSans-LightItalic.ttf, +++ b/MPChartExample/assets/OpenSans-Regular.ttf, +++ b/MPChartExample/assets/OpenSans-Semibold.ttf, +++ b/MPChartExample/assets/OpenSans-Bold.ttf, +++ b/MPChartExample/assets/OpenSans-BoldItalic.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBold.ttf, +++ b/MPChartExample/assets/OpenSans-ExtraBoldItalic.ttf, +++
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="48", + android:versionName="2.2.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="48", + android:versionName="2.2.2" >, +++ b/MPChartExample/build.gradle, + versionCode 48, + versionName '2.2.2']
[+++ b/Projects_using_MPAndroidChart.txt, +https://play.google.com/store/apps/details?id=com.emrctn.BluetoothGraphics]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.animation.AnimationEasing;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.animation.AnimationEasing;, +++ b/MPChartLib/src/com/github/mikephil/charting/animation/AnimationEasing.java, +package com.github.mikephil.charting.animation;, +, +/**, + * Created by dcg on 7/4/15., + */, +public class AnimationEasing, +{, +, + public enum EasingOption {, + Linear,, + EaseInQuad,, + EaseOutQuad,, + EaseInOutQuad,, + EaseInCubic,, + EaseOutCubic,, + EaseInOutCubic,, + EaseInQuart,, + EaseOutQuart,, + EaseInOutQuart,, + EaseInQuint,, + EaseOutQuint,, + EaseInOutQuint,, + EaseInSine,, + EaseOutSine,, + EaseInOutSine,, + EaseInExpo,, + EaseOutExpo,, + EaseInOutExpo,, + EaseInCirc,, + EaseOutCirc,, + EaseInOutCirc,, + EaseInElastic,, + EaseOutElastic,, + EaseInOutElastic,, + EaseInBack,, + EaseOutBack,, + EaseInOutBack,, + EaseInBounce,, + EaseOutBounce,, + EaseInOutBounce,, + }, +, +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + <ScrollView, + android:id="@+id/scrollView1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_alignParentLeft="true", + android:layout_alignParentTop="true" >, +, + android:layout_gravity="center", + android:orientation="vertical", + android:padding="10dp" >, + android:text="MultilineChart" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + </ScrollView>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + <ScrollView, + android:id="@+id/scrollView1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_alignParentLeft="true", + android:layout_alignParentTop="true" >, +, + android:layout_gravity="center", + android:orientation="vertical", + android:padding="10dp" >, + android:text="MultilineChart" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp",
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivitySinus"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivitySinus"></activity>, +++ b/MPChartExample/res/layout/activity_barchart_sinus.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekbarValues" />, +, + <SeekBar, + android:id="@+id/seekbarValues", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_marginBottom="35dp", + android:layout_toLeftOf="@+id/tvValueCount", + android:layout_marginRight="5dp", + android:max="750", + android:paddingBottom="12dp" />, +, + <TextView, + android:id="@+id/tvValueCount", + android:layout_width="60dp", + android:layout_height="wrap_content", + android:layout_alignBottom="@+id/seekbarValues", + android:layout_alignParentRight="true", + android:text="0", + android:layout_marginBottom="15dp", + android:layout_marginRight="10dp", + android:gravity="right", + android:textAppearance="?android:attr/textAppearanceMedium" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivitySinus"></activity>, +++ b/MPChartExample/res/layout/activity_barchart_sinus.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent",
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/assets/nlogn.txt, +O(nlogn), +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/assets/nlogn.txt, +O(nlogn), +++ b/MPChartExample/assets/sine.txt, +Sine function, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java, + mRanges[i] = new Range(negRemain, negRemain + value);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java, + mRanges[i] = new Range(negRemain, negRemain + value);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + if (isStack) {, +, + if(mChart.isHighlightFullBarEnabled()) {, +, + y1 = e.getPositiveSum();, + y2 = -e.getNegativeSum();, +, + } else {, + }, +]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + mSeekBarX.setProgress(10);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + mSeekBarX.setProgress(10);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.data.RadarEntry;, + ArrayList<RadarEntry> yVals1 = new ArrayList<RadarEntry>();, + ArrayList<RadarEntry> yVals2 = new ArrayList<RadarEntry>();, + yVals1.add(new RadarEntry(val));, + yVals2.add(new RadarEntry(val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + mSeekBarX.setProgress(10);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.data.RadarEntry;, + ArrayList<RadarEntry> yVals1 = new ArrayList<RadarEntry>();, + ArrayList<RadarEntry> yVals2 = new ArrayList<RadarEntry>();, + yVals1.add(new RadarEntry(val));, + yVals2.add(new RadarEntry(val));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, + int entryIndex = (int) highlight.getX();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + mSeekBarX.setProgress(10);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.data.RadarEntry;, + ArrayList<RadarEntry> yVals1 = new ArrayList<RadarEntry>();, + ArrayList<RadarEntry> yVals2 = new ArrayList<RadarEntry>();, + yVals1.add(new RadarEntry(val));, + yVals2.add(new RadarEntry(val));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, + int entryIndex = (int) highlight.getX();, +++
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, + for (IDataSet set : mChart.getData().getDataSets()), + ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local',
[+++ b/Projects_using_MPAndroidChart.txt, +, +Phone Addiction, +https://play.google.com/store/apps/details?id=com.tutorialsface.phoneaddiction, +, +AS Sales Management, +https://play.google.com/store/apps/details?id=com.armsoft.mtrade, +++ b/Projects_using_MPAndroidChart.txt, +, +Phone Addiction, +https://play.google.com/store/apps/details?id=com.tutorialsface.phoneaddiction, +, +AS Sales Management, +https://play.google.com/store/apps/details?id=com.armsoft.mtrade, +++ b/README.md, +[![Gratipay](http://img.shields.io/gratipay/PhilJay.svg)](https://gratipay.com/PhilJay), +, + - Make sure you are using the latest version of the library. Check the [**release-section**](https://github.com/PhilJay/MPAndroidChart/releases).]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, + <activity android:name="ScatterChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, + <activity android:name="ScatterChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, + <activity android:name="ScatterChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, + <activity android:name="ScatterChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, + android:text="Draw Chart" />, +, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + <Button, + android:id="@+id/button9", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="ScatterChart" />, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, + <activity android:name="ScatterChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + // make sure the graph values and grid cannot be drawn outside the, + // content-rect, + int clipRestoreCount = canvas.save();, + canvas.clipRect(mViewPortHandler.getContentRect());, +, + clipRestoreCount = canvas.save();, + canvas.clipRect(mViewPortHandler.getContentRect());, +, + canvas.restoreToCount(clipRestoreCount);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + // make sure the graph values and grid cannot be drawn outside the, + // content-rect, + int clipRestoreCount = canvas.save();, + canvas.clipRect(mViewPortHandler.getContentRect());, +, + clipRestoreCount = canvas.save();, + canvas.clipRect(mViewPortHandler.getContentRect());, +, + canvas.restoreToCount(clipRestoreCount);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, + mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent()) +, + mLegend.getFormSize() + mLegend.getFormToTextSpace();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + // make sure
[+++ b/MPChartExample/res/menu/radar.xml, + android:id="@+id/actionToggleHighlightCircle", + android:title="Toggle highlight circle">, + </item>, + <item, +++ b/MPChartExample/res/menu/radar.xml, + android:id="@+id/actionToggleHighlightCircle", + android:title="Toggle highlight circle">, + </item>, + <item, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, + case R.id.actionToggleHighlightCircle: {, +, + ArrayList<IRadarDataSet> sets = (ArrayList<IRadarDataSet>) mChart.getData(), + .getDataSets();, +, + for (IRadarDataSet set : sets) {, + set.setDrawHighlightCircleEnabled(!set.isDrawHighlightCircleEnabled());, + }, + mChart.invalidate();, + break;, + }, +++ b/MPChartExample/res/menu/radar.xml, + android:id="@+id/actionToggleHighlightCircle", + android:title="Toggle highlight circle">, + </item>, + <item, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, + case R.id.actionToggleHighlightCircle: {, +, + ArrayList<IRadarDataSet> sets = (ArrayList<IRadarDataSet>) mChart.getData(), + .getDataSets();, +, + for (IRadarDataSet set : sets) {, + set.setDrawHighlightCircleEnabled(!set.isDrawHighlightCircleEnabled());, + }, + mChart.invalidate();, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + float offset = 0.f;, + if (mAxis.mEntries.length > 1), + offset = (mAxis.mEntries[1] - mAxis.mEntries[0]) / 2f;]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, + xAxis.setValueFormatter(new AxisValueFormatter() {, + @Override, + public String getFormattedValue(float value, AxisBase axis) {, + return mMonths[(int) value % mMonths.length];, + }, +, + @Override, + public int getDecimalDigits() {, + return 0;, + }, + });, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, + xAxis.setValueFormatter(new AxisValueFormatter() {, + @Override, + public String getFormattedValue(float value, AxisBase axis) {, + return mMonths[(int) value % mMonths.length];, + }, +, + @Override, + public int getDecimalDigits() {, + return 0;, + }, + });, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScrollViewActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, + xAxis.setValueFormatter(new AxisValueFormatter() {, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_linechart_time.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1"
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + if (i / 2 == mXAxis.mEntryCount - 1 && mXAxis.mEntryCount > 1) {]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + mChart.getDescription().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +
[+++ b/MPChartExample/res/menu/combined.xml, +++ b/MPChartExample/res/menu/combined.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + entries.add(new Entry(getRandom(15, 10), index));, + entries.add(new BarEntry(getRandom(15, 30), index));, + set.setAxisDependency(YAxis.AxisDependency.LEFT);, +++ b/MPChartExample/res/menu/combined.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, + entries.add(new Entry(getRandom(15, 10), index));, + entries.add(new BarEntry(getRandom(15, 30), index));, + set.setAxisDependency(YAxis.AxisDependency.LEFT);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, + protected boolean mLogEnabled = false;]
[+++ b/MPChartExample/res/menu/candle.xml, + <item, + android:id="@+id/actionToggleMakeShadowSameColorAsCandle", + android:title="Toggle shadow same color">, + </item>, +++ b/MPChartExample/res/menu/candle.xml, + <item, + android:id="@+id/actionToggleMakeShadowSameColorAsCandle", + android:title="Toggle shadow same color">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, + case R.id.actionToggleMakeShadowSameColorAsCandle: {, + for (CandleDataSet set : mChart.getData().getDataSets()), + {, + set.setShadowColorSameAsCandle(!set.getShadowColorSameAsCandle());, + }, +, + mChart.invalidate();, + break;, + }, +++ b/MPChartExample/res/menu/candle.xml, + <item, + android:id="@+id/actionToggleMakeShadowSameColorAsCandle", + android:title="Toggle shadow same color">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, + case R.id.actionToggleMakeShadowSameColorAsCandle: {, + for (CandleDataSet set : mChart.getData().getDataSets()), + {, + set.setShadowColorSameAsCandle(!set.getShadowColorSameAsCandle());, + }, +, + mChart.invalidate();, + break;, + }, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java, + /** use candle color for the shadow
[+++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleAutoScaleMinMax", + android:title="Toggle auto scale min/max">, + </item>, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleAutoScaleMinMax", + android:title="Toggle auto scale min/max">, + </item>, +++ b/MPChartExample/res/menu/bubble.xml, + <item, + android:id="@+id/actionToggleAutoScaleMinMax", + android:title="Toggle auto scale min/max">, + </item>, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleAutoScaleMinMax", + android:title="Toggle auto scale min/max">, + </item>, +++ b/MPChartExample/res/menu/bubble.xml, + <item, + android:id="@+id/actionToggleAutoScaleMinMax", + android:title="Toggle auto scale min/max">, + </item>, +++ b/MPChartExample/res/menu/candle.xml, + <item, + android:id="@+id/actionToggleAutoScaleMinMax", + android:title="Toggle auto scale min/max">, + </item>, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleAutoScaleMinMax", + android:title="Toggle auto scale min/max">, + </item>, +++ b/MPChartExample/res/menu/bubble.xml, + <item, + android:id="@+id/actionToggleAutoScaleMinMax", + android:title="Toggle
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, + this.setComputedColors(colors);, + this.setComputedLabels(labels);, + if(mColors != null && colors.size() == mColors.length){, + Utils.copyIntegers(colors, mColors);, + }else {, + }, + if(mLabels != null && mLabels.length == labels.size()){, + Utils.copyStrings(labels, mLabels);, + }else {, + }, + if(mExtraColors != null && mExtraColors.length == colors.size()){, + Utils.copyIntegers(colors, mExtraColors);, + }else {, + }, +, + if(mExtraLabels != null && mExtraLabels.length == labels.size()){, + Utils.copyStrings(labels, mExtraLabels);, + }else {, + }, + this.setComputedColors(colors);, + this.setComputedLabels(labels);, + private boolean isCalculatedLineSizesArrayListResized = true;, + if(mCalculatedLineSizes == null || isCalculatedLineSizesArrayListResized){, +, + mCalculatedLineSizes = calculatedLineSizesForCalculateDimensions, + .toArray(new FSize[calculatedLineSizesForCalculateDimensions.size()]);, +, + isCalculatedLineSizesArrayListResized =
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/XAxis.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/XAxis.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + if(mTrans != null) {, +, + }, + if (mViewPortHandler != null && mViewPortHandler.contentWidth() > 10 && !mViewPortHandler.isFullyZoomedOutY()) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/XAxis.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + if(mTrans != null) {, +, + }, + if (mViewPortHandler != null && mViewPortHandler.contentWidth() > 10 && !mViewPortHandler.isFullyZoomedOutY()) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java, + if(mTrans != null) {, +, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/XAxis.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + if(mTrans != null) {, +, + }, + if (mViewPortHandler != null && mViewPortHandler.contentWidth() > 10 && !mViewPortHandler.isFullyZoomedOutY()) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java, + if(mTrans != null) {, +, + }, +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java, +package com.github.mikephil.charting.test;, +,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="38", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="38", +++ b/MPChartExample/build.gradle, + versionCode 38, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="38", +++ b/MPChartExample/build.gradle, + versionCode 38, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + leftAxis.setSpaceTop(15f);, + rightAxis.setSpaceTop(15f);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="38", +++ b/MPChartExample/build.gradle, + versionCode 38, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + leftAxis.setSpaceTop(15f);, + rightAxis.setSpaceTop(15f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + // in case all values are equal, + if (leftRange == 0f), + maxLeft = maxLeft + 1f;, +, + if (rightRange == 0f), + maxRight = maxRight + 1f;, +, + offsetLeft += mAxisLeft.getRequiredWidthSpace(mAxisRendererLeft, + .getPaintAxisLabels());, + offsetRight += mAxisRight.getRequiredWidthSpace(mAxisRendererRight, + .getPaintAxisLabels());, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="38", +++ b/MPChartExample/build.gradle, + versionCode 38, +++
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import android.graphics.DashPathEffect;, + set1.setFormLineWidth(1f);, + set1.setFormLineDashEffect(new DashPathEffect(new float[]{10f, 5f}, 0f));, + set1.setFormSize(15.f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import android.graphics.DashPathEffect;, + set1.setFormLineWidth(1f);, + set1.setFormLineDashEffect(new DashPathEffect(new float[]{10f, 5f}, 0f));, + set1.setFormSize(15.f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + // make sure the data cannot be drawn outside the content-rect, + int clipRestoreCount = canvas.save();, + canvas.clipRect(mViewPortHandler.getContentRect());, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import android.graphics.DashPathEffect;, + set1.setFormLineWidth(1f);, + set1.setFormLineDashEffect(new DashPathEffect(new float[]{10f, 5f}, 0f));, + set1.setFormSize(15.f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + // make sure the data cannot be drawn outside the content-rect, + int clipRestoreCount = canvas.save();, + canvas.clipRect(mViewPortHandler.getContentRect());, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, + mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import android.graphics.DashPathEffect;, + set1.setFormLineWidth(1f);, +
[+++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/BarDataTest.java, +package com.github.mikephil.charting.test;, +, +import com.github.mikephil.charting.data.BarData;, +import com.github.mikephil.charting.data.BarDataSet;, +import com.github.mikephil.charting.data.BarEntry;, +, +import org.junit.Test;, +, +import java.util.ArrayList;, +import java.util.List;, +, +import static junit.framework.Assert.assertEquals;, +, +/**, + * Created by philipp on 06/06/16., + */, +public class BarDataTest {, +, + @Test, + public void testGroupBars() {, +, + float groupSpace = 5f;, + float barSpace = 1f;, +, + List<BarEntry> values1 = new ArrayList<>();, + List<BarEntry> values2 = new ArrayList<>();, +, + for(int i = 0; i < 5; i++) {, + values1.add(new BarEntry(i, 50));, + values2.add(new BarEntry(i, 60));, + }, +, + BarDataSet barDataSet1 = new BarDataSet(values1, "Set1");,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.DataSet;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.DataSet;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + /**, + * Highlights the value at the given x-position in the given DataSet. Provide, + * -1 as the dataSetIndex to undo all highlighting., + *, + * @param x, + * @param dataSetIndex, + * @param stackIndex the index inside the stack - only relevant for stacked entries, + */, + public void highlightValue(float x, int dataSetIndex, int stackIndex) {, + highlightValue(new Highlight(x, dataSetIndex, stackIndex), false);, + }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + /**, + * Highlights the value at the given x-position in the given DataSet. Provide, + * -1 as the dataSetIndex to
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + float barSpace = 0.02f; // x3 dataset, + float barWidth = 0.3f; // x3 dataset, + // (0.3 + 0.02) * 3 + 0.04 = 1.00 -> interval per "group", +, + mChart.getXAxis().setAxisMaxValue(mChart.getBarData().getGroupWidth(groupSpace, barSpace) * mSeekBarX.getProgress() + startYear);, + mChart.groupBars(startYear, groupSpace, barSpace);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + float barSpace = 0.02f; // x3 dataset, + float barWidth = 0.3f; // x3 dataset, + // (0.3 + 0.02) * 3 + 0.04 = 1.00 -> interval per "group", +, + mChart.getXAxis().setAxisMaxValue(mChart.getBarData().getGroupWidth(groupSpace, barSpace) * mSeekBarX.getProgress() + startYear);, + mChart.groupBars(startYear, groupSpace, barSpace);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/BarBuffer.java, + public BarBuffer(int size, int dataSetCount, boolean
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +// if (mXAxis == null || !mXAxis.isEnabled()), +// return;, +//, +// if (!mXAxis.isAxisModulusCustom()) {, +//, +// float[] values = new float[9];, +// mViewPortHandler.getMatrixTouch().getValues(values);, +//, +// mXAxis.mAxisLabelModulus = (int) Math, +// .ceil((mData.getXValCount() * mXAxis.mLabelRotatedWidth), +// / (mViewPortHandler.contentWidth() * values[Matrix.MSCALE_X]));, +//, +// }, +//, +// if (mLogEnabled), +// Log.i(LOG_TAG, "X-Axis modulus: " + mXAxis.mAxisLabelModulus +, +// ", xPx-axis label width: " + mXAxis.mLabelWidth +, +// ", xPx-axis label rotated width: " + mXAxis.mLabelRotatedWidth +, +// ", content width: " + mViewPortHandler.contentWidth());, +//, +// if (mXAxis.mAxisLabelModulus < 1), +// mXAxis.mAxisLabelModulus = 1;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +// if (mXAxis == null ||
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.github.mikephil.charting.data.realm.implementation.RealmBarDataSet;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, + protected int mNeutralColor = ColorTemplate.COLOR_SKIP;, + protected int mIncreasingColor = ColorTemplate.COLOR_SKIP;, + protected int mDecreasingColor = ColorTemplate.COLOR_SKIP;, + protected int mShadowColor = ColorTemplate.COLOR_SKIP;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, + protected int mNeutralColor = ColorTemplate.COLOR_SKIP;, + protected int mIncreasingColor = ColorTemplate.COLOR_SKIP;, + protected int mDecreasingColor = ColorTemplate.COLOR_SKIP;, + protected int mShadowColor = ColorTemplate.COLOR_SKIP;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java, +import android.graphics.Color;, + } else if (dataSet instanceof ICandleDataSet && ((ICandleDataSet) dataSet).getDecreasingColor() !=, + ColorTemplate.COLOR_NONE) {, + int decreasingColor = ((ICandleDataSet) dataSet).getDecreasingColor();, + colors.add(decreasingColor);, +, + int increasingColor = ((ICandleDataSet) dataSet).getIncreasingColor();, + colors.add(increasingColor);, +, + posX += direction == Legend.LegendDirection.RIGHT_TO_LEFT ? -formToTextSpace :, + formToTextSpace;]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java, + protected float mTextSize = Utils.convertDpToPixel(10f);]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + ArrayList<String> xVals = new ArrayList<String>();,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + final Runnable runnable = new Runnable() {, +, + @Override, + public void run() {, + addEntry();, + }, + };, +, + // Don't generate garbage runnables inside the loop., + runOnUiThread(runnable);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + final Runnable runnable = new Runnable() {, +, + @Override, + public void run() {, + addEntry();, + }, + };, +, + // Don't generate garbage runnables inside the loop., + runOnUiThread(runnable);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + public void getEntriesAtIndex(int xIndex, List<Entry> entriesOutput){, +, + List<Entry> vals = entriesOutput;, + vals.clear();, +, + for (int i = 0; i < mData.getDataSetCount();
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/assets/nlogn.txt, +O(nlogn), +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function, +++ b/MPChartExample/assets/hugecosine.txt, +Huge cosine, +++ b/MPChartExample/assets/hugesine.txt, +Huge sine, +++ b/MPChartExample/assets/n.txt, +O(n), +++ b/MPChartExample/assets/nlogn.txt, +O(nlogn), +++ b/MPChartExample/assets/sine.txt, +Sine function, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/assets/cosine.txt, +Cosine function,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + public boolean isAutomaticallyDisableSliceSpacingEnabled() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + public boolean isAutomaticallyDisableSliceSpacingEnabled() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java, + boolean isAutomaticallyDisableSliceSpacingEnabled();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + public boolean isAutomaticallyDisableSliceSpacingEnabled() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java, + boolean isAutomaticallyDisableSliceSpacingEnabled();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + if (!dataSet.isAutomaticallyDisableSliceSpacingEnabled())]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ /dev/null, +++
[+++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java, +import com.github.mikephil.charting.formatter.DefaultXAxisValueFormatter;, + protected XAxisValueFormatter mXAxisValueFormatter = new DefaultXAxisValueFormatter();, + mXAxisValueFormatter = new DefaultXAxisValueFormatter();, +++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java, +import com.github.mikephil.charting.formatter.DefaultXAxisValueFormatter;, + protected XAxisValueFormatter mXAxisValueFormatter = new DefaultXAxisValueFormatter();, + mXAxisValueFormatter = new DefaultXAxisValueFormatter();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java, + List<ChartData> data = new ArrayList<ChartData>();, +++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java, +import com.github.mikephil.charting.formatter.DefaultXAxisValueFormatter;, + protected XAxisValueFormatter mXAxisValueFormatter = new DefaultXAxisValueFormatter();, + mXAxisValueFormatter = new DefaultXAxisValueFormatter();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java, + List<ChartData> data = new ArrayList<ChartData>();, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/components/XAxis.java, +import com.github.mikephil.charting.formatter.DefaultXAxisValueFormatter;, + protected XAxisValueFormatter mXAxisValueFormatter = new DefaultXAxisValueFormatter();, + mXAxisValueFormatter = new DefaultXAxisValueFormatter();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java, + List<ChartData> data = new ArrayList<ChartData>();, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/formatter/DefaultXAxisValueFormatter.java, +package com.github.mikephil.charting.formatter;, +, +import com.github.mikephil.charting.utils.ViewPortHandler;,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.2', + classpath 'com.android.tools.build:gradle:1.5.0', +, + compile 'com.android.support:appcompat-v7:23.1.1', +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.2', + classpath 'com.android.tools.build:gradle:1.5.0', +, + compile 'com.android.support:appcompat-v7:23.1.1', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.2', + classpath 'com.android.tools.build:gradle:1.5.0', +, + compile 'com.android.support:appcompat-v7:23.1.1', +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.DataSet;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.2', + classpath 'com.android.tools.build:gradle:1.5.0', +, + compile 'com.android.support:appcompat-v7:23.1.1', +++
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="36", + android:versionName="2.1.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="36", + android:versionName="2.1.2" >, +++ b/MPChartExample/build.gradle, + versionCode 36, + versionName '2.1.1', + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1' , +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="36", + android:versionName="2.1.2" >, +++ b/MPChartExample/build.gradle, + versionCode 36, + versionName '2.1.1', + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1' , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +import com.github.mikephil.charting.utils.ColorTemplate;, + , + mChart.getAxisRight().setEnabled(false);, + //set1.setDrawFilled(true);, + set1.setFillColor(ColorTemplate.getHoloBlue());, + LineData data = new LineData(xVals, set1);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="36", + android:versionName="2.1.2" >, +++ b/MPChartExample/build.gradle, + versionCode 36, + versionName '2.1.1', + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1' , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +import com.github.mikephil.charting.utils.ColorTemplate;, + , + mChart.getAxisRight().setEnabled(false);, + //set1.setDrawFilled(true);, + set1.setFillColor(ColorTemplate.getHoloBlue());, + LineData data =
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 15, + versionName '1.3.3', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 15, + versionName '1.3.3', +++ b/MPChartExample/res/layout/activity_radarchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.RadarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 15, + versionName '1.3.3', +++ b/MPChartExample/res/layout/activity_radarchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent"
[+++ b/MPChartExample/project.properties, +target=android-20, +++ b/MPChartExample/project.properties, +target=android-20, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Paint;, +import com.github.mikephil.charting.charts.Chart;, + // sets the text size of the values inside the chart, + mChart.setValueTextSize(10f);, +, +++ b/MPChartExample/project.properties, +target=android-20, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Paint;, +import com.github.mikephil.charting.charts.Chart;, + // sets the text size of the values inside the chart, + mChart.setValueTextSize(10f);, +, +++ b/MPChartLib/project.properties, +target=android-20, +++ b/MPChartExample/project.properties, +target=android-20, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Paint;, +import com.github.mikephil.charting.charts.Chart;, + // sets the text size of the values inside the chart, + mChart.setValueTextSize(10f);, +, +++ b/MPChartLib/project.properties, +target=android-20, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + Paint p = super.getPaint(which);, + if(p != null) return p;, +++ b/MPChartExample/project.properties, +target=android-20, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + if (Double.isInfinite(rawInterval)), + {, + rawInterval = range > 0.0 ? range : 1.0;, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + if (Double.isInfinite(rawInterval)), + {, + rawInterval = range > 0.0 ? range : 1.0;, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java, + if (Double.isInfinite(rawInterval)), + {, + rawInterval = range > 0.0 ? range : 1.0;, + }]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java, + result.yAxis = axis;, + result.xAxisRange = xAxisRange;]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.utils.MPPointD;, + MPPointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, + MPPointD.recycleInstance(origin);, + MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, + MPPointD.recycleInstance(bounds);, + MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, + MPPointD.recycleInstance(bounds);, + * Returns a recyclable MPPointD instance, + * (encapsulated in a MPPointD). This method transforms pixel coordinates to, + public MPPointD getValuesByTouchPoint(float x, float y, AxisDependency axis) {, + MPPointD result = MPPointD.getInstance(0,0);, + public void getValuesByTouchPoint(float x, float y, AxisDependency axis, MPPointD outputPoint){, + * Returns a recyclable MPPointD instance, + public MPPointD getPixelsForValues(float x, float y, AxisDependency axis) {, + MPPointD pointForGetYValueByTouchPoint = MPPointD.getInstance(0,0);, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java, + PointD pos = getValsForTouch(y, x);]
[+++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, + android:layout_weight="0.6", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, + android:layout_weight="0.6", +++ b/MPChartExample/res/layout/radar_markerview.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="55dp", + android:layout_height="40dp", + android:background="@drawable/radar_marker" >, +, + <TextView, + android:id="@+id/tvContent", + android:layout_width="wrap_content", + android:layout_height="wrap_content", + android:layout_alignParentTop="true", + android:layout_centerHorizontal="true", + android:layout_marginTop="3dp", + android:layout_marginLeft="5dp", + android:layout_marginRight="5dp", + android:text="", + android:textSize="10dp", + android:textColor="@android:color/white", + android:ellipsize="end", + android:singleLine="true", + android:textAppearance="?android:attr/textAppearanceSmall" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, + android:layout_weight="0.6", +++ b/MPChartExample/res/layout/radar_markerview.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="55dp", + android:layout_height="40dp", + android:background="@drawable/radar_marker" >, +, + <TextView, + android:id="@+id/tvContent", + android:layout_width="wrap_content", + android:layout_height="wrap_content", + android:layout_alignParentTop="true", + android:layout_centerHorizontal="true", + android:layout_marginTop="3dp", + android:layout_marginLeft="5dp",
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="13", + android:versionName="1.3.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="13", + android:versionName="1.3.1" >, +++ b/MPChartExample/build.gradle, + versionCode 13, + versionName '1.3.1']
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="ScrollViewActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="ScrollViewActivity"></activity>, +++ b/MPChartExample/res/layout/activity_scrollview.xml, +<?xml version="1.0" encoding="utf-8"?>, +<ScrollView xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="wrap_content" >, +, + <LinearLayout, + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:orientation="vertical" >, + , + <TextView, + android:layout_width="match_parent", + android:layout_height="30dp", + android:gravity="center", + android:text="START OF SCROLLVIEW" />, +, + <!-- THIS IS JUST A PLACEHOLDER -->, +, + <View, + android:layout_width="match_parent", + android:layout_height="350dp" />, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="450dp" />, +, + <!-- THIS IS JUST A PLACEHOLDER -->, +, + <View, + android:layout_width="match_parent", + android:layout_height="700dp" />, + , + <TextView, + android:layout_width="match_parent", + android:layout_height="30dp",
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, +import android.graphics.Color;, +import com.github.mikephil.charting.utils.ColorTemplate;, + holder.chart.setValueTextColor(Color.WHITE);, + d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, + d.setBarShadowColor(Color.rgb(203, 203, 203));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, +import android.graphics.Color;, +import com.github.mikephil.charting.utils.ColorTemplate;, + holder.chart.setValueTextColor(Color.WHITE);, + d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, + d.setBarShadowColor(Color.rgb(203, 203, 203));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +// d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, + d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, + d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, +import android.graphics.Color;, +import com.github.mikephil.charting.utils.ColorTemplate;, + holder.chart.setValueTextColor(Color.WHITE);, + d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, + d.setBarShadowColor(Color.rgb(203, 203, 203));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +// d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, + d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, + d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/BarChartItem.java, + holder.chart.setDrawBarShadow(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, +import android.graphics.Color;, +import com.github.mikephil.charting.utils.ColorTemplate;, + holder.chart.setValueTextColor(Color.WHITE);, + d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, + d.setBarShadowColor(Color.rgb(203, 203, 203));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +// d.setColors(ColorTemplate.VORDIPLOM_COLORS, getApplicationContext());, + d.setColors(ColorTemplate.VORDIPLOM_COLORS,
[+++ b/MPChartExample/res/menu/radar.xml, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item, + android:id="@+id/animateXY", + android:title="Animate XY">, + </item>, + <item, +++ b/MPChartExample/res/menu/radar.xml, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item, + android:id="@+id/animateXY", + android:title="Animate XY">, + </item>, + <item, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, + mChart.animateXY(, + 1400, 1400,, + Easing.EasingOption.EaseInOutQuad,, + Easing.EasingOption.EaseInOutQuad);, +, + case R.id.animateX: {, + mChart.animateX(1400);, + break;, + }, + case R.id.animateY: {, + mChart.animateY(1400);, + break;, + }, + case R.id.animateXY: {, + mChart.animateXY(1400, 1400);, + break;,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DynamicalAddingActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DynamicalAddingActivity"></activity>, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DynamicalAddingActivity"></activity>, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/menu/dynamical.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionAddEntry", + android:title="Add Entry">, + </item>, + , + <item, + android:id="@+id/actionRemoveEntry", + android:title="Remove Entry">, + </item>, + , +</menu>,
[+++ b/Projects_using_MPAndroidChart.txt, +, +Яндекс Метрика для Android, +https://play.google.com/store/apps/details?id=ru.vdmodule.androidmetrix]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + // draw shadows for each bar that show the maximum value, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + // draw shadows for each bar that show the maximum value, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + // draw shadows for each bar that show the maximum value, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + // draw shadows for each bar that show the maximum value, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + // draw shadows for each bar that show the maximum value, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java, + // this will cause the marker-view to be above the selected value, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + // draw shadows for each bar that show the maximum value,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + mGridClippingRect.inset(-mAxis.getGridLineWidth(), 0.f);, + mLimitLineClippingRect.inset(-l.getLineWidth(), 0.f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + mGridClippingRect.inset(-mAxis.getGridLineWidth(), 0.f);, + mLimitLineClippingRect.inset(-l.getLineWidth(), 0.f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java, + mGridClippingRect.inset(0.f, -mAxis.getGridLineWidth());, + mLimitLineClippingRect.inset(0.f, -l.getLineWidth());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + mGridClippingRect.inset(-mAxis.getGridLineWidth(), 0.f);, + mLimitLineClippingRect.inset(-l.getLineWidth(), 0.f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java, + mGridClippingRect.inset(0.f, -mAxis.getGridLineWidth());, + mLimitLineClippingRect.inset(0.f, -l.getLineWidth());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java, + mGridClippingRect.inset(0.f, -mAxis.getGridLineWidth());, + mZeroLineClippingRect.inset(0.f, -mYAxis.getZeroLineWidth());, + zeroLinePath.moveTo(mViewPortHandler.contentLeft(), (float) pos.y);, + zeroLinePath.lineTo(mViewPortHandler.contentRight(), (float) pos.y);, + mLimitLineClippingRect.inset(0.f, -l.getLineWidth());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + mGridClippingRect.inset(-mAxis.getGridLineWidth(), 0.f);, + mLimitLineClippingRect.inset(-l.getLineWidth(), 0.f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java, + mGridClippingRect.inset(0.f, -mAxis.getGridLineWidth());, + mLimitLineClippingRect.inset(0.f, -l.getLineWidth());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java, + mGridClippingRect.inset(0.f, -mAxis.getGridLineWidth());, + mZeroLineClippingRect.inset(0.f, -mYAxis.getZeroLineWidth());, + zeroLinePath.moveTo(mViewPortHandler.contentLeft(), (float) pos.y);, + zeroLinePath.lineTo(mViewPortHandler.contentRight(), (float) pos.y);, + mLimitLineClippingRect.inset(0.f, -l.getLineWidth());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java, + mGridClippingRect.inset(-mAxis.getGridLineWidth(), 0.f);,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.IHighlighter;, + protected IHighlighter mHighlighter;, + public IHighlighter getHighlighter() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.IHighlighter;, + protected IHighlighter mHighlighter;, + public IHighlighter getHighlighter() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> implements IHighlighter, +{, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.IHighlighter;, + protected IHighlighter mHighlighter;, + public IHighlighter getHighlighter() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> implements IHighlighter, +{, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java, +public class CombinedHighlighter extends ChartHighlighter<CombinedDataProvider> implements IHighlighter, +{, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.IHighlighter;, + protected IHighlighter mHighlighter;, + public IHighlighter getHighlighter() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> implements IHighlighter, +{, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java, +public class CombinedHighlighter extends ChartHighlighter<CombinedDataProvider>
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, +++ b/MPChartExample/build.gradle, + versionCode 16, + versionName '1.4.1', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, +++ b/MPChartExample/build.gradle, + versionCode 16, + versionName '1.4.1', +++ b/MPChartExample/res/menu/radar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionToggleValues", + android:title="Toggle Values">, + </item>, + <item, + android:id="@+id/actionToggleFilled", + android:title="Toggle Filled">, + </item>, + <item, + android:id="@+id/actionToggleHighlight", + android:title="Toggle Highlight">, + </item>, + <item, + android:id="@+id/actionSave", + android:title="Save to SD">, + </item>, + <item, + android:id="@+id/actionToggleRotate", + android:title="Toggle Rotation">, + </item>, + <item, + android:id="@+id/actionToggleYLabels", + android:title="Toggle Y-Labels">,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + @Override, + protected void calcMinMax(PieEntry e) {, +, + if (e == null), + return;, +, + if (e.getY() < mYMin), + mYMin = e.getY();, +, + if (e.getY() > mYMax), + mYMax = e.getY();, + }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + @Override, + protected void calcMinMax(PieEntry e) {, +, + if (e == null), + return;, +, + if (e.getY() < mYMin), + mYMin = e.getY();, +, + if (e.getY() > mYMax), + mYMax = e.getY();, + }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieEntry.java, +import android.util.Log;, + Log.i("DEPRECATED", "Pie entries do not have x values");, + Log.i("DEPRECATED", "Pie entries
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + xAxis.setTextSize(11f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + xAxis.setTextSize(11f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mXAxisRenderer.computeAxis(mXAxis.mAxisMinimum, mXAxis.mAxisMaximum, false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + xAxis.setTextSize(11f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mXAxisRenderer.computeAxis(mXAxis.mAxisMinimum, mXAxis.mAxisMaximum, false);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + new PointF(0.5f, 0.9f));]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;, +import io.realm.Realm;, +import io.realm.RealmObject;, +import io.realm.RealmResults;, +, + RealmResults<RealmDemoData> result = Realm.getDefaultInstance().allObjects(RealmDemoData.class);, +, + RealmLineDataSet set = new RealmLineDataSet(result);, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + private boolean mDragXEnabled = true;, + private boolean mDragYEnabled = true;, + this.mDragXEnabled = enabled;, + this.mDragYEnabled = enabled;, + return mDragXEnabled || mDragYEnabled;, + }, +, + /**, + * Set this to true to enable dragging on the X axis, + *, + * @param enabled, + */, + public void setDragXEnabled(boolean enabled) {, + this.mDragXEnabled = enabled;, + }, +, + /**, + * Returns true if dragging on the X axis is enabled for the chart, false if not., + *, + * @return, + */, + public boolean isDragXEnabled() {, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (mChart.isDoubleTapToZoomEnabled() && mChart.getData().getEntryCount() > 0) {]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, + int entryCount = mData.getEntryCount();, +, + mDrawAngles = new float[entryCount];, + mAbsoluteAngles = new float[entryCount];, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, + int entryCount = mData.getEntryCount();, +, + mDrawAngles = new float[entryCount];, + mAbsoluteAngles = new float[entryCount];, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, + public int getMaxVisibleCount() {, + return mData.getEntryCount();, + }, +, + @Override, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, + int entryCount = mData.getEntryCount();, +, + mDrawAngles = new float[entryCount];, + mAbsoluteAngles = new float[entryCount];, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java,
[+++ b/.github/ISSUE_TEMPLATE.md, +<!---, +BEFORE YOU SUBMIT please read the following:, +, +Please search open/closed issues before submitting since someone might have asked, +the same thing before!, +, +If you have a support request or question please submit them on StackOverflow:, + https://stackoverflow.com/questions/tagged/mpandroidchart, +using the tags `android` & `mpandroidchart`, +, +Please also look at the CONTRIBUTING file before opening an issue:, + https://github.com/PhilJay/MPAndroidChart/blob/master/CONTRIBUTING.md, +, +Issues on GitHub are only related to problems with MPAndroidChart itself and we, +cannot answer support questions here. We will close your issue without a response., +-->, +, +**Summary**, +<!-- A clear and concise description of
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java, + float phaseX, float phaseY,, + int min, int max) {, + final int count = ((int) ((max - min) * phaseX) + 1) * 2;, + Entry e = data.getEntryForIndex(j / 2 + min);]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java, + return isInBoundsLeft(x) && isInBoundsRight(x);, + return isInBoundsTop(y) && isInBoundsBottom(y);, + return isInBoundsX(x) && isInBoundsY(y);, + return mContentRect.left <= x + 1;, + return mContentRect.right >= x - 1;, + return mContentRect.top <= y;, + return mContentRect.bottom >= y;, + return isFullyZoomedOutX() && isFullyZoomedOutY();, + return !(mScaleY > mMinScaleY || mMinScaleY > 1f);, + return !(mScaleX > mMinScaleX || mMinScaleX > 1f);, + return mScaleX > mMinScaleX;, + return mScaleX < mMaxScaleX;, + return mScaleY > mMinScaleY;, + return mScaleY < mMaxScaleY;]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + mData = data;, + mOffsetsCalculated = false;, +, + mOffsetsCalculated = false;, + * Removes all DataSets (and thereby Entries) from the chart. Does not set the data object to null. Also refreshes the, + * chart by calling invalidate().]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="18", + android:versionName="1.5.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="18", + android:versionName="1.5.1" >, +++ b/MPChartExample/build.gradle, + versionCode 18, + versionName '1.5.1']
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + if (sweepAngleOuter % 360f < 0.00001f) {]
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + data.setValueTextSize(9f);, + data.setDrawValues(false);, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + data.setValueTextSize(9f);, + data.setDrawValues(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setGridLineWidth(0.3f);, + yl.setGridLineWidth(0.3f);, + yr.setDrawGridLines(false);, + PointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(dataSetIndex), + .getAxisDependency());, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + data.setValueTextSize(9f);, + data.setDrawValues(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setGridLineWidth(0.3f);, + yl.setGridLineWidth(0.3f);, + yr.setDrawGridLines(false);, + PointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(dataSetIndex), + .getAxisDependency());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + data.setValueTextSize(10f);, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + data.setValueTextSize(9f);, + data.setDrawValues(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setGridLineWidth(0.3f);, + yl.setGridLineWidth(0.3f);, + yr.setDrawGridLines(false);, + PointF position =
[+++ b/Projects_using_MPAndroidChart.txt, +HI - Health & Fitness Tracker - All-in-one Diet, Health & Fitness Tracker, +https://play.google.com/store/apps/details?id=com.droidinfinity.healthplus]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + tvX = findViewById(R.id.tvXMax);, + tvY = findViewById(R.id.tvYMax);, + mSeekBarX = findViewById(R.id.seekBar1);, + mSeekBarY = findViewById(R.id.seekBar2);, + mChart = findViewById(R.id.chart1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + tvX = findViewById(R.id.tvXMax);, + tvY = findViewById(R.id.tvYMax);, + mSeekBarX = findViewById(R.id.seekBar1);, + mSeekBarY = findViewById(R.id.seekBar2);, + mChart = findViewById(R.id.chart1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + tvX = findViewById(R.id.tvXMax);, + tvY = findViewById(R.id.tvYMax);, + mSeekBarX = findViewById(R.id.seekBar1);, + mSeekBarY = findViewById(R.id.seekBar2);, + mChart = findViewById(R.id.chart1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + tvX = findViewById(R.id.tvXMax);, + tvY = findViewById(R.id.tvYMax);, + mSeekBarX = findViewById(R.id.seekBar1);, + mSeekBarY = findViewById(R.id.seekBar2);, + mChart = findViewById(R.id.chart1);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + tvX = findViewById(R.id.tvXMax);, + tvY = findViewById(R.id.tvYMax);, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + // make sure the data cannot be drawn outside the content-rect, + int clipRestoreCount = canvas.save();, + canvas.clipRect(mViewPortHandler.getContentRect());, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + // make sure the data cannot be drawn outside the content-rect, + int clipRestoreCount = canvas.save();, + canvas.clipRect(mViewPortHandler.getContentRect());, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, +import android.graphics.RectF;, + int clipRestoreCount = c.save();, + c.clipRect(getGridClippingRect());, +, +, + c.restoreToCount(clipRestoreCount);, + }, +, + protected RectF mGridClippingRect = new RectF();, +, + public RectF getGridClippingRect() {, + mGridClippingRect.set(mViewPortHandler.getContentRect());, + mGridClippingRect.inset(-mAxis.getGridLineWidth() / 2.f, 0.f);, + return mGridClippingRect;, + protected RectF mLimitLineClippingRect = new RectF();, +, + int clipRestoreCount = c.save();, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + * getPixelForValues(...)., + public MPPointD getPixelForValues(float x, float y, AxisDependency axis) {, + return getTransformer(axis).getPixelForValues(x, y);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + * getPixelForValues(...)., + public MPPointD getPixelForValues(float x, float y, AxisDependency axis) {, + return getTransformer(axis).getPixelForValues(x, y);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, + MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(high.getX(), ranges[stackIndex].to);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + * getPixelForValues(...)., + public MPPointD getPixelForValues(float x, float y, AxisDependency axis) {, + return getTransformer(axis).getPixelForValues(x, y);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, + MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(high.getX(), ranges[stackIndex].to);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(e.getX(), e.getY());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + * getPixelForValues(...)., + public MPPointD getPixelForValues(float x, float y, AxisDependency axis) {, + return getTransformer(axis).getPixelForValues(x,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ b/README.md, +Donations, +-----, +, +**This project needs you!** If you would like to support this project's further development, the creator of this project or the continuous maintenance of this project, **feel free to donate**. Your donation is highly appreciated (and I love food, coffee and beer). Thank you!, +, +**PayPal**, +, + - [**Donate 5 $**] (https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=7G52RA87ED8NY): Thank's for creating this
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarData.java, + private float mBarWidth = 0.85f;, + * Default 0.85f]
[+++ b/.gitignore, +++ b/.gitignore, +++ /dev/null, +++ b/.gitignore, +++ /dev/null, +++ /dev/null, +++ b/.gitignore, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java, +// mChart.setScaleMinima(3f, 3f);, +// mChart.centerViewPort(300, 0);, + , +++ b/.gitignore, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java, +// mChart.setScaleMinima(3f, 3f);, +// mChart.centerViewPort(300, 0);, + , +++ /dev/null, +++ b/.gitignore, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java, +// mChart.setScaleMinima(3f, 3f);, +// mChart.centerViewPort(300, 0);, + , +++ /dev/null, +++ /dev/null, +++ b/.gitignore, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/LineChartFrag.java, +// mChart.setScaleMinima(3f, 3f);, +// mChart.centerViewPort(300, 0);, + , +++ /dev/null, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + * setScaleMinima(...) method. First set the scale minima, then center
[+++ b/Projects_using_MPAndroidChart.txt, +, +H-Files, +https://play.google.com/store/apps/details?id=com.hconnect.hfiles&hl=en]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, + SQUARE("SQUARE"),, + CIRCLE("CIRCLE"),, + TRIANGLE("TRIANGLE"),, + CROSS("CROSS"),, + X("X"),, + CHEVRON_UP("CHEVRON_UP"),, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, + SQUARE("SQUARE"),, + CIRCLE("CIRCLE"),, + TRIANGLE("TRIANGLE"),, + CROSS("CROSS"),, + X("X"),, + CHEVRON_UP("CHEVRON_UP"),, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java, +import com.github.mikephil.charting.renderer.scatter.ChevronDownShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.ChevronUpShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.CircleShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.CrossShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.TriangleShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.XShapeRenderer;, + mShapeRenderer = getRendererForShape(shape);, +, + public static IShapeRenderer getRendererForShape(ScatterChart.ScatterShape shape) {, +, + switch (shape) {, + case SQUARE: return new SquareShapeRenderer();, + case CIRCLE: return new CircleShapeRenderer();, + case TRIANGLE: return new TriangleShapeRenderer();, + case CROSS: return new CrossShapeRenderer();, + case X: return new XShapeRenderer();, + case CHEVRON_UP: return new ChevronUpShapeRenderer();, + case CHEVRON_DOWN: return
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import android.graphics.DashPathEffect;, + set1.setFormLineWidth(1f);, + set1.setFormLineDashEffect(new DashPathEffect(new float[]{10f, 5f}, 0f));, + set1.setFormSize(15.f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import android.graphics.DashPathEffect;, + set1.setFormLineWidth(1f);, + set1.setFormLineDashEffect(new DashPathEffect(new float[]{10f, 5f}, 0f));, + set1.setFormSize(15.f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, +import android.graphics.DashPathEffect;, + * Line dash path effect used for shapes that consist of lines., + */, + private DashPathEffect mFormLineDashEffect = null;, +, + /**, + * Sets the line dash path effect used for shapes that consist of lines., + *, + * @param dashPathEffect, + */, + public void setFormLineDashEffect(DashPathEffect dashPathEffect) {, + mFormLineDashEffect = dashPathEffect;, + }, +, + /**, + * @return The line
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, + ((LineDataSet) data.getDataSetByIndex(0)).setCircleHoleColor(color);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, + ((LineDataSet) data.getDataSetByIndex(0)).setCircleHoleColor(color);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + List<BarEntry> entries = new ArrayList<BarEntry>();, + entries.add(mValues.get(i).copy());, + }, + BarDataSet copied = new BarDataSet(entries, getLabel());, + copy(copied);, + return copied;, + protected void copy(BarDataSet barDataSet) {, + super.copy(barDataSet);, + barDataSet.mStackSize = mStackSize;, + barDataSet.mBarShadowColor = mBarShadowColor;, + barDataSet.mBarBorderWidth = mBarBorderWidth;, + barDataSet.mStackLabels = mStackLabels;, + barDataSet.mHighLightAlpha = mHighLightAlpha;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, + ((LineDataSet) data.getDataSetByIndex(0)).setCircleHoleColor(color);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + List<BarEntry> entries = new ArrayList<BarEntry>();, + entries.add(mValues.get(i).copy());, + }, + BarDataSet copied = new BarDataSet(entries, getLabel());, + copy(copied);, + return copied;, + protected void copy(BarDataSet barDataSet) {, + super.copy(barDataSet);,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="29", + android:versionName="1.7.4" >, + <activity android:name="LineChartActivity1"></activity>, + <activity android:name="LineChartActivity2"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="29", + android:versionName="1.7.4" >, + <activity android:name="LineChartActivity1"></activity>, + <activity android:name="LineChartActivity2"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 29, + versionName '1.7.4', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="29", + android:versionName="1.7.4" >, + <activity android:name="LineChartActivity1"></activity>, + <activity android:name="LineChartActivity2"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 29, + versionName '1.7.4', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-4.jar, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="29", + android:versionName="1.7.4" >, + <activity android:name="LineChartActivity1"></activity>, + <activity android:name="LineChartActivity2"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 29, + versionName '1.7.4', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-4.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="29", + android:versionName="1.7.4" >, + <activity android:name="LineChartActivity1"></activity>, + <activity android:name="LineChartActivity2"></activity>, +++ b/MPChartExample/build.gradle, + versionCode
[+++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, +++ b/MPChartExample/res/menu/bubble.xml, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, +++ b/MPChartExample/res/menu/bubble.xml, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, +++ b/MPChartExample/res/menu/candle.xml, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, +++ b/MPChartExample/res/menu/bubble.xml, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, +++ b/MPChartExample/res/menu/candle.xml, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + data.setValueFormatter(new LargeValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + data.setValueFormatter(new LargeValueFormatter());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, + * Sets the size of the center text of the PieChart in dp., + public void setCenterTextSize(float sizeDp) {, + Utils.convertDpToPixel(sizeDp));, + }, +, + /**, + * Sets the size of the center text of the PieChart in pixels., + * , + * @param size, + */, + public void setCenterTextSizePixels(float sizePixels) {, + ((PieChartRenderer) mRenderer).getPaintCenterText().setTextSize(sizePixels);, + }, +, + /**, + * Sets the color of the center text of the PieChart., + * , + * @param color, + */, + public
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, + XAxis xLabels = mChart.getXAxis();, + xLabels.setPosition(XAxisPosition.BOTTOM);, + xLabels.setSpaceBetweenLabels(2);, + YAxis yLabels = mChart.getAxisLeft(); , + yLabels.setLabelCount(7);, + yLabels.setDrawGridLines(false);, + yLabels.setDrawAxisLine(false);, + mChart.getAxisRight().setEnabled(false);, +, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, + XAxis xLabels = mChart.getXAxis();, + xLabels.setPosition(XAxisPosition.BOTTOM);, + xLabels.setSpaceBetweenLabels(2);, + YAxis yLabels = mChart.getAxisLeft(); , + yLabels.setLabelCount(7);, + yLabels.setDrawGridLines(false);, + yLabels.setDrawAxisLine(false);, + mChart.getAxisRight().setEnabled(false);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, + XAxis xLabels = mChart.getXAxis();, + xLabels.setPosition(XAxisPosition.BOTTOM);, + xLabels.setSpaceBetweenLabels(2);, + YAxis yLabels = mChart.getAxisLeft(); ,
[+++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.3', +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.3', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + /**, + * Centers the axis labels instead of drawing them at their original position., + * This is useful especially for grouped BarChart., + *, + * @param enabled, + */, +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.3', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + /**, + * Centers the axis labels instead of drawing them at their original position., + * This is useful especially for grouped BarChart., + *, + * @param enabled, + */, +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.3', +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.3', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + /**,
[+++ b/MPChartExample/res/menu/line.xml, + </item>, + <item, + android:id="@+id/actionToggleStepped", + android:title="Toggle Stepped">, +++ b/MPChartExample/res/menu/line.xml, + </item>, + <item, + android:id="@+id/actionToggleStepped", + android:title="Toggle Stepped">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + case R.id.actionToggleStepped: {, + List<ILineDataSet> sets = mChart.getData(), + .getDataSets();, +, + for (ILineDataSet iSet : sets) {, +, + LineDataSet set = (LineDataSet) iSet;, + if (set.isDrawSteppedEnabled()), + set.setDrawStepped(false);, + else, + set.setDrawStepped(true);, + }, + mChart.invalidate();, + break;, + }, +++ b/MPChartExample/res/menu/line.xml, + </item>, + <item, + android:id="@+id/actionToggleStepped", + android:title="Toggle Stepped">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + case R.id.actionToggleStepped: {, + List<ILineDataSet> sets = mChart.getData(), + .getDataSets();, +, + for (ILineDataSet iSet : sets) {,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, + android:text="Draw Chart" />, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="View on GitHub" />, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, + android:text="Draw Chart" />, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="View on GitHub" />, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml,
[+++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.XAxis.XLabelPosition;, +import com.github.mikephil.charting.data.DataSet;, + XAxis xAxis = mChart.getXAxis();, + xAxis.setPosition(XLabelPosition.BOTTOM);, + xAxis.setCenterXLabelText(true);, + xAxis.setSpaceBetweenLabels(0);, +, + for (DataSet<?> set : mChart.getData().getDataSets()), + set.setDrawValues(!set.isDrawValuesEnabled());, +, + XAxis xAxis = mChart.getXAxis();, + if (xAxis.isAdjustXLabelsEnabled()), + xAxis.setAdjustXLabels(false);, + xAxis.setAdjustXLabels(true);, + xVals.add((int) yVals1.get(i).getVal() + "");, + set1.setDrawValues(false);, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.XAxis.XLabelPosition;, +import com.github.mikephil.charting.data.DataSet;, + XAxis xAxis = mChart.getXAxis();, + xAxis.setPosition(XLabelPosition.BOTTOM);, + xAxis.setCenterXLabelText(true);, + xAxis.setSpaceBetweenLabels(0);, +, + for (DataSet<?> set : mChart.getData().getDataSets()), + set.setDrawValues(!set.isDrawValuesEnabled());, +, + XAxis xAxis = mChart.getXAxis();, + if (xAxis.isAdjustXLabelsEnabled()), + xAxis.setAdjustXLabels(false);, + xAxis.setAdjustXLabels(true);, + xVals.add((int) yVals1.get(i).getVal() +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue value = new XAxisValue(i, mMonths[i % 12]);, + xVals.add(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals =
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="10", + android:versionName="1.1.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="10", + android:versionName="1.1.2" >, +++ b/MPChartExample/build.gradle, + versionCode 10, + versionName '1.1.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="10", + android:versionName="1.1.2" >, +++ b/MPChartExample/build.gradle, + versionCode 10, + versionName '1.1.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {, + for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="10", + android:versionName="1.1.2" >, +++ b/MPChartExample/build.gradle, + versionCode 10, + versionName '1.1.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (int i = 0; i < mSeekBarX.getProgress()+1; i++) {, + for (int i = 0; i < mSeekBarX.getProgress()+1; i++)
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivityNegative"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivityNegative"></activity>, +++ b/MPChartExample/res/layout/activity_age_distribution.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.HorizontalBarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/white" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivityNegative"></activity>, +++ b/MPChartExample/res/layout/activity_age_distribution.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.HorizontalBarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/white" />, +, +</RelativeLayout>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + // dataSets.add(set3);, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivityNegative"></activity>, +++ b/MPChartExample/res/layout/activity_age_distribution.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.HorizontalBarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, + protected Paint.FontMetrics fontMetricsForCalculateDimensions = new Paint.FontMetrics();, + ArrayList<FSize> calculatedLineSizesForCalculateDimensions = new ArrayList<>();, + float labelLineHeight = Utils.getLineHeight(labelpaint, fontMetricsForCalculateDimensions);, + float labelLineHeight = Utils.getLineHeight(labelpaint, fontMetricsForCalculateDimensions);, + float labelLineSpacing = Utils.getLineSpacing(labelpaint, fontMetricsForCalculateDimensions) + mYEntrySpace;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, + protected Paint.FontMetrics fontMetricsForCalculateDimensions = new Paint.FontMetrics();, + ArrayList<FSize> calculatedLineSizesForCalculateDimensions = new ArrayList<>();, + float labelLineHeight = Utils.getLineHeight(labelpaint, fontMetricsForCalculateDimensions);, + float labelLineHeight = Utils.getLineHeight(labelpaint, fontMetricsForCalculateDimensions);, + float labelLineSpacing = Utils.getLineSpacing(labelpaint, fontMetricsForCalculateDimensions) + mYEntrySpace;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java, + protected Paint.FontMetrics fontMetricsForRenderLegent = new Paint.FontMetrics();, + float labelLineHeight = Utils.getLineHeight(mLegendLabelPaint, fontMetricsForRenderLegent);, + float labelLineSpacing = Utils.getLineSpacing(mLegendLabelPaint, fontMetricsForRenderLegent) + mLegend.getYEntrySpace();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, + protected Paint.FontMetrics fontMetricsForCalculateDimensions
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, + final float d1 = mValues.get(m).getX() - xValue,, + d2 = mValues.get(m + 1).getX() - xValue,, + ad1 = Math.abs(d1), ad2 = Math.abs(d2);, + if (ad2 < ad1) {, + // [m + 1] is closer to xValue, + // Search in an higher place, + } else if (ad1 < ad2) {, + // [m] is closer to xValue, + // Search in a lower place, + } else {, + // We have multiple sequential x-value with same distance, +, + if (d1 >= 0.0) {, + // Search in a lower place, + high
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + protected boolean mClipValuesToContent = false;, +, + if (isClipValuesToContentEnabled()) {, + clipRestoreCount = canvas.save();, + canvas.clipRect(mViewPortHandler.getContentRect());, +, + canvas.restoreToCount(clipRestoreCount);, + } else {, + mRenderer.drawValues(canvas);, + }, +, + * When enabled, the values will be clipped to contentRect,, + * otherwise they can bleed outside the content rect., + *, + * @param enabled, + */, + public void setClipValuesToContent(boolean enabled) {, + mClipValuesToContent = enabled;, + }, +, + /**, + * When enabled, the values will be clipped to contentRect,, + * otherwise they can bleed outside the content rect., + *, +
[+++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + yVals1.add(new Entry(val, i));, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + yVals1.add(new Entry(val, i));, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + ArrayList<Entry> yVals2 = new ArrayList<Entry>();, + ArrayList<Entry> yVals3 = new ArrayList<Entry>();, + yVals1.add(new Entry(val, i));, + yVals2.add(new Entry(val, i));, + yVals3.add(new Entry(val, i));, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + yVals1.add(new Entry(val, i));, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.Entry;, + ArrayList<Entry> yVals1 = new ArrayList<Entry>();, + ArrayList<Entry> yVals2 = new ArrayList<Entry>();, + ArrayList<Entry> yVals3 = new ArrayList<Entry>();, +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivityMultiDataset"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivityMultiDataset"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + android:text="LineChart (more datasets)" />, + android:text="BarChart (more datasets)" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button7", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivityMultiDataset"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + android:text="LineChart (more datasets)" />, + android:text="BarChart (more datasets)" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button7", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + , + ColorTemplate ct = new ColorTemplate();, + , + // add colors for one dataset, + ct.addDataSetColors(ColorTemplate.FRESH_COLORS, this);, + , + mChart.setColorTemplate(ct);, +++ b/MPChartExample/AndroidManifest.xml, + <activity
[+++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="1500", +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="1500", +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="3000", +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="1500", +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="3000", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + tvX.setText("" + (mSeekBarX.getProgress() * 3 + 1));, + float mult = mSeekBarY.getProgress() * 1000f;, +// data.setValueFormatter(new LargeValueFormatter());, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="1500", +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="3000", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + tvX.setText("" + (mSeekBarX.getProgress() * 3 + 1));, + float mult = mSeekBarY.getProgress() * 1000f;, +// data.setValueFormatter(new LargeValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, + mSeekBarX.setProgress(40);, + int prog = (mSeekBarX.getProgress() + 1);, + mChart.resetTracking();, +, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="1500", +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="3000", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + tvX.setText("" + (mSeekBarX.getProgress() * 3 +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + } else {, + Highlight h = getHighlighter().getHighlight(x, y);, + if (h == null || !isHighlightFullBarEnabled()) return h;, +, + // For isHighlightFullBarEnabled, remove stackIndex, + return new Highlight(h.getX(), h.getY(),, + h.getXPx(), h.getYPx(),, + h.getDataSetIndex(), -1, h.getAxis());, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + } else {, + Highlight h = getHighlighter().getHighlight(x, y);, + if (h == null || !isHighlightFullBarEnabled()) return h;, +, + // For isHighlightFullBarEnabled, remove stackIndex, + return new Highlight(h.getX(), h.getY(),, + h.getXPx(), h.getYPx(),, + h.getDataSetIndex(), -1, h.getAxis());, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +import android.util.Log;, +import com.github.mikephil.charting.highlight.Highlight;, + /**, + * Returns the Highlight object (contains
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + * the path effect of the axis line that makes dashed lines possible, + */, + private DashPathEffect mAxisLineDashPathEffect = null;, +, + /**, + * Enables the grid line to be drawn in dashed mode, e.g. like this, + * "- - - - - -". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF., + * Keep in mind that hardware acceleration boosts performance., + *, + * @param effect the DashPathEffect, + */, + public void setGridDashedLine(DashPathEffect effect) {, + mGridDashPathEffect = effect;, + }, +, + /**, +, + /**, + * Enables
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * calculates the offsets of the chart to the border depending on the, + * calcualtes the y-min and y-max value and the y-delta and x-delta value, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * calculates the offsets of the chart to the border depending on the, + * calcualtes the y-min and y-max value and the y-delta and x-delta value, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, + @Override, + protected void calcMinMaxY(CandleEntry e) {, +, + if (e.getHigh() < mYMin), + mYMin = e.getHigh();, +, + if (e.getHigh() > mYMax), + mYMax = e.getHigh();, +, + if (e.getLow() < mYMin), + mYMin =
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, + <activity android:name="AnotherBarActivity"></activity>, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/AndroidManifest.xml, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.7" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.7" >, +++ b/MPChartExample/build.gradle, + versionName '2.0.7', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.7' , +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.7" >, +++ b/MPChartExample/build.gradle, + versionName '2.0.7', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.7' , +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, + protected boolean mLogEnabled = false;]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, + protected Highlight getStackedHighlight(SelectionDetail selectionDetail, IBarDataSet set, float xVal, double yValue) {, + protected float getDistance(float x1, float y1, float x2, float y2) {, + return Math.abs(x1 - x2);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, + protected Highlight getStackedHighlight(SelectionDetail selectionDetail, IBarDataSet set, float xVal, double yValue) {, + protected float getDistance(float x1, float y1, float x2, float y2) {, + return Math.abs(x1 - x2);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + List<SelectionDetail> closestValues = getSelectionDetailsAtXPos(xVal);, + float leftAxisMinDist = getMinimumDistance(closestValues, y, YAxis.AxisDependency.LEFT);, + float rightAxisMinDist = getMinimumDistance(closestValues, y, YAxis.AxisDependency.RIGHT);, + YAxis.AxisDependency axis = leftAxisMinDist < rightAxisMinDist ? YAxis.AxisDependency.LEFT : YAxis.AxisDependency.RIGHT;, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +, + // entry label styling, + mChart.setEntryLabelColor(Color.WHITE);, + mChart.setEntryLabelTypeface(mTfRegular);, + mChart.setEntryLabelTextSize(12f);, + mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +, + // entry label styling, + mChart.setEntryLabelColor(Color.WHITE);, + mChart.setEntryLabelTypeface(mTfRegular);, + mChart.setEntryLabelTextSize(12f);, + mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +, + // entry label styling, + mChart.setEntryLabelColor(Color.WHITE);, + mChart.setEntryLabelTypeface(mTfRegular);, + mChart.setEntryLabelTextSize(12f);, + mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, + * flag indicating if entry labels should be drawn or not, + private boolean mDrawEntryLabels = true;, + * Set this to true to draw the entry labels into the pie slices (Provided by the getLabel() method of the PieEntry
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +import com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +import com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.view.WindowManager;, +, +import com.github.mikephil.charting.animation.Easing;, +import com.github.mikephil.charting.charts.LineChart;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.realm.RealmLineData;, +import com.github.mikephil.charting.data.realm.RealmLineDataSet;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +/**, + * Created by Philipp Jahoda on 21/10/15., + */, +public class RealmDatabaseActivity extends DemoBase {, +, + private LineChart mChart;, +, + @Override, + protected void onCreate(Bundle savedInstanceState) {, + super.onCreate(savedInstanceState);, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + setContentView(R.layout.activity_linechart_noseekbar);, +, + mChart = (LineChart) findViewById(R.id.chart1);, + mChart.setDrawGridBackground(false);, +, + // no description text, + mChart.setDescription("");, + mChart.setNoDataTextDescription("You need to
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_linechart_time.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1"
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:padding="10dp", + android:orientation="vertical" >, + android:text="MultipleCharts" />, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:padding="10dp", + android:orientation="vertical" >, + android:text="MultipleCharts" />, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + ArrayList<Float> yVals = new ArrayList<Float>();, + yVals.add(val);, + mChart.setData(xVals, yVals);, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:padding="10dp", + android:orientation="vertical" >, + android:text="MultipleCharts" />, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + ArrayList<Float> yVals = new ArrayList<Float>();, + yVals.add(val);, + mChart.setData(xVals, yVals);, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + ArrayList<Float> yVals = new ArrayList<Float>();,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java, + protected XBounds getXBounds(BarLineScatterCandleBubbleDataProvider chart, IBarLineScatterCandleBubbleDataSet dataSet) {, + /**, + * minimum visible entry index, + */, + /**, + * maximum visible entry index, + */, + /**, + * range of visible entry indices, + */, + /**, + * Calculates the minimum and maximum x values as well as the range between them., + *, + * @param chart, + * @param dataSet, + */, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java, + protected XBounds getXBounds(BarLineScatterCandleBubbleDataProvider chart, IBarLineScatterCandleBubbleDataSet dataSet) {, + /**, + * minimum visible entry index, + */, + /**, + * maximum visible entry index,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Returns the Description object of the chart that is responsible for holding all information related, + * to the description text that is displayed in the bottom right corner of the chart (by default)., +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Returns the Description object of the chart that is responsible for holding all information related, + * to the description text that is displayed in the bottom right corner of the chart (by default)., +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java, +, + @Test, + public void testGetEntryForXValueWithDuplicates() {, +, + // sorted list of values
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, +// if (mYAxis.isEnabled()), +// mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum, mYAxis.isInverted());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, +// if (mYAxis.isEnabled()), +// mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum, mYAxis.isInverted());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + /** base axis this axis renderer works with */, + protected AxisBase mAxis;, + /** transformer to transform values to screen pixels and return */, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, +// if (mYAxis.isEnabled()), +// mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum, mYAxis.isInverted());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + /** base axis this axis renderer works with */, + protected AxisBase mAxis;, + /** transformer to transform values to screen pixels and return */, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java, +, + int labelCount = mAxis.getLabelCount();, + mAxis.mEntries = new float[]{};, + mAxis.mEntryCount =
[+++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="200", + android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="200", + android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + LimitLine ll1 = new LimitLine(130f, "Upper Limit");, + leftAxis.setAxisMaxValue(220f);, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="200", + android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + LimitLine ll1 = new LimitLine(130f, "Upper Limit");, + leftAxis.setAxisMaxValue(220f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + set.setCircleColor(Color.WHITE);, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="200", + android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + LimitLine ll1 = new LimitLine(130f, "Upper Limit");, + leftAxis.setAxisMaxValue(220f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + set.setCircleColor(Color.WHITE);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + Path filled = generateFilledPath(dataSet, bounds);, + protected Path mGenerateFilledPathBuffer = new Path();, + * Generates the path that is used for filled drawing., + * @param dataSet, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java, + protected float mTextSize = Utils.convertDpToPixel(10f);]
[+++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/assets/sine.txt, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/assets/sine.txt, +++ b/MPChartExample/assets/square.txt, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/assets/sine.txt, +++ b/MPChartExample/assets/square.txt, +++ b/MPChartExample/assets/stacked_bars.txt, +4#2#6#0, +0#2#8#1, +3#8#2#2, +0#7#0#3, +5#5#2#4, +9#0#0#5, +3#3#6#6, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/assets/sine.txt, +++ b/MPChartExample/assets/square.txt, +++ b/MPChartExample/assets/stacked_bars.txt, +4#2#6#0, +0#2#8#1, +3#8#2#2, +0#7#0#3,
[+++ b/.github/ISSUE_TEMPLATE.md, +<!---, +BEFORE YOU SUBMIT please read the following:, +, +Please search open/closed issues before submitting since someone might have asked, +the same thing before!, +, +If you have a support request or question please submit them on StackOverflow:, + https://stackoverflow.com/questions/tagged/mpandroidchart, +using the tags `android` & `mpandroidchart`, +, +Please also look at the CONTRIBUTING file before opening an issue:, + https://github.com/PhilJay/MPAndroidChart/blob/master/CONTRIBUTING.md, +, +Issues on GitHub are only related to problems with MPAndroidChart itself and we, +cannot answer support questions here. We will close your issue without a response., +-->, +, +**Summary**, +<!-- A clear and concise description of
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();, +, + if (drawBitmap == null, + || (drawBitmap.getWidth() != width), + || (drawBitmap.getHeight() != height)) {, + drawBitmap = Bitmap.createBitmap(width, height, mBitmapConfig);, + mDrawBitmap = new WeakReference<>(drawBitmap);, + mBitmapCanvas = new Canvas(drawBitmap);, + drawBitmap.eraseColor(Color.TRANSPARENT);, + c.drawBitmap(drawBitmap, 0, 0, mRenderPaint);, + Bitmap drawBitmap = mDrawBitmap.get();, + if (drawBitmap != null) {, + drawBitmap.recycle();, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();, +, + if (drawBitmap == null, + || (drawBitmap.getWidth() != width), + || (drawBitmap.getHeight() != height)) {, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Returns the Description object of the chart., +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Returns the Description object of the chart., +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Returns the Description object of the chart., +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + return new float[]{high.getDrawX(), high.getDrawY()};, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + return new float[]{high.getDrawX(), high.getDrawY()};, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, + protected float[] getMarkerPosition(Highlight high) {, + return new float[]{high.getDrawY(), high.getDrawX()};, + }, +, + @Override, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + return new float[]{high.getDrawX(), high.getDrawY()};, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, + protected float[] getMarkerPosition(Highlight high) {, + return new float[]{high.getDrawY(), high.getDrawX()};, + }, +, + @Override, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java, + /**, + * the x-position (pixels) on which this highlight object was last drawn, + */, + private float mDrawX;, +, + /**, + * the y-position (pixels) on which this highlight object was last drawn, + */, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + float mult = mSeekBarY.getProgress() * 100000f;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + float mult = mSeekBarY.getProgress() * 100000f;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + protected DefaultValueFormatter mDefaultFormatter = new DefaultValueFormatter(0);, + setupDefaultFormatter(data.getYMin(), data.getYMax());, + if (set.needsFormatter() || set.getValueFormatter() == mDefaultFormatter), + * Calculates the required number of digits for the values that might be, + protected void setupDefaultFormatter(float min, float max) {, +, + // setup the formatter with a new number of digits, + mDefaultFormatter.setup(digits);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + float mult = mSeekBarY.getProgress() * 100000f;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + protected DefaultValueFormatter mDefaultFormatter = new DefaultValueFormatter(0);, + setupDefaultFormatter(data.getYMin(), data.getYMax());, + if (set.needsFormatter() || set.getValueFormatter()
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.5" >, + <activity android:name="PerformanceLineChart"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.5" >, + <activity android:name="PerformanceLineChart"></activity>, +++ b/MPChartExample/build.gradle, + versionName '2.0.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.5' , +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.5" >, + <activity android:name="PerformanceLineChart"></activity>, +++ b/MPChartExample/build.gradle, + versionName '2.0.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.5' , +++ b/MPChartExample/res/layout/activity_performance_linechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekbarValues" />, +, + <SeekBar, + android:id="@+id/seekbarValues", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_marginBottom="35dp", + android:layout_toLeftOf="@+id/tvValueCount", + android:layout_marginRight="5dp", + android:max="3000", + android:paddingBottom="12dp" />, +, + <TextView, + android:id="@+id/tvValueCount", + android:layout_width="50dp", +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + if (set.isVisible()) {, + if (!shouldDrawValues(dataSet)), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + if (set.isVisible()) {, + if (!shouldDrawValues(dataSet)), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, + /**, + * buffer for storing the current minimum and maximum visible x, + */, + * Returns true if the DataSet values should be drawn, false if not., + *, + * @param set, + * @return, + */, + protected boolean shouldDrawValues(IDataSet set) {, + return set.isVisible() && set.isDrawValuesEnabled();, + }, +, + /**, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + if (set.isVisible()) {, + if (!shouldDrawValues(dataSet)), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, + /**, + * buffer for storing
[+++ b/MPChartExample/build.gradle, + compileSdkVersion 23, + buildToolsVersion '23.0.1', + targetSdkVersion 23, + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartExample/build.gradle, + compileSdkVersion 23, + buildToolsVersion '23.0.1', + targetSdkVersion 23, + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;, + YAxisValueFormatter custom = new MyYAxisValueFormatter();, +++ b/MPChartExample/build.gradle, + compileSdkVersion 23, + buildToolsVersion '23.0.1', + targetSdkVersion 23, + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyYAxisValueFormatter;, + YAxisValueFormatter custom = new MyYAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.LargeValueFormatter;, +++ b/MPChartExample/build.gradle, + compileSdkVersion 23, + buildToolsVersion '23.0.1', + targetSdkVersion 23, + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java, + float posX = originPosX;, + float posX = originPosX;]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DynamicalAddingActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DynamicalAddingActivity"></activity>, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DynamicalAddingActivity"></activity>, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/menu/dynamical.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionAddEntry", + android:title="Add Entry">, + </item>, + , + <item, + android:id="@+id/actionRemoveEntry", + android:title="Remove Entry">, + </item>, + , +
[+++ b/MPChartExample/res/menu/dynamical.xml, + <item, + android:id="@+id/actionAddDataSet", + android:title="Add DataSet">, + </item>, + , + <item, + android:id="@+id/actionRemoveDataSet", + android:title="Remove DataSet">, + </item>, + , +++ b/MPChartExample/res/menu/dynamical.xml, + <item, + android:id="@+id/actionAddDataSet", + android:title="Add DataSet">, + </item>, + , + <item, + android:id="@+id/actionRemoveDataSet", + android:title="Remove DataSet">, + </item>, + , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +import com.github.mikephil.charting.data.BarEntry;, +import com.github.mikephil.charting.utils.ColorTemplate;, + yVals.add(new Entry((float) (Math.random() * 50) + 50f, i));, + int[] mColors = ColorTemplate.VORDIPLOM_COLORS; , +, + // set.addEntry(...);, + mData.addEntry(new Entry((float) (Math.random() * 50) + 50f, set.getEntryCount()), 0);, + // let the chart know it's data has changed, +, + // redraw the chart,
[+++ b/MPChartExample/res/layout/frag_simple_line.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_line.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_pie.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_line.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_pie.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_scatter.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_line.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_pie.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_scatter.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java, +import com.github.mikephil.charting.highlight.Highlight;, + public void refreshContent(Entry e, Highlight highlight) {, +++ b/MPChartExample/res/layout/frag_simple_line.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_pie.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/res/layout/frag_simple_scatter.xml, + android:layout_width="match_parent", + android:layout_height="match_parent" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyMarkerView.java, +import
[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.components.LimitLine;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;, +import com.github.mikephil.charting.components.XAxis.XLabelPosition;, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, +import com.github.mikephil.charting.components.YAxis.YLabelPosition;, +import com.github.mikephil.charting.utils.Transformer;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.components.LimitLine;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;, +import com.github.mikephil.charting.components.XAxis.XLabelPosition;, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, +import com.github.mikephil.charting.components.YAxis.YLabelPosition;, +import com.github.mikephil.charting.utils.Transformer;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.components.LimitLine;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;, +import com.github.mikephil.charting.components.XAxis.XLabelPosition;, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, +import com.github.mikephil.charting.components.YAxis.YLabelPosition;, +import com.github.mikephil.charting.utils.Transformer;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.MarkerView;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.utils.Transformer;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.components.LimitLine;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.LimitLine.LimitLabelPosition;, +import com.github.mikephil.charting.components.XAxis.XLabelPosition;, +import
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + yVals1.add(new BarEntry(i, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + yVals1.add(new BarEntry(i, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + data.add(new Data(0f, -224.1f, "12-29"));, + data.add(new Data(1f, 238.5f, "12-30"));, + data.add(new Data(2f, 1280.1f, "12-31"));, + data.add(new Data(3f, -442.3f, "01-01"));, + data.add(new Data(4f, -2280.1f, "01-02"));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + yVals1.add(new BarEntry(i, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + data.add(new Data(0f, -224.1f, "12-29"));, + data.add(new Data(1f, 238.5f, "12-30"));, + data.add(new Data(2f, 1280.1f, "12-31"));, + data.add(new Data(3f, -442.3f, "01-01"));, + data.add(new Data(4f, -2280.1f, "01-02"));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +, + getXAxis().setSpaceMin(0.5f);, + getXAxis().setSpaceMax(0.5f);]
[+++ b/MPChartExample/res/drawable-nodpi/marker2.png, +++ b/MPChartExample/res/drawable-nodpi/marker2.png, +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_width="50dp", + android:layout_height="35dp", + android:background="@drawable/marker2" >, + android:layout_marginTop="7dp", +++ b/MPChartExample/res/drawable-nodpi/marker2.png, +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_width="50dp", + android:layout_height="35dp", + android:background="@drawable/marker2" >, + android:layout_marginTop="7dp", +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionDashedLine", + android:title="Toggle dashed Line">, + </item>, + <item, +++ b/MPChartExample/res/drawable-nodpi/marker2.png, +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_width="50dp", + android:layout_height="35dp", + android:background="@drawable/marker2" >, + android:layout_marginTop="7dp", +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionDashedLine", + android:title="Toggle dashed Line">, + </item>, + <item, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +, +public class LineChartActivity extends Activity implements OnSeekBarChangeListener,, + OnChartValueSelectedListener {, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + ct.addColorsForDataSets(new int[] {, + R.color.colorful_1, + }, this);, +, + // set the number of y-legend
[+++ b/MPChartExample/AndroidManifest.xml, + package="com.xxmassdeveloper.mpchartexample", + android:versionCode="2", + android:versionName="1.0.2" >, + android:name="com.xxmassdeveloper.mpchartexample.MainActivity", + <activity android:name="com.xxmassdeveloper.mpchartexample.fragments.SimpleChartDemo"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + package="com.xxmassdeveloper.mpchartexample", + android:versionCode="2", + android:versionName="1.0.2" >, + android:name="com.xxmassdeveloper.mpchartexample.MainActivity", + <activity android:name="com.xxmassdeveloper.mpchartexample.fragments.SimpleChartDemo"></activity>, +++ b/MPChartExample/res/drawable-hdpi/ic_launcher.png, +++ b/MPChartExample/AndroidManifest.xml, + package="com.xxmassdeveloper.mpchartexample", + android:versionCode="2", + android:versionName="1.0.2" >, + android:name="com.xxmassdeveloper.mpchartexample.MainActivity", + <activity android:name="com.xxmassdeveloper.mpchartexample.fragments.SimpleChartDemo"></activity>, +++ b/MPChartExample/res/drawable-hdpi/ic_launcher.png, +++ b/MPChartExample/res/drawable-mdpi/ic_launcher.png, +++ b/MPChartExample/AndroidManifest.xml, + package="com.xxmassdeveloper.mpchartexample", + android:versionCode="2", + android:versionName="1.0.2" >, + android:name="com.xxmassdeveloper.mpchartexample.MainActivity", + <activity android:name="com.xxmassdeveloper.mpchartexample.fragments.SimpleChartDemo"></activity>, +++ b/MPChartExample/res/drawable-hdpi/ic_launcher.png, +++ b/MPChartExample/res/drawable-mdpi/ic_launcher.png, +++ b/MPChartExample/res/drawable-xhdpi/ic_launcher.png, +++ b/MPChartExample/AndroidManifest.xml, + package="com.xxmassdeveloper.mpchartexample", + android:versionCode="2", + android:versionName="1.0.2" >, + android:name="com.xxmassdeveloper.mpchartexample.MainActivity", + <activity android:name="com.xxmassdeveloper.mpchartexample.fragments.SimpleChartDemo"></activity>, +++ b/MPChartExample/res/drawable-hdpi/ic_launcher.png, +++ b/MPChartExample/res/drawable-mdpi/ic_launcher.png, +++ b/MPChartExample/res/drawable-xhdpi/ic_launcher.png, +++ b/MPChartExample/res/drawable-xxhdpi/ic_launcher.png, +++ b/MPChartExample/AndroidManifest.xml, + package="com.xxmassdeveloper.mpchartexample", + android:versionCode="2", + android:versionName="1.0.2" >,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +import com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="45", + android:versionName="2.1.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="45", + android:versionName="2.1.5" >, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.1', + versionCode 45, + versionName '2.1.5', + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="45", + android:versionName="2.1.5" >, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.1', + versionCode 45, + versionName '2.1.5', + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++ b/MPChartLib/AndroidManifest.xml, +<manifest xmlns:android="http://schemas.android.com/apk/res/android", + package="com.github.mikephil.charting", + android:versionCode="1", + android:versionName="1.0" >, +, + <uses-sdk, + android:minSdkVersion="8", + android:targetSdkVersion="22" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="45", + android:versionName="2.1.5" >, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.1', + versionCode 45, + versionName '2.1.5', + classpath 'com.android.tools.build:gradle:1.3.1', + compile 'com.android.support:appcompat-v7:23.0.0', +++
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="53", + android:targetSdkVersion="24" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="53", + android:targetSdkVersion="24" />, +++ b/MPChartExample/build.gradle, + compileSdkVersion 24, + targetSdkVersion 24, + versionCode 53, + classpath 'com.android.tools.build:gradle:2.2.1', + compile 'com.android.support:appcompat-v7:24.2.1', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="53", + android:targetSdkVersion="24" />, +++ b/MPChartExample/build.gradle, + compileSdkVersion 24, + targetSdkVersion 24, + versionCode 53, + classpath 'com.android.tools.build:gradle:2.2.1', + compile 'com.android.support:appcompat-v7:24.2.1', +++ b/MPChartLib/build.gradle, + compileSdkVersion 24, + targetSdkVersion 24, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="53", + android:targetSdkVersion="24" />, +++ b/MPChartExample/build.gradle, + compileSdkVersion 24, + targetSdkVersion 24, + versionCode 53, + classpath 'com.android.tools.build:gradle:2.2.1', + compile 'com.android.support:appcompat-v7:24.2.1', +++ b/MPChartLib/build.gradle, + compileSdkVersion 24, + targetSdkVersion 24, +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:2.2.1']
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="9", + android:versionName="1.1.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="9", + android:versionName="1.1.1" >, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="9", + android:versionName="1.1.1" >, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, + * Returns all colors used across all DataSet objects this object, + * represents., + * , + * @return, + */, + public int[] getColors() {, +, + int clrcnt = 0;, +, + for (int i = 0; i < mDataSets.size(); i++) {, + clrcnt += mDataSets.get(i).getColors().size();, + }, +, + int[] colors = new int[clrcnt];, + int cnt = 0;, +, + for (int i = 0; i
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java, + /**, + * Use `getSumBelow(stackIndex)` instead., + */, + @Deprecated, + return getSumBelow(stackIndex);, + }, +, + public float getSumBelow(int stackIndex) {]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="49", + android:versionName="2.2.3" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="49", + android:versionName="2.2.3" >, +++ b/MPChartExample/build.gradle, + versionCode 49, + versionName '2.2.3']
[+++ b/.gitignore, +generatedJar/, +++ b/.gitignore, +generatedJar/, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="PiePolylineChartActivity"></activity>, +++ b/.gitignore, +generatedJar/, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="PiePolylineChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.text.SpannableString;, +import android.text.style.ForegroundColorSpan;, +import android.text.style.RelativeSizeSpan;, +import android.text.style.StyleSpan;, +import android.util.Log;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.SeekBar;, +import android.widget.SeekBar.OnSeekBarChangeListener;, +import android.widget.TextView;, +, +import com.github.mikephil.charting.animation.Easing;, +import com.github.mikephil.charting.charts.PieChart;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.PieData;, +import com.github.mikephil.charting.data.PieDataSet;, +import com.github.mikephil.charting.formatter.PercentFormatter;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +import com.github.mikephil.charting.listener.OnChartValueSelectedListener;, +import com.github.mikephil.charting.utils.ColorTemplate;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class PiePolylineChartActivity extends DemoBase implements OnSeekBarChangeListener,, + OnChartValueSelectedListener {, +, + private PieChart mChart;,
[+++ b/MPChartExample/build.gradle, + runProguard false, +++ b/MPChartExample/build.gradle, + runProguard false, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, + minifyEnabled false, +++ b/MPChartExample/build.gradle, + runProguard false, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, + minifyEnabled false, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, + private boolean mDrawBarShadow = true;, + private RectF mBarShadow = new RectF();, + private RectF mBarRect = new RectF();, + private void prepareBar(float x, float y, float barspace) {, + if (mDrawValueAboveBar) {, + posOffset = -Utils.convertDpToPixel(5);, + negOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, + } else {, + posOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, + negOffset = -Utils.convertDpToPixel(5);, + }, +++ b/MPChartExample/build.gradle,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + return (float) Math.max(mXAxis.mAxisMinimum, pos.x);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + return (float) Math.max(mXAxis.mAxisMinimum, pos.x);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, + return (float) Math.max(mXAxis.mAxisMinimum, pos.y);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + return (float) Math.max(mXAxis.mAxisMinimum, pos.x);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, + return (float) Math.max(mXAxis.mAxisMinimum, pos.y);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/FileUtils.java, + entries.add(new BarEntry(Float.parseFloat(split[1]), Float.parseFloat(split[0])));]
[+++ b/MPChartExample/res/menu/candle.xml, + <item, + android:id="@+id/actionToggleMakeShadowSameColorAsCandle", + android:title="Toggle shadow same color">, + </item>, +++ b/MPChartExample/res/menu/candle.xml, + <item, + android:id="@+id/actionToggleMakeShadowSameColorAsCandle", + android:title="Toggle shadow same color">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, + case R.id.actionToggleMakeShadowSameColorAsCandle: {, + for (CandleDataSet set : mChart.getData().getDataSets()), + {, + set.setShadowColorSameAsCandle(!set.getShadowColorSameAsCandle());, + }, +, + mChart.invalidate();, + break;, + }, +++ b/MPChartExample/res/menu/candle.xml, + <item, + android:id="@+id/actionToggleMakeShadowSameColorAsCandle", + android:title="Toggle shadow same color">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, + case R.id.actionToggleMakeShadowSameColorAsCandle: {, + for (CandleDataSet set : mChart.getData().getDataSets()), + {, + set.setShadowColorSameAsCandle(!set.getShadowColorSameAsCandle());, + }, +, + mChart.invalidate();, + break;, + }, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java, + /** use candle color for the shadow
[+++ b/.github/ISSUE_TEMPLATE.md, + - Library Version (e.g. 3.1.0-alpha), +++ b/.github/ISSUE_TEMPLATE.md, + - Library Version (e.g. 3.1.0-alpha), +++ b/.github/ISSUE_TEMPLATE/Bug_report.md, + - Library Version (e.g. 3.1.0-alpha)
[+++ /dev/null, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java, +public class AnimatedMoveViewJob extends AnimatedViewPortJob {, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java, +public class AnimatedMoveViewJob extends AnimatedViewPortJob {, +++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedViewPortJob.java, +package com.github.mikephil.charting.jobs;, +, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, +import android.annotation.SuppressLint;, +import android.view.View;, +, +import com.github.mikephil.charting.utils.Transformer;, +import com.github.mikephil.charting.utils.ViewPortHandler;, +, +/**, + * Created by Philipp Jahoda on 19/02/16., + */, +@SuppressLint("NewApi"), +public abstract class AnimatedViewPortJob extends ViewPortJob implements ValueAnimator.AnimatorUpdateListener {, +, + protected ObjectAnimator animator;, +, + protected float phase;, +, + protected float xOrigin;, + protected float yOrigin;, +, + public AnimatedViewPortJob(ViewPortHandler viewPortHandler, float xValue, float yValue, Transformer trans, View v, float xOrigin, float yOrigin, long
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', +++ b/MPChartLib/build.gradle, + versionCode 3, + versionName '3.0.0']
[+++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + float val = -10; //(float) (Math.random() * mult);, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bubble.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/draw.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + float
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/CONTRIBUTING.md, +Bug-fixes and features often come from users of the MPAndroidChart library and improve it greatly. We want to keep it as easy as possible to contribute changes that improve the experience for users all around the world. There are a few guidelines that we, +need contributors to follow so that we can have a chance of keeping
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_linechart_time.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1"
[+++ b/MPChartExample/build.gradle, + compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.2@aar', +++ b/MPChartExample/build.gradle, + compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.2@aar', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + mChart.centerViewToAnimated(e.getX(), e.getY(), mChart.getData().getDataSetByIndex(h.getDataSetIndex()), + .getAxisDependency(), 500);, + //mChart.zoomAndCenterAnimated(2.5f, 2.5f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), + // .getAxisDependency(), 1000);, + //mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), + // .getAxisDependency(), 1000);, +++ b/MPChartExample/build.gradle, + compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.2@aar', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, + mChart.centerViewToAnimated(e.getX(), e.getY(), mChart.getData().getDataSetByIndex(h.getDataSetIndex()), + .getAxisDependency(), 500);, + //mChart.zoomAndCenterAnimated(2.5f, 2.5f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), + // .getAxisDependency(), 1000);, + //mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), + // .getAxisDependency(), 1000);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, +import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;, +import com.github.mikephil.charting.utils.ColorTemplate;, + /**, + * Drawing mode for this line dataset, + **/, + /**, + * List representing all colors
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="37", + android:versionName="2.0.8" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="37", + android:versionName="2.0.8" >, +++ b/MPChartExample/build.gradle, + versionCode 37, + versionName '2.0.8', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.8' ]
[+++ b/.gitignore, +, +# gradle wrapper working directory, +.gradle, +, +build/, +++ b/.gitignore, +, +# gradle wrapper working directory, +.gradle, +, +build/, +++ b/MPChartExample/.gitignore, +/build, +++ b/.gitignore, +, +# gradle wrapper working directory, +.gradle, +, +build/, +++ b/MPChartExample/.gitignore, +/build, +++ b/MPChartExample/build.gradle, +apply plugin: 'com.android.application', +, +android {, + compileSdkVersion 19, + buildToolsVersion '19.1.0', + defaultConfig {, + applicationId 'com.xxmassdeveloper.mpchartexample', + minSdkVersion 16, + targetSdkVersion 19, + versionCode 4, + versionName '1.0.4', +, + sourceSets {, + main {, + java.srcDirs = ['src'], + res.srcDirs = ['res'], + assets.srcDirs = ['assets'], + manifest.srcFile 'AndroidManifest.xml', + }, + }, + },
[+++ b/Projects_using_MPAndroidChart.txt, +, +Poker Manager, +https://play.google.com/store/apps/details?id=com.pokermanagerpro]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, + <activity android:name="LineChartActivity1"></activity> <!-- android:configChanges="keyboardHidden|orientation|screenSize" -->, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, + <activity android:name="LineChartActivity1"></activity> <!-- android:configChanges="keyboardHidden|orientation|screenSize" -->, +++ b/MPChartExample/build.gradle, + versionCode 40, + versionName '2.1.0', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.9' , +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, + <activity android:name="LineChartActivity1"></activity> <!-- android:configChanges="keyboardHidden|orientation|screenSize" -->, +++ b/MPChartExample/build.gradle, + versionCode 40, + versionName '2.1.0', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.9' , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.animation.Easing;, + mChart.animateX(2500, Easing.EasingOption.EaseInOutQuart);, +// mChart.invalidate();, + mChart.animateY(3000, Easing.EasingOption.EaseInCubic);, +// set1.setDrawFilled(true);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, + <activity android:name="LineChartActivity1"></activity> <!-- android:configChanges="keyboardHidden|orientation|screenSize" -->, +++ b/MPChartExample/build.gradle, + versionCode 40, + versionName '2.1.0', +
[+++ b/.github/ISSUE_TEMPLATE.md, +<!---, +BEFORE YOU SUBMIT please read the following:, +, +Please search open/closed issues before submitting since someone might have asked, +the same thing before!, +, +If you have a support request or question please submit them on StackOverflow:, + https://stackoverflow.com/questions/tagged/mpandroidchart, +using the tags `android` & `mpandroidchart`, +, +Please also look at the CONTRIBUTING file before opening an issue:, + https://github.com/PhilJay/MPAndroidChart/blob/master/CONTRIBUTING.md, +, +Issues on GitHub are only related to problems with MPAndroidChart itself and we, +cannot answer support questions here. We will close your issue without a response., +-->, +, +**Summary**, +<!-- A clear and concise description of
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + mChart.setMaxHighlightDistance(300);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + mChart.setMaxHighlightDistance(300);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + mMaxHighlightDistance = Utils.convertDpToPixel(100f);, + * Default: 100dp, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + mChart.setMaxHighlightDistance(300);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + mMaxHighlightDistance = Utils.convertDpToPixel(100f);, + * Default: 100dp, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, + Highlight high = super.getHighlight(x, y);, + if(high == null) {, + return null;, + }, + BarData barData = mChart.getBarData();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + mChart.setMaxHighlightDistance(300);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + mMaxHighlightDistance = Utils.convertDpToPixel(100f);, + * Default: 100dp, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, + Highlight high = super.getHighlight(x, y);, + if(high == null) {, + return null;, + }, + BarData barData = mChart.getBarData();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + vals.add(buildHighlight(dataSet, i, xVal, DataSet.Rounding.CLOSEST));,
[+++ b/MPChartExample/build.gradle, + minifyEnabled false, +++ b/MPChartExample/build.gradle, + minifyEnabled false, +++ b/MPChartLib/build.gradle, +apply plugin: 'com.android.library', + buildToolsVersion '21.1.1', + minSdkVersion 8, + minifyEnabled false, +++ b/MPChartExample/build.gradle, + minifyEnabled false, +++ b/MPChartLib/build.gradle, +apply plugin: 'com.android.library', + buildToolsVersion '21.1.1', + minSdkVersion 8, + minifyEnabled false, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, + private boolean mDrawBarShadow = true;, + private RectF mBarShadow = new RectF();, + private RectF mBarRect = new RectF();, + private void prepareBar(float x, float y, float barspace) {, + if (mDrawValueAboveBar) {, + posOffset = -Utils.convertDpToPixel(5);, + negOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, + } else {, + posOffset =
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mChart.spin(1000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption, + .EaseInCubic);, + ArrayList<PieEntry> values = new ArrayList<PieEntry>();, + values.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));, + PieDataSet dataSet = new PieDataSet(values, "Election Results");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mChart.spin(1000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption, + .EaseInCubic);, + ArrayList<PieEntry> values = new ArrayList<PieEntry>();, + values.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));, + PieDataSet dataSet = new PieDataSet(values, "Election Results");, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + dataSet.getValueTextColor(j / 4));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mChart.spin(1000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption, + .EaseInCubic);, + ArrayList<PieEntry> values = new ArrayList<PieEntry>();,
[+++ b/MPChartExample/res/menu/line.xml, +, + <item, + android:id="@+id/actionToggleRound", + android:title="Toggle Round">, + </item>, + <item, + android:id="@+id/actionToggleValues", + android:title="Toggle Values">, + </item>, + <item, + android:id="@+id/actionToggleFilled", + android:title="Toggle Filled">, + </item>, + <item, + android:id="@+id/actionToggleCircles", + android:title="Toggle Circles">, + </item>, + <item, + android:id="@+id/actionToggleHighlight", + android:title="Toggle Highlight">, + </item>, + <item, + android:id="@+id/actionToggleStartzero", + android:title="Toggle StartZero">, + </item>, + <item, + android:id="@+id/actionToggleAdjustXLegend", + android:title="Toggle AdjustXLegend">, + </item>, + <item, + android:id="@+id/actionToggleFilter", + android:title="Toggle filter">, + </item>, + <item, + android:id="@+id/actionSave", + android:title="Save to Gallery">, + </item>, +, +++ b/MPChartExample/res/menu/line.xml, +, + <item, + android:id="@+id/actionToggleRound", + android:title="Toggle Round">, + </item>, +
[+++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:0.12.+', +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + mViewPortHandler.setChartDimens(w, h);, + } else {, + if (mLogEnabled), + Log.w(LOG_TAG, "*Avoiding* setting chart dimens! width: " + w + ", height: " + h);, + }, +, + // This may cause the chart view to mutate properties affecting the view port --, + // lets do this before we try to run any pending jobs on the view port itself, + notifyDataSetChanged();]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, +import com.github.mikephil.charting.renderer.scatter.IShapeRenderer;, +public class CustomScatterShapeRenderer implements IShapeRenderer, +{, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, +import com.github.mikephil.charting.renderer.scatter.IShapeRenderer;, +public class CustomScatterShapeRenderer implements IShapeRenderer, +{, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java, +import com.github.mikephil.charting.renderer.scatter.IShapeRenderer;, + protected IShapeRenderer mShapeRenderer = new SquareShapeRenderer();, + * Sets the ScatterShape this DataSet should be drawn with. This will search for an available IShapeRenderer and set this, + * Sets a new IShapeRenderer responsible for drawing this DataSet., + * This can also be used to set a custom IShapeRenderer aside from the default ones., + public void setShapeRenderer(IShapeRenderer shapeRenderer) {, + public IShapeRenderer getShapeRenderer() {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, +import com.github.mikephil.charting.renderer.scatter.IShapeRenderer;, +public class CustomScatterShapeRenderer implements
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedZoomJob.java, +++ b/README.md, +## An app using this library is featured on Product Hunt, [check it out](https://www.producthunt.com/posts/myalfred)!]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.highlight.Highlight;, + //xAxis.setXValueFormatter(new MyCustomXValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.highlight.Highlight;, + //xAxis.setXValueFormatter(new MyCustomXValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyCustomXValueFormatter.java, +package com.xxmassdeveloper.mpchartexample.custom;, +, +import com.github.mikephil.charting.utils.ViewPortHandler;, +import com.github.mikephil.charting.utils.XValueFormatter;, +, +/**, + * Created by Philipp Jahoda on 14/09/15., + */, +public class MyCustomXValueFormatter implements XValueFormatter {, +, + public MyCustomXValueFormatter() {, + // maybe do something here or provide parameters in constructor, + }, +, + @Override, + public String getXValue(String original, int index, ViewPortHandler viewPortHandler) {, +, + //Log.i("TRANS", "x: " + viewPortHandler.getTransX() + ", y: " + viewPortHandler.getTransY());, +, + // e.g. adjust the x-axis values depending on scale / zoom level,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + //dataSet.setUsingSliceColorAsValueLineColor(true);, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + //dataSet.setUsingSliceColorAsValueLineColor(true);, +, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + //dataSet.setUsingSliceColorAsValueLineColor(true);, +, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.os.Bundle;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.animation.Easing;, +import com.github.mikephil.charting.charts.RadarChart;, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.MarkerView;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.RadarData;, +import com.github.mikephil.charting.data.RadarDataSet;, +import com.github.mikephil.charting.data.RadarEntry;, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IRadarDataSet;, +import com.xxmassdeveloper.mpchartexample.custom.RadarMarkerView;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class RadarChartActivity extends DemoBase
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BubbleChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BubbleChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.BubbleChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, + , + <SeekBar, + android:id="@+id/seekBar2", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_toLeftOf="@+id/tvYMax", + android:layout_marginRight="5dp", + android:max="200", + android:paddingBottom="12dp" />, +, + <SeekBar, + android:id="@+id/seekBar1", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_above="@+id/seekBar2", + android:layout_margin="8dp", + android:layout_marginBottom="35dp", + android:layout_toLeftOf="@+id/tvXMax", + android:layout_marginRight="5dp", + android:max="30", + android:paddingBottom="12dp" />, +, + <TextView, + android:id="@+id/tvXMax", + android:layout_width="50dp", + android:layout_height="wrap_content", + android:layout_alignBottom="@+id/seekBar1", + android:layout_alignParentRight="true", + android:text="500", +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, +++ b/MPChartExample/res/layout/activity_bubblechart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.BubbleChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, +++ b/MPChartExample/res/layout/activity_bubblechart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.BubbleChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/layout/activity_horizontalbarchart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.HorizontalBarChart, + android:id="@+id/chart1", +
[+++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + BarDataSet set1 = new BarDataSet(yVals1, "Data Set");, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + BarDataSet set1 = new BarDataSet(yVals1, "Data Set");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + BarDataSet set1 = new BarDataSet(yVals1, "DataSet");, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + BarDataSet set1 = new BarDataSet(yVals1, "Data Set");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + BarDataSet set1 = new BarDataSet(yVals1, "DataSet");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + BarDataSet set1 = new BarDataSet(yVals1, "Company A");, + BarDataSet set2 = new BarDataSet(yVals2, "Company B");, + BarDataSet set3 = new BarDataSet(yVals3, "Company C");, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + BarDataSet set1 = new BarDataSet(yVals1, "Data Set");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + BarDataSet set1
[+++ b/MPChartExample/res/menu/realtime.xml, + <item, + android:id="@+id/actionFeedMultiple", + android:title="Fast feed multiple">, + </item>, +++ b/MPChartExample/res/menu/realtime.xml, + <item, + android:id="@+id/actionFeedMultiple", + android:title="Fast feed multiple">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +++ b/MPChartExample/res/menu/realtime.xml, + <item, + android:id="@+id/actionFeedMultiple", + android:title="Fast feed multiple">, + </item>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + case R.id.actionFeedMultiple: {, + feedMultiple();, + break;, + }, + private void feedMultiple() {, +, + new Thread(new Runnable() {, +, + @Override, + public void run() {, + for(int i = 0; i < 500; i++) {, +, + runOnUiThread(new Runnable() {, +, + @Override, + public void run() {, + addEntry();, + }, +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, + <activity android:name="CombinedChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, + <activity android:name="CombinedChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.CombinedChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, + <activity android:name="CombinedChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.CombinedChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/res/layout/activity_realtime_linechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, + versionCode 27, + versionName '1.7.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, + versionCode 27, + versionName '1.7.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + // data.addEntry(new Entry((float) (Math.random() * 50) + 50f,, + // set.getEntryCount()), 0);, +, + ArrayList<Integer> colors = new ArrayList<Integer>();, +, + for (int c : ColorTemplate.VORDIPLOM_COLORS), + colors.add(c);, +, + for (int c : ColorTemplate.JOYFUL_COLORS), + colors.add(c);, +, + set1.setColors(colors);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="27", + android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, + versionCode 27, + versionName '1.7.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + //
[+++ b/gradle.properties, +org.gradle.jvmargs=-Xmx2048M]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + <ScrollView, + android:id="@+id/scrollView1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_alignParentLeft="true", + android:layout_alignParentTop="true" >, +, + android:layout_gravity="center", + android:orientation="vertical", + android:padding="10dp" >, + android:text="MultilineChart" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + </ScrollView>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="MultiLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + <ScrollView, + android:id="@+id/scrollView1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_alignParentLeft="true", + android:layout_alignParentTop="true" >, +, + android:layout_gravity="center", + android:orientation="vertical", + android:padding="10dp" >, + android:text="MultilineChart" />, + android:text="MultipleCharts" />, + , + <Button, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp",
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/res/layout/activity_barchart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mSeekBarX.setProgress(4);, + mSeekBarX.setOnSeekBarChangeListener(this);, + mSeekBarY.setOnSeekBarChangeListener(this);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mSeekBarX.setProgress(4);, + mSeekBarX.setOnSeekBarChangeListener(this);, + mSeekBarY.setOnSeekBarChangeListener(this);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, + l.setXOffset(5f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mSeekBarX.setProgress(4);, + mSeekBarX.setOnSeekBarChangeListener(this);, + mSeekBarY.setOnSeekBarChangeListener(this);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, + l.setXOffset(5f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, + * This property is deprecated - Use `position`, `horizontalAlignment`, `verticalAlignment`, `orientation`, `drawInside`,, + * `direction`., + public enum LegendHorizontalAlignment {, + public enum LegendVerticalAlignment {, + public enum LegendOrientation {, + /**, + * the legend text array. a null label will start a group., + */, + /**, + * the text direction for the legend, + */, + /**,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java, + * sets the size of the label text in density pixels min = 6f, max = 24f, default, + * @param size the text size, in DP, + * returns the text size that is currently set for the labels, in pixels, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java, + * sets the size of the label text in density pixels min = 6f, max = 24f, default, + * @param size the text size, in DP, + * returns the text size that is currently set for the labels, in pixels, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + spline.lineTo(bounds.min + bounds.range, fillMin);, + spline.lineTo(bounds.min, fillMin);]
[+++ b/MPChartLib/AndroidManifest.xml, + <!-- <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />, + </application> -->, +++ b/MPChartLib/AndroidManifest.xml, + <!-- <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />, + </application> -->, +++ b/README.md]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", +++ b/MPChartExample/build.gradle, + versionCode 26, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", +++ b/MPChartExample/build.gradle, + versionCode 26, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", +++ b/MPChartExample/build.gradle, + versionCode 26, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mSeekBarY.setProgress(10);, +, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="26", +++ b/MPChartExample/build.gradle, + versionCode 26, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + mSeekBarY.setProgress(10);, +, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/PieRadarChartTouchListener.java, +import android.util.Log;, + float angle = mChart.getAngleForPoint(e.getX(), e.getY());, + int index = mChart.getIndexForAngle(angle);, +, + // check if the index could be found, + if (index < 0) {, + , + mChart.highlightValues(null);, + mLastHighlight = null;, + , + }
[+++ b/Projects_using_MPAndroidChart.txt, +, +Live Tracking, +https://play.google.com/store/apps/details?id=com.aorbegozo005.livetrack]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + float xLabelHeight = mXAxis.mLabelRotatedHeight + mXAxis.getYOffset();, + offsetBottom += xLabelHeight;, + offsetTop += xLabelHeight;, + offsetBottom += xLabelHeight;, + offsetTop += xLabelHeight;]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="31", + android:targetSdkVersion="21" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="31", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setHighlightEnabled(false);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="31", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setHighlightEnabled(false);, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="31", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setHighlightEnabled(false);, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mXAxis == null), + return;, +, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="31", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setHighlightEnabled(false);, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mXAxis == null), + return;, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, + protected boolean mLogEnabled = false;, + //ViewCompat.postInvalidateOnAnimation(Chart.this);, + postInvalidate();, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="31", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +
[+++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-2.jar, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-2.jar, +++ b/MPChartExample/project.properties]
[+++ b/Projects_using_MPAndroidChart.txt, +, +Drivvo - Vehicle Management, +https://play.google.com/store/apps/details?id=br.com.ctncardoso.ctncar]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, + android:text="Draw Chart" />, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="View on GitHub" />, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_main.xml, +, + android:text="Draw Chart" />, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="View on GitHub" />, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="17", + android:versionName="1.4.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="17", + android:versionName="1.4.2" >, +++ b/MPChartExample/build.gradle, + versionCode 17, + versionName '1.4.2']
[+++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:0.12.+', +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener,
[+++ b/MPChartLib/build.gradle, +++ b/MPChartLib/build.gradle, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarEntry.java, +import android.graphics.drawable.Drawable;, + * Constructor for normal bars (not stacked)., + * @param y, + * @param data - Spot for additional data this Entry represents., + public BarEntry(float x, float y, Object data) {, + super(x, y, data);, + * @param icon - icon image, + public BarEntry(float x, float y, Drawable icon) {, + super(x, y, icon);, + }, +, + /**, + * Constructor for normal bars (not stacked)., + *, + * @param x, + * @param y, + * @param icon - icon image, + * @param data
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="8", + android:versionName="1.0.8" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="8", + android:versionName="1.0.8" >, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="8", + android:versionName="1.0.8" >, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +++ b/MPChartLib/src/com/github/mikephil/charting/utils/ColorTemplate.java, +, + /** an arraylist of color arrays (one color array per dataset) */, + private ArrayList<ArrayList<Integer>> mDataSetColors;, +, + /** the total amount of different colors in the template */, + private int mColorCount = 0;, +, + /**, + * constructor, + */, + public ColorTemplate() {, + mDataSetColors = new ArrayList<ArrayList<Integer>>();, + }, +, + /**, + * returns the total amount of different colors in the template, +
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + // scaling can now only be done on xPx- and yPx-axis separately, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + // scaling can now only be done on xPx- and yPx-axis separately, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + // scaling can now only be done on xPx- and yPx-axis separately, + Log.i("xPx-index",, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + // scaling can now only be done on xPx- and yPx-axis separately, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + // scaling can now only be done on xPx- and yPx-axis separately, + Log.i("xPx-index",, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + // scaling can now only be done on xPx- and yPx-axis separately, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + // scaling
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, + // content (user-interface), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, + // content (user-interface), +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +, +, + @Override, + * direction manually. This method needs to be recalled everytime a new data, + * object is set for the chart. Provide density pixels -> they are then, + * rendered to pixels inside the chart., +, + mTrans.prepareMatrixValuePx(this);, + mTrans.prepareMatrixOffset(this);, + prepareContentRect();, + @Override, + public PointF getCenterOfView() {, + return getCenter();, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, + // content (user-interface), +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +, +, + @Override, + * direction manually.
[+++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="16", +++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="16", +++ b/MPChartExample/build.gradle, +apply plugin: 'realm-android', + minSdkVersion 16, + compile project(':MPChartLib-Realm'), + //compile 'io.realm:realm-android:0.87.5' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="16", +++ b/MPChartExample/build.gradle, +apply plugin: 'realm-android', + minSdkVersion 16, + compile project(':MPChartLib-Realm'), + //compile 'io.realm:realm-android:0.87.5' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java, + // Create a RealmConfiguration that saves the Realm file in the app's "files" directory., + RealmConfiguration realmConfig = new RealmConfiguration.Builder(getApplicationContext()).build();, + Realm.setDefaultConfiguration(realmConfig);, + mRealm = Realm.getDefaultInstance();, + mRealm.delete(RealmDemoData.class);, + mRealm.delete(RealmDemoData.class);, + mRealm.delete(RealmDemoData.class);, + mRealm.delete(RealmDemoData.class);, + mRealm.delete(RealmDemoData.class);, +++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="16", +++ b/MPChartExample/build.gradle, +apply plugin:
[+++ /dev/null, +++ /dev/null, +++ b/README.md, +Are you using this library? Add your project to the [**references**](https://github.com/PhilJay/MPAndroidChart/edit/master/Projects_using_MPAndroidChart.txt)., +++ /dev/null, +++ b/README.md, +Are you using this library? Add your project to the [**references**](https://github.com/PhilJay/MPAndroidChart/edit/master/Projects_using_MPAndroidChart.txt)., +++ /dev/null]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent" >, + android:layout_height="match_parent" />, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode
[+++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleXVals" android:title="Toggle X-Values"></item>, + <item android:id="@+id/actionTogglePercent" android:title="Toggle Percent"></item>, + , +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleXVals" android:title="Toggle X-Values"></item>, + <item android:id="@+id/actionTogglePercent" android:title="Toggle Percent"></item>, + , +++ b/MPChartExample/src/com/example/mpchartexample/MultipleChartsActivity.java, + xvalsSmall.add("Val"+i);, + xvalsLarge.add("Val"+i);, + mPieChart.setDrawXVals(false);, +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleXVals" android:title="Toggle X-Values"></item>, + <item android:id="@+id/actionTogglePercent" android:title="Toggle Percent"></item>, + , +++ b/MPChartExample/src/com/example/mpchartexample/MultipleChartsActivity.java, + xvalsSmall.add("Val"+i);, + xvalsLarge.add("Val"+i);, + mPieChart.setDrawXVals(false);, +++ b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.OnChartValueSelectedListener;, +public class PieChartActivity extends Activity implements OnSeekBarChangeListener, OnChartValueSelectedListener {, + mChart.setDrawValues(true);, + mChart.setDrawXVals(true);, + mChart.setUsePercentValues(false);, + mChart.setOnChartValueSelectedListener(this);, + mSeekBarX.setProgress(5);, + case R.id.actionTogglePercent: {, + if (mChart.isUsePercentValuesEnabled()), + mChart.setUsePercentValues(false);, + else, + mChart.setUsePercentValues(true);, + mChart.invalidate();, + break;, +
[+++ b/Projects_using_MPAndroidChart.txt, +, +AS Sales Management, +https://play.google.com/store/apps/details?id=com.armsoft.mtrade]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CubicLineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CubicLineChartActivity"></activity>, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionToggleCubic", + android:title="Toggle Cubic">, + </item>, + <item, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CubicLineChartActivity"></activity>, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionToggleCubic", + android:title="Toggle Cubic">, + </item>, + <item, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.SeekBar;, +import android.widget.SeekBar.OnSeekBarChangeListener;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.charts.BarLineChartBase.BorderPosition;, +import com.github.mikephil.charting.charts.LineChart;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.LineData;, +import com.github.mikephil.charting.data.LineDataSet;, +import com.github.mikephil.charting.data.filter.Approximator;, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, +import com.github.mikephil.charting.utils.Legend;, +import com.github.mikephil.charting.utils.Legend.LegendForm;, +import com.github.mikephil.charting.utils.XLabels;, +import com.github.mikephil.charting.utils.YLabels;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class CubicLineChartActivity extends DemoBase implements OnSeekBarChangeListener
[+++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, + android:background="@android:color/white", +++ b/screenshots/bubblechart.png, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, + android:background="@android:color/white", +++ b/screenshots/bubblechart.png, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, + android:background="@android:color/white", +++ b/screenshots/bubblechart.png, +++ /dev/null, +++ b/screenshots/horizontal_barchart.png]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent" >, + android:layout_height="match_parent" />, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java, + protected RectF mZeroLineClippingRect = new RectF();, +, + int clipRestoreCount = c.save();, + mZeroLineClippingRect.set(mViewPortHandler.getContentRect());, + mZeroLineClippingRect.inset(0.f, -mYAxis.getZeroLineWidth() / 2.f);, + c.clipRect(mLimitLineClippingRect);, +, +, + c.restoreToCount(clipRestoreCount);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRenderer.java, + protected RectF mZeroLineClippingRect = new RectF();, +, + int clipRestoreCount = c.save();, + mZeroLineClippingRect.set(mViewPortHandler.getContentRect());, + mZeroLineClippingRect.inset(0.f, -mYAxis.getZeroLineWidth() / 2.f);, + c.clipRect(mLimitLineClippingRect);, +, +, + c.restoreToCount(clipRestoreCount);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart.java, + int clipRestoreCount = c.save();, + mZeroLineClippingRect.set(mViewPortHandler.getContentRect());, + mZeroLineClippingRect.inset(-mYAxis.getZeroLineWidth() / 2.f, 0.f);, + c.clipRect(mLimitLineClippingRect);, +, +, + c.restoreToCount(clipRestoreCount);, +, + c.restoreToCount(clipRestoreCount);]
[+++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-0.jar, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-0.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-0.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + , +// private void removeLastEntry() {, +//, +// PieData data = mChart.getDataOriginal();, +//, +// if (data != null) {, +//, +// PieDataSet set = data.getDataSet();, +//, +// if (set != null) {, +//, +// Entry e = set.getEntryForXIndex(set.getEntryCount() - 1);, +//, +// data.removeEntry(e, 0);, +// // or remove by index, +// // mData.removeEntry(xIndex, dataSetIndex);, +//, +// mChart.notifyDataSetChanged();, +// mChart.invalidate();, +// }, +// }, +// }, +//, +// private void addEntry() {, +//, +// PieData data = mChart.getDataOriginal();, +//, +// if (data != null) {, +//, +//
[+++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_width="68dp", + android:id="@+id/tvContent", + android:textSize="9dp", + android:ellipsize="end", + android:singleLine="true", +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_width="68dp", + android:id="@+id/tvContent", + android:textSize="9dp", + android:ellipsize="end", + android:singleLine="true", +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + // create a custom MarkerView (extend MarkerView) and specify the layout to use for it, + MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);, + // define an offset to change the original position of the marker (optional), +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_width="68dp", + android:id="@+id/tvContent", + android:textSize="9dp", + android:ellipsize="end", + android:singleLine="true", +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + // create a custom MarkerView (extend MarkerView) and specify the layout to use for it, + MyMarkerView mv = new MyMarkerView(this,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +import
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, + YAxis leftAxis = mChart.getAxisLeft();, + leftAxis.setTypeface(tf);, + leftAxis.setLabelCount(8);, + YAxis rightAxis = mChart.getAxisRight();, + rightAxis.setDrawGridLines(false);, + rightAxis.setTypeface(tf);, + rightAxis.setLabelCount(8);, + , + mChart.setValueFormatter(new MyValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, + YAxis leftAxis = mChart.getAxisLeft();, + leftAxis.setTypeface(tf);, + leftAxis.setLabelCount(8);, + YAxis rightAxis = mChart.getAxisRight();, + rightAxis.setDrawGridLines(false);, + rightAxis.setTypeface(tf);, + rightAxis.setLabelCount(8);, + , + mChart.setValueFormatter(new MyValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.xxmassdeveloper.mpchartexample.custom.MyMarkerView;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, + YAxis leftAxis = mChart.getAxisLeft();, + leftAxis.setTypeface(tf);, + leftAxis.setLabelCount(8);, + YAxis rightAxis = mChart.getAxisRight();, + rightAxis.setDrawGridLines(false);, + rightAxis.setTypeface(tf);, + rightAxis.setLabelCount(8);, + , + mChart.setValueFormatter(new MyValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.xxmassdeveloper.mpchartexample.custom.MyMarkerView;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MyMarkerView;,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, + private static String[] SUFFIX = new String[]{, + private static final int MAX_LENGTH = 5;, + public void setSuffix(String[] suff) {, + SUFFIX = suff;, + r = r.replaceAll("E[0-9][0-9]", SUFFIX[combined / 3]);, + while (r.length() > MAX_LENGTH || r.matches("[0-9]+\\.[a-z]")) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, + private static String[] SUFFIX = new String[]{, + private static final int MAX_LENGTH = 5;, + public void setSuffix(String[] suff) {, + SUFFIX = suff;, + r = r.replaceAll("E[0-9][0-9]", SUFFIX[combined / 3]);, + while (r.length() > MAX_LENGTH || r.matches("[0-9]+\\.[a-z]")) {, +++ b/README.md, + - Or you can also [**choose what you want to
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + mXAxisRenderer.renderAxisLine(canvas);, + mAxisRendererLeft.renderAxisLine(canvas);, + mAxisRendererRight.renderAxisLine(canvas);, +]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/IMarker.java, + MPPointF getOffsetForDrawingAtPoint(float posX, float posY);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/IMarker.java, + MPPointF getOffsetForDrawingAtPoint(float posX, float posY);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java, + public MPPointF getOffsetForDrawingAtPoint(float posX, float posY) {, + MPPointF offset = getOffsetForDrawingAtPoint(posX, posY);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/IMarker.java, + MPPointF getOffsetForDrawingAtPoint(float posX, float posY);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java, + public MPPointF getOffsetForDrawingAtPoint(float posX, float posY) {, + MPPointF offset = getOffsetForDrawingAtPoint(posX, posY);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerView.java, + public MPPointF getOffsetForDrawingAtPoint(float posX, float posY) {, + MPPointF offset = getOffsetForDrawingAtPoint(posX, posY);]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".BarChartPositiveNegative"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".BarChartPositiveNegative"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.view.WindowManager;, +, +import com.github.mikephil.charting.charts.BarChart;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.Legend.LegendForm;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.XAxis.XAxisPosition;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.BarData;, +import com.github.mikephil.charting.data.BarDataSet;, +import com.github.mikephil.charting.data.BarEntry;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.formatter.ValueFormatter;, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.utils.ViewPortHandler;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.text.DecimalFormat;, +import java.util.ArrayList;, +import java.util.List;, +, +public class BarChartPositiveNegative extends DemoBase {, +, + protected BarChart mChart;, + private Typeface mTf;, +, + @Override, + protected void onCreate(Bundle savedInstanceState) {, + super.onCreate(savedInstanceState);, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + setContentView(R.layout.activity_barchart_noseekbar);, +, + mTf =
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="28", + android:versionName="1.7.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="28", + android:versionName="1.7.1" >, +++ b/MPChartExample/build.gradle, + versionCode 28, + versionName '1.7.1', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="28", + android:versionName="1.7.1" >, +++ b/MPChartExample/build.gradle, + versionCode 28, + versionName '1.7.1', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-1.jar, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="28", + android:versionName="1.7.1" >, +++ b/MPChartExample/build.gradle, + versionCode 28, + versionName '1.7.1', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="28", + android:versionName="1.7.1" >, +++ b/MPChartExample/build.gradle, + versionCode 28, + versionName '1.7.1', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.LimitLine.LimitLabelPosition;, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="28", + android:versionName="1.7.1" >, +++ b/MPChartExample/build.gradle, + versionCode 28, + versionName '1.7.1', +++ b/MPChartExample/libs/mpandroidchartlibrary-1-7-1.jar, +++
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_linechart_time.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1"
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/res/layout/activity_barchart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + * the path effect of the axis line that makes dashed lines possible, + */, + private DashPathEffect mAxisLineDashPathEffect = null;, +, + /**, +, + /**, + * Enables the axis line to be drawn in dashed mode, e.g. like this, + * "- - - - - -". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF., + * Keep in mind that hardware acceleration boosts performance., + *, + * @param lineLength the length of the line pieces, + * @param spaceLength the length of space in between the pieces, + * @param phase
[+++ b/MPChartExample/res/layout/list_item.xml, + android:textSize="12dp", + android:layout_marginRight="10dp", + android:layout_toLeftOf="@+id/tvNew", + android:layout_toStartOf="@+id/tvNew" />, +, + <TextView, + android:layout_width="wrap_content", + android:layout_height="wrap_content", + android:textAppearance="?android:attr/textAppearanceSmall", + android:text="NEW", + android:textColor="#FA6185", + android:id="@+id/tvNew", + android:textSize="12dp", + android:layout_marginRight="5dp", + android:layout_centerVertical="true", + android:layout_alignParentRight="true", + android:layout_alignParentEnd="true" />, +++ b/MPChartExample/res/layout/list_item.xml, + android:textSize="12dp", + android:layout_marginRight="10dp", + android:layout_toLeftOf="@+id/tvNew", + android:layout_toStartOf="@+id/tvNew" />, +, + <TextView, + android:layout_width="wrap_content", + android:layout_height="wrap_content", + android:textAppearance="?android:attr/textAppearanceSmall", + android:text="NEW", + android:textColor="#FA6185", + android:id="@+id/tvNew", + android:textSize="12dp", + android:layout_marginRight="5dp", + android:layout_centerVertical="true", + android:layout_alignParentRight="true", + android:layout_alignParentEnd="true" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/ContentItem.java, + boolean isNew = false;, +++ b/MPChartExample/res/layout/list_item.xml, + android:textSize="12dp", + android:layout_marginRight="10dp", + android:layout_toLeftOf="@+id/tvNew", + android:layout_toStartOf="@+id/tvNew" />, +, + <TextView, + android:layout_width="wrap_content", + android:layout_height="wrap_content",
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + interval = (float) range / (float) (labelCount - 1);, + v += interval;, + if(mAxis.isCenterAxisLabelsEnabled()) {, + if (mAxis.isCenterAxisLabelsEnabled()) {, + float offset = (float)interval / 2f;]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, + public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler,, + float posX, float posY, Paint renderPaint) {, + final float shapeHalf = dataSet.getScatterShapeSize() / 2f;, + posX - shapeHalf,, + posY - shapeHalf,, + posX + shapeHalf,, + posY + shapeHalf,, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, + public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler,, + float posX, float posY, Paint renderPaint) {, + final float shapeHalf = dataSet.getScatterShapeSize() / 2f;, + posX - shapeHalf,, + posY - shapeHalf,, + posX + shapeHalf,, + posY + shapeHalf,, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, + public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler,,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + mMaxHighlightDistance = Utils.convertDpToPixel(70f);, + * The maximum distance in screen pixels away from an entry causing it to highlight., + */, + protected float mMaxHighlightDistance = 0f;, +, + @Override, + public float getMaxHighlightDistance() {, + return mMaxHighlightDistance;, + }, +, + /**, + * Sets the maximum distance in screen dp a touch can be away from an entry to cause it to get highlighted., + * Default: 70dp, + *, + * @param distDp, + */, + public void setMaxHighlightDistance(float distDp) {, + mMaxHighlightDistance = Utils.convertDpToPixel(distDp);, + }, +, + /**, + public boolean
[+++ b/MPChartExample/assets/othersine.txt, +0.0#0, +0.09983341664682815#1, +0.19866933079506122#2, +0.2955202066613396#3, +0.3894183423086505#4, +0.479425538604203#5, +0.5646424733950354#6, +0.644217687237691#7, +0.7173560908995227#8, +0.7833269096274833#9, +0.8414709848078964#10, +0.8912073600614353#11, +0.9320390859672263#12, +0.963558185417193#13, +0.9854497299884603#14, +0.9974949866040544#15, +0.9995736030415051#16, +0.9916648104524686#17, +0.973847630878195#18, +0.9463000876874144#19, +0.9092974268256815#20, +0.8632093666488735#21, +0.8084964038195899#22, +0.7457052121767197#23, +0.6754631805511504#24, +0.5984721441039558#25, +0.5155013718214634#26, +0.42737988023382895#27, +0.33498815015590383#28, +0.23924932921398112#29, +0.1411200080598659#30, +0.04158066243328916#31, +-0.05837414342758142#32, +-0.15774569414324996#33, +-0.25554110202683294#34, +-0.3507832276896215#35, +-0.44252044329485407#36, +-0.5298361409084948#37, +-0.6118578909427207#38, +-0.6877661591839753#39, +-0.7568024953079294#40, +-0.8182771110644114#41, +-0.8715757724135886#42, +-0.9161659367494552#43, +-0.9516020738895161#44, +-0.977530117665097#45, +-0.9936910036334644#46, +-0.9999232575641008#47, +-0.9961646088358408#48, +-0.9824526126243328#49, +-0.958924274663139#50, +-0.9258146823277331#51, +-0.8834546557201545#52, +-0.8322674422239027#53, +-0.7727644875559894#54, +-0.7055403255703945#55, +-0.6312666378723244#56, +-0.5506855425976414#57, +-0.4646021794137613#58, +-0.37387666483024096#59, +-0.27941549819893097#60, +-0.18216250427210112#61, +-0.0830894028175026#62, +0.016813900484343496#63, +0.11654920485048659#64, +0.21511998808780858#65, +0.3115413635133711#66, +0.40484992061659103#67, +0.4941133511386012#68, +0.5784397643881929#69, +0.6569865987187824#70, +0.7289690401258698#71, +0.7936678638491472#72, +0.8504366206285593#73, +0.8987080958116223#74, +0.9379999767747351#75, +0.9679196720314837#76, +0.9881682338769986#77, +0.9985433453746043#78, +0.9989413418397726#79, +0.9893582466233836#80, +0.9698898108450894#81, +0.9407305566797773#82, +0.9021718337562995#83, +0.8545989080882879#84, +0.7984871126234988#85, +0.734397097874123#86, +0.662969230082194#87, +0.5849171928917747#88, +0.5010208564578985#89, +0.41211848524177114#90, +0.3190983623493673#91, +0.22288991410026324#92, +0.12445442350707933#93, +0.024775425453375525#94, +-0.07515112046179159#95, +-0.17432678122296213#96,
[+++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, + float sum = 1f;, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, + float sum = 1f;, +++ b/Projects_using_MPAndroidChart.txt, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, + float sum = 1f;, +++ b/Projects_using_MPAndroidChart.txt, +++ b/README.md]
[+++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + mChartTouchListener.setLastHighlighted(null);]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + if (mDrawBitmap == null, + || (mDrawBitmap.get().getWidth() != width), + || (mDrawBitmap.get().getHeight() != height)) {, +, + mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, mBitmapConfig));, + mBitmapCanvas = new Canvas(mDrawBitmap.get());, + mDrawBitmap.get().eraseColor(Color.TRANSPARENT);, + c.drawBitmap(mDrawBitmap.get(), 0, 0, mRenderPaint);, + mDrawBitmap.get().recycle();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + if (mDrawBitmap == null, + || (mDrawBitmap.get().getWidth() != width), + || (mDrawBitmap.get().getHeight() != height)) {, +, + mDrawBitmap = new WeakReference<Bitmap>(Bitmap.createBitmap(width, height, mBitmapConfig));, + mBitmapCanvas = new Canvas(mDrawBitmap.get());, + mDrawBitmap.get().eraseColor(Color.TRANSPARENT);, + c.drawBitmap(mDrawBitmap.get(), 0, 0, mRenderPaint);, + mDrawBitmap.get().recycle();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + if (mDrawBitmap == null, + || (mDrawBitmap.get().getWidth() != width), + || (mDrawBitmap.get().getHeight() != height)) {, +,
[+++ b/MPChartExample/build.gradle, + applicationId 'com.xxmassdeveloper.mpchartexample', +++ b/MPChartExample/build.gradle, + applicationId 'com.xxmassdeveloper.mpchartexample', +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:1.0.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, +apply plugin: 'android-library', + buildToolsVersion '19.1.0', + minSdkVersion 14, + shrinkResources false, +++ b/MPChartExample/build.gradle, + applicationId 'com.xxmassdeveloper.mpchartexample', +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:1.0.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, +apply plugin: 'android-library', + buildToolsVersion '19.1.0',
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java, + final int count = (to - from + 1) * 2; // (int) Math.ceil((to - from) * phaseX) * 2;, + final int count = (int) ((to - from) * phaseX + 1) * 2;]
[+++ b/MPChartExample/res/menu/pie.xml, + <item, + android:id="@+id/actionToggleSpin", + android:title="Spin Animation">, + </item>]
[+++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.2', +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.2', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java, +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.2', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + if (mValues == null || mValues.isEmpty()), + mYMax = Float.MIN_VALUE;, + mXMax = Float.MIN_VALUE;, +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.2', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + if (mValues == null || mValues.isEmpty()), + mYMax = Float.MIN_VALUE;, + mXMax = Float.MIN_VALUE;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, + if (mValues == null || mValues.isEmpty()), + mYMax = Float.MIN_VALUE;, + mXMax = Float.MIN_VALUE;, +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.1.2', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, + if (mValues == null || mValues.isEmpty()), + mYMax = Float.MIN_VALUE;, + mXMax
[+++ b/MPChartExample/build.gradle, + minifyEnabled false, +++ b/MPChartExample/build.gradle, + minifyEnabled false, +++ b/MPChartLib/build.gradle, +apply plugin: 'com.android.library', + buildToolsVersion '21.1.1', + minSdkVersion 8, + minifyEnabled false, +++ b/MPChartExample/build.gradle, + minifyEnabled false, +++ b/MPChartLib/build.gradle, +apply plugin: 'com.android.library', + buildToolsVersion '21.1.1', + minSdkVersion 8, + minifyEnabled false, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartExample/build.gradle, + minifyEnabled false, +++ b/MPChartLib/build.gradle, +apply plugin: 'com.android.library', + buildToolsVersion '21.1.1', + minSdkVersion 8, + minifyEnabled false, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, +public abstract class Chart<T
[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + protected void drawDataSet(int index) {, + BarDataSet dataSet = mData.getDataSets().get(index);, + float x = e.getXIndex() + j * (mData.getDataSetCount() - 1) + index + space * j + space / 2f;, + float posOffset = 0f;, + float negOffset = 0f;, + float[] valuePoints = mTrans.generateTransformedValuesBarChart(entries, i, mData,, + mPhaseY);, + transformed[k + 1], + + (vals[k / 2] >= 0 ? posOffset : negOffset));, + return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,, + "8") * 1.5f);, + return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils, + .convertDpToPixel(5));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + protected void drawDataSet(int index) {,
[+++ b/.gitignore, +generated/, +finalOutput/, +++ b/.gitignore, +generated/, +finalOutput/, +++ b/MPChartExample/AndroidManifest.xml, +++ b/.gitignore, +generated/, +finalOutput/, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/.gitignore, +generated/, +finalOutput/, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, + case 7:, + case 8:, + case 9:, + case 10:, + case 11:, + case 12:, + case 13:, + case 14:, + case 15:, + case 16:, + case 17:, + case 18:, + case 19:, + case 20:, + case 21:, + case 22:, + case 23:, + case 24:, + case 25:, + case 26:, + case 27:, +++ b/.gitignore, +generated/, +finalOutput/, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null,
[+++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + case R.id.actionToggleMinAngles: {, + if (chart.getMinAngleForSlices() == 0f), + chart.setMinAngleForSlices(36f);, + else, + chart.setMinAngleForSlices(0f);, + chart.notifyDataSetChanged();, + chart.invalidate();, + break;, + }, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + case R.id.actionToggleMinAngles: {, + if (chart.getMinAngleForSlices() == 0f), + chart.setMinAngleForSlices(36f);, + else, + chart.setMinAngleForSlices(0f);, + chart.notifyDataSetChanged();, + chart.invalidate();, + break;, + }, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, + case R.id.actionToggleMinAngles: {, + if (chart.getMinAngleForSlices() == 0f), + chart.setMinAngleForSlices(36f);, + else, + chart.setMinAngleForSlices(0f);, + chart.notifyDataSetChanged();, + chart.invalidate();, + break;, + }, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + case R.id.actionToggleMinAngles: {, + if (chart.getMinAngleForSlices() == 0f), + chart.setMinAngleForSlices(36f);, + else, + chart.setMinAngleForSlices(0f);, + chart.notifyDataSetChanged();, + chart.invalidate();, + break;, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:versionName="2.0.0" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:versionName="2.0.0" >, +++ b/MPChartExample/build.gradle, + versionCode 30, + versionName '2.0.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:versionName="2.0.0" >, +++ b/MPChartExample/build.gradle, + versionCode 30, + versionName '2.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setEnabled(false);, + yl.setDrawAxisLine(true);, +, + YAxis yr = mChart.getAxisRight();, + yr.setTypeface(tf);, + yr.setDrawAxisLine(true);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:versionName="2.0.0" >, +++ b/MPChartExample/build.gradle, + versionCode 30, + versionName '2.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + xl.setEnabled(false);, + yl.setDrawAxisLine(true);, +, + YAxis yr = mChart.getAxisRight();, + yr.setTypeface(tf);, + yr.setDrawAxisLine(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + protected void prepareValuePxMatrix() {, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:versionName="2.0.0" >, +++
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + if (i / 2 == mXAxis.mEntryCount - 1 && mXAxis.mEntryCount > 1) {]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="46", + android:versionName="2.1.6" >, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="46", + android:versionName="2.1.6" >, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 46, + versionName '2.1.6', +, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="46", + android:versionName="2.1.6" >, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 46, + versionName '2.1.6', +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="46", + android:versionName="2.1.6" >, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 46, + versionName '2.1.6', +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();,
[+++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleFilter", + android:title="Toggle filter">, + </item>, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleFilter", + android:title="Toggle filter">, + </item>, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, + case R.id.actionToggleFilter:, + if (mChart.isFilterSet()) {, + mChart.setFilter(ApproximatorType.NONE, 0);, + } else {, + mChart.setFilter(ApproximatorType.DOUGLAS_PEUCKER, 2);, + }, + mChart.invalidate();, + break;, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/actionToggleFilter", + android:title="Toggle filter">, + </item>, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, + case R.id.actionToggleFilter:, + if (mChart.isFilterSet()) {, + mChart.setFilter(ApproximatorType.NONE, 0);, + } else {, + mChart.setFilter(ApproximatorType.DOUGLAS_PEUCKER, 2);, + }, + mChart.invalidate();, + break;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, + /**, + * Sets a filter on
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, + <activity android:name=".FilledLineActivity"></activity>, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, + <activity android:name=".FilledLineActivity"></activity>, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, + <activity android:name=".FilledLineActivity"></activity>, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, + <activity android:name=".FilledLineActivity"></activity>, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="InvertedLineChartActivity"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.os.Bundle;, +import android.util.Log;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.SeekBar;, +import android.widget.SeekBar.OnSeekBarChangeListener;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.charts.BarLineChartBase.BorderPosition;, +import com.github.mikephil.charting.charts.LineChart;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.LineData;, +import com.github.mikephil.charting.data.LineDataSet;, +import com.github.mikephil.charting.data.filter.Approximator;, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, +import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;, +import com.github.mikephil.charting.utils.Highlight;, +import com.github.mikephil.charting.utils.Legend;, +import com.github.mikephil.charting.utils.Legend.LegendForm;, +import com.github.mikephil.charting.utils.XLabels;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class InvertedLineChartActivity extends DemoBase implements OnSeekBarChangeListener,, + OnChartValueSelectedListener {, +, + private LineChart mChart;, + private SeekBar mSeekBarX, mSeekBarY;, + private TextView tvX, tvY;,
[+++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleValues" android:title="Toggle Y-Values"></item>, + <item android:id="@+id/actionToggleXVals" android:title="Toggle X-Values"></item>, + <item android:id="@+id/actionTogglePercent" android:title="Toggle Percent"></item>, + <item android:id="@+id/actionToggleHole" android:title="Toggle Hole"></item>, + <item android:id="@+id/actionDrawCenter" android:title="Draw CenterText"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleValues" android:title="Toggle Y-Values"></item>, + <item android:id="@+id/actionToggleXVals" android:title="Toggle X-Values"></item>, + <item android:id="@+id/actionTogglePercent" android:title="Toggle Percent"></item>, + <item android:id="@+id/actionToggleHole" android:title="Toggle Hole"></item>, + <item android:id="@+id/actionDrawCenter" android:title="Draw CenterText"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/res/menu/scatter.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/pie.xml, + <item android:id="@+id/actionToggleValues" android:title="Toggle Y-Values"></item>, + <item android:id="@+id/actionToggleXVals" android:title="Toggle X-Values"></item>, +
[+++ b/Projects_using_MPAndroidChart.txt, +, +Drivvo - Vehicle Management, +https://play.google.com/store/apps/details?id=br.com.ctncardoso.ctncar, +++ b/Projects_using_MPAndroidChart.txt, +, +Drivvo - Vehicle Management, +https://play.google.com/store/apps/details?id=br.com.ctncardoso.ctncar, +++ b/README.md, + [![Android Arsenal](http://img.shields.io/badge/Android%20Arsenal-MPAndroidChart-blue.svg?style=flat)](http://android-arsenal.com/details/1/741) [ **android-arsenal.com**] (https://github.com/vbauer/android-arsenal.com), +]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java, + if (width == 0.f && mDrawable != null) {, + if (height == 0.f && mDrawable != null) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java, + if (width == 0.f && mDrawable != null) {, + if (height == 0.f && mDrawable != null) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + float arcStartPointX = center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD);, + float arcStartPointY = center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD);]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, + private FormattedStringCache.Generic<Long, Date> mFormattedStringCache = new FormattedStringCache.Generic<>(new SimpleDateFormat("dd MMM HH:mm"));, + return mFormattedStringCache.getFormattedValue(new Date(v), v);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, + private FormattedStringCache.Generic<Long, Date> mFormattedStringCache = new FormattedStringCache.Generic<>(new SimpleDateFormat("dd MMM HH:mm"));, + return mFormattedStringCache.getFormattedValue(new Date(v), v);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, + private FormattedStringCache.PrimFloat format = new FormattedStringCache.PrimFloat(new DecimalFormat("###"));, + return format.getFormattedValue(value) + "-" + format.getFormattedValue(value+10);, + private FormattedStringCache.Generic<Integer, Float> mFormatValue;, + private FormattedStringCache.PrimFloat mFormatAxis;, + mFormatValue = new FormattedStringCache.Generic<>(new DecimalFormat("###"));, + mFormatAxis = new FormattedStringCache.PrimFloat(new DecimalFormat("###"));, + return mFormatValue.getFormattedValue(value, dataSetIndex) + "m";, + return mFormatAxis.getFormattedValue(v) + "m";, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, + private FormattedStringCache.Generic<Long, Date> mFormattedStringCache = new FormattedStringCache.Generic<>(new SimpleDateFormat("dd MMM HH:mm"));, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.listener.OnChartValueSelectedListener;, + private Typeface mTf;, +, + mTf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");, + xAxis.setTypeface(mTf);, + leftAxis.setTypeface(mTf);, + rightAxis.setTypeface(mTf);, + data.setValueTextSize(10f);, + data.setValueTypeface(mTf);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.listener.OnChartValueSelectedListener;, + private Typeface mTf;, +, + mTf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");, + xAxis.setTypeface(mTf);, + leftAxis.setTypeface(mTf);, + rightAxis.setTypeface(mTf);, + data.setValueTextSize(10f);, + data.setValueTypeface(mTf);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.listener.OnChartValueSelectedListener;, + private Typeface tf;, +, + tf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");, + data.setValueTypeface(tf);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.listener.OnChartValueSelectedListener;, + private Typeface mTf;, +, + mTf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");, + xAxis.setTypeface(mTf);, + leftAxis.setTypeface(mTf);, + rightAxis.setTypeface(mTf);, + data.setValueTextSize(10f);, + data.setValueTypeface(mTf);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.listener.OnChartValueSelectedListener;, + private Typeface tf;, +, + tf
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, + if(mDrawLabelsBuffer.length < mAxis.mEntryCount * 2){, + for (int i = 0; i < positions.length && i < mXAxis.mEntries.length / 2 && i < mXAxis.mCenteredEntries.length / 2 ; i += 2) {, + for (int i = 0; i < positions.length && i < mXAxis.mEntries.length / 2 && i < mXAxis.mCenteredEntries.length / 2 ; i += 2) {]
[+++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item android:id="@+id/animateXY" android:title="Animate XY"></item>, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item android:id="@+id/animateXY" android:title="Animate XY"></item>, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>, + <item, + android:id="@+id/animateXY", + android:title="Animate XY">, + </item>, + <item, +++ b/MPChartExample/res/menu/bar.xml, + <item, + android:id="@+id/animateX", + android:title="Animate X">, + </item>, + <item, + android:id="@+id/animateY", + android:title="Animate Y">, + </item>,
[+++ b/MPChartExample/res/layout/activity_colored_lines.xml, +<?xml version="1.0" encoding="utf-8"?>, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/white", + android:orientation="vertical" >, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_weight="1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart2", + android:layout_weight="1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart3", + android:layout_weight="1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart4", + android:layout_weight="1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, +</LinearLayout>, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +<?xml version="1.0" encoding="utf-8"?>, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/white", + android:orientation="vertical" >, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_weight="1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart2", + android:layout_weight="1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart3",
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/Entry.java, +import com.github.mikephil.charting.utils.Utils;, +, + if (Math.abs(e.x - this.x) > Utils.FLOAT_EPSILON), + if (Math.abs(e.getY() - this.getY()) > Utils.FLOAT_EPSILON), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/Entry.java, +import com.github.mikephil.charting.utils.Utils;, +, + if (Math.abs(e.x - this.x) > Utils.FLOAT_EPSILON), + if (Math.abs(e.getY() - this.getY()) > Utils.FLOAT_EPSILON), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java, + @SuppressWarnings("unused"), + public final static double DOUBLE_EPSILON = Double.longBitsToDouble(Double.doubleToLongBits(1.0) + 1);, +, + @SuppressWarnings("unused"), + public final static float FLOAT_EPSILON = Float.intBitsToFloat(Float.floatToIntBits(1f) + 1);, +]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue value = new XAxisValue(i, mMonths[i % 12]);, + xVals.add(value);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals =
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.DataSet;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.DataSet;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.DataSet;, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + // mData.removeEntryByXPos(xIndex, dataSetIndex);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + // mData.removeEntryByXPos(xIndex, dataSetIndex);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public boolean removeEntryByXPos(float xPos) {, + T e = getEntryForXPos(xPos);, + return removeEntry(e);, + }, +, + @Override, + public boolean removeEntry(int index) {, +, + T e = getEntryForIndex(index);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + // mData.removeEntryByXPos(xIndex, dataSetIndex);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public boolean removeEntryByXPos(float xPos) {, + T e = getEntryForXPos(xPos);, + return removeEntry(e);, + }, +, + @Override, + public boolean removeEntry(int index) {, +, + T e = getEntryForIndex(index);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + // mData.removeEntryByXPos(xIndex, dataSetIndex);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public boolean removeEntryByXPos(float xPos)
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.data.Entry;, + int entryCount = dataSet.getEntryCount();, +, + float lowX = mChart.getLowestVisibleX();, + float highX = mChart.getHighestVisibleX();, +, + CandleEntry entryFrom = dataSet.getEntryForXPos(lowX, DataSet.Rounding.DOWN);, + CandleEntry entryTo = dataSet.getEntryForXPos(highX, DataSet.Rounding.UP);, +, + int diff = (entryFrom == entryTo) ? 1 : 0;, + int minx = Math.max(dataSet.getEntryIndex(entryFrom) - diff, 0);, + int maxx = Math.min(Math.max(minx + 2, dataSet.getEntryIndex(entryTo) + 1), entryCount);]
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + ArrayList<LineDataSet> sets = (ArrayList<LineDataSet>) mChart.getData(), + ArrayList<LineDataSet> sets = (ArrayList<LineDataSet>) mChart.getData(), + ArrayList<LineDataSet> sets = (ArrayList<LineDataSet>) mChart.getData(), +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + ArrayList<LineDataSet> sets = (ArrayList<LineDataSet>) mChart.getData(), + ArrayList<LineDataSet> sets = (ArrayList<LineDataSet>) mChart.getData(), + ArrayList<LineDataSet> sets = (ArrayList<LineDataSet>) mChart.getData(), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + LineData data = mChart.getData();, + LineData data = mChart.getData();, + LineData data = mChart.getData();, + LineData data = mChart.getData();, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + ArrayList<LineDataSet> sets = (ArrayList<LineDataSet>) mChart.getData(), + ArrayList<LineDataSet> sets = (ArrayList<LineDataSet>) mChart.getData(), +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + float x, y;, +, + x = getWidth() - mViewPortHandler.offsetRight() - mDescription.getXOffset();, + y = getHeight() - mViewPortHandler.offsetBottom() - mDescription.getYOffset();, + } else {, + x = position.x;, + y = position.y;, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + float x, y;, +, + x = getWidth() - mViewPortHandler.offsetRight() - mDescription.getXOffset();, + y = getHeight() - mViewPortHandler.offsetBottom() - mDescription.getYOffset();, + } else {, + x = position.x;, + y = position.y;, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + float phaseX = Math.max(0.f, Math.min(1.f, mAnimator.getPhaseX()));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + float x, y;, +, + x = getWidth() - mViewPortHandler.offsetRight() - mDescription.getXOffset();, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="55", + android:versionName="3.0.2" >, + android:targetSdkVersion="25" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="55", + android:versionName="3.0.2" >, + android:targetSdkVersion="25" />, +++ b/MPChartExample/build.gradle, + compileSdkVersion 25, + buildToolsVersion '25.0.0', + targetSdkVersion 25, + versionCode 55, + versionName '3.0.2', + classpath 'com.android.tools.build:gradle:2.3.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="55", + android:versionName="3.0.2" >, + android:targetSdkVersion="25" />, +++ b/MPChartExample/build.gradle, + compileSdkVersion 25, + buildToolsVersion '25.0.0', + targetSdkVersion 25, + versionCode 55, + versionName '3.0.2', + classpath 'com.android.tools.build:gradle:2.3.0', +++ b/MPChartLib/build.gradle, + compileSdkVersion 25, + buildToolsVersion '25.0.0', + targetSdkVersion 25, + versionName '3.0.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="55", + android:versionName="3.0.2" >, + android:targetSdkVersion="25" />, +++ b/MPChartExample/build.gradle, + compileSdkVersion 25,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +// mChart.setVisibleXRange(50, 10);, +// mChart.moveViewToX(20);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +// mChart.setVisibleXRange(50, 10);, +// mChart.moveViewToX(20);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + float minScale = mXAxis.mAxisRange / minXRange;, + float maxScale = mXAxis.mAxisRange / maxXRange;, + * @param axis the axis for which this limit should apply, + * Sets the size of the area (range on the y-axis) that should be minimum visible at once, no further zooming in possible., + *, + * @param minYRange, + * @param axis the axis for which this limit should apply, + */, + public void setVisibleYRangeMinimum(float minYRange, AxisDependency axis) {, + float yScale = getDeltaY(axis)
[+++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +++ b/MPChartExample/res/menu/bar.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +// /**, +// * set this to true to
[+++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="150", + android:max="1500", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="150", + android:max="1500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + LimitLine ll1 = new LimitLine(150f, "Upper Limit");, + leftAxis.setAxisMaxValue(200f);, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="150", + android:max="1500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + LimitLine ll1 = new LimitLine(150f, "Upper Limit");, + leftAxis.setAxisMaxValue(200f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + protected Path mGenerateFilledPathBuffer = new Path();, +, + final Path filled = mGenerateFilledPathBuffer;, +, + final int startingIndex = bounds.min;, + final int endingIndex = bounds.range + bounds.min;, + final int indexInterval = 128;, +, + int currentStartIndex = 0;, + int currentEndIndex = indexInterval;, + int iterations = 0;, +, + // Doing
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, +++ b/MPChartExample/build.gradle, + versionCode 40, + versionName '2.1.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, +++ b/MPChartExample/build.gradle, + versionCode 40, + versionName '2.1.0', +++ b/Projects_using_MPAndroidChart.txt]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + * Extra spacing for `axisMinimum` to be added to automatically calculated `axisMinimum`, + */, + protected float mSpaceMin = 0.f;, +, + /**, + * Extra spacing for `axisMaximum` to be added to automatically calculated `axisMaximum`, + */, + protected float mSpaceMax = 0.f;, +, + /**, + float min = mCustomAxisMin ? mAxisMinimum : (dataMin - mSpaceMin);, + float max = mCustomAxisMax ? mAxisMaximum : (dataMax + mSpaceMax);, +, + /**, + * Gets extra spacing for `axisMinimum` to be added to automatically calculated `axisMinimum`, + */, + public float getSpaceMin(), + {, + return
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getXAxis().setAxisMaxValue(count+1f);, + yVals1.add(new BarEntry(i + 1f, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + mChart.getXAxis().setAxisMaxValue(count+1f);, + yVals1.add(new BarEntry(i + 1f, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + xl.setGranularity(1f);, + xl.setCenterAxisLabels(true);, + float groupSpace = 0.04f;, + float barSpace = 0.02f;, + float barWidth = 0.3f;, + int startYear = 1980;, + int endYear = startYear + mSeekBarX.getProgress();, + tvX.setText(startYear + "\n-" + endYear);, + for (int i = startYear; i < endYear; i++) {, + for (int i = startYear; i < endYear; i++) {, + for (int i = startYear; i < endYear; i++) {, + mChart.getBarData().setBarWidth(barWidth);, + mChart.getBarData().groupBars(startYear, groupSpace, barSpace);, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="9", + android:targetSdkVersion="19" />, +++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="9", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, + * This Activity demonstrates drawing into the Chart with the finger. Both line, bar and scatter charts can be used for, + * drawing., +public class DrawChartActivity extends Activity implements OnChartValueSelectedListener, OnDrawListener {, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);, + Log.i("VALS SELECTED", "Value: " + values[0].getVal() + ", xIndex: " + highlights[0].getXIndex(), +, + @Override, + public void onEntryMoved(Entry entry) {, + Log.i(Chart.LOG_TAG, "Point moved " + entry.toString());, + }, +++ b/MPChartExample/AndroidManifest.xml, + android:minSdkVersion="9", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, + * This Activity demonstrates drawing
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="39", + android:versionName="2.0.9" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="39", + android:versionName="2.0.9" >, +++ b/MPChartExample/build.gradle, + versionCode 39, + versionName '2.0.9', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="39", + android:versionName="2.0.9" >, +++ b/MPChartExample/build.gradle, + versionCode 39, + versionName '2.0.9', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="39", + android:versionName="2.0.9" >, +++ b/MPChartExample/build.gradle, + versionCode 39, + versionName '2.0.9', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + holder.chart.animateY(700);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="39", + android:versionName="2.0.9" >, +++ b/MPChartExample/build.gradle, + versionCode 39, + versionName '2.0.9', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + holder.chart.animateY(700);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.animation.AnimationEasing;, + mChart.animateXY(1500, 1500, AnimationEasing.EasingOption.EaseOutBack);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="39", + android:versionName="2.0.9" >, +++ b/MPChartExample/build.gradle, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="20", + android:versionName="1.6.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="20", + android:versionName="1.6.1" >, +++ b/MPChartExample/build.gradle, + versionCode 20, + versionName '1.6.1']
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (mChart.isScaleXEnabled() != mChart.isScaleYEnabled()) {, + mTouchMode = mChart.isScaleXEnabled() ? X_ZOOM : Y_ZOOM;, + } else {, + mTouchMode = mSavedXDist > mSavedYDist ? X_ZOOM : Y_ZOOM;, + }]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, + if (inverted()) {, + if (inverted()) {, + * Returns true if the current touch situation should be interpreted as inverted, false if not., + *, + * @return, + */, + private boolean inverted() {, + return (mClosestDataSetToTouch == null && mChart.isAnyAxisInverted()) || (mClosestDataSetToTouch != null, + && mChart.isInverted(mClosestDataSetToTouch.getAxisDependency()));, + }, +, + /**]
[+++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionDashedLine", + android:title="Toggle dashed Line">, + </item>, + <item, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionDashedLine", + android:title="Toggle dashed Line">, + </item>, + <item, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.ChartData;, + , + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!", Toast.LENGTH_SHORT).show();, + } else Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT).show();, + DataSet set1 = new DataSet(yVals1, "DataSet");, + ArrayList<DataSet> dataSets = new ArrayList<DataSet>();, + ChartData data = new ChartData(xVals, dataSets);, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionDashedLine", + android:title="Toggle dashed Line">, + </item>, + <item, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.ChartData;, + , + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!", Toast.LENGTH_SHORT).show();, + } else Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT).show();, + DataSet set1
[+++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-5.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +// private void removeLastEntry() {, +//, +// PieData data = mChart.getDataOriginal();, +//, +// if (data != null) {, +//, +// PieDataSet set = data.getDataSet();, +//, +// if (set != null) {, +//, +// Entry e = set.getEntryForXIndex(set.getEntryCount() - 1);, +//, +// data.removeEntry(e, 0);, +// // or remove by index, +// // mData.removeEntry(xIndex, dataSetIndex);, +//, +// mChart.notifyDataSetChanged();, +// mChart.invalidate();, +// }, +// }, +// }, +// , +// private void addEntry() {, +//, +// PieData data = mChart.getDataOriginal();, +// , +// if(data != null) {, +//, +// PieDataSet
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="25", +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="25", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + // add a lot of colors, +, + for (int c : ColorTemplate.COLORFUL_COLORS), + colors.add(c);, +, + for (int c : ColorTemplate.LIBERTY_COLORS), + colors.add(c);, + , + for (int c : ColorTemplate.PASTEL_COLORS), + colors.add(c);, + , + colors.add(ColorTemplate.getHoloBlue());, +, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="25", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, + // add a lot of colors, +, + for (int c : ColorTemplate.COLORFUL_COLORS), + colors.add(c);, +, + for (int c
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="24", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="24", +++ b/MPChartExample/build.gradle, + versionCode 24]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + * @param count the number of y-axis labels that should be displayed, + * @param count the number of y-axis labels that should be displayed]
[+++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.0.0', +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getVal() + "");, + xVals.add(xValue);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +, + XAxisValue value = new XAxisValue(i, mMonths[i % 12]);, + xVals.add(value);, +++ b/MPChartExample/build.gradle, + classpath 'com.android.tools.build:gradle:2.0.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.data.XAxisValue;, + ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();, +,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + IDataSet set;, + final List sets = mData.getDataSets();, + final int count = sets.size();, + for(int i = 0 ; i < count ; i++){, + set = (IDataSet)sets.get(i);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + IDataSet set;, + final List sets = mData.getDataSets();, + final int count = sets.size();, + for(int i = 0 ; i < count ; i++){, + set = (IDataSet)sets.get(i);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarData.java, + IBarDataSet set;, + final int setCountJ = mDataSets.size();, + for(int j = 0 ; j < setCountJ ; j++){, + set = mDataSets.get(j);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + IDataSet set;, + final List sets
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, + set3.setShapeRenderer(new CustomScatterShapeRenderer());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, + set3.setShapeRenderer(new CustomScatterShapeRenderer());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, + set3.setShapeRenderer(new CustomScatterShapeRenderer());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, + set3.setShapeRenderer(new CustomScatterShapeRenderer());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, + set3.setShapeRenderer(new CustomScatterShapeRenderer());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/CustomScatterShapeRenderer.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java, +import android.graphics.drawable.shapes.Shape;, +, +import com.github.mikephil.charting.renderer.scatter.ShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.SquareShapeRenderer;, +import com.github.mikephil.charting.utils.ShapeRendererHandler;, + * Renderer responsible for rendering this DataSet, default: square, + protected ShapeRenderer mShapeRenderer = new SquareShapeRenderer();, + copied.mShapeRenderer = mShapeRenderer;, + * Sets the ScatterShape this DataSet should be drawn
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ /dev/null, +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="500", +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ /dev/null, +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + tvX.setText("" + (mSeekBarX.getProgress() + 1));, + float mult = mSeekBarY.getProgress() * 10000000f;, + data.setValueFormatter(new LargeValueFormatter());, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="500", +++ /dev/null, +++ b/MPChartExample/res/layout/activity_candlechart.xml, + android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + tvX.setText("" + (mSeekBarX.getProgress() + 1));, + float mult = mSeekBarY.getProgress() * 10000000f;,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="36", + android:versionName="2.0.7" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="36", + android:versionName="2.0.7" >, +++ b/MPChartExample/build.gradle, + versionCode 36, + versionName '2.0.7', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.7' , +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="36", + android:versionName="2.0.7" >, +++ b/MPChartExample/build.gradle, + versionCode 36, + versionName '2.0.7', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.7' , +++ b/README.md, + - **Combined-Chart (bar- and linechart in this case)**, +![alt tag](https://raw.github.com/PhilJay/MPChart/master/screenshots/combined_chart.png), +]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + if (sweepAngleOuter % 360f <= Utils.FLOAT_EPSILON) {]
[+++ b/MPChartExample/res/menu/combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionToggleLineValues", + android:title="Toggle line Values">, + </item>, + <item, + android:id="@+id/actionToggleBarValues", + android:title="Toggle bar Values">, + </item>, + <item, + android:id="@+id/actionToggleBarYDependency", + android:title="Toggle bar Y Axis dependency">, + </item>, + <item, + android:id="@+id/actionToggleLineYDependency", + android:title="Toggle line Y Axis dependency">, + </item>, +, +</menu>, +++ b/MPChartExample/res/menu/combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionToggleLineValues", + android:title="Toggle line Values">, + </item>, + <item, + android:id="@+id/actionToggleBarValues", + android:title="Toggle bar Values">, + </item>, + <item, + android:id="@+id/actionToggleBarYDependency", + android:title="Toggle bar Y Axis dependency">, + </item>, + <item, +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/assets/sine.txt, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/assets/cosine.txt, +++ b/MPChartExample/assets/hugecosine.txt, +++ b/MPChartExample/assets/hugesine.txt, +++ b/MPChartExample/assets/n.txt, +++ b/MPChartExample/assets/nlogn.txt, +++ b/MPChartExample/assets/sine.txt, +++ b/MPChartExample/assets/square.txt, +++ b/MPChartExample/AndroidManifest.xml, +
[+++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import java.util.ArrayList;, +, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import java.util.ArrayList;, +, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + mChart.setLineWidth(4f);, + mChart.setCircleSize(4f);, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent", + android:background="@android:color/darker_gray" >, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import java.util.ArrayList;, +, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + mChart.setLineWidth(4f);, + mChart.setCircleSize(4f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import android.graphics.PointF;, + drawMarkers();, +, + * Sets the minimum scale values for both axes. This limits the extent to, + * which the user can zoom-out. Scale 0.5f means 0.5x zoom (zoomed out by, + * factor 2), scale 0.1f means
[+++ b/MPChartExample/build.gradle, +, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1', +++ b/MPChartExample/build.gradle, +, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1', +++ b/MPChartExample/res/drawable/fade_red.xml, +<?xml version="1.0" encoding="utf-8"?>, +<shape xmlns:android="http://schemas.android.com/apk/res/android">, + <gradient, + android:angle="90", + android:startColor="#00ff0000", + android:endColor="#ffff0000" />, +</shape>, +++ b/MPChartExample/build.gradle, +, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), + //compile 'com.github.PhilJay:MPAndroidChart:v2.1.1', +++ b/MPChartExample/res/drawable/fade_red.xml, +<?xml version="1.0" encoding="utf-8"?>, +<shape xmlns:android="http://schemas.android.com/apk/res/android">, + <gradient, + android:angle="90", + android:startColor="#00ff0000", + android:endColor="#ffff0000" />, +</shape>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import android.graphics.drawable.Drawable;, +import android.support.v4.content.ContextCompat;, + Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_red);, + set1.setFillDrawable(drawable);, + set1.setDrawFilled(true);, +++ b/MPChartExample/build.gradle, +, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, + xAxis.setAxisMinValue(0f);, + xAxis.setAxisMaxValue(5f);, + xAxis.setLabelCount(5);, + xAxis.setCenterAxisLabels(true);, + xAxis.setGranularity(1f);, + final List<Data> data = new ArrayList<>();, + data.add(new Data(0.5f, -224.1f, "12-29"));, + data.add(new Data(1.5f, 238.5f, "12-30"));, + data.add(new Data(2.5f, 1280.1f, "12-31"));, + data.add(new Data(3.5f, -442.3f, "01-01"));, + data.add(new Data(4.5f, -2280.1f, "01-02"));, +, + xAxis.setValueFormatter(new AxisValueFormatter() {, + @Override, + public String getFormattedValue(float value, AxisBase axis) {, + return data.get(Math.min(Math.max((int) value, 0), data.size()-1)).xAxisValue;, + }, +, + @Override, + public int getDecimalDigits() {, + return 0;, + }, + });, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, + xAxis.setAxisMinValue(0f);, + xAxis.setAxisMaxValue(5f);, + xAxis.setLabelCount(5);, +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>,
[+++ b/.github/ISSUE_TEMPLATE/Bug_report.md, +---
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarLineScatterCandleBubbleRenderer.java, +package com.github.mikephil.charting.renderer;, +, +import com.github.mikephil.charting.animation.ChartAnimator;, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider;, +import com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet;, +import com.github.mikephil.charting.utils.ViewPortHandler;, +, +/**, + * Created by Philipp Jahoda on 09/06/16., + */, +public abstract class BarLineScatterCandleBubbleRenderer extends DataRenderer {, +, +, + public BarLineScatterCandleBubbleRenderer(ChartAnimator animator, ViewPortHandler viewPortHandler) {, + super(animator, viewPortHandler);, + }, +, + /**, + * Calculates and returns the x-bounds for the given DataSet in terms of index in their values array. This, + * includes minimum and maximum visible x, as well as range., + *, + * @param dataSet, + * @return, + */, + protected XBounds
[+++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.animation.ObjectAnimator;, +import android.graphics.PointF;, +import com.github.mikephil.charting.utils.Utils;, +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.animation.ObjectAnimator;, +import android.graphics.PointF;, +import com.github.mikephil.charting.utils.Utils;, +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:0.14.2', +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.animation.ObjectAnimator;, +import android.graphics.PointF;, +import com.github.mikephil.charting.utils.Utils;, +++
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + if(closestValues.isEmpty()) {, + return null;, + }, +, + Highlight high = buildHighlight(dataSet, i, xVal, DataSet.Rounding.CLOSEST);, +, + if(high != null), + vals.add(high);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, + if(closestValues.isEmpty()) {, + return null;, + }, +, + Highlight high = buildHighlight(dataSet, i, xVal, DataSet.Rounding.CLOSEST);, +, + if(high != null), + vals.add(high);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/ScatterChartRenderer.java, + XBounds bounds = getXBounds(mChart, dataSet);, +, + mAnimator.getPhaseX(), mAnimator.getPhaseY(), bounds.min, bounds.max);, + for (int j = 0; j < positions.length; j += 2) {, + Entry entry = dataSet.getEntryForIndex(j / 2 + bounds.min);, + positions[j + 1] - shapeSize, dataSet.getValueTextColor(j / 2 + bounds.min));,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 15, + versionName '1.3.3', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 15, + versionName '1.3.3', +++ b/MPChartExample/res/layout/activity_radarchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.RadarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 15, + versionName '1.3.3', +++ b/MPChartExample/res/layout/activity_radarchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent"
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, + // stacked, + entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, + set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, + // stacked, + entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, + set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, + // stacked, + entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, + set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.Highlighter;, + protected Highlighter mHighlighter;, + public Highlighter getHighlighter() {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, + // stacked, + entries2.add(new
[+++ b/MPChartExample/res/layout/activity_draw_chart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/layout/activity_draw_chart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +import com.github.mikephil.charting.charts.Chart;, +import com.github.mikephil.charting.interfaces.OnChartValueSelectedListener;, +import com.github.mikephil.charting.interfaces.OnDrawListener;, +public class DrawChartActivity extends Activity implements OnChartValueSelectedListener, OnDrawListener {, + setContentView(R.layout.activity_draw_chart);, + ct.addColorsForDataSets(ColorTemplate.COLORFUL_COLORS, this);, + mChart.setOnDrawListener(this);, + for (int i = 0; i < 148; i++) {, + }, + @Override, + public void onEntryAdded(Entry entry) {, + Log.i(Chart.LOG_TAG, entry.toString());, + }, +,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="47", + android:targetSdkVersion="23" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="47", + android:targetSdkVersion="23" />, +++ b/MPChartExample/build.gradle, + versionCode 47]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="21", + android:versionName="1.6.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="21", + android:versionName="1.6.2" >, +++ b/MPChartExample/build.gradle, + versionCode 21, + versionName '1.6.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="21", + android:versionName="1.6.2" >, +++ b/MPChartExample/build.gradle, + versionCode 21, + versionName '1.6.2', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="21", + android:versionName="1.6.2" >, +++ b/MPChartExample/build.gradle, + versionCode 21, + versionName '1.6.2', +++ /dev/null, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-2.jar, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="21", + android:versionName="1.6.2" >, +++ b/MPChartExample/build.gradle, + versionCode 21, + versionName '1.6.2', +++ /dev/null, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-2.jar, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyValueFormatter.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import com.github.mikephil.charting.utils.ValueFormatter;, +, +import java.text.DecimalFormat;, +, +public class MyValueFormatter implements ValueFormatter {, +, + DecimalFormat mFormatter
[+++ b/MPChartExample/res/menu/line.xml, + <item android:id="@+id/actionToggleRound" android:title="Toggle Round"></item>, + <item android:id="@+id/actionToggleValues" android:title="Toggle Values"></item>, + <item android:id="@+id/actionToggleFilled" android:title="Toggle Filled"></item>, + <item android:id="@+id/actionToggleCircles" android:title="Toggle Circles"></item>, + <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, + <item android:id="@+id/actionToggleStartzero" android:title="Toggle StartZero"></item>, + <item android:id="@+id/actionToggleAdjustXLegend" android:title="Toggle AdjustXLegend"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/res/menu/line.xml, + <item android:id="@+id/actionToggleRound" android:title="Toggle Round"></item>, + <item android:id="@+id/actionToggleValues" android:title="Toggle Values"></item>, + <item android:id="@+id/actionToggleFilled" android:title="Toggle Filled"></item>, + <item android:id="@+id/actionToggleCircles" android:title="Toggle Circles"></item>, + <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, + <item android:id="@+id/actionToggleStartzero" android:title="Toggle StartZero"></item>, + <item android:id="@+id/actionToggleAdjustXLegend" android:title="Toggle AdjustXLegend"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +, +public class LineChartActivity extends Activity implements OnSeekBarChangeListener,, + OnChartValueSelectedListener {,
[+++ b/MPChartExample/AndroidManifest.xml, + <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>, + <activity android:name="BarChartActivity"></activity>, + <activity android:name="PieChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>, + <activity android:name="BarChartActivity"></activity>, + <activity android:name="PieChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_barchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.BarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, + , + <SeekBar, + android:id="@+id/seekBar2", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_toLeftOf="@+id/tvYMax", + android:layout_marginRight="5dp", + android:max="2000", + android:paddingBottom="12dp" />, +, + <SeekBar, + android:id="@+id/seekBar1", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_above="@+id/seekBar2", + android:layout_margin="8dp", + android:layout_marginBottom="35dp", + android:layout_toLeftOf="@+id/tvXMax", + android:layout_marginRight="5dp", + android:max="1000", + android:paddingBottom="12dp" />, +, + <TextView, +
[+++ b/Projects_using_MPAndroidChart.txt, +, +Phone Addiction, +https://play.google.com/store/apps/details?id=com.tutorialsface.phoneaddiction]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, + public int getCircleColorCount(){, + return mCircleColors.size();, + }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, + public int getCircleColorCount(){, + return mCircleColors.size();, + }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java, + * Returns the number of colors in this DataSet's circle-color array., + *, + * @return, + */, + int getCircleColorCount();, +, + /**, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, + public int getCircleColorCount(){, + return mCircleColors.size();, + }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/ILineDataSet.java, + * Returns the number of colors in this DataSet's circle-color array., + *, + * @return, + */, + int getCircleColorCount();, +, + /**, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +import java.util.HashMap;, + private class
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +,
[+++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + posOffset = getPositiveYOffset(mDrawValueAboveBar);, + negOffset = getNegativeYOffset(mDrawValueAboveBar);, + protected float getPositiveYOffset(boolean drawAboveValueBar), + {, + return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, "8") * 1.5f);, + }, +, + protected float getNegativeYOffset(boolean drawAboveValueBar), + {, + return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils.convertDpToPixel(5));, + }, +, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + posOffset = getPositiveYOffset(mDrawValueAboveBar);, + negOffset = getNegativeYOffset(mDrawValueAboveBar);, + protected float getPositiveYOffset(boolean drawAboveValueBar), + {, + return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, "8") * 1.5f);, + }, +, + protected float getNegativeYOffset(boolean
[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + protected boolean mDrawBarShadow = true;, + protected RectF mBarShadow = new RectF();, + protected RectF mBarRect = new RectF();, + protected void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + protected boolean mDrawBarShadow = true;, + protected RectF mBarShadow = new RectF();, + protected RectF mBarRect = new RectF();, + protected void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.view.ViewGroup;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>, + extends ViewGroup, + setWillNotDraw(false);, + for (int i=0; i < getChildCount(); i++), + {, + getChildAt(i).layout(left, top, right, bottom);, +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBubble"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmDatabaseActivityRadar"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityHorizontalBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>,
[+++ b/MPChartExample/res/menu/combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionToggleLineValues", + android:title="Toggle line Values">, + </item>, + <item, + android:id="@+id/actionToggleBarValues", + android:title="Toggle bar Values">, + </item>, + <item, + android:id="@+id/actionToggleBarYDependency", + android:title="Toggle bar Y Axis dependency">, + </item>, + <item, + android:id="@+id/actionToggleLineYDependency", + android:title="Toggle line Y Axis dependency">, + </item>, +, +</menu>, +++ b/MPChartExample/res/menu/combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionToggleLineValues", + android:title="Toggle line Values">, + </item>, + <item, + android:id="@+id/actionToggleBarValues", + android:title="Toggle bar Values">, + </item>, + <item, + android:id="@+id/actionToggleBarYDependency", + android:title="Toggle bar Y Axis dependency">, + </item>, + <item, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:hardwareAccelerated="true", +++ b/MPChartExample/AndroidManifest.xml, + android:hardwareAccelerated="true", +++ b/MPChartExample/res/layout/activity_performance_linechart.xml, + android:max="29000", + android:layout_width="60dp", +++ b/MPChartExample/AndroidManifest.xml, + android:hardwareAccelerated="true", +++ b/MPChartExample/res/layout/activity_performance_linechart.xml, + android:max="29000", + android:layout_width="60dp", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + set1.setCircleSize(3f);, + set1.setDrawCircleHole(false);, + set1.setValueTextSize(9f);, +++ b/MPChartExample/AndroidManifest.xml, + android:hardwareAccelerated="true", +++ b/MPChartExample/res/layout/activity_performance_linechart.xml, + android:max="29000", + android:layout_width="60dp", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + set1.setCircleSize(3f);, + set1.setDrawCircleHole(false);, + set1.setValueTextSize(9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, + int count = mSeekBarValues.getProgress() + 1000;, + mTvCount.setText("" + count);, + mChart.resetTracking();, +, + setData(count, 500f);, + set1.setLineWidth(0.5f);, + set1.setDrawCubic(false);, + set1.setDrawFilled(false);, +++ b/MPChartExample/AndroidManifest.xml, + android:hardwareAccelerated="true", +++ b/MPChartExample/res/layout/activity_performance_linechart.xml, + android:max="29000", + android:layout_width="60dp", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + set1.setCircleSize(3f);, + set1.setDrawCircleHole(false);, + set1.setValueTextSize(9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, + int count =
[+++ b/Projects_using_MPAndroidChart.txt, +, +My Expenses, +https://play.google.com/store/apps/details?id=org.totschnig.myexpenses]
[+++ b/MPChartExample/assets/cosine.txt, +Cosine function, +1.0#0, +0.9998000066755178#1, +0.9992001066967312#2, +0.9982005400156222#3, +0.996801706445518#4, +0.9950041651292624#5, +0.992808635283034#6, +0.990215996129463#7, +0.9872272839453933#8, +0.9838436941753507#9, +0.9800665802095645#10, +0.9758974528426302#11, +0.9713379796692108#12, +0.9663899805862244#13, +0.9610554379813293#14, +0.9553364856027305#15, +0.9492354109575819#16, +0.9427546543970131#17, +0.9358968081400203#18, +0.9286646152366127#19, +0.9210609684706269#20, +0.913088909202652#21, +0.904751626153523#22, +0.8960524541288755#23, +0.8869948726852646#24, +0.8775825047383886#25, +0.8678191299221538#26, +0.8577086396867667#27, +0.8472550780858032#28, +0.8364626263965502#29, +0.8253356014475525#30, +0.8138784538919424#31, +0.8020957664272419#32, +0.7899922519623475#33, +0.7775727517324336#34, +0.7648422333625261#35, +0.7518057888805234#36, +0.7384686326804557#37, +0.724836099436802#38, +0.7109136419706951#39, +0.6967068290688696#40, +0.6822213432562266#41, +0.667462978522903#42, +0.6524376380067577#43, +0.6371513316321991#44, +0.6216101737063007#45, +0.605820380473164#46, +0.5897882676275087#47, +0.5735202477884837#48, +0.5570228279347097#49, +0.54030260680158#50, +0.5233662722418589#51, +0.506220598550635#52, +0.48887244375569844#53, +0.47132874687442705#54, +0.45359652513827653#55, +0.4356828711859872#56, +0.4175949502266283#57, +0.3993399971736154#58, +0.3809253137508472#59, +0.36235826557211853#60, +0.34364627919497903#61, +0.3247968391502145#62, +0.3058174849481404#63, +0.2867158080629036#64, +0.2674994488960003#65, +0.2481760937202225#66, +0.22875347160525775#67, +0.2092393513261698#68, +0.18964153825599847#69, +0.16996787124372015#70, +0.1502262194788189#71, +0.1304244793437215#72, +0.11057057125535577#73, +0.09067243649709553#74, +0.07073803404235907#75, +0.050775337371132094#76, +0.03079233128068804#77, +0.01079700869178177#78, +-0.009202632548406111#79, +-0.02919859286529534#80, +-0.04918287415662309#81, +-0.06914748299157214#82, +-0.08908443380803052#83, +-0.10898575210670376#84, +-0.12884347764080226#85, +-0.1486496676000277#86, +-0.16839639978758542#87, +-0.18807577578895107#88, +-0.20767992413112554#89, +-0.22720100343111285#90, +-0.24663120553236303#91, +-0.2659627586279245#92, +-0.28518793036905754#93, +-0.3042990309580645#94,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +, + getXAxis().setSpaceMin(0.5f);, + getXAxis().setSpaceMax(0.5f);]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + drawMarkers(canvas);, +]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setHighlightEnabled(false);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setHighlightEnabled(false);, +++ b/MPChartLib/AndroidManifest.xml, + android:targetSdkVersion="21" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setHighlightEnabled(false);, +++ b/MPChartLib/AndroidManifest.xml, + android:targetSdkVersion="21" />, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setHighlightEnabled(false);, +++ b/MPChartLib/AndroidManifest.xml, + android:targetSdkVersion="21" />, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mXAxis == null), + return;, +, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setHighlightEnabled(false);, +++ b/MPChartLib/AndroidManifest.xml, + android:targetSdkVersion="21" />, +++ /dev/null, +++
[+++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +++
[+++ b/Projects_using_MPAndroidChart.txt, +, +ExpenseDroid - Expense Manager, +https://play.google.com/store/apps/details?id=com.tphoneix.avi.myapplication]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, + <activity android:name="LineChartActivity1"></activity> <!-- android:configChanges="keyboardHidden|orientation|screenSize" -->, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, + <activity android:name="LineChartActivity1"></activity> <!-- android:configChanges="keyboardHidden|orientation|screenSize" -->, +++ b/MPChartExample/build.gradle, + versionCode 40, + versionName '2.1.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, + <activity android:name="LineChartActivity1"></activity> <!-- android:configChanges="keyboardHidden|orientation|screenSize" -->, +++ b/MPChartExample/build.gradle, + versionCode 40, + versionName '2.1.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.animation.EasingFunction;, + mChart.animateX(2500, EasingFunction.EaseInOutQuart);, +// mChart.invalidate();, + set1.setDrawFilled(true);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="40", + android:versionName="2.1.0" >, + <activity android:name="LineChartActivity1"></activity> <!-- android:configChanges="keyboardHidden|orientation|screenSize" -->, +++ b/MPChartExample/build.gradle, + versionCode 40, + versionName '2.1.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.animation.EasingFunction;, + mChart.animateX(2500, EasingFunction.EaseInOutQuart);, +// mChart.invalidate();, + set1.setDrawFilled(true);, +++
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="14", + android:versionName="1.3.2" >, +++ b/MPChartExample/build.gradle, + versionCode 14, + versionName '1.3.2', +++ /dev/null, +++ /dev/null, +++
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mXAxis.isDrawGridLinesBehindDataEnabled()), +, + if (mAxisLeft.isDrawGridLinesBehindDataEnabled()), +, + if (mAxisRight.isDrawGridLinesBehindDataEnabled()), + if (!mXAxis.isDrawGridLinesBehindDataEnabled()), + mXAxisRenderer.renderGridLines(canvas);, +, + if (!mAxisLeft.isDrawGridLinesBehindDataEnabled()), + mAxisRendererLeft.renderGridLines(canvas);, +, + if (!mAxisRight.isDrawGridLinesBehindDataEnabled()), + mAxisRendererRight.renderGridLines(canvas);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mXAxis.isDrawGridLinesBehindDataEnabled()), +, + if (mAxisLeft.isDrawGridLinesBehindDataEnabled()), +, + if (mAxisRight.isDrawGridLinesBehindDataEnabled()), + if (!mXAxis.isDrawGridLinesBehindDataEnabled()), + mXAxisRenderer.renderGridLines(canvas);, +, + if (!mAxisLeft.isDrawGridLinesBehindDataEnabled()), + mAxisRendererLeft.renderGridLines(canvas);, +, + if (!mAxisRight.isDrawGridLinesBehindDataEnabled()), + mAxisRendererRight.renderGridLines(canvas);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + * flag indicating the grid lines layer depth, + */, + protected boolean mDrawGridLinesBehindData = true;, +, + /**, + * If this is set to false, the grid lines are draw on top
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, + <activity android:name="CombinedChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, + <activity android:name="CombinedChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.CombinedChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, + <activity android:name="CombinedChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_combined.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.CombinedChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/res/layout/activity_realtime_linechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, +
[+++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, + PointF position = mChart.getPosition(e, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + yr.setDrawGridLines(true);, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="38", + android:versionName="2.0.8" >, + <activity android:name="LineChartActivity1"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="38", + android:versionName="2.0.8" >, + <activity android:name="LineChartActivity1"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 38, + versionName '2.0.8', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.8' , +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="38", + android:versionName="2.0.8" >, + <activity android:name="LineChartActivity1"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 38, + versionName '2.0.8', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.8' , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.animateX(2500);, + mChart.animateY(3000);, + public void onChartTranslate(MotionEvent me, float dX, float dY) {, + Log.i("Translate / Move", "dX: " + dX + ", dY: " + dY);, + }, +, + @Override, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="38", + android:versionName="2.0.8" >, + <activity android:name="LineChartActivity1"></activity>,
[+++ b/CONTRIBUTING.md, +Bug-fixes and features often come from users of the MPAndroidChart library and improve it greatly. We want to keep it as easy as possible to contribute changes that improve the experience for users all around the world. There are a few guidelines that we, +++ b/CONTRIBUTING.md, +Bug-fixes and features often come from users of the MPAndroidChart library and improve it greatly. We want to keep it as easy as possible to contribute changes that improve the experience for users all around the world. There are a few guidelines that we, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >,
[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, + private boolean mDrawBarShadow = true;, + private RectF mBarShadow = new RectF();, + private RectF mBarRect = new RectF();, + private void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, + private boolean mDrawBarShadow = true;, + private RectF mBarShadow = new RectF();, + private RectF mBarRect = new RectF();, + private void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View, + super.onLayout(changed, left, top, right, bottom);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, + private boolean mDrawBarShadow = true;, +
[+++ b/Projects_using_MPAndroidChart.txt, +, +H-Files, +https://play.google.com/store/apps/details?id=com.hconnect.hfiles&hl=en]
[+++ b/MPChartExample/build.gradle, +++ b/MPChartExample/build.gradle, +++ /dev/null, +++ b/MPChartExample/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/MPChartLib/build.gradle, + testOptions {, + unitTests.returnDefaultValues = true // this prevents "not mocked" error, + }, + testCompile 'junit:junit:4.12', + testCompile "org.mockito:mockito-core:1.9.5", +++ b/MPChartExample/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/MPChartLib/build.gradle, + testOptions {, + unitTests.returnDefaultValues = true // this prevents "not mocked" error, + }, + testCompile 'junit:junit:4.12', + testCompile "org.mockito:mockito-core:1.9.5", +++ /dev/null, +++ b/MPChartExample/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/MPChartLib/build.gradle, + testOptions {, + unitTests.returnDefaultValues = true // this prevents "not mocked" error, + }, + testCompile 'junit:junit:4.12', +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/BarBuffer.java, + if (value == 0.0f && (posY == 0.0f || negY == 0.0f)) {, + // Take care of the situation of a 0.0 value, which overlaps a non-zero bar, + y = value;, + yStart = y;, + } else if (value >= 0.0f) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/BarBuffer.java, + if (value == 0.0f && (posY == 0.0f || negY == 0.0f)) {, + // Take care of the situation of a 0.0 value, which overlaps a non-zero bar, + y = value;, + yStart = y;, + } else if (value >= 0.0f) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, +
[+++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:0.12.+', +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setDrawXLabels(true);, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setDrawXLabels(true);, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setDrawXLabels(true);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setDrawXLabels(true);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setDrawXLabels(true);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + mChart.setDrawXLabels(true);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +public abstract class Chart<T extends ChartData<? extends DataSet<?
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="43", + android:versionName="2.1.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="43", + android:versionName="2.1.2" >, +++ b/MPChartExample/build.gradle, + versionCode 43, + versionName '2.1.2']
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + for (int i = 0; i < count; i++) {, + float val = (float) (Math.random() * range);, + yVals1.add(new BarEntry(i, val));, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + for (int i = 0; i < count; i++) {, + float val = (float) (Math.random() * range);, + yVals1.add(new BarEntry(i, val));, + }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/HorizontalBarHighlighter.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.utils.PointD;, + PointD pos = getValsForTouch(x, y);, + SelectionDetail selectionDetail = getSelectionDetail((float) pos.y, x, y);, + IBarDataSet set = barData.getDataSetByIndex(selectionDetail.dataSetIndex);, + (float) pos.y,, + (float) pos.x);, + selectionDetail.xValue,, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, + for (int i = 0; i <
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmWikiExample"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmWikiExample"></activity>, +++ b/MPChartExample/res/layout/activity_realm_wiki.xml, +<?xml version="1.0" encoding="utf-8"?>, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/white", + android:orientation="vertical">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/lineChart", + android:layout_width="match_parent", + android:layout_height="0dp", + android:layout_weight="1" />, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/barChart", + android:layout_width="match_parent", + android:layout_height="0dp", + android:layout_weight="1" />, +, +</LinearLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmWikiExample"></activity>, +++ b/MPChartExample/res/layout/activity_realm_wiki.xml, +<?xml version="1.0" encoding="utf-8"?>, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:background="@android:color/white", + android:orientation="vertical">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/lineChart", + android:layout_width="match_parent", + android:layout_height="0dp", + android:layout_weight="1" />, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/barChart", + android:layout_width="match_parent", + android:layout_height="0dp", + android:layout_weight="1" />, +, +</LinearLayout>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmMainActivity.java,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + trans.rectToPixelPhase(mBarRect, mAnimator.getPhaseY());, + float entryIndex = set.getEntryIndex(e);, + if (e == null || entryIndex > set.getEntryCount() * mAnimator.getPhaseX()), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + trans.rectToPixelPhase(mBarRect, mAnimator.getPhaseY());, + float entryIndex = set.getEntryIndex(e);, + if (e == null || entryIndex > set.getEntryCount() * mAnimator.getPhaseX()), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java, + trans.rectToPixelPhaseHorizontal(mBarRect, mAnimator.getPhaseY());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, + trans.rectToPixelPhase(mBarRect, mAnimator.getPhaseY());, + float entryIndex = set.getEntryIndex(e);, + if (e == null || entryIndex > set.getEntryCount() * mAnimator.getPhaseX()), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java, + trans.rectToPixelPhaseHorizontal(mBarRect, mAnimator.getPhaseY());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Transformer.java, + public void rectToPixelPhase(RectF r, float phaseY) {, + public void rectToPixelPhaseHorizontal(RectF r, float phaseY) {, +, + // multiply the height of the
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + int n = mAxis.isCenterAxisLabelsEnabled() ? 1 : 0;]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 15, + versionName '1.3.3', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 15, + versionName '1.3.3', +++ b/MPChartExample/res/layout/activity_radarchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.RadarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="15", + android:versionName="1.3.3" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 15, + versionName '1.3.3', +++ b/MPChartExample/res/layout/activity_radarchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent"
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="19", + android:versionName="1.5.2" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="19", + android:versionName="1.5.2" >, +++ b/MPChartExample/build.gradle, + versionCode 19, + versionName '1.5.2', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="19", + android:versionName="1.5.2" >, +++ b/MPChartExample/build.gradle, + versionCode 19, + versionName '1.5.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="19", + android:versionName="1.5.2" >, +++ b/MPChartExample/build.gradle, + versionCode 19, + versionName '1.5.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="19", + android:versionName="1.5.2" >, +++ b/MPChartExample/build.gradle, + versionCode 19, + versionName '1.5.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="19", + android:versionName="1.5.2" >, +++ b/MPChartExample/build.gradle, + versionCode 19, + versionName '1.5.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++
[+++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Paint.Align;, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +import com.nineoldandroids.animation.ObjectAnimator;, +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:0.12.+', +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +++
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, + * @param space, + * @param labelpaint, + ArrayList<FSize> calculatedLineSizesForCalculateDimensions = new ArrayList<>();, +, + //ArrayList<Boolean> calculatedLabelBreakPoints = new ArrayList<Boolean>(labelCount);, +, + if(mCalculatedLabelSizes.length != labelCount){, + mCalculatedLabelSizes = new FSize[labelCount];, + }, + int calculatedLabelSizesIndex = 0;, +, + if(mCalculatedLabelBreakPoints.length != labelCount){, + mCalculatedLabelBreakPoints = new Boolean[labelCount];, + }, + int calculatedLabelBreakIndex = 0;, +, + ArrayList<FSize> calculatedLineSizes = calculatedLineSizesForCalculateDimensions;, + FSize.recycleInstances(calculatedLineSizes);, + calculatedLineSizes.clear();, + mCalculatedLabelBreakPoints[calculatedLabelBreakIndex] = false;, + calculatedLabelBreakIndex++;, + if(mCalculatedLabelSizes[calculatedLabelSizesIndex] == null){, + mCalculatedLabelSizes[calculatedLabelSizesIndex] = Utils.calcTextSize(labelpaint, mLabels[i]);, + }else{, + Utils.calcTextSize(labelpaint, mLabels[i], mCalculatedLabelSizes[calculatedLabelSizesIndex]);, + }, + FSize labelSize = mCalculatedLabelSizes[calculatedLabelSizesIndex];, + calculatedLabelSizesIndex++;, + requiredWidth
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/RadarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, +import com.github.mikephil.charting.formatter.DefaultAxisValueFormatter;, + * the minimum interval between axis
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + public void zoomToCenter(float scaleX, float scaleY) {]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, + PointD pos = getValsForTouch(x, y);, + SelectionDetail selectionDetail = getSelectionDetail((float) pos.x, x, y);, + IBarDataSet set = barData.getDataSetByIndex(selectionDetail.dataSetIndex);, + (float) pos.x,, + (float) pos.y);, + protected SelectionDetail getSelectionDetail(float xVal, float x, float y) {, + int closestDataSetIndex = 0;, + float closestDistance = Float.MAX_VALUE;, + Entry closestEntry = null;, +, + for(int i = 0; i < barData.getDataSets().size(); i++) {, +, + IBarDataSet dataSet = barData.getDataSetByIndex(i);, + final float distance = Math.abs(xVal - entry.getX());, +, + if(distance < closestDistance) {, + closestDataSetIndex = i;, + closestDistance = distance;, + closestEntry = entry;,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + float offset = Utils.convertDpToPixel(5.f);, +, +, +, + if(drawXOutside), + mEntryLabelsPaint.setTextAlign(Align.RIGHT);, +, +, + if(drawXOutside), + mEntryLabelsPaint.setTextAlign(Align.LEFT);, +]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + // enable description text, + mChart.getDescription().setEnabled(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + // enable description text, + mChart.getDescription().setEnabled(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, + // enable description text, + mChart.getDescription().setEnabled(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import android.graphics.Typeface;, + MPPointF c =
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Rect;, + protected RectF mOnValueSelectedRectF = new RectF();, + RectF bounds = mOnValueSelectedRectF;, + mChart.getBarBounds((BarEntry) e, bounds);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Rect;, + protected RectF mOnValueSelectedRectF = new RectF();, + RectF bounds = mOnValueSelectedRectF;, + mChart.getBarBounds((BarEntry) e, bounds);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +import android.graphics.Rect;, + protected RectF mOnValueSelectedRectF = new RectF();, + RectF bounds = mOnValueSelectedRectF;, + mChart.getBarBounds((BarEntry) e, bounds);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Rect;, + protected RectF mOnValueSelectedRectF = new RectF();, + RectF bounds = mOnValueSelectedRectF;, + mChart.getBarBounds((BarEntry) e, bounds);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +import android.graphics.Rect;, + protected RectF mOnValueSelectedRectF = new RectF();, + RectF bounds = mOnValueSelectedRectF;, + mChart.getBarBounds((BarEntry)
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, + private String[] mSuffix = new String[]{, + private int mMaxLength = 5;, + public void setSuffix(String[] suffix) {, + this.mSuffix = suffix;, + }, +, + public void setMaxLength(int maxLength) {, + this.mMaxLength = maxLength;, + r = r.replaceAll("E[0-9][0-9]", mSuffix[combined / 3]);, + while (r.length() > mMaxLength || r.matches("[0-9]+\\.[a-z]")) {]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="33", + android:versionName="2.0.1" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="33", + android:versionName="2.0.1" >, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="33", + android:versionName="2.0.1" >, +++ b/MPChartExample/libs/mpandroidchartlibrary-2-0-1.jar, +++ b/MPChartExample/project.properties]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="44", + android:versionName="2.1.3" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="44", + android:versionName="2.1.3" >, +++ b/MPChartExample/build.gradle, + versionCode 44, + versionName '2.1.3']
[+++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, + for (int i=0; i < getChildCount(); i++), + {, + getChildAt(i).layout(left, top, right, bottom);, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Returns the Description object of the chart that is responsible for holding all information related, + * to the description text that is displayed in the bottom right corner of the chart (by default)., +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * Returns the Description object of the chart that is responsible for holding all information related, + * to the description text that is displayed in the bottom right corner of the chart (by default)., +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java, +, + @Test, + public void testGetEntryForXValueWithDuplicates() {, +, + // sorted list of values
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getY() + "");, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getY() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + "low: " + mChart.getLowestVisibleX() + ", high: ", + + mChart.getHighestVisibleX());, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + XAxisValue xValue = new XAxisValue(i, (int) yVals1.get(i).getY() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + "low: " + mChart.getLowestVisibleX() + ", high: ", + + mChart.getHighestVisibleX());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + "Value: " + e.getY() + ", xIndex: " + e.getX(), +++ b/MPChartExample/AndroidManifest.xml,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java, + XBounds bounds = getXBounds(mChart, dataSet);, + for (int j = bounds.min; j <= bounds.range + bounds.min; j++) {, + XBounds bounds = getXBounds(mChart, dataSet);, + dataSet, mAnimator.getPhaseX(), mAnimator.getPhaseY(), bounds.min, bounds.max);, + CandleEntry entry = dataSet.getEntryForIndex(j / 2 + bounds.min);, + if (e == null), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BarChartRenderer.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java, + XBounds bounds = getXBounds(mChart, dataSet);, + for (int j = bounds.min; j <= bounds.range + bounds.min; j++) {, + XBounds bounds = getXBounds(mChart, dataSet);, + dataSet, mAnimator.getPhaseX(), mAnimator.getPhaseY(), bounds.min, bounds.max);, + CandleEntry entry = dataSet.getEntryForIndex(j / 2 + bounds.min);, + if (e ==
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.components.XAxis;, + LimitLine llXAxis = new LimitLine(10f, "Index 10");, + llXAxis.setLineWidth(4f);, + llXAxis.enableDashedLine(10f, 10f, 0f);, + llXAxis.setLabelPosition(LimitLabelPosition.RIGHT_BOTTOM);, + llXAxis.setTextSize(10f);, +, + XAxis xAxis = mChart.getXAxis();, + xAxis.addLimitLine(llXAxis);, + ll1.setLabelPosition(LimitLabelPosition.RIGHT_TOP);, + ll2.setLabelPosition(LimitLabelPosition.RIGHT_BOTTOM);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.components.XAxis;, + LimitLine llXAxis = new LimitLine(10f, "Index 10");, + llXAxis.setLineWidth(4f);, + llXAxis.enableDashedLine(10f, 10f, 0f);, + llXAxis.setLabelPosition(LimitLabelPosition.RIGHT_BOTTOM);, + llXAxis.setTextSize(10f);, +, + XAxis xAxis = mChart.getXAxis();, + xAxis.addLimitLine(llXAxis);, + ll1.setLabelPosition(LimitLabelPosition.RIGHT_TOP);, + ll2.setLabelPosition(LimitLabelPosition.RIGHT_BOTTOM);, +++ b/MPChartLib/src/com/github/mikephil/charting/components/LimitLine.java, + private LimitLabelPosition mLabelPosition = LimitLabelPosition.RIGHT_TOP;, + LEFT_TOP, LEFT_BOTTOM, RIGHT_TOP, RIGHT_BOTTOM, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.components.XAxis;, + LimitLine llXAxis = new LimitLine(10f, "Index 10");, + llXAxis.setLineWidth(4f);, + llXAxis.enableDashedLine(10f, 10f, 0f);,
[+++ b/MPChartExample/build.gradle, + compile project(':MPChartLib-Realm'), +++ b/MPChartExample/build.gradle, + compile project(':MPChartLib-Realm'), +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="150", + android:max="1500", +++ b/MPChartExample/build.gradle, + compile project(':MPChartLib-Realm'), +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="150", + android:max="1500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Rect;, +import com.github.mikephil.charting.utils.MPPointF;, + protected RectF mOnValueSelectedRectF = new RectF();, + RectF bounds = mOnValueSelectedRectF;, + mChart.getBarBounds((BarEntry) e, bounds);, + MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);, +, + MPPointF.recycleInstance(position);, +++ b/MPChartExample/build.gradle, + compile project(':MPChartLib-Realm'), +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="150", + android:max="1500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Rect;, +import com.github.mikephil.charting.utils.MPPointF;, + protected RectF mOnValueSelectedRectF = new RectF();, + RectF bounds = mOnValueSelectedRectF;, + mChart.getBarBounds((BarEntry) e, bounds);, + MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);, +, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + protected Matrix mZoomMatrixBuffer = new Matrix();, + * Zooms in by 1.4f, into the charts center., + mViewPortHandler.zoomIn(center.x, -center.y, mZoomMatrixBuffer);, + mViewPortHandler.refresh(mZoomMatrixBuffer, this, false);, + * Zooms out by 0.7f, from the charts center., + mViewPortHandler.zoomOut(center.x, -center.y, mZoomMatrixBuffer);, + mViewPortHandler.refresh(mZoomMatrixBuffer, this, false);, + /**, + * Zooms out to original size., + */, + public void resetZoom() {, +, + mViewPortHandler.resetZoom(mZoomMatrixBuffer);, + mViewPortHandler.refresh(mZoomMatrixBuffer, this, false);, +, + // Range might have changed, which means that Y-axis labels, + // could have changed in size, affecting Y-axis size., + // So we need to recalculate offsets., +
[+++ b/MPChartExample/AndroidManifest.xml, + package="com.xxmassdeveloper.mpchartexample">, + android:allowBackup="false", + <action android:name="android.intent.action.VIEW" />, + <activity android:name="LineChartActivity1" /> <!-- android:configChanges="keyboardHidden|orientation|screenSize" -->, + <activity android:name="LineChartActivity2" />, + <activity android:name=".LineChartTime" />, + <activity android:name="BarChartActivity" />, + <activity android:name="HorizontalBarChartActivity" />, + <activity android:name="PieChartActivity" />, + <activity android:name="PiePolylineChartActivity" />, + <activity android:name="MultiLineChartActivity" />, + <activity android:name="BarChartActivityMultiDataset" />, + <activity android:name="DrawChartActivity" />, + <activity android:name="ScatterChartActivity" />, + <activity android:name="BubbleChartActivity" />, + <activity android:name="com.xxmassdeveloper.mpchartexample.fragments.SimpleChartDemo" />, + <activity android:name="ListViewBarChartActivity" />, + <activity android:name="ListViewMultiChartActivity" />, + <activity android:name="StackedBarActivity" />, + <activity android:name="AnotherBarActivity" />, + <activity android:name="InvertedLineChartActivity" />, + <activity android:name="CandleStickChartActivity" />, + <activity android:name="CubicLineChartActivity" />, + <activity android:name="RadarChartActivity" />, + <activity
[+++ /dev/null, +++ /dev/null, +++ b/screenshots/piechart_selected.png]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + mMaxHighlightDistance = Utils.convertDpToPixel(500f);]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/res/layout/activity_barchart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/res/layout/activity_barchart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".RealmDatabaseActivityLine"></activity>, + <activity android:name=".RealmDatabaseActivityBar"></activity>, +++ b/MPChartExample/res/layout/activity_barchart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/chart1",
[+++ b/MPChartLib/AndroidManifest.xml, + android:targetSdkVersion="22" />, +++ b/MPChartLib/AndroidManifest.xml, + android:targetSdkVersion="22" />, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java, + * Data object that allows the combination of Line-, Bar-, Scatter-, Bubble- and, + if (mLineData != null), + if (mBarData != null), + if (mCandleData != null), + if (mScatterData != null), + if (mBubbleData != null), + mBubbleData.notifyDataChanged();]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + buildToolsVersion '27.0.3', + classpath 'com.android.tools.build:gradle:3.1.2', +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + buildToolsVersion '27.0.3', + classpath 'com.android.tools.build:gradle:3.1.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + buildToolsVersion '27.0.3', + classpath 'com.android.tools.build:gradle:3.1.2', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.os.Bundle;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.animation.Easing;, +import com.github.mikephil.charting.charts.RadarChart;, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.MarkerView;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.RadarData;, +import com.github.mikephil.charting.data.RadarDataSet;, +import com.github.mikephil.charting.data.RadarEntry;, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + protected float[] mGetPositionBuffer = new float[2];, + float[] vals = mGetPositionBuffer;, + vals[0] = e.getX();, + vals[1] = e.getY();, + protected float[] mOnSizeChangedBuffer = new float[2];, + float[] pts = mOnSizeChangedBuffer;, + pts[0] = pts[1] = 0;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + protected float[] mGetPositionBuffer = new float[2];, + float[] vals = mGetPositionBuffer;, + vals[0] = e.getX();, + vals[1] = e.getY();, + protected float[] mOnSizeChangedBuffer = new float[2];, + float[] pts = mOnSizeChangedBuffer;, + pts[0] = pts[1] = 0;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, + protected float[] mGetPositionBuffer = new float[2];, + float[] vals = mGetPositionBuffer;, + vals[0] = e.getY();, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, + <activity android:name=".FilledLineActivity"></activity>, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, + <activity android:name=".FilledLineActivity"></activity>, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, + <activity android:name=".FilledLineActivity"></activity>, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, + <activity android:name=".FilledLineActivity"></activity>, + <activity android:name=".HalfPieChartActivity"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, + mViewPortHandler.getChartWidth() * mLegend.getMaxSizePercent());]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, + for (IDataSet set : mChart.getData().getDataSets()), + ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local',
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent" >, + android:layout_height="match_parent" />, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent" >, + android:layout_height="match_parent" />, +</RelativeLayout>, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml,
[+++ b/MPChartExample/res/drawable-nodpi/marker.png, +++ b/MPChartExample/res/drawable-nodpi/marker.png, +++ b/MPChartExample/res/layout/custom_marker_view.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="60dp", + android:layout_height="50dp", + android:background="@drawable/marker" >, +, + <TextView, + android:id="@+id/textView1", + android:layout_width="wrap_content", + android:layout_height="wrap_content", + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:text="Selected.", + android:textSize="10dp", + android:textColor="@android:color/white", + android:textAppearance="?android:attr/textAppearanceSmall" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/drawable-nodpi/marker.png, +++ b/MPChartExample/res/layout/custom_marker_view.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="60dp", + android:layout_height="50dp", + android:background="@drawable/marker" >, +, + <TextView, + android:id="@+id/textView1", + android:layout_width="wrap_content", + android:layout_height="wrap_content", + android:layout_centerHorizontal="true", + android:layout_centerVertical="true", + android:text="Selected.", + android:textSize="10dp", + android:textColor="@android:color/white", + android:textAppearance="?android:attr/textAppearanceSmall" />, +, +</RelativeLayout>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.MarkerView;, + // create a MarkerView, + MarkerView mv = new MarkerView(this);, +, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="46", + android:versionName="2.1.6" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="46", + android:versionName="2.1.6" >, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.2', + versionCode 46, + versionName '2.1.6', + classpath 'com.android.tools.build:gradle:1.5.0', + compile 'com.android.support:appcompat-v7:23.1.1', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="46", + android:versionName="2.1.6" >, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.2', + versionCode 46, + versionName '2.1.6', + classpath 'com.android.tools.build:gradle:1.5.0', + compile 'com.android.support:appcompat-v7:23.1.1', +++ b/MPChartLib/AndroidManifest.xml, +<manifest package="com.github.mikephil.charting">, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="46", + android:versionName="2.1.6" >, +++ b/MPChartExample/build.gradle, + buildToolsVersion '23.0.2', + versionCode 46, + versionName '2.1.6', + classpath 'com.android.tools.build:gradle:1.5.0', + compile 'com.android.support:appcompat-v7:23.1.1', +++ b/MPChartLib/AndroidManifest.xml, +<manifest package="com.github.mikephil.charting">, +++ b/MPChartLib/build.gradle, +apply plugin: 'maven', +apply plugin: 'com.github.dcendents.android-maven', + buildToolsVersion '23.0.2', +++
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/layout/list_item.xml, + android:layout_marginRight="10dp" />, +++ /dev/null, +++ b/MPChartExample/res/layout/list_item.xml, + android:layout_marginRight="10dp" />, +++ b/MPChartExample/res/layout/list_item_section.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/list_item.xml, + android:layout_marginRight="10dp" />, +++ b/MPChartExample/res/layout/list_item_section.xml, +++ b/MPChartExample/res/values/strings.xml, +++ /dev/null, +++ b/MPChartExample/res/layout/list_item.xml, + android:layout_marginRight="10dp" />, +++ b/MPChartExample/res/layout/list_item_section.xml, +++ b/MPChartExample/res/values/strings.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + protected void saveToGallery() {, +++ /dev/null, +++ b/MPChartExample/res/layout/list_item.xml, + android:layout_marginRight="10dp" />, +++ b/MPChartExample/res/layout/list_item_section.xml, +++ b/MPChartExample/res/values/strings.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + protected void saveToGallery() {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + protected void saveToGallery() {, + private final RectF onValueSelectedRectF = new RectF();, +++ /dev/null, +++ b/MPChartExample/res/layout/list_item.xml, + android:layout_marginRight="10dp" />, +++ b/MPChartExample/res/layout/list_item_section.xml, +++ b/MPChartExample/res/values/strings.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + protected void saveToGallery() {, +++
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public List<Integer> getValueColors() {, + return mValueColors;, + }, + /**, + * ###### ###### OTHER STYLING RELATED METHODS ##### ######, + */, + /**, + * ###### ###### DATA RELATED METHODS ###### ######, + */, + if (getEntryCount() > 0) {, +, + } else, + return false;, + if (getEntryCount() > 0) {, +, + T e = getEntryForIndex(getEntryCount() - 1);, + return removeEntry(e);, + } else, + return false;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, + public List<Integer> getValueColors() {, + return mValueColors;, + }, + /**, + * ###### ###### OTHER STYLING RELATED METHODS ##### ######,
[+++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.charts.LineChart, + <com.github.mikephil.charting.charts.BarChart, + com.github.mikephil.charting.charts.PieChartieChart, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.charts.LineChart, + <com.github.mikephil.charting.charts.BarChart, + com.github.mikephil.charting.charts.PieChartieChart, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_piechart.xml, + <com.github.mikephil.charting.charts.PieChart, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.charts.LineChart, + <com.github.mikephil.charting.charts.BarChart, + com.github.mikephil.charting.charts.PieChartieChart, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_piechart.xml, + <com.github.mikephil.charting.charts.PieChart, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_linechart.xml, + <com.github.mikephil.charting.charts.LineChart, +++ b/MPChartExample/res/layout/activity_multiplecharts.xml, + <com.github.mikephil.charting.charts.LineChart, + <com.github.mikephil.charting.charts.BarChart, + com.github.mikephil.charting.charts.PieChartieChart, + <com.github.mikephil.charting.charts.BarChart, +++ b/MPChartExample/res/layout/activity_piechart.xml, + <com.github.mikephil.charting.charts.PieChart, +++
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.formatter.YAxisValueFormatter;, + for (DataSet<?> set : mChart.getData().getDataSets()), + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + for (DataSet<?> set : mChart.getData().getDataSets()), +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, + float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, + float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.utils.PointD;, + selectionDetail.xValue,, + return getBase(x);, +//, +// float baseNoSpace = getBase(x);, +//, +// int setCount = mChart.getBarData().getDataSetCount();, +// int xIndex = (int) baseNoSpace / setCount;, +//, +// int valCount = mChart.getData().getXValCount();, +//, +// if (xIndex < 0), +// xIndex = 0;, +// else if (xIndex >= valCount), +// xIndex = valCount - 1;, +//, +// return xIndex;, +, + final Entry
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggle3D", + android:title="Toggle 3D">, + </item>, + <item, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggle3D", + android:title="Toggle 3D">, + </item>, + <item, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/menu/bar.xml, + android:id="@+id/actionToggle3D", + android:title="Toggle 3D">, + </item>, + <item, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.utils.XLabels;, +import com.github.mikephil.charting.utils.XLabels.XLabelPosition;, + mChart.setDrawYValues(false);, +, + mChart.setUnit(" €");, + mChart.setDrawYValues(true);, +, + // disable 3D, + mChart.set3DEnabled(false);, + , + mChart.setDrawVerticalGrid(false);, + mChart.setDrawHorizontalGrid(false);, + XLabels xLabels = mChart.getXLabels();,
[+++ b/MPChartExample/build.gradle, + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartExample/build.gradle, + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + * 10, no more than a range of 10 on the x-axis can be viewed at once without, + * 10, no less than a range of 10 on the x-axis can be viewed at once without, + * Limits the maximum and minimum x range that can be visible by pinching and zooming. e.g. minRange=10, maxRange=100 the, + * smallest range to be displayed at once is 10, and no more than a range of 100 values can be viewed at once without, + *
[+++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, + android:background="@android:color/white", +++ b/README.md, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, + android:background="@android:color/white", +++ b/README.md, +++ b/screenshots/bubblechart.png, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, + android:background="@android:color/white", +++ b/README.md, +++ b/screenshots/bubblechart.png, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:background="@android:color/white", +++ b/MPChartExample/res/layout/activity_horizontalbarchart.xml, + android:background="@android:color/white", +++ b/README.md, +++ b/screenshots/bubblechart.png, +++ /dev/null, +++ b/screenshots/horizontal_barchart.png]
[+++ b/MPChartExample/res/layout/activity_main.xml, + android:padding="10dp", + android:layout_margin="5dp", + android:layout_margin="5dp", + android:layout_margin="5dp", + android:layout_margin="5dp", +++ b/MPChartExample/res/layout/activity_main.xml, + android:padding="10dp", + android:layout_margin="5dp", + android:layout_margin="5dp", + android:layout_margin="5dp", + android:layout_margin="5dp", +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + mSeekBarX.setProgress(45);, + for (int i = 0; i < mSeekBarX.getProgress(); i++) {, + xVals.add((i)+"");, + for (int i = 0; i < mSeekBarX.getProgress(); i++) {, +++ b/MPChartExample/res/layout/activity_main.xml, + android:padding="10dp", + android:layout_margin="5dp", + android:layout_margin="5dp", + android:layout_margin="5dp", + android:layout_margin="5dp", +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, + mSeekBarX.setProgress(45);, + for (int i = 0; i < mSeekBarX.getProgress(); i++) {, + xVals.add((i)+"");, + for (int i = 0; i < mSeekBarX.getProgress(); i++) {, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, + mSeekBarX.setProgress(45);, + for (int
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + set1.setColors(ColorTemplate.VORDIPLOM_COLORS);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + set1.setColors(ColorTemplate.VORDIPLOM_COLORS);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java, + private LineData generateDataLine(int cnt) {, + d2.setColor(ColorTemplate.VORDIPLOM_COLORS[0]);, + d2.setCircleColor(ColorTemplate.VORDIPLOM_COLORS[0]);, + private BarData generateDataBar(int cnt) {, + d.setColors(ColorTemplate.VORDIPLOM_COLORS);, + private PieData generateDataPie(int cnt) {, + d.setColors(ColorTemplate.VORDIPLOM_COLORS);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + set1.setColors(ColorTemplate.VORDIPLOM_COLORS);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java, + private LineData generateDataLine(int cnt) {, + d2.setColor(ColorTemplate.VORDIPLOM_COLORS[0]);, + d2.setCircleColor(ColorTemplate.VORDIPLOM_COLORS[0]);, + private BarData generateDataBar(int cnt) {, + d.setColors(ColorTemplate.VORDIPLOM_COLORS);, + private PieData generateDataPie(int cnt) {, + d.setColors(ColorTemplate.VORDIPLOM_COLORS);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java, +import com.github.mikephil.charting.utils.ColorTemplate;, + private int[] mColors = new int[] {, + ColorTemplate.VORDIPLOM_COLORS[0], , + ColorTemplate.VORDIPLOM_COLORS[1],, + ColorTemplate.VORDIPLOM_COLORS[2], + };, + int color = mColors[z % mColors.length];, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent" >, + android:layout_height="match_parent" />, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + public void onValueSelected(Entry e, Highlight h) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + public void onValueSelected(Entry e, Highlight h) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + public void onValueSelected(Entry e, Highlight h) {, + Log.i("Activity", "Selected: " + e.toString() + ", dataSet: " + h.getDataSetIndex());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + public void onValueSelected(Entry e, Highlight h) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + public void onValueSelected(Entry e, Highlight h) {, + Log.i("Activity", "Selected: " + e.toString() + ", dataSet: " + h.getDataSetIndex());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + public void onValueSelected(Entry e, Highlight h) {, + + ", DataSet index: " + h.getDataSetIndex());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + public void onValueSelected(Entry e,
[+++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionToggleHorizontalCubic", + android:title="Toggle Horizontal Cubic">, + </item>, + <item, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionToggleHorizontalCubic", + android:title="Toggle Horizontal Cubic">, + </item>, + <item, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, + case R.id.actionToggleStepped: {, + List<ILineDataSet> sets = mChart.getData(), + .getDataSets();, +, + for (ILineDataSet iSet : sets) {, +, + LineDataSet set = (LineDataSet) iSet;, + set.setMode(set.getMode() == LineDataSet.Mode.STEPPED, + ? LineDataSet.Mode.LINEAR, + : LineDataSet.Mode.STEPPED);, + }, + mChart.invalidate();, + break;, + }, + case R.id.actionToggleHorizontalCubic: {, + List<ILineDataSet> sets = mChart.getData(), + .getDataSets();, +, + for (ILineDataSet iSet : sets) {, +, + LineDataSet set = (LineDataSet) iSet;, + set.setMode(set.getMode() ==
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + Entry e = set.getEntryForXValue(set.getEntryCount() - 1, Float.NaN);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + Entry e = set.getEntryForXValue(set.getEntryCount() - 1, Float.NaN);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + * programmatically highlight values., + * This method *will not* call the listener., + * Highlights any y-value at the given x-value in the given DataSet., + * Provide -1 as the dataSetIndex to undo all highlighting., + * This method will call the listener., + * @param x The x-value to highlight, + * @param dataSetIndex The dataset index to search in, + * Highlights the value at the given x-value and y-value in the
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="25", +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="25", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.Highlight;, + // mChart.addEntry(new Entry((float) (Math.random() * 100),, + // i+2), 0);, + // Toast.makeText(getApplicationContext(), "valcount: " +, + // mChart.getDataOriginal().getYValCount() + ", valsum: " +, + // mChart.getDataOriginal().getYValueSum(),, + // Toast.LENGTH_SHORT).show();, + // set1.setShader(new LinearGradient(0, 0, 0, mChart.getHeight(),, + // Color.BLACK, Color.WHITE, Shader.TileMode.MIRROR));, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="25", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.Highlight;, + // mChart.addEntry(new Entry((float) (Math.random() * 100),, + // i+2), 0);, + // Toast.makeText(getApplicationContext(),
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.os.Bundle;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.animation.Easing;, +import com.github.mikephil.charting.charts.RadarChart;, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.MarkerView;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.RadarData;, +import com.github.mikephil.charting.data.RadarDataSet;, +import com.github.mikephil.charting.data.RadarEntry;, +import com.github.mikephil.charting.formatter.IAxisValueFormatter;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IRadarDataSet;, +import com.xxmassdeveloper.mpchartexample.custom.RadarMarkerView;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +, +public class RadarChartActivitry extends DemoBase {, +, + private RadarChart mChart;, +, + @Override, + protected void onCreate(Bundle savedInstanceState) {, + super.onCreate(savedInstanceState);, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, + WindowManager.LayoutParams.FLAG_FULLSCREEN);, + setContentView(R.layout.activity_radarchart_noseekbar);, +, + TextView tv
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + leftAxis.setAxisMinimum(0f); // this replaces setStartAtZero(true), + rightAxis.setAxisMinimum(0f); // this replaces setStartAtZero(true), + mChart.getXAxis().setAxisMinimum(start);, + mChart.getXAxis().setAxisMaximum(start + count + 2);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + leftAxis.setAxisMinimum(0f); // this replaces setStartAtZero(true), + rightAxis.setAxisMinimum(0f); // this replaces setStartAtZero(true), + mChart.getXAxis().setAxisMinimum(start);, + mChart.getXAxis().setAxisMaximum(start + count + 2);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + leftAxis.setAxisMinimum(0f); // this replaces setStartAtZero(true), + mChart.getXAxis().setAxisMinimum(startYear);, + mChart.getXAxis().setAxisMaximum(mChart.getBarData().getGroupWidth(groupSpace, barSpace) * mSeekBarX.getProgress() + startYear);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + leftAxis.setAxisMinimum(0f); // this replaces setStartAtZero(true), + rightAxis.setAxisMinimum(0f); // this replaces setStartAtZero(true), + mChart.getXAxis().setAxisMinimum(start);, + mChart.getXAxis().setAxisMaximum(start + count + 2);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + leftAxis.setAxisMinimum(0f); // this replaces setStartAtZero(true), + mChart.getXAxis().setAxisMinimum(startYear);, + mChart.getXAxis().setAxisMaximum(mChart.getBarData().getGroupWidth(groupSpace, barSpace) * mSeekBarX.getProgress() +
[+++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.animation.ObjectAnimator;, +import android.graphics.PointF;, +import com.github.mikephil.charting.utils.Utils;, +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.animation.ObjectAnimator;, +import android.graphics.PointF;, +import com.github.mikephil.charting.utils.Utils;, +++ b/build.gradle, + classpath 'com.android.tools.build:gradle:0.14.2', +++ b/MPChartLib/build.gradle, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.animation.ObjectAnimator;, +import android.animation.ValueAnimator;, + implements ValueAnimator.AnimatorUpdateListener, ChartInterface {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.animation.ObjectAnimator;, +import android.graphics.PointF;, +import com.github.mikephil.charting.utils.Utils;, +++
[+++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/build.gradle, + minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, + implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java, +package com.github.mikephil.charting.charts;, +, +import android.content.Context;, +import android.graphics.Paint;, +import android.graphics.Rect;, +import android.util.AttributeSet;, +, +import com.github.mikephil.charting.renderer.ColumnToBarTransformer;, +import com.github.mikephil.charting.utils.YLabels;, +, +public class HorizontalBarChart extends ColumnChart, +{, + public HorizontalBarChart(Context context), + {, + super(context);, + }, +, + public HorizontalBarChart(Context context, AttributeSet attrs), + {, + super(context, attrs);, + }, +, + public HorizontalBarChart(Context context, AttributeSet attrs,,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.BarData;, +import com.github.mikephil.charting.data.BarDataSet;, + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!",, + Toast.LENGTH_SHORT).show();, + } else, + Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT), + .show();, + BarDataSet set1 = new BarDataSet(yVals1, "DataSet");, + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, + BarData data = new BarData(xVals, dataSets);, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.BarData;, +import com.github.mikephil.charting.data.BarDataSet;, + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!",, + Toast.LENGTH_SHORT).show();, + } else, + Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT), + .show();, + BarDataSet set1 = new
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART, + || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {, + float spacing = Utils.convertDpToPixel(12f);, + float space = Math, + .abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin)) / 100f * 15f);, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART, + || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {, + float spacing = Utils.convertDpToPixel(12f);, + float space = Math, + .abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin)) / 100f * 15f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, + // canvas.drawColor(Color.TRANSPARENT,, + // android.graphics.PorterDuff.Mode.XOR); // clear all, + // contains the stacked legend size in pixels, + float
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +, +, +, + mViewPortHandler.zoom(scaleX, scaleY, x, -y, save);, + * x and y are the values (NOT PIXELS) of the zoom center.., + public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis) {, + * Zooms to the center of the chart with the given scale factor., + *, + * @param scaleX, + * @param scaleY, + */, + public void zoomCenter(float scaleX, float scaleY) {, +, + MPPointF center = getCenterOffsets();, +, + Matrix save = mZoomMatrixBuffer;, + mViewPortHandler.zoom(scaleX, scaleY, center.x, -center.y, save);, + mViewPortHandler.refresh(save, this, false);, + }, +, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + cd.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + cd.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java, + cd.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + cd.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java, + cd.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + cd.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java, + cd.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, + data.setBarWidth(0.8f);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/buffer/BarBuffer.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivitySinus.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, + data.setBarWidth(0.8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, + cd.setBarWidth(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewMultiChartActivity.java, + cd.setBarWidth(0.9f);, +++
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.BarData;, +import com.github.mikephil.charting.data.BarDataSet;, + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!",, + Toast.LENGTH_SHORT).show();, + } else, + Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT), + .show();, + BarDataSet set1 = new BarDataSet(yVals1, "DataSet");, + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, + BarData data = new BarData(xVals, dataSets);, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="StackedBarActivity"></activity>, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.BarData;, +import com.github.mikephil.charting.data.BarDataSet;, + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!",, + Toast.LENGTH_SHORT).show();, + } else, + Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT), + .show();, + BarDataSet set1 = new
[+++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.BarData;, +import com.github.mikephil.charting.data.BarDataSet;, + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!",, + Toast.LENGTH_SHORT).show();, + } else, + Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT), + .show();, + BarDataSet set1 = new BarDataSet(yVals1, "DataSet");, + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, + BarData data = new BarData(xVals, dataSets);, +++ b/MPChartExample/res/menu/line.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.BarData;, +import com.github.mikephil.charting.data.BarDataSet;, + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!",, + Toast.LENGTH_SHORT).show();, + } else, + Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT), + .show();, + BarDataSet set1 = new BarDataSet(yVals1, "DataSet");, + ArrayList<BarDataSet> dataSets = new ArrayList<BarDataSet>();, + BarData data = new BarData(xVals, dataSets);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.data.BarData;, +import
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="45", + android:versionName="2.1.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="45", + android:versionName="2.1.5" >, +++ b/MPChartExample/build.gradle, + versionCode 45, + versionName '2.1.5']
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/ComponentBase.java, + * sets the size of the label text in density pixels min = 6f, max = 24f, default, + * @param size the text size, in DP, + * returns the text size that is currently set for the labels, in pixels]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/YAxis.java, + * flag indicating that auto scale min restriction should be used, + */, +, + private boolean mUseAutoScaleRestrictionMin = false;, + /**, + * flag indicating that auto scale max restriction should be used, + */, +, + private boolean mUseAutoScaleRestrictionMax = false;, + /**, + * restriction value of autoscale min, + */, +, + private float mAutoScaleMinRestriction = 0f;, +, + /**, + * restriction value of autoscale max, + */, + private float mAutoScaleMaxRestriction = 0f;, +, + /**, + /**, + * Sets min value restriction for autoscale, + */, + public
[+++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + buildToolsVersion '21.1.1', + targetSdkVersion 21, + classpath 'com.android.tools.build:gradle:1.1.0', + compile 'com.android.support:appcompat-v7:21.0.3', +++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + buildToolsVersion '21.1.1', + targetSdkVersion 21, + classpath 'com.android.tools.build:gradle:1.1.0', + compile 'com.android.support:appcompat-v7:21.0.3', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter custom = new MyValueFormatter();, + // data.setValueFormatter(new MyValueFormatter());, +++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + buildToolsVersion '21.1.1', + targetSdkVersion 21, + classpath 'com.android.tools.build:gradle:1.1.0', + compile 'com.android.support:appcompat-v7:21.0.3', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter custom = new MyValueFormatter();, + // data.setValueFormatter(new MyValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.utils.LargeValueFormatter;, +++ b/MPChartExample/build.gradle, + compileSdkVersion 21, + buildToolsVersion '21.1.1', + targetSdkVersion 21, +
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/CONTRIBUTING.md, +Bug-fixes and features often come from users of the MPAndroidChart library and improve it greatly. We want to keep it as easy as possible to contribute changes that improve the experience for users all around the world. There are a few guidelines that we, +need contributors to follow so that we can have a chance of keeping on, +top of things., +## Simple issues and bug reports, +If you are reporting a bug which can be observed visually, please add to your issue either:, +* Screenshots, if
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + rawInterval = range > 0.0 && !Double.isInfinite(range) ? range : 1.0;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java, + rawInterval = range > 0.0 && !Double.isInfinite(range) ? range : 1.0;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java, + rawInterval = range > 0.0 && !Double.isInfinite(range) ? range : 1.0;]
[+++ b/MPChartExample/build.gradle, + applicationId 'com.xxmassdeveloper.mpchartexample', +++ b/MPChartExample/build.gradle, + applicationId 'com.xxmassdeveloper.mpchartexample', +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:1.0.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, +apply plugin: 'android-library', + buildToolsVersion '19.1.0', + minSdkVersion 14, + shrinkResources false, +++ b/MPChartExample/build.gradle, + applicationId 'com.xxmassdeveloper.mpchartexample', +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:1.0.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, +apply plugin: 'android-library', + buildToolsVersion '19.1.0',
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="52", + android:versionName="3.0.0" >, + <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 52, + versionName '3.0.0', + testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner", +++ b/MPChartExample/res/drawable-nodpi/radar_marker.png, +++ b/MPChartExample/res/layout/activity_linechart_time.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1"
[+++ b/.gitignore, +.settings/, +.vscode/, +/.idea/*, +!/.idea/runConfigurations, +++ b/.gitignore, +.settings/, +.vscode/, +/.idea/*, +!/.idea/runConfigurations, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter xAxisFormatter = new DayAxisValueFormatter(chart);, + ValueFormatter custom = new MyValueFormatter("$");, +++ b/.gitignore, +.settings/, +.vscode/, +/.idea/*, +!/.idea/runConfigurations, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter xAxisFormatter = new DayAxisValueFormatter(chart);, + ValueFormatter custom = new MyValueFormatter("$");, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.ValueFormatter;, + xAxis.setValueFormatter(new ValueFormatter() {, + public String getFormattedValue(float value) {, +++ b/.gitignore, +.settings/, +.vscode/, +/.idea/*, +!/.idea/runConfigurations, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter xAxisFormatter = new DayAxisValueFormatter(chart);, + ValueFormatter custom = new MyValueFormatter("$");, +++ b/MPChartExample/src/main/java/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.formatter.ValueFormatter;, + xAxis.setValueFormatter(new ValueFormatter()
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/MarkerImage.java, + if (width == 0.f) {, + if (height == 0.f) {]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +++ b/MPChartExample/res/layout/activity_candlechart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.CandleStickChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".realm.RealmDatabaseActivityLine"></activity>, + <activity android:name=".realm.RealmDatabaseActivityBar"></activity>, + <activity android:name=".realm.RealmDatabaseActivityScatter"></activity>, + <activity android:name=".realm.RealmDatabaseActivityCandle"></activity>, + <activity android:name=".realm.RealmDatabaseActivityPie"></activity>, + <activity android:name=".realm.RealmMainActivity"></activity>, +++ b/MPChartExample/res/layout/activity_candlechart_noseekbar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.CandleStickChart,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter custom = new MyValueFormatter();, +, + leftAxis.setValueFormatter(custom);, + rightAxis.setValueFormatter(custom);, +// data.setValueFormatter(new MyValueFormatter());, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter custom = new MyValueFormatter();, +, + leftAxis.setValueFormatter(custom);, + rightAxis.setValueFormatter(custom);, +// data.setValueFormatter(new MyValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + leftAxis.setValueFormatter(new LargeValueFormatter());, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="32", + android:targetSdkVersion="21" />, +++ /dev/null, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.ValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyValueFormatter;, + ValueFormatter custom = new
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.animateX(2500);, + ArrayList<Entry> values = new ArrayList<Entry>();, + float val = (float) (Math.random() * range) + 3;, + values.add(new Entry(i, val));, + set1.setValues(values);, + set1 = new LineDataSet(values, "DataSet 1");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.animateX(2500);, + ArrayList<Entry> values = new ArrayList<Entry>();, + float val = (float) (Math.random() * range) + 3;, + values.add(new Entry(i, val));, + set1.setValues(values);, + set1 = new LineDataSet(values, "DataSet 1");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, + mChart.setHardwareAccelerationEnabled(true);, + xAxis.setGranularity(60000L); // one minute in millis, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + mChart.animateX(2500);, + ArrayList<Entry> values = new ArrayList<Entry>();, + float val = (float) (Math.random() * range) + 3;, + values.add(new
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="25", + android:versionName="1.6.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="25", + android:versionName="1.6.5" >, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="25", + android:versionName="1.6.5" >, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent">, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="25", + android:versionName="1.6.5" >, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent">, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="25", + android:versionName="1.6.5" >, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent">, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent" >, +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_marginLeft="5dp", + android:layout_marginRight="5dp", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="25", + android:versionName="1.6.5" >, +++ b/MPChartExample/res/layout/activity_colored_lines.xml, +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:layout_height="match_parent">, +++ b/MPChartExample/res/layout/activity_linechart_noseekbar.xml, + android:layout_height="match_parent" >, +++ b/MPChartExample/res/layout/custom_marker_view.xml, + android:layout_marginLeft="5dp", + android:layout_marginRight="5dp", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +public class
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, + for (IDataSet set : mChart.getData().getDataSets()), + ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local',
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + l.setPosition(LegendPosition.RIGHT_OF_CHART_INSIDE);, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + l.setPosition(LegendPosition.RIGHT_OF_CHART_INSIDE);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + /** holds the maximum scale factor of the y-axis, default 12f */, + protected float mMaxScaleY = 12f;, + if (mLogEnabled), + if (mLogEnabled), + if (mDrawLegend && mLegend != null && mLegend.getPosition() != LegendPosition.NONE) {, + , + if(mLegend != null) {, + , + mLegend.setOffsetTop(mOffsetTop + min / 3f);, + }, + * sets the maximum scale factor for the y-axis. Default 12f, min 1f, max, + * unlimited,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + for (IDataSet set : mData.getDataSets()) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + for (IDataSet set : mData.getDataSets()) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarData.java, + for (IBarDataSet set : mDataSets) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + for (IDataSet set : mData.getDataSets()) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarData.java, + for (IBarDataSet set : mDataSets) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleData.java, + for (IBubbleDataSet set : mDataSets) {, + set.setHighlightCircleWidth(width);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + for (IDataSet set : mData.getDataSets()) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarData.java, + for (IBarDataSet set : mDataSets) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleData.java, + for (IBubbleDataSet set : mDataSets) {, + set.setHighlightCircleWidth(width);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, + List<T> list = new ArrayList<>();, + for (T set : array)
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/datasets/IDataSet.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 16, + versionName '1.4.1', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 16, + versionName '1.4.1', +++ b/MPChartExample/res/layout/activity_radarchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.RadarChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="16", + android:versionName="1.4.1" >, + <activity android:name="RadarChartActivitry"></activity>, +++ b/MPChartExample/build.gradle, + versionCode 16, + versionName '1.4.1', +++ b/MPChartExample/res/layout/activity_radarchart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent"
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, +import com.github.mikephil.charting.data.Entry;, + /**, + * Avoid drawing a form, + */, + NONE,, +, + /**, + * Do not draw the a form, but leave space for it, + */, + EMPTY,, +, + /**, + * Use default (default dataset's form to the legend's form), + */, + DEFAULT,, +, + /**, + * Draw a square, + */, + SQUARE,, +, + /**, + * Draw a circle, + */, + CIRCLE,, +, + /**, + * Draw a horizontal line, + */, + LINE, + * The legend entries array, + private
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, + // content, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MyMarkerView.java, + // content, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + protected void drawData() {, +, + ArrayList<BarDataSet> dataSets = mData.getDataSets();, + int setCount = mData.getDataSetCount();, + // 2D drawing, + for (int i = 0; i < setCount; i++) {, +, + BarDataSet dataSet = dataSets.get(i);, + float x = e.getXIndex() + j * (setCount - 1) + i + space * j + space / 2f;, + }, + float posOffset = 0f; float negOffset = 0f;, + float[] valuePoints = mTrans.generateTransformedValuesBarChart(entries, i, mData, mPhaseY);, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +import android.graphics.Canvas;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +, + /**, + * draws all MarkerViews on the highlighted positions, + */, + protected void drawMarkers(Canvas canvas) {, +, + // if there is no marker view or drawing marker is disabled, + if (mMarker == null || !isDrawMarkersEnabled() || !valuesToHighlight()), + return;, +, + for (int i = 0; i < mIndicesToHighlight.length; i++) {, +, + Highlight highlight = mIndicesToHighlight[i];, +, + IDataSet set = mData.getDataSetByHighlight(highlight);, +, + Entry e = mData.getEntryForHighlight(highlight);, + if (e == null), + continue;, +, + int entryIndex = set.getEntryIndex(e);, +, + //
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + int color = mColors[count % mColors.length];, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + int color = mColors[count % mColors.length];, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, +import com.github.mikephil.charting.utils.ColorTemplate;, + set1.setColor(ColorTemplate.COLORFUL_COLORS[0]);, + set2.setColor(ColorTemplate.COLORFUL_COLORS[1]);, + set3.setColor(ColorTemplate.COLORFUL_COLORS[2]);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + int color = mColors[count % mColors.length];, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, +import com.github.mikephil.charting.utils.ColorTemplate;, + set1.setColor(ColorTemplate.COLORFUL_COLORS[0]);, + set2.setColor(ColorTemplate.COLORFUL_COLORS[1]);, + set3.setColor(ColorTemplate.COLORFUL_COLORS[2]);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java, + ds.setColors(ColorTemplate.VORDIPLOM_COLORS);, + ds.setColors(ColorTemplate.COLORFUL_COLORS);, + ds1.setColors(ColorTemplate.VORDIPLOM_COLORS);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, + int color = mColors[count % mColors.length];, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ScatterChartActivity.java, +import com.github.mikephil.charting.utils.ColorTemplate;, + set1.setColor(ColorTemplate.COLORFUL_COLORS[0]);, + set2.setColor(ColorTemplate.COLORFUL_COLORS[1]);, + set3.setColor(ColorTemplate.COLORFUL_COLORS[2]);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/SimpleFragment.java, + ds.setColors(ColorTemplate.VORDIPLOM_COLORS);, + ds.setColors(ColorTemplate.COLORFUL_COLORS);, + ds1.setColors(ColorTemplate.VORDIPLOM_COLORS);, +++ b/MPChartLib/res/values/colors.xml, + <!--, + <color name="liberty_1">#CFF8F6</color>, + <color name="liberty_2">#94D4D4</color>, + <color name="liberty_3">#88B4BB</color>, + <color name="liberty_4">#76AEAF</color>, +
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + float yInView = getDeltaY(axis) / mViewPortHandler.getScaleY();, + Runnable job = new MoveViewJob(mViewPortHandler, xValue, yValue + yInView / 2f,, + float yInView = getDeltaY(axis) / mViewPortHandler.getScaleY();, + Runnable job = new AnimatedMoveViewJob(mViewPortHandler, xValue, yValue + yInView / 2f,, + * Centers the viewport to the specified y value on the y-axis., + * This also refreshes the chart by calling invalidate()., + *, + * @param yValue, + * @param axis - which axis should be used as a reference for the y-axis, + */, + public void centerViewToY(float yValue, AxisDependency axis) {,
[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, + private float mGridLineWidth = 1f;, +, + * Sets the width of the grid lines that are drawn away from each axis, + * label., + * , + * @param width, + */, + public void setGridLineWidth(float width) {, + mGridLineWidth = Utils.convertDpToPixel(width);, + }, +, + /**, + * Returns the width of the grid lines that are drawn away from each axis, + * label., + * , + * @return, + */, + public float getGridLineWidth() {, + return mGridLineWidth;,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="LineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="LineChartActivity"></activity>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +import android.view.WindowManager;, +import com.github.mikephil.charting.ColorTemplate;, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, +// mChart.setColorTemplate(new ColorTemplate(ColorTemplate.getColors(this, ColorTemplate.LIBERTY_COLORS)));, + , + mChart.setLineWidth(5f);, + mChart.setCircleSize(5f);, + mChart.setYLegendCount(5);, + xVals.add((i - 1)+"");, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="LineChartActivity"></activity>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +import android.view.WindowManager;, +import com.github.mikephil.charting.ColorTemplate;, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, +// mChart.setColorTemplate(new ColorTemplate(ColorTemplate.getColors(this, ColorTemplate.LIBERTY_COLORS)));, + , + mChart.setLineWidth(5f);, + mChart.setCircleSize(5f);, + mChart.setYLegendCount(5);, + xVals.add((i - 1)+"");, +++ b/MPChartExample/src/com/example/mpchartexample/MultipleChartsActivity.java, + mBarChart.setDescription("");, + mBarChart3D.setRoundedYLegend(true);, + mBarChart3D.setDescription("Description.");, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="LineChartActivity"></activity>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +import android.view.WindowManager;, +import com.github.mikephil.charting.ColorTemplate;, + getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, , + WindowManager.LayoutParams.FLAG_FULLSCREEN);, +// mChart.setColorTemplate(new ColorTemplate(ColorTemplate.getColors(this, ColorTemplate.LIBERTY_COLORS)));, + ,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.3" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.3" >, +++ b/MPChartExample/build.gradle, + versionName '2.0.3', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.3' , +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.3" >, +++ b/MPChartExample/build.gradle, + versionName '2.0.3', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.3' , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.3" >, +++ b/MPChartExample/build.gradle, + versionName '2.0.3', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.3' , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mLogEnabled) {, + Log.i(LOG_TAG, "DrawTime: " + drawtime + " ms");, +++ b/MPChartExample/AndroidManifest.xml, + android:versionName="2.0.3" >, +++ b/MPChartExample/build.gradle, + versionName '2.0.3', + //compile 'com.github.PhilJay:MPAndroidChart:v2.0.3' , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, + if (mLogEnabled) {, + Log.i(LOG_TAG, "DrawTime: " + drawtime + " ms");, +++ b/MPChartLib/src/com/github/mikephil/charting/data/LineData.java,
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, + xAxis.setLabelCount(7);, + float start = 0f;, + String monthName = mMonths[month % mMonths.length];, +, + if (mChart.getVisibleXRange() > 30 * axis.getLabelCount()) {, +, + return monthName;, + } else {, +, + return dayOfMonth + appendix + " " + monthName;, + }, + return Math.max(month, 0);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.ViewPortHandler;, + xAxis.setLabelCount(7);, + float start = 0f;, + String monthName = mMonths[month % mMonths.length];, +, + if (mChart.getVisibleXRange() > 30 * axis.getLabelCount()) {, +, + return monthName;, + } else {, +, + return dayOfMonth + appendix + " " + monthName;, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +, + getXAxis().setSpaceMin(0.5f);, + getXAxis().setSpaceMax(0.5f);]
[+++ b/MPChartExample/build.gradle, + versionCode 5, + versionName '1.0.5', +++ b/MPChartExample/build.gradle, + versionCode 5, + versionName '1.0.5', +++ b/MPChartExample/res/layout/frag_simple_line.xml, +<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android", +</FrameLayout>, +++ b/MPChartExample/build.gradle, + versionCode 5, + versionName '1.0.5', +++ b/MPChartExample/res/layout/frag_simple_line.xml, +<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android", +</FrameLayout>, +++ b/MPChartExample/res/menu/line.xml, + android:title="Save to SD-Card">, +++ b/MPChartExample/build.gradle, + versionCode 5, + versionName '1.0.5', +++ b/MPChartExample/res/layout/frag_simple_line.xml, +<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android", +</FrameLayout>, +++ b/MPChartExample/res/menu/line.xml, + android:title="Save to SD-Card">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +import android.graphics.Color;, +import android.widget.Toast;, + // set an alternative background color, +// mChart.setBackgroundColor(Color.GRAY);, +, + if(mChart.saveToPath("title" + System.currentTimeMillis(), "")) {, + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!", Toast.LENGTH_SHORT).show();, + } else Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT).show();, + , +// mChart.saveToGallery("title"+System.currentTimeMillis()), +// mChart.saveToPath("title"
[+++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/build.gradle, +buildscript {, + repositories {, + maven { url 'http://10.10.0.246:8081/nexus/content/groups/astdev' }, + mavenLocal(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:0.14.0', + classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+', + classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+', + }, +}, +, + minSdkVersion 14, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, + if (mDrawValueAboveBar) {, + posOffset = -Utils.convertDpToPixel(5);, + negOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, + } else {, + posOffset = Utils.calcTextHeight(mValuePaint, "8") *
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +, + mChart.setVisibleXRange(10, 50);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +, + mChart.setVisibleXRange(10, 50);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + protected ViewPortHandler mViewPortHandler = new ViewPortHandler();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +, + mChart.setVisibleXRange(10, 50);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + protected ViewPortHandler mViewPortHandler = new ViewPortHandler();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +import com.github.mikephil.charting.utils.HorizontalViewPortHandler;, +, + mViewPortHandler = new HorizontalViewPortHandler();, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +, + mChart.setVisibleXRange(10, 50);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + protected ViewPortHandler mViewPortHandler = new ViewPortHandler();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +import com.github.mikephil.charting.utils.HorizontalViewPortHandler;, +, + mViewPortHandler = new HorizontalViewPortHandler();, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/HorizontalViewPortHandler.java, +, +package com.github.mikephil.charting.utils;, +, +/**, + * ViewPortHandler for HorizontalBarChart., + */, +public class HorizontalViewPortHandler extends ViewPortHandler {, +, +, +// @Override, +// public
[+++ b/MPChartExample/res/layout/activity_awesomedesign.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:orientation="vertical" >, + , + <android.support.v4.view.ViewPager, + xmlns:android="http://schemas.android.com/apk/res/android", + android:id="@+id/pager", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/layout/activity_awesomedesign.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:orientation="vertical" >, + , + <android.support.v4.view.ViewPager, + xmlns:android="http://schemas.android.com/apk/res/android", + android:id="@+id/pager", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/layout/activity_main.xml, + android:text="AWESOME DESIGN" />, +++ b/MPChartExample/res/layout/activity_awesomedesign.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:orientation="vertical" >, + , + <android.support.v4.view.ViewPager, + xmlns:android="http://schemas.android.com/apk/res/android", + android:id="@+id/pager", + android:layout_width="match_parent", + android:layout_height="match_parent" />, +, +</RelativeLayout>, +++ b/MPChartExample/res/layout/activity_main.xml, + android:text="AWESOME DESIGN" />,
[+++ b/MPChartExample/res/menu/realm.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/viewRealm", + android:title="realm.io website">, + </item>, +</menu>, +++ b/MPChartExample/res/menu/realm.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/viewRealm", + android:title="realm.io website">, + </item>, +</menu>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java, + styleData(data);, +++ b/MPChartExample/res/menu/realm.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/viewRealm", + android:title="realm.io website">, + </item>, +</menu>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityBubble.java, + styleData(data);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmDatabaseActivityCandle.java, +import android.graphics.Color;, +import android.graphics.Paint;, +, + mChart.getAxisLeft().setDrawGridLines(false);, + mChart.getXAxis().setDrawGridLines(false);, + set.setShadowColor(Color.DKGRAY);, + set.setShadowWidth(0.7f);, + set.setDecreasingColor(Color.RED);, + set.setDecreasingPaintStyle(Paint.Style.STROKE);, + set.setIncreasingColor(Color.rgb(122, 242, 84));, + set.setIncreasingPaintStyle(Paint.Style.FILL);, + styleData(data);, +++ b/MPChartExample/res/menu/realm.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android"
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="4", + android:versionName="1.0.4" >, + android:name="com.xxmassdeveloper.mpchartexample.notimportant.MainActivity", +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="4", + android:versionName="1.0.4" >, + android:name="com.xxmassdeveloper.mpchartexample.notimportant.MainActivity", +++ b/MPChartExample/res/anim/move_left_in_activity.xml, +<?xml version="1.0" encoding="utf-8"?>, +<translate , + xmlns:android="http://schemas.android.com/apk/res/android", + android:duration="300", + android:fromXDelta="-100%p" , + android:toXDelta="0%p">, +</translate>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="4", + android:versionName="1.0.4" >, + android:name="com.xxmassdeveloper.mpchartexample.notimportant.MainActivity", +++ b/MPChartExample/res/anim/move_left_in_activity.xml, +<?xml version="1.0" encoding="utf-8"?>, +<translate , + xmlns:android="http://schemas.android.com/apk/res/android", + android:duration="300", + android:fromXDelta="-100%p" , + android:toXDelta="0%p">, +</translate>, +++ b/MPChartExample/res/anim/move_left_out_activity.xml, +<?xml version="1.0" encoding="utf-8"?>, +<translate , + xmlns:android="http://schemas.android.com/apk/res/android", + android:duration="300", + android:fromXDelta="0%p" , + android:toXDelta="-100%p">, +</translate>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="4", + android:versionName="1.0.4" >, + android:name="com.xxmassdeveloper.mpchartexample.notimportant.MainActivity", +++ b/MPChartExample/res/anim/move_left_in_activity.xml, +<?xml version="1.0" encoding="utf-8"?>, +<translate , + xmlns:android="http://schemas.android.com/apk/res/android", + android:duration="300", +
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, +, + android:text="Draw Chart" />, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="View on GitHub" />, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="DrawChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, +, + android:text="Draw Chart" />, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="View on GitHub" />, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +package com.example.mpchartexample;, +, +import java.util.ArrayList;, +, +import android.app.Activity;, +import android.graphics.Color;, +import android.os.Bundle;, +import android.util.Log;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.View;, +import android.view.WindowManager;, +import android.widget.TextView;, +, +import com.github.mikephil.charting.ChartData;, +import com.github.mikephil.charting.ColorTemplate;, +import com.github.mikephil.charting.DataSet;, +import com.github.mikephil.charting.Entry;, +import com.github.mikephil.charting.Highlight;, +import com.github.mikephil.charting.LineChart;, +import
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + high = new Highlight(high.getX(), Float.NaN, -1, -1);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + high = new Highlight(high.getX(), Float.NaN, -1, -1);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.data.BarLineScatterCandleBubbleData;, + selectionDetail.dataSetIndex);, +, + @Override, + protected BarLineScatterCandleBubbleData getData() {, + return mChart.getBarData();, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + high = new Highlight(high.getX(), Float.NaN, -1, -1);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.data.BarLineScatterCandleBubbleData;, + selectionDetail.dataSetIndex);, +, + @Override, + protected BarLineScatterCandleBubbleData getData() {, + return mChart.getBarData();, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +import com.github.mikephil.charting.data.BarLineScatterCandleBubbleData;, +import com.github.mikephil.charting.data.ChartData;, + SelectionDetail detail = getClosestSelectionDetailByPixel(closestValues, x, y, axis, mChart.getMaxHighlightDistance());, + BarLineScatterCandleBubbleData data = getData();, + if (data == null), + return vals;, + for (int
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, + for (IDataSet set : mChart.getData().getDataSets()), + ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local',
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivitySinus"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivitySinus"></activity>, +++ b/MPChartExample/assets/othersine.txt, +0.0#0, +0.09983341664682815#1, +0.19866933079506122#2, +0.2955202066613396#3, +0.3894183423086505#4, +0.479425538604203#5, +0.5646424733950354#6, +0.644217687237691#7, +0.7173560908995227#8, +0.7833269096274833#9, +0.8414709848078964#10, +0.8912073600614353#11, +0.9320390859672263#12, +0.963558185417193#13, +0.9854497299884603#14, +0.9974949866040544#15, +0.9995736030415051#16, +0.9916648104524686#17, +0.973847630878195#18, +0.9463000876874144#19, +0.9092974268256815#20, +0.8632093666488735#21, +0.8084964038195899#22, +0.7457052121767197#23, +0.6754631805511504#24, +0.5984721441039558#25, +0.5155013718214634#26, +0.42737988023382895#27, +0.33498815015590383#28, +0.23924932921398112#29, +0.1411200080598659#30, +0.04158066243328916#31, +-0.05837414342758142#32, +-0.15774569414324996#33, +-0.25554110202683294#34, +-0.3507832276896215#35, +-0.44252044329485407#36, +-0.5298361409084948#37, +-0.6118578909427207#38, +-0.6877661591839753#39, +-0.7568024953079294#40, +-0.8182771110644114#41, +-0.8715757724135886#42, +-0.9161659367494552#43, +-0.9516020738895161#44, +-0.977530117665097#45, +-0.9936910036334644#46, +-0.9999232575641008#47, +-0.9961646088358408#48, +-0.9824526126243328#49, +-0.958924274663139#50, +-0.9258146823277331#51, +-0.8834546557201545#52, +-0.8322674422239027#53, +-0.7727644875559894#54, +-0.7055403255703945#55, +-0.6312666378723244#56, +-0.5506855425976414#57, +-0.4646021794137613#58, +-0.37387666483024096#59, +-0.27941549819893097#60, +-0.18216250427210112#61, +-0.0830894028175026#62, +0.016813900484343496#63, +0.11654920485048659#64, +0.21511998808780858#65, +0.3115413635133711#66, +0.40484992061659103#67, +0.4941133511386012#68, +0.5784397643881929#69, +0.6569865987187824#70, +0.7289690401258698#71, +0.7936678638491472#72, +0.8504366206285593#73, +0.8987080958116223#74, +0.9379999767747351#75, +0.9679196720314837#76, +0.9881682338769986#77, +0.9985433453746043#78, +0.9989413418397726#79, +0.9893582466233836#80, +0.9698898108450894#81, +0.9407305566797773#82, +0.9021718337562995#83, +0.8545989080882879#84, +0.7984871126234988#85, +0.734397097874123#86,
[+++ b/Projects_using_MPAndroidChart.txt, +++ b/Projects_using_MPAndroidChart.txt, +++ b/README.md, +++ b/Projects_using_MPAndroidChart.txt, +++ b/README.md, +++ b/design/video_thumbnail.png, +++ b/Projects_using_MPAndroidChart.txt, +++ b/README.md, +++ b/design/video_thumbnail.png, +++ b/design/video_thumbnail.psd]
[+++ b/MPChartExample/build.gradle, + compileSdkVersion 27, + buildToolsVersion '26.0.2', + targetSdkVersion 27, + classpath 'com.android.tools.build:gradle:3.0.1', + implementation 'com.github.PhilJay:MPAndroidChart-Realm:v2.0.2@aar', + implementation project(':MPChartLib'), + implementation 'com.android.support:appcompat-v7:27.0.2', +++ b/MPChartExample/build.gradle, + compileSdkVersion 27, + buildToolsVersion '26.0.2', + targetSdkVersion 27, + classpath 'com.android.tools.build:gradle:3.0.1', + implementation 'com.github.PhilJay:MPAndroidChart-Realm:v2.0.2@aar', + implementation project(':MPChartLib'), + implementation 'com.android.support:appcompat-v7:27.0.2', +++ b/MPChartLib/build.gradle, + compileSdkVersion 27, + buildToolsVersion '26.0.2', + targetSdkVersion 27, + testCompile "org.mockito:mockito-core:1.10.19", +++ b/MPChartExample/build.gradle, + compileSdkVersion 27, + buildToolsVersion '26.0.2', + targetSdkVersion 27, + classpath 'com.android.tools.build:gradle:3.0.1', + implementation 'com.github.PhilJay:MPAndroidChart-Realm:v2.0.2@aar', + implementation project(':MPChartLib'), + implementation 'com.android.support:appcompat-v7:27.0.2', +++ b/MPChartLib/build.gradle, + compileSdkVersion 27, + buildToolsVersion '26.0.2', + targetSdkVersion 27, + testCompile "org.mockito:mockito-core:1.10.19", +++ b/build.gradle,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:screenOrientation="landscape" android:name="MultipleChartsActivity"></activity>, +++ b/MPChartExample/build.gradle, +,
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent" >, + android:layout_height="match_parent" />, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + xAxis.enableGridDashedLine(10f, 10f, 0f);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + xAxis.enableGridDashedLine(10f, 10f, 0f);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + * Set this to true to make the highlight operation full-bar oriented, false to make it highlight single values (relevant, + * only for stacked). If enabled, highlighting operations will highlight the whole bar, even if only a single stack entry, + * was tapped., +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + xAxis.enableGridDashedLine(10f, 10f, 0f);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + * Set this to true to make the highlight operation full-bar oriented, false to make it highlight single values
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CandleStickChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="CandleStickChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_candlechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent" >, +, + <com.github.mikephil.charting.charts.CandleStickChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:layout_above="@+id/seekBar1" />, + , + <SeekBar, + android:id="@+id/seekBar2", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_alignParentBottom="true", + android:layout_alignParentLeft="true", + android:layout_margin="8dp", + android:layout_toLeftOf="@+id/tvYMax", + android:layout_marginRight="5dp", + android:max="200", + android:paddingBottom="12dp" />, +, + <SeekBar, + android:id="@+id/seekBar1", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_above="@+id/seekBar2", + android:layout_margin="8dp", + android:layout_marginBottom="35dp", + android:layout_toLeftOf="@+id/tvXMax", + android:layout_marginRight="5dp", + android:max="500", + android:paddingBottom="12dp" />, +, + <TextView, + android:id="@+id/tvXMax", + android:layout_width="50dp", + android:layout_height="wrap_content", + android:layout_alignBottom="@+id/seekBar1", + android:layout_alignParentRight="true", + android:text="500", +
[+++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent", + android:orientation="vertical">, +, +, + <TextView, + android:layout_width="match_parent", + android:layout_height="0dp", + android:layout_weight="0.5", + android:gravity="center", + android:textAppearance="?android:attr/textAppearanceLarge", + android:text="YOUR PREFERENCES", + android:id="@+id/textView"/>, + android:layout_height="0dp", + android:layout_weight="2" />, +</LinearLayout>, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent", + android:orientation="vertical">, +, +, + <TextView, + android:layout_width="match_parent", + android:layout_height="0dp", + android:layout_weight="0.5", + android:gravity="center", + android:textAppearance="?android:attr/textAppearanceLarge", + android:text="YOUR PREFERENCES", + android:id="@+id/textView"/>, + android:layout_height="0dp", + android:layout_weight="2" />, +</LinearLayout>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import android.graphics.Color;, +import android.widget.TextView;, + setContentView(R.layout.activity_radarchart_noseekbar);, + TextView tv = (TextView) findViewById(R.id.textView);, + tv.setTypeface(tf);, + tv.setTextColor(Color.WHITE);, + tv.setBackgroundColor(Color.rgb(60, 65, 82));, +, + mChart = (RadarChart) findViewById(R.id.chart1);, + mChart.setBackgroundColor(Color.rgb(60, 65, 82));, +,
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivitySinus"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="BarChartActivitySinus"></activity>, +++ b/MPChartExample/assets/othersine.txt, +0.0#0, +0.09983341664682815#1, +0.19866933079506122#2, +0.2955202066613396#3, +0.3894183423086505#4, +0.479425538604203#5, +0.5646424733950354#6, +0.644217687237691#7, +0.7173560908995227#8, +0.7833269096274833#9, +0.8414709848078964#10, +0.8912073600614353#11, +0.9320390859672263#12, +0.963558185417193#13, +0.9854497299884603#14, +0.9974949866040544#15, +0.9995736030415051#16, +0.9916648104524686#17, +0.973847630878195#18, +0.9463000876874144#19, +0.9092974268256815#20, +0.8632093666488735#21, +0.8084964038195899#22, +0.7457052121767197#23, +0.6754631805511504#24, +0.5984721441039558#25, +0.5155013718214634#26, +0.42737988023382895#27, +0.33498815015590383#28, +0.23924932921398112#29, +0.1411200080598659#30, +0.04158066243328916#31, +-0.05837414342758142#32, +-0.15774569414324996#33, +-0.25554110202683294#34, +-0.3507832276896215#35, +-0.44252044329485407#36, +-0.5298361409084948#37, +-0.6118578909427207#38, +-0.6877661591839753#39, +-0.7568024953079294#40, +-0.8182771110644114#41, +-0.8715757724135886#42, +-0.9161659367494552#43, +-0.9516020738895161#44, +-0.977530117665097#45, +-0.9936910036334644#46, +-0.9999232575641008#47, +-0.9961646088358408#48, +-0.9824526126243328#49, +-0.958924274663139#50, +-0.9258146823277331#51, +-0.8834546557201545#52, +-0.8322674422239027#53, +-0.7727644875559894#54, +-0.7055403255703945#55, +-0.6312666378723244#56, +-0.5506855425976414#57, +-0.4646021794137613#58, +-0.37387666483024096#59, +-0.27941549819893097#60, +-0.18216250427210112#61, +-0.0830894028175026#62, +0.016813900484343496#63, +0.11654920485048659#64, +0.21511998808780858#65, +0.3115413635133711#66, +0.40484992061659103#67, +0.4941133511386012#68, +0.5784397643881929#69, +0.6569865987187824#70, +0.7289690401258698#71, +0.7936678638491472#72, +0.8504366206285593#73, +0.8987080958116223#74, +0.9379999767747351#75, +0.9679196720314837#76, +0.9881682338769986#77, +0.9985433453746043#78, +0.9989413418397726#79, +0.9893582466233836#80, +0.9698898108450894#81, +0.9407305566797773#82, +0.9021718337562995#83, +0.8545989080882879#84, +0.7984871126234988#85, +0.734397097874123#86,
[+++ b/MPChartExample/build.gradle, + versionCode 33, + versionName '2.0.1', +}, +buildscript {, + repositories {, + jcenter(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:1.1.0', +, + // NOTE: Do not place your application dependencies here; they belong, + // in the individual module build.gradle files, + }, +}, +, +repositories {, + maven { url "https://jitpack.io" }, + compile 'com.android.support:appcompat-v7:21.0.3', + compile 'com.github.PhilJay:MPAndroidChart:v2.0.3', +++ b/MPChartExample/build.gradle, + versionCode 33, + versionName '2.0.1', +}, +buildscript {, + repositories {, + jcenter(), + }, + dependencies {, + classpath 'com.android.tools.build:gradle:1.1.0', +, + // NOTE: Do not place your application dependencies here; they
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', + //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++
[+++ b/MPChartExample/res/menu/line.xml, + </item>, + <item, + android:id="@+id/actionToggleStepped", + android:title="Toggle Stepped">, +++ b/MPChartExample/res/menu/line.xml, + </item>, + <item, + android:id="@+id/actionToggleStepped", + android:title="Toggle Stepped">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + case R.id.actionToggleStepped: {, + List<ILineDataSet> sets = mChart.getData(), + .getDataSets();, +, + for (ILineDataSet iSet : sets) {, +, + LineDataSet set = (LineDataSet) iSet;, + if (set.isDrawSteppedEnabled()), + set.setDrawStepped(false);, + else, + set.setDrawStepped(true);, + }, + mChart.invalidate();, + break;, + }, +++ b/MPChartExample/res/menu/line.xml, + </item>, + <item, + android:id="@+id/actionToggleStepped", + android:title="Toggle Stepped">, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, + case R.id.actionToggleStepped: {, + List<ILineDataSet> sets = mChart.getData(), + .getDataSets();, +, + for (ILineDataSet iSet : sets) {,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + * Highlights the value at the given x-value in the given DataSet. Provide, + * Groups all BarDataSet objects this data object holds together by modifying the x-value of their entries., + * Previously set x-values of entries will be overwritten. Leaves space between bars and groups as specified, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, + * Highlights the value at the given x-value in the given DataSet. Provide, + * Groups all BarDataSet objects this data object holds together by modifying the x-value of their entries., + * Previously set x-values of entries will be overwritten. Leaves space between
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + mChart.notifyDataSetChanged();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + mChart.notifyDataSetChanged();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, + private static final int MAX_LENGTH = 5;, + mFormat = new DecimalFormat("###E00");, + int numericValue1 = Character.getNumericValue(r.charAt(r.length() - 1));, + int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));, + int combined = Integer.valueOf(numericValue2 + "" + numericValue1);, +, + r = r.replaceAll("E[0-9][0-9]", SUFFIX[combined / 3]);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + mChart.notifyDataSetChanged();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, + private static final int MAX_LENGTH = 5;, + mFormat = new DecimalFormat("###E00");, + int numericValue1 = Character.getNumericValue(r.charAt(r.length() - 1));, + int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));, + int combined = Integer.valueOf(numericValue2 + "" + numericValue1);, +, + r
[+++ b/Projects_using_MPAndroidChart.txt, +, +БИТ.Лидер, +https://play.google.com/store/apps/details?id=com.firstbit.bitlider]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java, + copied.mDrawValues = mDrawValues;, + copied.mValueColors = mValueColors;, + copied.mHighlightLineWidth = mHighlightLineWidth;, + copied.mHighlightDashPathEffect = mHighlightDashPathEffect;]
[+++ b/.gitignore, +# built application files, +*.apk, +*.ap_, +, +# files for the dex VM, +*.dex, +, +# Java class files, +*.class, +, +# generated files, +bin/, +gen/, +, +# Local configuration file (sdk path, etc), +local.properties, +, +# Eclipse project files, +.classpath, +.project, +, +# Proguard folder generated by Eclipse, +proguard/, +, +# Intellij project files, +*.iml, +*.ipr, +*.iws, +.idea/, +, +.directory, +++ b/.gitignore, +# built application files, +*.apk, +*.ap_, +, +# files for the dex VM, +*.dex, +, +# Java class files, +*.class, +, +# generated files, +bin/, +gen/, +, +# Local configuration file (sdk path, etc),
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + xVals.add((int) yVals1.get(i).getVal() + "");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, + ArrayList<String> xVals = new ArrayList<String>();, + for (int i = 0; i < count; i++) {, + xVals.add(mMonths[i % 12]);, + }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, + ArrayList<String> xVals = new ArrayList<String>();,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + high = new Highlight(high.getX(), -1);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, + high = new Highlight(high.getX(), -1);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java, + public Highlight(float x, int dataSetIndex, int stackIndex) {, + this(x, dataSetIndex);, + this.mStackIndex = stackIndex;, + }, +, + protected Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, YAxis.AxisDependency axis) {, + protected Highlight(float x, float y, float xPx, float yPx, int dataSetIndex, int stackIndex, Range range,]
[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.MPPointF;, + MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);, +, + MPPointF.recycleInstance(position);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.MPPointF;, + MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);, +, + MPPointF.recycleInstance(position);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +import com.github.mikephil.charting.utils.MPPointF;, + MPPointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(h.getDataSetIndex()), +, + MPPointF.recycleInstance(position);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.utils.MPPointF;, + MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);, +, + MPPointF.recycleInstance(position);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +import com.github.mikephil.charting.utils.MPPointF;, + MPPointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(h.getDataSetIndex()), +, + MPPointF.recycleInstance(position);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.utils.MPPointF;, + MPPointF center = mViewPortHandler.getContentCenter();, + MPPointF.recycleInstance(center);, +, + MPPointF center = mViewPortHandler.getContentCenter();, + MPPointF.recycleInstance(center);, +, + * Returns a recyclable MPPointF instance., + public MPPointF getPosition(Entry e, AxisDependency axis)
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java, + // In bubble charts - it makes sense to have multiple bubbles on the same X value in the same dataset., + final List<BubbleEntry> entries = set.getEntriesForXPos(high.getX());, +, + for (BubbleEntry entry : entries) {, +, + if (entry.getY() != high.getY()), + continue;, +}]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="6", + android:versionName="1.0.6" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="6", + android:versionName="1.0.6" >, +++ b/MPChartExample/build.gradle, + versionCode 6, + versionName '1.0.6']
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/LineChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/LineChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/LineChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/Approximator.java, + public float distance(float x, float y) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BubbleChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CandleStickChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/LineChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, + }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/filter/Approximator.java, + public float distance(float x, float y) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/Renderer.java]
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartLib/libs/android-support-v4.jar, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartLib/libs/android-support-v4.jar, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartLib/libs/android-support-v4.jar, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.support.v4.view.ViewCompat;, + protected boolean mLogEnabled = true;, + ViewCompat.postInvalidateOnAnimation(Chart.this);, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="30", + android:targetSdkVersion="19" />, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartLib/libs/android-support-v4.jar, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.support.v4.view.ViewCompat;, + protected boolean mLogEnabled = true;, + ViewCompat.postInvalidateOnAnimation(Chart.this);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.Color;, +import android.graphics.Paint;, +import android.graphics.Paint.Style;, +import
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_realtime_linechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_realtime_linechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, + <com.github.mikephil.charting.charts.LineChart, + android:id="@+id/chart1", + android:layout_width="match_parent", + android:layout_height="match_parent"/>, + , +</RelativeLayout>, +++ b/MPChartExample/res/menu/realtime.xml, +<?xml version="1.0" encoding="utf-8"?>, +<menu xmlns:android="http://schemas.android.com/apk/res/android" >, +, + <item, + android:id="@+id/actionAdd", + android:title="Feed new Entry">, + </item>, +</menu>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealtimeLineChartActivity"></activity>, +++ b/MPChartExample/res/layout/activity_realtime_linechart.xml, +<?xml version="1.0" encoding="utf-8"?>, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent">, +, +
[+++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode 51, + versionName '2.2.5', +++ /dev/null, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_radarchart_noseekbar.xml, +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_height="match_parent" >, + android:layout_height="match_parent" />, +</RelativeLayout>, +++ b/MPChartExample/AndroidManifest.xml, + android:versionCode="51", + android:versionName="2.2.5" >, +++ b/MPChartExample/build.gradle, + versionCode
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + * @param count the number of y-axis labels that sould be displayed, + * @param count the number of y-axis labels that sould be displayed, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/AxisBase.java, + * @param count the number of y-axis labels that sould be displayed, + * @param count the number of y-axis labels that sould be displayed, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieDataSet.java, + private boolean mAutomaticallyDisableSliceSpacing;, + * When enabled, slice spacing will be 0.0 when the smallest value is going to be, + * smaller than the slice spacing itself., + *, + * @param autoDisable, + */, + public void setAutomaticallyDisableSliceSpacing(boolean
[+++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_main.xml, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="ScatterChart" />, +, + <Button, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_main.xml, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="ScatterChart" />, +, + <Button, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_linechart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_main.xml, + android:id="@+id/button6", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="ScatterChart" />, +, + <Button, +++ /dev/null, +++ b/MPChartExample/res/layout/activity_piechart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_barchart.xml, + android:max="200", +++ b/MPChartExample/res/layout/activity_linechart.xml, +
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/animation/ChartAnimator.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/animation/ChartAnimator.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/animation/Easing.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/animation/ChartAnimator.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/animation/Easing.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/animation/ChartAnimator.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/animation/Easing.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java]
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, + PointD.recycleInstance(origin);, +, +, + PointD.recycleInstance(bounds);, +, + PointD.recycleInstance(bounds);, + * Returns a recyclable PointD instance, + PointD result = PointD.getInstance(0,0);, + getValuesByTouchPoint(x,y,axis,result);, + return result;, + }, +, + public void getValuesByTouchPoint(float x, float y, AxisDependency axis, PointD outputPoint){, + getTransformer(axis).getValuesByTouchPoint(x, y, outputPoint);, + * Returns a recyclable PointD instance, + PointD pointForGetYValueByTouchPoint = PointD.getInstance(0,0);, + getValuesByTouchPoint(x, y, axis, pointForGetYValueByTouchPoint);, + float result = (float) pointForGetYValueByTouchPoint.y;, + return result;, + protected PointD posForGetLowestVisibleX = PointD.getInstance(0,0);, + getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentLeft(),, + mViewPortHandler.contentBottom(), posForGetLowestVisibleX);, + float result = (float) Math.max(mXAxis.mAxisMinimum, posForGetLowestVisibleX.x);, + return result;, + protected PointD posForGetHighestVisibleX = PointD.getInstance(0,0);,
[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + prev = cur;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, + prev = cur;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, + float arcStartPointX = 0.f, arcStartPointY = 0.f;, + arcStartPointX = center.x + radius * (float) Math.cos(startAngleOuter * Utils.FDEG2RAD);, + arcStartPointY = center.y + radius * (float) Math.sin(startAngleOuter * Utils.FDEG2RAD);, +]
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local', + }, + compile 'io.realm:realm-android:0.84.0-SNAPSHOT' // dependency for realm-database API (http://realm.io), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, + for (IDataSet set : mChart.getData().getDataSets()), + ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name="RealmDatabaseActivity"></activity>, +++ b/MPChartExample/build.gradle, + maven { // this is for realm-db, + url 'http://oss.jfrog.org/artifactory/oss-snapshot-local',
[+++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:max="100", +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:max="100", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + set2.setDrawValues(true);, + set3.setDrawValues(true);, + data.setValueTextSize(8f);, + data.setHighLightCircleWidth(1.5f);, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:max="100", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, + set2.setDrawValues(true);, + set3.setDrawValues(true);, + data.setValueTextSize(8f);, + data.setHighLightCircleWidth(1.5f);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java, +, +, + /**, + * Sets the width of the circle that surrounds the bubble when highlighted, + * for all DataSet objects this data object contains, in dp., + * , + * @param width, + */, + public void setHighLightCircleWidth(float width) {, + for (BubbleDataSet set : mDataSets) {, + set.setHighLightCircleWidth(width);, + }, + }, +++ b/MPChartExample/res/layout/activity_bubblechart.xml, + android:max="100", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +
[+++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionDashedLine", + android:title="Toggle dashed Line">, + </item>, + <item, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionDashedLine", + android:title="Toggle dashed Line">, + </item>, + <item, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.ChartData;, + , + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!", Toast.LENGTH_SHORT).show();, + } else Toast.makeText(getApplicationContext(), "Saving FAILED!", Toast.LENGTH_SHORT).show();, + DataSet set1 = new DataSet(yVals1, "DataSet");, + ArrayList<DataSet> dataSets = new ArrayList<DataSet>();, + ChartData data = new ChartData(xVals, dataSets);, +++ b/MPChartExample/AndroidManifest.xml, +++ b/MPChartExample/res/menu/line.xml, + android:id="@+id/actionDashedLine", + android:title="Toggle dashed Line">, + </item>, + <item, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.ChartData;, + , + Toast.makeText(getApplicationContext(), "Saving SUCCESSFUL!", Toast.LENGTH_SHORT).show();, + }
[+++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".simple.SimpleChartDemo"></activity>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".simple.SimpleChartDemo"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_height="match_parent" >, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="Simple Design" />, + , +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".simple.SimpleChartDemo"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_height="match_parent" >, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent", + android:layout_height="wrap_content", + android:layout_margin="4dp", + android:text="Simple Design" />, + , +++ b/MPChartExample/res/layout/frag_simple_bar.xml, +<?xml version="1.0" encoding="utf-8"?>, +<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android", + android:layout_width="match_parent", + android:layout_height="match_parent", + android:orientation="vertical" >, +, + <com.github.mikephil.charting.charts.BarChart, + android:id="@+id/barChart1", + android:layout_width="wrap_content", + android:layout_height="wrap_content" />, +, +</LinearLayout>, +++ b/MPChartExample/AndroidManifest.xml, + <activity android:name=".simple.SimpleChartDemo"></activity>, +++ b/MPChartExample/res/layout/activity_main.xml, + android:layout_height="match_parent" >, + <Button, + android:id="@+id/button8", + android:layout_width="match_parent",
