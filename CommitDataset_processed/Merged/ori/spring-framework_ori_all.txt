Polishing
Support ResponseStatus on reactive controllers
SPR-4359 renamed 'concurrent' namespace to 'task'
Fixed code example in JavaDoc
Polishing
Final preparations for 3.2 GA
Support for @Order at the bean declaration level
Fix typo in changelog
Polish
fixed breaking test that was pointing to wrong PerThisAspect
Consistent support for new JsonMappingException wording in Jackson 2.9
Polishing
Await properly Reactor server start/stop
Add test to corner potential bug with @CacheEvict
SPR-6187: Document @Configuration classes and AnnotationConfig[Web]ApplicationContext
@Scheduled provides String variants of fixedDelay, fixedRate, initialDelay for placeholder support
Update to latest Reactor 3.1 API changes
Remove extra URL prefix in the MVC chapter
Support null query param values in ServerRequest.queryParam(String)
Improve CORS list properties combination logic
Aligned import order
Add tests for SpringBeanContainer (Hibernate ORM integration) and fix the behavior when requesting named beans (#22260)
Test for ByteBuffer-to-ByteBuffer conversion (fresh copy)
SchedulerFactoryBean triggers shutdown after registration failure
Remove unnecessary null check in SysEnvPropSource
@EnableMBeanExport supports placeholders for its attributes now
CastorMarshaller etc
ServerWebExchange provides access to form data
Detect split packages at build time
Docs: result handling and view resolution
Restore method signatures on MediaType
Fix malformed code in documentation
Explicit type can be replaced by <>
Fix typo in spring:eval taglib reference doc
Simplifying packaging
JmsTransactionManager supports lazy resource retrieval
Rename SchedulerGroup to Computations and its methods to avoid confusion
Nullability fine-tuning (RequestContext, LocaleResolver)
Eliminate the need for Encoder#getContentLength
SPR-9077 Remove empty path segments from input to UriComponentsBuilder.
Propagate read-only status through setDefaultReadOnly(true) for JPA
Upgrade JiBX (and BCEL) towards support of 1.8 bytecode level
Polishing
Polish whitespace for conversion service packages
Update @since version after backport
Polishing
Update JdbcTestUtils re: deprecated queryForInt()
Make EvaluationException more informative
Changes along with 3.1.3 backport
Introduce new methods in tx base test classes
SPR-5385, SPR-5301 - initial pass completed of POMs for maven central repository upload. N.B. Can not build spring with these POMs.
Upgrade test to Hibernate 5.2
Explicitly detect (and prevent) private @Scheduled methods on CGLIB proxies
Improve Last-Modified & ETag support
Polishing
Polish
Add converter support for Stream
Store by value support for ConcurrentMapCacheManager
Polishing
Improve semantics writing currentData
Refactor RequestedContentTypeResolverBuilder
Add option to set Content-Length in JSON Views
Simple broker sends notice after disconnect
Make DefaultConversionService usable by the upcoming client
Introduce constructors in ResourceDatabasePopulator
AnnotationConfigWebApplicationContext allows for repeated register/scan calls
Further enhancements for 3.2.2
Turn registered controller classes into controller instances on the fly
Support RouterFunction in @EnableWebFlux
Simplify STOMP broker relay integration test
Polish WebSocketSession
Fix jdbc template error messages generation
Add note to CorsFilter section
SPR-5507 The 'shutdownOrder' property of SmartLifecycle has been renamed 'phase'. The order no longer applies to shutdown only; now startup order is determined by the phase value as well. Components start in ascending order and stop in descending order.
Merge branch '5.1.x'
Revised NoSuchBeanDefinitionException message for proper array class names
Add .springBeans to .gitignore
Javadoc coverage of package metadata detection (supported for Hibernate, not needed for EclipseLink and OpenJPA)
SPR-7858
Polishing
Polish Kotlin routing DSL
Polish
Re-enable and document @Ignore'd tests
Clean up warnings in Gradle build output
Polishing
Upgrade to EclipseLink 2.7.1
[SPR-8401] Documented TestContext support for @ActiveProfiles in the reference manual.
Document default scripts for embedded databases
ExchangeResult exposes URI template used if any
Consistent handling of early FactoryBean instantiation failures
Switch to Reactor 3 snapshots and Netty 4.1.3
Allow protocol relative URLs in CssLink Transformer
Add options to configure content negotiation
Fix failing tests
Improved generics support in ResolvableMethod
Move URL transform methods from ServerHttpResponse to ServerWebExchange
Rename modules {org.springframework.*=>spring-*}
Polishing
Polishing
Normalize whitespace in cache reference doc
Cache and late resolve annotations for performance
Consistent lookup of parameter-level JsonView annotation
Actual hasText assertion in SockJsFrame
MockHttpServletRequestBuilder supports multiple locales
DataBinder allows for adding custom Formatters as alternative to PropertyEditors (including per-field formatters)
Merge branch '5.1.x'
[SPR-6128] Verified that claims raised in this issue no longer apply.
final preparations for 3.1 M2
Upgrade to Gradle 1.9
Missing @Nullable annotations in WebFlux, in particular around locale resolution
moved ScheduledTaskRegistrar to new config package (where the scheduling namespace will live as well)
Add checkstyle to build
Polish error message in BeanFactoryAnnotationUtils
Update user destinations handling
+ minor doc update regarding Tomcat setup (so the Tomcat list is rendered properly)
Improve exception logging in HandlerExceptionResolvers
Introduce alias for 'value' attribute in @RequestParam
Initial import of OXM module
polish
Use unique names when auto-registering Filters
Consistent comma splitting without regex overhead
Split configuration constants into local XConfigUtils classes instead of piling them up in AnnotationConfigUtils
Polish
clean-up of the @Bean content
Improve unknown status codes handling by WebClient
Move static ContextCache to DefaultCacheAwareContextLoaderDelegate
ConfigurationClassParser detects @Bean methods in interface hierarchies as well
Use dedicated addAdvisors
Tokenizer uses single process step and length-based exhaustion check
Revert "AnnotationConfigRegistry exposes registerBean with supplier/qualifiers"
Polishing
Fix issue with resolution of WebDataBinder argument
Fix Cache documentation
Improve check for actual return value type
Support Jackson filters in combination with serialization view
Fixed isWritable for badly formed SpEL expressions
Renamed ReactiveHttpOutputMessage dataBufferFactory() method to bufferFactory()
SPR-6240 Added namespace support for ErrorHandler strategy on JMS "listener-container" elements.
SPR-5327: tidy up aopalliance dependency
Merge pull request #1287 from markhobson/SPR-15109
XML parsing tests pass on non-English locales now, plus a revised exception message and some minor polishing
Consistent logging of resolved exceptions
Fixed DataBufferUtilsTest on Windows
FacesRequestAttributes falls back to ExternalContext as session mutex
Updated ivy and template.mf dependency metadata; added src/main/resources to quiet a spurious build error.
Unified createRequestConfig(Object) method, avoiding getInternalRequestConfig()
Consistent whitespace after imports
Fix build version
Same session after mutate for WebTestClient mock server
Polish default content type change
Introduce ActiveProfilesResolver in the TCF
Merge branch '5.1.x'
Polishing
Clean up warnings in spring-test
SharedEntityManagerCreator immediately throws TransactionRequiredException on persist, merge, remove etc (as required by JPA spec)
Invoke target.toString() safely in ReflectionTestUtils
Polish
removed outdated imports
Revised InvocableHandlerMethod exception messages (controller vs endpoint vs handler)
ScheduledAnnotationBeanPostProcessor registers tasks in ContextRefreshedEvent phase (again)
Correct attributeHasNoErrors message in ModelResultMatchers
Fix typo
Fixed AbstractAutoProxyCreator to accept null bean names again
PATCH does not work with the standard JDK HTTP library
Fixed typo
+ Moved @Bean into base package, next to @Configuration
ResourcePropertyResource accepts EncodedResource for properties files with a specific encoding
Move ResponseEntityBuilder into ResponseEntity
Reproduce claims raised in SPR-8849
Updated ivy settings so that org.jboss.util is downloaded to the local repository; updated Eclipse classpath regarding latest version of org.jboss.util; added classpath entry for org.jboss.classloading.spi so that JBoss5ClassLoader compiles in Eclipse.
Polishing
SPR-5625 - Allow for exceptions to be annotated with a @ResponseStatus annotation
Introduce getContentAsByteArray()/getContentAsString() in MockHtttpSvltReq
Provide simple way to create ClientResponse
fixed accidental test failures
Update ScriptTemplateView to manage content type
Updated docbook files to use Docbook 4.5 DTDs, so it uses the locally cached versions
Initial import of web module
Aligned exception message for httpOnly
Avoid getTypeForFactoryBean warn logging for lazy-init beans
Synchronize Reactor Flux#create / Flux#generate changes
Switch back to reactor-core SNAPSHOT versions
Expand var-args before passing to KeyGenerator
Add spring-websocket module tests
StatementCreatorUtils.setValue only uses setString etc for Types.OTHER in case of Oracle
Skip Content-Disposition header if status != 2xx
Rename WebTestClientConnectorTests to match class name
removed duplicate junit and aspectjweaver dependencies
Update javadoc
Remove outdated BeanFactoryLocator documentation references
Give meaningful names to SprXxxTests in spring-test
Update unprocessableEntity to allow body
Class identity comparisons wherever possible
Polishing
Add "Problem Details for HTTP APIs" media types
FooConfig, Foo, Bar, and BarFactory are now public static classes in order to avoid a bug with JDT/Spring IDE where the classes cannot be found in the XML application context.
Add RequestBodyAdvice
Throw exception for illegal PathMatch configurations
Clean up warnings in spring-test
Replace EasyMock with Mockito
Update copyright header
Add API to register collection converters
Align javadoc improvements
HEAD mapping has higher priority over other conditions
[SPR-6184] additional sanity check tests analogous to those developed for [SPR-3896].
Fix invalid String representation for composed RequestPredicates
Polishing
Merge branch '5.1.x'
* @ContextConfiguration's loader attribute is now inherited if not declared locally
Bsh/GroovyScriptFactory reset script cache in case of compilation error
Avoid ambiguous property warning for methods with multiple parameters
Add convenient getters for force*Encoding attributes
Polish AbstractContextLoader Javadoc
Consistent declaration and use of UTF-8 Charset constants, plus related polishing
DecoratingClassLoader and its subclasses register themselves as parallel capable on Java 7+
Merge branch '3.1.x'
StringHttpMessageConverter defaults to UTF-8 for JSON
Merge branch '5.1.x'
Introduce general purpose isEmpty() method in ObjectUtils
added link to Dave's transaction article
Cache provider related exceptions handling
Avoid duplicates from <websocket:decorator-factory>
re-arranged the @Bean content
Merge branch '5.1.x'
Fix ResourceRegion HttpMessageConverter write checks
Merge branch 'SPR-9984' into 3.2.x
Polish (minor) in AbstractMessageReaderArgumentResolver
Make AbstractResponseBodySubscriber.onSubscribe thread-safe
Harmonize default converters
Polishing
Add missing equals sign to code snippet (SPR-7339)
Delay check if pattern ends with slash
Test -> Tests
Support static fields in ReflectionTestUtils
Make JUnit a compile-time dependency, since static mock functionality depends on its annotations.
PathResourceResolver should not resolve root path
date subpackage
Restored compatibility with JsonPath 0.9.x
Merge branch '5.1.x'
Support for Jackson's findModules and autodetection of JSR-310 and Joda-Time support
Fix unused local variable warnings
Add defaultUriVariables property to RestTemplate
String decoding for text only vs any MIME type
Log4jConfigurer initLogging(location) throws FileNotFoundException for file URL as well
Moved REST @ExceptionResolver to MVC chapter.
Make TestContextManager.getTestContext() public
Add checkNotModified support for view resolution
AbstractApplicationContext resets common introspection caches after refresh
STOMP client session supports sending ack/nack
AbstractCachingViewResolver does not use global lock for accessing existing View instances anymore
Tiles 2.2 etc
Fix Javadoc typo
Let users control SSE stream completion
Add error message for missing servlet request param.
Polishing
Allow PropertyResolvers to ignore unresolvable ${placeholders}
Polish javadoc in TableMetaDataContext
CollectionUtils.lastElement for common Set/List extraction
Fixed annotation attribute processing for enum arrays
Fixed type detection to avoid reuse of parent bean's targetType on child definition merge
Next Development Version
Clean up warnings in Gradle build output
Introduced addScope convenience method on CustomScopeConfigurer (for use in WebSocket configuration)
Allow 'arg-type' matches against element body
Fixed a typo in RequestMappingHandlerMapping.java
Polishing
Improve regex for parsing query params
ResultSetWrappingSqlRowSet preserves first matching column per name (as defined in ResultSet's javadoc)
Move server related classes from src/test to src/main
Polish ResourceDatabasePopulator
Polishing
SPR-5518: Documented ability to use text rather than symbols for SPEL operators (lt, le, gt, ge, eq, ne, div, mod, not).  Can help in XML specification of expressions.
Polishing
added language element to programlisting for syntax highlighting
starting to sort out like/matches.  Matches is the java regex related one.  Like is the SQL related one.  But the spring .net 'like' doesn't seem to be the same as the SQL doc I found for like...
SpEL selection/projection works with Iterable as well
Made EncodedResource based variant public; consistently detect XML properties across all variants
Add @ReplyTo/@ReplyToUser, remove deps on spring-web
Delete trailing whitespace in Java source code
Added current version information to SpringAsmInfo's javadoc
Polishing
Delete unused import in StdReflParamNameDscoverer
Moved portlet files to web package
FileUrlResource creates same class from createRelative
Polish warning message
Differentiate b/t (in)definite results in JsonPath assertions
renamed .testsuite -> .integration-tests
Drop NativeJdbcExtractor mechanism in favor of JDBC 4 unwrap
Fix tests
Add missing "be" in Part's javadoc
Cache SpringFactoriesLoader loads
updated to Hessian 3.2.1 (remaining compatible with Hessian 3.1.3 and above)
Replace use of "Spring MVC" in spring-webflux module
Add missing package-info file for new test.context.web.socket package
Migrate to Asciidoctor 1.5 syntax
Update license header for recently modified files
Polishing
Fix cache cleanup issue in DefaultSubscriptionRegistry
Polish netty client support
Update changelog
Accept non-generic type match as a fallback
SPR-6492
Clean up warnings
rearranged spel subpackages in order to avoid package dependency cycle; introduced SpelParserConfiguration object to replace bit flags
Polishing
Introduce before/after test execution callbacks in TestContextManager
Polish Javadoc for ResourcePropertySource
Delete legacy JUnit 3.8 test from spring-test
Improve setDateHeader impl in MockServletResponse
Add singleSession attribute to @SendToUser
Add byte[] encoder and decoder
Allow plugging in custom RequestExpectationManager
embedded db support
Ensure SocketUtils can be instantiated
Increment version to 3.2.2.BUILD-SNAPSHOT
+ revert back deleted resource
Polish AnnotationAwareOrderComparator
Deprecate Castor support
Consistent references to primitive types (in alphabetical order)
revised expression parser API design
AbstractRequestLoggingFilter ignores non-available query string
Dedicated specificity comparator in PathPattern
Jaxb2Marshaller etc
Fix regression introduced in 4.3 snapshot
introducing common.beans.* packaging and externals; experimenting with sharing SideEffectBean
Rename Reactor support classes
moving unit tests from .testsuite -> .aop
Comment xsd-config-setup doc pending overhaul (SPR-7521)
Explicit notes for load-time weaving on Tomcat 7.0.63+ and WildFly 9
Method-level @SuppressWarnings("unchecked") for generic varargs
ResolvableType.forRawClass as a straight wrapper for Class.isAssignableFrom
Fix repeated calls to DataBuffer.write(CharSequence, Charset)
Increment version to 4.0.0.BUILD-SNAPSHOT
Consistent use of Class<?>
Spring's JMX support can rely on native MXBean detection on Java 6+
SPR-8235 SPR-7480 Updating H2 error codes
fixed decorated BeanDefinition condition for early type checking in AbstractBeanFactory (SPR-7006)
Rename RouterFunctions.subroute() to nest()
Polish ResourceDatabasePopulatorTests
Add space separator in JsonPathExpectationsHelper
Upgrade to Gradle 4.10.2
ASM annotation visitor defensively accesses enum constants
LocalSessionFactoryBean and HibernateTransactionManager for JPA setup
Support *Aware for @ComponentScan custom filters
Add support for inline maps in SpEL expressions
Refactor and deprecate TransactionAspectUtils
Polishing
Upgrade to Gradle 5.3.1
further post-GA fixes
DefaultListableBeanFactory switches to thread-safe copying for names collections if necessary
reworked JsonMessageConverter contribution into MappingJacksonMessageConverter, aligned with MappingJacksonHttpMessageConverter and MappingJacksonJsonView
Add base contracts for the Web client
Compatibility with JDK 9 release candidate build (175)
Honor presence of @WebAppConfiguration in ServTEL
Upgrade to reactor-netty/-ipc to 0.6 snapshots
Improve close in ConcurrentWebSocketSessionDecorator
Use concatWith instead of mergeWith
Add MediaType.APPLICATION_JSON_UTF8
Refactor HandlerMapping path match configuration
Add SameSite support in WebFlux SESSION cookies
Removed outdated hibernate3 references across the codebase
Reset Pragma header in WebContentGenerator
Merged bean definitions are now cached early and selectively evicted after post-processing and before actual bean creation
Consistent nullability for BeanDefinitionBuilder setters
update consume to subscribe
Relaxed BeanFactory assertion in resolveInterceptorNames
Move integration tests => src/test
Final preparations for 3.2.1
Shorten package name for Spring MVC Test framework
DefaultSingletonBeanRegistry avoids singletonObjects lock wherever possible for non-singleton factory performance
@Import'ed configuration classes get properly registered in case of same class name (second try)
SPR-6158: Initial implementation and tests for @ImportXml
polishing
moving unit tests from .testsuite -> .context.support
adding missing test time dependencies
Jackson2JsonDecoder should support empty JSON array
SPR-8082
Add "simple" broker and SessionSubscriptionRegistry
Rename ConfigurationClassMethod => BeanMethod
Deprecate ReflectionUtils.invokeJdbcMethod (for removal in 5.2)
Optimize use of HandlerMethod and sub-classes
Polish ResponseBodyArgumentResolver
Added Tiger tests
Removed deprecated helper classes and methods (that have been deprecated since 3.0 or before)
Remove object wrappers in Kotlin extensions
Remove JAF references
Introduce DirtiesContextBeforeModesTestExecutionListener
Fix failing tests
Upgrade AspectJ from 1.6.8 to 1.6.12
Document public API in AnnotationAttributes
Explicit notes on isolation level handling in participating transactions
Refine destination semantics for msg-handling methods
Fix annotation value mapping regression
Don't use single letter catch variables
Document default TELs in AbstTxTestNGSpringContextTests
TestContextManager consistently handles Errors from listener invocations
Added batchUpdate method taking a Collection, a batch size and a ParameterizedPreparedStatementSetter as arguments (SPR-6334)
moving unit tests from .testsuite -> .aop
Merge branch '3.1.x'
JndiObjectFactoryBean converts a "defaultObject" value to the expected type if necessary
ServerSentEventHttpMessageReader internal refactoring
Update resource handler Java config
Improve Javadoc for TestContextBootstrapper
Updating PetClinic build documentation regarding migration to Spring Build.
Polish tests for HtmlUnit support
moving .ejb.access unit tests from .testsuite -> .context
Honor scheme in MockHttpServletRequest.isSecure()
Switch master to 4.1.0.BUILD-SNAPSHOT
Polishing
Fix misleading JavaDoc in ProfileAnnotationConfigTestSuite
[SPR-8240] polishing
Fix some warning
Recursively add test dependencies
Consistent support for JTA 1.1 TransactionSynchronizationRegistry
Add concurrent test and fix potential NPE
Assess claims made in SPR-9799
SPR-5385, SPR-5301 - partial work committed.
fixed eclipse classpath compile errors
Always use 'this.' when accessing fields
Allow usage of BeanNameGenerator in ImportBeanDefinitionRegistrars
fixed dependencies
Use bridge methods in ReflectiveMethodResolver
Merge branch 'cleanup-3.2.x' into 3.2.x
Deprecate PreferencesPlaceholderConfigurer along with its base class
Protected methods for serializing form content
Add URI based MockHttpServletRequestBuilder constructors
Avoid defensive check for Servlet 3.1 setContentLengthLong method
Leave query un-encoded in MockMvc request builder
LogFactoryService class for standard Commons Logging service discovery
Sanitize request URL in ResourceUrlEncodingFilter
Polishing
Modularize asciidoc documentation
Update documentation TODOs
Add propagateQueryParams property to RedirectView
Moved tests from testsuite to web.servlet
Filter @Configuration classes out of LTW test
Remove SqlXmlObjectMappingHandler
Consistent logging of selected media types
Renamed DataBufferUtils/DataBufferFactory.compose to join
SPR-8352 Init and apply MappedInterceptors from AbstractHandlerMapping
Remove ISE in ResourceUrlProvider
Added 'zone' attribute to @Scheduled
Switch servlet dependency to a public one
Add LeakAwareDataBufferFactory
Introduce repeatable @Sql tests
Polishing
SPR-5803 and additional POM maintenance/development
Separate from expectations from response creation
revised package-level request and response classes
ASM fix #317578
Consistent callbacks for TypeFilters, ImportSelectors and ImportBeanDefinitionRegistrars
[SPR-5888] Upgrading to TestNG 5.9.
Polish CORS global configuration
lamdbas containing only one statement should not nest this statement in a block
Polishing
SPR-7887
added more content to new in Spring 3
Polish
Refined javadoc and exception messages
RESOLVED - issue SPR-5917: updated jdbc docs
AbstractMethodMessageHandler processes Error as MessageHandlingException
Rename ChannelResolver to DestinationResolver
Add SNI support in Netty4ClientHttpRequestFactory
SubProtocolWebSocketHandler checks if session is open
Fix lambda nullability in JdbcOperations extensions
Polishing
Allow HttpMethod as a controller method argument
Polish MappingJackson2JsonView
added "concurrency" property to Default/SimpleMessageListenerContainer and JmsActivationSpecConfig, supporting placeholders for the jms namespace "concurrency" attribute now (SPR-6232)
Fix HttpRequest#getURI() with Netty based engines
applied joris's no derby log patch
Polishing
Avoid getDeclaredMethod check in ReflectionUtils.isObjectMethod
Polish "Ensure indexer gracefully handle missing meta annotations"
Fixed exception message expectation plus formatting
Fix typo in Javadoc for TestContextBootstrapper
MockHttpServletRequestBuilder decodes pathInfo
RESOLVED - issue SPR-4783: Add name attribute to XML namespaces that want to support it (through parser base class) 
BeanDefinitionParserDelegate does not silently ignore 1.x 'singleton' attribute
Align Reactive WebClient with web.reactive.function
Polish DefaultUriTemplateHandler
Initial support for Bean Validation 1.1 and Hibernate Validator 5.0
updated test dependencies
Convenient EhCache CacheManager bootstrapping within @Bean methods
Document single element annotation attribute overrides in "What's New"
Fix RequestPartServletServerHttpRequest encoding issue
Polish
Update ContentNegotiationManager for unknown path exts
fixed typos (SPR-7332)
Update Javadoc re: minimum JUnit 4.9 dependency
Polishing
Polish Cookie abstraction in http packge of spring-web
Fix white space issue
Latest dependency updates (Jackson 2.6.4, Quartz 2.2.2, C3P0 0.9.5.2)
"depends-on" attribute on lang namespace element actually respected at runtime now
polish
Support conditional updates in ServletWebRequest
Reset MBean Servers after JRuby and JMX tests
polish
Calling cancel on a Future returned by a TaskScheduler works reliably now
updated commons-pool version in .classpath to match ivy config
Merge branch '5.1.x'
Add default ContentTypeResolver initialization
Polishing
MockHttpServletRequest returns empty BufferedReader in case of no content
Polish
restored preference for covariant return type if applicable
Polish message method handling tests
Copy cookies in built ServerResponse
RESOLVED - issue SPR-5917: DataSourceInitializer and namespace support for creating and populating databases 
Merge pull request #625 from eujungkim/spr-warning
Polish JsonPathResultMatchersTests
Polishing
Fix method comment for getRequiredProperty(String)
Support java.util.Optional for @MVC named value args
Added further MySQL error code for DataIntegrityViolationException
Adjust SockJS use of ServerHttpResponse close vs flush
Support for BCP 47 language tags
Polish JettyResourceFactory
Fix issue with StompSubProtocolHandler initialization
Rely on presence of Servlet 2.5's ServletContext.getContextPath()
Consistent equals/hashCode/toString implementations in AnnotationMatchingPointcut/ClassFilter/MethodMatcher
Consistent HttpMethod identity comparisons
Upgrade to Undertow 1.4 CR2
[doc] Update Spring MVC exception handling content
Support single-value reactive types in @MessageMapping
updating eclipse classpath for test dependencies
Fixed addProtocolResolver signature in ConfigurableApplicationContext
ManagedResource annotation supports placeholders for String attributes
Clean duplicate separators in resource URLs
Document cache and jdbc namespaces
Enhance ParameterizableViewController
Polish WebJarsResourceResolver
added dependency on org.eclipse.persistence 1.0.1
Revised retrieval of cache strategy beans
Separate out URL path parsing in PathContainer
Peek into the content for @RequestBody(required=false)
Avoid JDK proxy against CGLIB Factory interface and assert required type when resolving dependency
Fix hashcode/equals issue in HeadersRequestCondition
Remove unecessary "<<"
Handle parameters of Kotlin extension methods correctly
Polish
smarter guessing of the element type (SPR-7283)
Use ByteBuf instead of Buffer in reactor-netty
Explicit references to spring-mvc-4.2.xsd for Velocity declarations
ServletServerHttpRequest.getURI() ignores malformed query string
added content to new in Spring 3
Add Reference to Spring AMQP Remoting in docs
Add more detail to ISE in ServerEndpointExporter
Add constructors to MessageHandlingException
Add copyToUriComponentsBuilder method
Refactor WebTestClient response body expectations
Merge branch 'cleanup-3.2.x' into 3.2.x
Revised backport version 5.0.11
Fix review remarks on Servlet.fn
Allow for reuse of key visitor classes in tooling
AbstractJackson2Encoder uses private fields
revise cache API
Load-time weaving support for WildFly 13+ (JBoss Modules 1.8+)
Fixed stalling issue in RequestBodyPublisher.
Polishing
Add Spring View support for Groovy Markup Templates
added @RequestHeader support
Customize destruction callback for AutoCloseable beans
Fixed minor grammatical errors.
MockHttpServletRequest.getRequestURL aligns with getServerName/Port
Polish: assertion arguments should be passed in the correct order,
GenericBeanDefinition's toString() takes parent definition into account
prepared for 3.1 GA
Use .setStatus in ResponseStatusExceptionResolver
ClassUtils.isCacheSafe delegates to isVisible for resolving classes
Aligned XML scheduled-task elements with @Scheduled in terms of kicking in after context refresh
Delete unnecessary PropertySourcesPlaceholderConfigurer beans
Fix class name in javadoc
Removed JMS 1.0.2 support
HandlerMappingIntrospector is a bean
Add hasJsonPath/doesNotHaveJsonPath assertion options
Fix reference docs section on inner beans
first cut of changelog for M3
polishing .aop tests
Reset global rollback-only status when rolling back to savepoint
PayloadArgumentResolver supports JsonView as well (through AbstractMessageConverter revision)
Support @[Before|After]Transaction on default methods
Polish
AbstractApplicationContext resets local listeners to pre-refresh state
Deprecated StringUtils.mergeStringArrays
Polish: reorder the modifiers to comply with the Java Language Specification.
@Transactional qualifiers match against transaction manager definitions in parent contexts as well (SPR-7679)
Updated Eclipse .classpath to aspectj 1.6.8
Clean up warnings in spring-web
Refine "." separator support for STOMP messaging
Fix issue with restoring included attributes
Polishing
Drop deprecated dependencies on Log4j, JRuby, JExcel, Burlap, Commons Pool/DBCP
Introduced 4.0 versions of all XML configuration schemas
Polishing
+ upgrade to AspectJ 1.6.8
AbstractApplicationContext's ApplicationListenerDetector removes listeners from ApplicationEventMulticaster on individual destruction
Moved tests from testsuite to context and context support
Fix client-library-url ignored in MVC namespace
SPR-7353 Doc update for consumes/produces + changelog update
Add ReactiveAdapterRegistry
Revisit meaning of response.close() in HTTP client
Polish
Polishing
Reimplemented ServerEndpointExporter to avoid BeanPostProcessor role
SPR-7116 - Added documentation for <mvc:default-servlet-handler>
exclude abstract lazy-init beans from MBean exposure as well (SPR-6784)
updated to CGLIB 2.2 and EHCache 1.6.2
Fix MultipartResolver javadoc implementation refs
Fix DefaultSubscriptionRegistry when using pattern destinations
Polish
Fixed @Bean meta-annotation detection when using ASM
Update AbstractMBeanServerTests hierarchy to JUnit 4
polish
Polishing
Fix NettyDataBuffer#lastIndexOf()
Initialize FrameworkServlet property sources eagerly
Repairing Eclipse classpaths and Ivy config:
Polishing
Consistently skip unnecessary search on superclasses and empty elements
Test improvements.
Overridable invokeHandlerMethod and createInvocableHandlerMethod hooks
InvocableHandlerMethod logs argument resolution exceptions at debug level
Support inlined SQL statements in @Sql
Update thread pool settings in STOMP/WebSocket config
moving .jndi, .mail and .mock.web unit tests from .testsuite to .context, .context.support, and .test bundles respectively
Move http.converter.reactive to http.codec
Avoid triggering lazy resolution in MultipartResolver.cleanupMultipart
Direct use of Bean Definition 1.1 ExecutableValidator
SPR-6123: doc update on writing good pointcuts (should include a within())
sync updates with mono
Add XML namespace for WebSocket config
Fix URI parsing in Reactor Netty request
IN PROGRESS - issue SPR-6779: imported @Configuration classes do not get enhanced and fail to satisfy scoping requirements
Honor Host header for server name/port in MckHtSrvRq
Use ByteBuffer instead of byte[]
Fix malformed UrlTag Javadoc
MBeanExporter should not implement SmartLifecycle but rather receive a ContextRefreshedEvent-like callback
Remove "Feature" support introduced in 3.1 M1
Reliable null value handling in ConcurrentMapCache, GuavaCache, JCacheCache
Javadoc suggests Jackson 2.9
Fine tune STOMP and WebSocket related logging
Polishing
SPR-4493
Polish
Fix typo in reference documentation
Enhance SpEL compilation to cover additional expression types
Removing accidentally committed clover-related eclipse metadata
Update reference manual regarding upgrade to JUnit 4.10
ServerEndpointExporter can initialize itself based on a late-provided ServletContext as well (for Boot)
Class identity comparisons wherever possible (and further polishing)
Header values are optional in Stomp 1.1 and 1.2
Polishing
Drop defensive Joda-Time 2.x check
Ignore (Auto)Closeable for interface-based proxy decisions
Fix cache decoration
Fix concurrency issue in TestDispatcherServlet
Add error stream tests for ProtobufEncoderTests
Added setModulesToInstall with convenient Class vararg, renamed setFindModules to setFindModulesViaServiceLoader, made existing setModules override any other setting
Consistent HttpMethod resolution against underlying HttpServletRequest
Mentioned "-parameters" compiler flag in javadoc
AbstractBeanDefinitionParser allows for skipping evaluation of XML "name" attribute
Define behavior of null Callable or DeferredResult
NamedParameterUtils skips Postgres-style ?? operator
Silently swallow IllegalStateException on commit if the JMS transaction is based on a JDBC transaction
Removed reference to the British musical and multimedia group "the the". ;)
Note on 'generateDdl' versus JPA 2.1 schema generation
Polish
AbstractRequestBodyPublisher improvements
shortened build properties "org.junit.version" to "junit.version" and "org.testng.version" to "testng.version"; reverted SLF4J version back to 1.5.3 (for Hibernate 3.3.1 compatibility)
Fix issue with subscribe destination
SPR-5327: tweak the ivy.xml so that commons-logging is a separate configuration.  It already comes out as optional in the generated poms (including core), which isn't great, but I can't see what is causing that
Fix case of rollbackForClassName in ref docs
Consistent use of NIO.2 for file read/write interactions
BridgeMethodResolver properly resolves all declared interfaces
Merge branch 'SPR-9984' into 3.2.x
Add MissingMergedAnnotation Tests
Apply formatValue to a few remaining places
Document connection handling in ScriptUtils
Documented HttpEntity
Efficient log checks in STOMP encoder/decoder
adding eclipse project settings for org.springframework.jms
Remove unintended dependency on Servlet API in SockJS
Add WebClient create() and build() static methods
marked several dependencies as optional (SPR-5820)
Polish Javadoc of [Server]HttpMessage[Reader|Writer]
Support for Servlet request params with HTTP DELETE
Detect invalid configuration for autoGrowCollectionLimit on DataBinder
Fix issue w/ use of UrlPathHelper's urlDecode property
Transform absolute links in ResourceTransformers
Fix behavior of ClientResponse#bodyTo** with Void
preparations for RC3 release
SPR-8218 MVC chapter updates
ScheduledAnnotationBeanPostProcessor uses target class as cache key in case of proxy
ReactorHttpHandlerAdapter logs bad request at warn level only
PropertySourcesPlaceholderConfigurer's "ignoreUnresolvablePlaceholders" setting reliably applies to nested placeholders as well
Delete unused package import
+ JavaDoc updates
Fix test failure by using the new cloneBuilder method
Consistently log Class.getName() instead of Class.toString(), avoiding double class term in log message
fixed String size constraint example (SPR-6517)
Polish MockRestRequestMatchers query param support
Support CharSequence for response body
Improve extensibility of TestContext bootstrapping & context caching
Polish
Upgraded to Hessian 4.0.7; deprecated Burlap support
SPR-12538 AsyncRestTemplate interceptors
Polishing
Comprehensively cache annotated methods for interfaces and superclasses
Polishing
changed to use 3.0 xsd references
Change gopivotal.com to pivotal.io
Throw a proper exception if no convert is found
Add @RestControllerAdvice
Switched 'order' attributes across namespaces to 'xsd:token'
Upgrade to Undertow 1.4 CR3 (and Jackson 2.8 GA)
Refactor reactive type conversion support
Polish Javadoc in RequestAttributes
removed entity to string id conversion routine as it is not required
SPR-17492: FastByteArrayOutputStream.read byte-to-int conversion
Moved tests from testsuite to web.servlet
Make ObjectMapper configurable in spring-messaging
SimpleApplicationEventMulticaster just swallows event downcast exceptions
Separated out unit test projects
UriUtils.extractFileExtension properly handles all fragments
[SPR-7724] Example email addresses in the reference manual now use example.org as the domain name.
Polish HandlerResultMatchers
Fix compiler warnings
Simplify CodecConfigurer related type names
Update tests to new mime types
Consistent encoded path evaluation in reactive ResourceWebHandler and co
Add JSONP support for MappingJackson2MessageConverter
Polish
Improve error message for missing request body
Set all strategies in CNM factory bean
Jms2MessageProducerInvocationHandler properly delegates to CachedMessageProducer.this
Upgrade reference plugin and remove custom xsl
Register EventPublishingTestExecutionListener by default
AbstractController supports HTTP OPTIONS
Consistent support for @Order annotation as alternative to Ordered interface
Allow serving static files from RouterFunctions
Polishing
Add support for Deferred to ReactiveAdapterRegistry
Merge branch 'SPR-10126' into cleanup-3.2.x
Polishing
YamlProcessor embraces SnakeYAML 1.18+ duplicate key handling
OpDivide does not return a TypedValue for its operate result (consistent with OpMultiply)
Introduce log4j 2 for Spring's test suite
Polishing (collapsed if checks, consistent downcasts, refined javadoc)
ScheduledAnnotationBeanPostProcessor properly deals with nested proxies
Add caching support for Caffeine
Handle invalid STOMP content-length header value
Optimize AntPathMatcher when checking for potential matches
Add SseEventEncoder to WebReactiveConfiguration
Refactor VersionResourceResolver in strategies
@Scheduled supports java.time.Duration format for its delay attributes
Polish
Sort handler matches in ResourceUrlProvider
Remove IOException from HandshakeHandler
Fixed reference to "fallbackToNoOpCache" flag
Add session lifecycle ApplicationEvent's
Use Java 8 forEach method on Map
update package
SimpleApplicationEventMulticaster leniently handles ClassCastException
Polishing
Polishing
Polish reactive WebSocket integration tests
Protected applyLifecycleMethods in UrlBasedViewResolver
ContentRequestMatchers asserts request with form data
Polish
Introduced  DefaultParameterNameDiscoverer which checks JDK 8's standard reflection first and then falls back to ASM-based debug symbol analysis
Removed unnecessary cast to int
SPR-6541: consolidate repositories into a profile (-P build)
Add principal in GlassfishRequestUpgradeStrategy
UndertowRequestUpgradeStrategy auto-adapts to Undertow 1.3's different Pool API
Polishing
Remove PathMatchResultComparator
Consistent use of Class<?> in core container method signatures
Better support for overriding base URI in WebClient
Support *Aware ImportBeanDefinitionRegistars
Proactively reject URLs without target address
Tweaks to package-info.java files
Polish AntPathMatcher.setTrimTokens javadoc
Merge branch 'SPR-10124' into cleanup-3.2.x
Polish Javadoc
SPR-7912 Introduce FormatterRegistrar interface and FormattingConversionServiceFactoryBean enhancements.
sync reactor
Support Model as method argument and in HandlerResult
polish web.Mock* classpath
Add links to class-level Javadoc in JdbcTestUtils
Request streaming for Apache HttpClient
Polish docs (#22645)
file names based on section id now; updated sec ids to match conventions
revised support for annotated factory methods (merged @FactoryMethod functionality into JavaConfig facility)
Consistent cache key implementation across transaction and cache attribute sources
MethodValidationPostProcessor provides protected createMethodValidationAdvice template method
Handle nested w/o top-level array in Jackson2JsonTokenizer
Improve context-related logging on web startup
eclipse classpath updates
Mixed polishing along with recent changes
RESOLVED - issue SPR-5917: fixed classpath pattern for ANT
Add reference to ConcurrentWebSocketSessionDecorator in the docs.
Consistent ExpressionException-style quoting of expression string and position
SPR-7364: added separator property to database populator to deal with things like PL/SQL
Update reference with examples of multipart requests
Prefer use of "Java EE" over "J2EE"
Clean up warnings in spring-websocket
Consistent documentation for both 'close' and 'shutdown' as inferred destroy methods
Next Development Version
SPR-13784: Base64Utils: URL/File Safe Alphabet
Polish Javadoc for NumberUtils
updated changelog for RC2 release
Revisit ScriptTemplateView resource loading
Merge pull request #1042 from Enigo/cron-validation
Add MockWebSession for use with MockServerWebExchange
use Publishers.onErrorResumeNext
Document IE 8 and 9 related SockJS transport details
Support for Collection-based return type
Polishing
ConversionService is able to apply Converters to interface-based array elements (SPR-7150); a context ConversionService is able to override an ApplicationContext's resource editors (SPR-7079)
Support "X-Forwarded-Host" in UriComponentsBuilder
Configure view controllers with ApplicationContext
SimpleApplicationEventMulticaster defensively handles ClassCastException without message
moving unit tests from .testsuite -> .aop
Polishing
AsyncHandlerInterceptor.afterConcurrentHandlingStarted declared as default method
Fix typo in 3.2 migration guide
Improve dependency management for spring-test
ResourceUtils supports Tomcat's "war:jar:" URL format
Merge branch '5.1.x'
Consistent lazy resolution of default executor/scheduler for Async/ScheduledAnnotationBeanPostProcessor
General polish of new 4.0 classes
Rename MvcAsyncTask to WebAsyncTask
SPR-6003 - Improve CastorMarshaller support for loading class descriptors
Cleanup of remaining direct BeanWrapper usage
Javadoc fixes
Polish SockJS exception handling and javadoc
Clean up warnings in Gradle build output
Polishing
Polishing
Restore -XX:MaxHeapSize=256m for gradlew.bat
ResourceDatabasePopulator etc
HeaderValueHolder.toString() exposes underlying list of header values
Merge branch 'cleanup-3.2.x' into 3.2.x
Fix NoOpCache handling of get(key,callable)
Consistent conversion of Optional array/list arrangements
ServletResponseHttpHeaders consistently overrides HttpHeaders again
Add WebSession.invalidate()
Switch to ContainerPath variants in HandlerMapping's
Return null correctly from MutablePropertySources#get
DefaultSingletonBeanRegistry's isDependent defensively checks for circular recursion
Fix Validator initialization with a no-op implementation
Fix combining class and method level @CrossOrigin attributes
updated changelog
Minor changes
Remove duplicate test resources
[SPR-8240] Documenting TestContext support for @Configuration classes in the reference manual.
Reset Expires HTTP header when caching configured
Programmatic ObjectProvider retrieval through BeanFactory API
Be explicit about the time unit in WebRequest
AspectJ update
Merge branch '5.1.x'
AbstractApplicationContext silently ignores non-initialized ApplicationEventMulticaster/LifecycleProcessor on destruction
Component scanning ignores attributes and meta-annotations on non-public annotations
SPR-5624 - A default HandlerExceptionResolver that resolves standard Spring exceptions
Fix location checks for servlet 3 resources
@ExceptionHandler methods logs at DEBUG level again
Update Javadoc
Polishing
Polishing
Polishing
Reactive type checks for all argument method resolvers
Update the Jetty WebSocket adapter
Stabilize Flux.interval emissions in integration tests
Consistent use of Class<?> in Assert
Add doesExist() to HeaderAssertions for WebTestClient
Update exception handling
Added test for SpringProperties setFlag method
Turn down logging in DefaultSingletonBeanRegistry
Polish HeaderWebSessionIdResolver
SPR-5968 - Maven central POM for spring-web has wrong versions of dependencies and a missing dependency
Fixed usage of wrong TestBean package.
Harden synchronization around  SockJS heartbeats
AbstractListenerServerHttpResponse improvements
MatchableHandlerMapping extends HandlerMapping and lives in web.servlet.handler now
consolidated context.annotation.support -> context.annotation
Upgrade to Jackson 2.9.2
presentation model binder tests
Refactored SseEvent to ServerSentEvent
SPR-5429 Update Pet Clinic to use HSQL as an embedded database
Add test to demonstrate 4.2 not affected by SPR-13185
spring 3 object mapping ref docs
JavaMailSenderImpl calls sendMessage with empty array instead of null
ObjectFactoryCreatingFactoryBean creates a serializable ObjectFactory reference; added ProviderCreatingFactoryBean, exposing a serializable JSR-330 Provider reference (SPR-6998)
Add close() method on HTTP client response
SPR-8391 Minor documentation fixes
Merge pull request #735 from rjozwik/fix-huc-is-reserved
Allow RedirectAttributes on ExceptionHandlers
Delete trailing whitespace in spring-test
JSR-223 based StandardScriptFactory (including <lang:std> support)
Add header support to WebSocketConnectionManager
Initial support for JDK 8 Date-Time (JSR-310)
ShadowingClassLoader can be constructed without default excludes
[SPR-6184] added tests to verify support for @Configuration classes with TestNG; simplified existing TestNG tests using Spring 3.0 and 3.1 features.
Make EOF_STATEMENT_SEPARATOR XML friendly
Defensively expect concurrent registration of BeanPostProcessors
Merge branch '5.1.x'
Added note on non-thread-safety of Jackson's DateFormat support
Remove trailing whitespace in source files
Fixed content length check in XmlValidationModeDetector
Add spring-build 2.5.2
Refactor SockJS and WebSocket layer configuration
Polish annotation utils
SPR-6996 Add mvc:interceptor bean references
Corrected grammar and spelling mistakes in reference manual.
RESOLVED - issue SPR-6365: spring-jdbc.xsd script element claims resource patterns can be used for any SQL resource location but this is only supported for initialize-database tag 
updating eclipse classpath for JDO 2.1
Consistent formatting and related polishing
Polish path pattern parsing javadoc
Add MessageHandlingRunnable
Add gradle wrapper
Upgrade to Gradle 4.6
Increment version to 3.2.0.BUILD-SNAPSHOT
Add tests for SpringBeanContainer (Hibernate ORM integration) and fix the behavior when requesting named beans (#22260)
checkNotModified needs to consider HEAD as well
Update changelog re destroy method inference
Introduce Supplier<String> support in Assert util
fixed constructor resolution algorithm to trigger ambiguity exception as late as possible
Polish
Polishing
Fix circular placeholder prevention
Check STOMP headers against ending backslash
Update Javadoc of AsyncHandlerInterceptor
Renamed @WebTests to @WebTest
Improve ex msg when locations & classes are declared in test hierarchy
Consistent declaration of private static final logger variables
MessageHeaders serialization preserves non-serializable entries in original instance
RequestMappingHandlerAdapter properly invokes handler method in synchronizeOnSession mode again
BeanDefinitionOverrideException in case of overriding not allowed
BridgeMethodResolver properly resolves interface hierarchies
Support user destinations without leading slash
Added DataBufferAllocator parameter to Encoder.encode, and use that instead of AbstractAllocatingEncoder base class.
Support Ant-style package name with component index
Add value-type attrib to beans->map->entry element
Remove duplicate blank in log message of  ExecutorConfigurationSupport#initialize
fixed component scanning for JBoss 5 VFS; applied revised vfs-fixes-3.patch; added ResourceHandlingUtils (SPR-5120)
Upgrade to ASM 6.0
CronTriggerFactoryBean allows 'calendarName' and 'description' to be specified
Introduce buildTestContext() in TestContextBootstrapper
Consistency between InvocableHandlerMethod in web and messaging modules
Remove ServerWebExchange#getRequestParams
Change default appcache manifest file extension
Polishing
Polish: simplify ControllerMethodResolver initialization
Fixed setFavorPathExtension delegation code
Fixed javadoc links
removed references to Perl5RegexpMethodPointcut (SPR-6721)
Polishing
updated codes for Sybase (SPR-8125)
Polishing
Use try-with-resources in documentation samples
Add ability to clone to UriComponentsBuilder hierarchy
Minor Javadoc update
ConverterRegistry etc
Merge branch '3.1.x'
Add PathPatternRegistry
JAXB scan skips annotated interfaces
Properly handle null FactoryBean instance
Fixed minor typo
Demo @ContextConfiguration as composed annotation with ACI
AnnotationConfigRegistry exposes registerBean with supplier/qualifiers
Use ParsingPathMatcher by default in WebFlux
Polish
+ internal improvement of WebLogic LTW
Add helper method to ResourceHandlerRegistry
Set ETag header with VersionResourceResolver
StandardMultipartHttpServletRequest identifies MaxUploadSizeExceededException through keywords in message
Consistent support for Java 8 default methods (in interfaces implemented by user classes)
SimpleEvaluationContext builder
Petclinic is RESTful.
WebSession to WebSocketSession attribute passing
Revise @DisabledIf support for JUnit Jupiter
Support ResponseStatusException in ServerResponse
updaten new in 3
Drop JpaSystemException(PersistenceException) constructor to avoid ambiguity in HibernateJpaVendorAdapter
ResponseEntityResultHandler overwrites headers
Upgrade copyright
Polish CorsConfigurationTests
AbstractMarshaller uses general exception message in extracted buildDocument() method
Improve WebFlux exception logging
Polish TestNG integration tests
Add support to reference external HandlerMethodArgumentResolver beans which might contain already configured instances (e.g. through a 3rd-party namespace handler).
Fix .integration-tests build path errors
Support for Servlet 4.0 (PushBuilder argument, MockServletContext)
ValidationUtils.invokeValidator assertion for non-null target object
Revised assertions and $[invocationTime] support for exceptionMessage
Fix broken javadoc link to ROME tools project
updates made during my review of beans.xml:
Fix classpaths regarding slf4j versions
Support for multi-threaded cache access
Apply Beverly's edits to mvc chapter.
Path prefixes for groups of controllers
Fixed up version
added the rest chapter to the build
SpringBeanJobFactory supports autowiring through ApplicationContext
Fixed general test suite problems found during OpenJDK 8 upgrade
Polish Javadoc in the Spring MVC Test Framework
renamed UriUtilsTest to UriUtilsTests
SPR-5327: tidy up Maven dependencies (keeping commons-logging)
Consistently throw FileNotFoundException even for NIO access
Revised InvocableHandlerMethod exception handling
Publication is now automatic
Removed unused import
Add converters between Enum and Integer
Update Central POMs to 3.0.2
Moved fromServerRequest to ServerRequest itself
Introduce alias for 'value' attribute in @MatrixVariable
Another attempt to fix clover-related build failure
Polishing
Fixed test failure on CI server (classpath search failing for some reason)
Add merged RequestPostProcessor to front on merge
Polish static resource handling
added 4060 as DataAccessResourceFailure code for MS-SQL (SPR-5788)
Fix failing test
Improve documentation of SpringFactoriesLoader
Remove temporary workaround for reactor-netty client
Configuration classes can opt into lite mode (proxyBeanMethods=false)
Next Development Version
EntityManagerFactoryUtils finds default EntityManagerFactory in parent contexts as well
RESOLVED - issue SPR-4661: Improve context-property-placeholder configurablity 
Add a missing `@throws` in Javadoc
Support STOMP in addition to CONNECT frame
Refine compareTo for param and header conditions
Next Development Version
Fix default content-type for ResourceRegion HTTP responses
Polish "Refactor iterator of Map with Java8's Map.forEach"
Fix GenericConversionService search algorithm
SPR-6460 Added "phase" attribute to the JMS namespace's "jca-listener-container" element.
Polishing
Polish methods to register async interceptors
Enhance view controller MVC config
Expression javadoc alignment
Polishing
SPR-7404: Fixed metadata
Efficient ISO_LOCAL_* variants for printing LocalDate/LocalTime/LocalDateTime
Resource handling support for Spring Web Reactive
Fix compiler error
@Transactional in AspectJ mode works with CallbackPreferringPlatformTransactionManager (WebSphere) as well
Next development version
Polishing
Added test using custom properties file with util:properties and dereferenced with @Value("#{...}")
Remove obsolete taglibs dependency from webmvc pom
SimpleAliasRegistry fully synchronizes registerAlias and removeAlias
Unit tests for AsyncResult callback behavior
Switch defaults and model for logging sensitive data
AbstractAutoProxyCreator and AbstractAdvisingBeanPostProcessor consistently not considering configuration callbacks and internal language interfaces as reasonable proxy interfaces
Revisit Assert to avoid single-arg assert methods (with refined messages)
SPR-4359 the 'scheduling' namespace is now 'concurrent'
Introduce base class for ResponseBodyResultHandler
Avoid hard reference to org.xnio.StreamConnection through reflection
RequiredAnnotationBeanPostProcessor skips factory-bean definitions
storing type information as specified (SPR-5556, SPR-5562); explicit XML array element in spring-beans-3.0.xsd (SPR-5543)
Renamed ShortcutTests to SimplePropertyNamespaceHandlerTests
Preparations for 3.2 GA
Fix MockCookie parsing when attribute is omitted
[SPR-6124] Verified that timed transactional tests fail with the TestNG integration in the TestContext framework.
Fix copy+paste error
Polish "Use Java 8 forEach method on Map"
Add baseUrl to DefaultUriTemplateHandler
Remove unintended changes from last commit
Add session attributes to SimpMessageHeaderAccessor
Polishing
results of code review of mvc namespace
[SPR-8240] Introduced new "Context management with @Configuration classes" section; fleshing out sections on context configuration inheritance and context caching.
Polish Javadoc for TestContextBootstrapper
SPR-3709
Add ReactorResourceFactory
Expose JMS message listener container ids
Discontinue use of deprecated AssertThrows
SPR-7858
Optimize for Flux to/from Mono conversions
JtaTransactionManager explicitly resets transaction timeout after completion
Polish
Suppress deprecation warning in HtmlUnitRequestBuilderTests
Polish
Fix broken links in ref docs
fixed MethodInvokingJobDetailFactoryBean for compatibility with Quartz 2.0/2.1 ()
updated aspectj weaver version in .classpath files to match ivy.xml configuration
Update readme.txt with current links
Customize QosSettings for JMS replies
maven central joda-time artifact
DefaultListableBeanFactory etc
Allow configuring WebSocket message size in a session
Support text/xml and application/*+xml in Jackson XML message converter
Parse correctly ContentDisposition header with semicolons
Polish test code
Add tests for Jackson @JSONView when using XML serialization
Add weak ETag support in ShallowEtagHeaderFilter
Handle non-void write methods deterministically
Merge branch '3.2.x' into cleanup-3.2.x
catch ConversionException and ConvertedNotFoundException in BeanWrapper's convertIfNecessary as well, in order to support constructor resolution (SPR-6563)
AbstractFileResolvingResource uses extractArchiveURL for last-modified check
overhaul of support package arrangements for handler method processing; added missing package-info files
Remove TODOs (replaced with JIRA tickets)
Fix minor issue in ExchangeResult
Upgrade to Hibernate Validator 4.2.0.Final
Add doc & tests to Jaxb2XmlEncoder for collections
convert polishing: removed checked exception from Converter interface to support direct use, added Converter to each implementation for consistency
SPR-7604 - Support multiple embedded databases.
Make UriComponentsBuilder.fromOriginHeader() IPv6 compliant
Defensively access deprecated AbstractHttpClient class from Apache HttpComponents
Improve allowNullValue handling when a null value is provided
[SPR-8627] Deprecated @ExpectedException.
Add STOMP subscribe/unscubscribe ApplicationContext events
Add methods to prepend WebFilter + WebExceptionHandler
further post-GA fixes
Add equals/hashcode to FlashMap
NumberUtils consistently raises overflow exception for BigInteger/BigDecimal input
Fixed javadoc warnings
Add setter for defaultPersistenceUnitRootLocation
Consistent deprecation markers on JDK 9
Several enhancements with respect to CachingMetadataReaderFactory handling.
Explicit HEAD sorted higher than implicit one
Polishing
Consistent to/cc/bcc array handling and revised hashCode without text
Limit auto grow collection size when using SpEL
Fix lines over 120 characters
Allow MvcUriComponentsBuilder instance with baseUrl
Polishing
Use AtomicInteger instead of local synchronization around int field
Updated documentation to point out that AnnotationConfigWebApplicationContext can accept both fully-qualified class names as well as base packages to the contextConfigLocation init-param.
Upgrade to Gradle 2.10
Investigate claims made in SPR-9051 regarding transactional tests
Shared custom argument resolvers
Fixed example in JavaDoc.
Add ExceptionHandlerSupport class
Consistent use of varargs plus related polishing
fail when @DateTimeFormat is being used without JodaTime on the classpath (SPR-6508)
Support access to all URI vars via @PathVariable Map
Refine PathContainer.Segment value representation
Favor 'local' annotations over inherited ones
Polish MockMvc setup classes
Deprecated getPropertyAsClass and refined PropertySourcesPropertyResolver's logging
Allow to set response status on Undertow
Add pathPrefix predicate
StandardScriptEvaluator uses same eval exception exposure as ScriptTemplateView
EventListenerMethodProcessor accepts internal configuration classes
Fix typo in classpath scanning reference doc
Added strict compare mode for Json
SPR-8533
fixed typo (SPR-6967)
BeanFactoryAnnotationUtils searches on bean implementation classes and meta-annotations as well
Upgrade to ASM master (7.0 beta) and CGLIB 3.2.8
Joda/DateTimeFormatterRegistrar also supports YearMonth and MonthDay
ResponseEntity provides static "unprocessableEntity()" convenience method as well
Prevent instantiation of NamedParameterBatchUpdateUtils
added svn:externals dependency on example.aspects from org.springframework.aop
Fix broken links in JavaDoc
SPR-6205: Added doc on  annotation support for multiple transaction managers
Polishing
moving unit tests from .testsuite -> .aop
Merge pull request #702 from aantono/master
[SPR-8222] Upgraded to JUnit 4.9.
Polish
finnished updating code examples with generics/varargs for jdbc chapter
Set virtualHost on StompBrokerRelayRegistration
SPR-6464 Drop @FlashAttributes, add ResponseContext, ViewResponse, and RedirectResponse types for annotated controllers to use to prepare a redirect response with flash attributes; Add FlashMap and FlashMapManager and update DispatcherServlet to discover and invoke the FlashMapManager.
SpringHandlerInstantiator supports all HandlerInstantiator-provided factory methods
Consistent ".jetty" and ".standard" subpackages; consolidated GlassFishRequestUpgradeStrategy implementation; renamed Text/BinaryWebSocketHandler and moved them to web.socket.support
Remove unnecessary assertion
AntPathMatcher actually throws IllegalArgumentException if patterns cannot be combined
Add CorsWebFilter
Upgrade to ASM 7.0 beta release
Preparations for JDK 9
Polishing
Use SimpleAsyncTaskExecutor in WebSocketClient impls
Change version of Hibernate Validator to 4.0.2 in pom.xml and eclipse .classpath to agree with version in ivy.xml
Merge branch '5.1.x'
Update whats new in Spring 3.2
Return SslInfo only if X509Certificate[] present
Polish
Implement toString() for synthesized annotations
FilePart and MultipartFile provide transferTo(Path) variant
Add beforeConcurrentHandling support
Reintroducing deprecated addConstructorArg variant
Polishing
MethodMetadata exposes method return type
Clean up spring-context-support tests warnings
WebTestClient assert response body with Consumer<B>
Fix issue with parsing x-forwarded-host header
Add WebSocketTransportRegistration
CharacterEditor uses Character.valueOf(char) and throws a more descriptive exception
added javax validation, hibernate, and vfs dependencies into eclipse
GenericFilterBean lazily initializes its default environment
Add empty location check to ResourceHttpRequestHandler
lenientConstructorResolution flag applies to factory methods as well
integration build with Reactor Core 2.5.0.M2
Introduce JettyResourceFactory
Introduce CommandLinePropertySource and impls
Added TestContext framework changes to the change log.
Preparations for 3.2.2
Polishing
Re-introduced custom StaxSource and StaxResult for Spring Web Services
Relax constraints in MessageHeaders for subclasses
MutablePropertySources uses an internal CopyOnWriteArrayList for defensiveness against concurrent modifications
Refactor iterator of Map with Java8's Map.forEach
Rename RequestMapping types for concision
Defer evaluation of right-hand route in composed route
Spring Expression Language docs
Support classes AND locations in @ContextConfiguration
Enable trailing slash matching by default
ServletContextResourcePatternResolver uses encoded jar file location for UrlResource
Moved REST Etag filter to MVC chapter
fixed @Value injection to correctly cache temporary null results for non-singleton beans (SPR-7614)
Add ResponseStatusException
Add more @Nullable parameters based on null usage
Add test to ensure ForwardedHeaderFilter contextPath preserves encoding
spring-jcl provides NoOpLog and SimpleLog as well
Polish X-Forwarded-Prefix handling
Polish "Add profile expression support"
LiveBeansView does not rely on application contexts order anymore
Polishing
Fix issue with use of SecureRandom for id generation
Polishing
Polish Javadoc for AopUtils, Advised, & related classes
SPR-4724
Add CachingResourceResolver
updating eclipse settings and classpaths
Polish test classes
Add missing @param
Add support for Ping and Pong WebSocket messages
Support ApplicationContextInitializers in the TCF
Fix handling of empty payload Pong message on Jetty
Auto-detect Kotlin Jackson module
Introduced SockJsSession interface and moved SockJsSessionFactory and SockJsServiceConfig to sockjs.transport; added initialize(SockJsServiceConfig) method to TransportHandler interface; extracted TransportHandlingSockJsService from DefaultSockJsService; moved sockjs.support.frame to sockjs.frame and extracted (Default)SockJsFrameFormat from SockJsFrame; moved SockJsHttpRequestHandler to sockjs.support; removed Jackson 1.x support
+ Added necessary JPA dependencies to make Petclinic JUnit tests pass
Add support for Objenesis proxy creation.
Leverage RFC_1123_DATE_TIME formatter in tests
switched to use XInclude
BackOff abstraction lives in util.backoff subpackage now
Expose remoteAddress from ServerHttpRequest
Polish doc
checkConfigurationClassCandidate explicitly skips factory method definitions
SPR-7609 - Fixed typos in JMS documentation.
DelegatingFilterProxy autodetects a unique DispatcherServlet context
Polishing
Make MediaType serializable
SPR-7608 Add several sections to the reference docs on working with the @ModelAttribute annotation. Specifically the goal was to cover the abitlity for an @ModelAttribute argument to be instantiated from a URI template variable with the help of a Converter or a PropertyEditor.
Polish Javadoc for NoSuchBeanDefinitionException
MessagingExceptionTranslator lives in support subpackage now
ResourceHttpMessageConverter allows for using InputStreamResource
Move MessageChannel fields up to AbstractMessageBroker
Improve Javadoc for Ordered/@Order regarding sort semantics
Fix SubProtocolHandler duplicate registration
Rename duplicate EnvironmentIntegrationTests to EnvironmentSystemIntegrationTests
Polish Javadoc and log messages for embedded databases
Add basic support for @RequestMapping
Polishing
Fix typo and polish formatting
Handle absolute URI in Reactor request.uri()
Polishing
UriComponentsBuilder supports query without value
Polishing
Tightened StringValueResolver contract
Merge branch '5.1.x'
Add WebSocketClient and WebSocketConnectionManager
Fix compile issue
SimpleAsyncTaskExecutor properly respects NO_CONCURRENCY
Re-introduce system-properties-mode to spring-context 3.1 XSD
Expose getStatusCode from ServerHttpResponse
Polishing the reference manual.
Polishing
Merge branch '5.1.x'
Merge URL Cleanup PRs
Improve JNDI detection logic
Rename DataBinderFactory subtypes for concision
Fix Javadoc typo
Avoid FactoryBean initialization on isSingleton check for decorated bean definition
ASM ClassWriter uses application ClassLoader for its getCommonSuperClass check
+ improve template for spring-context so that the import-package is updated automatically
Jackson2ObjectMapperBuilder allows for regular constructor usage as well
Polish
Added agent module
Polishing
WebTestClient polish and minor refactoring
AnnotationConfigWebApplicationContext allows for custom AnnotatedBeanDefinitionReader/ClassPathBeanDefinitionScanner
Polishing
Provide predetermined capacity for cache operation collections
initialize reactor support, not passing requestmapping tests yet
AbstractDriverBasedDataSource does not rely on Properties chaining anymore
Use an import instead of FQCN
Hamcrest methods in WebTestClient
prepared for 3.0.4 release
URL Cleanup - Fix broken tests
Correctly truncate logging of response body
UrlPathHelper cuts off trailing servlet-path slashes for root mappings (on WebSphere; SPR-7052)
Removed Spring’s own JSP expression support (in favor of JSP 2.0+)
ResourceHttpRequestHandler uses EmbeddedValueResolverAware
Restore retrieval of plain annotations through direct presence checks
Add PrincipalMessageArgumentResolver
Add AsyncHandlerMethodReturnValueHandler
JBossNativeJdbcExtractor is compatible with JBoss AS 7 as well (SPR-8957)
Polishing
Performance improvements in ShallowEtagHeaderFilter
Proper NoClassDefFoundError check against BeanUtils.instantiateClass
Fix absolute paths when transforming resources
AspectJ bean pointcut supports qualifier match
Polishing
Upgrade to Gradle 2.12
introspect element type in case of incoming Collection/Map in order to not accidentally say canConvert=true (SPR-6564)
Improve documentation for DI options in the TestContext framework
Defensively call getParameterType (which might fail for certain statements)
Fix initialization issue in ReactorResourceFactory
Provide alternative message code resolver styles
Polishing
SPR-9016 Add flag to Redirectview to disable expanding URI vars
Added JPA 2.0 compliant "sharedCacheMode" and "validationMode" properties to DefaultPersistenceUnitManager and LocalContainerEntityManagerFactoryBean
Suppress warning in DefaultDeserializer
moved async aspect to aspectj sub-package
polish
Upgrade to Netty 4.1
Polishing
Support session & request scoped beans in the TCF
SimpleClientHttpResponse catches any Exception on close
SPR-6906 - Combination of ControllerClassNameHandlerMapping and @RequestMappings with file extensions results in exception
Fixing the build that bad boy @smaldini broke
Add support for matrix variables
Update copyright date in reference manual
Use default value for empty values in @RequestParam
Polish RestTemplate exception hierarchy
Review and polish pull request #132
Add userProperties to StandardWebSocketClient
Revised isInstanceOf/isAssignable message concatenation
Fix typo
Upgrade tests to EhCache 2.10+
Up-to-date guidelines for serialization-based endpoints
Polishing
polish
Package private request and response implementations
Allow @ContextConfiguration to be omitted
Remove write pausing in Undertow response
Make @Configuration class enhancement idempotent
Refine RequestedContentTypeResolver contract
Reuse constant in DispatcherServlet
Respect <description> within <entry> per beans XSD
Respect produces condition in @ResponseBody algorithm
Fixed addConverterFactory assertion
Merge branch '5.1.x'
Polish StreamConverter(Tests)
Add hook to create custom BeanPropertyBindingResult
Revised GsonFactoryBean's configuration properties; made prettyPrinting test pass on Windows
Polish
AnnotationTypeFilter assumes no custom annotations on common Java types
Add Spring MVC Test framework
ComponentScanAnnotationParser supports multiple base packages within a single placeholder as well
Add support for suspending handler methods in WebFlux
Merge branch '3.1.x'
Revert ConversionService SPI interface
updated reference documentation now that the <executor/> and <scheduler/> element's 'size' attribute has been renamed to 'pool-size'
Polish proxy tests
Minor rewording
Provide simple way to create ServerRequest
Adapt ReactorHttpsServer to lates Reactor Netty changes
Added locale-independent "commonMessages" property to AbstractMessageSource
Introduce java.nio.file.Path based Resource
Polishing
Add PathPatternRegistry for handler mapping matching
Polishing
Fix SimpleJdbcCall and SimpleJdbcInsert Javadoc
Release version 3.2.1.RELEASE
Moved AnnotationBeanNameGenerator's String value check right before cast
Clean up warnings and polish tests
moving unit tests from .testsuite -> .context
Whitelist extension if present in the request mapping
Allow configuring custom argument types
Upgrade to Gradle 4.8
WebFlux multpart support polish + minor refactoring
Fix issue in BufferedImageHttpMessageConverter
Polish "Reuse constant in DispatcherServlet"
Update @Conditional processing logic
Retain single-arg assert methods in deprecated form
fixed link to blog entry (SPR-6691)
Explicit handling of void return values
Fix compiler warnings
Added "destroyBean(Object)" method to AutowireCapableBeanFactory
Added PathEditor for NIO file system resolution
Polishing
Find annotations on implemented generic interface methods as well
Polish Javadoc for ScriptStatementFailedException constructor
Handle Jackson InvalidDefinitionException with 5xx status in WebFlux
Add reading reactive multipart request support
LocaleContextHolder provides support for framework-level default settings
Replacing potentionally slow and infinite while loop by a latch
Drain JDK HTTP client response body in all cases
Added deprecation log message and javadoc note for Quartz 1.x support
Polish ExceptionHandler initialization
Introduced "spring.beaninfo.ignore" system property for optimized Introspector usage
Replaces rather than prepend contextPath
Allow @Cacheable method to return java.util.Optional variant of cached value
Beverly's edits reviewed.
Sync reactor-netty client response update and uncomment in tests
Polish
Refine hamcrest dependency in spring-test-mvc project
Assertion errors with request and response details
Add onDiscard hook to Jetty client request
Fix @RequestBody argument processing for null Content-Type
Polish MockRestRequestMatchers[Tests]
Changed project name from spring-binding to org.springframework.expression
Refactor WebTestClient exchange mutator support
Polishing
SPR-7002: updated .classpath and pom to reflect new dependency upgrade from Jackson 1.0.0->1.4.2
Consistent hasAnnotation check for findMergedAnnotation lookup
Add extendMessageConverters to WebMvcConfigurer
moving unit tests from .testsuite -> .beans
Use AtomicInteger instead of unsafe increment on volatile fields
Relaxed final declarations and protected doInvoke methods
Direct reference to JDK 7 AutoCloseable interface
Polish content negotiation
[SPR-7960] Renamed @ActivateProfiles to @ActiveProfiles and fleshed out JavaDoc.
Defensive containsSingleton cache guard within getObjectFromFactoryBean
Delete unused imports
Reduce scope of suppressed deprecation warnings in SpringJUnit4ClassRunner
Polish upgrade to HttpComponents 4.3
WebTestClient.mutate() should not impact future .mutate() invocations
Fix typo in reference documentation
Fixed resolveProxyTargetClass exception message
Prepend leading slash in ResourceUrlProvider
Test case for event listener methods on bean with potentially inactive scope
updated spring-library to include web.portlet in .libd and ivy files
Add HttpPutFormContentFilter note to documentation
Add backslash escape support to containsSqlScriptDelimiters
Consistent meta-annotation attributes lookup through ASM
Fix javadoc issue in ResponseEntityExceptionHandler
Introduce logging in TomcatWebSocketTestServer
Update info on RestTemplate related to 401 status code
Moved tests to context.support
Introduce alias for 'value' attribute in @Payload
Javadoc
Fix direction of arrows in request/response output
FacesRequestAttributes (as used by RequestContextHolder) can access global Portlet session (SPR-5637)
Stub out the clover target to allow successful building of snapshots
Tighten (IntroductionAware)MethodMatcher contract
Make DispacherServlet attributes protected
Request attribute cache for resolved lookupPath
Prepared for backport to 4.3.20 and 5.0.10
Polishing
Ensure NPE will not be thrown when cancelling a subscription
Jaxb2Marshaller doesn't need to depend on ResourceLoaderAware
Fix memory leak for ServerSentEventHttpMessageWriter
Merge branch '5.1.x'
Minor refactoring + polish in server reactive package
Clean up warnings and dead code in spring-webflux module
Restore order in AllEncompassingFormHttpMessageConverter
Remove XFire reference documentation (SPR-7434)
Update AsyncRestTemplate interception
Added tests for errors in the source stream
Introduce alias for 'value' attribute in @RequestHeader
ResponseStatusException reason is optional (with lazily constructed message)
Add shortcuts for Jackson mix-in annotations registration
TaskDecorator callback supported by common TaskExecutor implementations
Sensible defaults for Servlet & Filter registrations in mock
Moved tests from testsuite to web
Fix html{Encoding=>Escape} typo in spring.tld.xml
GenericTypeResolver defensively calls Class.getGenericSuperclass() and consistently uses Class<?>
JettyRequestUpgradeStrategy implements Lifecycle
HTTP OPTIONS lists all HTTP methods except TRACE
fixed numerous typos and formatting
Fixed accidental use of Java 8 getParameterCount(), plus polishing of related classes
Improve performance of some string operations
Fix typo
Consistently log Class.getName() instead of Class.toString(), avoiding double class term in log message
Polishing
Polish
Set custom handshakeHandler for XML sockjs config
Polishing
Polish URL Cleanup
WebTestClient can be configured with connector
Replace EasyMock with Mockito in spring-jms
Rework matching to use PathContainer
Improve initialization of Assume class
Use Supplier<String> support in Assert in spring-core
Parameterize ResponseBodyInterceptor on the type level
Polish test class
Add StatusResultMatchers.isEqualTo Kotlin extension
Updates to allow nightly snapshots of maven central-compatible artifacts
Javadoc fine-tuning for 4.2
Polishing
Initialize JNDI to fix failing Environment test
Servlet/Portlet ApplicationContexts use a specific id based on servlet/portlet name; DefaultListableBeanFactory references are serializable now when initialized with an id; scoped proxies are serializable now, for web scopes as well as for singleton beans; injected request/session references are serializable proxies for the current request now
Revert "Update Spring MVC Java config for ResourceResolvers"
Polishing
Polishing
Delete deprecated code in the TestContext framework
Add PropertyNamingStrategy field to ObjectMapperFB
Repackaging to remove remaining cycles and increase cohesion
updated xxx-2.5.xsd references to 3.0
Introduce concurrency tests for Spring's JUnit 4 support
Client request implementations enforce RFC 6265 (cookies in a single header)
Update reference doc for async web request config
Improve docs on enabling Servlet 3 multipart
Polishing
Find @ResponseStatus recursively on getCause()
Compatibility with XStream 1.4.5
SPR-8477
Polish Javadoc for resource-based MessageSources
Add mvc: prefix to mapping samples in ref docs
Polishing
Updated to version 3.0.3
Polish interceptor registration MVC config
Polishing
Polish XML snippets showing XSD imports
Negated produces works with no Accept header present
Fix typo
Append "data:" after line breaks for SSE JSON data fields
creating eclipse project settings for org.springframework.spring-library
Undertow-related polishing
Rename Property{SourcesProperty}ResolverTests
Enable reuse of DefaultActiveProfilesResolver
CustomizableTraceInterceptor relies on JDK 1.5+ Matcher.quoteReplacement method now
Update migration guide regarding spring-test
Minor Javadoc fix
Add trailing / to repository URLs on S3 (improves build time for clients)
content-length support in EncoderHttpMessageWriter
Fixed URLs in import-into-eclipse scripts
Documentation cleanup.
Polish form writer and converter
Remove isLast flag from WebSocketMessage
Explicit support for retrieving enum values
Polish "Refact iterator of Map with Java 8 forEach"
Suppress deprecation warning for MHSR.setStatus()
Polishing
Resolve build script plugins via http vs https
Expose all HttpResource header values (even if commonly not multi-value)
Polish documentation on HTTP date formats
Rolled-back accidental .classpath changes
Consider negative contentLength() result as not resolvable
Polishing
Polish
StandardServletAsyncWebRequest handling for onError
Polishing
Document why "charset=UTF-8" is specified for JSON
Polish ViewResolversBeanDefinitionParser
update STOMP support to reactor-netty 0.6
Update MessageConverter and reactor dependencies
Fix empty body writing in EncoderHttpMessageWriter
Add SimpUserRegistry with multi-server support
Introduced "jsonPrefix" bean property
Fix race when flushing messages
Polishing
HttpEntityMethodProcessor supports custom HttpEntity subclasses again
Unit test with assertion for merged query params
Fix checkstyle violations
Unit test for JavaBeans introspection against FreeMarker Configuration class
@Import'ed configuration classes get properly registered in case of same class name
AbstractInterceptorDrivenBeanDefinitionDecorator exposes decorated BeanDefinition for early type checking in AbstractBeanFactory (SPR-7006)
Upgrade to Gradle 1.0-rc-3
Support null query param values in HtmlUnitRequestBuilder
Introduce RouterFunction visitor
moved the application context file to correct directory (SPR-3987)
Javadoc references for resetBeanDefinition
Test with all-negated profile condition
Update WebTestClient builder
Polishing
Allow for shared Objenesis caching in ObjenesisCglibAopProxy
DataSourceTransactionManager triggers flush callbacks on registered transaction synchronizations
Fine-tune WebFlux logging at HTTP/WebSocket level
MessageConversionException offers constructor without cause argument now, plus related polishing
Exposes maxFramePayloadLength for Reactor Netty
Revise "streaming" MediaType support
Call type aware canWrite() when using a GenericHttpMessageConverter
Resolved package tangle in spring-expression
Improve DEBUG/TRACE logging for Spring MVC
SPR-8676 Fix minor issue in how ServletServletHttpRequest detects form content-type requests
fixed JExcel example code (SPR-7277)
MessageBuilder avoids intermediate HashMap for MessageHeaders building
Polish Javadoc for MVC exception handling classes
Minor fixes: UriComponentsBuilder, UriComponents, docs
Relax handler supports checks in RequestMappingHandlerAdapter
fix compile test issue
Assert XML without considering order in XmlExpectationsHelper
Polishing
AbstractXlsView does not explicitly flush (for compatibility with WebSphere Liberty)
Delegate sendMessage
Null-returning instance supplier resolves to NullBean
Develop a gradle plugin to add test dependencies
Change MethodNotAllowedException to use HttpMethod
[SPR-7960][SPR-8386] Supporting declarative configuration of bean definition profiles in the TestContext framework:
AntPathMatcher allows for case-insensitive matching
Expose timeToFirstMessage in Java/XML config
Refer to statement numbers in ScriptStatementFailedException
updated for extended RC2 period
[SPR-5699] Investigating issues surrounding automatic flushing of the underlying ORM tool's session via TransactionalTestExecutionListener.
Polishing
Pre-size LinkedHashSet for annotation parsers
finished moving .ejb.* unit tests from .testsuite -> .context
OkHttpClientHttpRequestFactory allows POST request without body
Polishing
StringUtils.parseLocaleString parses variant correctly when variant contains country code
MockRestServiceServer test for follow-up request after failure
SPR-8592: add SpEL support in <jdbc:/>
Relax type check in FormHttpMessage(Reader|Writer)
Post SPR-8804 optimizations: better use of HC 4.3 APIs
Support Quartz trigger without JobDetail
Consistent use of Mediatype in EncoderHttpMessageWriter
Polishing
Fix javadoc syntax
prepared for 3.1 RC2
Updated Encoder and Decoder to use DataBuffer
rearranged content in "New in Spring 3.0"
Add TCP abstractions to spring-messaging
Allow same-origin WebSocket/SockJS requests once origin is set
SPR-15481 Fixed AnnotationUtils.getValue() operation
Remove synchronized block around WebSocketSession.send
SPR-7308
revised web scoping tests
Customize concurrency at listener level
Petclinic seems to work
Add handleFailure property to FrameworkServlet
Polishing
Support ETags with special chars in ServletWebRequest
Drop unnecessary modifiers for constants in JmsHeaders interface
Simplify String concatenation
Test ASM5's bytecode parsing of INVOKESPECIAL/STATIC on interfaces
More defensive check for MockAsyncContext
Move init of excchangeStrategies to default ctor in DefaultWebClientBuilder
Change SpEL equality operators to use .equals
Allow setting SockJsMessageCodec in WebSocket config
Add TEMPLATE_AND_VALUES mode to DefaultUriBuilderFactory
Add Spring Framework integration with Tiles 3
WebHttpHandlerBuilder retains ApplicationContext in copy constructor
Allow null values to be cached with `@CacheResult`
Introduce ConfigurableWebEnvironment
Replace test beans with test objects
change javax.el revision to be 1.0 to be consistent across the project.
Polishing
SPR-8803 Refine UriComponentsBuilder.replaceQueryParam().
AsyncAnnotationBeanPostProcessor leniently handles ambiguous TaskExecutor beans
Polish ReactorNettyTcpClient
Polish Javadoc in Spring MVC async support
Consistent use of <pre class="code">
Refactor and polish spring-messaging
Polishing the MVC sections of the reference manual.
Introduce EntityResponse
Polishing (including removal of javadoc imports that show as package cycles in IntelliJ)
Raised Hibernate Validator support dependency to 4.3+
Upgrade spring-websocket to Jetty 9.0.4
Merge branch '5.1.x'
Fix Spring MVC ScriptTemplateView locale support
CglibAopProxy skips method proxy for equals/hashCode/toString override
Support transitive implicit attribute aliases with @AliasFor
Simplify determination of SockJS path
Next Development Version
Fix escaping of #
Add missing section ids in reference documentation
Switch master to 5.2.0.BUILD-SNAPSHOT
Add WebSocketSession attributes + initialization
Polish Javadoc in SimpleApplicationEventMulticaster
Merge branch '5.1.x'
Respect async request timeout of -1 in MockMvc
Polishing
polish
Update pom and .classpath to reflect Castor upgrade
Include all SQL statements in batch fail exception
SimpleAliasRegistry.hasAlias properly resolves multiple chained aliases
ASM ClassReader leniently handles label offset mismatch (again)
Update mvc chapter on annotations and proxies
Add setBearerAuth method
Disable ext entities in SourceHttpMessageConverter
Improve MessageMethodArgumentResolver
Add MessageCodesResolver hook to WebMvcConfigurer
Polishing
Polishing
Polishing wording regarding JUnit Platform and JUnit Jupiter
Deprecate support classes for Sun's JDK HTTP server
Add Qualified element on RootBeanDefinition
Fix Javadoc warnings
updated Tiles support for Tiles 2.1 compatibility (SPR-5411)
Fix condition in SubProtocolWebSocketHandler
Reformat the testing chapter
Polishing
Rearranged field order in RootBeanDefinition
Polish @CrossOrigin
Polishing
Drop Portlet MVC support
Clarify RequestMappingHandlerAdapter javadoc
Polishing
Consistent Map<String, ?> declarations and use of LinkedHashMap for incoming JDBC operation parameters
Strong references to mapped exception handler methods
Fragment should be expanded last
Resource refinements, etc
Upgrade to JUnit 4.11
Revert "Next development version"
Fix error when writing empty String to DataBuffer
Clean up deprecation warnings in spring-web
Support String contentType headers in spring-messaging
Remove xsd versions from reference samples
OrderUtils.getPriority uses AnnotationUtils.findAnnotation for consistent lookup rules and diagnostics
Support TransactionManagementConfigurer in the TCF
moving unit tests from .testsuite -> .aop
Polish contribution
Polish Javadoc for application event infrastructure
[SPR-5993] Fixed notice file
Use snapshot instead of libs-snapshot repository
BasicAuthenticationInterceptor with HttpHeaders.setBasicAuth alignment
Support XML config fully in web integration tests
Polishing
Polish Jetty reactive HttpClient connector
Polish
Resolve ResourceUrlProvider from current request
Ensure code compiles with Eclipse JDT
Polish ObjectToStringHttpMessageConverter
Fix grammar in JavaDoc for fully qualified links
AsyncRestTemplate and FutureAdapter consistently throw ExecutionException
Polishing
numerous binding enhancements; removed lazy binding for time being
Protect against RFD exploits
Added "createTemporaryLob" flag to DefaultLobHandler, using JDBC 4.0's createBlob/Clob mechanism
MBeanExporter implements newly introduced SmartInitializingSingleton callback interface
Add missing word to JavaDoc
Polish: anonymous inner classes containing only one method should become lambdas,
cleaning up .testsuite
Supply body for POST/PUT/PATCH tests (for OkHttp 2.4 compatibility)
Initialize ResourceUrlProvider only once
Polishing
Remove Guava cache support
Refactor SQL script support
Fix for ASM issue 317555
don't assert that CGLIB must be present unless there is at least one @Configuration class found
RESOLVED - issue SPR-6038: HSQLDB+Quarz using data source causes "Unexpected token: FOR in statement " exception 
Clean up warnings in spring-web tests
Introduce base exception class for arg resolution
Polish capitalisation of units on DataSize and javadoc of DataUnit
Rename EnvironmentTests => StandardEnvironmentTests
Merge branch '5.1.x'
Support target type in JsonPath assertions for MockMvc results
polishing
Polishing
Removed parsing support for the 'singleton' attribute in an XML bean definition
Revert change to support {/...} var syntax
Add WebSocket scope
SPR-7537 - Document proxying for MVC controllers
Leverage Java reflection for Kotlin enums
ReaderEditor supports Reader injection analogous to InputStreamEditor (from Spring resource location)
Adjust SockJS scheduler core pool size
Fix X-Forwarded-* behavior in ServletUriComponentsBuilder
Support custom resolution of response destination
Handle non-existent files in ServletContextResource
Added testsuite, as one project for now. Will move individual tests to respective modules later
Deprecate TableMetaDataContext.getSimulationQueryForGetGeneratedKey
Make SpringFactoriesLoader.loadFactoryNames public
Support Validation in @MessageMapping annotated methods
Centralize license, notice, etc in src/dist
Align UriComponents.toUri() with toUriString()
deprecated TopLinkJpaDialect, etc
Polish
Add ServerHttpRequest & ServerHttpResponse
Clean up regarding deprecated HttpStatus.MOVED_TEMPORARILY
Move 500 error handling to HttpWebHandlerAdapter
Polishing
Polish WebHttpHandlerBuilder
Apply Beverly's edits to mvc chapter.
Add MessageMethodArumentResolver
Introduce mime/media types for application/rss+xml
SPR-5628 Add HttpPutFormContentFilter in order to make form encoded data available via ServletRequest.getParameter*()
Introduce @TestPropertySource support in the TCF
Replace space indentation with tabs
Polishing
Set path in CookieWebSessionIdResolver
SerializableTypeWrapper detects Graal through system property as well
Consistent hasText checks for CharSequence vs String
OpenJDK 8 build 99: annotation discovery on bridge methods
Add MultipartBodyBuilder
Added 546 to Sybase data integrity violation codes
Introduce alias for 'value' attribute in @Scope
Support for decoding @RequestPart content
+ moving .aop.aspectj.* unit tests from .testsuite -> .context
removed outdated dependency on standard taglib (SPR-6099)
Polish
Polishing
Fix bugs in ReflectionTestUtils related to proxies
Polish support for publishing TestContext lifecycle events
fixed JPA multi-unit setup example (SPR-6781)
Reverse SPR-10402 change that caused 3.2.3 regression
Fixed detection of setter in case of getter with covariant return type narrowing
Support @Configuration as meta-annotation in the TCF
Support i18n and nested templates in ScriptTemplateView
Clarify BeanPostProcessor ordering rules in ref doc
WebFlux supporst HttpHeaders return values
Deprecated FormTag's "commandName" in favor of "modelAttribute"
Translate SQLTimeoutException to QueryTimeoutException
Generate eclipse project settings from gradle
used specific SLF4J versions for running the test suites of individual modules (fixing the Hibernate Validator 4.2 upgrade)
Restore AbstractPropertyAccessor
Add IPv6 support in RestTemplate
Polish
Fix broken Javadoc related to `<` and `>`
Let Jetty pick its own available port
Removed ci.build=true
Stop using deprecated junit.framework.Assert class
Top-level main.css for all asciidoctor styles
polish
Update HttpHeaders.getAccept method
Improve support for @Conditional on @Configuration
Well-known names for beans in message broker XML config
embedded database support initial commit; moved from spring-test; ResourceDatabasePopulator duplicate code with test.jdbc package that needs review
Chain exception cause on create failure
Consistent use of JDK 7 StandardCharsets over Charset.forName
Polishing
Introduce AbstractMockMvcBuilder class
Consistently remove forwarded headers in WebFlux
Fold spring-test-mvc sources into spring-test
Better use of key iterator
fixed Eclipse classpath file
Merge branch '5.1.x'
Update Javadoc for mocks regarding Servlet 3.0
Allow binding=false on @ModelAttribute
Improve transaction management for @Sql scripts
Properly expand URI vars with regex
Improved reactive type descriptor support
+ Renamed Scopes -> StandardScopes
Merge branch '5.1.x'
Merge branch '5.1.x'
Move spring-web-reactive classes to spring-core
Merge branch '5.1.x'
SPR-6347: guidance on when to use getValue(rootObject) vs getValue(evaluationContext)
updated testing chapter of ref guide
Downgraded to JSP 2.0.0
Resolve nested placeholders via PropertyResolver
moving unit tests from .testsuite -> .beans
SmartLifecycle default methods for auto-startup in default phase
Do not consider all @Components as configuration
[SPR-7849] fixed link to Goals section and updated EasyMock description.
cleaned up transaction chapter
Polish Javadoc for DefaultContentTypeResolver
Suppress serialization warning
Add a compiler for SpEL
Move modules to independent build files
Project now builds in Eclipse: added org.codehaus.jackson JARs and sorted classpath entries.
Remove assertion making locations mandatory
Polishing
fixed typos
Use Map#forEach instead of Map#entrySet#forEach
link to validation section
Upgrade to Gradle 4.10.3
From static to instance-based PathContainer#subPath
Upgrade to TestNG 6.9.12
Verify custom MIME type support in MockServletContext
Add ExecutorChannelInterceptor
Correctly delegate to OrderUtils.getPriority for DecoratingProxy
Update remoting chapter (minor)
prepared for 3.0 GA release
Delete unused imports in spring-websocket module
Polishing
Fix OutOfBoundsExceptio in ResourceUrlEncodingFilter
Fix checkstyle errors
Include license.txt and notice.txt in module JARs
JPA/Hibernate docs: transaction management, JTA setup
SPR-6646
Only attempt to call joinTransaction in case of actual transaction active
Decode target parameter names prior to saving a FlashMap
Upgrade to RSocket 0.12.1-RC3-SNAPSHOT
final preparations for 3.0.4 release
Polishing
ServletWebRequest.checkNotModified avoids HttpServletResponse.getHeader calls on Servlet 2.5
Polishing
Update copyright header
Fold DefaultWebSession within InMemoryWebSessionStore
[SPR-8240] cleaned up and formatted the testing chapter.
Add support for autowiring Jackson handlers
Upgrade build to Gradle 2.14
Add test case based on SPR-16615
Restore serializability of HttpStatusCodeException
add spring-parent to list of bundles and see if it gets published to maven-central 
Remove contentDispositionFormData with charset method
SPR-5429 Update Pet Clinic to use HSQL as an embedded database
Merge branch '3.2.x' into master
Update Javadoc for SqlScriptsTestExecutionListener
Update JdbcTestUtils re: deprecated queryForInt()
Nullability fine-tuning and related polishing
Allow to customize TestDispatcherServlet
Minimize reflective interaction with annotation instances during retrieval
Improve HttpSessionHandshakeInterceptor
Fix Class isAssignableFrom checks for Resource conversion
SPR-2946 - Corrected documentation for lazy-init behaviour on Bean(Factory)PostProcessors.
URL Cleanup - remove obsolete ATOM schema location
Add messaging.simp.user package
Polishing
pom maintenance - changes needed to run inside eclipse via m2eclipse
Update docs to use of @Bean inside a @Component
Better synchronization in ConcurrentMapCache
refined fix so that XStreamMarshaller does not wrap IllegalArgumentException
Separate factory method cache for introspection purposes
OverflowStrategy in ConcurrentWebSocketSessionDecorator
Removed iBATIS SQL Maps support
Add EndpointRequestUpgradeStrategy
Based on fix in core for SPR-13876
Improve explanation re DAOs and persistence resources (SPR-7339)
Polish
Deprecate addCache
Close InputStream in ResourceHttpMessageConverter
Extract protected method in AbstractRequestLoggingFilter
Add body(Object) method to ServerResponse.BodyBuilder
Clean up console output for spring-beans tests
Polishing
Move MockCookie parsing tests to correct class
@Bean processing explicitly ignores bridge methods (for method overrides with return type narrowing on JDK 8)
Run reactive integration tests only as part of performance group
Extract HandlerTypePredicate from ControllerAdviceBean
Revised newline handling tests pass on Windows now
+ add cache aspectj aspect
TestDispatcherServlet unwraps to find mock request
Avoid NPE in ObjectToObjectConverter
SPR-8234 Argument resolver and return value handler configuration improvements
fix typo
Polish
Overloaded methods with java.time.Instant/Duration parameters
Introduce ResourcePropertySource
Only require an exception CacheResolver if necessary
relaxed test conditions
DispatcherHandler orders HandlerMappings correctly again
Fix typo in Java doc
Add allowHeader property to WebContentGenerator
Add HandshakeInterceptor
Consistent support for EnumSet subclasses in CollectionFactory
Remove outdated link in documentation
Lazy resolution of the JMS message
Make @ResponseBody method return type available for message converters
Clean up generics warnings in spring-oxm tests
Delete unused imports
CorsFilter asserts presence of CorsConfigurationSource
Differentiate internal LogAdapter from core.log.LogDelegateFactory
Introduce getAliasedString() in AnnotationAttributes
ResponseStatusExceptionHandler in web.server.handler (plus related polishing)
Use List<T> instead of Supplier<Stream<T>>
Added cron expression validation method for CronSequenceGenerator
Refine BeanPostProcessorChecker condition
Stop referencing deprecated @TransactionConfiguration in Javadoc
Leverage Jackson non-blocking parser
moving remoting.*, scheduling.* unit tests from .testsuite -> .context, .web
updte hibernate dependencies in integration-test project to same as 
Merge pull request #1285 from dreis2211/SPR-15094
Remove Content-Length response header from errors
Polish
Fixed "of the Spring" text and reformatted.
Put CacheControl.empty() in else part.
Add Javadoc for main interfaces/classes
Avoid unnecessary GenericHttpMessageConverter re-declaration
Add ConcurrentModel
ObjectToObjectConverter caches detected methods/constructors
Release version 3.2.0.M2
Call complete() on MockAsyncContext after dispatch
@AliasFor attribute name defaults to declaring attribute
Log unresolved exceptions at error level
Expose request in WebClientResponseException
Unwrap CompletionException in return value handler
Refined caching of AntPathStringMatcher per pattern
Polishing
Check HTTP method before raising 415

JndiPropertySource defensively skips invalid JNDI lookup for property name with colon in resource-ref mode
Fix concurrency issue in DefaultSubscriptionRegistry
Set ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE in DefaultMockMvcBuilder
Make MultipartResolutionDelegate final (aligned with other delegates)
use StringBuilder for complex string concatenation
Improve expired session check algorithm
Re-enable Hibernate EntityManagerFactory tests
WebAsyncUtils avoids reflection for creating StandardServletAsyncWebRequest
moving unit tests from .testsuite -> .aop
Revise method and parameter names in annotation support
Update information on WebApplicationContext hierarchy
Ensure matching user destination returned
Add WebFlux support for Smile streaming
Polishing the reference manual.
Use random id for WebSocket sessions
Polishing
fixed TilesConfigurer's init-param handling; added simple bootstrap test for Tiles (SPR-6606)
Allow to specify request body type in RestTemplate
- Merged server-side REST into MVC chapter
fixed typo (SPR-6748)
Polish Testing chapter regarding @Commit
Revised javadoc for up-to-date constructor autowiring semantics
Polish
Removed "target" entry from gitignore, allowing to commit changes to the "org.springframework.aop.target" package
Polish DefaultUrlTemplateHandler
SPR-8483 Add integration test for accessing multipart request parts with @RequestPart
Include ServletTEL in abstract base test classes
Upgrade to Coroutines 1.2.0-alpha
Refactor HttpHeaders "Accept-Language" with Locale
Fix DeferredResult typo in changelog
Prevent non public bean to be exposed to JMX
SPR-6525: avoid need to use #root for method parameter references
Ensure LineNumberReader is always closed
Polish tests
Polish reactive CORS support
Remove extraneous asterisk
ApplicationContext-based HttpHandler setup
Fix AntPathMatcher rule for combining with extensions
Polishing
moving unit tests from .testsuite -> .aop
+ add docs
Next Development Version
updated to JRuby 1.2 and Hessian 3.2.1
Add "result" package under ~.web.reactive
Initial commit
Consistent detection of meta-annotation attributes via ASM
Add 'Migrating to Spring Framework 3.2' appendix
Polish "simple" handler support
Avoid regex pattern matching for simple String replacement steps
Refactor WebTestClient consumeWith methods
Improve suffix pattern check
Honour ErrorHandler if `Cache.put` fails
Poish asciidoctor
Avoid argument resolution overhead for no-arg factory methods
EL container integration; support for contextual objects; removal of deprecated Spring 2.0 functionality; Java 5 code style
Fix documentation typo
ReflectiveMethodResolver applies useDistance mode by default (with fine-tuned varargs handling)
Remove field no longer used after previous commit
HibernateExceptionTranslator avoids JPA IllegalState/ArgumentException translation
Polish cache javadoc
Merge branch '5.1.x'
ConcurrentModel.addAttribute(String, Object) ignores null value
Support non thread-safe ScriptEngine in ScriptTemplateView
Add deleteFromTableWhere() to base classes in TCF
Update Javadoc for supported JBoss VFS version
Polish Javadoc for embedded database support
Provide support for publishing TestContext lifecycle events
Fix Jackson builder modulesToInstall override behavior
prepared for 3.0 M2 release
Refactor PropertyResolver impl for consistency
MBeanExporter implements DisposableBean again (also revised logging and rearranged properties)
POM maintenance
Rename default to testCache in Cache related tests
Fix JUnit version in spring-parent pom
Prefer Collections.addAll call with array over Set.addAll(Arrays.asList)
Add EnableWebReactive + WebReactiveConfigurer
SPR-6819
Register EventPublishingTestExecutionListener by default (round 2)
Avoid inifinite recursion in UndertowServerHttpResponse
polish
Change groovy dependency to 1.6.3 to match ANT/ivy
Support custom HTTP verbs in Spring MVC Test
Upgrade to JMS 2.0 and JCA 1.7
updated version for the 3.0 final release
preparations for 3.0.2
ScheduledAnnotationBeanPostProcessor properly registers multiple tasks per bean
Polishing
Polish EncoderHttpMessageWriter
Fixed MockMvc example code
Introduced DemandCounter
Add range requests support in ResourceWebHandler
Revert merged support for @ManagedNotification & @ManagedOperationParameter
Use FormHttpMessageReader by default in ServerCodecConfigurer
Applied and reviewed Beverly's final edits up to section "beans-factory-scopes"
Add template rendering support
Rename @SubscribeEvent to @SubscribeMapping
Remove String#toCharArray from ScriptUtils
Support Groovy scripts in the TCF
polish
Polish JavaDoc for JCache support
BeanPropertyRowMapper logs in case of no corresponding property as well
Resolved comments from review
Abstract(Stax)XMLReader recognizes standard features as not supported
Add @JsonView deserialization support for request bodies
Consistent use of AvailableSettings instead of Environment
Servlet 3.1 support cleanup
Moved tests from testsuite to orm
Change version from 3.0.0.M3 to 3.0.0.BUILD-SNAPSHOT  (again)
Consistently return empty array in case of empty batch arguments
Update xmlunit library to version 2.1.0
Upgrade reference docs to DocBook 5
Initial cut of Servlet 3.0 based async support
Decode target parameters prior to saving a FlashMap
Polish
Add HTTP status to ServletRequestHandledEvent
Polishing
Upgrade to gradle 2.2.1
SPR-7116 - Simplified (removed gzip and white-listing) and completed XML namespace config.
Upgrade javax.servlet dependency to 3.0 for .web
Spring's ROME support requires ROME 1.5 (com.rometools.rome) now
Fix AntPathMatcher multiple segments matching
SPR-6180 - Upgrade Apache HttpClient to version 4.0
JtaTransactionManager relies on presence of JTA 1.1 API
Conditionally htmlEscape chars based on encoding
Support charset config by (static) resource location
spring-test module now depends on junit:junit-dep
Support Protobuf serialization in WebFlux
Take into account the MimeType's charset in Jackson encoder
Merge branch 'cleanup-3.2.x' into 3.2.x
Deprecate ExtensionRegistryInitializer in protobuf support
Update ejb, inject-tck, jsr166 deps in context pom
Correct log level
Polish InterceptorRegistration
Add readme
Add set/getContentLanguage() to HttpHeaders
Removed json(), html() and xml() predicates
Support contextPath override in ForwardedHeaderFilter
Improve documentation of annotated class support in the TCF
Add missing JPA dependency
Improve empty request body handling
Clarified that getResource never returns null
Polish
HttpComponentsClientHttpRequestFactory supports plain HttpClient (i.e. non-CloseableHttpClient implementations) as well
Polishing
Deprecate FileSystemUtils
Fix typo in MVC reference documentation
Detect unsent DISCONNECT messages
Complete migration of annotation utility methods
Polishing
upgraded compile-time dependency to EHCache 2.0.0
Customizable PreparedStatementCreator in NamedParameterJdbcTemplate
Polishing
Use ContentTypeResolver for content negotiation
added section on JPA EntityManagerFactory bootstrapping without persistence.xml
Drop Appendix E. spring-beans-2.0.dtd from docs
SPR-5523: JAXB2 is using package-info.java now as well.
DefaultWebFilterChain is a top-level, public class
Object/FieldError exposes source object through unwrap/contains methods
JdbcUtils uses JDBC 4.1 getObject(int, Class) for unknown ResultSet value types
Polish whitespace
Improved annnotation support in ResolvableMethod
polished
@UsesJava8 declaration on inner class
Polish and minor fixes in ViewResolutionResultHandler
Support 'empty' StreamSource in Jaxb2Marshaller
Deprecate PropertyPlaceholderConfigurer
Polish + minor refactoring of ResourceUrlProvider
Avoid and/or suppress warnings in spring-test
Merge branch '3.1.x'
Improve TCP connection info logging.
Seamless support for Groovy bean definitions mixed with XML bean definitions
Handle Resources beyond int length through Servlet 3.1's setContentLengthLong
Fix usage of Java8 API
Update deps for spring-websocket
Sync with 3.1.x
Fix typo
Support named dispatchers in MockServletContext
ProtocolResolver SPI allows for custom resource resolution
Polishing
Test meta-@Async executor qualification
SPR-7327 Add minOccurs=0 to sub-elements of mvc:annotation-driven and add more tests
Refined AspectJ caching tests
Access to ApplicationContext via ServerWebExchange
Polish Javadoc
fixed duplicate section ids
Refine names in web.server and polish Javadoc
IdToEntityConverter defensively handles access to getDeclaredMethods
default date/time converters
Suppress warnings for resource leaks
Protect against NPE when escaping LiveBeansView
Polishing
plenty of new entries for 3.0.1
Use separate reactive HttpHandler for Tomcat/Jetty
Message broker thread pools should be set up in allowCoreThreadTimeOut mode
Use StringJoiner where possible to simplify String joining
Add DataBufferUtils.compose
Introduce getAliasedClassArray() in AnnotationAttributes
Fix log level guard in DatabaseStartupValidator.afterPropertiesSet()
final preparations for 3.0.2
SPR-6932 Add option to extract value from single-key models in MappingJacksonJsonView
update DependencyUtils package
Differentiate between TypeDescriptors with same annotations but different attributes
Polishing
Polishing
HtmlUtils properly escapes single quotes as well
ComponentScan annotation is repeatable now
AbstractServerHttpResponse stores HTTP status code as integer value
Refactor DefaultCodecs.protobufWriter into protobufEncoder
Expose RequestPath in ServerHttpRequest
Ignore Gradle-related files and directories
SPR-8543 Fix issue in AnnotationMethodHandlerAdapter with extracting URI template variable from URL with file extension
Full Quartz 2.2 support, including LocalDataSourceJobStore
Update log category precision for all tests
HtmlUnitRequestBuilder detects form encoding type
Introduce MessageCodeFormatter abstraction
'Rename' HttpHeaders.getIfNotModifiedSince()
Fixed StandardTypeLocator to only know about java.lang.* out of the box.  Doc fixes related to that.
Turned AsyncRequestCallbackAdapter into a private inner class
mark spring-aop as required for spring-context (SPR-6578)
Move negating RequestPredicate to RequestPredicates
added language element to programlisting for syntax highlighting
Cache.get(key, type) should also work in case of null value found in cache
Support destroy method inference
Restore includes and isCompatibleWith
Improve HTTP caching flexiblity
Do not provide hints for can*() methods anymore
FileSystemResource supports java.nio.file.Path based setup
StatementCreatorUtils uses setClob/setNClob with stream argument in case of typed String value exceeding 4000 characters (for Oracle compatibility)
ASM ClassReader leniently handles label offset mismatch
Polish and update reactive getting started reference
Consistent handling of InterruptedException
Update references to RFC 2616
Fix tests by moving JAXB2 types back into sub-package
Polish Javadoc for ExtendedBeanInfoFactory
Polish
Produces media types cleared prior to error handling
[SPR-6184] AnnotationConfigContextLoader now defines "$ContextConfiguration" as the resource suffix for generated default @Configuration class names.
Consistently call HttpURLConnection.setFixedLengthStreamingMode(long)
Upgrade to latest Checkstyle DTD
Guard against invalid response status
Update changelog
StringUtils.uncapitalize is not actually nullable
SPR-5853 - JSON formatting view for Spring MVC
Polishing
Merge branch '3.1.x'
Support non-standard classes in Kotlin reflection discovery methods
Make SynthetizedAnnotation public
AbstractContextLoaderInitializer and AbstractDispatcherServletInitializer support ApplicationContextInitializers now
Avoid UnsupportedOperationEx. with active SecurityManager
Fix type in "what's new in 3.2" section
Add and use AbstractDecoderTestCase
Update javadoc external links
Use connection id in server log messages if possible
Moved tests from testsuite to tx
Fix conditional requests support for HttpEntity
TypeDescriptor cleanup and general polishing; fixed a number of bugs related to TypeDescriptor usage in client code across beans and spel packages
MethodParameter supports Java 8 Executable/Parameter and validates parameter indexes
Polishing
Adapted PropertySourcesPropertyResolverTests for different error message format
Update readme.txt in distributed artifacts
Optimize StringUtils.replace/deleteAny for common no-op case
Upgrade to Gradle 1.2
Polish contribution
ASM-generated class names get interned for better memory allocation
Add flush method to ServerHttpResponse
Refactor SubscriptionRegistry
SPR-8457 - XMLEventStreamReader.getText() fails for COMMENT and ENTITY_REFERENCE events
Polish contribution
Polishing
Polishing
Polishing
RootBeanDefinition publicly exposes target type as ResolvableType
Fix ParameterizedType + contextClass support in Jackson converter
Add MockMvcClientHttpRequestFactory
Fixup .mailmap file
@Scheduled supports "-" as cron expression value for disabled triggers
Support XML properties in ResourcePropertySource
Merge branch '5.1.x'
Polishing
AbstractResponseBodySubscriber improvements
SPR-8483 Add support for @RequestPart annotated method parameters
Consolidate partialPaths under FullPathComposite
Switch "attachment" to "inline" on Content-Disposition
Fix Javadoc warnings in Gradle build
ResourceHttpRequestHandler explicitly closes a Resource's InputStream
MessageSourceResourceBundle overrides JDK 1.6 containsKey method, avoiding NPE in getKeys
Add @Repository use to JdbcTemplate Best Practices (SPR-7339)
Polishing
Add RequestMappingInfoBuilder
Document websocket XML namespace
Merge branch '5.1.x'
Introduce LogAccessor and LogMessage as convenient logging utilities
CachingResourceResolver varies by known codings only
+ Updated all projects to use the re-introduced org.springframework.asm instead of org.objectweb.asm (.java, template.mf, ivy.xml, and .classpath files have been updated)
Fix BOM link
Consistent support for Charset/StandardCharsets in UriUtils etc
Upgrade build to Gradle 2.14
@ManagedOperationParameter declares @Target/@Retention/@Documented/@Repeatable now
Rename ref docs section new-in-3 => new-in-3.0
UnsupportedMediaType[Status]Exception reports body type
Fix hibernate-validatin version
Remove unnecessary copying of headers in GenericMessage
Polishing
Consistent default order for composite ViewResolver
Add @Override annotations to main sources
Polishing
work, work.
Add @EnableLoadTimeWeaving to "New in 3.1" ref doc
Fixed invalid EhCacheFactoryBean test for EhCache 2.4+ compatibility
Tests for Base64Utils results between JDK 8 and Commons Codec
Consistent Class array vs vararg declarations (and related polishing)
Redesign MockMvcWebClientBuilder API
Fix typo in ContextLifecycleScheduledTaskRegistrar
Update copyright header
Fix media type regression in resource handling
Update MockHttpSession across the test suite
Add Maven artifacts to .gitignore
Add and use AbstractEncoderTestCase
Revert "Introduce (Annotation)SessionFactoryBuilder types"
Polishing
Polishing
Update with new HttpServerResponse.sendFile signature
Polishing
Autowiring of generic types
Suppress deprecation warning in spring-test
Consistent removal of JMS 1.0.2 references
Use LinkedHashmap to preserve insert order
Update changelog
Activated through rename to *Tests, and added method call interaction tests
Polish
Serialize with type only with jackson 2.6+
moving unit tests from .testsuite -> .aop
Merge branch '5.1.x'
Ignored test removed (not intended to work)
ThreadPoolTaskExecutor/Scheduler cancels remaining Futures on shutdown
Add seeOther shortcut to ServerResponse.BodyBuilder
Provide common cache config
Light refactoring/polish in reactive read/write bridge
Throw exception from user code in SpringFailOnTimeout even if a timeout occurs
conditional mapping and polish
Refactor ResourceResolverChain + resolver class names
LiveBeansView produces a well-defined (and valid) JSON document now
LoadTimeWeaverAware beans are consistently being created early for JPA weaving to work reliably
Introduce class-level @DirtiesContext tests for TestNG
Correctly determine and propagate validation hints to DataBinder
Polishing
Do not reuse mock requests in Spring MVC Test
Fixed Xml/AnnotationBeanConfigurerTests after AbstractBeanConfigurerTests removal
Take in account Rossen and Arjen feedbacks
Fix path matching for paths containing spaces
SPR-5823 - JSON HttpMessageConverter
Commented out the sections on list projection and #this.
A "path patch": AntPatchStringMatcher -> AntPathStringMatcher ;)
revised non-lenient resolution
Task list getters never return null now
Enable execution of TestNG tests in spring-test
Consistently accept "taskExecutor" bean of type Executor (as stated in @EnableAsync's javadoc)
Upgrade to latest Checkstyle Suppressions DTD
Polish Javadoc
Exposed all of XStream 1.4's configurable strategies as XStreamMarshaller bean properties
polishing
Relax ConfigurableWebEnvironment signatures
URL Cleanup - polishing
prepared for 3.0.3 release
LoadTimeWeaverAware beans are consistently being created early for JPA weaving to work reliably
Fix Javadoc
Moved tests from testsuite to web.servlet
Polish static resource handling mechanism
Efficient and consistent setAllowedOrigins collection type
Merge branch 'cleanup-3.2.x' into 3.2.x
Add WebSocket integration test
SPR-9060 Revise HTTP Session based FlashMapManager implementation.
Polish UriUtils, UriComponents
adding .gitignore
Find exact matches in WebJarsResourceResolver
Updating POMs to contain Junit & EasyMock version numbers. Apparently, the maven ant tasks cannot resolve our parent pom.
NamedBeanHolder enforces bean name
Add tests that use the new generate-name attribute
Remove Chapter 27 from reference documentation (SPR-7433)
Consistent alias processing behind AnnotatedTypeMetadata abstraction (also for ASM)
Increment version to 3.3.0.BUILD-SNAPSHOT
added explicit section on autodetecting aspects through component scanning (SPR-7246)
Clean up warnings in spring-core
Added missing spring.schemas entries for 4.0 xsds
CacheNamespaceHandler etc
Polish
Added documentation on DecompressingHttpClient
String encoding for any MIME type
Conditional registration of task scheduler for SockJS
Polish Javadoc in HtmlUnit support
Merge BeanWrapperImpl and DirectFieldAccessor
DispatcherServlet and ServletWrapping/ForwardingController accept any HTTP method by default
Support for reactive controller @InitBinder methods
moved XmlBeanFactoryTests and attendant XML from .testsuite -> .context
Introduce before/after test execution support in AbstractTestNGSpringContextTests
Remove unused imports
Fix context-relative default value in XML parsing
Remove PubSubChannelRegistryBuilder
Refine ListenableFutureCallback policy for exceptions
Defensive fallback for file system resolution in lastModified()
URL Cleanup
canConvert checks Collection/Map element types as well (SPR-6564)
Remove MimeTypeResolver since JAF is part of Java SE 6+
Implement equals() & hashCode() in MockServerContainerContextCustomizer
Simplify legacy JUnit 3.8 based tests in spring-orm
Add UTF8 problem+json media type constant
MBeanExporter does not log warnings for manually unregistered MBeans
Polishing the new RESTful interface to the petclinic webapp (SPR-5487):
Polish documentation on WebApplicationInitializer
[SPR-6222] Updating PetClinic Ivy dependencies so that the web-app runs.
TaskExecutorFactoryBean (as used by task:executor) exposes full ThreadPoolTaskExecutor type (SPR-7403)
SPR-5979 - Reference guide refers to non-existing type StandardScopes
Improve javadoc on reactive classes
Add SubscribableChannel and ReactorMessageChannel
Delete unused import in MockAsyncContext
Add @Deprecated to WebMergedContextConfiguration constructor
Merge remote-tracking branch 'wilkinsona/message-header-accessor' into websocket-stomp
Throw on advise returning null for primitive type
Merge branch '5.1.x'
Declare ResourceUrlProvider in MVC namespace
Changes to allow snapshot build to proceed.
Polish ReactorResourceFactory
Merge branch 'master' into websocket-stomp
Polish log statements for TransactionContext
Add UriTemplateHandler
Polish
Add putIfAbsent on Cache abstraction
Update WebLogicRequestUpgradeStrategy for WLS 12.2.1
Sync with 3.1.x
moving .scripting.* unit tests from .testsuite -> .context
fixed typo (SPR-6936)
Support X-Forwarded-Ssl
Improve wording of scoped-proxy example in ref doc
Fix TODO in ReactorHttpServer
UriComponentsBuilder parse of empty fragments
Update MediaType's includes method
Extension point in HttpMessageConverterExtractor
Support for functional instance supplier callback at BeanDefinition level
Polish
Jackson encoder skips String.class
Upgrade Hibernate from 4.0.0.CR7=>4.1.0.Final
RequestMethodsRequestCondition uses common HttpMethod resolution
Add aditional example to CronSequenceGenerator
+ Repackaging test codebase from .config.java.* -> .context.annotation.*
Clean up warnings in spring-web
added "validationMessageSource" property to LocalValidatorFactoryBean, for Spring-based messages (SPR-7307)
Polish
Removed scheduling.timer and scheduling.backportconcurrent packages
ShallowEtagHeaderFilter writes body early on sendError/sendRedirect and interprets setContentLength/setBufferSize as a hint for capacity increase
Increase sharing among InvocableHandlerMethod variants
consistent title-case for 1st and 2nd level sections
Rename BodyPopulator to BodyInsertor
Polish PathVariableMapMethodArgumentResolver
Update version to 0.1.0.BUILD-SNAPSHOT
Properly handle knownSuperclasses in case of an overridden ConfigurationClass
Avoid unnecessary annotation introspection on framework classes
Polish
URL Cleanup - polishing
Added DomUtils.getChildElements() method. Also refactored ConfigBeanDefinitionParser.parse() to use it.
Support @Rollback on classes & deprecate @TxConfig
Avoid use of double constructor of BigDecimal
Added useful query variants without parameters to NamedParameterJdbcTemplate, for convenience in DAOs
Document suppressed exception support in TestContextManager
Introduced TomcatLoadTimeWeaver for Tomcat's new InstrumentableClassLoader interface
Polish async method execution infrastructure
Work around JDK7 String#substring performance regression
Wrap Jetty WebSocketException
MockHttpServletRequest returns a single InputStream or Reader
Clean Up Deprecated Method Call
Polish integration tests
ResourceWebHandler signals error for missing resources
Polishing
JDBC 3.0 related javadoc overhaul
Fixed extractOutputParameters to properly extract ResultSet in all cases
Leverage ObjectProvider instead of autowired containers
revised section on inheriting annotations from interfaces
moving unit tests from .testsuite -> .aop
JSR-236 support, in particular adapting to JSR-236 Triggers and exposing additional metadata through ManagedTasks
Polishing
Revised ControllerAdvice basePackages handling (based on package names instead of java.lang.Package)
Consistent use of ResolvableType.toClass() for assignability checks
DefaultListableBeanFactory leniently deserializes into dummy factory if serialization id not resolvable
Merge rather than add URI vars to data binding values
Remove Tiles 2 support
Improve docs for MvcDefaultServletHandler container feature.
Remove synchronized keywords from SockJsSession impls
Fix various compiler warnings in spring-context
Improve #toString for AnnotationAttributes
Suppress warnings in tests
Clean up spring-jms tests warnings
RequestPartMethodArgumentResolver declares @UsesJava8 now
Fix PropertyResolverExtensions.kt location
Helpers for get/post in RequestMappingIntegrationTests
to get rid of "magic" time constants
SQLStateSQLExceptionTranslator checks exception class name for timeout indication before resorting to UncategorizedSQLException
Fix Javadoc syntax error in HttpRequestHandler
fixed or @Ignore'd broken tests
Make MockRestRequestMatchers independent of JUnit (#1720)
Allow to change URL/method in ClientRequest.Builder
changed structure - added Parts for intro chapters and appendices; changed J2EE to Java EE
Early resolution of unique factory methods in configuration classes
Improve error handling in WebUtils.isValidOrigin()
Polishing
SPR-8730
Polishing
Polishing
Remove unnecessary imports
Polishing
Fixed ambiguous sentence in conditional cache documentation
Polish CollectionFactoryTests
Use AnnotationTransactionAttributeSource class name to avoid hard dependency on transaction.annotation package
added some JavaConfig content
fixed missing tabs in application context file (SPR-3987)
MockHttpServletRequestBuilder parses form data
Updated build for 3.0.1
Support Message argument with payload conversion
Document context hierarchy support in the TCF
InterceptingClientHttpRequest adapts to StreamingHttpOutputMessage
Remove warning suppression in mocks
Ensure correct array elements order in Jackson2JsonEncoder
Revert optimization in StringDecoder
Polish profile expression support
Introspect interface-declared methods in case of proxy (for varargs)
Polish ServerSentEventHttpMessageWriterTests
Polish WebFlux ForwardedHeaderFilter and tests
Fix @PropertySource bug with multiple values
Ensure onComplete/onError events will be delivered
DispatcherHandler.getHandlerMappings() is also final
BeanPropertyRowMapper uses US locale for lower-case conversion by default
Convert CRLF=>LF on files missed earlier
Add MockServerWebExchange and toExchange shortcuts
Documentation fixes: SPR-5748, SPR-5723, SPR-5750, SPR-5753, SPR-5747
Refactor the spring-beans build
Ordered stream access on ObjectProvider with strong order guarantees
Remove duplicate slash from resolved WebJar locations
Introduce new HEARTBEAT message type
Support @MessageExceptionHandler w/ @ControllerAdvice
Restore log level for resolved exceptions
Refined check for NoClassDefFoundError in getTestExecutionListeners()
Convenience constructors for common view prefix/suffix scenarios
Reduced "getParameterType call not supported" log message to single line
Polish Javadoc in ResourceUtils
Sync Javadoc and reference manual regarding ReflectionTestUtils
Reactive AbstractMessageMethodHandler
Minor post-merge cleanup
polish
Treat empty Accept header as "*/*"
HttpRange validates requested ranges
Upgrade to Gradle 4.3.1 (and Netty 4.1.17)
Update spring-context dependencies in pom
Remove headers(HttpHeaders)
Removing typo in POM
Upgrade to Gradle 4.4.1 (and Netty 4.1.19)
Add RestTemplate constructor with custom converters
Consistent and lenient HttpMethod resolution across all web modules
[SPR-5963] Upgraded to JUnit 4.7
Refactor StompRelayPubSubMessageHandler
Overhaul Javadoc for embedded database support
Support path segment URI var expansion in UrlTag
Polishing
Upgrade to spring-build.  Added dm Server library file
Move namespace tests to root integration module
Fixed event listener caching through equals/hashCode on SyntheticParameterizedType
Moved tests from testsuite to web.servlet
Introduce SpringFailOnTimeout(Statement, Method) constructor
Polish "Remove an unnecessary intermediate variable"
Support nested meta-annotations in AnnotationUtils
Set Jackson FAIL_ON_UNKNOWN_PROPERTIES property to false by default
Make TestPropertySourceUtils more robust
Clean up warnings and dead code in spring-core module
Remove duplicate test classes
Move Merge plugin into a build package structure
Fix null parameterName issue in content negotiation
SPR-7163
ResourceRegion fits better in core.io.support (next to EncodedResource)
Transaction annotations on interface methods with CGLIB proxies
Polishing
Make sure endpoint settings override default factory settings
Polish
Order property for SimpUserRegistry
Refine EclipseLink SQL logging
BeanFactoryAnnotationUtils throws NoSuchBeanDefinitionExceptions instead of IllegalStateExceptions
Spring Build update
RedirectView and RequestContext use RequestContextUtils.findWebApplicationContext
Polish AnnotationUtilsTests
Refactor BeanConfigurerTests
Leniently allow constructor argument matches if required name is not resolvable
Fix APC registration for @EnableTransactionManagement
Upgrade to RxJava 1.1.5
Refactor DateTimeFormatterFactory
Add ResponseEntity.of(Optional) variant
Reduce complexity in ContextLoaderUtilsTests
GroovyScriptFactory supports CompilationCustomizer next to GroovyObjectCustomizer
Serialize with type only collections in Jackson HttpMessageConverter
Add support for custom message converters
Moved tests from testsuite to orm
Upgraded ivy files to correspond to those in 2.5.5
Polishing
Relax ServletContext check for resource handling
Verify inlined props override files in @TestPropertySource
Polishing
Polish
Log and handle unresolved exceptions
Detect LoadTimeWeaver bean when declared through @Bean method as well
Support for 'all excluding' test groups
Update Spring logo in the PDF reference guide
Make BeanFactoryMCDR BeanFactoryAware
Annotation-level javadoc for Model parameter on exception handler methods
Polishing
ReflectiveMethodResolver lets local static methods override java.lang.Class methods
Added "beforeExistingAdvisors" flag to AbstractAdvisingBeanPostProcessor
Polishing
Align settings for sameSite and secure flag
Move requests.add(request) into finally block.
Remove isStreaming flag from AbstractHttpSockJsSession
Improve DateHeaders in MockServletRequest/Response
Improve spring-context-indexer documentation
Defensive checks in WebClient and Reactor connector
Add maxSessions, getSessions, removeExpiredSessions
Add missing test
Polishing
Make DeferredResult more usable and testable
Polish Javadoc
Javadoc
Polishing
Introduced support for @Lazy on injection points
Polish Javadoc
Apply DestinationResolver to listener container
Replace remaining use of block operator
Polishing
ObjectToObjectConverter caches detected methods/constructors
Polish doc
Links from @RequestMapping to reference docs
Fix checkstyle violation
Remove support for deprecated AbstractHttpClient class
HttpHeaders consistently ignores invalid date header values
Add MockServerHttpRequest/Response
Introduce buildErrorMessage() utility in ScriptStatementFailedException
Consistent logging in ignoreResourceNotFound scenarios
PathMatchingResourcePatternResolver consistently logs retrieval results
polish
Various updates to support IDEA
Polish support for topic branch-specific versions
Strong Hibernate 5.1 recommendation
ObjectProvider stream consistently includes beans from parent context
ExceptionHandlerExceptionResolver allows for Model parameter
reformatting due to loading inside XmlMind 4.1
Add newline at the beginning of textarea JSP tags
Fix typo in Javadoc
Adjust logging to catch sporadic PERF build failure
Imply text/event-stream when serializing ServerSentEvent
SPR-5633 - Portlet-version of @ExceptionHandler
Added further author tags
Remove duplicate words
Revert "Support {/var} syntax in UriComponentsBuilder"
mvc:interceptors namespace element initial commit
Restore original separator set (but keep new isParameterSeparator impl)
Fix malformed Javadoc
Remove redundant 'String.substring()' call
Polish "Use Map#forEach instead of Map#entrySet#forEach"
Moved over static mock testing from Roo; added tests
Find annotations on implemented generic superclass methods as well
moving unit tests from .testsuite -> .beans and .context
Polish FreeMarker tests and suppress warnings
Polishing
Protected visibility for configurePathMatch and configureAsyncSupport
Add tests for TransactionAwareCacheDecorator
Improve empty body check
initial joda time support courtesy of Oliver Gierke
InvocableHandlerMethod and arg resolution updates
Comprehensive update to the framework's TimeZone handling, including a new TimeZoneAwareLocaleContext and a LocaleContextResolver for Spring MVC
Remove parameterisation from ClientRequest
Merge pull request #1588 from benbenw/SPR-16170
SPR-17074 pass argument of addAll/putAll into constructor
Final preparations for 3.2.2
Check BeanInfoFactory for interface introspection as well
Rename ResolvedResource to HttpResource
ClassReader revision from ASM master
WebFilterChain delegation nested in Mono.defer()
revised core conversion package for BeanWrapper/BeanFactory integration
Polish Javadoc for ScriptStatementFailedException.buildErrorMessage()
Changed addBody() to setBody()
Polishing
Merge branch '5.1.x'
Add marshalling hooks in Jaxb2RootElementHttpMessageConverter
Polishing
Javadoc fixes
Merge branch '5.1.x'
Polish: remove unused private fields, remove empty operator
Add test case for SPR-15719
Rename @ReplyTo to @SendTo
with dependencies distribution added
Polishing
Support Forwarded-Header in UriComponentsBuilder
Automated tests against Hibernate ORM 4.3 and Hibernate Validator 5
Prepare for a future change to downstream() inner method in reactor-core
Fix package cycles in spring-test
Typo fixes and formatting
Add support for repeatable JmsListener
Add properties files directly to environment in TestPropertySourceUtils
[SPR-6184] Introduced AnnotationConfigContextLoader to provide TestContext support for @Configuration classes
updated Spring Portlet MVC to Portlet API 2.0
Use ChannelListener for Undertow zero-copy file transfers
Fix typo in util:constant error reporting
Add FormHttpMessageReader/Writer
DispatcherServlet logs request URI in encoded form only
Javadoc fixes
Fix typo in MessageHeaderAccessor's class name
Language tag methods declared as @UsesJava7
polishing .aop tests
removing unintentionally added file
Fix failing tests and upgrade websocket to Jetty 9.0.5
Introduce composed annotations for @RequestMapping
SPR-6257: Resolved in beans.xml
Merge branch cbeams/SPR-9669
Configurable Marshaller/Unmarshaller in JAXB2 codecs
Restore lenient null return value for ConditionContext.getBeanFactory()
Additional tests rounding out @ImportXml coverage
Initial reactive, WebSocket Tomcat support
Add JettyWebSocketClient
Allow AnnoConfigEx to propagate from getRepeatableAnnotation()
Merge branch '5.1.x'
Improve header processing in SimpMessagingTemplate
BindingPoint to ConversionPoint, javadoc
Consistent ControllerAdvice applicability against user-declared class
Polish pull request #291 per committer guidelines
AsyncExecutionInterceptor uses submitListenable if method signature indicates ListenableFuture
Cache-safety check for sibling loaders resolving the same classes
Consolidate SendTo vs SendToUser detection
Nullability fine-tuning around declaration inconsistencies
Fixed side effect on other tests
Consistent validation of annotated methods behind AOP proxies
Link to JIRA change log instead of local changelog.txt file
added classes from contributed patch for load-time weaving in JBoss 5 (SPR-5764)
spring-core provides custom variant of Commons Logging
Polish javadoc
Added explicit note on thread safety to JdbcTemplate variants
Fix Java 9 Build
added com.springsource.javax.servlet.jsp dependency to fix problem with test (SPR-7033)
Dropped explicit paragraph on web.xml version declaration
Preserve ETag HTTP header for versioned resources
Unwrap if necessary for MultipartHttpServletRequest
Polishing
Support for transactional event listener
NumberUtils reports overflow when converting from BigInteger/BigDecimal to Long
Moved tests over from testsuite to context.support
Beverly's copy edits - to be reviewed.
Polishing
Expose handled exception as request attribute
+SPR-7470
updaten new in 3
WebApplicationContextFacesELResolver.isReadOnly returns true for WAC
Next development version
Add netty-buffer as a compile dependency
GenericApplicationListenerAdapter caches resolved event types
Introduce additional JsonPath RequestMatchers in Spring MVC Test
Adapted orm.hibernate4 and HibernateJpaVendorAdapter to avoid deprecation warnings on Hibernate 4.3 final
Add JSR-107 cache annotations support
Resolve remaining nullability warnings
Do not use ParsingPathMatcher by default in Spring MVC
Refactor DefaultWebSession
Fix default HandlerMappings class names in javadoc
Drop support for Jetty 9.3 and OkHttp 2.x
Avoid calling other bean methods in web config
renamed AbstractPropertyPlaceholderConfigurer to PlaceholderConfigurerSupport
Add Jackson serialization inclusion to FactoryBean
Immutable DefaultWebFilterChain
Minor refactoring + polish reactive WebSocket support
Deprecate TxConfigAttributes alongside @TxConfig
MockClientHttpResponse closes body stream on close()
TargetSource.getTarget() is nullable again (for compatibility with MethodInvocation.getThis)
Polish websocket xml namespace
Introduce isNotEmpty() aliases in StringUtils
added support for Integer > Float conversion.
IdentityHashMap for scheduled tasks (avoiding hashCode calls on bean instances)
Polish LiveBeansView Javadoc and suppress warnings
Remove dependency on hamcrest-lib from spring-mvc-test
Polishing
Upgrade to Hibernate Core 4.0.0.CR7
Renamed tests for AnnotationConfig[Web]ApplicationContext; added tests for scan() and register() methods.
Revert "Make DispacherServlet attributes protected"
STOMP and WebSocket messaging related logging updates
SPR-7812 Add CustomRequestCondition
Lower log level for ResponseStatusException
ASM annotation visitor logs IllegalAccessException at debug level only
Avoid explicit DecoratedObjectFactory setup in JettyRequestUpgradeStrategy
Polish Javadoc
Polish
Enhance MessageHeaderAccessor support
Introduce MessageHeader accessor types
New overview
fixed typo
Polishing
Polishing
final preparations for 3.1 M1 release
Added support for the Java 8 style 'from'/'to' method conventions
Refactor HTTP client contracts
moving unit tests from .testsuite -> .web.servlet
Polish
Update Jackson builder to set properly AUTO_DETECT_IS_GETTERS
Rename handshakeAttributes to just attributes
Add error request attribute for 500 reponses
Improve performance of NumberUtils
Spring uses Joda-Time 2.0's specific parseLocalDate/parseLocalTime/parseLocalDateTime methods now
Correct package for MockServerWebExchange
Polishing
polish
changed section ids so they don't clash with aop-spring.xml
Update copyright header
Merge branch '5.1.x'
POLISH CREATION OF DATA BINDERS FOR @RequestMapping METHODS
Upgrade to Gradle 4.1
ClassUtils.isCacheSafe defensively catches SecurityException (for Google App Engine compatibility)
Added RequestPredicates.methods(HttpMethod...)
Add back-off attribute to JMS namespace
Polishing
Polishing
Revised SingleConnectionFactory for individual proxies with ExceptionListener and start/stop state
ClassUtils.getMostSpecificMethod uses Class.getMethod code path in case of a public method
fixed "inner vs. nested class" terminology (SPR-6608)
Fix XML parser default value handling
Consistent upgrade to Rome 1.12 and WebJars Locator 0.36
Moved tests over from testsuite to beans
Optimized parameter length comparisons for constructor/method sorting
Use DataBuffer.write in CharSequenceEncoder
Delete sysout.println call from MBean*Tests
Remove static import from InvocableHandlerMethod
WebFlux supports field default/marker parameters for data classes as well
Next Development Version
Add heart-beat support to STOMP broker relay
Create a new API for handling merged annotations
Added convenience classes for typical JSR-236 setup in a Java EE 7 environment
Fix minor test issues
Revert "Add handleFailure property to FrameworkServlet"
URIEditor uses straight ClassPathResource.getURI() access
SimpleApplicationEventMulticaster supports a configurable ErrorHandler strategy
Polish doc for 'annotated class' support in TCF
Update to Gradle 3.4-rc-2
Suppress resource/deprecation warnings in integration tests
Polish Javadoc for (Synthesizing)MethodParameter
Apply default content type change to WebFlux
Fix typo in cache abstraction reference doc
Merge branch '5.1.x'
Clean up warnings in PersistenceXmlParsingTests
Polish MockCookie[Tests]
Use transactional connection during db population
Improve CORS handling in AbstractSockJsService
Disable ShallowEtagHeaderFilter for HTTP streaming
Polish doc & imports for MockAsyncClientHttpRequest
Polish
Check new snapshots for every build
Consistent retrieval of javax annotation types (e.g. JSR-305)
Upgrade to Gradle 1.0 GA
Polish: String function use should be optimized for single characters
Add global CORS configuration capabilities
Added HTTP abstraction for RestTemplate
Replace WebClient.filter with Builder.filter
Test HTTPS in ReactorServerHttpRequest URI
Sync with reactor-netty and reactor-ipc
final touches for 3.0.3
Injection support for Collection/Map beans and self references
Initialize pre-filled HashMaps with large enough capacity
adding resources to portlet/context/WEB-INF
Update deprecated basic auth client filters.
polishing
Constructor-provided field values get recorded for failed binding result
updated test package structure
Various DataBuffer utility enhancements
WebClient writes Content-Length for Mono bodies
ResourceDecoder supports filename hint
Remove top-level org.springfamework.reactive package
Document type safety limitations of the CollectionFactory API
Polish CronSequenceGenerator and tests
Drop version check in isGetGeneratedKeysSimulated (for PostgreSQL 10)
Polishing
+ more configuration file
SPR-6169: Clarified that DispatcherServlet configuraion options are init-param values for the servlet declaration, not context params
Consistent java.time setters on HttpHeaders and CorsConfiguration
Introduce ServerCodecConfigurer
[SPR-5995] SpringJUnit4ClassRunner is now compatible with JUnit 4.5 - 4.7
Set Vary: Origin on CORS unauthorized response
Support for multiple default content types
Overhaul non-void JavaBean write method support
Consistent handling of 4xx/5xx status codes in WebClient
@Autowired/@Inject with array/List value gets sorted against Ordered/@Order
Remove references to CommonsHttpInvokerRequestExecutor
ExpressionState.getConfiguration() should never return null
Use Map.forEach instead of manual Map.Entry iteration wherever possible SPR-16646
Support comments in SQL scripts in JdbcTestUtils
Remove outdated javadoc references to SpEL lambda functions
Only retrieve the FlashMapManager if a non-empty output FlashMap has been found
introduced ForkJoinPoolFactoryBean for Java 7 (alternative: add new jsr166.jar to Java 6)
Moved tests from testsuite to context.support
Debug and test SockJS server support
AOP proxies with annotation-based aspects are serializable now
Warning instead of error for non-present type filter class
Polishing
Delete unused import
DefaultPersistenceUnitManager detects META-INF/orm.xml for scanned default unit
Ensure JUnit & TestNG tests run in spring-test
SPR-7858
Missing path variable is now a 500 error
RootBeanDefinition accepts ResolvableType for target type hint
Revised exitTypeDescriptor handling to avoid NPEs
Default JmsListenerContainerFactory lookup
Add ExtractingResponseErrorHandler
Add methodCall option to HandlerResultMatchers
Hibernate etc
Replace relevant code with lambda
Add HTTP method to RequestDataValueProcessor method
More accurate checks for presence of MediaType.ALL
Add ChannelInterceptor to spring-messaging module
Upgrade spring-test tests to Hibernate 4
moving unit tests from .testsuite -> .aop
Polishing
WebFlux test support for server endpoints
Placeholder support for STOMP @MessageMapping methods
Merge branch '5.1.x'
Fix copy/paste in Javadoc
Clean up warnings in spring-test
Polish WebSocketHttpRequestHandler
Hibernate 4 LocalSessionFactoryBean implements PersistenceExceptionTranslator interface as well (SPR-8952); consistent extending of HibernateExceptionTranslator for Hibernate 3 as well as Hibernate 4
Polish whitespace in docs
Split HttpMessageConverter into ~Reader and ~Writer
Upgrade to AspectJ 1.7.1
- Removed deprecated code
Apply name-matching transaction attributes to user-level methods only
Fallback logger for logging in http and codec packages
Update spring-test re: deprecated queryForInt()
Reformat the Testing chapter
ObjectFactory etc
Only use payload if it actually matches declared event type
Revert "Fix tests"
Rename MethodBasedEvaluationContextTest to *Tests
changed J2EE to Java EE
SPR-8892 Add String constants to MediaType.
Add multipart support to ServerWebExchange
ResolvableType-based matching respects generic factory method return type
Remove Cookie support from ServerHttpRequest
Resolved SPR-6602, relating to FactoryBean behavior in @Configuration classes. See issue and code comments for full details.
Add test case for writeFunction error signal
Mark all IsFastEnough tests as performance tests
Add Java config support for WebSocket and STOMP
SPR-8217 update MVC namespace to use HandlerMethod infrastructure
XStreamMarshaller wraps exception for empty stream
Upgrade build to Spring 5.0.0-BUILD-SNAPSHOT
Moved tests from testsuite to context support
Updated Multipart documentation
Change antlr version to be 3.0.1 so that is consistent across the project
Fix "unnecessary @SuppressWarnings" warnings
DisposableBeanAdapter detects "shutdown" as a destroy method as well (for EHCache CacheManager setup)
undertow support using non-blocking API’s
moving unit tests from .testsuite -> .aop
Polish
Optimized use of JDBC 3.0 ParameterMetaData.getParameterType, caching information about drivers which do not support that feature
Add @Override annotations to test sources
Make HTTP scheme parsing case-insensitive
Polishing
Copy cookies to ServerResponse builders
polishing
Merge branch '5.1.x'
Consistent tolerance of unknown HTTP status codes behind RestTemplate
DefaultLobHandler etc
Harmonize log configuration
Add ForwardedHeaderFilter
updated to FreeMarker 2.3.15 (SPR-4962)
Consolidate view resolution under result.view
Resume Undertow writes only when data is available
Fix typo in JavaDoc for UrlPathHelper.setUrlDecode()
Polish Gradle configuration for deployment
preparations for 3.2 M2
Improve StringUtils#trimAllWhitespace
Support EnvironmentAware ImportSelector/Registrar
Polish media type change in ResourceHttpRequestHandler
Polishing
Removing functionality.  Removed soundslike/distanceto/like operators
Replace bindToHttpHandler with bindToWebHandler
Improve docs on forwarded headers
Fix directories I/O in ResourceHttpRequestHandler
Polish scheduled task execution infrastructure
Upgrade to Gradle 3.3
Add LogUtils and HttpLogging
Overridable Commons Logging bridge in separate spring-jcl jar
Upgrade to Reactor Core 3.1
Remove HttpStatus from HttpMessageConversionException
Fix [dep-ann] warnings with @Deprecated
Avoid unnecessary introspection on methods and meta-annotations
moved cache abstraction from context.support to context
Remove individual detection of forwarded headers
Async support in MockMvcClientHttpRequestFactory
Additional docs about security vulnerabilities with XStream.
Add MockServerConfigurer to WebTestClient
Polish UriBuilderFactory and implementation
Polish
Polishing
Polish
Ensure -PtestGroups is passed through to unit tests
AcceptHeaderLocaleResolver falls back to language-only match among its supported locales
SPR-8256
Add missing HandshakeInterceptor for STOMP endpoints
SPR-6819
MBeanInfoAssembler impls expose actual method parameter names if possible
Moved tests over from testsuite to core
Consolidate websocket/messaging code
Refactor STOMP package and class names
Allow empty usernames for BasicAuth
ConcurrentMapCache.putIfAbsent properly supports nulls
Remove assertion on number of resource locations
Initial import of context support module
Introduce alias for 'value' attribute in caching annotations
MethodBeforeAdviceInterceptor implements BeforeAdvice marker interface
Expand repackaged asm/cglib jars into spring-core
Made transform test pass on Windows
Use strategy for customizing ID/TIMESTAMP generation
Deprecate outdated HibernateTemplate operations in favor of lambdas
Deprecated MatcherAssertionErrors in favor of the original org.hamcrest.MatcherAssert (v1.3)
@MessageExceptionHandler supports error signal
Merge branch '3.2.x'
move default value wrapper into support package (rather then interceptor)
Create a builder for Jackson ObjectMapper
Reduce PlatformTransactionManager lookups
Merge pull request #571 from sdeleuze/SPR-11820
Add MockWebSessionManager
TcpConnection extends java.io.Closeable
fixed incorrect example and JSF reference
Polish Encoder and Decoder
Jdbc4NativeJdbcExtractor etc
Merge branch '5.1.x'
Add client login/passcode to broker relay
Fix broken test in SpringJUnit4ConcurrencyTests
Add spring-websocket module
RSocket @MessageMapping handling
Verify support for H2 database aliases in SQL scripts
TransactionSynchronization declared with default methods
Add reset() to MockRestServiceServer
Polish log messages
Initial import of portlet module
factored out alert from message; made binding responsible for alert generation
BeanDefinitionBuilder keeps providing addConstructorArg(Object) for Spring Security 2.x compatibility
Merge branch '5.1.x'
Polishing
Fix regression in MappingJackson2MessageConverter
Polishing
Merge pull request #358 from bclozel/SPR-10539
Moved tests over from testsuite to beans
Lite configuration candidate check defensively handles method introspection failure
Explicit documentation on MutablePersistenceUnitInfo's addManagedPackage
Added log entries for recent TestContext framework changes.
Update Javadoc on uriTemplateHandler property
Polish ControllerAdvice selectors
Expand scope of SpringFailOnTimeoutTests
Update documentation with regards to differences between @MVC 3.0/3.1
Update remaining filter with async support
Consistent iteration over actualValue in Velocity and FreeMarker macros
Add WebServerExchange
Revert change from URL Cleanup
Fix obscure STS error
SPR-7308
Fix Jaxb2TypeScanner to scan for @XmlRegistry
pom maintenance
@Value can be used as aliased meta-annotation
[SPR-8240][SPR-8401] Documenting @Configuration class and @ActiveProfiles support in the TestContext framework.
Test @ManagedNotification as a merged, composed annotation
ContentCachingResponseWrapper defensively applies content length in case of sendError/sendRedirect
Rename classes
polishing
Javadoc
Properly detect null value params in params conditions
More REST documentation
Enable smart suffix pattern match for request mapping
Aligned exception handling in Jackson and JAXB codecs
Merge branch '5.1.x'
updated version to RC2
Polishing
Polishing
Clean up spring-tx tests warnings
Consistent abstract declaration for utility classes (plus polishing)
Added "jtaDataSource" property to JPA LocalContainerEntityManagerFactoryBean (for default units)
Reuse QosSettings in JmsTemplate
Update to 2.0.6 snapshot for Header sent too soon fix, which allows DispatcherHandler to assign content-type correctly.
SPR-6338: Fixed columns in jmx metadata-types table
Fix tx annotated tests so that they pass in the build
BATCH-5327: Correct name of SLF4J
Add option to remove path ext in ServletUriCompBuilder
AnnotationAttributesReadingVisitor defensively handles meta-annotation retrieval failure
Refactor from deprecated GenericTypeResolver calls
Delete test annotations in spring-orm
Quick access to volatile field (full synchronization only for lazy init)
Introduce CONNECT_ACK message type
Consistent use of AnnotatedElementUtils.findMergedAnnotation/hasAnnotation
Polish Javadoc for ClassUtils
Remove @BootstrapWith from @WebAppConfiguration
Missing abstract declaration on ReflectionTestUtils
Update documentation of 'annotated class' support in the TCF
Log view exception in DispatcherServlet
Add SAP HANA to common JPA database platforms
[SPR-5914] Updated reference manual to point out that class-level usage of @IfProfileValue overrides method-level usage.
SchedulingTaskExecutor provides prefersShortLivedTasks default method
Support default profile (SPR-7508, SPR-7778)
upgraded to Hibernate Validator 4.0.2 and Jackson 1.4.2
Polish
Add minor optimization to AbstractErrors
Adapter for JDK 8's standard parameter name reflection facilities
StringUtils.parseLocale consistently handles invalid locale values
Polish MockMvcResultMatchers[Tests]
Import format fix according to Code Style
Fix ResourceUrlEncodingFilter lifecycle
Add TODO for fate of Hibernate JPA integration tests
Relax SPR-13867 changes for ResourceHttpRequestHandler
Ensure ParamTag release resources
Polishing
Improve illegal MimeType checks
Prefer explicit "org.quartz.scheduler.instanceName" over bean name
Added get(key, type) method to Cache interface
Fix typo in section id
Consistently support CompletionStage next to CompletableFuture
adapted to deprecation backport in 3.1.3
LinkedCaseInsensitiveMap provides case-insensitive keySet again
Clarified VfsResource constructor
Better encapsulation for CORS default permit configuration
Added the @Inject TCK to the Eclipse classpath.
Suppress deprecation warning in DefaultBeanDefinitionDocumentReader
Return Set<PathPattern> from AbstractHandlerMethodMapping.getMappingPathPatterns
Increment version to 3.2.0.BUILD-SNAPSHOT
Avoid defensive checks against Java 8 API (java.util.Optional etc)
Avoid using deprecated methods in StringEncoder
Polishing
Add link to Kotlin sample for Spring Cloud GCP
added JMS to overview
actually delegate from resolveContextualObject to resolveReference
Passing the uri as a string to the MockMvc request builder will cause an encoded uri to become double encoded.
Fix javadoc typo
Polishing
Fix grammar issue
Consistent formatting
adding eclipse project settings
Avoid double encoding URI in ServletServerHttpRequest
Polishing
Fix warnings due to unused import statements
MockHttpServletRequest allows for removing registered header values
Fix ResourceRegionEncoder and tests
Resource resolution and message escaping tests pass on Windows again
SimpleEvaluationContext with dedicated factory methods for common cases
Polishing
SpelExpression consistently exposes EvaluationContext to compiled AST
Throw ISEs in MockHttpSession for invalid session
JamonPerformanceMonitorInterceptor tracks exceptions as well (consistent with JAMon's other interceptors)
Add hook for customizing response cookie
Polish ServletTestExecutionListener[Tests]
Refactor WebTestClient assertions
SPR-5725:  Typos in Spring REST documentation
Initial pass of docs for he Spring expression language.
Polishing
Typo in webmvc.adoc
Refactor @JsonView support w/ ResponseBodyInterceptor
Polish SpringClassRule and SpringMethodRule
Configurable support for static resource encodings
Refactor ReactiveAdapter hierarchy
Polishing
Avoid wide locks in order to remove deadlock potential in case of multi-threaded singleton creation/destruction
Consistently use CodecConfigurer for configuration
fixed TemplateParserContext documentation (SPR-7059)
Allow configuring custom ThreadPoolTaskExecutor
Polishing
[SPR-5893] polishing
sync reactor-core scheduler
Allow default settings of a custom HttpAsyncClient to apply
[SPR-6184] Added DefaultConfigClassInheritedTests to verify proper recursive search for configuration classes configured via @ContextConfiguration. This test is currently failing (as expected) and therefore @Ignore'd.
SPR-6183 - integration-tests should not be included in the packaged distribution
Support CompletableFuture in @MessageMapping handler methods
Polishing
Standard use of resolvedDestinationCache Map; fixed formatting
Improve Javadoc for TransactionalTestExecutionListener
Revised Jetty 9.3 vs 9.4 differentiation
Refactor duplicated code
Docs reflect bean id change from xsd:ID->xsd:string
Refactor Servlet 3 async support
moving unit tests from .testsuite -> .beans
DefaultTransactionAttribute stores descriptor (method identification)
Merge branch '5.1.x'
first cut of changes for 3.0.0.RC1
Add JdkIdGenerator and use it in SockJS client
Fix handling of required payload.
Polishing
Use supplier-aligned type information for FactoryBean type resolution
Make method in RequestMappingHandlerMapping protected
Rename WebClientOperations to WebClient
Added "Changes in version 3.0.0.RC2" section.
Add "-configurer" suffix to view configurer element names
Fix typo
Rename LogMessage.lazy(Supplier) to LogMessage.of(Supplier)
JTA 1.2 support, in particular for the javax.transaction.Transactional annotation
Polishing
Introduce before/after test execution callbacks in TestExecutionListener
Atom Feed HttpMessageConverter
Revised naming for prototype inner beans to avoid excessive unique name calculation
Convenient forType methods for ParameterizedTypeReference
sync reactor-netty
Added XStream CatchAllConverter
Polishing
Use an import instead of FQCN
Fix package cycle in @EnableSpringConfigured
Clean up warnings in the spring-test module
fixed typo (SPR-7265)
Polishing
XML constructor-arg element allows for specifying a constructor argument by name now, with target argument names read from the class file via ASM or from Java 6's @ConstructorProperties annotation (SPR-3313)
Polishing
Configure default SSL context in Netty RequestFactory
Fine-tune HTTP/RMI Invoker exception handling
Make HierarchicalUriComponents Serializable
Fix Javadoc formatting in ResourceHttpRequestHandler
Support initial delay attribute for scheduled tasks
Consistent license header
Remove duplicate Javadoc line from PathResource
Extract AbstractUriTemplateHandler base class
WebClientException should allow access to status code of the response
Refactor AbstractEncoderTestCase
Moved JacksonObjectMapperFactoryBean from web.context.support to http.converter.json
Polish Javadoc for JmsInvokerClientInterceptor
Remove obsolete references to @AliasFor in Javadoc for AnnotationAttributes
Delete dead code in AnnotationAttributes
added warnings regarding accidental usage of @Configurable on a managed bean (SPR-7216)
Fix  HttpUrlConnection DELETE without body
Upgrade to JPA 2.1+ and Bean Validation 1.1+; remove native support for Hibernate 3.6 and 4.x
ListenableFutureAdapter keeps propagating onSuccess/onFailure exceptions
@EnableWebFlux uses ServerHttpMessage[Reader|Writer]
URL Cleanup
Fixed javadoc warnings and revised FastByteArrayOutputStream code style
Collape ServerHttpMessage[Reader|Writer]
WebTestClient (server-less) setup accepts WebFilter's
Add first draft of IDEA code formatting
Polish Jackson2ObjectMapperBuilder/FactoryBean javadoc
Expand WebFlux docs with WebSocketHandler examples
Merge branch '3.1.x'
Introduced getBeanNamesForAnnotation method on ListableBeanFactory
Polishing
Polish StompDecoder and the new Buffering sub-class
Upgrade to Undertow 1.3.4.Final
Remove remaining Reactor event wrapping
Revised indexer implementation
Removed deprecated core.enums package
Polishing
Add getTargetDataSource to TransactionAwareCacheDecorator
Consistently pass param info to ServerWebInputException
Polish
Avoid explicit DecoratedObjectFactory setup in JettyRequestUpgradeStrategy
added info about the new web-struts module
Polishing
CustomBooleanEditor avoids potential NPE in case of allowEmpty=false
[SPR-7848] Improved readability, grammar, and formatting of the Container Extension Points section of the reference manual.
Add RenderingResponse integration test
Cache key classes implement Comparable and consistently provide a toString representation
SPR-6180 - Upgrade Apache HttpClient to version 4.0
Rename decodeOne->decodeToMono and readOne->readMono
Renamed getSupportedMimeTypes() in [En|De]coder
[SPR-5734] Created a javadoc.links preset to link in external javadocs
Support multiple Validators in DataBinder
Added proper synchronization and not-null check to SimpleMessageListenerContainer's doShutdown
Merge pull request #214 from glyn/SPR-9990
Polishing
revisions after spell check; tweaked text in section covering rollback rules
Disallow empty expression in @DisabledIf
Fix split package introduced by @EnableSpringConfigured
Polishing
Enable Java 8 source and target compatibility in Gradle build
Separate out web.server from http.server.reactive
Drop weaving support for pre-Servlet-3.1 servers
Polish caching components
MockMvcWebConnection stores cookies from response
Documentation
Consistent use of ClassUtils.forName instead of class.getClassLoader().loadClass
Anticipate reactor.test.TestSubscriber removal
CompositePropertySource allows for access to its nested property sources
Allow interceptors to add existing header values
Fix typo in reference docs
Improve Content-Length exception message
Remove useless imports
Refactoring in AbstractMethodMessageHandler
revised OXM package: no provider-specific exceptions anymore, etc
Polish "Add missing [ in toString of WebSocketMessageBrokerStats"
Fix package cycle
Removed EJB 2.x implementation class hierarchy (ejb.support package)
Make SocketUtils a concrete class
Merge branch 'SPR-9984' into 3.2.x
Add @MessageExceptionHandler
Polishing
Unwrap SpringValidatorAdapter (e.g. CustomValidatorBean) to native Validator
Remove unused import
Fix typos in Spring MVC chapter of reference docs
revised overview graphics to match new modules
Polishing
Improve diagnostics for invalid testGroup values
Task list getters explicitly check for null now
Add ResourceRegionEncoder
Improve multi-valued HTTP headers support
Add ReplyTo annotation
Object/FieldError stores source object as transient (not serialized)
Fixed javadoc references
Replace 'tropes' language (SPR-7339)
Remove javabuilder from spring-aspects .project
Fix wrong Maven dependency in pom.xml for validation and inject APIs
Polishing
Corrected minor errors regarding JDO, grammar, etc.
Merge branch '5.1.x'
Polishing
Consistent trace log messages and general polishing
Polishing
Review recent documentation and default servlet changes
Consistent getJpaDialect() narrowing (along with HibernateJpaVendorAdapter)
Add strictContentTypeMatching converter option
Added @Override annotations to core module
Further refactoring of ReactiveAdapter/Registry
Fix number parsing of @Scheduled attributes
Fix typo in asciidoc
Fixed Jackson2ObjectMapperFactoryBean class name in javadoc examples
Next Development Version
Polishing
Use Gradle 4.6's built-in support for the JUnit Platform
Resolvers for destination vars and headers
Polishing
ResponseEntity declared as Object in WebFlux controller
Next development version
Consistently declare @SuppressWarnings("serial") instead of dummy serialVersionUID
Added oxm module
SPR-7406 Improve documentation on handler method parameter type conversion.
Add permanent/temporary redirect to ServerResponse
Replace Promises.error->Streams.fail, concatMap->map
minor usage/grammar improvements in logging section
Aligned with refinements in 3.2.x branch
Consistent headers.getContentLength() checks
Reduce log level to DEBUG when @TELs isn't present
Upgrade to Gradle 3.2.1
revised Servlet 3.0 based StandardServletMultipartResolver for correct param/file distinction; added multipart content type and headers access to MultipartRequest (dropping the previous header access solution on MultipartFile); MultipartFilter uses a Servlet 3.0 based StandardServletMultipartResolver by default
doc updates
ContentVersionStrategy has non-blocking contract
Polishing
Consistently supply test name to @Parameters
Decode path vars when url decoding is turned off
Document @Bean 'lite' mode vs @Configuration
Rename webflux-client.adoc to webflux-webclient.adoc
DataBuffer fixes in View implementations
Polishing
Moved agent to instrument
Polish byte-range resource handling
Polishing
MockClientHttpRequest|Response support cookie headers
Header predicate option in AbstractRequestLoggingFilter
Upgrade to Gradle 5.3
RESOLVED - issue SPR-4783: OK, that wasn't it (reverted previous dumb change).  Scratch, scratch...
Tiles 2 support back for Spring 4.3 (to be eventually removed for 5.0 now)
404 rather than 405 or 200
moving unit tests from .testsuite -> .aop
Fix typo in ApplicationContext reference doc
Add interceptors for async processing
Delete unused import
SPR-2692 Update mvc chapter with URI template support in redirect: view names
LiveBeansView exposes aliases as well
Fix checkstyle warning
Validate if STOMP frame is allowed to have a body
Extract CompositeHttpHandler functionality
Polish CorsFilter Javadoc
Add ReactiveHttpFilter
Deprecate ClassUtils.isCglibProxy methods in favor of AOP-level checks
Polish
Introduce isExecuted() in MockClientHttpRequest
moving unit tests from .testsuite -> .context
added detectInterceptors compatibility check
Assign lowest priority to `/**` pattern
No nullability declarations in AOP Alliance sources
Consistent assertions for template method result vs servlet registration
SubProtocolWebSocketHandler provides protected decorateSession method
Fix punctuation in Javadoc
Add support of YAML
Upgrade to Gradle 4.7
Merge branch '5.1.x'
Support HTTP range requests in MVC Controllers
Polish
Added binder factory; simplified public binder api
Ensure RedirectModel is initialized
Support Model-related return values
MappingJackson2MessageConverter uses generic type
Fix batch operations sample in reference docs
Do not process conditional requests for non-GET
Polishing
Allow HTTP delete with request entity
Promote use of @PostConstruct and @PreDestroy
updated version to 3.0.RC1
Always specify charset for form data requests
ResponseEntity provides static "notFound()" convenience method as well
Polish
Ensure cast correctly included for OpPlus compilation
Update "What's new in Spring 3.1" re Hibernate 4.x
SystemEnvironmentPropertySource uses actual SecurityManager check and direct keySet access
Add ability to publish to S3 maven milestone repository for maven central style artifacts by adding slightly modified spring-build targets to publish-maven.xml
Avoid canonicalName call for already-seen bean name
Avoid synthesizable annotation creation for @Bean/@Scope processing
simplify lambda expression
Proper closing of resources
Re-enable ignored SecurityManager-related test
SpEL passes full collection type context to ConversionService (SPR-7410)
Scheduled/JmsListenerAnnotationBeanPostProcessor avoids needless re-scanning of non-annotated classes
Nullability fine-tuning and related polishing
Upgraded to XStream 1.4+; reworked XStream construction
MvcUriComponentsBuilder is aware of path prefixes
Moved tests over from testsuite to test
Avoid NPE in AutoProxyRegistrar when no attribute found
Support symbolic boolean operators for OR and AND
Polishing
Remove setExtractOldValueForEditor at DataBinder level (to be deprecated in 4.3.5)
Add an option to disable automatic addition of CORS header
MediaType throws dedicated InvalidMediaTypeException instead of generic IllegalArgumentException
ApplicationListenerMethodAdapter resolves order on construction
CommonsMultipartResolver explicitly converts FileSizeLimitExceededException
Fix remaining compiler warnings
Cope with generic methods during SpEL compilation
Add validation of HTTP method in form tag
replaced Commons Collections dependency with Spring-provided LinkedCaseInsensitiveMap; revised CollectionFactory and Spring Map implementations for consistency
LocalSessionFactoryBean clears default MetadataSources on reinitialization
Fix exception message
preparations for 3.0.5 release
Configurable locales in MockHttpServletRequest
Spring's default JPA persistence unit exposes package metadata as well (currently only supported with Hibernate)
Document exception handling and async support for test events
Add Glassfish request upgrade strategy
Deprecate JiBX marshaller
Update ejb and javax.resource deps in tx pom
Removed generated classes from repo.
Honor contract of @Repeatable in AnnotationUtils
Polishing
Support for Jackson's default typing via TypeResolverBuilder
Upgrade to reactor 1.1.0 snapshots
Suppress warnings and remove unused imports
HandlerMethod evaluates ResponseStatus annotation for early caching
Simplify exception handling in JsonPathExpectationsHelper
Polishing
Polishing
Final commit before the great 'stripdown'.  Used clover to determine coverage and added tests as necessary.
Polish the migration guide
Document @Enable* annotations
Class identity comparisons wherever possible
Use ResolvableType instead of raw Class in JacksonJsonDecoder
Polish javadoc
AbstractValueAdaptingCache subclasses may reuse NullValue.INSTANCE
Polishing
Fix minor issue in MockHttpServletRequest
Synchronize request init in AbstractHttpSockJsSession
Polish recent changes to Log4jWebConfigurer
Merge remote-tracking branch 'upstream/master'
Rename CorsProcessor#processRequest to process
Polishing
StandardEvaluationContext supports concurrent variable modification
Update SpEL test to reflect native float support
registered plain singletons will be fully matched according to their qualifiers; "systemProperties" bean is not considered a default match for type Properties anymore (SPR-5355)
Consider empty arrays as existent in JsonPath assertions
Merge branch '5.1.x'
Add MultiProtocolWebSocketHandler
Polish maven samples to xml language
Refactor Resource URL generation and Servlet Filter
Map arg resolver backs out if annotations present
Polishing
Minor changes to OXM chapter
Consistent use of LinkedHashSet for interfaces (since interface order may matter in subtle cases)
MockHttpServletResponse's getHeaderNames declares Collection instead of Set for Servlet 3.0 compatibility
added "repeatCount" bean property to Quartz SimpleTriggerFactoryBean
MVC docs polishing
Add test for calculateCapacity
Allow setting WSDL document as a Resource
Removed raw TopLink support
considerInterfaces should work without considerInherited as well
Refactor HTTP Range support with ResourceRegion
Restore compatibility with WildFly
No external locking for singleton advice/aspect beans
More qualified "request-id" header in WebTestClient
Raise JDBC driver feature baseline to JDBC 4.0+
Javadoc
Leverage kotlin-reflect to determine parameter names
Refactor SyncInvocableHandlerMethod
Model interface exposes getAttribute method (next to add/contains)
Prevent early bean initialization with @EnableCaching
Preparations for 3.2 RC2
Add resolveTemplate method to Groovy markup configurer
Polishing
Support CompletableFuture as alternative to DeferredResult in MVC
Ignore path parameters in request mappings
Improve speed of spring-test build
Log WebSocket connection issues at DEBUG level
JtaAnnotationTransactionAspect configured by default (in aspectj mode)
Jackson encoder and decoder should use provided mime types
Final preparations for 3.2 GA
Add JmsTemplate accessor in JmsMessagingTemplate
Polish
ConcurrentModel.addAttribute javadoc: null value not supported
Spring Cleaning in December
DispatcherServlet skips multipart resolution if error page exception attribute indicates MultipartException as root cause
removing unnecessary eclipse 'Project Facets' metadata
minor typo fixes
Update changelog
Polish Javadoc regarding default transaction manager
Declare InvocableHandlerMethod.getMethodArgumentValues as protected
Fix test for daylight savings glitch
Fix UriComponents.equals() method
Clean up database tests in spring-test
Deprecate adapter classes for async interceptors
Upgrade to HtmlUnit 2.19
moving .aop.aspectj.* unit tests from .testsuite -> .context
Fix failing CompositePropertySourceTests
Deprecate SqlXmlObjectMappingHandler
Consistent handling of null header values in HttpHeaders
Detect nested configuration classes even for empty outer classes
Removed BlockingSignalQueue in favor of PublisherSignal.
Introduce Freemarker/Velocity/TilesWebMvcConfigurer
Use ExtendedBeanInfo on an as-needed basis only
HttpEntityMethodProcessor lets entity headers override existing headers (again)
Polish
Fixed isMatchingFieldError to properly handle empty field name
Fix non-compilable example in mvc ref doc
Merge pull request #22 from cbeams/gradle
SPR-8289 Ensure BeanNameUrlHandlerMapping and default HandlerAdapters are never 'turned off' through the MVC namespaces
Add mock implementations of Http[Input|Output]Message
Merge branch '5.1.x'
further updates to .classpath / ivy files for javax.el
Leverage ZonedDateTime in HttpHeaders
refined WebLogic RMI descriptor to only mark 'getTargetInterfaceName' method as idempotent (SPR-8369)
Latest dependency updates (Undertow 1.2.12, WebJars Locator 0.28)
Support for reactive types in Conventions
polish
Polish Javadoc in abstract base test classes in the TCF
Upgrade to EhCache 3.1 and Jetty 9.3.10
Updating MySQLMaxValueIncrementer to not rely on MYISAM
Next Development Version
Consistent use of @throws instead of @exception
Polishing
Support @EnabledIf & @DisabledIf w/o loading ApplicationContext
Fix host+port resolution in ReactorServerHttpRequest
Update default pools size for SockJS scheduler
Update Javadoc in SqlScriptsTestExecutionListener
Fix issue in Callable processing interceptor chain
moving unit tests from .testsuite -> .aop
Refactored class naming to capture ui.binding system as a general PresentationModel framework; PresentationModel and FieldModel are the key API elements now
Upgrade to Tomcat 8.5.2
Release version 3.2.0.RC2
Introduce dedicated 'cache' subpackage in the TCF
Fixed manifest templates and pomx
Enforce use of ClassLoader.loadClass in case of temporary ClassLoader
GenericTypeAwarePropertyDescriptor implements equals/hashCode for proper lookups on IBM JVM 6
Correlated WebClient log messages
Improved Javadoc
Fix typos in Chapter 27 (SPR-7339)
Consistently use tabs rather than spaces
Use Class.getTypeName() where appropriate
Refactor PubSubHeaders, StompHeaders, MessageBuilder
Introduce execute(DataSource) in ResrcDbPopulator
Support selective filtering of error dispatches
Fixed getTypeDifferenceWeight algorithm in ReflectionHelper, and removed unused argsRequiringConversion storage
[SPR-5888] Upgraded to TestNG 5.9.0.
updated javax.el dependency to match the IDEA project file
Move spring-web-reactive classes to spring-web
Add support for sending private messages
fixed supported HSQL/H2 version range (SPR-6403)
Prevent unbounded retention of cancelled SockJS tasks
Introduce Servlet.fn
Revised JSR-303 references to include JSR-349 (Bean Validation 1.1) as well
Avoid temporary String creation in StringUtils.starts/endsWithIgnoreCase
Fix "Content-Type" and "Accept" header processing
FastByteArrayInputStream consistently returns -1 when no data available
Polishing
Fix package cycle in @EnableMBeanExport
Fix AbstractJackson2Encoder#canEncode
Eliminate inspection of annotations on core Java annotations
Add Castor XSD information to reference docs
Polishing
Only prefer JDK 9+ Lookup.defineClass API if ClassLoader matches
Add timeout async request handling to OSIV components
Mock Servlet request/response support Accept-Language
AbstractDriverBasedDataSource does not rely on Properties chaining anymore
CommonsMultipartFile removes mixed separator paths from original filename
Polishing
[SPR-8240] polishing the "Context management and caching" section of the reference manual and related Javadoc.
Clarified that CronTrigger never schedules overlapping executions
Add JSONP support to MappingJackson2JsonView
Correlated messages at HTTP adapter + WebSocket level
Polishing
URL Cleanup - Fix broken tests
Polish DefaultSubscriptionRegistryTests
Fixed type resolution for uninitialized factory-method declaration
Trim decoded SSE data
MockServerHttpRequest and Response set cookie headers
polishing .aop tests
Rename XMLHandler.java to XmlHandler.java
Allow greater flexibility for template method createDataBinderFactory
+ Eliminated support for @Extension methods for now
Update ContextLoaderUtils Javadoc due to recent refactoring
Added various XML helper classes, for use with OXM
Added extensive default converters for JSR-310 value types
Fix casing in spring mvc namespace attributes
moving unit tests from .testsuite -> .jms
Merge branch '5.1.x'
Nullability refinements (no IntelliJ warnings, fewer null checks)
Update view-resolver namespace
[SPR-8240] polishing
Use StringJoiner where possible to simplify String joining
AbstractApplicationContext logs initialization exception before trying to cancel refresh attempt
ignore for now
Support @Validated at method level for overriding validation groups
Start of REST documentation
Locale/ThemeChangeInterceptor alignment and javadoc polishing
moving example.scannable from .testsuite -> .context
Fixed EL resolution against static method with changing target class
Catch ASM ClassReader's IllegalArgumentException and turn it into a more expressive exception, hinting at the class file version
Consistently refer to 'default no-arg constructor' (SPR-7339)
Provide meta-annotation support in the TCF
Extract body population logic in w.r.f
Polish Javadoc in XStreamMarshaller
Expose WebSocket options for Tomcat/Jetty
Clarified Spring 4.0's dependency on JAX-WS 2.1+ / JAXB 2.1+ in javadoc
CORS-related refinements
FreeMarkerConfigurationFactory properly supports TemplateLoaders when recreating Configurations
Rename header for "orig" destination
Consistent type variable resolution for arrays/collections (in particular at field level)
Use ParameterizedTypeReference in public-facing WebFlux APIs
Revised supportedMethods null handling in HttpRequestMethodNotSupportedException
Support flash attributes on ResponseEntity redirect
remove antlr dependency
Reinstated tests for implicit aliases
Document SPR-9493 in the changelog
Update to latest reactor 2.0.1 snapshot
moved first para to chapter level and removed intro section
Polish CookieWebSessionIdResolver
Ref doc mentions SimpleTransactionScope next to SimpleThreadScope
Consistent Environment access in XML bean definition parsing code
Introducing GroovyWebApplicationContext along the lines of XmlWebApplicationContext and GenericGroovyApplicationContext
Polish Javadoc for JsonPathRequestMatchers, etc.
Updated to JPA 2.1 requirement
Fix SQL syntax error in jdbcTemplate update docs
Unit tests for custom profile annotations on configuration classes
Not exposing ApplicationContext on ConditionContext anymore
Check for Reactor Netty disconnected client errors
Consistently avoid close() call on Servlet OutputStream
added warning about annotated controller interfaces (SPR-6655)
Polishing
Add UpgradeRequestStrategy for WildFly/Undertow
POM maintenance
Add WebSocketHandlerInvoker class
Defensively handle ServletRequestAttributes casting in requestDestroyed callback
MethodValidationInterceptor excludes FactoryBean metadata methods
Call statement support for SAP HANA
Add methods for static resolution of @ExceptionHandler
Documentation revision for @PostConstruct/PreDestroy and @Required
CronSequenceGenerator.isValidExpression actually validates cron fields
Polishing
Jackson-based message converters do not log warning for serializer not found
Complete Javadoc for MessageHandlingRunnable
Comparators entry point with generically typed factory methods
Spring Expression Language docs
Always invoke Jackson serialization with AtomicReference cause
Add ForwardedHeaderFilter requestOnly
[Encoder|Decoder]HttpMessageWriter server support
Renamed XmlReader tests to XMLReader tests
polish
Add logging to randomly failing websocket test
polish
JmsResourceHolder checks for nested DataSource transactions as well (for Oracle AQ compatibility)
Support for encode() in UriComponentsBuilder
Allow Jackson builder modules configuration to be customized
Final preparations for 3.2.1
updated remaing 2.5.x JavaDoc reeferences to 3.0.x ones (SPR-6402)
Polishing
Introduce annotation to execute SQL scripts in the TCF
Remove references to -with-dependencies distribution
Polishing
Polish
Add getLastHandler to WebSocketHandlerDecorator
Refactored package structure and made some getValue() methods generic
Ignore performance-sensitive tests by default
Merge branch '5.1.x'
Optimized imports
SPR-7812 Add CustomRequestCondition, PatternsRequestCondition, and other condition related tests
ObjenesisCglibAopProxy defensively catches Throwable
[SPR-5964] Upgraded to TestNG 5.10
Fix typo in javadoc
Remove ContentTypeResolver from composite converter
Fix minor grammatical errors in AbstractBeanDefinition
Polishing
Polish Javadoc for TestContext
updated for the 3.1 M1 release
Use concatenation instead of torn StringBuilder::append chain
SPR-5327: update artifact ids
StompSession supports custom headers for UNSUBSCRIBE
Polishing
Polish spring-websocket code
Polishing
Change SockJS and Websocket default allowedOrigins to same origin
BeanNameAutoProxyCreator detects alias matches for specified bean names as well (SPR-6774)
Add checkNotModified support in ServerWebExchange
Fixed evaluation of "!" operator in case of multiple profile expressions
Assert status quo for finding annotations on bridged methods
updated to Hibernate 3.3 + Hibernate EntityManager 3.4 (requires SFL4J <= 1.5.3!) as well as OpenJPA 1.1
Merge pull request #1286 from trisberg/SPR-15107
StringDecoder shouldn't chop off strings randomly
final preparations for 3.0.5
fixed duplicate section ids
Polish: do simple clean-up
Introduced "spring.jdbc.getParameterType.ignore" property
Alerts test
Polish ComponentScanParserScopedProxyTests
Polishing
SPR-8020 Support UriComponentsBuilder as a controller method argument.
[SPR-8240] Added new "Mixing XML resources and @Configuration classes" section to the testing chapter.
Consistent treatment of proxy classes and interfaces for introspection
prepared for 3.0.5 release
Fix test name
DataSource adapters expose setCatalog/setSchema next to setUsername/setPassword
SPR-9056 Make DelegatingWebMvcConfiguration config callbacks not final
Fix memory leak for Jaxb2XmlEncoder
Support for "request parameters"
Fixed javadoc typo
Added sourcepath for aspectjweaver jar
Fix compile error
Fix URL decoding issue in reactive @RequestParam
Sneaked in test for covariant return type narrowing in a getter method
Merge pull request #451 from hupfis/patch-1
Polishing
PersistenceAnnotationBeanPostProcessor obtains default EntityManagerFactory via getBean(Class) algorithm
Revert .context to Hibernate Validator 4.1.0.GA
use more modern java API for empty collections
Added test deps
ClassPathResource.isReadable() returns false for content length 0
Polish whitespace
Remove trailing whitespace from source code
ServletRequestAttributes skips well-known immutable values when updating accessed session attributes
comments about tutorials
Set scoped proxy role to same role as target definition
Treat query param w/o "=" as empty string in HtmlUnitRequestBuilder
MethodHandles.Lookup.defineClass for CGLIB class definition purposes
Removed support for deprecated registerSharedEditor mechanism
added M2 section to changelog
ServletUriComponentsBuilder.java avoids NPE on scheme check
BindingResult support for constructor argument mismatch on immutable data object
Changed slf4j.jcl dependency from 1.5.6 to 1.5.3 for consistency with build.versions.
ASM-generated class names get interned for better memory allocation
DigestUtils processes InputStream with buffered read instead of full copy
Asset pipeline proposal.
Fix white spaces
Introduce @EnableLoadTimeWeaving
Fix typo in documentation
Ensure @Conditions consider super classes
[SPR-5895] Upgraded to EasyMock 2.5.1.
SpringBeanContainer is public for custom JPA configuration purposes
Polish "Align RdbmsOperation javadoc with jdbcTemplate defaults"
Refined logging for advisors which are currently in creation
Add ByteBuf leak detection @Rule
Only release rolled-back database savepoints during managed nested transaction
Constant HandlerNotFoundException
first cut at re-organizing the ORM chapter; moved outdated sections to new Classic Spring Usage appendix
Polishing
Move X-Forwarded-* tests to UriComponentsBuilderTests
[SPR-8240] Updating the "new in 3.1" chapter regarding new testing support; polishing the TestContext Framework section of the reference manual.
Upgrade to Gradle 1.1 GA
Polishing
Polish
Fix TLS detection in URLs for Netty Client RequestFactory
Update log settings for spring-websocket tests
Fall back on user in the Jetty UpgradeRequest
Polishing
Renamed ScheduledTaskRegistrarTest to ScheduledTaskRegistrarTests
BeanNameViewResolver ignores non-View beans
Rename SockJS session type to include "SockJs"
Ensure a consistent netty version
Dependency updates
Introduce @SqlConfig for common SQL script config
Introduce ListenableFuture to WebSocketClient
AsyncRestTemplate triggers no-output HTTP requests immediately as well
Ensure TestContextManager always tracks after-class exception
Support single quotes nested in double quotes in SQL scripts
updated .classpath files to reflect recent changes in ivy files; aspectj.weaver 1.6.2 -> 1.6.2.RELEASE
Add containsKey to ServletResponseHttpHeaders
Spring MVC supports reactive return values
[SPR-5145] Updated reference manual regarding upgrade to JUnit 4.5; additional improvements in the testing chapter as well.
Jackson-based message converters consistently check media type first
Added Apache Commons HTTP JARs to the Eclipse classpath.
Add NoHandlerFoundException to DispatcherServlet
polishing .beans tests
Fix getters to match setters in RMHA
Resolve minor 4.3.x deprecations in master
Avoid package cycle between beans.factory.annotation and b.f.support
LocalContainerEntityManagerFactoryBean's "persistenceUnitName" applies to "packagesToScan" as well; DefaultPersistenceUnitManager uses containing jar as persistence unit root URL for default unit (SPR-8832)
Move reference docs => src/reference
Fix typo in 3.2 migration guide
Revised exclusion of java.lang.Class properties
Polish URL Cleanup
Spring eval docs
Fix issue with SpEL in mvc namespace
Add HttpRequest.getMethodValue
Add DataBufferUtils.read w/ AsynchFileChannel
Introduce jdiff Gradle task
Copy cookies and hints in built ServerResponse
Add Test for LeakAwareDataBufferFactory
Read-Only HttpHeaders only created when necessary
Use bridge methods in ReflectiveMethodResolver
Introduce @EnabledIf support for JUnit Jupiter
Polishing
Write CharSequence instances to DataBuffers
[SPR-7849] revised the testing chapter based on internal review and new insight.
final preparations for 3.0.2
AbstractMarshaller avoids SAXSource workaround when processExternalEntities=true
Forgot a file
Latest ASM patches (fix for bug 317151 from ASM HEAD; ASM's 1.8 bytecode processing needs to be lenient with CGLIB 3.1)
Polishing
Use JUnit ExpectedException rule in AntPathMatcherTests
Revert inadvertent change to DefaultDocumentLoader
Consistent Ordered.LOWEST_PRECEDENCE declarations for default order
Lenient URI template encoding
SPR-6541: move spring repository placeholder into a profile (build) and the other repositories into another profile (legacy-build)
Polishing
+ add XML support for cache abstraction (cache-advice) - DRAFT
Polishing
Fix exception in AntPathMatcher for leading *
Updated spring-build to see new maven targets
Introduced assertions for bean accessor delegation in AbstractApplicationContext
Consistent implementation of AsyncListenableTaskExecutor
DataBinder tries ConversionService if PropertyEditor could not produce required type
no need to convert to array list with last zip signature
Add TODO re: FailOnTimeout.builder() & JUnit 4.12
Polishing the web integration sections of the reference manual.
moved Scope annotation to local test package
Consistently upgraded Apache HttpComponents usage to 4.2
Provide accessors to scheduled tasks
Fix Javadoc for CronSequenceGenerator
Use URLDecoder for query params in WebFlux
Add CorsFilter documentation
Add description for two exceptions which handled by DefaultHandlerExceptionResolver in reference document
Added castor and jaxb2 to the oxm build
MarshallingView should not close response OutputStream after copying to it
Ignore .idea
changed Servlet API dependency to provided (SPR-6284)
SPR-9079 Don't check for "POST" multipart request method arg resolvers
CharacterEncodingFilter provides convenience constructors for Servlet 3.0 style usage
GsonBuilderUtils for programmatic Base64 serialization setup; common Base64Utils class adapts between Java 8 and Commons Codec
Add ClientOptions support in ReactorClientHttpConnector
Do match message type
Polishing
Add ContentNegotiationManagerFactoryBean
Fix bug with custom RequestCondition
Support meta-annotation attr overrides in the TCF
revised EvalTag implementation
SPR-6268: Add proxy-target-class to <lang:groovy/>
First drop of SPEL
Refactor to lazy Environment creation where possible
Polish
Polishing
Remove FIXME on retain in ReactorServerHttpRequest
Restore local vars in JacksonJsonEncoder
Disable CORS credentials by default
FactoryBean object cache cleared on shutdown
Improve performance of StringUtils#trimWhitespace
Refactor detect-split-packages Gradle plugin
Upgrade to SnakeYAML 1.18 (with updated duplicate key tests)
Polish WebSocket namespace
Avoid JMSException in listener execution
ImportRegistry as a package-visible top-level interface which can easily be shared within the package
Polishing
Lenient date parsing in HeadersResultMatchers
Add missing @since tag
Fix a package tangle between SockJS support and transport packages
BindingJacsonConverter/View -> MappingJacksonConverter/View
Avoid creating message arguments to Assert.isABC calls
revised BeanTypeDescriptor into core PropertyTypeDescriptor; consider method annotations for return type (SPR-6979)
Switch BufferingStompDecoder to decoration
Replace stream with loop in RequestCondition's
Return exception from convertJmsInvokerAccessException()
FactoryBean type check logs currently-in-creation exception at debug level
Support for populating model attributes through data class constructors
Consistent ordered list access and lazy streaming for ObjectProvider
Polishing
SystemEnvironmentPropertySource uses regular property names check instead of optimized Map lookup (for defensiveness in SecurityManager scenarios)
Revised scheduling lifecycle integration
Move spring-build-junit into spring-core
Adding null check for username being null.
Fix init order issue in RequestMappingHandlerMapping
Fix JUnit imports in SourceHttpMessageConverterTests
further re-working of the ORM chapter
StreamUtils.emptyInput() for consistent empty InputStream exposure
revised default converters; renamed ConverterRegistry's addGenericConverter to addConverter
Support merging custom TELs with default TELs
Moved over JPA exception translator from Roo
Fix [deprecation] compiler warnings
util:properties supports multiple resource locations and ignore-resource-not-found
Temporarily fix RxJava at 1.1.1 to avoid hanging tests
Removed JSTL-related errors from petclinic search and show JSPs
Related polishing
Suppress deprecation warning in StatusResultMatchers
SPR-6394
Require JUnit 4.12 or higher in the TestContext framework
Support for custom global Joda DateTimeFormatters
Pointcut checking directly against superclass in case of CGLIB subclass
Ensure HTTP classes don't close streams
Support Jackson based XML serialization/deserialization
constructor arguments can be overridden by name in child bean definitions (SPR-6463)
Fix broken test in AnnotationUtilsTests
Add exception-handler attribute support for AspectJ
Polish
Improve memory allocations when substituting named parameters.
Polishing
Avoid NPE for anonymous SqlParameter in CallMetaDataContext
RESOLVED - issue SPR-6366: Cannot import bean definitions using classpath*: resource location 
IN PROGRESS - issue SPR-5599: Hook @Configuration class processing into <context:component-scan/> and <context:annotation-config/> through AnnotationConfigUtils#registerAnnotationConfigProcessors 
Upgrade build to Gradle 3.0
Avoid reference to HandlerMethod class in ServerErrorException
Deprecate HibernateJpaSessionFactoryBean (against Hibernate 5.2)
Only register Date converters with global format
Revert "Manage asynchronous EventListener with replies"
EQ/NE do not fail in case of a Comparable mismatch and apply a specific CharSequence equality check
JSR-330 etc
ScheduledAnnotationBeanPostProcessor falls back to "taskScheduler" bean by name
naming improvements from mark fisher code review
Add link in jsp tag library
polish
Add missing package-info files for common packages
Fix typo in Javadoc for UnsupportedMediaTypeStatusException
+ polishing .beans tests
Change converter ordering in message broker config
Expose mapped handler as an exchange attribute
Deprecate CommonJ scheduling in favor of JSR-236 Concurrency Utilities
Defensive initialization of AsyncXMLInputFactory
Merge branch '5.1.x'
Actually upgraded to Gradle 1.11
Clarify the use of sessionTransacted
Polishing
Fix issue in ContentNeogitatingViewResolver
Update Apache license headers for moved files
Support ListenableFuture on @RequestMapping methods
Updated Quartz version range in javadoc
Polish PathPattern parser (including package change to web.util.pattern)
Moved over initial version of core bundle
Factored out "suppressGetenvAccess()" method
overhaul of support package arrangements; added missing package-info files
Resolve absolute resource links in ResourceTransformers
Update section on exception handling MVC chapter
Polish: redundant pairs of parentheses should be removed
Polish Javadoc for TestContextManager
SpEL performs String->String type conversion even within concatenated String
Polish AnnotationAttributes[Tests]
Polish MockServerHttpRequest|Response
generic converter revising
Compatibility with JOpt 4.6
Use DataBufferUtils.compose and remove writeAggregator
package-info for repackaged libraries (and other polishing)
Fix `@Configuration` javadoc typo
Polish STOMP codec
Rename configureWebClient() to modifyWebClientInternal() in HtmlUnit support
SPR-7186 Added section on generic advice parameters
Refactored CodecConfigurer creation for clearer subpackage interdependencies
Add Javadoc
Reduce code duplication in MergedSqlConfig
Explicit notes on programmatic Executor setup in @Bean methods
Introduce JUnitTestingUtils to reduce code duplication
Ensure result ready in asyncDispatch in MockMvc
moving .test.* unit tests from .testsuite -> .test
Moved tests over from testsuite to core
Added tiger classes of core bundle
Polishing
Move RequestPath to parent server package
+ updated petclinic dependency metadata from junit 4.4->4.5; servlet 2.4->2.5
final preparations for 3.1 RC2 release
Propagate EvaluationContext from LiteralExpression
Add ImmutableMessageChannelInterceptor
Polishing
URL Cleanup - fix undesirable code change
Fallback to ClassLoader.defineClass for Lookup.defineClass LinkageError
SPR-7071
Correctly parse property name in path "map[key[foo]]"
Introduced ResponseEntity, for access to the response status code
Merge branch '5.1.x'
Retain order of active profiles in the TCF
Use Supplier<String> support in Assert in spring-test
SPR-6752 - RestTemplate throws IllegalArgumentException when HTTP status is not in the HttpStatus enum 
Revert "Increase randomness in SocketUtils"
Add option to always append 'must-revalidate'
Increase supported aspectj version 1.5.4 => 1.6.8
Publishing changes
Upgrade to latest Checkstyle DTDs
Segregate add'l long-running and performance tests
Refactor relative redirect filter support
Allow "ws" and "wss" for isValidCorsOrigin checks
Support same user connected to multiple servers
Add ability to customize message channels
Add additional test for daylight savings glitch
ForwardedHeaderFilter handles query+fragment correctly
Sync with latest reactor netty changes
Move WebSocketExtension to top-level package
Fix typo in reference docs
SPR-6717: Added support for database destroy scripts
Introduce LoggingResultHandler in Spring MVC Test
SPR-5619 - (OpenSessionInViewTests, ClassUtilTests fixed)
Move ResolvableMethod
Polishing
JsonEOFException is wrapped as DecodingError
Consistent trace logging in PathResourceResolver
polishing .aop tests
Add ResourceTransformer and CSS link implementation
Add SubProtocolErrorHandler
SpringValidatorAdapter allows for custom field name resolution
Deprecate HttpStatus codes 419, 420, 421
Add @SessionAttribute with Servlet-based support
Applicable commons-logging excludes for libraries (HtmlUnit, Castor XML, Apache HttpClient)
Polishing
[SPR-8030] AbstractJUnit38SpringContextTests and AbstractTransactionalJUnit38SpringContextTests are now officially deprecated.
Fix test failure
Remove outdated references to ContextLoaderServlet
Polishing
Polishing
Upgrade JarJar to version 1.3
Support comma-separated X-Forwarded-Proto
Add ServerSentEventHttpMessageReader
Add headers in InterceptingClientHttpRequest
Consistent nullability for array/collection input parameters
[SPR-6821] Removed lingering reference to StandardScopes.
moving unit tests from .testsuite -> .context
Option to disable logging request details
Avoid duplicate Accept header values in RestTemplate
change from SpelMessages to SpelMessage. Changed exception getter to getMessageCode() from getMessageUnformatted
Checkstyle updates from ASM master
Drop native OpenJPA support
Introduce messaging package
ClassPathResource.isReadable() checks InputStream (for jar directories)
Latest dependency updates (EhCache 2.9, Joda-Time 2.5, Jackson 2.4.3, Tiles 3.0.5, Tomcat 8.0.14, FreeMarker 2.3.21)
Support OkHttp as (Async)ClientHttpRequestFactory
Consistent support for last-modified argument as Instant/ZonedDateTime
Configurable back off for listener recovery
Consistent support for CompilationCustomizers as well as custom CompilerConfiguration
URL Cleanup
Fix unused type compiler warnings
FunctionReference's method field is volatile
eliminating all unnecessary artifacts from .testsuite
Revert "Add initial cut of expanded resource handling"
Minor changes to fix typos
Fix expected and actual argument order
further fixes for 3.0.5
CachedIntrospectionResults.clearClassLoader(null) removes cached classes for the system class loader
Fix references and typos in Spring MVC Test Javadoc
Introduced OptionalValidatorFactoryBean for scenarios where the JSR-303 API is present but no Bean Validation Provider is available (used by the MVC namespace)
Update to Gradle 1.6
Introduce alias for 'value' attribute in @ResponseStatus
Document annotation-config / component-scan tip
Improve Jackson codecs documentation
Polishing
Add HttpRange tests, set Accept-Range header, polish
Consistent use of LinkedHashMaps and independent getAttributeNames Enumeration in Servlet/Portlet mocks
Split destination cache into access vs update
Polishing
SPR-6855
compatibility with Hibernate 3.5 final
polishing
Polish SimpUserRegistry related classes
Fix Javadoc in ContentResultMatchers
Polishing
Remove deprecated constructors in WebSocket config
RESOLVED - issue SPR-6038: HSQLDB+Quarz using data source causes "Unexpected token: FOR in statement " exception 
mvc:tiles-configurer supports preparer-factory and definitions-factory
Support varargs for DomUtils.getChildElementsByTagName
removed Hibernate EntityManager 4.0 dependency since it is not needed for compilation and not for standard runs of the test suite either
Create SockJS ThreadPoolTaskScheduler extension
Add StringToUUIDConverter
SPR-7416
Fix ResourceUrlProvider path check in getForRequestUrl
SPR-6885
Allow file locations for resource handling
Add method for HTTP PATCH in MockMvcRequestBuilders
Add "mvcUrl" function to Spring tag library
introduced BeanDefinitionRegistryPostProcessor extension to BeanFactoryPostProcessor; @Configuration classes support definition of BeanFactoryPostProcessor beans as well (SPR-6455, SPR-6611)
HandlerExecutionChain prevents re-adding the interceptors array to the list (and declares varargs now)
Suppress warnings in Gradle build
Defensively uses JDBC 3.0 getParameterType call for Oracle driver compatibility
Added XSDs and namespace handler files.
Improve WebFlux Protobuf support
Removed dm Server as targeted runtime for petclinic
Apply new ResponseStatusException hierarchy
Moved tests over from testsuite to core
Polishing
Introduce JSON streaming support
Polish
moved some misplaced JPA sections
POLISH ARGUMENT RESOLVERS AND RETURN VALUE HANDLERS.
Polishing
Polish SPR-11963
Refine BrokerAvailabilityEvent behavior
refined TypeConverterDelegate's ConversionService exception handling
Add Basic Authentication Consumer
Refactor SockJS code
Increment version to 3.2.1.BUILD-SNAPSHOT
Updated spring-build
Removed references to deprecated queryForInt method from documentation
Merge branch '5.1.x'
Clarified role of postProcessAfterInstantiation
Clean up warnings in spring-test
Fix [cast] compiler warnings
Initial support for JSR-354 Money & Currency
EhCacheFactoryBean calls CacheManager.addCache before setStatisticsEnabled
Hibernate etc
Add RFC-5681 support to CacheControl
Merge branch '5.1.x'
Move ResolvableType from HttpEntity to PublisherEntity
Async annotations on interface methods with CGLIB proxies
Revise ServletUriComponentsBuilder javadoc
Moved tests from testsuite to jdbc
marked JBoss VFS dependency as optional (SPR-6127)
Delete trailing whitespace in XML files
Remove javadoc reference to unsupported FieldInterceptor
data binding system polish; package improvements
@Transactional qualifier value matches against @Qualifier annotations on @Bean methods as well (SPR-7232)
Fix typo in ApplicationContext reference doc
Update changelog
regressions
Polishing
Resurrected requestScopeTests.xml from revision 573
Added tests for ExecutorBeanDefinitionParser.
Update links to issue tracker
Intermittent MBeanServerFactoryBeanTests failure
Decode resourcePath for classpath locations
General defensiveness about the bootstrap ClassLoader (i.e. null ClassLoader)
moving unit tests from .testsuite -> .beans
Polish
Expand static resource handling mechanism
Ensure async Callables are in sync with the call stack
Align caching AspectJ configuration
Avoid synthesizable check for common annotation types
spring-jdbc xsd initial commit; includes embedded-database tag
Fixed order determination check to only kick in for actual configuration candidates
DefaultLifecycleProcessor properly handles count for dependent beans
Polish Javadoc for MutablePropertySources
Add support for WebSocket Protocol Extensions
Move remaining JAXB2 test files from core to http
SpringWebConstraintValidatorFactory for use with validation.xml
Avoid proxy replacement for generic return type signatures
Guard against invalid paths in ResourceUrlProvider
Throw exception if TxMgr cannot be retrieved for @Transactional test
renamed to MappingContext since no spel dep
Allow meta-annotations to override attributes from their parent
Improved SessionLocaleResolver documentation
Upgrade to Castor 1.3.2
since 3.0; lifecycle pkg
Expose DefaultSubscriptionRegistry's cache limit through SimpleBrokerMessageHandler and MessageBrokerRegistry
Empty lists declared with element type (for javac to accept it)
Added jaxb2 and castor tasks for Ben to play with.
Support for generics-based events
DefaultPersistenceUnitManager etc
Polish WebSocket Java config
Improve logging of registerScope
Polishing
Polishing
Fix typo
Polish Javadoc for MergedSqlConfig
Upgraded to Commons FileUpload 1.3 and JSF 2.1, removing deprecated JSF 1.1 VariableResolvers
Fix reserved set definition according to appendix A of RFC 3986
FormTag skips rendering of hidden fields in case of empty Map
AbstractTraceInterceptor provides logExceptionStackTrace flag and writeToLog delegates
Polishing
polishing
Introduced GuavaCacheManager as an alternative to ConcurrentMapCacheManager
Fix SimpleKey equality with array argument
StandardTypeConverter initializes default ConversionService against volatile field
Move QueryTimeoutException to spring-tx
WebSessionStore updates lastAccessTime on retrieve
Make AbstractHandlerMethodExceptionResolver an abstract class.
Quartz ResourceLoaderClassLoadHelper explicitly falls back to classpath lookup
Merge branch '5.1.x'
Timeout exceptions as RuntimeExceptions
Next Development Version
Fix issue in simple broker with peer-to-peer messages
Adapted recent tests to pass on Windows
Refactoring and repackaging
Polish Property class
Add WebSphereRequestUpgradeStrategy
Improve logging in TransactionalTEL
Polish "Refactor duplicated code"
Polish whitespace and formatting
HttpHeaders.writableHttpHeaders properly handles HttpHeaders.EMPTY
AnnotationAwareOrderComparator uses DecoratingProxy interface for target class introspection
QualifierAnnotationAutowireCandidateResolver matches regular bean name for FactoryBean dependency type as well
Support opaque URIs in UriComponentsBuilder
Upgrade to Reactor 2.0.8
SPR-6819
Polish CodecConfigurer support classes
Add new WebTestClient header assertions
Add missing text to CachingResourceTransformer Javadoc
Protect against '//' in UriComponentsBuilder
SPR-9085 Correct typo.
Polish contribution
Add space before cookie attributes
Fix a typo in RouterFunctionDsl Javadoc
mostly changes to Preface and Introduction chapters
Polishing along with backports to 3.1.4
Polish async request processing
Polish: Lambdas should be replaced with method references
Corrected typos and cleaned up DocBook structure.
Polishing
Document MVC Java config side-by-side with the MVC namespace.
@RequestPart supports java.util.Optional
Fix issue with default executor for broker channel
org.springframework.spring-parent can now be imported into Eclipse
WebFlux supports HTTP HEAD
added explicit package imports for H2 and HSQLDB
Defensive URL cleaning (preserving the original URL if possible)
SPR-7470
AbstractBeanFactory.markBeanAsCreated() reliably clears merged bean definition first
Move response status processing in InvocableHandlerMethod
Fix a few typos
Polishing
SPR-8898 Allow match by trailing slash in RequestMappingHandlerMapping.
Add InterceptableChannel
Polishing
Restore multi-page and PDF reference documentation
Support strict URI variable encoding
Polishing
Support for @RequestPart with reactive type wrapper
Add auto-startup support for JmsListenerContainerFactory
Enrich TypeMismatchException for controller method args
MarshallingView explicitly skips BindingResult when searching for a model object
Adding additional project information to POM.
Uncomment test following fix in reactor-netty
MBeanExportConfiguration's SpecificPlatform properly calls afterPropertiesSet
Allow class-relative resource loading in GenericXmlApplicationContext (SPR-7530)
polish
Polishing
refactoring .testsuite .aop.aspectj tests in preparation for migration to .context
Proper JCache metadata caching on non cache methods
Hoellereasymock --> Hoeller
Fix regression with binding and validation
Restrict ETag generation in ShallowEtagHeaderFilter
compile time issue
Added note on EhCache 2.1+ as recommended version
Clean up warnings in SampleAsyncTests
Polish ForwardedHeaderFilter
Enforce JDK version on CI server
Polishing
updated CustomEditorConfigurer example to recommended style (SPR-5971)
polish
SPR-8334
Polishing
Remove trailing whitespace in Java source code
ServerRequest.path() should return raw path
ContextLoader properly detects pre-refreshed WebApplicationContext
Add tests for SPR-15777
Polishing
UrlResource applies StringUtils.getFilename against cleaned URL path
Updated build settings
[SPR-5824] Removed references to StandardScopes from the reference manual; updated examples accordingly; corrected typos; etc.
Polish Javadoc for MergedContextConfiguration
Accept empty Content-Type header

Fix timing issue with obtaining async result
SPR-7009: TransactionInterceptor now extracts ultimate target class before evaluating @Transactional metadata to accommodate double-proxying cases
Clear global resources reference from HttpResources
Rename CorsConfigurationMapping to UrlBasedCorsConfigurationSource
Fix cyclical package dependency
update STOMP support to reactor-netty 0.6
Publish binding event for replaced attributes in MockHttpSession
Use alternative UUID strategy in MessageHeaders
Revert "Merge branch 'SPR-10130' into cleanup-master"
Add StatusAssertions.isForbidden
[SPR-5887] Updated documentation regarding upgrade to JUnit 4.6.
Polish Undertow reactive server support
Avoid Scope.registerDestructionCallback for inner beans in case of scope mismatch
SpringJUnit4ClassRunnerAppCtxTests now verifies seamless support for using @Inject in addition to @Autowired, etc.
Polish Javadoc for Groovy bean support classes
Provide hierarchy traversal support for getBeanNamesForAnnotation
MethodValidationInterceptor falls back to invocation attempt with resolved bridge method (for Hibernate Validator 5.2 compatibility)
Polish: replace the synchronized class "Stack" by an unsynchronized one such as "Deque".
Update .core pom with jopt dependency
Clean up warnings due to removal of legacy Jackson support
HibernateJpaVendorAdapter and LocalSessionFactoryBuilder enforce Hibernate 5.2's connection handling mode DELAYED_ACQUISITION_AND_HOLD
Relax generic type detection for ResponseEntity
Upgrade to ASM 5.1
Add HttpHeaders#setAcceptLanguageAsLocale(Locale)
polishing and formatting
JMS annotation-driven endpoints.
Add onTimeout() and onCompletion() callbacks to ResponseBodyEmitter
AbstractBeanFactory consistently guards add/remove operations against alreadyCreated Set
Support for global separator in JDBC namespace
removed unnecessary JTA dependency
Merge branch '5.1.x'
AnnotationUtils favors local composed annotations over interface annotations and consistently logs introspection failures via lazily initialized logger
fixed scheduling tests
Allow default settings of a custom HttpClient to apply
Fix issue with "redirect:" when a media type is present
XStreamMarshaller supports stream directly
Force lazy-init to false when parsing scheduled:task
Revised common validation methods in AbstractMessageConverterMethodArgumentResolver
Support encodeUrl mechanism via ServerHttpResponse
Polish Conventions
Fixed SPR-5918. 
Updating Eclipse classpath to reflect new dependencies on mortbay resources.
Refactor ComparatorTests into separate classes
Add decorators for ClientHttpRequest & Response
Update MockMvcConfigurer support
Fix sniff task warnings
Fix empty URLs handling in ResourceUrlEncodingFilter
Additional configuration classes get detected when imported through XML or registrars
separated interface from impl
SPR-6464 Update reference doc with FlashMap and RedirectAttributes information.
Fix typo
Post-processors ignore AopInfrastructureBean (includes ScopedObject)
SPR-3771
Test for multi-character delimiter
Remove qetQueryParams from ServerHttpRequest
Handle correctly * in CorsConfiguration#combine() other parameter
Consider @Import classes as lite @Configuration
Polish Forwarded header support
Log warning if @RequestMapping method has no explicit mapping
Add JdbcTestUtils.deleteRowsInTableWhere method
Polish validation chapter program listings
Polishing
Polish
SPR-8205 added support for a 'trigger' attribute (bean ref) on scheduled-task elements
Add more aggressive annotation element filtering
Introduce 'value' alias for 'attribute' in @AliasFor
Add missing (empty) source folders
SimpleMetadataReaderFactory is capable of resolving inner class names with dot syntax now (analogous to ClassUtils.forName)
Polishing
Fix outdated Javadoc in the TestContext framework
Rename EnableMvcConfiguration->EnableWebMvc, refine method names in WebMvcConfigurer, fix issue with MappedInterceptors
Stream custom types in Jackson2JsonEncoder
moving jmx.* unit tests from .testsuite -> .context
GenericSqlQuery configured with RowMapper instance
Fix conversion of Message<?> payload for replies
Consistent use of JDK 7 AssertionError with root cause
Correct typos (#2018)
moved commonsPoolTests.xml back from .aop -> .testsuite
Introduce test for invalid @CrossOrigin.allowCredentials()
Introduction of PooledDataBuffer
Ignore external resources in CssLinkResourceTransormer
Commit actions are (properly) deferred
Make resolvePropertyName available to subclasses
Added schema version to test XML config file
Polish ConversionService tests
final touches for 3.0 RC1
Add cookies to ClientHttpRequest/Response
Polishing
Avoid deadlock between SockJS heartbeat and XHR polling
Refine @EnableWebFlux docs for functional endpoints
Polish Javadoc for abstract XLSX views
Merge branch '5.1.x'
Polishing
preparing for RC1 release
Objects with multi-threaded access should not lazily populate a hash field
Improve info on use of @Controller's with aop proxying
Polishing
Add early STOMP/reactor support
Polish annotation utility tests
adding eclipse project meta-data, .classpath file is based on dependencies listed in ivy.xml
Fix warnings due to unused import statements
Ensure Undertow 1.1 compatibility
Rename @CacheDefinitions => @Caching
Raised source and target compatibility to JDK 1.6
Revised imports in tests (org.jetbrains.annotations.NotNull etc)
Refactor location of MockServerHttpRequest/Response
DefaultResponseErrorHandler detects non-standard error code as well
TargetSource.getTarget() is nullable again (for compatibility with MethodInvocation.getThis)
Support inferred base package for @ComponentScan
Polish
Introduce @EnableAspectJAutoProxy
Introduced getFlashMapsMutex template method and optimized SessionFlashMapManager's locking
Rename classes and methods containing "WebReactive"
LocalValidatorFactoryBean supports custom ValidationProviderResolver
Allow interceptors to add existing header values
Resolve async model attributes in AbstractView
Define JCache aspect
QualifierAnnotationAutowireCandidateResolver calls BeanFactory.getType defensively
Fix overridden methods nullability
Add flag whether to create HTTP session
EhCacheFactoryBean does not call set(Sampled)StatisticsEnabled on EhCache 2.7/2.8
ResponseEntity's headers(HttpHeaders) accepts null value
Remove dependency-check coverage from reference docs (SPR-7303)
Update JettyWebSocketSession
Polish AbstractServerHttpResponse
SPR-6492
Polishing
Add custom deserializers support to AbstractJackson2Decoder
Polish changes from pull request #205
Update package structure
Add encoding for the default action in FormTag
final refinements for 3.1 GA
Restore GRADLE_OPTS from wrappers
SPR-8364
Add an option to set an Origin whitelist for Websocket and SockJS
Polishing
Add support for removeOnCancelPolicy
Avoid unnecessary synchronization in ContextCache, plus forward-ported polishing
Polishing
SPR-6236: Reintroduce Struts support
Add missing [ in toString of WebSocketMessageBrokerStats
Add MessageSendingOperations for JMS
Moved tests from testsuite to web.servlet
Documented units for send-time limit and buffer-size limit
Implement java.io.Flushable wherever applicable
RESOLVED - issue SPR-5917: DataSourceInitializer and namespace support for creating and populating databases 
WebFlux HandshakeInfo exposes the remoteAddress
Polishing
Polish tests
Renamed 'rx' package to 'reactive'
Polish RequestMappingHandlerMappingTests
Add ClientRequest attributes
BindingResult does not hold on to ConversionService when serialized in session
Upgrade to Reactor 2
YamlPropertiesFactoryBean consistently exposes String values
Polishing
Add missing StatusResultMatcher for HTTP Status 451
Refactor async result handling in Spring MVC Test
Lookup method definitions can be overridden in child beans
Support SQL exception translation for MSSQL 209
SimpleAliasRegistry logs info message for alias overriding
Option to preserve publish order
moving unit tests from .testsuite -> .test, .web.servlet
RESOLVED - issue SPR-6365: spring-jdbc.xsd script element claims resource patterns can be used for any SQL resource location but this is only supported for initialize-database tag 
Moved log4j config to test tree
polishing .beans tests
Optimize SystemEnvPropertySource when possible
Initiate structure for 4.3 XSDs
Consistent static final logger declarations
Rename Configuration to StrategiesSupplier
Moved tests from testsuite to context
Polish
Next Development Version
[SPR-5798] fixed typos
Improve Javadoc in SpringServletContainerInitializer
Fix potential security risk when using Spring OXM
Revised validation javadoc, plus protected validate/isBindingErrorFatal template methods
Aligned class name quoting with ConversionFailedException
Include attribute/session name in assertions in RequestResultMatchers
Sanitize duplicate slashes in request path
Support nested double quotes in SpEL expressions
Call ConversionService for null SpEL values
StatementCreatorUtils avoids direct calls with SQL type argument in case of Types.OTHER
Fine tune WebFlux server logging verbosity
Upgrade to JUnit Jupiter 5.0 M5
Fall back on default server response status code
Update copyright header
Refined TemporaryLobCreator null handling (from 4.3.x)
Fix user destination parsing in simp messaging
Improve StringDecoder.
initial preparations for 3.0.1 release
UrlResource applies StringUtils.getFilename against URL path
Open up TestPropertySourceUtils for public consumption
Polish DefaultUriBuilderFactory
Polish spring-websocket
Moved tests over from testsuite to core
Revised AbstractCacheManager for consistent locking when caches get added
Refined tests for StringUtils.starts/endsWithIgnoreCase
AspectJExpressionPointcut defensively catches exceptions thrown from ShadowMatch.matchesJoinPoint
Polishing
Fix checkstyle issues
Framework build compatible with JDK 9 (even with -target 1.9)
Polishing
Polishing
refactored HTTP support into top-level package "org.springframework.http"; revised RestTemplate facility in package "org.springframework.web.client"
Merge branch '3.2.x'
Exceptions thrown from @ExceptionHandler methods logged at warn level (instead of debug)
updated code examples with generics; took out Java 1.4 references; polished
Polishing
Merge branch '3.1.x'
Moved tests from testsuite to web.servlet
Polish
Improve async request timeout handling
Support {/...} patterns in UriComponents(Builder)
Defensively handle DatabaseMetaData.getConnection() returning null
Upgraded to Jackson 1.9 (raising minimum to 1.8+) and 2.2
Fix minor logic error in SocketUtils
spring 3 mvc namespace whats new 
ResourceHttpMessageConverter reads Content-Disposition header to expose filename through Resource
Bean class name may contain SpEL expression for late resolution
Add MediaType constants for application/pdf
Explicit note on Java deserialization
ResourceUtils.useCachesIfNecessary() not correct handle JNLP connections
Polishing
Delete unused imports in spring-web
Spring TestContext Framework autowiring tests now include an explicit test for the @Autowired-@Qualifier combination.
Polish JacksonJsonDecoder
Removed Commons Lang references
Remove duplicate separators when combining paths
Change resource handler XML Namespace
Support for XSSFWorkbook and SXSSFWorkbook (xmlx format; POI 3.9+)
Revert most SPR-13100 changes since SPR-13267 was a better fix
FactoryBean, BeanPostProcessor and HandlerInterceptor variants declared with default methods
Initial changelog for 3.2 RC1
Selectively force encoding in CharacterEncodingFilter
ResourceHttpMessageWriter refactoring
Require Undertow 1.3.5+, Tyrus 1.11+, Jetty 9.3+, Tomcat 8.5+
Polish
Add test case for multivalue x-forwarded host header
MimeType parsing properly handles quoted semicolons
Recognize wildcards in media types with a suffix
Merge branch '5.1.x'
Polish MockCookie contribution
Deprecate pre 3.1 @MVC support classes
BasicAuthorizationInterceptor belongs to http.client.support
Publishing license and notice files
Add request handling infrastructure
Polishing
Remove workaround for Reactor Netty #171
Improve performance of StompEncoder
Polish
Fix PathPattern comparator result for wildcard suffix usage
Polishing
Improve static resource path check
prepared for 3.0 GA release
MappingJackson2JsonView/MessageConverter calls non-deprecated Jackson 2.1+ createGenerator API
Deep BeanCurrentlyInCreationException check in getTypeForFactoryBean
added @Async annotation, AsyncExecutionInterceptor, AsyncAnnotationAdvisor
Merge branch '5.1.x'
BeanValidationPostProcessor validates singleton target behind proxy
ResolvableType-based type matching at the BeanFactory API level
Rename BodyInsertor to BodyInserter
Polish JRubyScriptTemplateTests (case sensitive issue)
Introduce RenderingResponse
Refactor use of TaskScheduler in WebSocket Java config
SelectTag consistently checks specified 'multiple' attribute now, never falling back to forceMultiple in case of user-provided value
Cleanup of duplicate semicolons
Polishing
further tweaks on logging section
Polishing
Set Jackson DEFAULT_VIEW_INCLUSION property to false by default
Add required flag to @RequestBody
SPR-6972: failed attempt to reproduce issue
Add order attribute to MVC ViewResolver config
Moved tests over from testsuite to beans
Fix RxNetty tests by finding a new port for each test
Sort candidate @AspectJ methods deterministically
Merge branch '5.1.x'
Enable cookie_needed by default in SockJS service
Refined Jackson configuration enhancements
Polishing
Polishing
Cache ASM metadata at the context level (if supported)
CachedIntrospectionResults uses putIfAbsent where possible (for minimal write locking)
Polish: lamdbas containing only one statement should not nest this statement in a block
Polish
PropertySourcesPropertyResolver does not log retrieved value by default
Merge branch '5.1.x'
StringUtils.commaDelimitedListToSet/removeDuplicateStrings preserves original order
Release DataBuffers in FreeMarkerView
Add a link to Spring Reactive Playground
Clean up warnings in spring-jms
Add SockJS path detection
ConcurrentMapCacheManager recreates caches in case of setAllowNullValues change
Make CommandLinePropertySource enumerable
Polishing
JndiRmiServiceExporter still calls PortableRemoteObject when available
Add headers & name attributes to composed @RequestMapping annotations
DispatcherServlet's checkMultipart detects wrapped MultipartRequest as well
SpringFactoriesLoader as the simplest possible mechanism for BeanInfoFactory loading
Allow for null values in ExtractingResponseErrorHandler.hasError
Document NumberUtils.parseNumber() trim behavior
Rename JMX tests to avoid jmxremote_optional error
Always supply test class to ContextLoaders in TCF
Filter irrelevant nodes in StaxHandler tests
refactored XmlBeanFactoryTests in preparation for move from .testsuite -> .context
Refute claims made in SPR-9051
HibernateTransactionManager lazily acquires JDBC Connection
Jdbc4SqlXmlHandler returns null as documented (instead of throwing NPE)
adding properties file to simplify ant use in Bamboo CI build
Polishing
Update javadoc for MultipartFile.transferTo
moving unit tests from .testsuite -> .aop
Invoke global, then local @InitBinder/@ModelAttribute
Polish AnnotationUtilsTests
[SPR-8627] Deprecated @ExpectedException.
SPR-8750 Update MockHttpServletRequest/Response handling of contentType.
Polish script based view tests
Polishing
put the definite article back in some places for Spring Framework to be consistent with common usage
ByteBufferConverter explicitly declares applicability to byte[]
Rename ViewResolverResultHandler to ViewResolution~
Polishing
checkNotModified leniently handles IE-10-style If-Modified-Since values and silently proceeds if header value cannot be parsed at all
added two way converter
Polish ASM-based annotation processing
Document that mock request doesn't support Accept-Language header
StatementCreatorUtils handles Types.BOOLEAN through PreparedStatement.setBoolean
Renamed PetClinicSuiteTests to PetClinicTestSuite so that it doesn't get picked up by Spring Build.
Fix typos in Javadoc for AutowireCapableBeanFactory
Added other modules to build
Polishing
Polish WebSocket integration tests
Public RequestCallback/ResponseExtractor factory methods
Process NULLABLE column as integer instead of boolean
updated cache aspect after CacheAspectSupport base class changes
Manual URL Cleanup
StringUtils.cleanPath retains plain pointer to current directory
Update section in reference on WebClient
Add client-side exception hierarchy
moved ApplicationContext-dependent .beans.factory.xml.* tests from .testsuite -> .context
Renamed handler.support to handler.invocation
[SPR-8633] Introduced generic invokeMethod() in ReflectionTestUtils.
Introduce empty & non-empty JsonPath matchers
Fix regression in static setter method support
SPR-6469
Polish
LinkedCaseInsensitiveMap provides reliable getOrDefault implementation
Remove <emphasis> to work around DocBook bug
Polishing
Moved tests over from testsuite to beans
Fixed failed tests
Moved tests from testsuite to orm
Append suffx to user dest in SimpMessagingTemplate
Add support for setting the "Vary" response header
Refine check for multiple subscribers
Remove trailing whitespace from Java source code
multipart etc
completed generic converter implementation
Make MBeanServer integration tests more robust
Fix custom config with older HttpClient
Remove stale duplicate copy of spring-cache XSD
Merge branch '3.2.x' into master
SpelNodeImpl manages start/end position in separate integer values
MockMvcResultMatchers.forwardedUrl argument declared as nullable
Clean up spring-jdbc tests warnings
Polishing
Fix missing ResourceHttpRequestHandler init in registry
Fix HttpMessageWriter tests
Extended set of common classes and language interfaces in ClassUtils
Update ServerWebExchangeTests
Consistent use of "URI variables" terminology
Changed JSR-330 detection logging from info to debug
Add info on intercepting static resource requests
Update links to http://java.net/jira
Polish
SPR-7327 add <mvc:argument-resolvers> namespace element
Polish MockRestServiceServer code
polishing .aop tests
Polishing
Polish Javadoc for AsyncHandlerInterceptor & RequestBodyAdvice
Upgrade build to Gradle 2.14.1
Parse JPA <exclude-unlisted-classes> correctly
Use maven ant task to install parent pom instead of using maven from the command line as a workaround for http://jira.codehaus.org/browse/MANTTASKS-87
Avoid extra existence check in SimpleMetadataReaderFactory
Allow skipping JSON prefix in MockMvc result matchers
Nullability refinements on private and static methods
SPR-5994 - The release archive contains an unecessary .zip file of the contents under the reference doc directories html and html-single
SPR-5379
Disable SockJS heartbeat if STOMP heartbeat is on
Fixed HierarchicalUriComponents equals implementation
Restored support for placeholders in mvc namespace resource locations
Remove remaining static Eclipse/IDEA metadata
Fix typo in Javadoc
Delete unused imports
Consistently strict parsing of date overflows (using java.time's strict resolution style)
minor cleanup
Add writeAndFlushWith to ReactiveHttpOutputMessage
pom maintenance - extraneous dependency on cglib-nodep 
LocaleContextHolder allows for independent setting of Locale and TimeZone
Improving method validation support for BV 1.1
Work around Servlet dependency in content negotiation
Moved UnsupportedMediaTypeException
Warn when SimpleAsyncTaskExecutor is used
ResourceUtils.extractArchiveURL properly deals with top-level war URLs
Update context-based tests in spring-test-mvc
polishing
HttpComponentsAsyncClientHttpRequestFactory supports plain HttpAsyncClient as well
Beverly's edits reviewed; modified the introduction part to include the preface text
Ensure AnnotationUtilsTests pass in Eclipse again
Ignore setAliasesByType tests since they fail on OpenJDK 8 b108
Introduce UriBuilderFactory and UriBuilder
Polish contribution
AbstractAutoProxyCreator uses prefixed bean name as cache key
Revised HttpHeaders javadoc
SPR-5740
Add defaultUseWrapper support to Jackson builder
ResponseEntityExceptionHandler rethrows unknown exception (for further processing in DispatcherServlet's HandlerExceptionResolver chain)
Fix resource-chain XML syntax for cache
Explicit documentation notes on JMS 2.0 vs 1.1 compatibility
Fixing build breakage with GroovyScriptFactoryTests.
Various @since tags (and varargs on setInterceptors)
Replace bit.ly links with real links
Fix issue in TomcatRequestUpgradeStrategy
moving unit tests from .testsuite -> .aop
Fix Assert.instanceOf exception message
Set Gradle Daemon JVM args compatible with JDK 9
Do not sort the mvc:resources location attribute
Add support for placeholders in @RequestMapping
Polish: combine catches block with same body
JdbcTemplate consistently exposes first value of equally named columns
Fix previous commit
Simplify WebSocket client implementationss in WebFlux
Polishing
Implement equals() for synthesized annotations
MimeTypeUtils constants cleanup: removed web media types
final revisions and marked all comments
Streamlined WebContentGenerator API variants: checkRequest, prepareResponse, applyCacheControl, applyCacheSeconds
Introduce ClassUtils.isInnerClass() utility method
Consistent InvocableHandlerMethod implementations
Try a different mbean port
Update build instructions in readme
Rename WebTEL to ServletTEL
Tiles 3 TilesViewResolver allows for specifying custom TilesView subclasses as well
@PropertySource gets parsed as early as possible
Polish Kotlin chapter
per Ramnivas' suggestion, removing this bit to try and fix snapshot builds
Polishing
Add support for DeferredImportSelector
Remove trailing whitespace in spring-test
Next Development Version
BeanPropertyRowMapper uses ConversionService for date-time support
Polishing
Avoid infinite loop in AbstractResource#contentLength
Fix copyright header
Consistent local vs external resolution of https schema references
Update changelog
added a concrete GenericSqlQuery class to make it possible to configure in application context (SPR-3986)
Refine logging for async requests
Portlet mocks support Portlet API 2.0
Allow parsing of media types with single-quotes
Explicit HEAD sorted higher than implicit GET match
Merge branch '5.1.x'
Convert SpEL plus operands using reg'd converters
Switch to full gradle version
Polishing
Use String#isEmpty()
Update Servlet 3.0 dependency in webmvc pom
Move JmsHandlerMethodFactory to spring-messaging
Module POMs, etc
Polish Javadoc for TransactionalTestExecutionListener
Add support for MIME-based message conversion
Consider abstract classes with @Lookup methods as candidate components
Fix Checkstyle error and polish Javadoc for ResourceHttpMessageReader
Add alternative database name for HANA
Fix warnings
Use unmodified 'version' when not on a topic branch
Initial import of the aspects module
SPR-5851 - Set Maven repositories as non-snapshot
Polishing
Added getOriginalValue() accessor to (Real)Literal
Polish reactive type support in Conventions
Polish tests for TestContext lifecycle events
MockMvc HtmlUnit support shares CookieManager
uncomment reactor-netty in tests
tests for asynchronous processing if controller returns StreamingResponseBody
Use String::isEmpty instead of "".equals(arg) when arg is not null
Use SESSION_NOT_RELIABLE when no messages received
Clean up warnings in Gradle build
fixing broken unit test related to SPR-5429
SPR-7994 Add missing optional flag for Rome library in spring-web
Fixes for ignored tests after last week's nullability commit
Drop JasperReports support
Netty support for (Async)RestTemplate
Drop @WebServlet annotation
AbstractRequestLoggingFilter supports logging of request headers
Refactor WebSession#getAttribute options
Allow HttpHeaders return values for @MVC methods
Replace WebMvcConfigurerAdapter with default methods
Polish doc
Fix import issue introduced in prior commit
Avoid unnecessary creation of default StandardEnvironment instances
eclipse settings to support unit test
Fix @RequestMapping regex reference doc example
Clarification: Lifecycle does not imply auto-startup semantics
Improve check for "Broken pipe" error message
Consistent nullability of headers Map and MessagePostProcessor
Allow <jdbc:embedded-database> to be declared w/o id
Changed project from agent to instrument
BeanInstantiationException preserves Constructor/Method if available
URL Cleanup - license.txt
Fix compile error
Polishing
CompositePropertySource rejects getPropertyNames call when containing a non-enumerable source
Align web.reactive.function with WebClient
Infer HTTP 404 from empty Optional/Publisher types
ForwardedHeaderTransformer handles encoding correctly
Support custom CorsConfigurationSource in AbstractHandlerMapping
JSON content and JsonPath support for WebTestClient
Fix MultipartResolver Resin compatibility
Debug-level log entry for any Jackson exception during canConvert
Support suppressed exceptions in the TestContext framework
Enabled XMLBeans tests
SPR-7404: Added JsonMessageConverter, borrowing from Spring AMQP
Added Tiger tests
Correct code example for YamlProcessor.setDocumentMatchers
Fix JacksonJsonEncoder for streams with more than 2 elements
Avoid potential NPE in toString()
Polish WebSocket session decorator and tests
Fully support XML config in GroovyBeanDefinitionReader
Support X-Forwarded-Prefix in ForwardedHeaderFilter
Add ability to handle a timeout to DeferredResult
Added missing section end tag
Merge pull request #1436 from wilkinsona/patch-2
Add REST feed view docs, included edits from Thomas R.
StaxUtils relies on JAXP 1.4 (as included in JDK 1.6+)
Fix [varargs] compiler warnings
Fine-grained RestTemplate exception hierarchy
Support annotations on interfaces in AnnotatedElementUtils
Also apply X-Forwarded-Prefix in fromContextPath
AbstractGenericHttpMessageConverter calls two-arg variants of canRead/canWrite again
Polish error messages in ServletServerContainerFactoryBean
BeanFactoryAdvisorRetrievalHelper avoids synchronization for name cache
Reformat the Testing chapter
SPR-8256
removed ServerSessionMessageListenerContainer coverage
Polishing
STS-260: added missing import-package headers so that editor works again
Add getBodyAsString() to MockClientHttpRequest
Efficiently merge bean name result with parent result (possibly empty)
Fixed NavigableSet/NavigableMap detection in createCollection/createMap
moving unit tests from .testsuite -> .aop
Polish
Polishing
Polish view controller MVC config
Moved petclinic test configs to resource directory.
Defensive reset/restore of JNDI environment (avoiding test side effects)
Moved tests from testsuite to beans
Inject UriComponentsBuilder relative to webapp root
Polishing
Polishing
SPR-6236: Reintroduce Struts support
update after Schedulers change
Consistent behavior for unwrap(null) on JPA and Bean Validation wrappers
Include FormHttpMessageReader in client codecs
Update changelog
Clarified ServletConfigAware behavior in case of no ServletConfig being available
Support target type in JsonPath assertions
URL Cleanup
Prevent NPE in ScriptTemplateView when no view is found
Sybase lock wait timeout error code missing
Enforce cacheLimit in DefaultSubscriptionRegistry
LogFormatUtils.formatValue leniently handles toString() exceptions
Add JSON converters to FormHttpMessageConverter
Clean up warnings in spring-orm
Document 'annotated classes' in Testing chapter
Do not repopulate RequestContextHolder in ServTEL
Introduce before/after test execution support in the SpringExtension
Revised ByteArrayOutputStream handling in MarshallingView and co
added -1218 to the transientDataAccessResourceCodes for DB2 (SPR-5296)
Ignore 'value' attribute in AnnotationTypeMapping
Add getMatchingPatterns method to Patterns condition
Rename test class to match name of class being tested
Next development version
Fixed CGLIB proxy class leaks through further equals/hashCode implementations in Spring AOP pointcuts
Compare Kind references before checking log levels
Annotate ContextCustomizer[Factory] with @FunctionalInterface
Reintroduce suppression of deprecation warning
Remove obsolete suppression of deprecation warning
Support List<Part> method arguments
Remove java.sql dependency from ReflectionUtils/TransactionDefinition
HandlerMethod pre-resolves parameter types at construction time
Skip HttpServletResponse.getStatus() on Servlet 2.5
try less log and increase timeout
Consistent support for early placeholder resolution in properties locations
polish
Implement invalidate() properly in MockHttpSession
Add ParameterizedTypeReference variants to bodyTo[Mono|Flux], toEntity[List]
ResponseErrorHandler provides access to URI and method
Polish
Extract body extraction logic in w.r.f
Remove RxNetty (from test sources)
Use sendError in ResponseStatusExceptionResolver
Polish Javadoc for MergedAnnotation support
Polish: "@Override" should be used on overriding and implementing methods
Protect STOMP passcode from showing up in logs
syncBody better differentiates plain vs multipart forms
URI variables with MockRestRequestMatchers requestToUriTemplate
Shared DefaultConversionService instance for simple fallback purposes
Polish
Annotation post-processors clear old InjectionMetadata registrations on refresh
MockHttpServletResponse.getDateHeader returns -1 for non-existent header
PathMatching options:configure all HandlerMappings
Renamed the 'size' attribute to 'pool-size' for the <executor/> and <scheduler/> elements in the task namespace.
Re-enable ignored tests in MockServletContextTests
Upgrade to Reactor Californium SR6
Implement MessagingException.toString()
Revert "Remove unintended changes from last commit"
Fix construction of NullSafeComparator in nullsLow
Add Groovy markup templating support to the MVC config
Improve exception handling when clients disconnect.
Delete unnecessary redeclaration of test methods
Require EhCache 2.10+
Updated ServletHttpHandlerAdapter usage
Avoid potential deadlocks between event multicaster and singleton registry through shared lock
Add GsonHttpMessageConverter
AbstractApplicationContext allows for re-refresh and re-close
consistent dependencies
Refine PropertyResolver extensions null-safety
Fix broken links in JavaDoc
Declared JDBC operation compiled flag as volatile
ExchangeResult refactoring in WebTestClient
Deprecated AsyncRestTemplate and related types
HttpClient instance should be shared for each call
Organize imports
LinkedCaseInsensitiveMap delegates to LinkedHashMap instead of extending it
Consistent detection of Order annotation in superclasses and interfaces
Add parametrized constructors to MappingJackson2MessageConverter
Polish TransactionalTestExecutionListener
RouterFunctionMapping provides getter for RouterFunction
Translate EOF to HttpMessageNotReadableException
Reactive support for @ModelAttribute argument
Consistent object type exposure for JSON rendering (workaround for Gson)
Property actually throws exception for no write method found
Refactor package structure for web
Change default JSON prefix from "{} && " to ")]}', "
Refine Content-Range support for Resources
Expose getters for the configured HandlerMapping's
added lock timeout error code for H2 (SPR-6612)
Removed outdated EJB reference from auto-proxying documentation.
Delegate to common ClassUtils.getQualifiedName
Polish form reader/writer
Dropped RequestEntity's template variable methods in order to remove dependencies on org.springframework.web
Custom KeyGenerator
Fix Javadoc examples
Add doesExist assertion method to HeaderResultMatchers
New postProcessProperties variant on InstantiationAwareBeanPostProcessor
[SPR-8395] AnnotationConfigContextLoader now supports default configuration classes with arbitrary names
Update WebSocket extensions change
Fix StringIndexOutOfBoundsException in RestTemplate.doExecute IOException handler when query string is an empty string
Sync with 3.1.x
+ fixed exception unwrapping
Merge branch '5.1.x'
refactoring .testsuite .aop.aspectj tests in preparation for migration to .context
Introduce RouterFunction builder
Polishing
Clean up warnings in spring-web
Merge branch 'SPR-9984' into cleanup-3.2.x
Set SameSite default to Lax
Polishing
Support for nested path using field access
Use existing CompositeByteBuf if possible
AssertionErrors.assertEquals exposes readable array representation
Correlated encoding/decoding log messages via hints
Jackson Encoder/Decoder accept custom MimeType's
Servlet 3 multipart request implements getParameterNames defensively (for WebLogic 12 compatibility)
Log SQL parameters in EclipseLink when using showSql
polishing
Latest dependency updates: EhCache 3.0 RC1, HtmlUnit 2.20, Apache HttpClient 4.5.2, Jackson 2.7.3, JasperReports 6.2.1, Jetty 9.3.8, JRuby 1.7.24, JsonAssert 1.3, JsonPath 2.2, POI 3.14, Selenium 2.52, SLF4J 1.7.19, Animal Sniffer 1.15, Undertow 1.3.19, H2 1.4.191
ConfigurationClassParser avoids double registration of nested classes which extend their containing class
Polish MessageBuilder
Consistent incrementer arrangement for PostgreSQL, DB2 and SAP HANA
BeanFactory accepts getBean arguments for non-prototype beans as well
SPR-5616: updated spring-library to include asm and oxm bundles in .libd and ivy files
Remove an unnecessary intermediate variable
Polish GenericTypeResolver
Refactor BeanInfoFactory
Polish

Throw exception if required meta-annotation is not present
Allow @ResponseBody on the type level
Update WebClient builder
Protect against missing SpEL selection expression
Polishing
NamedParameterUtils.parseSqlStatement should parse :{x} style parameter correctly
Fix for ScriptUtils failure when '--' occurs inside a multi-line comment on the same line as '*/' (#22392)
Refined logging to include target class for each transactional method name
declared JPA API as optional (SPR-6819)
Polishing
Move SpringFailOnTimeoutTests to 'statements' package
SimpleTransactionScope properly suspends and resumes scoped objects
final preparations for 3.0.1 release
Consistent formatting of license headers, package javadocs, and import declarations
URL Cleanup - fix undesirable code change
Updated Groovy version for Eclipse project to mathc ivy.xml
Specifically rethrow IllegalAccessError in isPresent/resolveClassName
SPR-8789 Support request with multiple param values in FlahMap matching logic
Add SimpLogging and use o.s.messaging.simp classes
Upgraded to ASM 4.2
Add defaultLocale to AcceptHeaderLocaleResolver
setting up FormatterRegistrY
SPR-5735
JPA ClassFileTransformerAdapter defensively backs out when called from within a transform call
Support @RequestMapping as meta-annotation
Merge branch '5.1.x'
Fixed accidental use of JDK 1.7+ Integer/Long.compare methods
Suppress warnings in Gradle build
Consistent exposure of empty attribute arrays in AnnotationMetadata
Improve performance of StringUtils.capitalize()
Optimize Flux pipeline in ClientHttpRequest
SpelExpressionParser etc
Set MockSessionCookieConfig#maxAge default to -1
Fix checkstyle
Merge branch '5.1.x'
moved OpenSessionInViewTests back to orm module
Refine encoding/decoding exception handling
Fix typo in ModelAndViewMethodReturnValueHandler
Make DefaultCorsProcessor Servlet 2.5 compliant
Updating Mail chapter regarding changes in Spring 2.0 and 3.0.
HttpMessageNotReadableException provides access to HttpInputMessage
Add accessors for expirationTime in FlashMap
Add HandlerProvider interface
more pruning
Merge branch '5.1.x'
Polish
Avoid rejecting same-origin requests detected as CORS requests
Polishing
Fix elvis operator mistake in reference docs
AnnotationMetadataReadingVisitor passes metaAnnotationMap into getMergedAnnotationAttributes algorithm, for finding out about applicable overrides
MultipartBodyBuilder supports PublisherEntity as input
Fix recent javadoc errors
RemoteInvocation(Result) explicitly designed for JavaBean-style deserialization
convert addition
Rework @PropertySource early parsing logic
Remove serialVersionUIDs in spring-messaging Exc.
Improve attribute alias support in @ComponentScan
Polish
Initial import of tx bundle
SPR-5764
Merge branch '5.1.x'
Update Apache license headers for affected sources
Upgrade to CGLIB 3.2.3
Avoid accessing the session if no session attributes need to be updated
Configurable UrlPathHelper in PathExtensionContentNegotiationStrategy
Polishing along with 3.1.3 backport
Update Javadoc for AbstractHandlerMapping properties
Upgraded to Apache HttpComponents HttpClient 4.3.1 and HttpAsyncClient 4.0 GA, as well as Jackson 2.2.2
Allow interceptors with excludePathPattern only
Fix test failure
Update Javadoc on exception resolvers in MVC config
Upgrade to Mockito 2.2
ForwardedHeaderFilter requestURI preserve encoding
XMLEventReader.getElementText() properly checks for start element
Assert preconditions in ResourceDatabasePopulator
Clean up spring-expression tests warnings
Register prefixed path patterns with FixedVersionStrategy
Add Tests for Servlet.fn
Fixed execute -> exchange
Polishing
Fix Map.put contract for HeadersAdapter impl.
"file-encoding" attribute value is being applied correctly (SPR-8024)
Use JDK 1.6's Collections.newSetFromMap instead of manually accessing Maps with dummy Boolean values
Update readme.txt regarding changelog location
Introduced SpringProperties class and optional "spring.properties" file
Load-time weaving support for WildFly 13+ (#22297)
Polishing
SpelExpressionParser made threadsafe
Add messaging.channel package
Introduce tests for transitive aliases with implied attribute names
SchedulerFactoryBean accepts external Quartz SchedulerFactory instance
Fix memory leak in AbstractJackson2Encoder
SPR-7103 - Added more detailed documentation on ordering of model attribute and BindingResult.
Fixed detection of generic types and qualifier annotations on scoped-proxy factory methods
WebFlux compiles after PathPattern/Container changes
MappingJackson2(Http)MessageConverter logs warnings after canRead/canWrite checks
Avoid ConstantConditions warnings suppression (plus related polishing)
Fix various Javadoc warnings
Mark Castor tests as deprecated
Check for duplicate keys in YAML map nodes
Add log4j2 config to spring-web-reactiv
Fix package cycle among http message converters
Refactor & polish DateTimeFormatterFactory[Bean]
Avoid defensive checks against java.time API
Accessors for PeriodicTrigger properties
SPR-7308
Add missing handshake-interceptor namespace support
Polish Reactor Netty TCP client support
Fixed misunderstanding with respect to excludeUnlistedClasses default in JPA 2.0
Added field error code matching to MockMvc
Moved tests from testsuite to web.servlet
Introduce spring-jdbc-4.2.xsd
Avoid Class.getPackage() in favor of plain Class.getName() checks
Pull WebFlux getMappingPathPatterns() implementation up in the hierarchy
Merge branch 'cleanup-3.2.x' into 3.2.x
Fix minor issue in WebSocketHttpRequestHandler
Fix typo on MergedAnnotations
+ Added .clover to svn:ignore
Add error code for SAP Hana
Completed changelog entries for 3.2.1
Support new default values in WebDataBinder
Server adapters release buffers on error/cancel
Avoid java.util.stream.Stream usage in hot paths
Upgrade to JUnit 5.0.0-M1
Expose empty annotation array as empty AnnotationAttributes array
Polish Javadoc for TestContext
Merge branch '5.1.x'
ConcurrentMapCacheManager recreates caches when initializing ClassLoader
Support for public WebSocket upgrade API in Undertow
Support implicit ports in MHSR.getRequestURL()
Introduce tests for @Sql and @Transactional support in @Nested test classes
Use consistent block style
Polish ApplicationListenerMethodAdapter
Modified staticmethod mocking to remove compile-time dependency on JUnit (see ROO-314 and related issues)
Fixed language attribute in code sample to activate currently missing syntax highlighting.
checking in performance tests
Refactor WebSessionStore
Create enhanced FactoryBean instance before applying method interceptor (preferably via Objenesis)
WebFlux support for LocaleContext related arguments
Polish server request & response implementations
Fix minor problems and polish reference docs
Polishing
Polishing
correctly handle ParseException from Formatter for String->String case (SPR-8944)
Next Development Version
Polishing
Remove isAsyncStarted assertion
Accept Predicate instead of HandlerTypePredicate
Renamed XmlReaders to XMLReaders
Avoid putIfAbsent call in HttpEntityMethodProcessor
Allow defining default content negotiation strategy
More WebSocket logging updates
Make ListenableFuture compliant with Java 8 lambda
Improve error handling in CollectionFactory
Polish CacheOperationSource
Deprecate JiBX marshaller
Register EventPublishingTestExecutionListener by default
Fixed regression in SpEL's constructor resolution
Switch to AnnotatedElementUtils.findXxx for @MVC
context-specific "conversionService" bean may refer to annotation-configured converter beans (SPR-6800)
Rename Verifier to StepVerifier
Polishing
update STOMP support to reactor-netty
Add decoding matrix variable values
Better support for @SessionAttributes in clustered environments
Merge branch '5.1.x'
Revised MappingJackson2MessageConverter towards var-arg constructor
ServerHttpRequest exposes SSL certificates
Remove unnecessary deprecation suppression
Introduce support for JUnit 5 in the TestContext framework
ListenableFuture provides CompletableFuture adaptation via completable()
Backwards-compatible handling of generic and raw collection converters
Clarified cookieMaxAge default
Fix issue with sub-protocol negotiation and SockJS
updated dependencies
Introduce null-safety of Spring Framework API
Allow use of @JsonView on @MessageMapping methods
Update test to catch CI server issue
added further conversion tests (triggered by 3.0.6 backports)
Further preparations for 3.2.1
Disable temporarily reactor-netty integration tests
Add <license> section to 3.1.x Maven poms
Introduce ContextCustomizer API in the TestContext Framework
Fix bug in WebSocketClient implementations
Aligned JmsTemplate and DefaultMessageListenerContainer receiveTimeout values
Clarify ConversionServiceFactoryBean documentation (SPR-7362)
Update dependencies
final preparations for 3.0.2
[SPR-8622] Upgraded to JUnit 4.8.2
moving unit tests from .testsuite -> .context
Check SockJS session type
Improve Javadoc for DatabasePopulator
Ensure indexer gracefully handle missing meta annotations
JDK 1.6+ API baseline across the codebase
HtmlUnitRequestBuilder decodes parameter names
Add protected YamlProcessor.getFlattenedMap method
fixing typos
EventListenerMethodProcessor skips annotation search on java classes
DefaultDataBuffer improvements
Polish CORS support
Quote ETags set with ResponseEntity builder API
Add first cut of SockJS server support
Support for placeholders in @CrossOrigin attributes
Hand written SpEL parser.  Removed antlr dependency. tests upgraded to JUnit4 - 93% coverage.
Added info-level logging for default unit detection
Clean up warnings in spring-core
Polish model attribute name checks
Update error message in DispatcherServlet
SPR-8801 Set ignoreDefaultModelOnRedirect=false in MVC namespace and Java config.
Convert CRLF (dos) to LF (unix)
Do not process undefined conditional HTTP requests
Support comma-separated X-Forwarded-Port
Reactor2TcpClient constructor with address supplier
Introduce spring-core-coroutines module
Added DataBuffer Encoder/Decoder
Fix checkstyle issue
Add RequestPredicate Visitor to WebFlux.fn
Upgrade to Tyrus 1.7
Fix typo in aop reference documentation
CookieLocaleResolver is RFC6265 and language tag compliant by default
Delete deprecated code in the TestContext framework
Moved tests from testsuite to core
Fix 'is already an instance of type' warnings
Update Mono.then(Supplier) deprecated calls
Framework build compatible with JDK 9 (tests running against java.base module)
Convert TestContext to interface & default impl
Add AnnotationStompService
FlashMap's equals implementation needs to call super.equals(...) as well
Polish GenericMessage
Fix typo in Javadoc
marked Hibernate Validator as optional
Generalized workaround for JDBC 4.1 getObject(index, requiredType) failures on MySQL and Derby
Optimize ResourceUrlProvider
Create messaging.simp.broker package
Add removeOnly mode to ForwardedHeaderFilter
Merge branch 'cleanup-3.2.x' into 3.2.x
Check scheme in (WebUtils|CorsUtils)#isSameOrigin
Reactive setup refinements
moving unit tests from .testsuite -> .core
Update changelog regarding upgrade to JUnit 4.10 and TestNG 6.5.2
Fixed @Configurable documentation with respect to the use of a prototype-scoped bean definition.
Avoid collection lookups in StompCommand
Detect Tomcat's "war" protocol as jar URL
Merge branch '5.1.x'
Remove trailing whitespace
Remove Castor marshaller
more el converters
removed Apache JSTL references completely
TransactionInterceptor avoids reflective method search for method identification
Fix missing space in assertion message
@Async's qualifier works for target class annotations behind a JDK proxy as well
Restore compatibility with Jackson 2.1
Fix malformed HTML in Javadoc
Add default ctor to Reactive UrlBasedCorsConfigurationSource
AspectJ update
Properly analyze Java 9 class cast messages for lambda event listeners
JmsMessagingTemplate exception management
SPR-3695: Added note on servlet/JSP/JSTL versions with reference to external blog article
Added "awaitTerminationSeconds" property to ThreadPoolTaskExecutor/ThreadPoolTaskScheduler
Uses Charset instead of String in MimeType.equals()
DataBinder etc
Add BackOffExecution to isolate state
reworked ConfigurationClass(Web)ApplicationContext into AnnotationConfig(Web)ApplicationContext; revised BeansException signatures
Use write aggregator from DataBufferUtils
Removed reference to AttributesJmxAttributeSource
Add support for DataSize
Update Apache license header date
Added myself and as author.
Update changelog re: comments in SQL statements
Use doOnDiscard to free internally queued data buffers
Release version 4.0.0.RC2
Fixed accidental use of Reactor's Assert util
SQLErrorCodeSQLExceptionTranslator tries to find SQLException with actual error code, looping through the causes.
Revised URI building in http.server (avoid package cycle with web.util)
URL Cleanup - upgrade to more modern Xalan namespace
ConverterRegistry's addConverter declares generic type variables
Polishing
started "new in Spring 3" chapter; added some overview to introduction chapter
Polishing
Refined javadoc
Clean up warnings in spring-core
Polishing
Javadoc fix from ASM master (6.2.1)
Resolved DataBuffer leaks in codec package
Support for JDK 8's "common" ForkJoinPool
HttpMessageConverters should support streaming
Remove PubSubMessageBuilder
Move tests to packages where they belong
Fix ArrayStoreException reading subclassed enums
Add cloneBuilder method on WebClient.Builder
Polishing
DefaultWebSessionManager decoupled from DefaultWebSession
Delete remaining JUnit 3.8 tests in spring-test
Polishing
ApplicationListenerDetector ignores non-managed bean instances
Add support for resolving message headers
Added test module
Final preparations for 3.2 GA
Set DB_CLOSE_ON_EXIT=false in H2EmbeddedDbConfig
ApplicationListeners will only be executed once per event (even for scripted objects; SPR-6589)
Add tests to JsonPathExpectationsHelperTests
Release version 3.2.2.RELEASE
Fix wrong Maven dependency in pom.xml for validation and inject APIs
moving unit tests from .testsuite -> .context
deprecated TopLinkJpaDialect, etc
Recognize Content-Type as special header in MHSRB
Consistently detect spring-beans.dtd reference in last path segment
Support receipt on DISCONNECT with simple broker
Fix remote context handling in UrlTag
Avoid stack overflow in case of chained factory-bean references to FactoryBean class
Cancel WebAsyncManager thread on request timeout
Polishing
Fix a typo
polishing
fixed HibernateMultiEntityManagerFactoryIntegrationTests failure
Fix typos in Javadoc
Resource.isFile() and JAF MediaTypeFactory
Delete AnnotationAttributeExtractor
[SPR-7323] SpEL 'select last' operator now works consistently with maps.
moved getInputStream() not-null requirement to InputStreamSource itself; removed misleading "throws IllegalStateException" declaration
Made processCommonDefinitionAnnotations(AnnotatedBeanDefinition) public
fixed StandardEvaluationContext code sample
RSocketRequester, RSocketStrategies, PayloadUtils
Add reactive WebSocketClient and RxNetty implementation
Post-processors consistently ignore ScopedObject/AopInfrastructureBean
[SPR-5887] Upgraded to JUnit 4.6.0.
EhCacheManagerFactoryBean logs cache manager name
Add defaultRequest option to WebClient.Builder
Polishing
Support 'unless' expression for cache veto
ServletHttpHandlerAdapter supports Serlvet path mapping
Refactor use of DataBufferFactory in SSE reader
Startup/shutdown log messages for AbstractHttpServer
Place holder resolution in @JmsListener arguments
Polishing
Auto-adapt reflective arguments in case of vararg array type mismatch
Polishing
Introduced SpringNamingPolicy for CGLIB
MappingJackson2MessageConverter adds message id and destination to type resolution exception
Supports ConversionService on SingleColumnRowMapper
Close Spring context in SockJS integration test setup
Polishing
PathMatchingResourcePatternResolver supports "classpath*" searches in jar file roots as well
Use Spring Doc Resources for reference docs
fixed instrumentation jar names (SPR-6753)
Additional tests for configuration class importing via ASM
LazyInitTargetSource works for @Bean targets as well
POM maintenance/development - initial jarjar support in maven build for ASM
BridgeMethodResolver properly handles bridge methods in interfaces
added mode="proxy"/"aspectj" and proxy-target-class options to task namespace; switched to concise names for async aspects
Allow Validator config in XML websocket namespace
HttpRequestPathHelper in new web.server.support package
EnableAspectJAutoProxy features exposeProxy flag (analogous to XML namespace)
costin code review comments
Polishing
Add check for ResponseEntity<void> with null return value
Workaround for Content-Length issue in Reactor Netty
MessageHeaders returns completely immutable entry set (no entry.setValue call allowed)
Require Jackson 2.6+, FreeMarker 2.3.21+, XStream 1.4.5+
binding rule impl
Only print request/response body if char enc is present in MVC Test
Sync with TestSubscriber changes in reactor-core
+ make use or property placeholders inside template.mf
SPR-5969 -  Tidy up Maven central POM for spring-context-support
Polishing
Fix [rawtypes] compiler warnings
Preserve visitBeanDefinition stacktrace in BeanDefinitionStoreException
Prefer List.sort(Comparator) over Collections.sort(List, Comparator)
"final" for public static fields in ReflectionUtils
Support proxied objects in ReflectionTestUtils
binding system refactoring - work in progress
Reduce API Surface in PathPatternRegistry
Consistent thread-safe iteration in DefaultSingletonBeanRegistry
Groovy-based bean definitions
MBean registration happens in a fully synchronized fashion for consistent results
ConversionService JSR-356 Encoder/Decoder adapters
Polishing
Raise IAE when no converter matches return type
Update websocket support for Jetty 9.3+
SelectTag correctly detects multiple="true" again
Consistent FactoryBean cache visibility in concurrent creation scenarios
Provide JdbcTemplate in tx base classes in the TCF
Upgrade to Checkstyle 8.18 and RxJava 2.2.7
Turned ArgumentsMatchKind and ArgumentsMatchInfo to package-visible
Release version 4.0.0.M3
SPR-15382 Spring Jdbc add Postgresql ?| and ?& operators support
Unit test for circular reference in default profile property, plus related polishing
Match declared parameters on produces condition
Rename SingleColumnRowMapperTest to align with the other tests
Upgrade to Gradle 1.8 and propdeps 0.0.5
Polishing
Set BEST_MATCHING_HANDLER_ATTRIBUTE in WebFlux.fn
Remove test duplication
[SPR-4702] Added support for @DirtiesContext at the test class level.
Allow parameter name binding for SimpleJdbcCall
further fixes for 3.0.3
Improve access to raw content in WebTestClient
Disable URL resolution in DTD declarations
Compensate for Eclipse vs Sun compiler discrepancy
Support ResolvableTypeProvider on simple event pojo
Support top-level scalar values in Jackson2Tokenizer
Expose ServerCodecConfigurer as a bean
revised lenient constructor resolution (follow-up to SPR-5816)
Fine-tuned logging of WebSocket close exceptions
Extend AnnotationMetadata and MethodMetadata
BeansDtdResolver resolves spring-beans.dtd declarations to spring-beans-2.0.dtd file
Use null in MockServletContext for unknown mime types
Polish script templating documentation
Polishing
RedirectViews should always use RESPONSE_STATUS_ATTRIBUTE
Polishing
Test for constructor with unresolvable parameter name
SPR-9498: don't make assumptions about equality if ConversionService has failed
Fix Windows-related build issues
SPR-7116 - Added documentation for <mvc:resources>
Polishing
Clean up warnings in spring-test
Changed module name, using correct bundlor template
Latest dependency updates (AspectJ 1.8.1, Reactor 1.1.2, Tomcat 8.0.9, Jackson 2.4.1, JAMon 2.76)
Allow for null query parameter values in ServerRequest
Link to Eclipse bug for annotations on bridge methods
Refactor ResolvableMethod
Avoid instantiation of non-selected beans in BeanFactoryAnnotationUtils.qualifiedBeanOfType
Skip abstract beans in getBeansWithAnnotation()
Revert previous impl for SPR-10163
Fix failing test
Add Access-Control-Request-Method check for CORS preflight requests
Remove unused constructor arg from UserDestinationMH
Improve StringUtils.cleanPath
HTTP header adapters print header values
Use Reactor 2.5 Flux and Mono Rx light API
Fix minor error in AnnotationUtilsTests
Introduced NoUniqueBeanDefinitionException as a dedicated subclass of NoSuchBeanDefinitionException
LinkedCaseInsensitiveMap checks for uniqueness of case-insensitive keys now
final preparations for 3.1 GA release
Reorder HTTP headers processing in RequestMappingHandlerAdapter
Fixed javadoc
Polish DatabaseStartupValidator
ScriptUtils properly refers to statement numbers instead of line numbers
Polishing
XStreamMarshaller lazily creates fallback XppDriver
ServletRequestAttributes considers standard Number subclasses (as defined in NumberUtils) as immutable
Minor fixes for grammar and spelling
Polishing
Remove use of Optional in SyncHandlerMethodArgumentResolver
AnnotationMatchingPointcut uses AnnotatedElementUtils.hasAnnotation
Fix issue in GlassfishRequestUpgradeStrategy
[SPR-3635] [SPR-5039] [SPR-5813] JMX annotation inheritance fixed
+ fix missing tag
Allow configuration of custom redirect patterns
Change version from 3.0.0.M3 to 3.0.0.BUILD-SNAPSHOT
URL Cleanup
Ensure PDF version of Reference Manual does not contain HTML <strong> tags
Make HttpComponentsAsyncClientHttpRequest abortable
Call AsyncUncaughtExceptionHandler when necessary
Polishing
Polishing AbstractBeanDefinition.equals
Fix "coercion" spelling mistakes in Javadoc
[SPR-5995] Updated documentation regarding compatibility with JUnit 4.5, 4.6, and 4.7.
Change antlr version to be 3.0.1 so that is consistent across the project
Optimized support for GlassFish 4.1.1 (Tyrus 1.9 - 1.12)
Support port URI template variables
Apply AsyncUncaughtExceptionHandler to AspectJ
Add WebTestClientConfigurer
Upgrade to Jackson 2.8 RC1, Undertow 1.4 CR1, Netty 4.1.1
Handle receive timeout in JmsInvokerClientInterceptor
added a concrete GenericStoredProcedure class to make it possible to configure using application context (SPR-3987)
Updating PetClinic build documentation regarding migration to Spring Build.
some further 3.0.2 entries
Improve Javadoc in SQL script support classes
eclipse settings to support unit test
Try defaulContentType for application/octet-stream
Allow for a single element overriding an array attribute in a meta-annotation
Polishing
Rework compilation of OpNE/OpEQ SpEL operators
Revert build to Gradle 2.13
Supplier registration support for annotated bean classes
converter / formatter docs initial commit
Overhaul custom ApplicationEvent documentation (SPR-7422, SPR-7395)
SPR-7651 - Document limitations of @Async.
Logging improvements for WebFlux
Consistent API between spring-web and spring-messaging HandlerMethod infrastructure
Redesign MockMvcHtmlUnitDriverBuilder API
Add helpful error message to DispServlet initializer
Fix NPE in InvocableHandlerMethod
CglibAopProxy detects package-visible methods when defined in a different ClassLoader
Replace size() check with isEmpty()
DisposableBeanAdapter ignores bridge method conflicts
Defer Charset.availableCharsets() call
LocalContainerEntityManagerFactoryBean etc
Fix broken tests in QuartzSupportTests
AbstractBeanFactory.markBeanAsCreated() reliably clears merged bean definition only once
polish
Polishing
Add attributes to WebFlux WebSocketSession
Fix locally failing test in FlushingIntegrationTests
Fix typos in HandlerAdapter
First-class support for printf-style format strings in LogMessage
Refactor CodecConfigurer
Polishing
Verify status quo when searching for non-inherited composed annotations
Restored property source ordering (fixing regression from 4.0.x)
Revise UserSessionResolver to UserQueueSuffixResolver
Fix package cycles in spring-test
Avoid exposeTargetClass attempt if bean name is null
Add aop target source test to TestGroup.PERFORMANCE
Polishing
Add httpMethods property to LocalChangeInterceptor
Overloaded convenience setters: setCacheControl(CacheControl), setExpires(ZonedDateTime)
BufferedImageHttpMessageConverter ignores empty MIME types
Adjust log level for invalid SockJS or Websocket requests
Polish AbstractDatabasePopulatorTests
Add Consumer methods to WebTestClient assertion classes
SPR-7641 - Added Principal to listing of supported method parameter types.
Clarify ServletException is thrown when no view is resolved (SPR-7339)
SimpleEvaluationContext.Builder withMethodResolvers/withInstanceMethods
Polishing
@MVC fixes
Synchronized access to method overrides (in particular for @Lookup)
ui.format system refining from RC1 feedback: Support for one format annotation applying to multiple field types, Printer/Parser building blocks for more flexibility, full Joda time formatting support, FormattingService as a service entry-point for clients to use
Add committed flag to ReactiveHttpOutputMessage
Polish
@Autowired, @Value and qualifiers may be used as meta-annotations for custom injection annotations
Clean up warnings in spring-websocket
Moved tests over from testsuite to core
Update SockJS client code snippet

polishing .beans tests
updated .jms dependency on junit 4.6.0 from test->runtime to test->compile.  touched all org.eclipse.jdt.core.prefs (during the process of importing the projects). only the date comments within each have changed.
Support [] array ref syntax in SpEL T() construct
Support for @Order on nested configuration classes
synchronized .classpath files with ivy.xml
Polish SpEL documentation
[SPR-5459] Added jarjar'd asm packaging
Add ExpectedCount
Introduced "globalInitializerClasses" next to the existing "contextInitializerClasses", applying to FrameworkServlets as well
Final preparations for 3.2.1
Actually log the cause of canRead/canWrite failures
ForwardedHeaderFilter is case-insensitive
Polish EncoderHttpMessageWriter Content-Type handling
Skip init/destroy method check for null beans
Reinstated support for spring-beans.dtd (streamlined like xsd)
Fixed visibility of 4.2's additional default converters
Consistent encoded path evaluation in ResourceHttpRequestHandler and co
Refactor Router to RoutingFunctions
Support handler methods returning void, Observable<Void>, etc.
Rename test classes previously related only to ContextLoaderUtils
[SPR-5889] Renaming TestNG tests from *Tests_ back to *Tests, but keeping @org.junit.Ignore to exclude them from the JUnit test run.
Polish ResponseBody result handling
Add notes on future deprecation of the RestTemplate
Add test case for SPR-16246
added test dep to ivy.xml causing build failure
Fix ProtobufDecoder handling of split message size
Polishing
Use ArrayList instead of LinkedList for known size
Improve RouterFunction builder
SpEL: ensure correct object used for nested #this references
Support SQL exception translation for ORA-06550
Some very simple improvements regarding ArrayList
Polish Javadoc for DefaultUriTemplateHandler
polishing .aop tests
Removed Validator interface and inlined its implementations
Avoid filtering if selector header is not in use
ScriptUtils.executeSqlScript logs SQLWarnings at debug level
Add initial support for MVC namespace view resolution config
Test for <util:map> with LinkedCaseInsensitiveMap and specified key/value types
Support DI of individual constructor args in @Nested tests
Return -1 after parse error for Expires header
Render reference documentation with Asciidoctor
Remove note on singleton-scoped proxy raising BCE
Upgrade to CGLIB 3 and inline into spring-core
Refactor ServerWebExchange#getAttribute options
@Scheduled provides String variants of fixedDelay, fixedRate, initialDelay for placeholder support
Polish resource handling tests
Add exclude patterns for mapped interceptors
Polish
Upgraded to ASM 5.0.1
Expose FactoryBean's raw object on retrieval during post-processing
Fix typo in AfterReturningAdviceInterceptor JavaDoc
Varargs and consistent nullability in MailMessage implementations
Allow to customize separator for messaging destinations
Polish
Allow custom @Validated annotations for handler method parameters
Raise MessageConversionException in @Payload resolver
Polish (minor)
Minor changes along with 3.1.3 backport
Consistent number handling in StandardTypeComparator (BigInteger support, doubleValue fallback)
Add setOutputStreaming option for HTTP factory
Moved tests from testsuite to core
Polishing
Restore userSessionRegistry field in StompSubProtocolHandler
Polishing
JmsListener/ScheduledAnnotationBeanPostProcessor uses SmartInitializingSingleton instead of ContextRefreshedEvent
Renamed static_mock package to staticmock
Rename @[Path/Destination]Variable in spring-messaging
Shutdown hook triggers doClose within startupShutdownMonitor
Add a 'bill of materials' project for Maven users
Merge pull request #84 from mp911de/charsetdecoder-in-stringdecoder
XStreamMarshaller exposes public marshal methods with DataHolder parameter
Update "What's New" regarding new testing features
Polishing
Favor ScriptException over SQLException
Unit test for reactive test support
Fixed fallback mode in ObjenesisCglibAopProxy, plus consistent support for bypassing Objenesis (e.g. on Google App Engine)
HandlerExecutionChain.toString() includes reliable interceptor number
Update MultipartFilter documentations
LiveBeansView escapes double quotes in resource descriptions
Add ServerRequest.cookies()
String.indexOf() expressions can be replaced with a call to the String.contains() method available in Java 5 and newer.
polishing
Fix @RequestMapping regex reference doc example
Catch RejectedExecutionException in WebAsyncManager
Don't throw NPE when serving webjar directories
Do not include URL hash in resource paths
SPR-8540 Minor Freemarker import related documentation fix
Strong recommendation for OpenPDF 1.0.5 instead of iText 2.1.7
Merge spring-reactive
moved model binding and validation related code into model module-level package; separated out ui concerns into ui subpackage
Polishing
Contextual BeanCreationException in case of depending on a missing bean
removed note about getting started guide not ready until 3.0 final
Improve 'build' folder ignores
Polish javadoc
Add missing @since tag
Support for Hibernate ORM 5.2
HttpComponentsHttpInvokerRequestExecutor uses HttpComponents 4.2 to explicitly release connections
All branches in a conditional structure should not have exactly the same implementation
UriComponentsBuilder method to configure URI variables
Fix timezone issue in DateTimeFormatterFactory
Return null instead of empty cookies array in Spring MVC Test
Include charset in EncodedResource.equals()
updating code examples with generics/varargs; polishing
Spring MVC supports ResponseStatusException
UnsatisfiedDependencyException avoids duplicate nested exception message
Support for "cacheRegionFactory" injection with Hibernate 5
Avoid duplicate registration of [RequestBody|ResponseBody]Advice @ControllerAdvice
Polishing
moving unit tests from .testsuite -> .core, .beans, .web, .web.portlet, .web.servlet
Polishing
Log4jLog explicitly passes String argument (avoiding argument expansion)
Ensure that contexts loaded by the TCF are active
Test for non-equality after URI normalization
Polishing
AsyncResult allows for exposing an execution exception
InstantFormatter accepts RFC-1123 values as well
SPR-6819
Polishing
EhCacheManagerFactoryBean applies cacheManagerName ahead of creation (for EHCache 2.5 compatibility)
AnnotationTypeFilter prevents ASM-based loading of java.* interfaces as well
Polish doc on RequestMappingHandlerMapping#isHandler
Add @Override to remaining source files
Fix memory leaks in ProtobufDecoder
Update Javadoc, add tests and polish spring-messaging
Added MediaType.TEXT_EVENT_STREAM
Ignore container callback and marker interfaces for auto-proxy decisions
Clarify behavior of WebSession#save()
Refactor random port in spring-websocket
Polishing
Update example years to 2013 in CONTRIBUTING.md
SPR-6219: Corrected typo
Shortcut factory method in MockServerWebExchange
Polishing
Reinserted blank line for consistent formatting of the change log.
removed TopLink coverage
added "receive-timeout" attribute to "jms:listener-container" element in JMS namespace (SPR-9114)
Fix bytecode generation for SpEL OpPlus
used managed list to detect bean definitions
Increment version to 3.2.0.BUILD-SNAPSHOT
Add ActiveMQ-based STOMP relay integration tests
Add Jackson2ObjectMapperBeanFactory
Support for Map method argument in WebFlux
Fix Collections import
Return HandlerResult in HandlerAdapter#handle()
Use undecoded pathWithinApplication in WebFlux
updating code examples with generics/varargs; polishing
Collapse core.codec and core.codec.support into one
Fix default value of CommonsPool2TargetSource#maxWait
Fix typo
HeaderResultMatchers supports multi-value headers
Polishing
Exclude overloaded from equals & hashCode in MethodOverride
Improve ETag & Last-Modifed support in WebRequest
Stronger explanation of default rollback rules
Replace <code> with {@code} throughout Javadoc
Avoid deprecated comparators in tests
Fix JavaDoc in OpMultiply so that it does not contain special characters
Remove use of simple executor in WebSocket clients
Consistent processing of binding/validation failures for data classes
Add DefaultMessageCodesResolverTests
Introduced createMethodJmsListenerEndpoint template method
Hibernate 4 LocalSessionFactoryBean, etc
moving unit tests from .testsuite -> .context.support
Sanitize request fragment in ResourceUrlEncodingFilter
Polishing
Clarify case-insensitive nature of HttpHeaders
Remove references to codehaus.org
SPR-5158: Updated description of HandlerInterceptor configuration to spell out which requests the interceptor is applied to
Add zero copy support in reactor-based WebClient
SystemEnvironmentPropertySource replaces hyphens in property names as well
SPR-6492
Add strategy for customizing ID/TIMESTAMP headers
Clean up warnings in spring-test
Update ResourceHandlerReg. API for Resource handling
Verify that CssLinkResourceTransformer handles empty url() links
Support StreamingResponseBody return value type
initial preparations for 3.0 GA
Upgrade to Gradle 4.2 (and Netty 4.1.16)
Fix package references
Fix test failure in WebSessionIntegrationTests
Do not proxy test instances based on "original instance" convention
Fix typo in javadoc
Merge branch '3.2.x' into master
Introduced "spring.getenv.ignore" system property for preventing System.getenv calls
Functional response builders allow for non-standard HTTP status codes
Upgrade to Gradle 1.0-rc1
Removing remaining use of PathPattern with String path
Polish DatabaseStartupValidator.afterPropertiesSet()
Fix typo in javadoc
Update Javadoc in SimpMessageSendingOperations
ObjectToObjectConverter properly handles constructors on non-public classes
DefaultListableBeanFactory efficiently accesses current bean names and exposes them via getBeanNamesIterator()
Polishing
h2 embedded db support; updated formatting conventions not to auto-format javadoc; added hsqldb and h2 to jdbc maven pom as optional deps
Fix HtmlUnitRequestBuilder merge
Remove deprecated @TransactionConfiguration & TxCfgAttributes
Revised TransportHandlingSockJsService for defensive transport checking and consistent logging
Avoid unnecessary GenericHttpMessageConverter re-declaration
Finished applying Beverly's edits
SPR-7812 RequestCondition refactoring with the possibility for custom request conditions in mind.
Add ResponseBodyInterceptor
Make RequestMappingHandlerMapping xml config easier
added missing compile time deps to eclipse .classpath
Delete unused import
No warn logging for propagated original exception
Polish
Upgrade to Undertow 1.3.12
Merge branch '5.1.x'
custom mappable type tests
Polish async feature for ServerHttpRequest/Response
Update Javadoc on SockJS client library URL
Rename ReactiveHttpOutputMessage.setBody() to writeWith()
DeferredResult/ResponseBodyEmitter adapter mechanism
Replace NAMES_PATTERN in UriTemplate
Introduce TestContextManager cache in SpringClassRule
Polish
updated to Groovy 1.6.5
Avoid HandlerMapping attribute in ResourceUrlProvider
Move Body[Inserter|Extractor] to web.reactive.function
Allow plugging in a WebSocketHandlerDecorator
fixed inaccuracies (SPR-6723, SPR-6725)
Add set/getAcceptLanguage() to HttpHeaders
SPR-8309 - Spring OXM schema improvement for CastorMarshaller
SimpleApplicationEventMulticaster defensively swallows ClassCastException without message
Upgrade to Protobuf Java Format 1.4
Allow custom instances of WebJarAssetLocator
Override clover.do for spring-aspects to avoid build failure
Improve @RequestAttribute WebFlux resolver
Cover maps & more collections in CollectionFactoryTests
Support date properties in Content-Disposition HTTP header
Support HandlerMethod parameter in @MessageExceptionHandler
Do not inspect meta-annotations on Java annotations
DefaultResponseErrorHandler makes use of HttpStatus.isError()
Removed misleading comments regarding javax.inject.Qualifier.
AbstractAdvisingBeanPostProcessor caches per bean target class, working for null bean names as well
Revised documentation on constructor autowiring semantics
Minor improvement in ExceptionHandlerExceptionResolver
BeanDefinition interface exposes initMethodName and destroyMethodName
Refactor packages
Polish Javadoc for TestExecutionListener
Moved tests from testsuite to jdbc
SPR-5976 - Upgrade POMS to JUnit 4.6
moving unit tests from .testsuite -> .beans
intermediate commit - wip bind and validate lifecycle
Polishing
Polish async support
Allow use of @SendToUser even w/o authenticated user
Fix compile error
Provide support for context hierarchies in the TCF
SelectedValueComparator defensively handles null values in exhaustiveCompare
Support encoded query string in reactive requests
@ExceptionHandler matches against cause type as well
AspectJWeavingEnabler registered with well-defined bean name (and therefore once only)
Refactor and polish various Comparator impls
Refactor WebTestClient assertions take 3
Fix content negotiation issue with sort by q-value
Fixed Eclipse .classpath by adding org.codehaus.jackson, org.codehaus.jackson.mapper, and org.mozilla.javascript.
Improvement in AntPathMatcher.combine method
Fix Javadoc typos
Next Development Version
Fix ReactorHttpServer with latest changes on shutdown behavior
Consider a null ClassLoader (typically the bootstrap CL) as cache-safe
Consistent ScriptTemplateView locale resolution via request
SimpleAliasRegistry's "getAliases" method returns transitive aliases now; @Qualifier value matching takes chained aliases of target beans into account as well
Avoid ConcurrentModificationException
Remove trailing whitespace
Remove JDK 1.7 guard for removeOnCancelPolicy property
Further enhancements for 3.2.2
Fix test failure
Better empty response body support in RestTemplate
Added SpringFactoriesLoader
Clean up "abstract" test issues
Polishing
Consistent logging of encoded path evaluation failure
Extended default collection size for common per-bean caches
Polishing
Verify types when setting header
@Bean's "autowire" attribute does not affect annotation-driven autowiring
Polishing
Improve logging of DefaultCorsProcessor for rejected headers
polish
Improve handling of disconnects in STOMP broker relay
HttpHeaders fails getAllow if set to EmptyCollection
SPR-7158
Fix encoding issues in javadoc
Update copyright header
Fix configuration issues in DefaultSockJsService
Clean up & suppress warnings in spring-messaging
Consistent Future check (even if typically encountering RunnableFuture)
Document default charset in Jackson message converters Javadoc
Avoid eager formatting in pre-condition checks
Add missing cache-resolver attribute
Initial import of test module
Polishing
Polishing
Merge branch '5.1.x'
Fix Auto-Startup for @JmsListener
Upgrade to Mockito 2.11
Polishing
Polishing
WebClient uri method with uriTemplate and UriBuilder
Minor fix in MVC reference doc chapter
Add BS and VT char escape sequences to JavaScriptUtils
Petclinic seems to work
Fix hardcoded value MockRestServiceServerBuilder
Document destruction callback behavior for inner beans in case of scope mismatch
AopUtils.canApply properly matches package-visible methods (aligned with advice matching within proxies)
Sync BaseSubscriber
Refactor tests with ScriptedSubscriber
Added more modules
Introduce HttpHeaders get/setContentDisposition()
Revise encoding steps towards use of JDK Charset and StandardCharsets
added optional JPA dependency to spring-aspects POM (SPR-6819)
Improve reactive support for access to Principal
Support meta-annotation overrides in ASM processing
Polishing
Replace Reactor Stream by Flux in tests when possible
Fix URI var encoding issue with '$'
Polishing
Document BeanFactoryPostProcessor implementation constraints (SPR-7466)
Polish Javadoc & imports for BeanDefinitionDocumentReaders
NettyDataBufferFactory.wrap(ByteBuf) calls touch()
converter system refactoring from community input
Polishing
[SPR-8386][SPR-8387] Refined logging regarding detection of default resource locations and default configuration classes.
Revised log levels: less WARN and INFO, fine-tuned DEBUG vs TRACE
Segregate tests that depend on the jmxmp: protocol
try to create unknown collection implementation types via default constructor
Update HttpClient with Inbound/Outbound contract split
UriComponentsBuilder allows more efficient (and less restrictive) CORS origin comparison
SchedulerFactoryBean supports non-durable jobs when accompanied by a trigger
Avoid registering CorsConfiguration for methods without @CrossOrigin
Polish: follow name convention - make immutable fields final
Javadoc fix
Pass type name into PreparedStatement.setNull in case of Types.OTHER
Fix checkstyle issue
- Javadoc
Consistent hasText checks for CharSequence vs String
Use ResponseEntity Content-Type as producible media type
Fix ForwardedHeaderFilter getRequestURL()
Make JUnit Jupiter support classes package private
Polish ServerSentEventHttpMessageReader
Polish doc
Data class construction supports field default/marker parameters
reintroduced static DEFAULT_CHARSET field
Add AsyncRestTemplate support to client-side MockMvc
Add support for ResponseEntity result handling
fixed DOCTYPE to refer to the root_element used
Polishing
Moved tests from testsuite to context
Split IoC chapter DocBook XML into multiple files (SPR-7467)
Clean up warnings in tests in spring-jdbc
ListBasedXMLEventReader uses defensive modifiable copy of given List
Improved logging in functional web framework
Allow Instant and ZonedDateTime as Last-Modified header.
Sync with reactor-core when() -> zip() change
Explicitly replace target ApplicationListener with singleton proxy, if any (avoiding double registration/invocation)
Remove pre-3.2 deprecated classes and methods
Polishing
Allow for custom ScheduledTaskRegistrar and/or ScheduledMethodRunnable
Polishing
Cache constructor instance in WebAsyncUtils
Introduce getAnnotationAttributes(..,Class) in AnnoElUtils
WebSocketSession.getUri() may return null
Make HTTP methods a RequestCondition
Fix documentation
Add newline at the beginning of textarea macro for FreeMarker and Velocity
Fix issue in htmlfile sockjs transport
GenericConversionService detects enum subclasses as well
polish
Skip default Content-Length if Transfer-Encoding header has been set
Fix SockJS origin check
CodecConfigurer internal refactoring
LinkedCaseInsensitiveMap exposes its locale for key conversion
Check Reactor presence after Undertow for WebSocket
Polishing
Polishing
DeprecatedBeanWarner detects deprecated FactoryBean classes and always logs user-specified bean type
URL Cleanup - update remaining license headers
SPR-14901 Allow customization of STOMP message header encoding
Polishing
fix spelling of word 'recommendation'
ForkJoinPoolFactoryBean etc
Javadoc fixes
Object/FieldError provides access to source object (exception/violation)
Suppress deprecation warning in Gradle build
Delete unused imports in spring-messaging module
Better assertion message in MockPart
Fix dependency issues in .context pom and .classpath
Release cached item in ChannelSendOperator when server error
Improve method order in MockMvcRequestBuilders
Add PayloadReturnValueHandler
moved binding configuration to publis binder api
Include Hibernate 4.x in Eclipse classpath
Support for static field access on non-public enums
Polishing
FastByteArrayInputStream returns correct count from read(byte[])
Document default locale in MockHttpServletRequest
Add addAll(MultiValueMap)
Remove duplicated elements in CorsConfiguration#combine()
Restored registration of nested component classes (even without factory methods)
Additional GenericConversionService Tests
Fine-tuned assertions and related polishing in WebFlux builders
Avoid String concatenation for not-null assertion in BeanProperty/DirectFieldBindingResult
SPR-4331
Prefer ArrayList/ArrayDeque over LinkedList for multi-element holders
Consistent Map/Set ordering
Polishing
Fix broken link to JavaBean customization tutorial
Minor typo fix: form -> from
Suppress OPTIONS handling for an ERROR dispatch
Added spring:eval note
polish
Polishing
Separate forwarded~ and redirectedUrlTemplate methods
JdbcTemplate preserves order of stored procedure output parameters
Populate RequestAttributes before invoking Filters in MockMvc
Release cached item in ChannelSendOperator
Removed OC4J support (including documentation references)
Additional shortcut with charset in WebSocketMessage
bind and validate lifecycle rename
Polishing
SPR-8214 review unit tests
Avoid stacktrace for invalid Origin header values
Java 5 Closeable and Java 7 AutoCloseable automatically detected as destroy methods
Assert status quo for interface support in AnnotationUtils
Related polishing
Polishing
Add async options to MVC namespace and Java config
Explicitly release rolled-back database savepoints during (long-running) transaction
Leverage PathPatternParser in CORS configuration source
URL Cleanup
Removed deprecated JpaTemplate and JpaInterceptor classes; dropped unused EntityManager(Factory)Plus mechanism
DependencyDescriptor supports TypeDescriptor resolution for fields
SpringProperties falls back to ClassLoader.getSystemResource when loaded in bootstrap ClassLoader
Enable suspend/resume on reactive TomcatWebSocketSession
Upgrade to Gradle 4.10.1
Polish "Join identical catch branches"
Create README.md
Fix issue with suffix pattern match
Polish StringHttpMessageConverterTests
Polishing
Local https URL resolution attempt with fallback to parser's default
Support Class meta-annotation attributes with ASM
compiler issue ?
Introduce alias for 'value' attribute in @SessionAttributes
Apply extra checks to static resource handling
PathResourceTests defensively compares last-modified timestamps at seconds precision
Fix copy-n-paste error in Javadoc in ResponseEntityExceptionHandler
Rename "ResponseBody" flush processor + use generics
Javadoc format and related polishing
Merge branch '5.1.x'
Favor Math.[min|max]() over handcrafted code
SPR-6709 Handle RequestBodyNotValidException and update reference docs
Added petclinic sample
Introduce SpringRunner 'alias' for SpringJUnit4ClassRunner
Add naming strategy for @MVC request mappings.
@Bean definitions override scanned classes, plus check whether overriding is actually allowed
Fix formatting
Upgrade to Hibernate Validator 6.0.16 and H2 1.4.199
Consistent bracket alignment
Further locking optimizations for the retrieval of non-singleton beans
Common root cause introspection algorithm in NestedExceptionUtils
Flush of underlying response in ContentCachingResponseWrapper
CompositePropertySource extends EnumerablePropertySource now
Consolidate WebSocketHandler interface and sub-interfaces
further fixes for 3.0.2
Fix since tag
[SPR-5145] Updated reference manual regarding deprecation of the legacy JUnit 3.8 code base. 
Add ConversionService support for ByteBuffers
+ add missing # to SpEL variables
Use MessageSource to resolve @ResponseStatus.reason
Clean up imports and warnings
Polish CORS documentation
Update MessagingOperations hieararchy
Never use 'this.' when accessing loggers
AllEncompassingFormHttpMessageConverter registers MappingJackson2XmlHttpMessageConverter and GsonHttpMessageConverter (for consistency with RestTemplate and WebMvcConfigurationSupport)
Complete set of registerBean methods on AnnotatedBeanDefinitionReader
AbstractCachingViewResolver uses a cache limit of 1024 by default, avoiding overflow for redirect URLs
Polish build.gradle
Polishing
Revised ResourcePropertySource in order to avoid ConfigurationClassProcessor's AnnotationPropertySource subclass
Polish ServletServerHttpRequest change
Introduce SubProtocolHandler abstraction
Avoid a hard dependency on Sun's CachedRowSetImpl class
Merge pull request #1394 from alexander-riss/keySet
Add HTTP Status 451 UNavailable for legal reasons
Add support for asserting JSON
Polishing
Polishing
Add a ResourceResolver implementation for WebJars
SPR-6885
DefaultHandlerExceptionResolver logs warn entries for conversion exceptions
Reinstate WebContentGenerator.checkAndPrepare variant
BeanDefinitionBuilder supports factory method on factory bean
Implement review feedback.
Updates for buffer management in RSocket
Removed unused XStreamUtils class; direct access to the xstream field in XStreamMarshaller
polish
Revised javadoc
removed some instances of unnecessary <value></value> elements
Mention DCBeforeModesTEL in TestExecutionListener Javadoc
Polishing
moved multipart and bind to web project since independent of servlet and required by new native web request parameter map
MockWebResponseBuilder defaults cookie domain
AbstractApplicationContext collects early ApplicationEvents and publishes them once the multicaster is available
Clean up warnings across code base
Release version 4.0.0.M1
Polish tests
Minor changes along with 3.1.3 backport
Consistent resolution of Class methods and static methods
Polishing
Correct generic type in BodyExtractor for form data
Compatibility with OpenPDF as alternative to iText 2.1.7
MockHttpServletRequest preserves original Accept-Language header value
Prepping for 3.0.5
Support lazy initialization of BindingResult when customize a MessageCodesResolver
Keep deprecated addCache method (e.g. for Spring Data Redis)
Suppress warnings in tests
Support identical minPort and maxPort in SocketUtils (#1612)
Polishing
Check X-Forwarded-Host in ServletUriComponentsBuilder
Polish SockJS client
maxFramePayloadLength property in ReactorNettyWebSocketClient
TransactionAttributeSourcePointcut pointcut skips target classes with TransactionalProxy marker (e.g. Spring Data proxies)
Encapsulate choice of URI encoding within RequestPath
Replace constant exceptions with inlined ones
Remove default profile during environment merge
Polish AbstractServerHttpResponse
Sync to Fluxion to remove Stream confusion
SPR-7158: Added missing space in MVC docbook file
Fix ClassCastException when setting media types
Polishing
Enable reactive web integration tests
Reduce access on headers for STOMP messaging
Revisit JmsMessagingTemplate
Nullability fine-tuning around bean properties
Move misplaced integration test to proper location
Introduce ConfigurableEnvironment#merge
Moved DefaultHandlerExceptionResolver to fix a tangle.
DispatcherServlet.getHandlerMappings() accessor declared as final
AbstractRoutingDataSource consistently implements JDBC 4.0's Wrapper interface as well
Polishing
Update FileExtensionContentTypeResolver
ReloadableResourceBundleMessageSource uses ConcurrentHashMaps and ReentrantLocks instead of synchronization
Add DispatcherHandlerErrorTests
Resolve @Repeatable container in AnnotationUtils
Remove trailing whitespace
Calculating capacity before allocation.
Polish SPR-12286
added a DuplicatKeyException catagory for SQLException translation (SPR-5125)
Rename ContentTypeResolver to RequestedContentTypeResolver
eclipse settings to support unit test
Regular getBeanInfo call for interfaces (enabling Introspector's cache)
Moved tests from testsuite to jdbc
RequestMappingHandlerAdapter properly invokes handler method in case of no session as well
renamed "mapping-order" to "order"; added "cache-period"
Polish ServletServerHttpRequest query param handling
Removed Servlet 2.4 forward attribute support in InternalResourceView and TilesView
Rename AbstractHandlerResultHandler to HRHSupport
Moved tests from testsuite to context
InternalResourceViewResolver's exposure of context beans is now available at UrlBasedViewResolver level
AbstractAdvisingBeanPostProcessor uses target class check for existing proxy but checks against actual exposed object otherwise (catching introductions)
Polishing
Remove PathPatternParser from PatternsRequestCondition
Polishing javadocs: IllegalStateException no longer thrown
Exclude jdk package in ShadowingClassLoader
Add support for HTTP PATCH method
Consistent bean type checking for endpoint handlers
[SPR-6043] @NotTransactional is now deprecated
Polish serialization/deserialization exception logging
Moved tests from testsuite to web
Update port related code in UriComponentsBuilder
Update doc for DefaultAopProxyFactory re: CGLIB
polishing .beans tests
Use response encoding when escaping HTML
MappingJackson(2)MessageConverter needs to use bean ClassLoader
Fix `DelegatingServletInputStream#available`
Use streams and lambdas in spring-test where feasible
Concurrency and exception message refinements for test transactions
Use specified ResolvableType in JacksonJsonEncoder
JdbcUtils explicitly extracts SQL date/time for JSR-310 LocalDate/Time
Polish Javadoc for TestTransaction
Document WebApplicationContext support in the TCF
Support concurrent execution in TestContextManager & DefaultTestContext
Support SendTo at class-level
AbstractSqlParameterSource enumerates parameter values in toString()
Support HTTP HEAD method in MockMvcRequestBuilders
Switch to rxnetty-http dependency
SPR-8730
Allow use of '&' prefix to access factory bean in SpEL
PropertyValue declares its cache fields as transient
Polish Kotlin nullable support
Don't encode '@' in {@code} tags
Migrate and verify annotation utility methods
Log non-loadable TestExecutionListener classes at debug level only
Fix Javadoc for PathPattern
JBoss "vfszip" resources need to be treated as jar URLs
Update Validation chapter
OSGI manifests etc
JdbcTemplate etc
fix CI build
Avoid NPE in ContextLoader when dealing with an untyped ApplicationContextInitializer
Polishing
Consistent configurer access in WebMvcConfigurationSupport
Support test annotations on interfaces
Add MockServerHttpRequest/Response to spring-test
Polishing
Add BindException to DefaultHandlerExceptionResolver
Moved tests from testsuite to beans
CommonsFileUploadSupport applies maxUploadSizePerFile to FileUpload copy as well
SSE reader support to read full content as a String
Polish
Upgrade to ASM master (6.2+) and CGLIB 3.2.7
@SafeVarargs for header(String, Matcher...) method
polishing
Avoid MessageFormat processing for default Bean Validation messages
Java 8 getParameterCount() instead of getParameterTypes().length
SPR-7002: updated .classpath and pom to reflect new dependency upgrade from Jackson 1.0.0->1.4.2
Fix a typo in javadoc
SPR-5299 TLDs must be located under META-INF
PayloadArgumentResolver has useDefaultResolution flag
Polishing
Join identical catch branches
MapperFactory and MapperBuilder config API
Context namespace exposes value-separator attribute for property-placeholder element
Add SimpleUrlHandlerMapping
Consistent support for if-(un)modified-since as ZonedDateTime/Instant
fixed JavaConfig example
Enforce UTF-8 response encoding in SseEmitter
Hibernate 3.6, etc
Support DateTimeFormat annotation without Joda
Use consistent XML docbook namespace format
Fixed javadoc links to setCacheSeconds
Make Tiles 3 the default implementation in spring-webmvc
Polish HierarchicalUriComponents
Polishing
Bypass conversion when possible
Introduce context bootstrap strategy in the TCF
Introduce 'useRegisteredExtensionsOnly' property in classes using MediaTypeFactory
Fix SpEL compilation of static method/property/field operations
RESOLVED - issue SPR-4661: Improve context-property-placeholder configurability 
[SPR-8386][SPR-8387] Redesign of DelegatingSmartContextLoader and the SmartContextLoader SPI:
Fix Jackson @JSONView when using XML serialization
Add "What's new in Spring 3.1" to ref docs
Remove references to 'bold' text in reference docs
Deprecate Velocity support
Polish
Force CGLIB to always specify ASM7 for its visitors
Extract ProblemCollector interface
polish; fixed failed tests
Support @[Before|After]Transaction on non-public methods
link to validation section
Allow MVC handler methods to return any CharSequence type as view name
Polishing
SchedulerAccessorBean falls back to finding a default Scheduler bean by type
Don't detect annotations on superclass in StAnMeta
Support nested annotations in AnnotationAttributes
ReactorNettyWebSocketSession uses correct frame size
Fix typo
Introduce HandlerMapping introspection API
Remove unused imports in tests
Initial preparations for 3.2.1
Getter for DispatcherSerlvet in MockMvc
Merge branch 'cleanup-3.2.x' into cleanup-master
Add json, html, and xml RequestPredicates
Add script based templating support
AbstractTypeHierarchyTraversingFilter leniently ignores non-loadable super classes and interfaces
Expand range of whitelisted extensions by media type
Fix various javadoc warnings
Fix compilation of expressions using instanceof and primitives
AbstractCacheManager accepts no caches defined, allowing for EHCache default cache setup
Polish
Added link to the Mockito test spy "mock" testing library.
Add support for Server-Sent Events
Increment version to 4.0.0.BUILD-SNAPSHOT
Fix issue with encoded params in UriComponentsBuilder
Merge pull request #1326 from JanespenCerpus/fix-resttemplate-mockmvc-encoded-uri
Add missing break statements to stop looping when result is known
Introduce Marshalling MessageConverter
Introduce SmartMessageConverter interface with conversionHint arguments
Defensive error reporting when StandardAnnotationMetadata introspects declared methods
Support for @PropertySource annotations with custom implementation types
Add error stream tests for XmlEventDecoder
Merge branch '3.2.x' into cleanup-3.2.x
PropertySource annotation allows for custom encoding
Ensure ServTEL doesn't reset ReqAttrs by accident
Accept all media types in StringDecodere
Pet Clinic tests now run against JUnit 4.7.
added language element to programlisting for syntax highlighting
Polishing
Consistent parameter resolution for batch updates (IN clauses etc)
First pass completed, with support for the standard JMS 2.0 API in our CachingConnectionFactory and support for a delivery delay setting in JmsTemplate. Note that none of this has been tested against an actual JMS 2.0 provider yet, due to no such provider being available yet.
Re-order deps to allow Hamcrest to come before JUnit
EhCacheFactoryBean calls addCache after listener registration
Add path-helper attribute for websocket namespace
Support sub-types of ResponseEntity
Revised DefaultManagedAwareThreadFactory to make its non-JNDI fallback work
Create Languages section
Clean up warnings and tests in spring-core
Add check for unused WebSocket sessions
Remove no-op classes in web-related Java config
Fix SpEL handling of function reference
Drain client response body consistenly
Switch to TEMPLATE_AND_VALUES as the default mode
Avoid duplicate Etag/Last-Modified header values
Add defaultCharset field to StringHttpMessageConverter
ThreadPoolExecutorFactoryBean exposes "createExecutor" method for custom ThreadPoolExecutor subclasses
Rename MergedAnnotations.SearchStrategy.SUPER_CLASS to SUPERCLASS
Adjust log level in LoggingWebSocketHandlerDecorator
Move tests to spring-test module
Suppress warnings in tests in spring-jdbc
Removed REST chapter.
Fix UriComponentsBuilder.fromUriString parsing error

fixed JmsTemplate example (SPR-6789)
Accessors for configured send-time and buffer-size limit
[SPR-6011] SpringJUnit4ClassRunner once again supports collective timeouts for repeated tests
SPR-7159
Merge branch '5.1.x'
Hibernate 4.1 etc
Polishing
Simplify logic in MergedSqlConfig
Add StompCodec
Merge pull request #1487 from Buzzardo/master
[SPR-8240] Restructuring the "Context management and caching" section.
WebSocketServerSockJsSession uses dedicated disconnect lock
Add equals/hashcode to ResponseEntity
Introduce BeanFactoryAnnotationUtils
fixed typo of language
Polishing
Replace assert w/ warning in ResourceHttpRequestHandl.
MockHttpServletResponse.setIntHeader supports 'Content-Length' header as well
Fully qualify Spring=>Spring Framework in ref docs
Handle multiple conditional request headers
Polish ErrorArgumentResolver
Added petclinic db
Add configurability for underlying WebSocket engine
Verify ServletCtxAware beans are processed in WAC tests
Fix issue in AbstractMessagingTemplate
WebClient handles no Content-Type with data correctly
Base64Utils falls back to JAXB DatatypeConverter for String-based encoding
Renamed JCacheEhCacheTest to JCacheEhCacheTests
Next Development Version
Document @Autowired and @Value limitations
FreeMarkerConfigurationFactory falls back to SpringTemplateLoader on any exception
BEST_MATCHING_HANDLER_ATTRIBUTE for spring-webmvc
Introduce MockRestServiceServer builder
Support {/var} syntax in UriComponentsBuilder
Optimize StringUtils.cleanPath
SPR-7858
Revised RootBeanDefinition's externallyManaged* Sets to rely on postProcessingLock
Polishing
[SPR-6879] @DirtiesContext is now an @Inherited annotation.
Use HttpRequest.getMethodValue
Allow hook to associate user with WebSocket session
Switch spring-websocket/messaging to Tomcat 8 RC3
Consistent use of Collection.toArray with zero-sized array argument
Restrict HTTP methods on Reactive HiddenHttpMethodFilter
Improve message for HttpStatusCodeException with empty status text
Fix accidental @Nullable declaration on addAttribute(Object)
Added a Git .mailmap file
Add Jackson's Modules registration in Jackson2OMFactoryBean
Remove PathPatternComparator
added conf attribute for the struts dependency (SPR-7033)
Add HttpStatus to ModelAndView
Clarified that getBody() never returns null
Polishing
Renamed org.springframework.ui.format package to simply org.springframework.format package; 'ui' is not adding any value - it makes the package name longer and also discourages use of formatters outside in other "non ui" environments where localized formatting of field values is needed.
Document WebApplicationContext support in the TCF
Optimize Jackson2Tokenizer
Add testConnection on JavaMailSender
Add HttpRequestBuilder default implementation
syncing eclipse settings for unit tests
Javadoc
Fixed invalid code tag in javadoc
Introduced local support for Hibernate 3.6 and 4.x exception translation to HibernateJpaDialect
Changed Basic Authentication consumer to setBasicAuth method
Support for non-standard HTTP status in reactive ClientHttpResponse
Polishing
Polishing
DataBinder now accepts var-args to set allowed, disallowed, and required fields
adding eclipse settings for org.springframework.aspects
StopWatch provides getId/currentTaskName accessors (plus further fine-tuning)
DefaultBeanDefinitionDocumentReader evaluates profile attribute only in beans namespace
Proper matching of raw generic types and generically typed factory methods
SPR-6368 The parser for the 'executor' element in the task namespace now creates a FactoryBean so that the pool-size range can be configured after property placeholder resolution when necessary.
Update Quartz documentation to use FactoryBeans
prepared 3.1 M1 changelog
Exception handler methods may receive original as well as cause
Update default SockJS CDN location
PropertySourcesPropertyResolver provides logKeyFound template method
Correct since declarations in Netty 4 client support
Preparations for eventual removal of ParameterizedRowMapper along with SimpleJdbcTemplate
LogFormatUtils is declared abstract
Polish use of LookupPath
updated LocalValidatorFactoryBean documentation (SPR-6609)
Polishing
Add multipart support to WebFlux functional API
tests for custom conversion service / validator
Introduce ApplicationContextInitializer interface
Add support for Jackson 2.7
Support loading WebApplicationContexts in the TCF
Support case-insensitive null literals in SpEL
Polish method parameter handling
Polish whitespace and formatting
Consistent copyright header and fine-tuned javadoc in test/web mocks
Javadoc
Remove ApplicationContext dependency from ParameterAutowireUtils
Consistent JSP tag documentation
Document synchronous use of the WebClient
Polishing the MVC sections of the reference manual.
Add support for URI templates in redirectedUrl() & forwardedUrl()
Add ResourceRegionHttpMessageWriter
TestNG 5.10
remove obsolete xsd
Placeholder configurers allow for trimming of property values
Larger initial size for ASM type descriptor StringBuilder
Merge branch '5.1.x'
ImportRegistry properly tracks excluded superclasses
Make the broker relay heartbeat intervals configurable
Avoid null signals when resolving handler arguments
Avoid use of fragile Swing classes in tests (for compatibility with JDK 8u40)
Make WebSocket fields available after it is closed
Polishing
maven deployment script development
HibernateJpaVendorAdapter preserves connection release mode for JTA
Add ArgumentResolverConfigurer
[SPR-6523] Commented all paragraphs (i.e., for list, map, and set) related to collection merging with the util namespace until this issue has been addressed.
Next Development Version
Polishing
Polishing
Scan for JPA 2.1 Converter annotation as well
Tests for enum array with varargs (and related refinements)
Make removal of jsessionid case insensitive
Add atinject dependency for TCK test
ApplicationEventPublisher as functional interface
Polishing
Add support for Jetty Reactive Streams HTTP client
TypedValue implements equals/hashCode based on value and TypeDescriptor
Upgraded to JCache 1.0 RC1
Use tabs rather than spaces in tests
Earlier processing of forwarded headers
SqlParameterSourceUtils.createBatch with Collection support
Mention AntPathMatcher regexp support
MockServerHttpRequest builder supports query params
Move RxNetty support to test scope
Fix a typo in ServerSentEventHttpMessageWriter Javadoc
@RequestBody raises 415 if no matching converter
Polishing.
Moved encodeHttpHeaderFieldParam method to HttpHeaders itself (including tests)
Allow for overriding of computeTransactionAttribute
Polish JavaDoc
Support meta @Component with non-string value
fix signature
formatting docs
Polishing
Spring-backed DataSources consistently implement JDBC 4.0's Wrapper interface
Revision of JMS annotated endpoint support, plus support for JMS 2.0's shared subscriptions
Safe InetSocketAddress init for WebSocket and SockJS
introduced "lenientConstructorResolution" flag (SPR-5816)
Implement allocation-friendly method to get user count in SimpUserRegistry
SPR-5246
Relax -aspects dependence on -test (compile=>test)
Fix typo
Dependency tracking for Supplier-created beans
Add WebTestClient.mutate()
"acceptExisting" flag allows for sharing per cacheManagerName on EhCache 2.5+
Revert accidental changes in Eclipse/pom metadata
SettableListenableFuture properly rethrows Error
Decouple ExchangeResult from WiretapRequest/Response
Make the signature of RHOM#writeAndFlush() more flexible
Migrate CacheControl to use java.time.Duration for durations
Polishing the MVC sections of the reference manual.
Polish + minor refactoring of SSE reader and writer
Polish HttpHiddenMethodFilter
SPR-8867 Fix issue with Content-Length header and UTF-8 charset.
Consistent initialiazation of Forwarded header set
Protect against non-deterministic method order in JDK7
Polishing
Allow ResponseBodyAdvice to modify null return values
DefaultAdvisorChainFactory never passes null into ClassFilter, enabling async advisor to work without target class as well
Polishing
POM maintenance
temporarily disabled constructor argument caching for converted values (SPR-7423)
Polishing
Fix broken Javadoc links
remove currently unnecessary dependencies
Generate bracketless tag id in FreeMarker forms
Polishing
Defensive catching of any Throwable subclasses instead of just Error
Polish MVC config tests
AopUtils.getMostSpecificMethod exposes dynamic proxy class methods
Polish method order in RequestMappingIntegrationTests
Support comments in statements in RDbPopulator
BeanWrapper auto-grows arrays if necessary
SPR-7090
CommonsMultipartFile.getOriginalFilename() can be configured to preserve header-specified filename as-is
Finish REST docs, add docs for @FactoryMethod, add links in 'new-in-3'
BeanFactory for configuring a Jackson ObjectMapper
Fix error handling in Jackson2JsonDecoder
CookieGenerator supports "cookieHttpOnly" flag for Servlet 3.0
final preparations for 3.0.5
Fixed test class name
Polishing
Ensure that parameter resolution in SpringExtension is thread-safe
Fix typo on javadoc
Move WebClient to web.reactive.function.client
Fix GenericConversionService search algorithm
Remove Exception declaration in abstract Encoder
Consistently use constructor-based instantiation instead of Class.newInstance / BeanUtils.instantiate
Polishing
Minor correction to doc updates made as part of SPR-7545 - "cache-period" attribute was incorrectly documented as "cache-seconds".
Allow to pass hints parameter in HttpMessageReader/Writer
Add Commons Pool 2 support
Move functional web framework to web.reactive.function.server
Merge branch 'cleanup-3.2.x' into 3.2.x
SPR-7812 Move condition package under mvc
Rearranged WebAsyncTask constructor interdependencies and assertions
Order ViewResolver's
Improve default content type selection
Fix SpEL compilation of constructor invocation
Revised spring-orm test suite (no AbstractJpaTests anymore)
Remove isOpen assertion when sending WebSocket message
Customize connection request timeout
Remove file committed by error in last commit
SPR-8454 Introduce Registration style objects, rename several Spring MVC *Configurer helpers to *Registry, add more tests
Fix fragile tests for asynchronous events
Polishing
Corrections regarding BindingResult(s); added a tip regarding programmatic use of LocalValidatorFactoryBean.
mvc resources handler initial commit
ObjectUtils.isCompatibleWithThrowsClause supports varargs now
Redistribute AOP Alliance interfaces in spring-aop again (as in Spring 2.x)
Merge branch 'SPR-10124' into cleanup-3.2.x
Revised @PropertySource parsing for consistent PropertySource naming, avoiding accidental overriding by name
Update support for using "." as path separator
LoadTimeWeavingConfiguration should not rely on private field injection
Added ContentNegotiationManager(Collection<ContentNegotiationStrategy>) constructor
Mark junit dependency as compile, since aspects depend on it at compile-time
ScheduledAnnotationBeanPostProcessor tracks individual bean instances of any scope
Add STOMP/WebSocket stats collection
Raise RestClientException for unknown status codes
Merge pull request #1320 from dreis2211/SPR-15237
added/modified some links
Tracking ASM 5.0.4 development: Fix for ASM issue 317545
Add readme
SPR-6333
Allow consolidating config in root context with Java
Deprecate writePrelude in AbstractHttpSockJsSession
Merge multipart and query param values
[SPR-8393] AnnotatedBeanDefinitionReader's constructor now inherits the Environment of supplied BeanDefinitionRegistry.
Added Host property to HttpHeaders
Refactor tests to use the new database-name attribute
Demo how to use SpringClassRule in nested test classes
DefaultResponseErrorHandler delegate methods declared as protected
Fix HeadersAdapters implementations
@MatrixVariable resolvers for WebFlux
Remove redundant check
prepared for 3.1.1 release
Polishing
Clean up warnings in spring-webmvc
Align RdbmsOperation javadoc with jdbcTemplate defaults
Add spring-build 2.5.2
Added the Spring Framework reference documentation
Consistent internal use of getMergedLocalBeanDefinition
Ensure correct boxing in compiled code for OpEq with primitives
updated WebSphere and WebLogic transaction manager sections to reflect currently supported versions
Polish Javadoc for EmbeddedDatabaseBuilder
Allow JAXB to be registered next to plain Jackson
Polishing
general revision of cache package; added ConcurrentMapCacheManager
Rename SQL script annotations in the TCF
Release version 3.2.0.RELEASE
Improve ReactorNettyTcpClient shutdown logic
DefaultCorsProcessor checks for existing CORS response before attempting to compare origin
ResourceBundleMessageSource supports "defaultEncoding", "fallbackToSystemLocale", "cacheSeconds"
Apply parentheses consistently within <methodname/>
Improve handling of empty response with Mono<T>
DefaultPersistenceUnitManager can determine persistence unit root from orm.xml location
SPR-7912 Add tests for FormattingConversionServiceFactoryBean, update reference docs, and remove mvc:formatters
Removed javadoc references to non-accessible subclasses
Changed order of modules
DefaultConversionService properly converts Object[] to int[]
Merge branch '5.1.x'
Release Spring Framework 3.1.0.RELEASE
Polishing
Drop "get" prefix from Part accessor methods
Consistent SpelEvaluationException messages in findAccessorForMethod
Delete unused imports
Use ServerCodecConfigurer in HandlerStrategies
Remove JSONP support
Clarify Javadoc for CacheControl.noCache,noStore
Consistent equals implementations across class hierarchies
Detect MariaDB as MySQL (for mariadb-java-client 2.4+ compatibility)
Polish ForwardedHeaderFilter and related code
Merge branch '5.1.x'
[SPR-8240] Documenting TestContext support for @Configuration classes in the reference manual; and polishing the testing content in general.
+ update cache docs
Polishing
changelog updates
Various DefaultListableBeanFactory clarifications
fixed test failures
Consistent overriding for all variants of init/destroy method inheritance
Ordered WebMvcConfigurer interceptor registrations
Drop outdated BeanFactoryLocator / beanRefContext.xml mechanism
Avoid deprecated Mockito methods
NamedParameterUtils.isParameterSeparator checks for non-ASCII characters
Consistent instanceof/casting of Class references
Polish mockito usage
ReactiveAdapterRegistry detects Reactor
removing svn:externals usage approach to common test artifacts
sync with reactor-stream package-scope change
Add getter for the length of a WebSocket message
Fix javadoc ambiguity
SPR-6939 - XStreamMarshaller + JsonHierarchicalStreamDriver + JsonWriter.DROP_ROOT_MODE produce empty output
TaskExecutorRegistration does not apply its default settings to a user-provided executor
CustomSQLExceptionTranslatorRegistry/Registrar etc
Suppress warnings regarding deprecated JdkVersion
SPR-8247 review changes
Update changelog
Polish WebJarsResourceResolver
Fix failing test
Remove remaining JRuby and Commons Pool test resources
Polish Javadoc in MediaType
Improve shutdown responsiveness of SubProtocolWSH
added reference docs to the build
Add documentation for Spring MVC Test
Polishing
added conversion service performance optimizations; added mapping cyclical ref handling; removed ConverterInfo in favor of specifying S and T at registration time if necessary
Polished *JdbcCall/Insert classes
Prepend context/servlet path to FormTag action
Upgraded embedded ASM version to 5.0
Lenient fallback to plain getBundle call without Control handle
Added Eclipse project settings for the new web.struts module.
Merge branch 'SPR-9984' into cleanup-3.2.x
Polishing
SPR-2581: Provide out of the box implementation of the thread scope
instantiateUsingFactoryMethod avoids NPE and reports argument types in case of explicitArgs and resolved generic arguments as well
SPR-5327: tweak the build.xml for core to try and make commons-logging optional in generated poms
Refactor and polish SockJS package structure
Consistent vararg declarations for String array setters
Drop use of WebApplicationContext in tests
ContentCachingRequestWrapper supports content cache limit
Polishing
Consistent throwing of BeanInstantiationException for factory methods, including a hint about circular references
Polish ServletUriComponentsBuilder
Support abstract, bridge, & interface methods in AnnotatedElementUtils
Remove unneeded conditional logic
Revised ReflectiveMethodResolver to properly handle any kind of List returned from a MethodFilter
Restore formatting change following revert
Require Encoder & Decoder in Reader & Writer wrappers
[SPR-6184] Introduced ResourceTypeAwareContextLoader interface and removed dependency on AnnotationConfigContextLoader in TestContext.
ResourceHandlerFunction returns EntityResponse
Polish reactor-ipc/netty contracts
Unwrap JPA PersistenceException on flush failure (for Hibernate 5.2)
Add handler method parameter and result converters
Avoid dependency on WebUtils for extracting file extension
Fix detection of the @SendTo annotation
Re-add vararg options in WebHttpHandlerBuilder
Updated note on Bean Validation 1.1
Polish EnumerablePropertySource
Polish WebFlux WebSocket docs
Polishing
Configure JUL/log4j for JUnit 5 in spring-test
ShallowEtagHeaderFilter use specified contentlength
Polish content disposition
Drop Servlet 2.5 runtime compatibility
Improve 3.2 migration guide re: JUnit & Hamcrest
[SPR-8240] polishing
Async return values refactoring in Spring MVC
Polish HeaderResultMatchers
Polishing
Close 'beans' tag in MVC namespace documentation
Add public access to PathMatcher in WebSocket config
basic JUnit 4.5 compatibility (accepting use of deprecated SPI)
SPR-5276: Updated Acegi site link to point to Spring Security
JsonViewResponseBodyAdvice throws IllegalArgumentException in case of >1 view class specified
Move builder methods to VersionResourceResolver
Replace J2EE with Java EE
Add packages documentation
Fix typo {explictly => explicitly}
Polishing
Polishing
Make use of enhanced MessageHeaderAccessor support
Polish
Add flushing support
Logging refinements for transaction and cache processing (debug/trace)
Create empty EnumSets & EnumMaps in CollectionFactory
Discovering and accumulating all @Profile meta-annotations
Upgrade to Caffeine 2.1.0
Exception fine-tuning and general polishing
RESOLVED - issue SPR-5596: Test @Autowired @Configuration class constructors
Beverly's edits reviewed; fixed coverage for SimpleJdbcCall and the use of default parameter values (SPR-5929)
Fixed ReflectiveMethodResolver to avoid potential UnsupportedOperationException on sort
TypeDescriptor properly narrows ResolvableType for non-typed collection elements
Removed tests for invalid -1 index (for compatibility with JsonPath 2.1)
Moved SpringFactoriesLoader to io.support in order to resolve tangle.
fixing tests in .test package that were failing due to missing CGLIB dependency
Refined DefaultJpaDialect's InvalidIsolationLevelException message
Allow Errors after @RequestBody and @RequestPart
polish
Polishing
HttpEntity and its subclasses insist on same target type for equality
Javadoc
Ignore spring-build 'docbook' directory
Only call EhCacheManagerFactoryBean's destroy() method when actually initialized
Initial import of web servlet module
Extended support for meta-annotations etc
updated module list
Use ConcurrentMap declarations when calling putIfAbsent (for compatibility with JDK 6 and 7)
Clarify WebContentInterceptor path mappings and efficiently match them
+ added fine grained privileged blocks to preserve the caller security stack when invoking the callee
Polish Javadoc for JsonPathExpectationsHelper
Refined CronSequenceGenerator's rounding up of seconds to address second-specific cron expressions
TemplateAwareExpressionParser treats null as non-template ParserContext
Upgrade to spring-javaformat-checkstyle version 0.0.7
Fix error in mock server test code
moving unit tests from .testsuite -> .beans
Polish ExchangeFilterFunction[s]
Fix minor issue in StandardToWebSocketExtensionAdapter
Upgrade to Gradle 2.14.1
Polish
Better handling for AsyncRequestTimeoutException
Disable streaming when reading to Resources in RestTemplate
Avoid resume-suspend race condition
renamed operator IS to INSTANCEOF, may yet delete..
Latest dependency updates (Hibernate Validator 5.2.3, OkHttp 2.7.2, Netty 4.0.34, Undertow 1.3.16)
SPR-6220: Corrected spelling of 'DataSource'
Polish trailing whitespace
removed aopalliance errant dependency; removed unused import
Fix for NPE when creating ProtobufHttpMessageConverter without ExtensionRegistryInitializer
Resource transformers use AsynchronousFileChannel
revised initial cut of serializer package; moved Converter adapters to sub-package 'support'
AbstractMessageSource does not attempt to format code-as-default-message
Updates to whats new in Spring 3.1 section
Changed ClientHttpRequestInterceptor array to List
Fix media type lookup case sensitivity
SPR-6678: fix poms for 3.0.1
Java 5 code style
expression parser stuff
Polishing
Replace references to VMware with Pivotal
Polishing
Polish "What's new in Spring 3.1" re @Enable*
SPR-6801 @ModelAttribute instantiation refinement.
Moved tests from testsuite to web.servlet
Moved tests from testsuite to jdbc
renamed back to TypeDescriptor after ConversionContext proved not good enough name for any change
Polish DeferredResult
Use non-lenient constructor resolution mode for @Bean methods
autoGrow support in DataBinder for field access
Fix [serial] compiler warnings
Catch errors when adding SourceHttpMessageConverter
Merge branch '5.1.x'
Disable "failOnServerError" in ReactorClientHttpRequest
Test @Sql as a merged composed annotation
adding eclipse project settings for org.springframework.instrument.classloading
Reactor StringEncoder into CharSequenceEncoder
Refactor ResponseBodySubscriber to Processor
Add CORS support
Refactor MappingContentTypeResolver implementations
Remove hard configuration validation from SpringClassRule/MethodRule
Polishing
Multicaster support for events with null source
Do not execute ResourceUrlEncodingFilter only once per request
Minor updates based on PR#1058
Improve documentation for annotation filters with component scanning
Polish
Polish logging in resource handling
Move JSON and XML codecs to org.springframework.http.codec
s/(init|destroy)MethodName/(init|destroy)Method/ to reflect recent changes made when porting @Bean to Spring core.
FutureAdapter should wrap RuntimeExceptions
Eliminate need for rxJava in Json Encoder
Common base class for [Unknown]HttpStatusCodeException
Add missing @since tag to SimpleKey
[SPR-7850][SPR-7851] Upgraded to JUnit 4.8.1 and TestNG 5.12.1; added changelog entries for 3.1.0.M1.
add paragraph on SpEL, reorganize section layout.
Allow TestContextManager to be compiled in Eclipse again
Remove ParsingPathMatcher
Use port scanning for JMX tests
an outline of the Getting Started chapter
removed some JavaConfig references
Updated compatibility statements in RequestUpgradeStrategy javadocs
ClassReader relies on autoboxing for reuse of cached primitive values
CacheProxyFactoryBean exposes all relevant CacheInterceptor callbacks
Polishing
fixed typo
Improve documentation for tx support in the TCF
Sync pom.xml deps with ivy.xml changes since 3.0.5
@ActiveProfiles mechanism works with @ImportResource as well (SPR-8992)
Improve Javadoc for HandlerAdapter and HandlerMapping
added documentation for the task namespace
SimpleAliasRegistry detects circles between non-canonical aliases as well (through hasAlias)
Add ResultMatchers for status code ranges
Fix failing test
ToStringVisitor consistently returns platform-independent line breaks
Revise charset by location support for static resources
EhCacheFactoryBean uses reflection to call setStatisticsEnabled method (which allows for building against EhCache 2.7+)
Consistent nullability in DataAccessUtils through nullableSingleResult
Document proxy support in ReflectionTestUtils
Override clover.instrument target to avoid build failure. Created SPR-5921 to fix this propertly.
Split the compile and test-compile macros.  Added a pre-compile macro.
Polishing
Polish WebSession javadoc
AbstractRequestLoggingFilter unwraps request to find ContentCachingRequestWrapper
Polish
Remove Gradle Daemon JVM args compatible with JDK 9
Polish: String.valueOf() should not be appended to a String
Add ObjectToStringHttpMessageConverter
Polishing
Renamed buildsrc to buildSrc
Update to latest Reactor snapshot
Rename HttpStatus 308 to Permanent Redirect
Never use parenthesis for single lambda arguments
Consistent support for setStartTime in CronTrigger(Factory)Bean and SimpleTrigger(Factory)Bean, and consistent declaration of varargs in scheduling.quartz package
Map ORA-30006 to CannotAcquireLockException as well
Polishing
Restored isTypeMatch null behavior and refined typeToMatch parameter name
Support for PostgreSQL array syntax
Add canRead/Write to MarshallingHttpMessageConverter
AbstractEmbeddedDatabaseConfigurer explicitly closes JDBC Connection on shutdown
Fix compiler warning
RESOLVED - issue SPR-4661: Improve context-property-placeholder configurablity
removed getting-started; added section on new tutorial
Support for @Conditional configuration
Polishing
DefaultWebSessionManager supports multiple sessions
Add ViewResolverRegistry#scriptTemplate in WebFlux
Use Publishers.zip instead of Streams.zip
Relaxed position assertion (for overflows in large inline maps)
Reuse JmsTemplate's MessageConverter in JmsMessagingTemplate
Consistent use of varargs, consistent template method order
Polishing
Merge pull request #704 from aantono/master
JUnit 4.6 --> 4.7
Add WebExchangeDataBinder
ScheduledAnnotationBeanPostProcessor accepts non-void methods as well
Update Apache license headers for affected sources
RequestHeaderMapMethodArgumentResolver defensively checks for non-existing header values
Merge branch '5.1.x'
+ minor doc fix
prepared for 3.1 RC1 release
Next Development Version
Add text/markdown MediaType constant
Polish error logging for HTTP reactive server classes
The 'task' sub-element of the 'scheduled-tasks' element is now 'scheduled' to be consistent with the @Scheduled annotation (and to avoid task:task).
Polishing
Split FluxProcessor factories into individual Processor, remove confusing factories
Rename reactor.io.netty -> reactor.ipc.netty
AbstractFallbackTransactionAttributeSource's DefaultCacheKey takes targetClass into account (again)
Ensure that JSON is written to response body
Upgrade to Tomcat 8.0.30 and Undertow 1.3.9
Ensure StompEncoder never writes content-length twice
Upgrading version to 3.0.4
Deprecated ClientRequest.method in favor of ClientRequest.create
Polishing
Pruning of outdated JDK 6/7 references (plus related polishing)
Rename EnvironmentBeansTests* -> ProfileXmlBeanDefinitionTests*
WebSocket callbacks need to remain inner classes (retaining generics)
Polish
Fix inputstream reading for HTTP range requests
Update links to Spring JIRA server
Corrected typos and sorted Eclipse classpath.
Fixed broken link to non-existent mvc-multipart-resolver ID.
revised cache abstraction
Add test to assess claim in SPR-10330
Fix HeaderResultMatchers#string(String, String) assert order
Upgrade to Gradle 3.4 final (and Hibernate ORM 5.2.8)
Polishing
Update API links in reference documentation
Remove workaround for reactor-core issue
Fix ResourceUrlEncodingFilter with context mapping
Folded a FactoryBean-specific check into predictBeanType now
Refined throwing of BeanCreationExceptions (and reflection exceptions)
Do not resolve DTDs in Stax Tests
Check supported locales in AcceptHeaderLocaleResolver
MockHttpServletRequest leniently handles invalid Accept-Language header
Release version 3.2.0.RC1
Introduced AnnotationConfigRegistry as common interface for AnnotationConfig(Web)ApplicationContext
Polish
Fix links in MVC chapter
[SPR-5944] Documented potential "false positives" in ORM test code.
Synchronized updates of STOMP header key cache
M1 cut of environment, profiles and property work (SPR-7508)
Class identity comparisons wherever possible
Remove accidentally committed test case
GroovyBeanDefinitionReader consistently throws BeanDefinitionParsingException for invalid files of any name
SPR-6236: Reintroduce Struts support
Upgraded to JSF 2.0 baseline; building against JSF 2.2 now
Remove unused imports
Building against Quartz 2.2.1 and JavaMail 1.5.2
Avoid unused arguments for internal delegates
moving unit tests from .testsuite -> .beans
Support for custom argument resolvers
renamed internal *GenericConverters to *Converters
Improve support for caching encoded resources
Restore 3.2.0.RELEASE url paths in migration guide
Support array of scalar values in Jackson2Tokenizer
Add missing @Nullable annotations on parameters
Fix trailing slash issue
BufferedImage converter writes Content-Type again
Avoid defining nullability for non-relevant API
ClassMetadata exposes isAnnotation() now, and correctly returns false from hasSuperClass() for interfaces and annotations
Add script after setting scripts in RsrcDbPopultr
polish
Update tests according to latest reactor-test changes
revised ResourceHttpRequestHandler (SPR-7116)
isLiteConfigurationCandidate considers @ComponentScan and @ImportResource as indicators as well
Upgraded embedded Derby support to 10.6+ and build to 10.10
Merge branch '5.1.x'
Require JUnit 4.9 or higher in the TCF
Fix issue in DefaultUserDestinationResolver
moving unit tests from .testsuite -> .context
Consistent java.util.Optional resolution, lenient handling of optional multipart files, correct Servlet 3.0 Part list/array selection
Pass SockJS session attributes to HandshakeHandler
Introduce FeatureSpecification support
Add reactive ScriptTemplateView
Support @RequestBody Flux<Part> in WebFlux
Add Hamcrest 1.1 as test-time dependency for .context
Fix regression in ClassPathResource descriptions
@MVC handler method resolution
Merge pull request #624 from leizhiyuan/master
Clean up warnings related to forthcoming removals in Tomcat 9
Update to the latest Reactory Netty snapshot
Polishing
link to validation section
Polishing
marked spring-tx as a required dependency (SPR-6737)
Polishing
DataBindingPropertyAccessor with factory methods (forReadOnlyAccess etc)
shortened build properties "org.junit.version" to "junit.version" and "org.testng.version" to "testng.version"; reverted SLF4J version back to 1.5.3 (for Hibernate 3.3.1 compatibility)
Fixed potential NPE in SharedEntityManagerCreator
Polishing
NamedParameterJdbcTemplate provides accessor for classic JdbcTemplate
Sync argument resolution and HandlerMethod invocation
Moved Quartz and Timer discussion after TaskExecutor and TaskScheduler
Add Google Protobuf support with a MessageConverter
annotation driven number formatting with default number formatting rules
Moved REST views to View chapter.
Exclude Jetty version of servlet API
Fix layout in What's New section
Add RequestBodyAdviceAdapter
Rename test versions of @Qualified and @Autowired
Update after `reactor.core.converter.Converters` changes
Add div around extra hidden fields in FormTag
Revised assertion refactoring in AbstractExpressionTests
SPR-17074 Replace pointless wrapping with Arrays.asList with iteration over array
Deferring object mapper until Spring 3.1 when it will be used by other projects
Consistent and efficient access to BeanDefinition argument values
Revised Joda-Time support (as a side effect of JSR-310 support in Spring 4.0)
Broadly remove deprecated core classes and methods
Fix white spaces
WebHttpHandlerBuilder supports @Order on beans
prepared for 3.0.5
Polishing
Rename doesExist() to exists() for header assertions
Polishing
Trim expressions supplied to @DisabledIf
ConfigurationClassPostProcessor skips pre-processed bean definitions now (avoiding side effects in case of multiple CCPPs)
Clear synchronization before triggering afterCompletion callbacks
Add SpEL based selector to DefaultSubscriptionRegistry
Jms request/reply operations
List all unsatisfied request param groups
Add ServerHttpResponse.addCookie method
Remove HttpRequestPathHelper
Revisit empty body response support in HTTP client
Conventions lazily retrieves shared ReactiveAdapterRegistry
final polish on .testsuite .aop.aspectj tests prior to migration to .context
Removed obsolete JBoss 5.x support code from JBossLoadTimeWeaver
Consistent javadoc references to java.util.concurrent and javax.enterprise.concurrent
Next Development Version
Revised Jms2MessageProducerInvocationHandler implementation with switch statement
Polish WebMvcStompEndpointRegistry
Polishing
Remove trailing whitespace in Java source code
Moved executor null check to AsyncExecutionInterceptor, allowing AbstractAsyncExecutionAspect to fall back to sync execution (as in 3.2.1)
Update and improve script templating documentation
Minor refactoring in PathPatternParser
Bean definition DSL generates unique bean names for bean classes
SPR-7812 Provide separate methods for type and method-level custom request conditions. Polish javadoc in RequestMappingInfo and related HandlerMapping classes
Explicit support for Hibernate Integrators on LocalSessionFactoryBean
Support @ManagedNotification & @ManagedOperationParameter as merged annotations
Align with 5.0.x change #cd3ed7
Consistent UnsatisfiedDependencyException exposure with injection point metadata
Polishing
NoUniqueBeanDefinitionException exposes beanNamesFound collection
HttpSessionHandshakeInterceptor and related web.socket.server polishing
Remove temporary workaround in ReactorServertHttpResponse
Consistent PropertyAccessor method order as declared in the interface
Multipart file tests reliably pass on Windows as well
Polishing
Normalized AnnotationAttributesReadingVisitor class layout and improved diagnostics through delegating to AnnotationUtils
Remove the -with-dependencies build
Polishing
Improve WebSession related tests
StandardMultipartFile.transferTo falls back to manual copy
Add missing ROME dep
Ignore HEAD requests in ShallowEtagHeaderFilter
Added MappingJackson2MessageConverter for JMS
PropertySource implementations perform conversion to String arrays via StringUtils (getting rid of EMPTY_NAMES_ARRAY)
Introduce support for HtmlUnit in Spring MVC Test
Moved tests from testsuite to orm
Clean up Spring MVC Test Framework code
Remove Tiles 2 support
Remove duplicate @since tags in EmbeddedDatabaseBuilder
Made ObjectMapper field private with protected accessor
AnnotationTransactionAttributeSource applies class-level metadata to user-level methods only
polish
Merge branch 'cleanup-3.2.x' into SPR-10126
Assigned cache manager name in order to avoid EhCache assertion failure in case of multiple tests executed on the same VM
LinkedCaseInsensitiveMap explicitly implements put/computeIfAbsent
Synchronize message sending
Polishing
Update to Reactor Aluminium SNAPSHOT
Add concurrent WebSocket session decorator (temp commit)
forgot to update eclipse project when updating hibernate versions
AnnotationAttributes stores and re-throws resolution exceptions
Remove Stream#toBlockingQueue use
renamed path element to mapping per code review
Simplify use of headers for SockJsClient requests
Clarify javadoc
CallMetaDataContext handles 'procedureColumnResult' as return parameter
Polish
ResourceHttpRequestHandler initializes PathExtensionContentNegotiationStrategy in afterPropertiesSet
Expose ResolvableType in NoSuchBeanDefinitionException
Fix formatting
Now mentioning JSR-330 annotations in test chapter.
SPR-5327: tidy up Maven dependencies (keeping commons-logging)
Mark PathResourceTests as deprecated (along with PathResource)
Fix websocket compatibility with Tyrus 1.9 - 1.12
Reduce SpEL compilation restrictions on mathematical expressions
updated reference documentation with references to "spring-agent.jar" to use "org.springframework.instrument-{version}.jar" (SPR-6597)
Expose return-value-handlers in mvc namespace
Fix issue with @RequestBody args that are type vars
JavaMailSenderImpl catches Exception instead of MessagingException and checks for reconnect in case of message batches
Handle exceptions properly in SpringJUnit4ClassRunner
SQLErrorCodesFactory provides unregisterDatabase method
LoadTimeWeaver.getThrowawayClassLoader() decorated for exclude support (if necessary)
Support non-public anno. attr. values in AnnoUtils
Merge branch 'cleanup-test-duplicates' into cleanup-3.2.x
Restrict nested configuration class introspection to component types
Wrap RestTemplate extractor exceptions in RestClientExceptions
Simplify ReactorNettyTcpClient input
Add ResolvableTypeProvider
fixed broken tests
Replace 'recourse' with simpler terms (SPR-7339)
Refactor HandlerMethod support in spring-messaging
Avoid payload conversion if unnecessary
doc updates
Support specifying Jackson TimeZone and Locale
moving unit tests from .testsuite -> .context
[SPR-7849] work in progress: revising the testing chapter based on internal review.
ConcurrentModel ignores null value for put (also used by putAll)
test datasource factory initial commit; needs review from Juergen on how to best make DataSource available as a Spring bean when desired
Next development version 4.0.0.BUILD-SNAPSHOT
SPR-8532 Upgrade org.springframework.web.servlet to Servlet 3.0 (as provided dependency) and add support for javax.servlet.Part parameter
UrlBasedViewResolver exposes redirect/forward prefix as bean name
Fix typo
Deprecated Spring's own JSP expression evaluation
Improve WebFlux support for response status exceptions
AbstractAutoProxyCreator ignores unused early proxy references
Fix typo in new-in-3.2.xml document
Ensure all tests are executed in the Gradle build
Fix binary compatibility for SmartApplicationListener
Add 3.1 migration section to reference docs
Replace space indentation with tabs
+ Added isCglibClassName() to AopUtils for checking bean class names before classloading
Merge branch '5.1.x'
Update dependencies for spring-aspects
Revert introduction of isNotEmpty aliases
Link to Spring Integration at end of event coverage
Merge branch '5.1.x'
Resolve target type for GenericHttpMessageConverter.canWrite/write
Update Codec API to use Map<String, Object> for hints
Start migration annotation utility methods
DefaultResourceLoader resolves writable FileUrlResource for "file:" URL
Add contextPath support for reactive web applications
Fix Protobuf support - HTTP headers already written
Polish
Polishing
Remove unnecessary mentions of aspectjrt/aspectjweaver
Enforce non-null value from getBean and at injection points
Support of HTTP persistent connections for JDK client
Polish
Add "New in Spring 3.2" section to reference docs
AspectJExpressionPointcut consistently resolves superinterface methods
preparations for 3.0.1 release
SPR-6447
SPR-5460: Add AtomView sample to PetClinic
Add missing overrides to MockServerHttpResponse
filled in some basic details on the type conversion support.  No TODOs left in this section now.  Also properly added the selection/projection sections.
Include response headers in RestTemplate exceptions
Consistently return null if certificates not available
Added tests for the 'scheduler' element parsing within the 'task' namespace.
SPR-8823 Fix test error.
Change to Definitive generic signature for Publishers.zip
Inferred generics for newSetFromMap arrangements
fixed failing test
Support n meta-annotation levels on methods in AnnotationUtils
Use OptionalValidatorFactoryBean in Configurers
Deprecate XmlBeans support (following the XMLBeans retirement at Apache)
Rename ServerResponse.BodyBuilder.body to syncBody
Consistent fine-tuning of synchronized and concurrent data structures
SPR-16316 — fix transaction timeout value overflow
Align AnnotationAttributes.toString() with contract in Map
Avoid NPE in case of @Lazy @Autowired(required=false)
Provide distinct Web and Reactive Web sections
Fix FreeMarker form checbox macro generated names
Polishing
SPR-7604 - Support multiple embedded databases.
Use fixed GMT time-zone for WebSession Clock
Polish Javadoc for SpringJUnit4ClassRunner
Refactor reactive mock request and response support
Refactor media types parsing improvements
Mention Groovy Markup Templates in ref doc
Consistent use of WebFlux terminology over Web Reactive
Polish whitespace
WebFluxResponseStatusExceptionHandler for @ResponseStatus introspection
Set Gradle project name for CI
Upgrade to Gradle 4.2.1
Add SimpMessageSendingOperations
MockRestRequestMatchers can match query params
Overhaul AnnotatedElementUtils
Polish (minor)
Avoid MimeType garbage creation
Add heartbeat lock to SockJS server sessions
Fix test condition
Polishing
SPR-5249: Atom and RSS View
Introduce HttpMessage hierarchy
Fix typo 'type form'->'type from' (SPR-7339)
Harmonize resources location
Avoid creating Exception instance if not needed
StandardServletMultipartResolver accepts any HTTP method for multipart
Revision of SpelCompiler support, resolving a subpackage cycle through moving CodeFlow and CompilablePropertyAccessor to the main spel package
SPR-6464 Add RedirectAttributes and SmartView interfaces.
Integrate suggested support for creating MVC URLs
+ Removed org.springframework.config.java module
EventListenerMethodProcessor leniently handles unresolvable bean types
Revised WebServiceFeature handling: requiring JAX-WS 2.1+, including support for JAX-WS 2.2 service-level features now
Add undertow 1.1.0.Final support
Enable AbstractStaxHandlerTestCase to run w/o Internet connection
Added "recovery-interval" attribute to <jms:listener-container>
Upgrade to Gradle 2.13
Polishing
Fix whitespaces in build.gradle
Upgraded to JCache 0.11 for Spring Framework 4.0 RC1
Polishing
Add support for adding cookies as headers in MockHttpServletResponse
Polish
Additional convenience methods in UriUtils
clean up use of old <value></value> usage.
Fix CachingResourceResolver key generation
Polishing
Latest dependency updates (POI 3.13, Reactor 2.0.6, Netty 4.0.32, Tomcat 8.0.27)
Fix typos in RequestResultMatchers
Support servlet listener activate attribute
Update websocket xml namespace attributes
Correct Javadoc in ServletUriComponentsBuilder
Fix regression for newline separators in SQL scripts
Improve decoding support for multipart filename
@Transactional qualifiers work in unit tests as well (SPR-6892)
Allow relative paths within resource location path
DefaultPersistenceUnitManager extracts jar file from default persistence unit root URL
Remove return statements in finally blocks
Polishing
DateFormatter's ISO patterns use XXX timezone notation (as per SimpleDateFormat's javadoc)
OpenJDK 8 build 99: Jibx compiler fails - ignoring Jibx tests for the time being
A BeanDefinitionRegistryPostProcessor may register other BeanDefinitionRegistryPostProcessors
Renamed RouterFunction composition methods
RequestCondition implementations minor refactoring
MockHttpServletRequestBuilder allows for specifying content type as String value
renamed ValueWrapperImpl to SimpleValueWrapper (for use in Cache implementations)
SPR-8661 Add disabled attribute to HiddenInputTag
jdbc:script's "separator" and "execution" attributes work nested with embedded-database as well; added "encoding" attribute to jdbc:script element; general revision of DatabasePopulator configuration and execution code
Fix failing tests
Add configuration for message buffer size limit
Remove -XX:MaxHeapSize=256m from default GRADLE_OPTS
Merge branch '5.1.x'
Polishing
Clear AnnotationUtils cache after context refresh (along with others)
JodaTimeFormatterRegistrar supports Duration and Period as well
Polishing
prepared for 3.0.2 release
Removed outdated XmlBeanFactory references
Defensively check javaUtilOptionalEmpty
Streamline XML namespace support towards unversioned schemas
Correct the javadoc for ExchangeResult.getUrl()
Polishing
SPR-4493
Polish
Expose request id at the ServerHttpRequest level
Detect a FactoryBean type match even if predictBeanType returned a non-FactoryBean type
Polish
Fix ResourceHttpRequestHandler empty location log
Initial import of instrument.classloading module
[SPR-8240] Documented ContextLoaders in the testing chapter.
Polishing (in particular updating javadoc references to Apache Commons)
Nested properties support for field-based validation
Documented HttpEntity
Add simple URL mapping and handling
Consistent method selection for listeners and endpoint mappings
Restore compile dependencies in generated POMs
final preparations for M3 release
Use MockitoJUnitRunner from Mockito 2's preferred location
Add ExpectedCount#never()
Fix SpEL varargs handling and usage of other getValue() methods
Add shared instance of ReactiveAdapterRegistry
Polish method names in JdbcTestUtilsTests
Polish web.client exceptions and related classes
Explicit error message for bean name clash with containing configuration class
Polish hint for suppressing logging at Encoder/Decoder
bindToApplicatonContext uses WebSessionManager bean
polishing
Use findAnnotationAttributes() where appropriate
AspectJExpressionPointcut leniently ignores non-composable interfaces
Support not (!) operator for profile selection
SPR-8974 Fix regression in UriUtils.java
Merged HttpClient defaults with local customizations
SPR-6246: split up Velocity test cases for neatness.  Add fix for bug in exception creation in VelocityView.
Reactive InvocableHandlerMethod in spring-messaging
declarative destroy-method="..." specifications get validated at bean creation time (SPR-5602)
Add value() attribute to @Payload
polish
Runtime resolution of JMS reply destination
pom maintenance - sync with ivy.xml
Deprecate SimpleJdbcTestUtils in favor of JdbcTestUtils
Jackson2JsonTokenizer unwraps top level array only
SPR-5749: Add defensive matching using target class loader
Merge branch 'share-test-classes' into cleanup-3.2.x
Moved tests over from testsuite to beans
moving unit tests from .testsuite -> .aop
Ensure Environment.shutdown() in Reactor2TcpClient
Remove JMXMP from TestGroup
Turned ByteBufferConverter's visibility to package level
SPR-7116 further work in progress.  Added white-listing by media type, checking MIME type from the ServletContext, and some additional validations.
Increment version to 3.2.0.BUILD-SNAPSHOT
Initial preparations for 3.2.2
Typo in ApplicationContextAware and BeanNameAware section
Fix VerifyError for SpEL ternary compilation
Fix cache ref doc typo: Eh{c=>C}acheCacheManager
Detect depends-on cycles and throw proper exception
Integrate animal sniffer
SPR-6819
getAcceptLanguageAsLocale(s) returns most preferred Locale
What's new and migration doc updates
Polish contribution
Replace more references to issue tracker
Polishing
Common DataWithMediaType class and common synchronization for ResponseBodyEmitter/SseEmitter
No Content-Disposition if HTML in the request mapping
Refined default excluded packages
Add CompositeRequestCondition
Refactor codecs
Polishing
Refactor ObjectToObjectConverter & improve exception msg
WebFlux supports UriBuilder, UriComponentsBuilder args
Polishing
@SendTo support for jms listener endpoints
Update javadoc for (Async)RestTemplate
Add support for Jackson serialization views
Fix typos detected by github.com/client9/misspell
moving unit tests from .testsuite -> .aop
Add SimpleMessageConverter
moved ApplicationContext-dependent .aop.* unit tests from .testsuite -> .context
Polishing
+ update pom
Polishing
Don't use `==` when comparing strings
Add SpEL support for float literals
polish
Polish profile expression support
Polishing
CollectionToCollectionConverter avoids collection copy for untyped collection when simply returning source anyway
Fixed job scheduling data test for Quartz 1.8
Uncomment buffer leak tests in DataBufferUtils
Polishing
Fixed BadSqlGrammarException usage in transaction test suite
ModelAttributeMethodProcessor detects re-enabled binding declaration
Deprecate JdkVersion (for optimistic compatibility with newer JDK generations)
SPR-3360: util:property-path like functionality for the p-namespace
Polish UriTemplateTests
Manage asynchronous EventListener with replies
Initial changelog entries for 4.0 M1
polishing .aop tests
Polishing
ParameterContentNegotiationStrategy uses MediaTypeFactory
Reuse mock request from the TCF in Spring MVC Test
Delete unused imports in spring-messaging
Document Elvis Operator (?: ) and Safe Navigation Operator (?.)
Nullability fine-tuning based on IntelliJ IDEA 2018.3 inspection
fix ecliipse jar imports to match recent changes (hibernate, openjpa) to 
Include target types in MethodReference cache
Replace 'Java EE' with 'enterprise Java' as appropriate
HibernateJpaSessionFactoryBean is compatible with Hibernate 4.3 as well now
CachedIntrospectionResults completely traverses interface hierarchy
Support overriding, removing headers in ClientRequest
Update copyright header
Fix copy-n-paste errors in NativeWebRequest
Polish WebSession support code
Support for multiple events per method
SocketUtils considers port range including maxPort
Rename AppCacheResourceTransformer
Use original query string of forwarded request
Fixed the output stream incomplete data by explicitly flushing the OutputStreamWriter
Clean up warnings in spring-messaging
WebAsyncManager avoids concurrentResult.toString() and builds correct DeferredResultProcessingInterceptor keys
ExceptionTypeFilter and InstanceFilter live in util package itself now
Polish spring-messsaging
Polishing
Polish contribution
Expose resource lookup function
SPR-7308
Fix typos
BeanWrapper auto-growing support for EnumSet / EnumMap
Documented recent changes to the TestContext framework in the changelog
MockHttpServletRequest resets InputStream/Reader on setContent
AnnotationAsyncExecutionAspect etc
mvc namespace docs
Merge branch 'SPR-10093' into 3.2.x
Abed Rabbo --> Abedrabbo
Polishing
Reverted Dave's changes to Eclipse project settings since we do not use Maven to build.
Polishing
Improve exceptions for multi-operand expressions
Update to spring-javaformat-checkstyle 0.0.7
Enable HTTP compression Reactor ClientHttpConnector
Add quartz scheduling test to TestGroup.PERFORMANCE
Make AbsTstCtxBootstrapper.resolveContextLoader protected
Polishing Eclipse classpath settings
Move MonoToListenableFutureAdapter to spring-core
Further changes for 3.2 RC1
Polish
Improve debug logging at BeanDefinitionReader and BeanFactory level
Polish tests and Javadoc for SPR-8824
Introduce @DisabledIf annotation for JUnit 5
fixed broken tests
Merge branch '5.1.x'
Documented AbstractBeanFactory nullability warning
General defensiveness about the bootstrap ClassLoader (i.e. null ClassLoader)
Polish PathPattern and parser
@Ignore empty test methods in RootWacEarTests hierarchy
Rename {Default=>Standard}Environment
JmsMessagingTemplate uses local convertJmsException template method instead of generic MessagingExceptionTranslator interface
UriComponentsBuilder copies query params through MultiValueMap.addAll
Polish logging
Protect RequestCondition against unkown HTTP methods
Refined javadoc for SimpleEvaluationContext and its builder features
JdbcUtils.getResultSetValue avoids re-retrieval from ResultSet for Blob/Clob content (for Derby compatibility)
SPR-7470
further 3.0.3 preparations
Change this "try" to a try-with-resources
Fix typo in TransactionManagementConfigurer Javadoc
Fix typo
Fix issue with generic @RequestBody arguments
Polish
+ Eliminated .util package
[SPR-5145] Updated reference manual regarding upgrade to JUnit 4.5; additional improvements in the testing chapter as well.
Revised documentation for PDF, Excel and JSON views
Add servletRelativeAction form tag attribute
polish
LocalSessionFactoryBuilder provides Hibernate 5.3 BeanContainer support
Introduce EJB-based transactional tests in the TCF
Use Map.getOrDefault in getSqlType implementation
fixed SPR-6846
Support unique names for embedded databases
Added documentation for @Scheduled and @Async annotations.
Polish BindingContext
Add WebSocket transport configuration support
SPR-7470
SPR-7009, SPR-6972: backed out unintentionally committed tests
Minor revision of reactive support layout (ahead of 5.0 M1)
Polishing
Merge pull request #477 from candrews/patch-1
Add SockJsFrameType enum
Avoid exception while setting the status code of a committed response
Copy cookies and hints to ServerResponse builders
SPR-5634 - OXM does not permit targetClass and mapping file for CastorMarshaller
Remove spring-asm and inline ASM 4 into spring-core
Add trailing slash support to AbstractUrlHandlerMapping
Update javadoc memory and doc publication settings
SPR-6728 - Document Spring MVC exception -> HTTP status code mappings
Ensure client response is drained with onStatus hook
NestedIOException can use IOException constructor with cause argument on JDK 6+
Clean up warnings in spring-test
Remove unnecessary warning suppression in ModelResultMatchers
MockHttpServletRequest's getParameter(Values) returns null for null parameter name
Boolean getLazyInit accessor indicating no explicit flag set
Revised documentation on AUTO_ACKNOWLEDGE behavior
Polish and improve logging
Upgrade to Gradle 2.5
AbstractDispatcherServletInitializer allows for registering any FrameworkServlet subclass
Deprecated JdbcTemplate's queryForInt/Long operations in favor of queryForObject (following NamedParameterJdbcTemplate)
Add base header mapper implementation
SPR-7443 - Mentioned @ConstructorProperties in doc
Use the diamond syntax
Refine AntPathMatcher.combine when p1 contains '.'
Fixing Petclinic
Fixed LiveBeansView to not produce invalid JSON if last bean is not eligible
polishing
Polishing
Polishing
Write prelude on successive SockJS streaming requests
turned on debug logging
Short-circuit logic should be used in boolean contexts
Temp disabling reactor-netty to unblock pipeline
Update reference docs on content negotiation config
Consistent spelling for US/UK words
Polishing
Do not rewrite relative links with FixedVersionStrategy
Polishing
Initial import of JDBC module
Fixed QualifierAnnotationAutowireCandidateResolver's detection of custom qualifier annotations
Polishing
DefaultSingletonBeanRegistry avoids singletonObjects lock wherever possible for non-singleton factory performance
Speedup flushing tests
moved some TODOs into readme
Properly handle single-value map with @MatrixVariable
DelegatingFilterProxy avoids synchronization for pre-resolved delegate
Improve no content handling in MockHttpServletRequest
DefaultLifecycleProcessor etc
DispatcherHandler alignment with DispatcherServlet
SPR-8694 HTML5 updates to the "type" attribute of the Spring Form tags.
Http(Async)Client not actually nullable, plus MethodInterceptor nullability
Consistent handling of null array for arguments
Cleaning up and upgrading Eclipse classpaths.
Support user destinations with multiple app servers
Fine-tune X-Forwarded header in ForwardedHeaderFilter
Add extension point to pre-configure a MockMvcBuilder
Cache property TypeDescriptors
Clarify role of 'aware' callback interfaces
Polish timed operators and remove useTimer()
Proper nullable return declaration for AbstractValueAdaptingCache.lookup
Add support for extra MessageProducer method
Add ignorable log file to .gitignore
Update docs to use of @Bean inside a @Component
Polish Javadoc for DefaultRequestToViewNameTranslator
Introduced "mapperWrappers" bean property
polishing
Updates to readme and changelog files regarding 3.1.0.M1
Remove unnecessary @SupressWarnings.
JpaTransactionManager etc can find EntityManagerFactory by "persistenceUnitName" property now, falling back to retrieval of a unique EntityManagerFactory bean by type (analogous to @PersistenceUnit / @PersistenceContext)
added test for system placeholders in PropertyPlaceholerConfigurer's Resource array property
Refine forwarded protocol support
Remove trailing whitespace from source code
AbstractMessageSource properly interacts with non-AbstractMessageSource parent
LocaleChangeInterceptor allows for ignoring invalid locale values
prepared for 3.0 M3 release
Execute HandlerInterceptors in registration order
Common constants for default AnnotationBeanNameGenerator instances
CachedIntrospectionResults uses full WeakReference for any non-safe ClassLoader arrangement
Introduce database-name in <jdbc:embedded-database>
Migrate reference guide to well-formed docbook XML
moving unit tests from .testsuite -> .aop
Allow setting Cookie header
Consumer methods for WebHttpHandlerBuilder
Allow NEW and T to be used as unquoted map keys in SpEL
Polish "user" destination support package
Allow to specify AbstractHttpMessageConverter default charset
Polishing
Reinject Servlet mocks between TestNG test methods
updated to AspectJ 1.6.2
Polishing
Parse cache:annotation-driven key-generator attribute
Ensure all files end with a newline
SPR-8015
Revert "Remove mandatory dependency on Reactor Stream"
Polished UriComponents implementation
Align serialVersionUID declaration with ASM master
Polishing
Add support to query if ApplicationContext is available in the TCF
Polish
AsyncAnnotationBeanPostProcessor tries to find TaskExecutor by type/name
Improve null-safety to fix some Spring Boot warnings
Add "mutate" builder to ServerWebExchange
[SPR-7858] polishing formatting, grammar, etc.
Upgrade to Hibernate Validator 5.4.3 and 6.0.15
Enabled Jibx tests
Move customize(Un)Marshaller methods to abstract class
Use the defined constant in MergedContextConfiguration
Refine AntPathMatcher optimizations
Jackson2ObjectMapperBuilder/FactoryBean accepts deserializers by handled type
Merge branch '5.1.x'
Moved messaging.support.converter to messaging.converter; moved messaging.support.tcp to messaging.tcp; moved messaging.support.channel to messaging.support itself; moved handler.condition to handler itself; reworked handler.method into handler.support
AsyncExecutionInterceptor supports Java 8's CompletableFuture as a return type
Added paragraph on BeanPostProcessor side effects when autowiring dependencies into it (SPR-9577)
Add (missing) dependencies on oxm project and xmlunit library
Exclude eclipse WTP generated artifacts
Polishing and documentation fixes
Declare default methods for supportsSourceType and getOrder
Fixed typo: "occured"->"occurred"
updated changelog
updated dependencies
Revert "PoC: migrate from JUnit 4 to JUnit Jupiter Assertions"
Add "hosts" property to RedirectView
Infer return type of parametrized factory methods
Update versions
WebAsyncManager defensively ignores attribute type mismatch
Support for deferred access to StoredProcedureQuery output parameters
Rename {Default=>Standard}PortletEnvironment
ParameterNameDiscoverer may return individual null entries in an array
updating eclipse classpath settings
Fix NPE in DefaultSimpUserRegistry
Moved over initial version of aop bundle
Fix issue with resolving Errors controller argument
Post-processors consistently ignore ScopedObject/AopInfrastructureBean
Add new features on @ControllerAdvice
Use CharsetDecoder to decode a DataBuffer into a String.
Fix incorrect closing <web-app> tag in MVC docs
Migrate @TxConfig usage to @Rollback & @Transactional qualifiers
Introduce alias for 'value' attribute in @CookieValue
Convert comma-separated string into list of classes analogous to existing support for class array
include missing package component
ReflectiveMethodExecutor invokes interface method if possible
UnknownHostException as resource-not-found for properties files
Clarified repeatable PropertySource annotation vs use as meta-annotation
MessagingException provides null description (instead of empty String) to NestedRuntimeException
Polish JavaDoc for the SpringExtension
DefaultListableBeanFactory does not trigger early candidate creation ahead of primary bean selection
Reintroduced MessageMethodArgumentResolver default constructor
[SPR-6184] Introduced ResourceType enum for context loaders; documented tests.
Polish MessageBodyClientHttpResponseWrapper
Correct import order
URL Cleanup - Polishing
CachedIntrospectionResults uses ConcurrentReferenceHashMap for its type descriptor cache
Remove unnecessary boxing
Add hamcrest to beans pom in the right place to make tests compile
Introduce TestContextManager(TestContextBootstrapper) constructor
Assert status quo & add TODO
Fix JsonView + HttpEntity Reactive handling
Set 304 status on ServerResponse when ETag/LastModified match
Polishing
Buffer leak fixes
work, work.
Provider injection works with generically typed collections of beans as well (SPR-9030)
Add Servlet 3.1 methods to mock request
Polishing
Introduce alias for 'value' attribute in @RequestPart
Polish
Add formData() and multipartData() to ServerRequest
Update changelog regarding major new testing features
Rename RoutingFunction to RouterFunction
Add trySet method to DeferredResult
ResulatMatcher.matchAll
validation updateS
preparations for 3.0.3 release
Consolidating types and reducing visibility wherever possible. Non-internal public API is now at 18 types (21 including internal packages).
Further improve detecttion of custom CNVR
Delete unused Spring Security config file
Add MessageBuilder
Restore original MethodMapTransactionAttributeSource matching rules
Complete RequestMappingHandlerAdapter refactoring
Refer to static nested classes, not static inner classes
Remove previousVersion from 'jdiff' Gradle task
Polish
Added to docs
Polish
Fix regression with raw ResponseEntity type
Document global date time format configuration
line 149: fixed a typo.
Perform setParent's Environment merging for ClassPathXmlApplicationContext etc constructors with parent argument as well
Refine UriTemplate match pattern
shortened build properties "org.junit.version" to "junit.version" and "org.testng.version" to "testng.version"; reverted SLF4J version back to 1.5.3 (for Hibernate 3.3.1 compatibility)
Document XML attributes in mvc:resource-chain
Improve DataSourceInitializer Javadoc and implementation
Polishing
Fix InputStream caching in ContentCachingReqWrapper
Demonstrate that the CollectionFactory API is not type-safe
JSR-303 etc
Polishing
Polishing
Added conversion support for Java 8's ZoneId class and the 'of' method convention
Polishing
Equal MockServerHttpResponse in spring-test and -web
Add STOMP service that relays messages to STOMP broker
Polishing
Updated Eclipse classpath regarding javax.inject and javax.validation.
Polish SockJsClient
moving unit tests from .testsuite -> .aop
Revised IllegalArgumentException handling for Formatter parse calls
Add Resource.readableChannel()
Allow overriding of FormHttpMessageWriter#getMediaType
Consistent available() support in DelegatingServletInputStream
Support @Scheduled as a merged composable annotation
changelog update for spring-jdbc config add
Use final keyword in MessageHeaders
SPR-6119 - Add slf4j dependency back to orm's pom.xml but in test scope as it is needed to run tests that use Hibernate
Marked spring-web module as 'distributable' in order for session replication to work on Tomcat
Refactored support for @Order on @Bean methods as well as @Priority handling
Add getResult/hasResult methods to DeferredResult
removed RC1 references
SPR-6354 DefaultLifecycleProcessor no longer waits for the shutdown of SmartLifecycle beans that are not actually running.
Support @Sql as a merged composed annotation
Polishing
Fixed 'globalJobListeners'/'globalTriggerListeners' to work with Quartz 2.0 & 2.1 as well
prepared for 3.1.1
Use 'Integer' not 'int' in queryForObject  docs
Support async wrappers for Principal and WebSession
Fix content type issue in ResourceRegionHttpMessageWriter
Fix @since typo
URL Cleanup - remove obsolete ATOM schema location
Rename contextPath method in ForwardedHeaderFilter
Prepare for Reactor 2.0.6
AbstractRequestLoggingFilter.isIncludeHeaders() declared as protected
Polishing
[SPR-5781] Added a "note" for static import for assertions; additional polishing.
Specific exception for missing request header, cookie, matrix variable
Polish: Array designators "[]" should be on the type, not the variable
Fixed whitespace and added private modifiers to @Value-annotated fields in the @Configuration example
Refactor random port in reactive module tests
Various DataBuffer improvements
SPR-7477 - Added lazy-init attribute to jee namespace
Configuration class parsing reuses metadata from AnnotatedBeanDefinition as far as possible
polishing
Move cached expression evaluation abstraction
Support HTTP range requests in Controllers
X-Forwarded-Ssl is listed in ForwardedHeaderFilter
Introduce failing test case in AntPathMatcherTests
Remove closing tag in form tag's extra hidden fields
Servlet 3 multipart request implements getParameterMap defensively as well
Polish
Polishing
Update AbstractView with method to set content type
SchedulerFactoryBean always ignores local factory settings in case of an external SchedulerFactory instance (expecting it to be fully initialized)
Polish ReflectiveMethodResolver and unit tests
StandardScriptUtils.retrieveEngineByName for lookup with descriptive exception message
ResourceBundleThemeSource exposes fallbackToSystemLocale and defaultEncoding
Upgrade to Undertow 1.0.15 and fix failing test
Add @since tags
polish
Add support for global @ExceptionHandler methods
CachingDestinationResolverProxy for slow target DestinationResolvers
Update Javadoc for TestContextBootstrapper
[SPR-7953] BeanDefinitionVisitor now actually visits factory method names.
Polishing
Polishing
Update copyright header for XStreamMarshaller
WebExchangeDataBinder uses the new "requestParams"
Merge branch '5.1.x'
EncoderHttpMessageWriter supports streaming MediaTypes
[SPR-8030] Updated reference manual regarding deprecation of JUnit 3.8 base classes.
Polish SockJsFrame
Added castor properties
Polish URL Cleanup
Add cache limit to DefaultSessionRegistry and polish
Polishing
Avoid deprecation warnings on JDK 9 in spring-test
Add WebLogicRequestUpgradeStrategy
Portlet MVC, etc
Update test tiles.xml files to use v3 DTD
Add params(MultiValueMap) to MockMvc
SPR-5973: Using UriComponents in more places, replaced UriBuilder by UriComponentsBuilder, UriComponents is now immutable.
Fixed BeanPropertyRowMapper to only prefix actual upper-case letters with underscores
Introspect originating bean definition as configuration class candidate
fixed typos and programlisting formatting.
Polishing
Introduce @PropertySource
Polishing
AbstractApplicationContext.getApplicationListeners() exposes all statically registered listeners
Polish trailing whitespace
Removed outdated references to Servlet 2.3/2.4
Ensure @AliasFor overrides attribute in correct meta-annotation
ability to have multiple path patterns per mapped interceptor definition
SPR-6558: correct maven repository locations
Polish SmartValidator and SpringValidatorAdapter
Add MockPart to spring-test
Polish
more eclipse compile errors
Remove a redundant word
Avoid mismatch between cached top-level versus nested parameter type
Polish Http[Client|Server]ErrorException hierarchy
URL Cleanup - upgrade to more modern Xalan namespace
Fix caching tests
Resolve custom args after annotated args, set PATH_WITHIN_HANDLER_MAPPING attribute, and rename resolver for @ExceptionHandler methods
added spring expression dependency to maven pom
documentation fixes (SPR-9025, SPR-9027)
ApplicationListener detection for inner beans behind post-processors
Respect spring.profiles.active in #addActiveProfile
OrderUtils defensively checks for presence of javax.annotation.Priority
Log profile-based exclusion of XML bean definition file
Merge branch '5.1.x'
SPR-6464 Fix minor issue
Introduced @Description annotation for populating BeanDefinition.getDescription()
Reintroduced XMLReaderFactory deprecation markers on JDK 9
Merge branch 'SPR-9984' into 3.2.x
Clean up warnings spring-test
Refined retrieval of plain annotations through direct presence checks
Cache target type per bean definition and allow for specifying it in advance
Polish
Skip convert to Object from TypeConverterDelegate
Add twice() to ExpectedCount as convenience method
SPR-8823 ServletUriComponentsBuilder polish and reference doc update.
Polish resource chain documentation
Support generic types in @RequestBody arguments
SettableListenableFuture centralizes state in ListenableFutureTask subclass
updated ORM coverage to provide <tx:advice> and @Transactional samples; removed ProxyFactoryBean example
updated chapter title
Rename ResponseBodyInterceptor to ResponseBodyAdvice
Introduce createBootstrapContext() extension in TestContextManager
Fine-tuned assertions and related polishing
Initial code checkin
Introduce strategy for BeanInfo creation
SPR-5539: Add XML HttpMessageConverters
binder support
Support Jackson @JsonFilter
Polishing
Introduce putIfAbsent() in AnnotationAttributes
ObjectUtils.nullSafeEquals allows for JVM method inlining (through reducing its bytecode size)
polish
Removed support for JBoss AS 5's VFS variant (since we require JBoss AS 6+ now)
Refined ApplicationContextInitializer assignability exception
Define the group to use for the dependency
Rethrow original BeanCreationException if fallback producer fails
renamed EhcacheCacheManager to EhCacheCacheManager
Extended/BindingAwareModelMap are not meant to be referred to in user code
Add component-neutral encode option in UriUtils
Support annotation attribute aliases and overrides via @AliasFor
Suppress warnings Gradle build
Fix issue with parsing media types
marked Derby dependency as optional (SPR-6109)
Modified public interface to expression parsing
Polishing
Replace ModelAndViewContainer parameter with Object
Return rather than throw converted http exception
Convenience constructors for CompositeDatabasePopulator
Polishing
Merge pull request #33 from trisberg/SQLException-translation-enhancements
Polish
StringUtils.parseLocaleString detects variant without country
Updated change log
moving unit tests from .testsuite -> .transaction
Never return null from AnnotationMetadata.getMetaAnnotationTypes
Introduce @EnableMBeanExport
Handle scoped proxy properly in MBeanExporter
Polishing
Netty4ClientHttpRequest ignores query params
SPR-7308
Polishing
Renamed org.springframework.instrument.classloading module to org.springframework.instrument.tomcat
Defensive String equals comparison in ClassReader
Fix SimpleHandlerResultHandler by using Publishers.completable()
Refactor test HttpServer implementations
consistent dependency on Hibernate Validator 4.1.0.GA
WebSessionStore performs expiration check on retrieve
Set Ant build.compiler to javac1.7
Polish
+ fix failing cache tests
Fix warnings from the sniff task
AbstractApplicationEventMulticaster filters listeners against their type first, avoiding eager retrieval of listener instances for non-matching events
Prevent resource transformation of gzipped CSS files
Use StringJoiner where possible to simplify String joining
ResponseEntity headers builder casts body to any type
Break out of loop once an AspectJ advice has been found
Provide support for filter registrations
ResourceWebHandler uses MediaTypeFactory directly
Revised BeanInfoFactory javadoc
SpEL documentation (!) on @Bean referencing, inline lists and array construction
Make date methods in HttpHeaders public
Update build for spring-web-reactive module
TilesConfigurer defensively expects null from getResources in case of no resources found
Provide method to set async TimeoutHandler
Overloaded methods in InterceptorRegistration
AbstractApplicationContext registers default embedded value resolver
Merge branch '5.1.x'
preparations for RC3 release
made asm an eclipse project
Polish ContextCustomizer support in the TCF
Polishing
Add CloseStatus to indicate unreliable session
HibernateJpaDialect prepares JDBC Connection by default if on Hibernate EntityManager 4 (with its connection release mode ON_CLOSE)
Revert "Revert "Re-enable ignored JMX tests""
CodecHttpMessageConverter supports a default charset
Polish file locations in resource handling
Polish
JavaMailSenderImpl considers empty username and password as not set (for use with placeholders)

SimpleJdbcCall reliably throws exception on missing stored procedure
Polishing the web integration sections of the reference manual.
Support Part/MultiPartFile arrays in ArgumentResolvers
Support EOF as statement separator in SQL scripts
Properly handle Flux<?> and Flux<Object> in WebFlux
Add support for deferred import selector group
prepared for 3.1.1
Polish AbstractContextLoaderInitializer and subclasses
Polishing
Polishing
Introduced public ArgumentPreparedStatementSetter and ArgumentTypePreparedStatementSetter classes
Fix standard multipart binding + Polish
SPR-8334
Align MVC checkNotModified with reactive support
Polishing
RESOLVED - issue SPR-5600: Make naming of @Configuration class processing-related artifacts consistent
@Nullable all the way: null-safety at field level
FormHttpMessageConverter's charset (and its UTF-8 default) applies to part converters as well
Remove unnecessary javax.servlet dependency
Polishing
Support Java and MVC namespace view resolution config
Consistent evaluation of empty theme names to default theme name
Fix javadoc comments to match behaviour
Removed DataBufferUtils.toInputStream
Polishing
Polishing
Added "exposeAccessContext" flag JndiRmiClientInterceptor/ProxyFactoryBean (for WebLogic)
Polish
Upgrade to ASM 5.2
Actually accept String expressions for "prefetch" and "receive-timeout" in jms namespace
fixed minor typo
Polishing the MVC sections of the reference manual.
Fix JavaDoc in MockRestServiceServer
Support for @ControllerAdvice in WebFlux
Add ResolvedResource in resource handling chain
Register jackson-datatype-jdk7 module when using Java 7
Support HTTP OPTIONS
preparations for 3.2 M2
Moved tests from testsuite to context
removed slf4j dependency (not used in Spring itself; SPR-6119)
polish
Fixed ConnectionSpecConnectionFactoryAdapter explanation
attempted to repro SPR-7318 to no avail
Replaced Map synchronization with ConcurrentHashMap to avoid session access deadlocks
WebSocket namespace consistently applies resolvable allowed-origins value
Revised deprecation markers
+ Moving .config.java module -> .context
SchedulerFactoryBean ignores local factory settings in case of external SchedulerFactory instance (unless it extends from StdSchedulerFactory)
MockMvc re-uses response instance on async dispatch
Upgrade to Caffeine 2.3
SPR-9498: Add support for MultiValueMap to CollectionFactory
AcceptHeaderLocaleContextResolver leniently handles invalid header value
ServerCodecConfigurer as input in HandlerAdapter
Polish
Merge pull request #1399 from dreis2211/SPR-15477
Upgrading to JDK 1.8 bytecode along with ASM 4.1 patch
Introduce CorsFilter and CorsConfigurationMapping
Unwind _TestTypes to top-level public test classes in AOP test suite
Set timeout value and task executor per async request
SessionDisconnectEvent actually preserves given session user
Upgrade to Tomcat 9.0.16 and Log4J 2.11.2
fix log spelling typo
Added compatibility note on WildFly 8
Add javax.websocket.Endpoint configuration support
XML configuration support for RFC 5861
Polishing
@RequestParam tests use ResolvableMethod
Reduced warn log entry without stacktrace for startup exceptions
Reduce log level for @ExceptionHandler failure
Further encapsulate AntPatternComparator$PatternInfo
Improve Gradle dependencies version management
Consistent warn logging without stacktrace in Portlet HandlerExceptionResolver
Upgrade to JUnit 5.0 M4
CachedIntrospectionResults explicitly introspects implemented interfaces (for Java 8 default methods)
Extract IdGenerator into a top-level class
Polishing
remove reactor-stream and related artefacts, update tests
Merge branch '3.2.x' into master
Optimize StringUtils.replace for larger replacement pattern
Latest dependency updates (JasperReports 6.2, Jetty 9.3.6, Joda-Time 2.9.1, HttpAsyncClient 4.1.1)
ProtobufJsonFormatHttpMessageConverter for configurable JSON processing
fixed typo (SPR-7321)
Polish Javadoc in MutablePersistenceUnitInfo
Fix failing tests
+ add documentation on declarative XML
Optimize HTTP headers management
Polishing
Upgrade to Gradle 1.3
Polishing around @EnableTransactionManagement
Move websocket config tests to annotation package
Polish
Polishing
CronSequenceGenerator explicitly rejects invalid incrementer delta
General JPA 2.0+ requirement; upgraded build and tests to EclipseLink 2.4, OpenJPA 2.2, Hibernate 3.6
polishing @Configuration tests
MessageSourceSupport uses locale-specific MessageFormat cache for default messages
Configurable locale/timezone attribute name for SessionLocaleResolver
Polishing
Polish
Fix typo in validation chapter
Revert "Ensure @Conditions consider super classes"
URL Cleanup - fix links
Polish Javadoc and imports in datetime package
FilePart uses correct flags when opening files
[SPR-5889] Customized Spring Build to include TestNG tests in the automated build process; added global build.versions properties file as well.
BeanWrapper avoids StringIndexOutOfBoundsException for incompletely quoted keys
Consistent non-public AsyncRequestInterceptor classes
AbstractClientSockJsSession.close propagates IOException from disconnect
Fix typo
Fix issue with incorrect class import
Introduce LookupPath in WebFlux request routing
SerializationDelegate as convenient Serializer/Deserializer combo
Update intializer for the reactive servlet adapter
Extracted simple MethodInvokingBean as alternative to (and base class for) MethodInvokingFactoryBean
constructor argument type matching supports arrays and simple class names now (SPR-5844)
Add a dateValue HeaderResultMatcher
Support for JSON Binding API (JSON-B)
SPR-7858
Resource.lastModified() propagates 0 value if target resource exists
polish
Simplify test includes & excludes in Gradle build
Consistent throwing of BeanCreationExceptions (and reflection exceptions)
Assert pre-conditions in AopTestUtils
Introduce publishEvent() convenience method in TestContext
Replace MvcUrls with MvcUriComponentsBuilder
Final preparations for 3.2 RC2
Polishing
Allow Splitting/aggregation operations in Decoders
Corrected CatchAllConverter ordering docs
Consistent result synchronization in WebAsyncManager
Polish TimedSpringRunnerTests
Properly close channel in SynchronossPart
Avoid loss of body content in AbstractRequestLoggingFilter
Consistent final logger fields
Add an alwaysInclude property to TilesViewResolver
Clean up warnings and delete dead code
Leniently accept custom DeferredResult etc subclasses for null values
Latest patches from ASM trunk
DataBinder unwraps Optional objects and allows for proper handling of Optional.empty()
Polishing
Call resetRequest after writeFrame for polling sessions
Add missing Hamcrest dependency
Use the type of the actual return value in @MVC
Revert accidental changes to TestGroupTests
MimeType.compareTo uses case-insensitive Charset (analogous to equals)
ApplicationListenerMethodAdapter uses target method for order lookup
Clean up spring-web tests warnings
Polishing
ClassPathResource uses specific constructors in createRelative
updated version for 3.0 GA release
Stop suppressing warnings for deleted deprecations
further additions to manual changelog for 3.1 RC1
Add Vary:Access-Control-Request-Method/Headers CORS headers
Polishing
Jackson2Tokenizer passes DeserializationContext into all TokenBuffers
Update @RequestParam Javadoc and remove Portlet mentions
Encode user names in user destanations
Unit test for empty Access-Control-Request-Headers (Chrome 52)
Relocate web artifacts in the TCF to web package
Deprecate DefaultUriTemplate handler
Refactor FilterWebHandler and DefaultWebFilterChain
CookieGenerator explicitly sets 'secure' and 'httpOnly' flags in removeCookie as well
InterceptingHttpAccessor uses internal ArrayList for sorting
ResponseEntity allows for setting non-standard status code
Avoid deprecated number constructors on JDK 9
refactored .context module's .beans.factory and .context.access tests in preparation for moving .beans.factory.xml tests from .testsuite -> .context
Increment version to 3.2.0.BUILD-SNAPSHOT
Consistent throwing of HttpMessageNotReadableException vs IOException
Renamed ConfigurationPostProcessorTests -> ConfigurationClassPostProcessorTests
Make CodecException handling consistent
Update changelog re @EnableAspectJAutoProxy
Added ListenableFuture interface
Remove XMLBeans support
Add BigDecimal support for SpEl numeric operations
Remapped static resources as /petclinic/static/images/...
child bean definition's scope attribute can be inherited from parent bean definition now (SPR-3542)
OrderUtils caches order values (for AnnotationAwareOrderComparator)
Polishing
Synthesize annotation from defaults
Make the JSON prefix used in converters configurable
SPR-7909 - Sending large payloads with RestTemplate results in an OutOfMemoryError
Minor Jackson encoder/decoder refactoring
Change GenericConversionService to better handle enum
Support comments in statements in JdbcTestUtils
Polish
Optimize performance of produces condition checks
Initial import of ORM
Ignore OS X .DS_Store files
+ update aspectj cache aspects
polishing .beans tests
Move AdviceMode from .config to .annotation package
Consistent use of empty enumerations
Avoid expensive Stream API usage in HttpRange
Polishing the Portlet sections of the reference manual.
fixed namespace example (SPR-6766)
Simple refactorings in AbstractListenerWebSocketSessionSupport
Document default TELs in AbstTxJUnit4SpringContextTests
SPR-8247
Polish SpringJUnit4ClassRunner and related support classes
Initial version of context module
Polishing
Polishing
REST documentation
Fix ofResponseProcessor signature
Javadoc refinements, exception fine-tuning, general polishing
Ensure Parent ConfigurationClass loaded on overrides
Typo in web documentation
LoadTimeWeaver detection differentiates between WebSphere and Liberty
polish
Polishing
Update docs on @SendTo and @SendToUser
Upgrade to Gradle 4.4 (and Apache HttpClient 4.5.4)
Increase log level in spring-messaging tests
Refactor ExchangeResult
Introduce JUnit Rule alternative to SpringJUnit4ClassRunner
GenericTypeAwarePropertyDescriptor implements equals/hashCode for proper lookups on IBM JVM 6
Add config option for StompSubProtocolErrorHandler
Polish: to get rid unnecessary array creation
SPR-8823 Add ServletUriComponentsBuilder.
SPR-6092: add section on EBR/Maven and tidy up references to jar files throughout
Fix truncated Value#value javadoc
Update Apache license headers for affected sources
Fixed a build issue
Refactor ImportSelector support
ControllerAdvice basePackages specifically refer to actual packages (avoiding accidental prefix matches with other packages)
SchedulingConfigurer and JmsListenerConfigurer respect @Order
Avoid locking in WebSocket session "close" callback
Revised spring-oxm for 4.0
Refactoring of Servlet 3.1 and Undertow support
Allow directly present @BootstrapWith to override meta annotations
Fix issue with obtaining WebSocketContainer
Polish
Polish
Polish MockMvc HtmlUnit Support
Revised Charset handling and common StringUtils.uriDecode delegate
Fixed illegal characters in JibxUnmarshallerTests
Propagate read-only status through Session.setDefaultReadOnly(true)
Use whenComplete since (null) return value not needed
Consistent javadoc param declarations for type variables
UriComponentBuilder allows for multiple independent build() calls on same builder instance
Polish
Reinstate removal of semicolon content
Polish assertion msgs in JsonPathExpectationsHelper
Move MockMultHtServReqTests to correct package
Merge branch '5.1.x'
Add static factory/accessor methods to LookupPath
Refactor approach to working with STOMP headers
Improve CORS handling
Polishing
SpEL support for methods and properties on class …
Fix assertions
Fix invalid PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE
SPR-5430,SPR-6224: Converted deprecated view property names to use '.(class)' syntax.
StatementCreatorUtils detects Microsoft SQL Server driver 4.0 as well
Extract duplicated code into a separate method
StandardServletEnvironment supports "spring.jndi.ignore" flag for efficient property lookups
Polishing
Polishing
Add @Since 5.0 and package-info for reactive classes
DelegatingWebMvcConfiguration properly delegates extendHandlerExceptionResolvers
Improve GenericMessage.toString()
SJC-273 resolved minor @Configuration documentation error
Use more efficient Reactor operators
Introduced ResponseBodyWriteResultPublisher
Support compilation of the SpEL operator OpModulus
Store PathPattern instead of String in attributes
Add web-fragment.xml to spring-web
Add STOMP client
Fix an exception message in ScheduledAnnotationBeanPostProcessor
HandlerMapping is now asynchronous
Use X-Forwarded-Prefix in ServletUriComponentsBuilder
Next Development Version
correctly handle ParseException from Formatter for String->String case (SPR-8944)
Add EditorConfig
Drop JDO support
@Transactional supports qualifier value for choosing between multiple transaction managers
Polishing
final preparations for 3.0.1 release
Introduce @EnableSpringConfigured
Renamed DataBufferAllocator to DataBufferFactory
Allow null method for getTransactionAttribute
Improved Javadoc
Polish
Allow for ordering of mixed AspectJ before/after advices
Polish + minor HttpHandler refactoring
Merge branch '5.1.x'
Use Collection.removeIf() where possible (#1747)
Polish: Maps with keys that are enum values should be replaced with EnumMap
Minimized ASM usage
moving unit tests from .testsuite -> .core
modified intro to accommodate new order and added features
Polish
Fix javadoc reference
Optimize class detection by sharing the ClassLoader
refined generic converter concept
Add test case for HttpRequest with relative URIs
Revisit GenericApplicationContext.registerBean constructor handling
Minor javadoc updates
Fix failing tests failing when debug logging is on
bunch of fixes for 3.0.4
Create spring-messaging module
Polishing
Create StandardServletAsyncWebRequest via reflection
Add MockHttpServletResponse.getDateHeader
Support ListenableFuture in @MessageMapping handler methods
After-returning advice strictly follows AspectJ's rules for return value matching
MockHttpServletResponse writer sets committed flag
Remove additional xsd versions from reference docs
SPR-8803 Add UriComponentsBuilder methods to replace path/query.
ObjectProvider offers getIfAvailable/getIfUnique variants with default supplier
Merge branch '3.2.x' into master
Support implicit attribute aliases with @AliasFor
Fix broken Castor URLs in ref docs and mapping XML
preparations for 3.0 M4 release
Update MockServletContext to MediaTypeFactory
Renamed Md5HashUtils to DigestUtils
Fix compilation of SpEL elvis/ternary expressions
Polish ServerWebExchange builder and ServerHttpResponse
Update AbstractClientHttpRequest with server changes
Added section on GemFire as a cache provider choice (SPR-9468)
Defensively ignore multipart parsing failure in case of error dispatch
Restore state field in AbstractServerHttpResponse
Support for bean refs in event SpEL condition
moved multipart and bind to web project since independent of servlet and required by new native web request parameter map
doc review
Defer ExchangeFilterFunction to subscription time
Added note on thread safety to TypeConverter and SimpleTypeConverter javadoc
Clean up warnings in spring-webflux module
Restore 2 digit days format in HttpHeaders
Modify build version for branch CI snapshots
Ensure default value of @Payload required is enforced
Polish Javadoc for AbstractBeanDefinition
Skip transaction/caching metadata retrieval for java.lang.Object methods
added back mvc:interceptors element and added interceptor matching based on path pattern; needs review
Properties values get properly converted to generic Map types (fixing 4.x regression without use of ConversionService)
AnnotationJmxAttributeSource uses AnnotationUtils for consistent meta-annotation handling and diagnostics
OperatorMatches flags misguided evaluation attempts as FLAWED_PATTERN
Consistent volatile access to running flag in Lifecycle implementations
AbstractMarshaller pre-implements getDefaultEncoding() method
update hibernate and openjpa dependencies to match the orm module 
Document testing in "New in Spring 3.2" sect.
Add an ObjectMapper constructor to MappingJackson2(Json|Xml)View
Polishing
AbstractRequestLoggingFilter allows for dedicated shouldLog check in CommonsRequestLoggingFilter
Update copyright header
Log correct class name for introspection failure
Fix NPE in AbstractMessageConverterMethodProcessor
Refactor Gradle script naming and organization
+ Further repackaging and consolidation
Consistently accept empty Content-Type header and empty character encoding
Added "requestsRecovery" bean property to JobDetailFactoryBean
Improve Encoder Javadoc
Consistent processing of empty values and catching of RuntimeExceptions for Formatters
GenericConversionService matches converters by full generic target type, allowing for the registration of multiple converters from the same source type to different collection types
Add test dependencies sources for testCompile
Prevent response updates if @ResponseStatus has reason
Refine ReactorResourceFactory
Don't encode '@' in {@code} tags
Add option to extend exception resolvers
Polish GenericHttpMessageConverter
made compilation work with Hibernate 4.0 next to Hibernate 3.x
Upgraded to Quartz 1.6.2
Log connection URL for embedded databases
Polish contribution
Clarified CompositeCacheManager's applicability, added convenience constructor with given delegates, and fixed getCacheNames implementation to never return duplicates
Nullability refinements (based on IntelliJ IDEA 2018.1 introspection)
Fix incomplete log message
Methods for reading a Resource in DataBufferUtils
Use long for expires and lastModified in HeaderAssertions
Polish ReactiveAdapterRegisry
Up-to-date coverage of task executor and scheduler variants
Increase randomness in SocketUtils
Expose response cookies from ExchangeResult
Add header name to ex. msg in HeaderResultMatchers
method invoking formatter as a convenience
Polishing
Polish codacy warning: fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
Polish HtmlUnitRequestBuilderTests
Add author attribution for htmlEscape methods
How to register MIME types in MockServletContext
Merge branch '3.2.x' into master
DateTimeFormatterRegistrar supports Duration and Period as well
Internal adaptation to Deque semantics
+ interaction with user code uses now dedicated privileged when running under a security manager
NettyDataBufferFactory.join returns single-element buffer as-is
Small typo fixes in WebSocketHandler doc
spring 3 validation docs; jsr303 integration
Migrate JUnit 3 tests to JUnit 4
Detect event listener methods behind interface proxies as well
Support ScriptEngine#eval(String, Bindings) in ScriptTemplateView
Next Development Version
Fixed year in copyright.
Next Development Version
Document test execution event support in the Reference Manual
Improve Javadoc and exception message for LTW classes
Performance improvement
Various DataBuffer improvements
ControllerAdviceBean accepts bean types without @ControllerAdvice annotation (as in 3.2)
UriComponentsBuilder.fromHttpRequest sets port correctly
Consistent ClassLoader propagation and ConcurrentHashMap setup for AspectJ pointcuts
Add JSON matcher to assert on request body
Merge branch 'master' into websocket-stomp
Fix CacheManager example in Javadoc
Default methods in WebSocketMessageBrokerConfigurer
DefaultLobCreator supports JDBC 4.0 set-stream variants without length parameter
Fix NPE in ResourceHttpMessageConverter
Replace EasyMock with Mockito in test sources
Generate spring-oxm test classes and bindings
updated version for RC3 release
Polish spring-context
added "expose-proxy" attribute to aop namespace (enforcing AopContext proxy exposure with CGLIB; SPR-7261)
Support HandlerMethod arg in @ExceptionHandler methods
Use default buffer allocator in RequestMappingHandlerAdapter
StaxStreamXMLReader ignores significant whitespace
PathEditor tries file system path in case of non-existing resource
moved some TODOs out into here
Improve docs on STOMP / WebSocket frame max size
Preserve ordering of inlined props in @TestPropertySource
Wrap DecodingException in DefaultServerRequest
Removed coverage of deprecated java.util.Timer support
Revert "Register EventPublishingTestExecutionListener by default"
Introduce @Commit alias for @Rollback(false)
[SPR-8090] Fixed broken tests in Log4jWebConfigurerTests.
Add apply method to WebClient.Builder
JtaTransactionManagerFactoryBean fully initializes its JTM instance
Remove trailing whitespace in Java source code
resolved package dependency tangles
Utilize default methods in TestExecutionListener
Fixed typo
LogFactoryService implements Commons Logging attribute methods
MessagingAcceptor/RSocket refinements + upgrade to 0.11.17
Add HttpServer and Jetty/Tomcat/RxNetty implementations
Upgrade to Gson 2.3
Add onTimeout/onCompletion callbacks to DeferredResult
Upgrade to Reactor Californium SR5
Replace reference to aspectjrt with aspectjweaver
Support HTTP HEAD
Expose WebSession on ServerRequest
moving unit tests from .testsuite -> .context
Avoid unnecessary annotation introspection on framework methods
Add `createDispatcherServlet` hook point
Update WebSocket client SmartLifecycle support
Polish handling of STOMP message headers
Add consumeWith to FluxExchangeResult
Honor @Autowired(required=false) at parameter level
Rollback AntPathMatcher behavior for ".*" comparisons
Polish MockClientHttpRequest
Polishing
Jackson2ObjectMapperFactoryBean builds on revised Jackson2ObjectMapperBuilder now
Open parameter autowiring utility for external use (#2060)
Next Development Version
Use Conventions for reactive model attribute names
Disable DTD when parsing untrusted XML input
Find the last plus for suffix MediaType
Fixed typos
+ refactoring .testsuite .aop.aspectj tests in preparation for migration to .context
Remove reflection usage in orm.hibernate4.*
[SPR-7849] work in progress: revising the testing chapter based on internal review.
made ConversionExecutor internal; removed other unused operations from public SPI
Consistent use of StringUtils.toStringArray
Polish "Support flash attrs..." and related classes
Test commit
Test for property placeholder with defaults
Detect controller methods via InitializingBean hook
Polishing
ResourceUtils isFileURL detects "vfsfile" as a file system protocol (again)
SPR-5724:  Documentation for RESTful webservice examples slightly incorrect for 3.0.0.M3
AbstractListenerWebSocketSession: suspend the channel when there is no demand
Fix JasperReport tests to ignore missing fonts
Comprehensive revision of SpEL's bytecode generation and number handling (BigInteger support, doubleValue fallback)
Copy cookies and hints in built ServerResponse
Add minimal doc for JSR 330 support. 
Polishing
Fix issue with extracting matrix variables
Fix initialization issue in ResourceUrlProvider
moved generic converter to spi; added entity converter; removed various service impls in favor of service factory
fixed DocBook structure and typo
Re-obtain port on every WebSocket integration test
Defensively check for pre-resolved FactoryBean.getObject() results in circular reference scenarios
Throw meaningful exception if JUnit 4.9 is not present
Normalize 2+ '/' in path in UriComponentsBuilder
Internal formatting changes introduced only by XmlMind editor, mostly changing < to %lt;
Fix unnecessary @SupressWarnings annotations
parentheses should be removed from a single lambda input parameter when its type is inferred
Polish MockMvcBuilders tests
Allow package private classes in spring.factories
WebFlux support for "request handled" in controller
Rename RouterFunction Kotlin DSL files
Refactor BindingContext initialization
Consistent Iterator/Stream support in PropertySources and PropertyValues
Revert "Fix APC registration for @EnableTransactionManagement"
SPR-7545 - Reference documentation now reflects the final state of the ResourceHttpRequestHandler and references the DefaultServletHttpRequestHandler properly.
Suppress "rawtypes" warnings in CollectionFactory
Fix server errors for invalid If-None-Match request headers
Fully test proxy support in ReflectionTestUtils
[SPR-8386] AnnotationConfigContextLoader now only considers static inner classes annotated with @Configuration when generating default configuration classes.
Remove trailing whitespace in source code
Extract base interface for VersionStrategy
Suppress warnings in Gradle build
Fix SpEL JavaBean compliance for setters
Filter source @Configuration with @ComponentScan
Async boundary for Spring MVC reactive type streaming
Avoid package dependency cycles
Switch to Reactor Californium SNAPSHOTs
Polish (minor) async support in filters
ConversionService etc
Test with hasError for unknown status code
Revised indexer implementation
ClientRequest.attribute(name) defensively handles null value
Fix typos (SPR-7339)
Update doc publication urls to static.s2.org
DefaultDeserializer and DeserializingConverter allow for specifying a ClassLoader
URL Cleanup
Introduce "dummy" Environment implementation
SPR-7197
found hotspot; added ConverisonServiceFactoryBean
Consistent use of IllegalStateException instead of InternalError for UnsupportedEncodingException cause
Removed S0 from BadSqlGrammarException codes
Polish whitespace
Added reference to CatchAllConverter
Fix typo
Upgrade to HSQLDB 2.3.1
MapSqlParameterSource.addValue declares nullable value parameter
Polishing
Docs
Polishing
polishing
Refine SyncInvocableHandlerMethod error handling
Custom "jdbcExceptionTranslator" on HibernateJpaDialect
fixed documentation bugs
Clean up warnings that show up in Gradle build
Update resource handler XML Namespace
custom converters
Introduced EmbeddedValueResolutionSupport base class for AnnotationFormatterFactory implementations
Replace references to SimpleJdbcTemplate in docs
Log context cache statistics in the TCF
Polish standard Spring MVC exception handling
TextMessage.toString() does not throw StringIndexOutOfBoundsException for payload with multibyte characters
Fix issue in MappingJacksonJsonView
spring-build updates
* Updated Eclipse classpath metadata
Clarify FactoryBean initialization effect in getBeanNamesForAnnotation
Add null check after message conversion
Support byte ranges in ResourceHttpRequestHandler
Added ClientResponse.cookies()
test operator log
Avoid expensive assertions in HttpRange
Update Javadoc in SqlScriptsTestExecutionListener
Polish default headers/attributes in WebClient
Replace "if(" with "if ("
Polishing
Update Javadoc
polishing
Introduce before/after test execution support in SpringJUnit4ClassRunner
Moved tests over from testsuite to core
Revise SpringExtension based on recent changes in JUnit Jupiter
fixed mistake in jmx docs (SPR-977)
Move http.server to http.server.reactive
Use StringDecoder to split SSE stream
Polishing
Revised method selection for JMS listeners (and their parameters)
[SPR-8092] cleaning up ignored and broken ORM tests; suppressing warnings; fixed Eclipse classpath for tests.
StompDecoder handles partial headers correctly
Refact iterator of Map with Java 8 forEach
Allow cursor returns from SQL functions
For attribute is not actually required
Add SockJsMessageCodec
revised cache abstraction
Added dedicated sort method to AnnotationAwareOrderComparator
Remove spring-build and friends
more discussion points
Allow to set cookies in ServerResponse
Polishing
Require JsonPath 1.1+
Support *Aware ImportSelectors
Polish RequestMappingInfoTests
Background bootstrapping via "bootstrapExecutor" for  LocalContainerEntityManagerFactoryBean and LocalSessionFactoryBean/Builder
Add exception handling of asynchronous method
AbstractBeanFactory logs bean creation exception on FactoryBean type check at warn level
Pretty print option for Jackson converter and view
Relocate MergePlugin package
Add Support for ForwardedHeaderFilter sendRedirect
Added Eclipse project settings to the reference documentation so that the documentation can be more easily edited and built within Eclipse.
Merge pull request #94 from dsyer/SPR-9498
Polishing
StandardEvaluationContext.setVariable leniently ignores null name
Polish contribution
Clean up warnings in spring-webmvc
Avoid java.util.Optional signatures for simple field access
Add package-info, javadoc, and update package names
Avoid infinite loop in PatternMatchUtils
Add LogFormatUtils
Cache BridgeMethodResolver results
Polish Javadoc for converters
Add BasicAuthorizationInterceptor
polish
Merge branch '5.1.x'
Fix Javadoc typo
Partial revert of SPR-13090
Isolate thrown exception in AssertTests
MessageChannel declares send(Message) as default method
Refine Jackson canEncode() / canDecode() implementation
Parameterize AsyncTask type
MessageHeaderAccessor defensively checks id, timestamp and contentType values
Polishing
Add RequestPath tests for modifying the contextPath
ResponseEntity provides static "badRequest()" convenience method as well
Polish
Add PATCH method operation to RestTemplate
EventListenerMethodProcessor does not validate target classes behind proxies anymore
Prepping for 3.0.5
Fix issue in message conversion
Revised NoSuchBeanDefinitionException message and ResolvableType handling
Fix regression for nested AnnotationAttributes.annotationType() result
Javadoc fixes and pruning of outdated references
Moved BodyExtractor and BodyInserter to http.codec
preparations for 3.0 GA
Support registering Filters in WebSocket test servers
Exclude FactoryBean implementation methods on CGLIB proxies as well
prototype beans receive independent collection/array even when based on single value (SPR-5512)
Split between basic MethodParameter and SynthesizingMethodParameter
Upgraded to commons pooling 1.4.0
SPR-6460 Added "phase" attribute to the JMS "listener-container" element.
Use refactored CodecConfigurer
Reorder the publishing
Polishing
Polish TestContextManager
Polishing
Refinements related to a committed response
Correction for commit #b219c6c
Polishing
Update SessionDisconnectEvent
Move HttpServer related classes back to src/main/java
allow petclinic unit tests to work. slf4j impl was needed
Check the user of a SockJS request
MBeanExporter detects FactoryBean-exported resources independent from declaration order
Improve configurability of EmbeddedDatabaseBuilder
URL Cleanup
Support resource URL encoding at context path
Reflect 3.2=>3.1.2 backports in @since tags etc
replaced *DaoSuport coverage with annotations used for DAOs
SPR-8830
Json view support for JMS
Use StringJoiner where possible to simplify String joining
[SPR-8240][SPR-8401] formatting and polishing.
Update copyright year in reference documentation
Fix default origin port in ReactorClientHttpConnector
BeanWrapper, EvalTag, etc
Support for candidate components index
Moved tests from testsuite to beans
Converter interface explicitly documents null values
MultipartResolutionDelegate skips Part parameter checks on Servlet 2.5
SPR-5906: test and fix for using expressions in property list keys and values
Rename SPRING_CLASS_RULE fields to springClassRule
SPR-3786
javax.annotation.Priority alternative to @Order
Fix failing test
Increment snapshot version from 3.3 => 4.0
Replace use of AbstractWebSocketMessageBrokerConfigurer
Improve error handling when response is committed
Fix CheckStyle violations
Leniently handle lambda-defined listeners with ErrorHandler as well
SpringFactoriesLoader tolerates whitespace around class names
adding servlet api to the eclipse classpath to clear up tooling errors from JSP files
ReflectionTestUtils does not require spring-aop on the classpath
Common code in AsyncExecutionAspectSupport allows for CompletableFuture processing with AspectJ as well
[SPR-6184] AnnotationConfigContextLoader now generates a default configuration class name; fleshed out documentation of AnnotationConfigContextLoader; introduced sub-package and suite for configuration class tests.
Remove deprecated usage of Reactor Loopback interface
BadRequestStatusException -> ServerWebInputException
Rearranged cache test class names across several modules
MethodParameter.equals accepts subclasses pointing to same target declaration again
LinkedCaseInsensitiveMap properly overrides HashMap.clone()
MethodValidationPostProcessor, MappingJacksonMessageConverter, etc
Revised ResizableByteArrayOutputStream as an actual subclass of ByteArrayOutputStream, and consistently applied appropriate ByteArrayOutputStream initial capacities across the codebase
SPR-7160 - ShallowEtagHeaderFilter not adding ETag
Improve docs on forwarded headers
Beverly's edits reviewed; changed J2EE to Java EE
Polishing
Reactive @MessageMapping
Clean up warnings in spring-test
Moved WebExchangeDataBinder to web.bind.support (alongside WebRequestDataBinder)
HibernateExceptionTranslator converts JPA exceptions as well (for Hibernate 5.2)
Replaced shared editor usage with PropertyEditorRegistrar
revised CustomSQLExceptionTranslatorRegistry/Registrar method naming
Update MessageHeaders constructor
Mark remaining @Ignored tests with 'TODO SPR-8116'
Fix typo in MessageSource reference docs
Upgraded to Rome 1.0
Validate contextPath in RedirectView
Fix issue with RequestBody(required=true)
SPR-6413 and SPR-6414 first cut: needs review, particularly compatibility note in AbstractHandlerMapping
Support custom PathMatcher for MappedInterceptor's
Polish
Eliminate trailing whitespace in SpEL classes
Refer to @Commit instead of @Rollback(false) in the reference manual
Revert "@ExceptionHandler methods logs at DEBUG level again"
Polishing
Introduce @EnableAsync
presentation model binder
Fix grammar and update link in Javadoc for SimpleThreadScope
Remove manually-maintained Maven poms
Removed unused import
Polish
Handle null header value property
Polishing
Polishing
Synchronized cache creation on CacheManager
Compatibility with JSR-354 final (and its new Monetary singleton)
Add Message, MessageChannel and refactor stomp support
Change from flatMap to map
Re-added InitializingBean declaration
Support heartbeat in SimpleBrokerMessageHandler
Suppress warnings in Gradle build
Compare encoded params in AbstractFlashMapManager
Polish CORS support classes
revise cache API
Upgraded all Servlet API mocks to Servlet 3.0 (with a little bit of Servlet 3.1 support in MockHttpServletResponse)
RESOLVED - issue SPR-4783: Add name attribute to all namespaces that use AbstractBeanDefinitionParser and declare name= attribute (includes <lang:groovy.../>).
Rename CrossOriginConfigurer/Registration to CorsConfigurer/Registration
Extracted ContentCachingRequestWrapper and ContentCachingResponseWrapper
Workaround for Derby's limited support for JDBC 4.1 getObject(index, requiredType)
SPR-6142 Moved ErrorHandler strategy interface to the org.springframework.util package so that it can be used by MessageListener containers in addition to TaskSchedulers.
Common constant for DefaultBeanNameGenerator as well
Implement hashCode() for synthesized annotations
Drop Introspector.flushFromCaches calls completely
completed changelog
Document effect of preemptive timeouts on transactional tests
MockMvc request builder preserves double slashes
Revised PersistenceExceptionTranslationInterceptor to lazily retrieve PersistenceExceptionTranslator beans on demand
Polish custom HTTP verb in Spring MVC Test
Polish SqlParameter.sqlTypesToAnonymousParameterList()
Polishing
Revert to Map entry iteration for less expensive static initialization
Remove "@BeanAge" from reference documentation
Improve logging in spring-messaging
SPR-7746 Add examples of using regex in URI template vars and working with 'Last-Modified' HTTP requests
Remove deprecated classes and methods from early 5.0.x phase
The <task:annotation-driven/> element now registers the post-processor for @Scheduled in addition to the already existing @Async support. Both "scheduler" and "executor" attributes are available.
Replaced use of EmbeddedValueResolverAware with ConfigurableBeanFactory's resolveEmbeddedValue in order to avoid a package cycle with the org.springframework.context package
Fix javadoc of AbstractHandlerMapping#setPathMatcher
polish
Allow non-public @Transactional test methods
Updates to WebHandler support
TransactionTemplate equality for same transaction manager only
Spring-consistent naming in server.http package
ExceptoinWebSocketHandlerDecorator uses ERROR level
LinkedMultiValueMap explicitly supports deep copies
DataBinder etc
RTU.setField() shouldn't call toString() on target
Increase logging for spring-messaging tests
Fix ForwardedHeaderFilter with non-empty contextPath
Introduced ScriptEvaluator strategy interface
Next Development Version
Fix test broken by previous refactoring
Add missing constructors to SynthesizingMethodParameter
Polishing
Polishing
Upgrade to JUnit 4.11 snapshot in support of JDK7
Reduce logging level of EventListenerMethodProcessor
Allow non-String args in JOptCommandLinePropertySource
MimeTypeUtils trims parameter names / values
Defensively use setRemoveOnCancelPolicy for JDK 6 compatibility
Fixed copy-n-paste errors.
Follow up fix for PR #1168
"file-encoding" attribute value is being applied correctly (SPR-8024)
Fix path mapping issue in default servlet mode
Update changelog
JdbcTemplate's queryForObject allows for specifying primitive types as well
Polish NumberUtilsTests
Polishing
STOMP client supports setting accept-version
Fix javadoc checkstyle issues
Don't decode URI for content negotiation by extension
Polishing
Add onError callback to DeferredResult
Internal RequestMappingHandlerAdapter refactoring
Detect ControllerAdvice beans in ancestor contexts as well
Polish
Update WebSocket support for Jetty 9.3
Introduce BEFORE METHOD/CLASS modes in @DirtiesContext
Fix typo
@PathVariable supports 'required' attribute (for model attribute methods)
Merge branch '3.1.x'
Add reference documentation for async web requests
SockJsTransportFailureException provides constructor variant without session id
Remove duplicate imagedata from reference guide
Calling cancel on a Future returned by a TaskScheduler works reliably now
Polish
minor typos and tweaks to 'expressions' chapter
Polish Javadoc & TODOs in ApplicationListenerMethodAdapter
Name attributes in method argument annotations allow for placeholders and expressions
Polish
Fix Javadoc errors in TransactionalTEL
Introduce LocaleContextResolver in WebFlux
SSE writer respects charset in MediaType
Removal of redundant JdkVersion checks in the test suite
Detect factory method annotations in getBeanNamesForAnnotation and co
Test -> Tests
Merge branch 'master' into websocket-stomp
finalized changelog for M2 release
Support fall-back to ASM parsing @Configuration
Change 'lastName*' -> 'lastName' for error display (SPR-7339)
Upgraded JdkVersion and CollectionFactory to JDK 1.6+, also removing deprecated methods from CollectionFactory
Added Eclipse project dependency on org.springframework.asm
shortened build properties "org.junit.version" to "junit.version" and "org.testng.version" to "testng.version"; reverted SLF4J version back to 1.5.3 (for Hibernate 3.3.1 compatibility)
Polish Javadoc
SPR-7858
Avoid repeated exposure of SpringProxy/Advised for fallback interfaces as well
Added support for the JCA 1.7 getActivationName() method
Add config options for MVC async interceptors
Moved tests from testsuite to core
Increment version to 3.1.1.BUILD-SNAPSHOT
Support wildcard style media types in JSON converters
Fixed source attachments in Eclipse classpath; sorted classpath entries.
Fix typo in Javadoc
Polish MockServerHttpRequest
Don't mutate annotation metadata when merging attrs
final preparations for 3.1 RC1 release
polishing
Polishing
Limit size of context cache in the TestContext framework
Reorganize and add comments to build.properties
Rename ServerCookie to ResponseCookie
Polishing
Revised UriComponentsBuilder assertions
initial JSR-330 injection support
Add tests to spring-messaging
committed initial Hibernate 4.0 support
Add missing (empty) source folders
Correct explanation of example patterns
Polish Javadoc for ZoneIdEditor & TimeZoneEditor
DispatcherServlet passes resolved multipart request into applyDefaultViewName
Do not cache PropertyDescriptors for autowireBean calls anymore, avoiding ClassLoader leaks
Document effect of preemptive timeouts on transactional tests
Notes about HibernateJpaVendorAdapter settings vs native Hibernate rules
HibernateJpaVendorAdapter sets connection release mode ON_CLOSE in non-PersistenceUnitInfo bootstrap scenario
JBoss AS 7, etc
fixed regression: looking for annotation on original bean class as well, not just on exposed bean type (SPR-5981)
Fix mutually exclusive use of CachePut and Cacheable
AbstractBeanFactory removes alreadyCreated entry after bean creation failure
Remove jetbrains annotations inserted by IDE
Polish WebSocket/STOMP Java config
Polish
Polishing
Simplify Groovy ContextLoaders in the TCF
Remove "Public" from the ResourceUrlProvider name
Add connect/read timeout to Netty RequestFactory
Use configured encoding during JiBX unmarshalling
Polishing
added sf4j logging to run tests in eclipse
Add profile expression support
Polish Javadoc regarding @Commit support
Support conditional processing in TestContext event annotations
Polishing
Classpath updates
Return null from MockServletContext.getMimeType for unknown type
Unit tests for unresolvable generics with partial mismatch
Support attribute overrides with @ResponseStatus
Updated the context module's .classpath file for Groovy 1.6.3 (from 1.5.1)
Method-level javadoc on XmlReaderContext etc
Switch LogAccessor argument order to have message supplier last
WebSession supports changeSessionId
Added "transactionAware" bean property to EhCacheCacheManager and JCacheCacheManager
Defensively detect non-empty String fields in @Scheduled
Remove unnecessary iterator allocation in type handlers
Move "handlers" field to AbstractSubscribableChannel
ResourceDatabasePopulator's setScripts takes varargs
Encapsulate CORS checking within CorsConfiguration
Polishing
Synthesize annotation from a map of attributes
Next Development Version
Polishing
Add Reactive CORS support

Moved tests from testsuite to beans
[SPR-5640] Updated reference manual regarding new support for marking the test application context as 'dirty' after each test method within a given test class.
Update changelog
Changed Future<Void> to Future<?>
Revert (recently added) cookie set header flags
minor typo
[SPR-8387] Fixed logic error in DelegatingSmartContextLoader.processContextConfiguration().
Avoid expensive annotation retrieval algorithm if no annotations present in the first place
AbstractJackson2HttpMessageConverter's canRead/canWrite checks media type first before delegating to Jackson
Polishing
Thread-safe reactive ServerHttpRequest
Set response to 503 for async requests that time out
Jackson2JsonDecoder tolerates null literal
Improve docs on on use of urlDecode=false
Collection.isEmpty() should be used to test for emptiness
Fix MediaType lookup for ResourceHttpRequestHandler
Consistent public constructors in ast package
AbstractEnvironment defensively synchronizes access to activeProfiles and defaultProfiles
Allow treating empty @RequestParam as missing value
Bypass method traversal for annotation introspection if possible
Merge remote-tracking branch 'origin/master'
Merge branch '5.1.x'
Avoid Java8 API
Minor javadoc and source layout polishing
fixed MBeanExporter regression: do not try to expose abstract beans (SPR-6784)
replace XML usage of JndiObjectFactoryBean with <jee:jndi-lookup/>
Use Map.forEach instead of manual Map.Entry iteration wherever possible
Fix Javadoc typo in ConfigurableWebEnvironment
Polish ResourceHttpRequestHandler, ResourceEncoder
Rearranged web.socket.server subpackages and introduced web.socket.config
Encoder/Decoder based payload serialization
moving unit tests from .testsuite -> .aop
Optimize STOMP encoding/decoding hotspots
Polish
Rename Mono#otherwise[Empty] to switch[onError/IfEmpty]
Upgraded to Quartz 1.8 and Velocity 1.7
Merge branch '5.1.x'
Introduce AnnotationAwareOrderComparator#INSTANCE
Restore method signature in ViewControllerRegistration
CronSequenceGenerator prevents stack overflow in case of inverted range
Polish
SqlParameterSource interface exposes parameter names
Fix MockHttpServletResponse HTTP status update
Further fixes for 3.2.1
use Method in fixedInterceptorMap instead of String returned from Method::toString
Modify ByteArrayEncoder so that it works in Eclipse IDE
Add protected method for required RequestBody
Support empty body in Jackson2JsonDecoder.decodeToMono
Properly identify event-related ClassCastExceptions on JDK 11
XmlEventDecoder uses common defensive XMLInputFactory (now in StaxUtils)
Support new exception message wording since Jackson 2.9
Update dependencies (Spring 4.2.1, Tomcat 8.0.26, Jetty 9.3.3)
Correct linkplain javadoc in BufferingClientHttpRequestFactory
SpringExtension.getApplicationContext declared as public
Remove response content-type before error handling
Moved tests from testsuite to context
Fix checkstyle violation (plus related polishing)
DefaultSingletonBeanRegistry performs non-synchronized checks for existing entries in dependentBeanMap and containedBeanMap
StatementCreatorUtils always tries getParameterType on Oracle 12c driver
Initial cut at migrating JavaConfig essentials into Core. test.basic.BasicTests successfully excercises the simplest possible @Configuration class (contains a single @Bean method). 39 classes were pulled in from from JavaConfig to support this use case.
Polishing
+ update cache docs whitespace for better rendering
ExecutorSubscribableChannel consistently rethrows Error as MessageDeliveryException
Polishing
fix inefficient use of keySet operators in messaging classes
Polish HttpMessageWriterView and view resolution
Polish (minor) RequestMappingHandlerAdapter
Ensure that JUnit Jupiter tests are executed during build
Modify SpEL Tokenizer to support methods on numbers
MarshallingView unwraps JAXBElement value for Marshaller.supports(Class) check
Polish
Add DestinationUserNameProvider interface
polishing
Add @FunctionalInterface on candidate interfaces
Implement reactive HiddenHttpMethodFilter
Support @CrossOrigin as a merged composed annotation
SPR-16154 - Correctly handle NVARCHAR, LONGNVARCHAR and NCLOBs
Controller API for view rendering
Consistent default encoding in DefaultUriBuilderFactory
+ rename test (as otherwise it gets picked even if it's abstract)
Document DataBuffer/PooledDataBuffer and codecs
Refined javadoc for WebLogic/WebSphere transaction setup
Update distribution README regarding paths
Provider injection etc
Add regression test cases to JsonPathRequestMatchersTests
SPR-8859 Fix issue with prototype controllers in RequestMappingHandlerAdapter.
Fix exception message about producible media types
Fixed mystyped dependency on org.antlr 3.0.1 in context's Eclipse .classpath
serializer package etc
Polishing
KeyGenerators should not return a plain array parameter as raw key but rather always handle that case in a deepHashCode fashion
Keep YAML entries that haven an empty array value
EncoderHttpMessageWriter tries to send wildcard type in response header
Properly handle getMethodDescriptors() null value on IBM JVM
ComponentScanBeanDefinitionParser supports placeholders for entire base-package specification and for type filter expressions
Polish DefaultHandshakeHandler
Remove Jackson dependency from TransportHandler hierarchy
Use PathPattern.getPathRemaining in WebFlux fn
Polish ReactiveAdapterRegistry
WebSocketSession extends java.io.Closeable, plus reorganization of AbstractSockJsSession's code
Add note to @CrossOrigin javadoc
Clear nonAnnotatedClasses cache in afterSingletonsInstantiated
"data.sql" instead of "test-data.sql" (SPR-6020)
AbstractApplicationContext.isRunning() avoids IllegalStateException
final preparations for 3.1 M2 release
turned CountingBeforeAdvice into top-level class
Polishing
Consistent support for multiple Accept headers
Refine web.server package structure
Fix PathResourceTests on Windows
Clarify acknowledge mode semantics and transaction recommendations
Merge branch '5.1.x'
Consistent final declaration for static delegate classes
Support multi-line comments in SQL scripts
Polishing
Release version 4.0.0.RC1
MessageSource.getMessage returns null default message as-is (again)
HttpSessionRequiredException programmatically exposes name of expected attribute
Removed pre-JDK-1.5 checks
ResourceHttpRequestHandler sets "Accept-Ranges" header only once
Introduce getAliasedStringArray() in AnnotationAttributes
@MessageExceptionHandler matches cause as well (analogous to @ExceptionHandler)
Introduced beta version of LiveBeansView for STS 3.1
The text which was previously "instilled with boldness" (i.e., emboldened) is now just bold. ;)
Support CORS global configuration in XML namespace
MockHttpSevlet[Request|Response] set cookie headers
Extracted AbstractJsonHttpMessageConverter from GsonHttpMessageConverter
fix for ternary or elvis using a full expression for their result components.  parser polishing
restored resource conversion test
avoid unnecessary autoboxing
Upgrade to HtmlUnit 2.25 and Jackson 2.9 PR1
Truncate logged encoded and decoded values if necessary
Add @RequestAttribute with servlet-based support
Merged web.socket.messaging.config into web.socket.config and introduced web.socket.config.annotation
Add Servlet.fn integration with DispatcherServlet
Introduce not-null precondition for MockCookie parsing
Add Jackson 2 HttpMessageConverter and View
Fixed typo in docbook id
Access to request and response byte[] in WebTestClient
added MethodValidationInterceptor/PostProcessor for Hibernate Validator 4.2 based method validation; renamed Spring's variant of @Valid to @Validated
MergedBeanDefinitionPostProcessors clear internal caches on bean reset
Polishing the Portlet sections of the reference manual.
[SPR-8401] Added documentation for @ActiveProfiles in the "Annotations" section.
final preparations for 3.0.1 release
Introduced ControllerAdvice annotation
Polishing
Add originalMessage to ErrorMessage
Added tests for the 'scheduled-tasks' element parsing within the 'task' namespace.
Fix test class name
Remove use of CompositeByteBuf in NettyDataBuffer
Fix memory leak for ServerSentEventHttpMessageWriter
Initial import of the JMS module
Convert ContextCache to interface with default implementation
Support automatic discovery of default TELs
Extra information in WebFlux stacktraces
Polishing
some cache doc updates
LazySingletonAspectInstanceFactoryDecorator uses shared singleton mutex
Fix failing test
Explicit documentation on defaulting for 'autowire' and 'lazy-init'
Introduce ForwardedHeaderFilter for WebFlux
polish
Doc. usage of JSR-250 lifecycle annotations in TCF
Implement containsProperty on MapPropertySource
consistency and formatting
Delete accidental call to System.err
generified operations interfaces; update to JDO 2.1; preparation for JPA 2.0
Filter WebSocket extensions
HanderInterceptor and OSIV async request changes
Updated @Autowired documentation in terms of collection/map/array matching
ResourcePatternUtils.getResourcePatternResolver actually accepts null argument
Merge pull request #363 from mikesir87/STS-url-fix
[SPR-4702] Reference manual updates
Improve AntPathMatcher matching performance
Polishing
SPR-8532 Exclude Tiles transitive deps on 'com.springsource.javax.servlet' from 'com.springsource.org.apache.tiles.jsp' and 'com.springsource.org.apache.tiles.servlet' only.
GenericApplicationContext offers Supplier-based registration with BeanDefinitionCustomizer callback
Moved tests from testsuite to beans
Prefer / or /app/* over /main in servlet examples
Avoid stateful MethodParameter nesting level changes in MVC processing
Prefix REST client test support classes w/ "MockRest"
Drop legacy DisposableBean declaration on AbstractApplicationContext
Add more tests for @ComponentScan as a meta-annotation
Suppress warnings in tests
Switch to Reactor Californium snapshots
Rename test classes to avoid confusion
[SPR-8240] Restructuring annotation content.
Make STOMP message broker host and port configurable
Verify that SynthesizedAnnotation must be public
Merge branch 'websocket'
Polish ObjectUtilsTests

Fix off-by-one error in parseLocaleString
Adapt DefaultParameterNameDiscoverer to Graal constraints
AnnotationAwareOrderComparator is able to sort Class objects as well
Added httpOnly cookie ResultMatcher
Ignore empty Accept-Language header value
Allow modifying HandshakeInterceptor list
Polish WebSocket-related
Improve exception msg for inactive test ApplicationContext
Add SockJS client
Declare ASM7_EXPERIMENTAL for full compatibility with JDK 11 bytecode
+ Removed old testsuite.iml (favor integration-testsuite.iml)
Polish SpEL code
SimpleAliasRegistry prevents NPE for alias resolved to null
SimpAnnotationMethodMessageHandler skips template variable check in case of no pattern
Do not log headers in exception message
Remove commons pool 2.x workaround
Tracking ASM 5.0.4 development: Fix for ASM issue 317539
Update STOMP decoder to handle incomplete frames
Upgraded to Gradle 1.12 and updated several dependencies to latest maintenance releases
Add Smile and CBOR Jackson data formats support
Fail if multiple @BootstrapWith's are present
Move feed message converters ahead of jackson/jaxb2
Prevent StackOverflowError in AbstractJackson2HttpMessageConverter
Reduce logging in HandlerExecutionChain
Revised CookieLocaleResolver parse exception handling
SPR-6340 - Add coverage of JSON support to reference guide
MockHttpServletRequestBuilder reliably detects form body content type again
Polishing
Clarified setAutowireCandidate semantics (plus attribute reordering in BeanDefinition)
Polishing
+ fix test by disabling autowiring
Fixing Spring Build
Require EhCache 2.10+
SPR-7443 - Constructor arg resolution by name (doc)
ThreadPoolTaskScheduler allows for setPoolSize changes at runtime
Refactor WebSocket int. tests to work w/ Jetty 9.3
AbstractListenerWriteProcessor/AbstractListenerWriteFlushProcessor error handling
Polishing
Polishing
Polishing
Fix JavaDoc in TestExecutionListener regarding Ordered
Polishing
added Field context variant to TypeConverter interface in beans module; @Value injection works in combination with formatting rules such as @DateTimeFormat
Refine MergedAnnotation.asMap
Move server testing infrastructure to test sources
[SPR-7996] Improved documentation of the context caching mechanism in the TestContext framework:
Polish Javadoc for ListableBeanFactory
Add javax.servlet.http.Part support for data binding
SPR-9062 Fix bug with ambiguous path and HTTP method request mappings
ObjectProvider offers ifAvailable/ifUnique variants with Consumer
Revert "Improve suffix pattern check"
Fix ForwardedHeaderFilter preserves semicolon content
Add Michael Isvy's documentation on @CookieValue and @RequestHeader annotations.
ErrorMessage.toString() includes original message at top level
moving unit tests from .testsuite -> .context
Use Arrays::fill instead of hand-written loop
WebSocketSession.getExtensions consistently exposes unmodifiable/empty list
Fix typo in Javadoc
Add @PropertySources and ignoreResourceNotFound
@Resource provides dependency descriptor for resolving beans by name
Deprecate ObjectUtils.hashCode for primitives in favor of JDK 8's hashCode methods
Update copyright headers in IdGenerators
WebClient supports Void response body
rc2 updates
Raise ISE if @RequestBody is used for form data
moved collection utilities to util
Polish UriTemplateHandler related classes
updated compile and test dependencies
Fix Format-string method arguments
Clean up spring-websocket imports
Fix issue in PatternsRequestCondition
URL Cleanup - license headers - `target` subpackages
updated to final versions of JSR-330 and JSR-303 APIs
Added test for placeholder in alias definition
Allow late binding ServletContextAwareProcessor
Disable HTTP Range support for InputStreamResource
Update cache ref docs re 'args' vs 'params' naming
Moved REST HTTP Method Conversion to View chapter.
Polish JavaDoc
Apply consistent copyright header
Port fix for SPR-14397
Fix typo in MVC reference documentation
Polishing
Move ~.web.reactive.server to ~.http.server
SPR-7197
Fix code completion typo
Polishing
Sync Servlet mocks between spring-test & spring-web
Fix various typos
Revisit MockPart constructors
Improve @SessionAttributes support during redirect
Trim tokenized strings in websocket namespace
Add .gradletasknamecache to .gitignore
Require Jackson 2.0+, EhCache 2.5+, Quartz 2.1.4+
Fix decoding issue in Reactor TcpClient
Polish
Polish ModelAndViewContainer and update tests
Javadoc fixes plus additional polishing
Remove unused 'new-in-2' ref doc xml
Polishing
Add XML config support ResourceResolver & ResourceTransformer
Consistent support for SpEL next to placeholders in annotation attributes
Merge branch '5.1.x'
Consistently handle NoClassDefFoundError in BeanUtils and related places
Fix NumberFormatException with X-Forwarded-Host
revised the detection of Sybase (SPR-6053)
eliminated svn:externals in favor of localized copies of shared artifacts
ResourceUrlProvider handles sanitizes double slashes
Fix import
Use regex comparison in WebSocket stats test
AnnotationAwareOrderComparator etc
Servlet/PortletResponse supported as a resolvable dependency now (in particular for web controllers)
Polishing
Implement java.io.Closeable where appropriate
AcceptHeaderLocaleResolver returns default locale in case of no supported locale found
Avoid ClassCastException in HandlerResultMatchers.methodCall()
Close InputStreams in writeResourceRegionCollection (analogous to writeResourceRegion)
Add after completion callbacks to ChannelInterceptor
Parameterize DeferredResult
Support Servlet Part in Spring MVC Test
refactoring .testsuite .aop.aspectj tests in preparation for migration to .context
Make RequestMappingHandlerMapping xml config easier
Proper use of setComplete in ContextPathCompositeHandler
Fix bug that ignored custom json prefix
Polishing
Moved tests from testsuite to beans
+ Adding POC tooling integration points, namely AbstractConfigurationPostProcessor and allowing for tooling-specified ClassLoader for use with ASM parsing
Polishing
Consistent target method resolution for event and caching expressions
Upgrade to Gradle 4.8.1
Polish
Formatting for scheduling.xml.
Lookup methods can support arguments, find a target bean based on the return type, and be identified by an @Lookup annotation
SimpleAliasRegistry detects resolved aliases that loop back to the original name (SPR-5419); PropertyPlaceholderConfigurer does not modify Map in case of equal String keys (SPR-5318); inner class names in Java source style ("java.lang.Thread.State") supported as well (SPR-5210)
Allow access to applied property sources
remove lift()
Add ParameterizedTypeReference method variants to ServerRequest/ServerResponse
Extract MimeType as a base class of MediaType
Add interface-based detection test
SPR-8007
deleted old test data source factory
Added documentation for the TaskScheduler abstraction.
Clean up spring-messaging imports
Allow single element to override array in synthesized annotation
Delete deprecated code in the TestContext framework
Update version in POMs to 3.0.3
adding eclipse/wtp project settings
Fix failing tests
added the OXM chapter from Spring WS
Reliably detect event listener conditions on proxied beans
Reliably expose nested cause exception message for PersistenceException
Polish
Better hide lazy resolution of JMS payloads
ResolvableType-based matching consistently respects generic factory method return type (even for pre-initialized raw singleton instance)
Add more HttpHeaders constants for standard HTTP headers
Allow null ObjectMapper in Jackson2ObjectMapperFactoryBean.getObjectType()
Add AsyncRestTemplate
SPR-6092: add section on Ivy
Correctly set maxAge and expires in ResponseCookie
Polishing
Favor local, composed annotations in AnnotatedElementUtils
Add BufferingStompDecoder
Fix @SubscribeMapping MESSAGE response destination
@Lazy falls back to empty map/list/set for non-required collection dependency
Add getPrincipal to ServerWebExchange
Delete unused imports
Revised handling of missing data class arguments
Polish
StatementCreatorUtils populates NVARCHAR, LONGNVARCHAR, NCLOB via setString as well
Full "Forwarded" header support including port number
SPR-6538: context-support is no longer marked as an optional dependency within aspects and webmvc POMs
InMemoryWebSession cleans up expired sessions
Rename Http[Encoder|Decoder] to HttpMessage[Encoder|Decoder]
Ensure method & requestURI are non-null in MHSR
Expose scheme in ReactorServerHttpRequest URI
Polish Javadoc
Improve concurrency in DefaultTestContext regarding attributes
Correct RFC 4648 references in method-level javadoc
Polishing
Fix Netty4ClientHttpRequestFactory POST/PUT requests
Polish assertion msgs in JsonPathExpectationsHelper
syncing eclipse classpath settings
DispatcherServet.checkMultipart considers MultipartException cause as well
Improve SimpleStreamingClientHttpRequest performance
Support HttpMessageConverter refs in mvc namespace
Complete initialization with bindToRouterFunction
Synthesize annotation from map w/ minimal attributes
RequestMappingHandlerAdapter allows for overriding handleInternal
Introduced NoUniqueBeanDefinitionException as a dedicated subclass of NoSuchBeanDefinitionException
Polishing
Update to Gradle 2.12
fixed typos (SPR-7221)
Support executor qualification with @Async#value
PayloadArgumentResolver does not insist on configured Validator anymore
Remove DispatcherHandler static factory methods
Consistent deprecation of outdated MVC infrastructure classes
Clean up warnings on Hibernate support code
moving unit tests from .testsuite -> .jdbc
Support generic target types in the RestTemplate
Remove outdated abstractions/delegates from core/util
Fix typo
Executable instead of Object for constructor or factory method
Add writableChannel to WritableResource
Support empty body without content type in WebFlux
Upgrade build to Gradle 2.4
remove spring-parent to list of bundles
Upgrade to Kotlin 1.1.4-eap-33
verify() fails if there are failed requests
Don't implicitly check preconditions on PUT requests
MockHttpServletRequest exposes "HTTP/1.1" as default protocol
Return 5xx HTTP status for invalid target types with Jackson
Reorganize tests in AnnotationUtilsTests for greater clarity
Polish: Overriding methods should do more than simply call the same method in the super class
SmartObjectFactory renamed to ObjectProvider (extends ObjectFactory)
Release version 4.0.0.M2
Distinguish JMS remoting from JMS messaging support (SPR-7339)
Remove obsolete PetClinic Example section of Testing chapter
Update RxNetty artifactId to use their latest Snapshot
Add processExternalEntities support to OXM
JodaTimeFormatterRegistrar defensively checks whether Joda-Time 2.x is present (for Joda-Time 1.x tolerance on the classpath)
@Scheduled reliably applies after other post-processors and shuts down before TaskScheduler
Use request contentType/encoding in ServletServetHttpRequest/Response
Allow SpEL reserved words in type package names
Polishing
collapsed into support
BeanFactoryUtils caches transformedBeanName results for factory beans
Revert .web.servlet to Hibernate Validator 4.1.0.GA
Updated resolvePath javadoc to reflect Environment-based placeholder resolution
Further tests for getBeanNamesForType(ResolvableType)
Polishing
Initial version of context module
SPR-6293: Updated required tiles version to 2.1.2
Avoid implicit autowiring with Kotlin secondary ctors
Test -> Tests
Polish
mvc namespace installation of handler mapping and handler adapter
Fix missing ETag/LastModified headers in responses
Replace EasyMock with Mockito in spring-orm
Polishing
HttpInvokerClientInterceptor propagates client-side Error as-is
Polishing
Sync with 3.1.x
Ensure RouterFunctionsTests class compiles in Eclipse
SPR-6328: Rename @ImportXml -> @ImportResource and allow for usage of non-XML BeanDefinitionReader types
Revised XMLEventStreamWriter to allow for empty elements with attributes
Exclude null requestURI in MHSR.getRequestURL()
Protect against null return value from DataSource.getConnection()
Polishing
Latest dependency updates (HttpClient 4.4, TestNG 6.8.21, SnakeYAML 1.15, FreeMarker 2.3.22, JRuby 1.7.19, JAMon 2.81, JiBX 1.2.6, XMLUnit 1.6, JsonPath 1.2)
Fix typo
Update PropertySourcesPlaceholderConfigurer.java
Remove PubSubChannelRegistry
Allow @CachePut 'key' SpEL to refer to #result
Migrate JSP tag library appendix reference to Javadoc.
Fixed regression with constructing TypeDescriptor from null Class
Support for new ServletContext methods in Servlet 4.0 b03
@RequestBody supports java.util.Optional
Release version 3.2.0.M1
Polishing (along with SPR-10992)
add spring-parent to list of bundles and see if it gets published to maven-central 
doc polish
derby embedded db support initial commit; shutdown use case needs work
Polishing
Use consistent class design
Gson/JsonbHttpMessageConverter keeps output stream open (for SseEmitter)
Add builder to MockServerWebExchange
Rename <mvc:cachecontrol/> to <mvc:cache-control/>
Add context hierarchy tests to Spring MVC Test
+ Repackaged src and test from .config.java.* -> .context.annotation.*
SPR-6338: Rewrite of source-level JMX metadata to remove references to commons attributes
Fix backwards compatibility in WebContentInterceptor
Update documentation for WebJar support
Polishing
TODO moved out to readme.txt which contains latest interesting issues - they should become JIRAs when the dust has settled
EhCache/JCacheCacheManager needs to re-obtain runtime-added Cache reference for potential decoration
Polishing
Formatting support for java.time.Year and java.time.Month
Add HttpHandlerDecorator and fix test package
UriUtils#encodUriVariables methods are now public
@EnableMBeanExport supports empty placeholders as well
Language tag parsing support in StringUtils and StringToLocaleConverter
moving unit tests from .testsuite -> .beans
updated to JRuby 1.2 (remaining compatible with JRuby 1.1 and above)
Flush JSON stream after each element
Fixed a type in target name
Allow PropertyEditor conversion as fallback for enums
Avoid NPE when setting warnLogCategory
Revised description of event source parameter
Fix annotation search ending too early
Split AbstractMessagingTemplate across send/receive
Log exception at ERROR level in CompositeLog
Polishing
Use String::isEmpty instead of "".equals(arg) when arg is not null
Synchronize clear on TransactionAwareCacheDecorator
Polishing
Refactor VersionStrategy in WebFlux
SimpleRequestExpectationManager properly handles sequential requests with different count
Polishing
Polishing
JPA persistence.xml files may use jar-file entries relative to the unit root (as per the JPA spec)
Full alignment of spring-test vs spring-web MockCookie variants
Minor Javadoc update
Respect ModelAndView.status in @ExceptionHandler
Introduce AOP testing utilities
WebSphereUowTransactionManager logs overridden application exceptions
Fix javadoc warnings
Initial preparations for 3.2 RC2
Use (Concurrent)Map.computeIfAbsent for lazy nested collection creation
DefaultSubscriptionRegistry returns safe to iterate Map
Refactor package structure
sync with reactor-core and reactor-io
Add option to copy HTTP session id to handshake attrs
Polish (major) MVC async processing interceptors
Improved RxNetty support.
Add section on RFD + whitelist yml/properties/csv
Refine behavior on error after response committed
Revised javadoc and related polishing
Add AnnotationConfigApplicationContext constructor
Remove the emphasis on BeanFactory and replace with use of ApplicationContext
Add abstractions for content negotiation
Polishing
Migrate AnnotationAwareOrderComparator to MergedAnnotations
Add custom cache manager per cache operation
Improve MockHttpServletRequest/Response charset parsing
MappingJackson2MessageConverter delegates default encoding to Jackson
Fix MethodBasedEvaluationContext.lazyLoadArguments
Fixed @Configurable documentation with respect to logging when the aspect hasn't been configured
Report offending class in SpringFactoriesLoader in exception message
Polishing
Polishing
SPR-4677: Allow annotated methods on a Controller to be marked as exception handlers
JDBC parameter binding uses JDBC 3.0 ParameterMetaData (if available) for type determination
Drop JAF dependency from MediaTypeFactory
Fine-tune default mime type in message broker config
Support custom XmlFactory in Jackson2ObjectMapperBuilder
included qualifier value in debug log for each transaction (SPR-6811)
ResourceHttpMessageConverter does not call contentLength() on InputStreamResource
Promoted BindingContext to web.reactive root (since HandlerResult requires it there)
Change semantics of @CrossOrigin's maxAge regarding negative values
Comprehensive Servlet 3.1 support in spring-web and spring-test
MultipartFile interface extends InputStreamSource
Add request path based default view name support
Polishing
fixme : force retain() on incoming bytebuf content
Add WebSocket integration tests w/ Java configuration
revised matchable converter lookup algorithm; added conversion service bean container tests
[SPR-8401] Added missing TransferServiceConfig code listing.
Moved tests from testsuite to web
Support for @RequestParam Map declared with MultipartFile/Part values
Use PathPattern in PathResourceLookupFunction
Annotation-based event listeners
Removed spring-struts module (Struts 1.x support)
(Reloadable)ResourceBundleMessageSource allows for adding resources
Polish Spring MVC ContextLoader
DefaultPersistenceUnitManager etc
SimpAnnotationMethodMessageHandler ignores empty marker annotations
moving instrument.classloading.* unit tests from .testsuite -> .context
Moved over initial version of beans bundle
Immutable Resource[Resolver|Transformer]Chains
Fix locale parsing error with en_en, tr_tr, etc
Removed JAX-RPC support
Avoid copying in DefaultServerHttpRequestBuilder
Introduce new functional web API
Extend conditional conversion support
Introduce TestAnnotationUtils to reduce code duplication
Polishing the Portlet sections of the reference manual.
Properly detect available port on localhost in SocketUtils
Delete remaining SimpleJdbcTemplate usage
Update "what's new" in 3.1 and 3.2 sections
DisposableBean javadoc refers to singletons as well as scoped beans
Use ContentNegotiationManager for static resources
Synthesize nested maps into annotations
Allow other delimiters in profile XML attribute
Add option to not trim path segments in AntPathMatch
Fix faulty BeanPostProcessorChecker logs with @EnableCaching
Preserve comments when using JibxMarshaller
Fix AbstractTraceInterceptor null-safety annotations
SimpleKeyGenerator to replace DefaultKeyGenerator
Renamed setDefaultPersistenceUnitRootLocation to setPersistenceUnitRootLocation
Support ipV6 Host addresses in HttpHeaders
SPR-6709 Update changelog and add one test
@Model and @Bound annotations for configuring Binder instance from annotation model beans
preparations for 3.1 M2 release
Added max memory for javadoc vm
Fix typos in Reference Documentation
Introduced SimpleTransactionScope (analogous to SimpleThreadScope)
Check for null on the argument instead of the message
Rename MimeType's getCharSet() to getCharset()
Fix APC registration for @EnableTransactionManagement
Investigate issue with @ComponentScan as meta-annotation
reworked PropertyPlaceholderHelper
Corrected some typos, code samples and changed a bit of wording.  All code samples are now SpEL testcases.
SPR-7674 - Documented value defaulting in Spring EL
Polish
Support single, unqualified tx manager in the TCF
Polishing
Add ResolvableType to HttpEntity for multipart Publishers
Add resource pattern so that tests run properly with resources in non-standard locations
spring:eval tag initial commit
StringUtils.parseLocaleString accepts Java 7 variants
Revert "Infer HTTP 404 from empty Optional/Publisher types"
Polishing
Removed hard-coded local path from .core/.classpath; removed duplicate asm entry in .context/.classpath
Eliminate all Javadoc warnings
SPR-7732, SPR-6506, SPR-7191 MVC Namespace improvements to the annotation-driven element - custom message converters, formatters, and message codes resolver.
Avoid repeated assignability check for raw class on fallback match, since AutowireCandidateResolver is only being called for basic type matches to begin with
Use RepeatableContainers.none() in AnnotationUtils
Avoid Gradle compiler warnings
restored support for String-to-ContextResource conversion (SPR-8383)
updated note re. 3.0 tutorial
Doc use of reactive types in Spring MVC controllers
Improve writing in mock reactive request and response
Made string constants in HttpHeaders public
MutablePropertySources log statements guarded by isDebugEnabled
Properly evaluate @Conditional in case of multiple imports for same config class (fixing regression in Spring Boot)
Polish
Spring's EhCache setup builds on EhCache 2.1+ now
Payload encoding/decoding and handling refinements
Add @Request(Param/Part) support for multipart requests
UriComponents allows "+" in a query param
ComponentScan annotation allows for registering beans with lazy initialization
moved jca.* unit tests from .testsuite -> .transaction
Improved StAX<->SAX bridge
Explicit javadoc references to BeanFactory-based default executor lookup
Add RFC5987 support for HTTP header field params
Minor polishing of related files
Retrieve newly created attribute from underlying request (marking it for update)
Disable Jackson's buffer recyling feature for WebFlux
Add spring-test-mvc tests with Spring HATEOAS links
Introduce TCP & UDP server port scanning utility
fixed broken classpaths for ehcache and junit
Consolidate CORS/OPTIONS request mapping
Make HierarchicalUriComponents Serializable
Polishing
same-named unit from persistence.xml overrides in case of conflict with default unit
Update stale external javadoc links
Add support for OkHttp3
Support for mutating ServerWebExchange in WebTestClient
Fixed typo in code example
Polish Servlet async request processing
added org.springframework.testsuite back into the top-level build
Polishing
Use list of HttpMessage[Reader|Writer]s instead of CodecConfigurer
Refine ContentNegotiationStrategy contract
Polishing
Remove a Groovy test already covered by testConfigFileParsingError()
Expose view url to render function in ScriptTemplateView
Use CacheResolver in Spring abstraction
Add test for UriUtils.encode(String, Charset)
Fix error message in RestTemplate
Update Quartz links in reference and Javadoc
Switch to reactor snapshots and make use of API change
Use Geronimo j2ee-connector API in JMS pom
Update copyright year, author tags, and Javadoc
Resource handler tests expect status 404 for directory in jar file
Check original beanClass in #isFactoryBean calls
Allow nulls with multiple embedded value resolvers
Upgrade to Gradle 1.0-milestone-8a
Ensure synthesized nested annotation arrays retain correct type
Polish contribution
preparations for 3.0.2
Clarified getAllAnnotationAttributes behavior
Polish assertions and Javadoc for ResourceDatabasePopulator
Switch to suspended mode before demand
Format validation chapter docbook source
Spring eval docs
Polish formatting
Add Jackson Smile support to WebFlux
Bean method metadata exposed through AnnotatedBeanDefinition
SPR-5327: Duh: broken build - invalid XML.
Polish tests
Merge 3.1.0 development branch into trunk
Add link to docs
Polishing
Polish SyncHandlerMethodArgumentResolver hiearchy
Introduce MockEnvironment in the spring-test module
Polish GroovyBeanDefinitionReader formatting
moving unit tests from .testsuite -> .aop
MockRestServiceServerBuilder can be re-used
SPR-6464 Add @FlashAttributes annotation and FlashStatus method argument
MediaType parsing supports comma inside quotes
added language element to programlisting for syntax highlighting
SPR-8483 Update reference documentation with multipart request-related changes: @RequestPart, Servlet 3.0 multipart reuqests, javax.servlet.http.Part method argument types.
Delete trailing white space in spring-test
Add support for WebFilter and WebExceptionHandler
moving unit tests from .testsuite -> .orm
Improve decodeToMono support
Polishing
Fix broken RequestMappingHandlerAdapter setter
Revisit date-time tests for compatibility with JDK 9 build 72
Suppress warnings for java.io.Closeable resources
Working version of Servlet 3.1 <-> RS bridge.
Polishing
Upgrade to ASM 7.1
PayloadArgumentResolver's MessageConversionException includes original payload type
Add UnknownHttpStatusCodeException
Polish
Update ViewResolver registration classes
Reduce log level for message re: missing annotation
Document default embedded value resolver support for property
builder
Polish
Polishing
Introduce (Annotation)SessionFactoryBuilder types
MappingJackson(2)JsonView allows subclasses to access the ObjectMapper and to override content writing
Polish
[SPR-6222] Updating PetClinic build documentation regarding migration to Spring Build and changes resulting from the upgrade to Spring 3.0.
Update 3.2 M1 changelog
Polishing (forward-ported from 4.1.x)
Explicit notes for @Bean on static methods, private methods, and Java 8 default methods
Introduce RequestExpectationManager
Introduce PathPatternParser for optimized path matching
Polishing
Simplified separator check within isInvalidEncodedPath
Support response cookies in HtmlUnit integration
UriComponents support for array query params
Merge branch '5.1.x'
Typo fix 'a enterprise' -> 'an enterprise'
@Configuration classes get processed according to their @Order (if applicable)
Fixed Eclipse classpath regarding Commons IO and Codec
Update JavaScriptUtils
Switch to vararg for configuring ResourceResolver's
XStreamMarshaller supports custom NameCoder strategy
"sharedHttpSession" shortcut for MockMvc builders
Avoid NPE when registering a SpEL MethodFilter
Document @AliasFor
Added content negotiation and MarshallingView to petclinic
lastSessionCheckTime updated after session check
Add user-name header to CONNECTED frame
Upgrade to Gradle 3.5
Fix typo in reference documentation
Fixed up POM bug
AbstractMarshaller defensively uses DocumentBuilderFactory within synchronized block
Discover controllers based on type @RequestMapping
DefaultSingletonBeanRegistry avoids singletonObjects lock wherever possible for non-singleton factory performance
Resolved SPR-6187: touch-ups based on mfisher's feedback.
Fix failing test
polish
Add SpEL support for increment/decrement operators
Polishing. Add description of literal expressions.
Add convenient WebAppInitializer base classes
Restrict HTTP methods on Servlet HiddenHttpMethodFilter
Introduce ServerHttp[Encoder|Decoder]
EventListenerMethodProcessor defensively handles unresolvable method signatures
BeanFactoryAnnotationUtils provides qualifiedBeansOfType method
Update license.txt file
Introduce programmatic tx mgmt in the TCF
Jackson2Tokenizer passes DeserializationContext into TokenBuffer
Rename ReactorNettyTcpClient to ReactorTcpClient
Add ServerHttpResponseDecorator
SPR-6341 Added documentation for Lifecycle, SmartLifecycle, and LifecycleProcessor in the 'beans' chapter after init/destroy callbacks are covered.
Merge branch '5.1.x'
Improvements for registering custom SQL exception translators in app contexts.
@ExceptionHandler is able to process Error thrown from handler method
Proper support for Root WAC in Spring MVC Test
Add missing @Nullable declarations to TestContext return values
SpringContextResourceAdapter implements equals/hashCode according to the JCA 1.5 contract
Reflect @Async executor qual. 3.2=>3.1.2 backport
Refactor tests to use toExchange() shortcuts
Polish
updating Eclipse .classpath settings for Freemarker 2.3.15 upgrade
Polishing
Allow instrumentation to be used with Attach API
Introduce RequestEntity and builder
Polishing
Lazily retrieve delegate beans in AsyncConfigurer and CachingConfigurer
Added ASPECTJ and REGEX constants to FilterType, along with a corresponding 'pattern' attribute on ComponentScan.Filter
Polishing
Fix buffering issue in StringDecoder
SpringServletContainerInitializer does not log WebApplicationInitializer class names
Improve Object return type support in WebFlux
Nullability refinements in spring-webmvc
changed from M4 to RC1
Polish cache abstraction code
WebFlux support for @SessionAttributes
Polish Javadoc for LookupOverride and related code
moving unit tests from .testsuite -> .beans
Clean up warnings in spring-test
fixed sample code (SPR-6687)
Introduce Gradle-based build
AnnotationJmxAttributeSource uses MergedAnnotation API directly
Revert "Register EventPublishingTestExecutionListener by default"
[SPR-8386] AbstractContextLoader now adheres to the SmartContextLoader contract by verifying the existence of generated default resource locations.
fixed JavaConfig sample code (SPR-6637, SPR-6638)
Moved @Uses annotations to org.springframework.lang; fixed Base64Utils to declare Java 8, and fixed PathResource's declaration to refer to Java 7.
Add TestGroup.CUSTOM_COMPILATION
Improve JacksonJsonEncoder
Move indexer implementation to index.processor subpackage (for Jigsaw)
Improve 404 "handler not found" handling
Add getResource to MultipartFile
ConversionService detects generic type declaration on target class behind proxy as well
fixed incorrect version for javax.el in .classpath files (was 2.1.0, now set to 1.0.0)
Support WebSocket ServletServerContainerFB in the TCF
Polish MockRestServiceServer client tests
ServletServerHttpRequest.getHeaders() ignores invalid content type
Fix minor issue in ReactorMessageChannel
Replaced reflection code with straight Servlet 3.0 setAsyncStarted call
Fix typo in MVC docs
Detect generic type match behind interface-based proxy as well
Merge branch '5.1.x'
Consistent use of @Nullable across the codebase (even for internals)
PathContainer parses URL paths only
Add CompletableFuture/Single/Promise support
javadoc for StandardTypeLocator and moved some TODOs to the readme
Fix "**" precedence in AntPathMatcher comparator
Support conversion from Enum Interface
Use lambda expressions for lazy instantiation (#1911)
Remove the JobDetail from the job data map after discovering it
Consistent SmartLifecycle implementations
Per-request exchange mutating for WebTestClient
Polishing
Detect custom ContentNegotiationViewResolver
Add fromHttpRequest to UriComponentsBuilder
AcceptHeaderLocaleResolver keeps language match among supported locales
Return MultiValueMap from ServerRequest.queryParams instead of List
Groovy loader should delegate to XML loader in the TCF
DispatcherServlet etc
[SPR-8387] Fleshed out the implementation of DelegatingSmartContextLoader and corresponding tests.
Fix SpEL compilation for non trivial elvis operand
Merge branch '3.2.x' into master
SimpleNamespaceContext implements all subtleties of the NamespaceContext contract
Upgrade to Hibernate ORM 4.3.11 and 5.0 RC4
Optimized TomcatInstrumentableClassLoader implementation
Rename {DefaultWeb=>StandardServlet}Environment
Support arbitrary meta-annotation levels in the TCF
Next Development Version
MimeMessageHelper encodes attachment filename if not ASCII compliant
Removed Commons Attributes from web.servlet module
BeanFactoryAnnotationUtils consistently applies bean name fallback when no BeanDefinition present
Minor copy edits to README
Update Spring MVC Java config for ResourceResolvers
Fix test class name and protect debug log message
Support running Kotlin apps without kotlin-reflect
SPR-5970 - Tidy up Maven central POM for spring-webmvc
added formCheckbox to macro list (SPR-7322)
Add WebSocketMessage and WebSocketHandler sub-interfcs
Consistent ordering of Assert variants
Increment version to 3.2.3.BUILD-SNAPSHOT
Spring Expression Language docs
Rename beforeRead/Write() to resolveRead/WriteHints()
eclipse settings to support unit test
added note to changelog about supporting load-time weaving in JBoss 5 (SPR-5764)
+ align @CacheEvict behaviour with @Cacheable and @CachePut
Gradle 'api' task depends on 'jar' tasks
Improve DataSize to support negative values
Added Java 8 compliant @Schedules container annotation for @Scheduled
Polishing
Support ordered interceptors in RestTemplate
Polish ContentNegotiationStrategy support
Allow for specific instance-based match to override factory method signature match
org.springframework.instrument.classloading --> org.springframework.instrument.tomcat
Register environment in all bean factories in a hierarchy
Polishing
JodaTime 1.3 or higher required (SPR-7222)
Polish Javadoc for @Sql and SqlScriptsTestExecutionListener
Polishing
Improve charset management in XpathResultMatchers
Support expression in @SendTo
Add <spring:argument> subtag for message/theme
Increment version to 4.0.0.BUILD-SNAPSHOT
Further preparations for 3.2.2
DefaultAopProxyFactory falls back to JdkDynamicAopProxy when encountering JDK proxy as target
Support for Hibernate ORM 5.0 Beta 2
Relocate test class to src/test/java folder
Provide controller level Cache-Control support
URL Cleanup - polishing
Merge branch '5.1.x'
MvcResult returns asyncResult after asyncDispatch
Latest dependency updates (Gson 2.7, Jackson 2.8 RC2, Tomcat 8.5.3, Caffeine 2.3.1)
Minor refactoring in StringDecoder + polish
Extract base class from RequestMappingHandlerMapping, one that allows for discovering request mappings from something other than annotations
BeanFactory accepts getBean arguments for non-prototype beans as well
Support <ref> for arg resolvers return value handlers
Revert Path Pattern changes in WebFlux
Updating JUnit and TestNG versions for IDEs and Maven.
Polish resource handling tests
Subpackage rearrangements within 4.1's jms-messaging alignment
Add getAcceptLanguageAsLocales
Indexer enforces target descriptor only after non-null target check
maven deployment script development
Expose checkbox field marker as 'hidden' to RequestDataValueProcessor
multipart handling etc
PropertyValue stores source object in common superclass field
Enrich CONNECTED frames with Principal
AspectJ support for javax.transaction.Transactional
Direct delegation to RSocketMessageHandler
SchedulerAccessor catches cluster race conditions on job rescheduling
WebClient.mutate() should not impact future .mutate() invocations
Added test-time dep on commons collections
+ add explicit dependency on commons-pool to prevent version 1.3 from being used (since it contains a memory leak)
CachedIntrospectionResults and co consistently avoid synchronization (through use of ConcurrentReferenceHashMap)
Align new FileSystemUtils NIO implementation with original behavior
Add cache abstraction tests using JSR-107
Upgrade to Servlet API 4.0 for MVC and merge EhCache 3 tests into spring-context-support
AbstractApplicationContext uses AtomicBoolean instead of synchronization for active/closed flags
Refactor util.log.LogUtils into core.log.LogDelegateFactory
Remove PathPatternRegistry
Merge remote-tracking branch 'origin/master'
Consistent logging in Environment and PropertySource implementations
Javadoc fixes
Polishing
Consistent default connection release mode with Hibernate 5.1
Check status in AbstractServerHttpResponse setComplete
Treat Kotlin nullable as non-required
Add RelativeRedirectFilter
Added content negotiation and MarshallingView to petclinic
SPR-6092: clarify jar name in test docs
Update "What's new in 3.1" ref docs
MethodBasedEvaluationContext reliably exposes varargs
Annotation tests should not rely on JDK-specific toString() representation
Rename spring-web-reactive to spring-webflux
ExposeInvocationInterceptor declares itself as PriorityOrdered now
Handle NoClassDefFoundError consistently for TELs
Update @since tag in Eclipse template to 5.0
HandlerResult now requires MethodParameter as input
Upgrade to Gradle 4.10
Demonstrate that the CollectionFactory API is not type-safe
Polish
Make getters and setters null-safety consistent
Add partial WebSocketMessage support
renamed EhcacheCacheManager to EhCacheCacheManager
Allow "release on close" for DataBuffer.asInputStream
Final patches from ASM 5.0.2 release
Merge branch '5.1.x'
Avoid unnecessary generics on emptyMap/Set/List
Fix <websocket:interceptors> default configuration
Polish
Next development version
Honor contract of @Repeatable in AnnotationUtils
Remove inconsistent spaces
added some styling and color coded syntax highlighting to beans chapter
Extracted AbstractIdentityColumnMaxValueIncrementer and introduced deleteSpecificValues mode
updated license and notice files
Add "excludedExceptions" to SimpleUrlHandlerMapping
Context namespace exposes null-value attribute for property-placeholder element
Introduce SQL script exception hierarchy
RESOLVED - issue SPR-6779: imported @Configuration classes do not get enhanced and fail to satisfy scoping requirements
Use Jackson improved default configuration everywhere
embedded db support
Default order 0 for ServerResponseResultHandler
Clean up warnings that show up in Gradle build
Upgrade HttpComponentsHIRE to HttpComponents 4.3
ChannelInterceptor default methods + deprecate adapter
Allow to specify hints with the functional web API
Further improve thread safety for attributes in DefaultTestContext
Add PathResourceResolver conditionally
Expose path matching settings in MVC Java config
OXM is nearing completion
updated dependencies
ServletRequestMethodArgumentResolver passes null references through (again)
AbstractHandlerMethodMapping allows for customized bean retrieval
SPR-5917 Add docs on Lifecycle
Set source and target to JDK 1.8 for Eclipse projects
Clean up spring-aop tests warnings
Refactor PathSegmentContainer -> PathContainer
Optimize Consumes/ProducesRequestCondition
Polish
Polishing
Add TimedSpringRunnerTests to performance test group
Polish "Replace relevant code with lambda"
@Bean provides autowireCandidate flag (analogous to XML definitions)
Clarify documentation about JSON Views
Merge branch '5.1.x'
[SPR-5916] ContextLoader class is now inherited from class hierarchy if not specified explicitly via @ContextConfiguration's loader attribute on the current test class.
Support data binding for multipart requests in WebFlux
Fix Javadoc in MockHttpServletRequestBuilder
Refine TestPropertySourceUtils for direct use
Update Javadoc in ExtendedBeanInfo
Fix formatting
Allow custom UrlPathHelper for WebSocket requests
Revised SqlRowSet javadoc and support for JDBC 4.x ResultSet additions
Relaxed procedure existence check on Oracle (for non-exposed synonyms)
Configure ResourceUrlProvider in WebFlux
Skip plain Java annotations in SourceClass.getAnnotations() upfront
Avoid scoped destruction callbacks in case of no post-processor actually applying
Fix list of supported JCache annotations
MappingJackson(2)HttpMessageConverter alignment
JtaTransactionManagerFactoryBean as an equivalent to <tx:jta-transaction-manager/>
Added test for inconsistency between read and write method
Disable equals in JsonPath~ and XPathAssertions
Increment version to 4.0.0.BUILD-SNAPSHOT
Polish ScheduledTaskRegistrar(Tests)
Collapse messaging.simp.handler into messaging.simp
Fix concurrency issues in SockJS session impls
Fix broken AnnotationAttributesTests
updated required Hibernate version
Note in TEL: before/after test exec. callbacks don't work w/ JUnit 4 rules
Polishing
Migrate documentation to asciidoctor
Adapt to the changes in Reactor Netty ClientOptions
Polish
Change MediaTypeFactory to return Optional
PoC: migrate from JUnit 4 to JUnit Jupiter Assertions
Clarify programmatic contract (no annotation-driven injection)
Update Netty4ClientHttpRequestFactory buffer size
SPR-6881: remove extra dependency
Refactor exchange mutator
Consistent use of @Nullable in spring-test
Fix Javadoc for AbstractApplicationContext.registerBeanPostProcessors()
BeanFactory supports bean creation arguments for by-type lookup as well
Polishing
Add RequestPostProcessor
Polishing
Introduce ResolvableType.toClass() shortcut
Consistent non-exposure of inherited annotations in AnnotationMetadata
Correlated WebFlux server log messages
Protected getContentType in DecoderHttpMessageReader
SPR-8770 Ensure RequestDataValueProcessor is invoked from RedirectView.
Avoid potential deadlock in AbstractBeanFactoryPointcutAdvisor
Take content-type from ResponseEntity unconditionally
consistent compilation against Servlet 2.5, JSP 2.1 and JUnit 4.5
Support mutable headers in MessagingTemplate
Remove checks and updates to transfer-encoding
Use BufferedInputStream in SimpleMetaDataReader to double performance
ResponseBodyEmitter detects timeout/completion
AbstractApplicationContext clears ReflectionUtils cache as well
Moved tests from testsuite to orm
Polishing
VersionResourceResolver should delegate to the chain
Update Joda Time references in documentation
Defensively use Class.forName instead of ClassLoader.loadClass
Workaround for onReadIdle issue in Reactor TcpClient
changed jar name to use RELEASE instead of RC1
StringUtils.toStringArray/CollectionUtils.toIterator handle null input
SPR-7799 Minor fix in documentation.
Updated projects and ivy.xmls
SPR-5326: HibernateClinic in PetClinic sample should use constructor-injection instead of field injection
spr7816
Latest dependency updates (H2 1.4.189, Underscore.js 1.8.3)
Fix typo in `my-property'
default config for web binding initializer and formatting/conversion system w/ mvc namespace
Polishing
setting things up for 3.0.2
Beverly's edits reviewed; spell checked
Fix typo in AbstractDelegatingSmartContextLoader
SPR-5251: URI Templates in @RequestMapping
Work-around for Eclipse bug regarding EnumSets
Reorganize spring-web-reactive .gitignore
Rename "Request/ResponseBody" publisher/processor
Implement description consistently across Resources
@Bean methods are allowed to override existing bean definitions with a role other than ROLE_APPLICATION now (e.g. framework-generated default beans)
Polishing
NotReadablePropertyException accepts root cause (analogous to NotWritablePropertyException)
Add baseUrl overloaded MvcUriComponentsBuilder methods
Use PathPatternParser in function.server
Fix issue in UriTemplate parsing
support for default "conversionService" bean in an ApplicationContext; revised formatting package, now integrated with DataBinder and AnnotationMethodHandlerAdapter; revised AccessControlContext access from BeanFactory
ForwardedHeaderFilter works with Servlet FORWARD
Throw AssertionError instead of IAE in MockRestRequestMatchers
Polish annotation-driven event listener support
Default conversion support for EnumSet / EnumMap
updated refs
Polish Javadoc for StringUtils and Assert
Polishing
Log4jWebConfigurer supports resolving placeholders against ServletContext init-parameters as well
JPA 2.1 support, in particular for SynchronizationType.UNSYNCHRONIZED
Selector header name is exposed for configuration
Update MVC config to use CNM for static resources
PathPatternParser encodes patterns as it parses them
Introduce tests for @[Before|After]Transaction on default methods
Eliminate spring-asm .gitignore files
Upgrade Hibernate from 4.0.0.CR7=>4.1.0.Final
Polishing
Fix typo
fixed typos
Remove bogus DataSource test from JpaTransactionManagerTests
prepared for 3.0.3 release
sync with dispatchOn change in reactor-core
Preparations for 3.2.3
Remove Velocity support
Polish contribution
BeanWrapper does not fall back to String constructor if ConversionService attempt failed before
Adding eclipse metadata
Introduce alias for 'value' attribute in @ComponentScan.Filter
final preparations for 3.1.1 release
Remove code duplication in ModelAndViewAssert
further M2 revisions
moved OpenSessionInViewTests back to orm module
Missed namespace declaration
Fix typo
Fix NPE in ErrorsArgumentResolver
BeanWrapperImpl.getPropertyDescriptor allows for nested paths again
Polishing
BeanWrapper etc
Move NoOpCache to a top-level public class
Improve ConcurrentWebSocketSessionDecorator
Upgrade to Reactor Netty 0.8
Polish Javadoc
polish
Explicit calls on Buffer base type (for compatibility with covariant return type on JDK 9's ByteBuffer)
Scheduled task introspection through ScheduledTaskHolder interface
Merge branch '5.1.x'
Configurable arg resolvers and return value handlers
Introduce additional JsonPath matchers in Spring MVC Test
