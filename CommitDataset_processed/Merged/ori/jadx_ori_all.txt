core: fix some concurrency issues
fix: don't cast overloaded methods with generics from other class (#448)
core: add tests options, change log format
core: restore simple for-each loop over iterable object
travis: tune cache options
core tests: compile decompiled code
core: improve chained conditions processing
core: fix 'this' reference in anonymous classes
core: support fall through cases in switch
core: rename depth traversal class
gui: show app certificate (#305)
fix: process field init code in dependency collector (#467)
core: fix wildcard signature processing
core: replace removed synthetic constructor
core: fix classes import naming
core: fix synthetic method inline (fix #71)
Create Messages_zh_CN.properties
core: rename classes for case-insensitive systems (fix #24)
core: resolve minor issues
fix: remove redundant wrapping for same arith operations (PR #559)
core: refactor 'if' regions processing
core: fix "null" enum field
core: don't traverse exception handlers twice (includes in TryCatchRegion)
core: fix condition in loops (issue #9)
fix(gui): NPE if the autosave is enabled and project is initial (PR #565)
Fixes errors
gui: add hyperlinks for classes and fields
core: fix try-catch blocks processing
fix(gui): on settings reset run upgrade method
core: rename wrapped synthetic method (#336)
Merge pull request #115 from bigfool/master
gui: fix jump manager
core: show all decompilation errors in code comments (#313)
core: fix various processing issues
Fix console warnings during compilation (gradle build)
core: improve 'if' detection with 'return' instruction
fix thread-safe bug
fix: don't rename constructors and class init methods in deobfuscator (#415)
Add gradle files
Added a whitespace before oneLiner ends.
Merge pull request #39 from NeoSpb/warn_switch
fix: remove unreachable blocks (#451)
core: fix warning from dx library
gui: update RSyntaxTextArea version, refactor new version checks
res: don't use system locale for number formating (#238)
core: process dependant classes before code generation
core: fix processing same class several times (#274)
test: added module for check recompilation of test app
gui: fix incorrect settings loading
style: use character instead of string, for better performance (PR #503)
core: fix variable rename
Merge pull request #324 from FlXME/patch-1
fix(gui): don't skip indexing code lines starting with '}' (#426)
core: fix resolving the instance field in the 2nd and more nested inner class
gui: add log viewer
core: inlining invoke arguments
res: don't add colon for empty namespace (#231)
core: omit redundant brackets in conditions
core: add 'show inconsistent code' parameter
core: replace 'move' instruction instead argument inline
gui: restore last window position and size
core: rename classes with unicode characters or reserved names
Add support for dx 1.8 library
feat(build): use semantic-release for automatic release publishing
core: exclude inner classes from class dependencies (#318)
build jadx-gui.exe
core: improve variable names after 'toString' invoke
test: migrate to JUnit 5 (PR #493)
Merge branch 'master' into type-inference-wip
core: fix missing 'catch' code
fix: made correct instructions remove in new filled array replacement (#461)
core: fix endless loop processing (#275)
gui: fix class members expand
core: restore simple indexed loops
Merge jiqimaogou/jadx
core: fix complex conditions with mode alternation (fix #31)
fix: wait time for background jobs too short
core: move tests
chore: remove 'v' from version string
core: move tests
core: fix array type for new-array instruction (fix #50)
core: fix annotations number decoder
fix: use alias as a base for class rename if file system is case sensitive (#474)
Fixes bugs
core: inline anonymous classes
GUI: disable package if "excluded" (#477)
update gradle to 1.9
chore: use lambda (PR #544)
core: improve out block detection in switch (issue #38)
fix: correct code line number calculation
core: change anonymous class marking
core: fix 'break' in complex 'if' in loop (fix #67)
core: fix condition processing (resolve #25)
fix: move test class and rename GUI message (PR #555)
update tests
Directory Bug 
rename jadx-cli, update build scripts
res: close tag before cdata (#231)
support arsc raw file view
fix: instruction deep equals must check result
travis: cache dependencies
core: fix links for fields in nested classes
chore: fix "unused" warnings (PR #549)
fix: don't remove synthetic method if args count or name not same (#361)
core: ignore bogus opcode decode (#214)
core: fix null pointer in code annotations getter
chore: About box and logos
core: add jadx visitors annotation for describe dependencies
core: option for control escaping of unicode characters (#103)
fix: resolve mix up in SKIP and DONT_GENERATE flags
fix: implement new type inference approach
gui: add preferences dialog
core: fix field search with obfuscated names
Change display style for resources.arsc
fix issue #184
core: fix exception handler jumps (#320)
core: fix instance initializer producing (don't generate super() call)
core: fix 'if' detection
core: store line info, add fields and methods to api, refactoring
resources: support text chuck in binary xml (fix #84)
core: guard endless regions processing
core: fix missing code after 'if' inside loop
gui: show info string if no recent files available
refactor: resolve deprecation warning for TypeGen.literalToString method
fix: additional checks for synthetic methods remove, rename and inline (#452)
core: fix issues reported by coverity
Generate code for 'if-else-if' construction
fix: rename parameters in annotations (#504)
core: don't set 'skip' flag for failed nested 'if' merge (issue #18)
core: annotate generated code with reference to used methods
core: better args class
core: handle special values for numbers
core: disable parenthesis remove (break code in most cases)
core: refactor streams closing
style: remove unused imports (PR #475)
core: improve error reporting for inconsistent code
core: fix field initialization extract from try/catch block (fix #78)
Removed old less-warnings branch commit changes.
fix: check variable usage before convert indexed loop to for-each variant (#483)
core: reformat imports, fix some sonar issues
test: limit auto check execution time
build: setup bintray unstable upload
fix bintray upload
core: fix loop detection
gui: fixed object reference holding by LogCollector (#302)
core: fix constant fields values retrieval
core: add cache for JavaNodes, fix definition annotations
fix(gui): make correct size truncate for recent files list
fix: add more details for variable with type inference error
Update gradle and dependencies versions
Fixes bug with NS declaration duplicates
fix(gui): show java version, instead of VM version in about dialog (PR #489)
core: move class renaming code from ClassInfo to RenameVisitor
Refactored attribute value printing.
core: added deobfuscation feature (basic functionality)
build: check secret variable to skip deploy on pull requests
core: remove synthetic fields for inner classes
gui: show source line numbers
core: add code lines for while loop
core: rename fields and methods in deobfuscation pass.
core: remove unused method
gui: add search bar
core: fix 'break' detection in loop
fix: change exception to soft warning for getType in RegisterArg
core: use aliased name for save class to file
fix(gui): detect if a window is opened inside a visible screen (PR #521)
Process complex 'if' conditions, refactoring
Merge branch 'master' into type-inference-wip
gui: add icons for packages tree, add hierarchical mode
core: add resources methods to jadx API
fix: use soft checks for objects and arrays in 'if' type listener (#401)
core: fix wildcard type in iterable loop
core: fix switch statement processing (issue #9 case 2)
core: make decompilation results more deterministic
core: sort methods by source line number
core: fix constants replace for constructors and other instructions
fix: force rename fields and methods with reserved names (#364)
fix: improve filled array detection
core: fix processing overriden methods in deobfuscator (#207)
-New language: Spanish
Copy XMLChar class from Apache Xerces library. Replaces all invalid (obfuscated) XML tag and attribute names to random ones
Merge pull request #255 from skylot/xml_unreadable_chars_escapes
core: inline filled array creation
Merge pull request #323 from FlXME/patch-2
Boundaries check. Testing with other given xml binaries.
fix code style issues
core: remove redundant parenthesis for arithmetic operations
core: fix inline in 'move' instruction
core: improve 'finally' extraction, refactor instructions
refactor: use flags to mark registers with immutable type
core: use ternary operator
core: fix invoke args skipping
core: fix null pointer error in try/catch processing
Merge with master
fix: improve fallback mode dump (add types, remove label after if)
core: fix nested try-catch blocks processing
Merge branch 'master' into type-inference-wip
fix: use quantity attribute for plurals (PR #486)
fix issues reported by Coverity
fix: restore support for AAR files (issue #95) (PR #464)
gui: improve memory usage (#79)
gui: fix missed nodes in hierarchical packages tree
core: fix method definition
fix: don't reject type update for generics
gui: add internal tests
ui: don't run full decompilation on start
Fixed issue where renamed classes/methods referenced in a different dex file would not be renamed properly. Deobfuscation only modified the Class info for the InfoStorage of the Dex file the class belonged to. If a class in another Dex file referenced it, it would not know of the rename.
core: fix class name checker execution after deobfuscator (#286)
core: prevent endless loop in region construction (#267)
add file type detect, jadx file by file's header, not only file's extension
core: restore switch over enum
core: fix 'finally' extract (fix #53 and #54)
Merge pull request #108 from Tneciv/master
core: fix inner class handling in classpath and signature parser
fix: resolve some sonar critical issues
core: improve signature parser
core: move instruction remover class to utils
core: hide value parser constants
update gradle wrapper to version 4.4.1
gui: fix inner classes opening
core: refactor attribute storage
test: allow use Eclipse compiler in tests (#536)
improve jadx api
core: use correct argument wrap method
fix: use multi-variable type search algorithm if type propagation is failed
core: fix line number references
Language switch supported
cli: fix errors list sorting
gui: fix colors to match system theme, add editor theme selector (#297)
core: fix method redecompilation (issue #6)
core: inline anonymous classes with arguments
core: fix incorrect package for R class (#99)
fix: safe SSA variables replacement in filled new array instruction (#399)
core: remove not needed casts
core: fix variable declaration in else-if chain (#273)
core: allow subblock replace for 'if' region
core: inlining return results
core: fix type inference for phi nodes
core: fix code style
core: fix used name/path to the deobfuscation map file
fix: remove invalid chars from class names (#488)
chore: update dependencies and gradle
core: fix NPE in loops processing
fix: loading of i18n resources as UTF-8 (see #363) (PR #386)
Fixes for ZIP and XML processors
fix: move instruction out of try/catch (#468)
core: fix deobfuscation for overridden methods (make identical name ('mo{index}')
core: fix decoding UTF-8 strings in xml resources
core: fix processing of last instruction in 'try' block
Receives canonical path in ZipSecurity.isInSubDirectory(...)
build samples without debug info, fix try/catch processing
core: fix type inference for filled array (#87)
core: process nested ternary operators
fix some code style issues
fix(gui): allow partial settings sync to not save command line options
Boundaries check. Testing with other given xml binaries.
refactor: use Path instead of File (PR #527)
gui: min and max deobf lengths must be positive
core: fix imports for inner classes with same names
gui: add icons to classes tree
core: implement 'finally' block extraction
Delete .DS_Store
Removes useless imports which prevented gradle build
fix(gui): apply render hints for line numbers
core: redone 'if' structure checking
core: fix exit node search for synchronized block (fix #72)
core: fix try/catch wrap logic (fix #47)
core: restore for-each loop over array
build: update gitlab config
fix(gui): fill background before draw line numbers (#404)
core: fix inline of anonymous obfuscated class (#122)
core: don't show rename comment if class name not changed
fix code style issues
core: improve exceptions handling
core: remove unnecessary return instructions for void methods
Merge branch 'master' into type-inference-wip
PR for issue #191
core: fix loop processing after exception handler remove (fix #59)
core: don't process dependencies of dependencies
core: fix deobfuscation when class is in the root package (package path is empty)
fix: generates code of missing R class (#353)
fix issues reported by coverity
Decode attributes which may contain either enums or values, e.g. layout_width
gui: refactor UI classes
fix: don't rename R class fields alias (PR #492)
core: remove redundant spaces for enums
core: allow to disable constant dereference (#106)
gui: show resources
build: disable codecov pull request report
fix: rename R fields using resource names (#465)
fix: rename method wrapped by synthetic only from same class (#430)
chore: don't use labels for artifacts in github release
core: fix method inline
build: add gitlab-ci
fix: resource qualifiers (PR #487)
fix: hide first argument instead remove for constructor in inner class
test: warn about compiler not found, and gracefully report failure (PR #511)
core: don't add super call without args
fix issues reported by coverity and code style
gui: add type and access info to classes tree
core: fix type detection for method arguments
fix: change type update collection to produce deterministic results
core: improve processing of 'try/catch' and 'break' in loops
core: fix processing 'try/catch' in 'if' block
core: add method for copy instruction nodes
core: use NotNull and Nullable annotations
fix: use original call class for invoke inherited methods (#413)
core: fix enum fields name after obfuscation (fix #51)
fix(gui): override settings by cmd options
core: select correct array type element
code refactoring
Correct tab numbers. Some little things still missing.
core: use flag for mark 'this' register
build: check repo name and build type to skip deploy on PR and forks
fix: process try/catch without move-exception instruction (#395)
gui: update default settings
Added style decoding and a first decoding for data type 17.
core: add classpath for precise class types resolving
gui: add Hack font
core: use own immutable list
Generates and saves public.xml in apktool style
fix: additional checks for loop exit edges and 'for' conversion (#483)
gui: don't decode resources on file open
chore: don't create unneeded StringBuilder (PR #541)
fix: replace recursive analysis algorithms with iterations to avoid StackOverflow on big methods (#441)
manifest: restore application references and Android values (enums, flags)
core: allow to skip sub-blocks for region visitor.
gui: run text search in background thread (#269)
fix: don't replace resources names with field names (#465)
chore: update dependencies and gradle
core: expand arrays for vararg arguments
core: fix missing blocks in loop region
fix: ArrayIndexOutOfBoundsException in string concatenation visitor (#427)
core: print error on failed method decode
core: fix processing of debug info (if local variable used before declaring a debug info)
core: fix code style issues
Merge pull request #114 from allight/master
core: prevent endless region processing (#340)
feat: add options to configure "renaming" (#570) (PR #582)
Delete .DS_Store
tests: add base test class for simplified apk debugging
core: improve error reporting
fix: inline desugared lambda classes (#467)
update dependencies, add coveralls badge
tests: fix build on Windows
Merge branch 'master' into type-inference-wip
Fix issue where name generation on variables of deobfuscated objects were sometimes based off of the original class name, and not the alias.
fix: resolve lint errors in resource save methods
core: refactor info classes for store only one instance
core: filter out java core classes from printed stacktraces
core: fixed invoke arguments list (fix #61)
Replace jadx-core/lib/dx-1.10.jar with recent AOSP dx.jar
add Travis CI integration
fix: handle big .jar files (using multi-dex option) (#390) (PR #568)
core: fix class file loading (#249)
core: fix synchronized block processing (fix #46)
test: improve test checks
fix: ignore not generated insns in CodeShrinker visitor (PR #560)
gui: add font selection dialog
gui: fix build for java 10 and update dependencies (#291)
core: move same instructions from predecessors for loops
build: add sonarqube
fix: add correct type propagation for check-cast and move instructions (#401)
build: fix gitlab config
update gradle to 2.7
res: fix escape for apostrophes and quotes in string resources
fix(gui): unsynchronized search index creation results in NullPointerException upon performing search (#429)
gui: remove suffix tree search cache
style: resolve some sonar warnings
Adds checks for resources, and logs detected attacks
core: fix catch block argument if move-exception instruction is missing (#295)
update gradle wrapper and dependencies
fix(gui): fill background before draw line numbers (#404)
Update gradle build files
core tests: add option for compile test without debug info
fix: skip duplicated block in complex if (#441)
resources: skip padding zeroes for UTF-8 string pool
First near working example for first sample.
core: show warning when failed to detect out node in non trivial switch
Extended string concatenation code to handle arguments in 'new
core: fix 'break' insertion for switch/case blocks (fix #41)
core: sort error nodes in execution report
Removed BinaryXMLParser Call in main method.
removed unused private method getCodePanel(int)
fix: refactor, improve performance and fix some issues in resource processing
cli: update jcommander lib
core: fix switch over enum with several enums in class
Merge branch 'master' into type-inference-wip
resources: improve string pool decoding and errors reporting
fix: don't remove synthetic class with inner classes
core: don't insert break in method exit blocks (fix #60)
core: fix class imports
core: fix source line number parsing and saving
core: replace switch labels with matched static final fields, searching up to root ClassNode
core: move enum restore pass to later stage
fix: show type inference errors as method comments
fix: exports resources first (#376)
Encodes XML attrs
core: fix enum class processing for obfuscated code
core: don't inline variables defined in 'try' and used in 'catch'
Don't throw a DecodeException if dex files aren't found but --no-src is enabled
refactor: remove deprecated methods
Merge branch 'master' into type-inference-wip
gui: cache renderer results in find/usage dialogs
core: fix ArgType.equals
update gradle and dependencies
core: fix condition processing errors
core: support break with label for simple cases
core: refactor fill-array instruction processing and constants replace (fix #48)
core: fix indexed loop checks
build: disable travis build on oracle jdk 10
style: fix code formating
fix: change not allowed access modifiers for methods (#387) (PR #439)
core: fix various codegen errors
style: fix editorconfig to preserve formating in IntelliJ Idea
Update gradle
fix: saves all resources (#375)
A subtle bug repairing
Xml deobf 2.0
core: check arguments for field arithmetic operations (fix #40)
build: skip gradle assemble before build
core: use late deletion for NOP instruction (#215)
v0.6.1
fix: allow APK files without code (no contained dex files) (PR #455)
core: fix decompiled lines info
build: use commits count in gitlab ci version
core: skip synthetic arguments in anonymous class constructor
core: split const-string and const-class instructions
core: change jadx args api for easier processing and validation
Fixed issue where postProcess may overwrite Deobfuscated method names.
core: fix indent for 'break' in 'case' block, refactor tests
refactor: add static methods for create DotGraphVisitor
core: don't cache dex strings (old workaround for bug in dx)
core: simplify conditions, omit redundant parenthesis
fix: inline constants in chained move instructions (#399)
Fixes build issues
Adds more checks for file write ops
Enable file drop operation for loading it.
core: reformat code
core: fix duplicate regions creation (#314)
fix(gui): sort resources according to their type, then name (PR #479)
fix: remove invalid chars from class names (#453)
core: fix variable declaration used in several loops
style: remove unneeded casts (PR #481)
chore: better logging (#528)
core: fix synthetic constructor remove (#265)
fix: use types with generics for overloaded method casts (#402)
core: skip decoding for plain text xml (fix #82)
fix: skip trailing bytes in resource table decoding (#487)
core: use source file information for deobfuscation, fix code style issues
don't use concatenation in logger, fix other small code style issues
set default deobfuscation min length to 3 (#332)
core: move 'escape' method to string utils
fix: reimplement variable declaration visitor
fix: lower regions count limit (#354)
reformat code, resolve compiler warnings
Adds define of unknown NSes
core: fix parsing of generic signature with inner classes
fix some xml generate issues
core: fix BlockNode hashCode function
core: fix type inference and const inline for arrays
fix(gui): add synchronizations to search index creation  (#433)
fix(gui): show 'copy name' action only for supported nodes
core: add method for print line numbers
core: fix type inference StackOverflowError
core: fix anonymous class codegen
Merge pull request #171 from daramos/deobfuscation_work
core: ignore dex loading errors (#233)
core: fix 'break' detection in loops
core: check registers numbers, fix fallback mode
gui: add tabbed pane menu
core: fix errors in try/catch processing (issue #13)
core: fix method parameters annotation parsing (fix #57)
Removed some warnings about collections without type specifiers.
core: bind blocks for target instructions at early stage
core: replace assertions with jadx exceptions throw
fix(gui): make link for full class names (#378)
core: add serial uid to JadxRuntimeException
core: fix method deobfuscation (#241)
GUI: disable package if "excluded"
update gradle to 1.7
core: fix high memory usage while process conditions
fix: replace dot character with underscore in style resource name (PR #466)
Making the Classloader threadsafe
core: use resources ids in manifest decoding
core: refactor deobfuscator
test: add test case for #535 (PR #545)
core: move field initialization from constructors if possible (#71)
update gradle and dependencies
fix: close resource (PR #546)
fix: use '$' for inner classes also in methods and fields (#415)
Merge branch 'master''
core: reformat TryCatchBlock class
feat(gui): add a menu to copy class name (#351)
deobf: prevents overlaping of class names and packages (#335)
core: remove synthetic constructors
build: add java 11 to build on travis
core: fix replace target in if instruction (#317)
upgrade to gradle 1.8
build: remove gradle plugins, update gradle to 2.14.1 (#145)
core: fix type resolver in 'if'
core: replace resources ids with names from '.arsc' file
style: enforce strict style rules with editorconfig (PR #510)
core: fix logs and code style
Added option flag to make androidmanifest.xml decompiling optional.
update all dependencies (#229)
fix: don't rename R class in deobfuscation (#572) (PR #573)
refactor some classes
refactor: don't use additional class for jadx warnings
cli: move specific code from common jadx args
core: don't remove empty catch blocks
gui: add common popup actions for text fields.
core: fix constructor call for moved arg (fix #20)
fix minor issues
fix: support multi-exception catch blocks (#421)
feat(gui): support project (#526) (PR #543)
Add IntelliJ Idea files to git ignore
travis: add jdk8 to build matrix
core: fix missing imports for anonymous classes
fix(gui): add synchronization to SimpleIndex class (#435)
core: fix enum processing order, remove synchronization (#257)
core: fix incorrectly removed 'return' in 'switch' block (fix #70)
core: process complex condition in loop header
core: export as android gradle project
refactor: move filesystem case sensitivity value to JadxArgs
delete comments
core: add method info cache
core: prevent ClassCastException in StringBuilder chain converter
fix(gui): update chinese simplified language (PR #508)
core: support 'not-int' and 'not-long' instructions
fix: redundant byte and short cast (#538) (PR #539)
core: reformat code and fix small issues in BinaryXMLParser
fix(gui): use correct font and style for certificate panel
core: fix variables inline in 'catch' block
core: fix synchronized block processing
core: fix 'if' processing in 'do/while' loop
test: migrate all assertions to JUnit5 (PR #496)
gui: add definitions search window
fix: forbid to change types for methods arguments
core: refactor DotGraphVisitor
fix: handle boolean condition with bitwise OR and AND (#202) (PR #522)
core: improve immutable list implementation
core: rollback finally block extraction if some blocks not removed (#327)
Fixed XML oneLiners. Added another attribute value data type
core: fix issues in variable names and try/catch blocks
fix: allow override type with wider one only from debug info (#403)
fix(gui): add missing translations keys, and ensure all files match (PR #525)
fix: field increment (PR #550)
core: simplify conditions
update gradle and dependencies versions
fix: resolve some sonar warnings
fix(gui): add "use imports" option to preferences
gui: add find usage feature, run decompilation and index jobs in background (#74, #75)
core: refactor file loading, add 'aar' support (fix #95)
style(gui): reformat code and fix some warnings
fix(gui): use system font as default instead bundled Hack (#442, #445)
build: check env variables for deploy stages (i.e skip deploy in forks)
Delete some changes
core: fix incorrect float values processing
gui: add full text search (#74)
Fixed issue where deobfuscated classes,methods,and fields were not being commented with their original name.
build: compile for Java 8; enable G1GC on Java 8 (PR #436)
core refactor: don't use static field in ArgType class
pagination for search results.
core: insert 'continue' instruction
Write xml to a given output file instead of stdout.
core: fix constructor instruction replacement
gui: fix some sonar warnings
Extended convertInvoke to handle calls to StringBuilder constructor with
core: skip finally extract visitor on error
core: fix android specific class handler
Removed call in main method.
Changes MAX_SIZE_DIFF in ZipSecurity, and adds extra logging
core: update dx to version 14, allow to decompile java 8 classes (new instructions not implemented yet)
gui: add fields and methods to tree
Added support for files ending in .zip.
core: fixed types for arguments from overloaded methods
core tests: replace several classes in dynamic class loader, add additional checks
build: remove sonar plugin from gradle config (fix #140)
core: fix NPE in signature parser (#313)
build: add 'dist' task
test: always use runtime compiler for build dex (#536)
remove .DS_Store file
core: fix indent for anonymous class
Merge branch 'master' into type-inference-wip
fix: redone finally extract
core: omit 'this' for methods and fields
refactor: make ErrorsCounter non static
Merge pull request #119 from ITMonkeys/master
test: rewrite Spock tests to JUnit 5
core: fix variable definitions for 'try' blocks
core: check for duplicated code generation
Upgrade Chinese translation
core: fix variable names propagation (#219)
fix: check block before insert additional move instruction for type inference
core: sort classes in package and methods
Issue #204
core: update android files to 5.1 (fix #58)
test: add NotYetImplemented feature (PR #495)
core: don't add redundant brackets
core: always inline 'this' (issue #10)
Add jadx-gui, restructure src directory
multidex support for apk & zip
refactor: move code shrink visitor to separate package and extract inner classes
Add source files and samples
fix: check if synthetic class not yet processed but must be removed (#450)
core: fix comodification exception
core: fix string concatenation
core: fix type for one time used args
feat: add a flag to disable debug info (#276) (PR #502)
feat(gui): APK signature check v1/v2 using the apksig library from Google (#431)
core: fix processing of debug info (markup of local variables)
core: fix loop handling
core: fix processing try/catch in loop
core: guess variable name from assign instruction
Make optional using source file name as alias for class name (some obfuscator
fix(gui): show current font in preferences
core: remove 'static' modifier for inner interfaces
fix: hide debug type inference logs
core: fix some 'try/catch/finally' cases
core tests: organize directories
reformat code and fix sonar warnings
Prevents command injections when opening links
fix: rename class with reserved java keywords (#485) (PR #488)
core: fix type in fill-array instruction
travis: use container based build
core: fix missing parenthesis in conditions
core: convert arithmetic operations on field to arith instruction
core: don't remove synthetic methods with some logic beside casts (#336)
Adds more escape for unreadable characters so parser won't throw exceptions during parse
Merge branch 'master' into type-inference-wip
core: refactor 'catch' clause variable processing
core: fix encoded value parser for signed and floating point numbers
core: test enum implementing interface
core: fix binary xml parser (#211)
fix: force rename by checks from RenameVisitor (#432)
core: update dx to 1.13 for support java 8, build for jdk 8
core: add return type to method short id
fix: improve bridge methods renaming (#397)
Fix deobfuscation issue
fix: don't remove empty default constructor if other constructors exists (#460)
fix: add missing import for class generics map (PR #480)
core: fix enum reconstruction (#272)
Removed debug output.
Prevents path traversal attacks thru rc names
core: fix duplicated imports
core: print original value near replaced with field value in switch
feat: make the import class name clickable (#378)
Added first implementation of the AndroidManifest XML Parser
feat: new implementation for type inference approach and variable declaration
core: don't process debug info if offset is incorrect (#259)
fix: use '$' as separator for inner classes in .jobf file (#415)
Added xml header
core: first implementation of '.arsc' parser
Merge branch 'master' into type-inference-wip
core: add ternary conditions processing
Fix issue with inner classes and empty package name.
core: limit region traversal iterations count
reformat code (force braces)
Merge pull request #34 from YASME-Tim/zip-file
core: redone return blocks splitting for fix issue #4
core: use SSA representation for instruction arguments
core: fix class cast exception
core: fix imports for inner classes
core: skip annotations parsing if error occurs (#57)
Update JadxArgs.java
support for Android InstantRun Apk
fix code style issues reported by sonar
test: add MissingGenericsTypesTest (PR #498)
core: fix types for constant replace
gui: add new version notification
fix: variable usage with enhanced for loop (#535) (PR #547)
gui: support images view/unpack
core: show missing class references only once
gui: open file selection dialog on start
fix: search exception handler splitter block by offset if jump source unknown (#406)
Merge pull request #194 from wuyongzheng/master
core: fix register arg hashCode method (#321, #328)
core: fix return block split after try/catch (#295)
chore: show try/catch processing problems in code comments
gui: fix sync with editor
core: omit redundant brackets in case blocks
test: add tests for #474
fix: xor with boolean (#409) (PR #516)
core: fix indent for anonymous classes
fix: conditions in ternary if (#449) (PR #558)
core: fix complex 'if' processing (issues #9 and #12)
gui: remove not generated elements from class node tree
use spock framework for unit tests
core: don't hardcode attributes count
fix: better String constructor from byte and char arrays (#530) (PR #533)
core: fix processing 'if' at loop end
fix: remove redundant array type when initialized with declaration (PR #566)
core: fixed 'this' attribute propagation for move insn (#345)
gui: add hyperlinks for jump to definitions
core: make strict shrink code implementation
chore: use functional interface instead of ISettingsUpdater (PR #548)
gui: show the certificate if the certificate file name is not standard (#315)
core: allow method name be same as class name (issue #15)
fix: use '$' as separator for inner classes in .jobf file (#415)
core: ignore debug info with bad variable names
core: make methods arguments types immutable
core: fix incorrect argument removing in anonymous constructor, inline synthetic field increment method
fix(gui): exclusion disablement should be exact package match (PR #500)
core: improve 'break' and 'continue' insertion
resources: initial version of .arsc file decode
core: rename classes in default package
fix some sonar warnings
case insensitive option for searches
core: fix processing conditions in loop
fix thread-safe bug
core: make better variables naming
core: fix processing 'if' at loop end
core: fix switch in loop (fix #52)
core: use dynamic check for filesystem case-sensitivity (#158)
fix: various UI improvements (#419)
gui: add key shortcuts for menu actions.
fix: change resource fields generations in R class (#308)
core: fix inherited methods renaming
test: add test methods for load and check classes from smali files
core: fix annotations processing for method arguments
core: fix class renaming by source file info
fix(gui): remove output directories from persistent settings (#447)
feat(gui): add icons to jadx-gui (#420) (PR #428)
core: decompile '.class' files
res: skip padding on file end (#225)
core: fix sythetic constructor replacement (#334)
gui: set bigger window size at start
gui: add action for save all decompiled source
core: fix processing try/catch in other catch
core: move debug code to separate class
Prevents generation of NSes second time in wrong place
Replace the java 1.8 only dx.jar with one supporting java 1.7
core: prevent some null crash on resource decoding
core: suppress type error exception
update gradle to 1.11
Update ZipSecurity.java
fix: show method alias in "method not decompiled" messages (#410)
fix save AndroidManifest.xml when jadx-gui used
Performance issue when building strings 
Merge pull request #3 from 13-beta2/master
ensure a zip file by file content.
feat: add generic method information to .jcst (PR #564)
core: exclude inner classes from dependencies (#318)
core: fix strings pool parsing in '.arsc' file
core: fix type check for loop over iterable.
Merge pull request #343 from Donlon/master
fix(gui): limit the spare memory to max. 512MiB (#434)
