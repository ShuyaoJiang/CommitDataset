[+++ b/src/main/java/org/jfree/data/time/Second.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Second(Date, TimeZone, Locale)]
[+++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/text/TextBlock.java, + * @see TextUtils#createTextBlock(String, Font, Paint), +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/text/TextBlock.java, + * @see TextUtils#createTextBlock(String, Font, Paint), +++ b/src/main/java/org/jfree/chart/text/TextUtils.java, +, +    /**, +     * Returns the bounds of an aligned string., +     * , +     * @param text  the string ({@code null} not permitted)., +     * @param g2  the graphics target ({@code null} not permitted)., +     * @param x  the x-coordinate., +     * @param y  the y-coordinate., +     * @param anchor  the anchor point that will be aligned to , +     *     {@code (x, y)} ({@code null} not permitted)., +     * , +     * @return The text bounds (never {@code null})., +     * , +     * @since 1.3, +     */, +    public static Rectangle2D calcAlignedStringBounds(String text,, +            Graphics2D g2, float x, float y, TextAnchor anchor) {, +, +        Rectangle2D textBounds = new Rectangle2D.Double();, +        float[] adjust = deriveTextBoundsAnchorOffsets(g2, text, anchor,, +                textBounds);, +        // adjust text bounds to match string position, +        textBounds.setRect(x + adjust[0], y + adjust[1] + adjust[2],, +            textBounds.getWidth(), textBounds.getHeight());, +        return textBounds;, +    }, +    , +        Rectangle2D bounds = getTextBounds(text, g2, fm);, +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/text/TextBlock.java, + * @see TextUtils#createTextBlock(String, Font, Paint), +++ b/src/main/java/org/jfree/chart/text/TextUtils.java, +, +    /**, +     * Returns the bounds of an aligned string., +     * , +     * @param text  the string ({@code null} not permitted)., +     * @param g2  the graphics target ({@code null} not permitted)., +     * @param x  the x-coordinate., +     * @param y  the y-coordinate., +     * @param anchor  the anchor point that will be aligned to , +     *     {@code (x, y)} ({@code null} not permitted)., +     * , +     * @return The text bounds (never {@code null})., +     * , +     * @since 1.3, +     */, +    public static Rectangle2D calcAlignedStringBounds(String text,, +            Graphics2D g2, float x, float y, TextAnchor anchor) {, +, +        Rectangle2D textBounds = new Rectangle2D.Double();, +        float[] adjust = deriveTextBoundsAnchorOffsets(g2, text, anchor,, +                textBounds);, +        // adjust text bounds to match string position, +        textBounds.setRect(x + adjust[0], y + adjust[1] + adjust[2],, +            textBounds.getWidth(), textBounds.getHeight());, +        return textBounds;, +    }, +    , +        Rectangle2D bounds = getTextBounds(text, g2, fm);, +++ /dev/null]
[+++ b/pom.xml, +    <version>1.0.15-SNAPSHOT</version>]
[+++ b/src/main/java/org/jfree/chart/ChartFactory.java, +    , +    /**, +     * Creates a histogram chart.  This chart is constructed with an, +     * {@link XYPlot} using an {@link XYBarRenderer}.  The domain and range, +     * axes are {@link NumberAxis} instances., +     *, +     * @param title  the chart title ({@code null} permitted)., +     * @param xAxisLabel  the x axis label ({@code null} permitted)., +     * @param yAxisLabel  the y axis label ({@code null} permitted)., +     * @param dataset  the dataset ({@code null} permitted)., +     * @return A chart., +     * , +     * @since 1.0.20, +     */, +    public static JFreeChart createHistogram(String title,, +            String xAxisLabel, String yAxisLabel, IntervalXYDataset dataset) {, +        return createHistogram(title, xAxisLabel, yAxisLabel, dataset,, +                PlotOrientation.VERTICAL, true, true, false);, +    }]
[+++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, +    private Map<Comparable, Double> explodePercentages;, +                ep = getExplodePercent(dataset.getKey(section)) / mep;, +                = new TreeMap<Comparable, Double>(this.explodePercentages);]
[+++ /dev/null, +++ /dev/null, +++ b/lib/jcommon-1.0.16.jar]
[+++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +import java.util.Locale;, +            TimeZone zone, Locale locale) {, +                    new Class[] {Date.class, TimeZone.class, Locale.class});, +                    new Object[] {millisecond, zone, locale});, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +import java.util.Locale;, +            TimeZone zone, Locale locale) {, +                    new Class[] {Date.class, TimeZone.class, Locale.class});, +                    new Object[] {millisecond, zone, locale});, +++ b/src/main/java/org/jfree/data/time/TimeSeries.java, +                    TimeZone.class, Locale.class});, +                            new Date(latest), TimeZone.getDefault(), Locale.getDefault()});]
[+++ b/ant/build-fx.xml, +<!-- An ANT build file for JFreeChart including JavaFX support -->, +        <property name="jfreechart.version" value="1.0.18-fx" />, +        <copy file="${basedir}/ant/build-fx.xml" tofile="${basedir}/distribution/ant/build-fx.xml" />, +++ b/ant/build-fx.xml, +<!-- An ANT build file for JFreeChart including JavaFX support -->, +        <property name="jfreechart.version" value="1.0.18-fx" />, +        <copy file="${basedir}/ant/build-fx.xml" tofile="${basedir}/distribution/ant/build-fx.xml" />, +++ b/ant/build.xml, +        <copy file="${basedir}/ant/build-fx.xml" tofile="${basedir}/distribution/ant/build-fx.xml" />]
[+++ b/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(1.1f));, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(1.1f));, +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f));, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f));, +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +                2.0f, Color.WHITE, 3.0f, 4.0f, Color.YELLOW),, +                2.0f, Color.WHITE, 3.0f, 4.0f, Color.YELLOW),, +++ b/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(1.1f));, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(1.1f));, +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f));, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f));, +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,, +                2.0f, Color.WHITE, 3.0f, 4.0f, Color.YELLOW),, +                2.0f, Color.WHITE, 3.0f, 4.0f, Color.YELLOW),, +++ b/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        plot1.setDomainGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.YELLOW));, +        plot2.setDomainGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.YELLOW));, +        plot1.setRangeGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.GREEN,, +                3.0f, 4.0f, Color.YELLOW));, +        plot2.setRangeGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.GREEN,, +                3.0f, 4.0f, Color.YELLOW));, +        plot1.setRangeCrosshairPaint(new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW));, +        plot2.setRangeCrosshairPaint(new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW));, +        plot1.setDomainCrosshairPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        plot2.setDomainCrosshairPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +                Color.RED, 3.0f, 4.0f, Color.BLUE));, +        plot2.setRangeMinorGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +                Color.RED, 3.0f, 4.0f, Color.BLUE));, +        plot2.setRangeZeroBaselinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        plot1.setShadowGenerator(new DefaultShadowGenerator(5, Color.GRAY,, +        plot2.setShadowGenerator(new DefaultShadowGenerator(5, Color.GRAY,, +        p1.setRangeCrosshairPaint(new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.YELLOW));, +        p1.setRangeMinorGridlinePaint(new GradientPaint(2.0f, 3.0f, Color.WHITE,, +                4.0f, 5.0f, Color.RED));, +        p1.setRangeZeroBaselinePaint(new GradientPaint(3.0f, 4.0f, Color.RED,, +                5.0f, 6.0f, Color.WHITE));, +                Color.RED, new BasicStroke(1.0f)));, +                Color.RED, new BasicStroke(1.0f)));, +                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true, Color.RED,, +                true, Color.YELLOW, new BasicStroke(1.0f), true,, +                Color.GREEN));, +                Color.RED, true, Color.YELLOW, new BasicStroke(1.0f), true,, +                Color.GREEN));, +        renderer.setSeriesPaint(0, Color.BLACK);]
[+++ b/src/main/java/org/jfree/chart/plot/CrosshairState.java, +     * Updates the crosshair point., +     * @param x  the x-value., +     * @param y  the y-value., +     * @param datasetIndex  the dataset index., +     * @param transX  the x-value in Java2D space., +     * @param transY  the y-value in Java2D space., +     * @param orientation  the plot orientation ({@code null} not permitted)., +     * Checks to see if the specified data point is the closest to the, +     * anchor point and, if yes, updates the current state., +     * @param x  the x-value., +     * @param transX  the x-value in Java2D space., +     * @param datasetIndex  the dataset index., +     * @param transY  the y-value in Java2D space., +     * @param datasetIndex  the index of the range axis for this y-value.]
[+++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, + * Contributor(s):   John Matthews;]
[+++ b/src/main/java/org/jfree/chart/plot/Crosshair.java, + * (C) Copyright 2009-2017, by Object Refinery Limited., +       this(value, Color.BLACK, new BasicStroke(1.0f));, +        this.labelPaint = Color.BLACK;, +        this.labelOutlinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/Crosshair.java, + * (C) Copyright 2009-2017, by Object Refinery Limited., +       this(value, Color.BLACK, new BasicStroke(1.0f));, +        this.labelPaint = Color.BLACK;, +        this.labelOutlinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/Marker.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited., +        this(Color.GRAY);, +        this(paint, new BasicStroke(0.5f), Color.GRAY, new BasicStroke(0.5f),, +        this.labelPaint = Color.BLACK;]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +, +            axis.pan(axis.isInverted() ? -percent : percent);, +, +            axis.pan(axis.isInverted() ? -percent : percent);]
[+++ b/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java, +        boolean invalidRowKey = false;, +        try {, +            d1.getValue("Bad Value", "Task 1"); // Should be "Series", not "Bad Value", +        } catch (UnknownKeyException e) {, +            if (e.getMessage().contains("rowKey")) {, +                invalidRowKey = true;, +        }, +        assertTrue(invalidRowKey);, +        boolean invalidColumnKey = false;, +        try {, +            d1.getValue("Series", "Task 4"); // only three tasks!, +        } catch (UnknownKeyException e) {, +            if (e.getMessage().contains("columnKey")) {, +                invalidColumnKey = true;, +            }, +        }, +        assertTrue(invalidColumnKey);, +    }]
[+++ b/src/main/java/org/jfree/chart/text/TextBox.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public TextBox(String text) {, +            this.textBlock.addLine(text, new Font("SansSerif", Font.PLAIN, 10),, +                    Color.BLACK);, +    public TextBox(TextBlock block) {, +        this.outlinePaint = Color.BLACK;, +        this.shadowPaint = Color.GRAY;, +    public void setOutlinePaint(Paint paint) {, +    public void setOutlineStroke(Stroke stroke) {, +    public void setInteriorGap(RectangleInsets gap) {, +    public void setBackgroundPaint(Paint paint) {, +    public void setShadowPaint(Paint paint) {, +    public void setShadowXOffset(double offset) {, +    public void setShadowYOffset(double offset) {, +    public void setTextBlock(TextBlock block) {, +    public void draw(Graphics2D g2, float x, float y, RectangleAnchor anchor) {, +    public double getHeight(Graphics2D g2) {, +     * @param obj  the object to test against ({@code null} permitted)., +    public boolean equals(Object obj) {, +    private void writeObject(ObjectOutputStream stream) throws IOException {, +    private void readObject(ObjectInputStream stream) throws IOException, , +            ClassNotFoundException {]
[+++ b/src/main/java/org/jfree/chart/ChartPanel.java, +            ChartUtils.saveChartAsPNG(new File(filename), this.chart,, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +            ChartUtils.saveChartAsPNG(new File(filename), this.chart,, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +            ChartUtils.saveChartAsPNG(new File(filename), this.chart,, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/ChartUtils.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ---------------, + * ChartUtils.java, + * ---------------, + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   Wolfgang Irler;, + *                   Richard Atkinson;, + *                   Xavier Poinsard;, + *, + * Changes, + * -------, + * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's, + *               JFreeChartServletDemo class (DG);, + * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to, + *               caller (DG);, + * 26-Jun-2002 : Added image map methods (DG);, + * 05-Aug-2002 : Added writeBufferedImage methods, + *               Modified writeImageMap method to support flexible image, + *               maps (RA);, + * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info, + *               objects (RA);, + * 05-Sep-2002 : Added writeImageMap() method to support OverLIB, + *               - http://www.bosrup.com/web/overlib (RA);, + * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG);, + * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as, + *               parameters (DG);, + * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG);, + * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard, + *               (see Feature Request 688079) (DG);, + * 12-Aug-2003 : Added support for custom image maps using, + *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA);, + * 02-Sep-2003 : Separated PNG encoding from writing chart to an, + *               OutputStream (RA);, + * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG);, + * 20-Feb-2004 : Edited Javadocs and added argument checking (DG);, + * 05-Apr-2004 : Fixed problem with buffered image type (DG);, + * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA);, + * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA);, + * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method, + *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which, + *               exists in ImageMapUtilities (DG);, + * ------------- JFREECHART 1.0.x ---------------------------------------------, + * 06-Feb-2006 : API doc update (DG);, + * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX(), + *               methods (DG);, + * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when, + *               saving to JPEG format (DG);, + * 02-Jul-2013 : Use ParamChecks class (DG);, + *, + */, +, +package org.jfree.chart;, +, +import java.awt.Graphics2D;, +import java.awt.geom.AffineTransform;, +import java.awt.geom.Rectangle2D;, +import java.awt.image.BufferedImage;, +import java.io.BufferedOutputStream;, +import java.io.File;, +import java.io.FileOutputStream;, +import java.io.IOException;, +import java.io.OutputStream;, +import java.io.PrintWriter;, +]
[+++ b/src/main/java/org/jfree/chart/util/PublicCloneable.java, + * (C) Copyright 2000-2019, by Object Refinery Limited and Contributors., + * An interface that exposes the clone() method.  In order to support the , + * cloning of {@link JFreeChart} instances, it is advisable to implement this, + * interface for custom plots, renderers and other chart components.  If, + * this interface is not implemented, cloning will still be attempted via , + * reflection.]
[+++ b/src/main/java/org/jfree/chart/renderer/category/CategoryItemRenderer.java, +     * @param dataArea  the area for plotting data., +     * @param dataArea  the area for plotting data., +     * @param dataArea  the area for plotting data., +     * @param dataArea  the area for plotting data.]
[+++ b/src/main/java/org/jfree/chart/ui/UIUtils.java, +    public static void centerFrameOnScreen(Window frame) {, +    public static void positionFrameOnScreen(Window frame, , +            double horizontalPercent, double verticalPercent) {, +        Rectangle s = frame.getGraphicsConfiguration().getBounds();, +        Dimension f = frame.getSize();, +        int w = Math.max(s.width - f.width, 0);, +        int h = Math.max(s.height - f.height, 0);, +        int x = (int) (horizontalPercent * w) + s.x;, +        int y = (int) (verticalPercent * h) + s.y;, +    public static void positionFrameRandomly(Window frame) {, +    public static void centerDialogInParent(Dialog dialog) {, +    public static void positionDialogRelativeToParent(Dialog dialog,, +            double horizontalPercent, double verticalPercent) {, +        Container parent = dialog.getParent();, +        if (parent == null) {, +        Dimension d = dialog.getSize();, +        Dimension p = parent.getSize();, +        int baseX = parent.getX();, +        int baseY = parent.getY();, +        int x = baseX + (int) (horizontalPercent * p.width);, +        int y = baseY + (int) (verticalPercent * p.height);, +        Rectangle s = parent.getGraphicsConfiguration().getBounds();, +        Rectangle r = new Rectangle(x, y, d.width, d.height);, +    public static JPanel createTablePanel(TableModel model) {, +        JPanel panel = new JPanel(new BorderLayout());, +        JTable table = new JTable(model);, +            TableColumn column = table.getColumnModel().getColumn(columnIndex);, +            Class c = model.getColumnClass(columnIndex);, +    public static JLabel createJLabel(String text, Font font) {, +        JLabel result = new JLabel(text);, +    public static JLabel createJLabel(String text, Font font, Color color) {, +        JLabel result = new JLabel(text);, +    public static JButton createJButton(String label, Font font) {, +        JButton result = new JButton(label);]
[+++ b/ChangeLog, +2011-10-10  Martin Hoeller  <martin.hoeller@xss.co.at>, +, +    Bug 3353913:, +    * org/jfree/chart/plot/CompassPlot.java: localization fix, +    * org/jfree/chart/plot/PiePlot3D.java: localization fix, +    * org/jfree/chart/plot/LocalizationBundle_de.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_ru.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_nl.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_pl.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_zh_CN.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_es.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_pt_PT.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_fr.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle.properties: addition, +    * org/jfree/chart/ChartPanel.java: localization fix, +    * org/jfree/chart/LocalizationBundle_de.properties: addition, +    * org/jfree/chart/LocalizationBundle_zh_TW.properties: addition, +    * org/jfree/chart/LocalizationBundle_zh_CN.properties: addition, +    * org/jfree/chart/LocalizationBundle_pt_BR.properties: addition, +    * org/jfree/chart/LocalizationBundle_es.properties: addition, +    * org/jfree/chart/LocalizationBundle_ru.properties: addition, +    * org/jfree/chart/LocalizationBundle_pt_PT.properties: addition, +    * org/jfree/chart/LocalizationBundle_fr.properties: addition, +    * org/jfree/chart/LocalizationBundle_nl.properties: addition, +    * org/jfree/chart/LocalizationBundle_pl.properties: addition, +    * org/jfree/chart/LocalizationBundle_it.properties: addition, +    * org/jfree/chart/LocalizationBundle.properties: addition, +, +++ b/ChangeLog, +2011-10-10  Martin Hoeller  <martin.hoeller@xss.co.at>, +, +    Bug 3353913:, +    * org/jfree/chart/plot/CompassPlot.java: localization fix, +    * org/jfree/chart/plot/PiePlot3D.java: localization fix, +    * org/jfree/chart/plot/LocalizationBundle_de.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_ru.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_nl.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_pl.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_zh_CN.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_es.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_pt_PT.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_fr.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle.properties: addition, +    * org/jfree/chart/ChartPanel.java: localization fix, +    * org/jfree/chart/LocalizationBundle_de.properties: addition, +    * org/jfree/chart/LocalizationBundle_zh_TW.properties: addition, +    * org/jfree/chart/LocalizationBundle_zh_CN.properties: addition, +    * org/jfree/chart/LocalizationBundle_pt_BR.properties: addition, +    * org/jfree/chart/LocalizationBundle_es.properties: addition, +    * org/jfree/chart/LocalizationBundle_ru.properties: addition, +    * org/jfree/chart/LocalizationBundle_pt_PT.properties: addition, +    * org/jfree/chart/LocalizationBundle_fr.properties: addition, +    * org/jfree/chart/LocalizationBundle_nl.properties: addition, +    * org/jfree/chart/LocalizationBundle_pl.properties: addition, +    * org/jfree/chart/LocalizationBundle_it.properties: addition, +    * org/jfree/chart/LocalizationBundle.properties: addition, +, +++ b/source/org/jfree/chart/ChartPanel.java, + *                   Martin Hoeller;, + * 10-Oct-2011 : localization fix: bug #3353913 (MH);, +        JPopupMenu result = new JPopupMenu(localizationResources.getString("Chart") + ":");, +++ b/ChangeLog, +2011-10-10  Martin Hoeller  <martin.hoeller@xss.co.at>, +, +    Bug 3353913:, +    * org/jfree/chart/plot/CompassPlot.java: localization fix, +    * org/jfree/chart/plot/PiePlot3D.java: localization fix, +    * org/jfree/chart/plot/LocalizationBundle_de.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_ru.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_nl.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_pl.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_zh_CN.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_es.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_pt_PT.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle_fr.properties: addition, +    * org/jfree/chart/plot/LocalizationBundle.properties: addition, +    * org/jfree/chart/ChartPanel.java: localization fix, +    * org/jfree/chart/LocalizationBundle_de.properties: addition, +    * org/jfree/chart/LocalizationBundle_zh_TW.properties: addition, +    * org/jfree/chart/LocalizationBundle_zh_CN.properties: addition, +    * org/jfree/chart/LocalizationBundle_pt_BR.properties: addition, +    * org/jfree/chart/LocalizationBundle_es.properties: addition, +    * org/jfree/chart/LocalizationBundle_ru.properties: addition, +    * org/jfree/chart/LocalizationBundle_pt_PT.properties: addition, +    * org/jfree/chart/LocalizationBundle_fr.properties: addition, +    * org/jfree/chart/LocalizationBundle_nl.properties: addition, +    * org/jfree/chart/LocalizationBundle_pl.properties: addition, +    * org/jfree/chart/LocalizationBundle_it.properties: addition, +    * org/jfree/chart/LocalizationBundle.properties: addition, +, +++ b/source/org/jfree/chart/ChartPanel.java, + *                   Martin Hoeller;, + * 10-Oct-2011 : localization fix: bug #3353913 (MH);, +        JPopupMenu result = new JPopupMenu(localizationResources.getString("Chart") + ":");, +++ b/source/org/jfree/chart/LocalizationBundle.properties, +Chart=Chart, +++ b/ChangeLog, +2011-10-10  Martin Hoeller  <martin.hoeller@xss.co.at>, +]
[+++ b/README.txt, +30 October 2011, +(jfreechart-1.0.14-install.pdf) from the JFreeChart home, +from the source code.  You can do this using the 'javadoc' utility directly, , +or with the Ant script (build.xml) included in the distribution., +the Java 2 plug-in installed.  Most other browsers (e.g. Firefox, Safari and, +Chrome) offer good support for modern JREs., +    http://www.jfree.org/forum/viewforum.php?f=3, +    java -jar jfreechart-1.0.14-demo.jar, +1.0.14 : (30-Oct-2011), +        - added support for multiple axes in PolarPlot, performance , +          improvements in the TimeSeriesCollection class, mouse wheel rotation, +          in the PiePlot class, improved Maven support, a range of other, +          minor functional enhancements and numerous bug fixes - see the NEWS , +          and ChangeLog files for details., +]
[+++ b/src/main/java/org/jfree/chart/ui/GradientPaintTransformer.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, + * The interface for a class that can transform a {@code GradientPaint} to, +     * Transforms a {@code GradientPaint} instance to fit some target , +     * instance of {@code GradientPaint}., +     * @param paint  the original paint (not {@code null})., +     * @param target  the reference area (not {@code null}).]
[+++ b/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java, +     * Creates a new instance of {@code ArcDialFrame} that spans, +     * Creates a new instance of {@code ArcDialFrame} that spans, +++ b/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java, +     * Creates a new instance of {@code ArcDialFrame} that spans, +     * Creates a new instance of {@code ArcDialFrame} that spans, +++ b/src/main/java/org/jfree/data/time/Hour.java, +     * @throws NullPointerException if {@code calendar} is, +     * @throws NullPointerException if {@code calendar} is, +     * {@code http://developer.java.sun.com/developer/Books/effectivejava, +     * /Chapter3.pdf}, +++ b/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java, +     * Creates a new instance of {@code ArcDialFrame} that spans, +     * Creates a new instance of {@code ArcDialFrame} that spans, +++ b/src/main/java/org/jfree/data/time/Hour.java, +     * @throws NullPointerException if {@code calendar} is, +     * @throws NullPointerException if {@code calendar} is, +     * {@code http://developer.java.sun.com/developer/Books/effectivejava, +     * /Chapter3.pdf}, +++ b/src/main/java/org/jfree/data/time/Quarter.java, +     * @throws NullPointerException if {@code calendar} is, +     * @throws NullPointerException if {@code calendar} is, +++ b/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java, +     * Creates a new instance of {@code ArcDialFrame} that spans, +     * Creates a new instance of {@code ArcDialFrame} that spans, +++ b/src/main/java/org/jfree/data/time/Hour.java, +     * @throws NullPointerException if {@code calendar} is, +     * @throws NullPointerException if {@code calendar} is, +     * {@code http://developer.java.sun.com/developer/Books/effectivejava, +     * /Chapter3.pdf}, +++ b/src/main/java/org/jfree/data/time/Quarter.java, +     * @throws NullPointerException if {@code calendar} is, +     * @throws NullPointerException if {@code calendar} is, +++ b/src/main/java/org/jfree/data/time/TimeSeriesTableModel.java, + * a {@code JTable}., +++ b/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java, +     * Creates a new instance of {@code ArcDialFrame} that spans, +     * Creates a new instance of {@code ArcDialFrame} that spans, +++ b/src/main/java/org/jfree/data/time/Hour.java, +     * @throws NullPointerException if {@code calendar} is, +     * @throws NullPointerException if {@code calendar} is, +     * {@code http://developer.java.sun.com/developer/Books/effectivejava, +     * /Chapter3.pdf}, +++ b/src/main/java/org/jfree/data/time/Quarter.java, +     * @throws NullPointerException if {@code calendar} is, +     * @throws NullPointerException if {@code calendar} is, +++ b/src/main/java/org/jfree/data/time/TimeSeriesTableModel.java, + * a {@code JTable}., +++ b/src/main/java/org/jfree/data/xy/DefaultXYDataset.java, +     * this method returns {@code DomainOrder.NONE}., +     * @return {@code DomainOrder.NONE}.]
[+++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.12" />]
[+++ b/src/main/java/org/jfree/chart/text/TextUtils.java, +     * text into lines so that the {@code maxWidth} value is, +     * character is wider than {@code width]} this method will return, +     * {@code start} - the caller should check for this case., +     * @param text  the text ({@code null} not permitted)., +     * @param text  the text ({@code null} permitted)., +     * @param g2  the graphics context (not {@code null})., +     * @param fm  the font metrics (not {@code null})., +     * @return The text bounds ({@code null} if the {@code text}, +     *         argument is {@code null})., +     * @param g2  the graphics device (not {@code null})., +     * @param textBounds  the text bounds (if not {@code null}, this, +     * @param text  the text ({@code null} permitted)., +     * @return The bounds (possibly {@code null})., +     * @param g2  the graphics device (not {@code null})., +     * ({@code BASELINE_LEFT})., +     * @param text  the text ({@code null} permitted)., +     * @return The bounds ({@code null} if {@code text} is, +     *         {@code null} or has zero length)., +     * (id 4312117) and the workaround involves using a {@code TextLayout}, +     * {@code drawString()} method in the {@code Graphics2D} class., +     * The default value is {@code false}.]
[+++ b/NEWS, +13 November 2007, +++ b/NEWS, +13 November 2007, +++ b/README.txt, +13 November 2007, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.12) , +1.0.7 : (12-Nov-2007)]
[+++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +    @Test, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +    @Test, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +    @Test, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/util/LogFormatTest.java, +    @Test, +    @Test, +    @Test, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +    @Test, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/util/LogFormatTest.java]
[+++ b/ant/build.xml]
[+++ b/src/main/java/org/jfree/chart/axis/Timeline.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/axis/Timeline.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/labels/CategoryItemLabelGenerator.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * also implement the {@link org.jfree.chart.util.PublicCloneable} interface., +++ b/src/main/java/org/jfree/chart/axis/Timeline.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/labels/CategoryItemLabelGenerator.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * also implement the {@link org.jfree.chart.util.PublicCloneable} interface., +++ b/src/main/java/org/jfree/chart/plot/Plot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * are defined by the {@link org.jfree.chart.ui.Align} class., +++ b/src/main/java/org/jfree/chart/axis/Timeline.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/labels/CategoryItemLabelGenerator.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * also implement the {@link org.jfree.chart.util.PublicCloneable} interface., +++ b/src/main/java/org/jfree/chart/plot/Plot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * are defined by the {@link org.jfree.chart.ui.Align} class., +++ b/src/main/java/org/jfree/data/time/Year.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Year(Date, TimeZone, Locale)]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.5.0" />, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.5.0" />, +++ /dev/null, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.5.0" />, +++ /dev/null, +++ /dev/null, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.5.0" />, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.5.0" />, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.5.0" />, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +    <version>1.5.0-SNAPSHOT</version>]
[+++ b/src/main/java/org/jfree/chart/ui/TextAnchor.java, +    private TextAnchor(String name) {, +     * Returns {@code true} if the anchor is a left-side anchor, and, +     * {@code false} otherwise., +     * Returns {@code true} if the anchor is a right-side anchor, and, +     * {@code false} otherwise., +     * Returns {@code true} if the anchor is a center anchor, and, +     * {@code false} otherwise., +     * Returns {@code true} if the anchor is a top anchor, and, +     * {@code false} otherwise., +     * Returns {@code true} if the anchor is a bottom anchor, and, +     * {@code false} otherwise., +     * Returns {@code true} if the anchor is a baseline anchor, and, +     * {@code false} otherwise., +     * Returns {@code true} if the anchor is a half-ascent anchor, and, +     * {@code false} otherwise., +     * Returns {@code true} if the anchor is a half-ascent anchor, and, +     * {@code false} otherwise., +     * Returns {@code true} if this object is equal to the specified , +     * object, and {@code false} otherwise., +    public boolean equals(Object o) {, +        TextAnchor order = (TextAnchor) o;, +    @Override]
[+++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/plot/RingPlot.java, +import org.jfree.chart.util.LineUtils;, +                    Line2D extendedSeparator = LineUtils.extendLine(, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/plot/RingPlot.java, +import org.jfree.chart.util.LineUtils;, +                    Line2D extendedSeparator = LineUtils.extendLine(, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +import org.jfree.chart.util.LineUtils;, +        visible = LineUtils.clipLine(state.workingLine, dataArea);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/plot/RingPlot.java, +import org.jfree.chart.util.LineUtils;, +                    Line2D extendedSeparator = LineUtils.extendLine(, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +import org.jfree.chart.util.LineUtils;, +        visible = LineUtils.clipLine(state.workingLine, dataArea);, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, +        //SerialUtils.writeImage(this.image, stream);, +        //this.image = SerialUtils.readImage(stream);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ b/src/main/java/org/jfree/chart/plot/RingPlot.java, +import org.jfree.chart.util.LineUtils;, +                    Line2D extendedSeparator = LineUtils.extendLine(, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +import org.jfree.chart.util.LineUtils;, +        visible = LineUtils.clipLine(state.workingLine, dataArea);, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java, +import org.jfree.chart.util.LineUtils;, +        boolean visible = LineUtils.clipLine(line, dataArea);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., +        //SerialUtils.writeImage(this.image, stream);]
[+++ b/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this.paint = Color.BLACK;, +        this.backgroundPaint = Color.WHITE;, +        this.outlinePaint = Color.BLUE;]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.18-pre" />]
[+++ b/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this.arrowPaint = Color.BLACK;]
[+++ /dev/null, +++ /dev/null, +++ b/lib/jcommon-1.0.24.jar]
[+++ b/README.txt, +---------------, +---------------, +        - JFreeSVG updated to version 2.0;, +        - included a preview of JSFreeChart, a 2D chart library written in, +          JavaScript that is conceptually similar to JFreeChart but runs , +          directly in a web browser.]
[+++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.18), +++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.18), +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.15" />, +        <property name="jcommon.version" value="1.0.18" />, +++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.18), +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.15" />, +        <property name="jcommon.version" value="1.0.18" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.18" />, +++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.18), +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.15" />, +        <property name="jcommon.version" value="1.0.18" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.18" />, +++ /dev/null, +++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.18), +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.15" />, +        <property name="jcommon.version" value="1.0.18" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.18" />, +++ /dev/null, +++ b/lib/jcommon-1.0.18.jar]
[+++ b/ant/build-fx.xml, +        <property name="fxgraphics2d.name" value="fxgraphics2d" />, +        <property name="fxgraphics2d.version" value="1.2.1" />, +        <property name="fxgraphics2d.jar" value="${basedir}/lib/${fxgraphics2d.name}-${fxgraphics2d.version}.jar" />, +        <property name="orsonpdf.version" value="1.7" />, +                <include name="${fxgraphics2d.name}-${fxgraphics2d.version}.jar" />, +        <copy file="${fxgraphics2d.jar}" tofile="${basedir}/distribution/lib/${fxgraphics2d.name}-${fxgraphics2d.version}.jar" />, +               source="1.8", +               target="1.8"]
[+++ b/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        this(polygon, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        this(polygon, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYShapeAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Ondax, Inc. and Contributors., +        this(shape, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        this(polygon, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYShapeAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Ondax, Inc. and Contributors., +        this(shape, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +        this.outlinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        this(polygon, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYShapeAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Ondax, Inc. and Contributors., +        this(shape, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +        this.outlinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/Axis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.BLACK;, +    public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.GRAY;, +    public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.BLACK;, +    public static final Paint DEFAULT_TICK_MARK_PAINT = Color.GRAY;]
[+++ b/ant/build-fx.xml, +        <property name="jfreesvg.version" value="3.0" />, +++ b/ant/build-fx.xml, +        <property name="jfreesvg.version" value="3.0" />, +++ b/ant/build.xml, +        <property name="jfreesvg.version" value="3.0" />]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * <code>XYBlockChartDemo1.java</code> program included in the JFreeChart, +     * default value is <code>RectangleAnchor.CENTER</code>., +     * Creates a new <code>XYBlockRenderer</code> instance with default, +     * Tests this <code>XYBlockRenderer</code> for equality with an arbitrary, +     * <li>{@code obj} is an instance of <code>XYBlockRenderer</code> (not, +     *     <code>XYBlockRenderer</code>;</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * <code>XYBlockChartDemo1.java</code> program included in the JFreeChart, +     * default value is <code>RectangleAnchor.CENTER</code>., +     * Creates a new <code>XYBlockRenderer</code> instance with default, +     * Tests this <code>XYBlockRenderer</code> for equality with an arbitrary, +     * <li>{@code obj} is an instance of <code>XYBlockRenderer</code> (not, +     *     <code>XYBlockRenderer</code>;</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the <code>XYLineAndShapeRendererDemo2.java</code> program included in the, +     * <code>getSeriesShapesVisible</code> method. You can override this method, +     * <code>getSeriesShapesFilled</code> method. You can override this method, +     * Refer to <code>XYLineAndShapeRendererDemo2.java</code> to see the, +     * Refer to <code>XYLineAndShapeRendererDemo2.java</code> to see the, +     * draws the shapes which mark the item positions. If <code>entities</code>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * <code>XYBlockChartDemo1.java</code> program included in the JFreeChart, +     * default value is <code>RectangleAnchor.CENTER</code>., +     * Creates a new <code>XYBlockRenderer</code> instance with default, +     * Tests this <code>XYBlockRenderer</code> for equality with an arbitrary, +     * <li>{@code obj} is an instance of <code>XYBlockRenderer</code> (not, +     *     <code>XYBlockRenderer</code>;</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the <code>XYLineAndShapeRendererDemo2.java</code> program included in the, +     * <code>getSeriesShapesVisible</code> method. You can override this method, +     * <code>getSeriesShapesFilled</code> method. You can override this method, +     * Refer to <code>XYLineAndShapeRendererDemo2.java</code> to see the, +     * Refer to <code>XYLineAndShapeRendererDemo2.java</code> to see the, +     * draws the shapes which mark the item positions. If <code>entities</code>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java, + *                   Matthias Noebl (for Cropster GmbH);, + * 29-Feb-2015 : Improved performance by only drawing visible lines, +import org.jfree.chart.util.LineUtilities;, +                            transX1, dataArea);, +                            transXs, dataArea);, +                            transXs, dataArea);, +                            transX1, dataArea);, +                            transY1, dataArea);, +                            transY0, dataArea);, +                            transY1, dataArea);, +                            transY1, dataArea);, +            double x1, double y1, Rectangle2D dataArea) {, +        boolean visible = LineUtilities.clipLine(line, dataArea);, +        if (visible), +        {, +    }, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * <code>XYBlockChartDemo1.java</code> program included in the JFreeChart, +     * default value is <code>RectangleAnchor.CENTER</code>., +     * Creates a new <code>XYBlockRenderer</code> instance with default, +     * Tests this <code>XYBlockRenderer</code> for equality with an arbitrary, +     * <li>{@code obj} is an instance of <code>XYBlockRenderer</code> (not, +     *     <code>XYBlockRenderer</code>;</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the <code>XYLineAndShapeRendererDemo2.java</code> program included in the, +     * <code>getSeriesShapesVisible</code> method. You can override this method, +     * <code>getSeriesShapesFilled</code> method. You can override this method, +     * Refer to <code>XYLineAndShapeRendererDemo2.java</code> to see the, +     * Refer to <code>XYLineAndShapeRendererDemo2.java</code> to see the, +     * draws the shapes which mark the item positions. If <code>entities</code>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java, + *                   Matthias Noebl (for Cropster GmbH);, + * 29-Feb-2015 : Improved performance by only drawing visible lines, +import org.jfree.chart.util.LineUtilities;, +                            transX1, dataArea);, +                            transXs, dataArea);, +                            transXs, dataArea);, +                            transX1, dataArea);, +                            transY1, dataArea);, +                            transY0, dataArea);, +                            transY1, dataArea);, +                            transY1, dataArea);, +            double x1, double y1, Rectangle2D dataArea) {, +        boolean visible = LineUtilities.clipLine(line, dataArea);, +        if (visible), +        {, +    }, +++ b/src/main/java/org/jfree/chart/servlet/ServletUtilities.java, +     * populates the <code>ChartRenderingInfo</code> object which can be used, +     * <code>RuntimeException</code> if the temporary directory is, +     * {@code null}.  Uses the system property <code>java.io.tmpdir</code>, +     * <code>JFreeChart_Deleter</code> if there is not already one bound to the, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * <code>XYBlockChartDemo1.java</code> program included in the JFreeChart, +     * default value is <code>RectangleAnchor.CENTER</code>., +     * Creates a new <code>XYBlockRenderer</code> instance with default, +     * Tests this <code>XYBlockRenderer</code> for equality with an arbitrary, +     * <li>{@code obj} is an instance of <code>XYBlockRenderer</code> (not, +     *     <code>XYBlockRenderer</code>;</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the <code>XYLineAndShapeRendererDemo2.java</code> program included in the, +     * <code>getSeriesShapesVisible</code> method. You can override this method, +     * <code>getSeriesShapesFilled</code> method. You can override this method, +     * Refer to <code>XYLineAndShapeRendererDemo2.java</code> to see the]
[+++ b/tests/org/jfree/chart/AreaChartTests.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * -------------------, + * AreaChartTests.java, + * -------------------, + * (C) Copyright 2005-2008, by Object Refinery Limited., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes:, + * --------, + * 12-Apr-2005 : Version 1 (DG);, + *, + */, +, +package org.jfree.chart;, +, +import java.awt.Graphics2D;, +import java.awt.geom.Rectangle2D;, +import java.awt.image.BufferedImage;, +, +import junit.framework.Test;, +import junit.framework.TestCase;, +import junit.framework.TestSuite;, +, +import org.jfree.chart.ChartFactory;, +import org.jfree.chart.JFreeChart;, +import org.jfree.chart.axis.ValueAxis;, +import org.jfree.chart.event.ChartChangeEvent;, +import org.jfree.chart.event.ChartChangeListener;, +import org.jfree.chart.labels.CategoryToolTipGenerator;, +import org.jfree.chart.labels.StandardCategoryToolTipGenerator;, +import org.jfree.chart.plot.CategoryPlot;, +import org.jfree.chart.plot.PlotOrientation;, +import org.jfree.chart.renderer.category.CategoryItemRenderer;, +import org.jfree.chart.urls.CategoryURLGenerator;, +import org.jfree.chart.urls.StandardCategoryURLGenerator;, +import org.jfree.data.Range;, +import org.jfree.data.category.CategoryDataset;, +import org.jfree.data.general.DatasetUtilities;, +, +/**, + * Tests for an area chart., + */, +public class AreaChartTests extends TestCase {, +, +    /** A chart. */, +    private JFreeChart chart;, +, +    /**, +     * Returns the tests as a test suite., +     *, +     * @return The test suite., +     */, +    public static Test suite() {, +        return new TestSuite(AreaChartTests.class);, +    }, +, +    /**, +     * Constructs a new set of tests., +     *, +     * @param name  the name of the tests., +     */, +    public AreaChartTests(String name) {, +        super(name);, +    }, +, +    /**, +     * Common test setup., +     */, +    protected void setUp() {, +        this.chart = createAreaChart();, +    }, +]
[+++ b/src/main/java/org/jfree/chart/date/SpreadsheetDate.java, +    private int calcSerial(int d, int m, int y) {, +        int yy = ((y - 1900) * 365) + SerialDate.leapYearCount(y - 1);, +        int dd = d;]
[+++ b/ChangeLog, +2011-11-12  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Improvements to axis and plot editors:, +    * org/jfree/chart/editor/DefaultValueAxisEditor.java: New file;, +    * org/jfree/chart/editor/DefaultLogAxisEditor.java: New file;, +    * org/jfree/chart/editor/DefaultPolarPlotEditor.java: New file;, +    * org/jfree/chart/editor/DefaultChartEditor.java:, +    (constructor): added support for DefaultPolarPlotEditor;, +    * org/jfree/chart/editor/DefaultAxisEditor.java, +    (constructor): added support for DefaultLogAxisEditor;, +    * org/jfree/chart/editor/DefaultNumberAxisEditor.java: refactoring;, +    * org/jfree/chart/editor/DefaultPlotEditor.java, +    (createPlotPanel): new method,, +    (createPlotTabs): new method;, +    * org/jfree/chart/editor/LocalizationBundle_ru.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_pt_PT.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_de.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_zh_CN.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_pt_BR.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_es.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_fr.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_nl.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_pl.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle.properties: addition, +, +++ b/ChangeLog, +2011-11-12  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Improvements to axis and plot editors:, +    * org/jfree/chart/editor/DefaultValueAxisEditor.java: New file;, +    * org/jfree/chart/editor/DefaultLogAxisEditor.java: New file;, +    * org/jfree/chart/editor/DefaultPolarPlotEditor.java: New file;, +    * org/jfree/chart/editor/DefaultChartEditor.java:, +    (constructor): added support for DefaultPolarPlotEditor;, +    * org/jfree/chart/editor/DefaultAxisEditor.java, +    (constructor): added support for DefaultLogAxisEditor;, +    * org/jfree/chart/editor/DefaultNumberAxisEditor.java: refactoring;, +    * org/jfree/chart/editor/DefaultPlotEditor.java, +    (createPlotPanel): new method,, +    (createPlotTabs): new method;, +    * org/jfree/chart/editor/LocalizationBundle_ru.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_pt_PT.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_de.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_zh_CN.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_pt_BR.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_es.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_fr.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_nl.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_pl.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle.properties: addition, +, +++ b/source/org/jfree/chart/editor/DefaultAxisEditor.java, +import org.jfree.chart.axis.LogAxis;, +            if (axis instanceof LogAxis) {, +                return new DefaultLogAxisEditor((LogAxis) axis);, +            }, +++ b/ChangeLog, +2011-11-12  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Improvements to axis and plot editors:, +    * org/jfree/chart/editor/DefaultValueAxisEditor.java: New file;, +    * org/jfree/chart/editor/DefaultLogAxisEditor.java: New file;, +    * org/jfree/chart/editor/DefaultPolarPlotEditor.java: New file;, +    * org/jfree/chart/editor/DefaultChartEditor.java:, +    (constructor): added support for DefaultPolarPlotEditor;, +    * org/jfree/chart/editor/DefaultAxisEditor.java, +    (constructor): added support for DefaultLogAxisEditor;, +    * org/jfree/chart/editor/DefaultNumberAxisEditor.java: refactoring;, +    * org/jfree/chart/editor/DefaultPlotEditor.java, +    (createPlotPanel): new method,, +    (createPlotTabs): new method;, +    * org/jfree/chart/editor/LocalizationBundle_ru.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_pt_PT.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_de.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_zh_CN.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_pt_BR.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_es.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_fr.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_nl.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle_pl.properties: addition, +    * org/jfree/chart/editor/LocalizationBundle.properties: addition, +, +++ b/source/org/jfree/chart/editor/DefaultAxisEditor.java, +import org.jfree.chart.axis.LogAxis;, +            if (axis instanceof LogAxis) {, +                return new DefaultLogAxisEditor((LogAxis) axis);, +            }, +++ b/source/org/jfree/chart/editor/DefaultChartEditor.java, +import org.jfree.chart.plot.PolarPlot;, +        if (plot instanceof PolarPlot) {, +            this.plotEditor = new DefaultPolarPlotEditor((PolarPlot) plot);, +        }, +        else {, +        }, +++ b/ChangeLog, +2011-11-12  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Improvements to axis and plot editors:, +    * org/jfree/chart/editor/DefaultValueAxisEditor.java: New file;]
[+++ b/ant/build-fx.xml, +++ b/ant/build-fx.xml, +++ b/ant/build.xml]
[+++ b/maven/README.txt, +To make use of a particular file, copy its contents to the pom.xml file in the root directory., +pom-1.6.xml - builds JFreeChart without JavaFX support (jfreechart-1.0.x.jar).  This requires JDK 1.6 or later, and is the default., +pom-javafx.xml - builds JFreeChart including JavaFX support (jfreechart-1.5.x.jar).  This requires JDK 1.8.0_40 or later.]
[+++ b/ant/build.xml, +<!-- Tested recently with Ant 1.8.2 -->, +        <property name="jfreechart.version" value="1.0.15" />, +        <property name="src.version" value="1.4"/>, +        <property name="target.version" value="1.4"/>, +               source="1.4", +               target="1.4", +++ b/ant/build.xml, +<!-- Tested recently with Ant 1.8.2 -->, +        <property name="jfreechart.version" value="1.0.15" />, +        <property name="src.version" value="1.4"/>, +        <property name="target.version" value="1.4"/>, +               source="1.4", +               target="1.4", +++ /dev/null]
[+++ b/ant/build-fx.xml, +        <copy todir="${basedir}/distribution/svg">, +            <fileset dir="${basedir}/svg">, +            </fileset>, +        </copy>, +, +++ b/ant/build-fx.xml, +        <copy todir="${basedir}/distribution/svg">, +            <fileset dir="${basedir}/svg">, +            </fileset>, +        </copy>, +, +++ b/ant/build.xml, +        <property name="fxgraphics2d.name" value="fxgraphics2d" />, +        <property name="fxgraphics2d.version" value="1.3" />, +        <property name="fxgraphics2d.jar" value="${basedir}/lib/${fxgraphics2d.name}-${fxgraphics2d.version}.jar" />, +        <property name="orsoncharts.version" value="1.5" />, +        <javac srcdir="${basedir}/src/main/java", +        <copy file="${basedir}/src/main/resources/org/jfree/chart/gorilla.jpg" tofile="${basedir}/build/org/jfree/chart/gorilla.jpg" />, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart/plot">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart/editor">, +            <fileset dir="${basedir}/src/main/java"/>, +                 overview="${basedir}/src/main/javadoc/overview.html", +            <packageset dir="${basedir}/src/main/java" defaultexcludes="yes">, +        <copy todir="${basedir}/distribution/src">, +            <fileset dir="${basedir}/src">, +        <copy todir="${basedir}/distribution/maven">, +            <fileset dir="${basedir}/maven">, +            </fileset>, +        </copy>, +, +        <copy file="${fxgraphics2d.jar}" tofile="${basedir}/distribution/lib/${fxgraphics2d.name}-${fxgraphics2d.version}.jar" />, +        <fixcrlf srcdir="${basedir}/distribution/src", +        <javac srcdir="${basedir}/src/test/java", +            depends="compile,compile-experimental,zip-javadocs,zip,source-jar"]
[+++ b/ant/build.xml, +        <property name="jxlayer.jar" value="${basedir}/lib/jxlayer.jar"/>, +        <available classname="javax.imageio.ImageIO" property="JDK1.4+"/>, +        <available classname="java.lang.annotation.Annotation" property="JDK1.5+"/>, +        <property name="src.version" value="1.3"/>, +        <property name="target.version" value="1.3"/>, +        <available classname="java.lang.Annotation" property="src.version" value="1.5"/>, +        <available classname="java.lang.Annotation" property="target.version" value="1.5"/>, +            <fileset dir="${basedir}/lib/">, +                <include name="${jcommon.name}-${jcommon.version}.jar"/>, +                <include name="servlet.jar"/>, +                <include name="jxlayer.jar" if="JDK1.5+"/>, +                <include name="gnujaxp.jar" unless="JDK1.4+"/>, +            </fileset>, +               source="${src.version}", +               target="${target.version}">, +            <exclude name="org/jfree/chart/jxlayer/**" unless="JDK1.5+"/>, +               source="${src.version}", +               target="${target.version}">, +                <exclude name="org/jfree/chart/jxlayer/**" unless="JDK1.5+"/>]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/NEWS, +JFreeChart 1.0.7, +----------------, +?? October 2007, +, +This release features a new LogAxis class, initial support for minor tick , +units, a new anchored zooming option for the ChartPanel class, optional simple, +labelling on pie charts, improvements to the "statistical" datasets and , +underlying data structures, and numerous bug fixes., +, +API Adjustments:, +, +- CategoryAxis - added getCategorySeriesMiddle() method;, +- LogAxis - new class, an alternative to LogarithmicAxis;, +- NumberTick - new constructor that allows specification of the tick type;, +- NumberTickUnit - new constructor to specify the minor tick count;, +- SymbolAxis - new methods get/setGridBandAlternatePaint();, +- TickType - new class;, +- TickUnit - added minorTickCount attribute;, +- ValueTick - added tickType attribute;, +- StandardPieSectionLabelGenerator - new constructors accepting a Locale;, +- StandardPieToolTipGenerator - likewise;, +- CategoryPlot - added getRangeAxisIndex(), zoomDomainAxes() and zoomRangeAxes(), +                 methods;, +- FastScatterPlot - added new zooming methods;, +- PiePlot - new attributes to support simple labelling;, +- PlotUtilities - new class;, +- PolarPlot - added new zooming methods;, +- ThermometerPlot - likewise;, +- XYPlot - likewise;, +- Zoomable - added new zooming methods to this interface;, +- LineAndShapeRenderer - added useSeriesOffset and itemMargin attributes;, +- MinMaxCategoryRenderer - implemented equals();, +- XYSplineAndShapeRenderer - new class;, +- LogFormat - new class;, +- ChartFactory - new pie and ring chart creation methods that accept a Locale;, +- ChartPanel - added zoomAroundAnchor attribute;, +- Series - added isEmpty() method;, +- BoxAndWhiskerItem - new convenience constructor;, +- DefaultBoxAndWhiskerCategoryDataset - new remove methods;, +- DefaultStatisticalCategoryDataset - likewise;, +- MeanAndStandardDeviation - added new value accessor methods;, +- TimeTableXYDataset - added clear() method;, +- Week - added new constructor;, +- KeyedObjects - added insertValue() and clear() methods;, +- KeyedObjects2D - added clear() method., +, +Bug Fixes:, +, +1767315 - GrayPaintScale.getPaint() uses wrong value;, +1775452 - Inverted XYBarRenderer does not render margins correctly;, +1802195 - Marker.listenerList serializable;, +1779941 - StatisticalBarRenderer NPE;, +1766646 - XYBlockRenderer can't handle empty datasets;, +1763413 - PeriodAxis labels fail to display with setInverted, +1737953 - Zoom doesn't work on LogAxis(Demo1), +1749124 - JFreeChart not added as TitleChangeListener , +, +, +++ b/NEWS, +JFreeChart 1.0.7, +----------------, +?? October 2007, +, +This release features a new LogAxis class, initial support for minor tick , +units, a new anchored zooming option for the ChartPanel class, optional simple, +labelling on pie charts, improvements to the "statistical" datasets and , +underlying data structures, and numerous bug fixes., +, +API Adjustments:, +, +- CategoryAxis - added getCategorySeriesMiddle() method;, +- LogAxis - new class, an alternative to LogarithmicAxis;, +- NumberTick - new constructor that allows specification of the tick type;, +- NumberTickUnit - new constructor to specify the minor tick count;, +- SymbolAxis - new methods get/setGridBandAlternatePaint();, +- TickType - new class;, +- TickUnit - added minorTickCount attribute;, +- ValueTick - added tickType attribute;, +- StandardPieSectionLabelGenerator - new constructors accepting a Locale;, +- StandardPieToolTipGenerator - likewise;, +- CategoryPlot - added getRangeAxisIndex(), zoomDomainAxes() and zoomRangeAxes(), +                 methods;, +- FastScatterPlot - added new zooming methods;, +- PiePlot - new attributes to support simple labelling;, +- PlotUtilities - new class;, +- PolarPlot - added new zooming methods;, +- ThermometerPlot - likewise;, +- XYPlot - likewise;, +- Zoomable - added new zooming methods to this interface;, +- LineAndShapeRenderer - added useSeriesOffset and itemMargin attributes;, +- MinMaxCategoryRenderer - implemented equals();, +- XYSplineAndShapeRenderer - new class;, +- LogFormat - new class;, +- ChartFactory - new pie and ring chart creation methods that accept a Locale;, +- ChartPanel - added zoomAroundAnchor attribute;, +- Series - added isEmpty() method;, +- BoxAndWhiskerItem - new convenience constructor;, +- DefaultBoxAndWhiskerCategoryDataset - new remove methods;, +- DefaultStatisticalCategoryDataset - likewise;]
[+++ b/src/test/java/org/jfree/chart/AreaChartTest.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ------------------, + * AreaChartTest.java, + * ------------------, + * (C) Copyright 2005-2016, by Object Refinery Limited., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes:, + * --------, + * 12-Apr-2005 : Version 1 (DG);, + *, + */, +, +package org.jfree.chart;, +, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.fail;, +, +import java.awt.Graphics2D;, +import java.awt.geom.Rectangle2D;, +import java.awt.image.BufferedImage;, +, +import org.jfree.chart.axis.ValueAxis;, +import org.jfree.chart.event.ChartChangeEvent;, +import org.jfree.chart.event.ChartChangeListener;, +import org.jfree.chart.labels.CategoryToolTipGenerator;, +import org.jfree.chart.labels.StandardCategoryToolTipGenerator;, +import org.jfree.chart.plot.CategoryPlot;, +import org.jfree.chart.plot.PlotOrientation;, +import org.jfree.chart.renderer.category.CategoryItemRenderer;, +import org.jfree.chart.urls.CategoryURLGenerator;, +import org.jfree.chart.urls.StandardCategoryURLGenerator;, +import org.jfree.data.Range;, +import org.jfree.data.category.CategoryDataset;, +import org.jfree.data.general.DatasetUtilities;, +import org.junit.Before;, +import org.junit.Test;, +, +/**, + * Tests for an area chart., + */, +public class AreaChartTest {, +, +    /** A chart. */, +    private JFreeChart chart;, +, +    /**, +     * Common test setup., +     */, +    @Before, +    public void setUp() {, +        this.chart = createAreaChart();, +    }, +, +    /**, +     * Check that setting a tool tip generator for a series does override the, +     * default generator., +     */, +    @Test, +    public void testSetSeriesToolTipGenerator() {, +        CategoryPlot plot = (CategoryPlot) this.chart.getPlot();, +        CategoryItemRenderer renderer = plot.getRenderer();, +        StandardCategoryToolTipGenerator tt, +                = new StandardCategoryToolTipGenerator();, +        renderer.setSeriesToolTipGenerator(0, tt);, +        CategoryToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);, +        assertSame(tt2, tt);, +    }, +, +    /**]
[+++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                    ((LineAndShapeRenderer) r).setBaseLinesVisible(, +                    ((LineAndShapeRenderer) r).setBaseShapesVisible(, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                    ((LineAndShapeRenderer) r).setBaseLinesVisible(, +                    ((LineAndShapeRenderer) r).setBaseShapesVisible(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                    ((LineAndShapeRenderer) r).setBaseLinesVisible(, +                    ((LineAndShapeRenderer) r).setBaseShapesVisible(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                    ((LineAndShapeRenderer) r).setBaseLinesVisible(, +                    ((LineAndShapeRenderer) r).setBaseShapesVisible(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                    ((LineAndShapeRenderer) r).setBaseLinesVisible(, +                    ((LineAndShapeRenderer) r).setBaseShapesVisible(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                    ((LineAndShapeRenderer) r).setBaseLinesVisible(, +                    ((LineAndShapeRenderer) r).setBaseShapesVisible(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                    ((LineAndShapeRenderer) r).setBaseLinesVisible(, +                    ((LineAndShapeRenderer) r).setBaseShapesVisible(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/xy/CandlestickRenderer.java, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                    ((LineAndShapeRenderer) r).setBaseLinesVisible(, +                    ((LineAndShapeRenderer) r).setBaseShapesVisible(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/xy/CandlestickRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                    ((LineAndShapeRenderer) r).setBaseLinesVisible(, +                    ((LineAndShapeRenderer) r).setBaseShapesVisible(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/xy/CandlestickRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java]
[+++ b/.gitignore, +/nbproject/private/, +/target/]
[+++ b/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        p1.setSeriesPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.WHITE));, +        p2.setSeriesPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.WHITE));, +        p1.setSeriesPaint(1, new GradientPaint(1.0f, 2.0f, Color.YELLOW,, +                3.0f, 4.0f, Color.WHITE));, +        p2.setSeriesPaint(1, new GradientPaint(1.0f, 2.0f, Color.YELLOW,, +                3.0f, 4.0f, Color.WHITE));, +        p1.setBaseSeriesPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLACK));, +        p2.setBaseSeriesPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLACK));, +        p1.setSeriesOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.BLACK));, +        p2.setSeriesOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.BLACK));, +        p1.setSeriesOutlinePaint(1, new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.GREEN));, +        p2.setSeriesOutlinePaint(1, new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.GREEN));, +        p1.setBaseSeriesOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.CYAN,, +                3.0f, 4.0f, Color.GREEN));, +        p2.setBaseSeriesOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.CYAN,, +                3.0f, 4.0f, Color.GREEN));, +        p1.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p2.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p1.setAxisLinePaint(Color.RED);, +        p2.setAxisLinePaint(Color.RED);, +        p1.setSeriesPaint(1, Color.BLACK);, +        p2.setSeriesPaint(1, Color.BLACK);, +        p1.setSeriesOutlinePaint(0, Color.RED);, +        p2.setSeriesOutlinePaint(0, Color.RED);, +++ b/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        p1.setSeriesPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.WHITE));, +        p2.setSeriesPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.WHITE));, +        p1.setSeriesPaint(1, new GradientPaint(1.0f, 2.0f, Color.YELLOW,, +                3.0f, 4.0f, Color.WHITE));, +        p2.setSeriesPaint(1, new GradientPaint(1.0f, 2.0f, Color.YELLOW,, +                3.0f, 4.0f, Color.WHITE));, +        p1.setBaseSeriesPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLACK));, +        p2.setBaseSeriesPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLACK));, +        p1.setSeriesOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.BLACK));, +        p2.setSeriesOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.BLACK));, +        p1.setSeriesOutlinePaint(1, new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.GREEN));, +        p2.setSeriesOutlinePaint(1, new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.GREEN));, +        p1.setBaseSeriesOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.CYAN,, +                3.0f, 4.0f, Color.GREEN));, +        p2.setBaseSeriesOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.CYAN,, +                3.0f, 4.0f, Color.GREEN));, +        p1.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p2.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p1.setAxisLinePaint(Color.RED);, +        p2.setAxisLinePaint(Color.RED);, +        p1.setSeriesPaint(1, Color.BLACK);, +        p2.setSeriesPaint(1, Color.BLACK);, +        p1.setSeriesOutlinePaint(0, Color.RED);, +        p2.setSeriesOutlinePaint(0, Color.RED);, +++ b/src/test/java/org/jfree/chart/plot/ThermometerPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        p1.setThermometerPaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.RED));, +        p2.setThermometerPaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.RED));, +        p1.setValuePaint(new GradientPaint(4.0f, 5.0f, Color.RED,, +                6.0f, 7.0f, Color.WHITE));, +        p2.setValuePaint(new GradientPaint(4.0f, 5.0f, Color.RED,, +                6.0f, 7.0f, Color.WHITE));, +        p1.setMercuryPaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        p2.setMercuryPaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        p1.setSubrangePaint(1, new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.YELLOW));, +        p2.setSubrangePaint(1, new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.YELLOW));, +        p1.setSubrangePaint(1, new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,, +                4.0f, Color.BLUE));, +++ b/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        p1.setSeriesPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.WHITE));]
[+++ b/src/main/java/org/jfree/chart/util/ObjectUtils.java, +     * Returns {@code true} if the two objects are equal OR both, +     * {@code null}., +     * @param o1 object 1 ({@code null} permitted)., +     * @param o2 object 2 ({@code null} permitted)., +     * @return {@code true} or {@code false}., +     * {@code null}., +     * @param object the object ({@code null} permitted)., +     *         {@code null})., +     * @param object the object to clone ({@code null} not permitted)., +     * @param collection the collection ({@code null} not permitted)., +     * Returns {@code true} if this is version 1.4 or later of the]
[+++ /dev/null, +++ /dev/null, +++ b/ant/build.xml, +<!-- An ANT build file for JFreeChart including JavaFX support -->, +, +<!-- Written by David Gilbert. -->, +, +<!-- Tested recently with Ant 1.8.2 -->, +<!-- To run this script, you need to make sure the libraries used by -->, +<!-- JFreeChart are copied to the ../lib directory (or edit the -->, +<!-- initialise task to point to the appropriate jar files). -->, +, +<!-- This script will create temporary directories ../build and -->, +<!-- ../distribution, as working areas.  A ../javadoc directory will -->, +<!-- be created for the Javadoc HTML pages. -->, +, +<!-- If you have comments about this script, please post a message -->, +<!-- on the JFreeChart developers mailing list. -->, +, +<project name="jfreechart" default="all" basedir="..">, +, +    <!-- Initialisation. -->, +    <target name="initialise" description="Initialise required settings.">, +        <tstamp />, +        <property name="jfreechart.name" value="jfreechart" />, +        <property name="jfreechart.version" value="1.5.0" />, +        <property name="jcommon.name" value="jcommon" />, +        <property name="jcommon.version" value="1.0.23" />, +        <property name="jcommon.jar" value="${basedir}/lib/${jcommon.name}-${jcommon.version}.jar"/>, +        <property name="fxgraphics2d.name" value="fxgraphics2d" />, +        <property name="fxgraphics2d.version" value="1.5" />, +        <property name="fxgraphics2d.jar" value="${basedir}/lib/${fxgraphics2d.name}-${fxgraphics2d.version}.jar" />, +        <property name="jfreesvg.name" value="jfreesvg" />, +        <property name="jfreesvg.version" value="3.2" />, +        <property name="orsonpdf.name" value="orsonpdf" />, +        <property name="orsonpdf.version" value="1.7" />, +        <property name="orsoncharts.version" value="1.6" />, +        <property name="builddir" value="${basedir}/build" />, +        <property name="servlet.jar" value="${basedir}/lib/servlet.jar"/>, +        <property name="junit.jar" value="${basedir}/lib/junit-4.11.jar"/>, +        <property name="hamcrest.jar" value="${basedir}/lib/hamcrest-core-1.3.jar"/>, +        <property name="src.version" value="1.8"/>, +        <property name="target.version" value="1.8"/>, +        <path id="build.classpath">, +            <fileset dir="${basedir}/lib/">, +                <include name="${jcommon.name}-${jcommon.version}.jar" />, +                <include name="${fxgraphics2d.name}-${fxgraphics2d.version}.jar" />, +                <include name="servlet.jar"/>, +            </fileset>, +        </path>, +    </target>, +, +    <!-- Compile the JFreeChart classes -->, +    <target name="compile" depends="initialise", +            description="Compile the JFreeChart source code.">, +, +        <!-- create a temp build directory -->, +        <mkdir dir="${basedir}/build" />, +, +        <!-- compile the source -->, +        <javac srcdir="${basedir}/src/main/java", +               destdir="${basedir}/build", +               debug="on", +               deprecation="false", +               source="${src.version}", +               target="${target.version}", +               includeantruntime="false">, +            <classpath refid="build.classpath" />, +            <include name="org/jfree/**"/>, +        </javac>, +, +        <!-- copy across gorilla.jpg -->, +        <copy file="${basedir}/src/main/resources/org/jfree/chart/gorilla.jpg" tofile="${basedir}/build/org/jfree/chart/gorilla.jpg" />, +, +        <!-- copy across .properties files -->, +        <copy todir="${basedir}/build/org/jfree/chart/">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart">, +                <include name="*.properties" />, +            </fileset>, +        </copy>, +        <copy todir="${basedir}/build/org/jfree/chart/plot">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart/plot">, +                <include name="*.properties" />, +            </fileset>, +        </copy>, +        <copy todir="${basedir}/build/org/jfree/chart/editor">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart/editor">, +                <include name="*.properties" />, +            </fileset>, +        </copy>, +, +        <!-- make the jar -->, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}.jar", +             basedir="${basedir}/build" >, +            <manifest>, +                <attribute name="Specification-Title" value="JFreeChart" />, +                <attribute name="Specification-Version" value="${jfreechart.version}" />, +                <attribute name="Specification-Vendor" value="jfree.org" />, +                <attribute name="Implementation-Title" value="JFreeChart" />, +                <attribute name="Implementation-Version" value="${jfreechart.version}" />]
[+++ b/src/main/java/org/jfree/chart/ui/StandardGradientPaintTransformer.java, + * Transforms a {@code GradientPaint} to range over the width of a target , +     * @param type  the transform type ({@code null} not permitted)., +     * @return The type of transform (never {@code null})., +     * Transforms a {@code GradientPaint} instance to fit the specified, +     * {@code target} shape., +     * @param paint  the original paint ({@code null} not permitted)., +     * @param target  the target shape ({@code null} not permitted)., +    @Override, +    public GradientPaint transform(GradientPaint paint, Shape target) {, +        Rectangle2D bounds = target.getBounds2D();, +     * @param obj  the object ({@code null} permitted)., +    @Override, +    public boolean equals(Object obj) {]
[+++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +, +            this.datasets.put(0, dataset);, +            this.renderers.put(0, renderer);, +            this.domainAxes.put(0, domainAxis);, +            mapDatasetToDomainAxis(0, 0);, +, +            this.rangeAxes.put(0, rangeAxis);, +            mapDatasetToRangeAxis(0, 0);]
[+++ b/src/test/java/org/jfree/chart/renderer/GrayPaintScaleTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited and Contributors., +        assertTrue(c.equals(Color.BLACK));, +        assertTrue(c.equals(Color.WHITE));, +        assertTrue(c.equals(Color.BLACK));, +        assertTrue(c.equals(Color.WHITE));, +++ b/src/test/java/org/jfree/chart/renderer/GrayPaintScaleTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited and Contributors., +        assertTrue(c.equals(Color.BLACK));, +        assertTrue(c.equals(Color.WHITE));, +        assertTrue(c.equals(Color.BLACK));, +        assertTrue(c.equals(Color.WHITE));, +++ b/src/test/java/org/jfree/chart/title/LegendGraphicTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +                3.0, 4.0), Color.BLACK);, +                3.0, 4.0), Color.BLACK);, +        g1.setFillPaint(Color.GREEN);, +        g2.setFillPaint(Color.GREEN);, +        g1.setOutlinePaint(Color.GREEN);, +        g2.setOutlinePaint(Color.GREEN);, +        g1.setLinePaint(Color.GREEN);, +        g2.setLinePaint(Color.GREEN);, +                3.0, 4.0), Color.BLACK);, +                3.0, 4.0), Color.BLACK);, +        LegendGraphic g1 = new LegendGraphic(r, Color.BLACK);, +        LegendGraphic g1 = new LegendGraphic(r, Color.BLACK);, +                3.0, 4.0), Color.BLACK);]
[+++ b/src/main/java/org/jfree/chart/ChartPanel.java, +        this.zoomOutlinePaint = Color.BLUE;, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +        this.zoomOutlinePaint = Color.BLUE;, +++ b/src/main/java/org/jfree/chart/editor/DefaultAxisEditor.java, +            this, localizationResources.getString("Label_Color"), Color.BLUE, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +        this.zoomOutlinePaint = Color.BLUE;, +++ b/src/main/java/org/jfree/chart/editor/DefaultAxisEditor.java, +            this, localizationResources.getString("Label_Color"), Color.BLUE, +++ b/src/main/java/org/jfree/chart/editor/DefaultChartEditor.java, +                "Background_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +        this.zoomOutlinePaint = Color.BLUE;, +++ b/src/main/java/org/jfree/chart/editor/DefaultAxisEditor.java, +            this, localizationResources.getString("Label_Color"), Color.BLUE, +++ b/src/main/java/org/jfree/chart/editor/DefaultChartEditor.java, +                "Background_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                "Background_Color"), Color.BLUE);, +                "Outline_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +        this.zoomOutlinePaint = Color.BLUE;, +++ b/src/main/java/org/jfree/chart/editor/DefaultAxisEditor.java, +            this, localizationResources.getString("Label_Color"), Color.BLUE, +++ b/src/main/java/org/jfree/chart/editor/DefaultChartEditor.java, +                "Background_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                "Background_Color"), Color.BLUE);, +                "Outline_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultTitleEditor.java, +        Color defaultColor = (p instanceof Color ? (Color) p : Color.BLUE);, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +        this.zoomOutlinePaint = Color.BLUE;, +++ b/src/main/java/org/jfree/chart/editor/DefaultAxisEditor.java, +            this, localizationResources.getString("Label_Color"), Color.BLUE, +++ b/src/main/java/org/jfree/chart/editor/DefaultChartEditor.java, +                "Background_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                "Background_Color"), Color.BLUE);, +                "Outline_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultTitleEditor.java, +        Color defaultColor = (p instanceof Color ? (Color) p : Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultValueAxisEditor.java, +        this.gridPaintSample = new PaintSample(Color.BLUE);, +                "Grid_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +        this.zoomOutlinePaint = Color.BLUE;, +++ b/src/main/java/org/jfree/chart/editor/DefaultAxisEditor.java, +            this, localizationResources.getString("Label_Color"), Color.BLUE, +++ b/src/main/java/org/jfree/chart/editor/DefaultChartEditor.java, +                "Background_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                "Background_Color"), Color.BLUE);, +                "Outline_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultTitleEditor.java, +        Color defaultColor = (p instanceof Color ? (Color) p : Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultValueAxisEditor.java, +        this.gridPaintSample = new PaintSample(Color.BLUE);, +                "Grid_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/plot/FastScatterPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited., +        this.paint = Color.RED;, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +        this.zoomOutlinePaint = Color.BLUE;, +++ b/src/main/java/org/jfree/chart/editor/DefaultAxisEditor.java, +            this, localizationResources.getString("Label_Color"), Color.BLUE, +++ b/src/main/java/org/jfree/chart/editor/DefaultChartEditor.java, +                "Background_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                "Background_Color"), Color.BLUE);, +                "Outline_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultTitleEditor.java, +        Color defaultColor = (p instanceof Color ? (Color) p : Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultValueAxisEditor.java, +        this.gridPaintSample = new PaintSample(Color.BLUE);, +                "Grid_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/plot/FastScatterPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited., +        this.paint = Color.RED;, +++ b/src/main/java/org/jfree/chart/plot/MeterInterval.java, +        this(label, range, Color.YELLOW, new BasicStroke(2.0f), null);, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +        this.zoomOutlinePaint = Color.BLUE;, +++ b/src/main/java/org/jfree/chart/editor/DefaultAxisEditor.java, +            this, localizationResources.getString("Label_Color"), Color.BLUE, +++ b/src/main/java/org/jfree/chart/editor/DefaultChartEditor.java, +                "Background_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                "Background_Color"), Color.BLUE);, +                "Outline_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultTitleEditor.java, +        Color defaultColor = (p instanceof Color ? (Color) p : Color.BLUE);, +++ b/src/main/java/org/jfree/chart/editor/DefaultValueAxisEditor.java, +        this.gridPaintSample = new PaintSample(Color.BLUE);, +                "Grid_Color"), Color.BLUE);, +++ b/src/main/java/org/jfree/chart/plot/FastScatterPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors.]
[+++ b/src/main/java/org/jfree/chart/needle/ArrowNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class ArrowNeedle extends MeterNeedle implements Cloneable, , +        Serializable {, +        } else {, +        } else {, +        } else {, +     * @throws CloneNotSupportedException if the {@code ArrowNeedle}, +++ b/src/main/java/org/jfree/chart/needle/ArrowNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class ArrowNeedle extends MeterNeedle implements Cloneable, , +        Serializable {, +        } else {, +        } else {, +        } else {, +     * @throws CloneNotSupportedException if the {@code ArrowNeedle}, +++ b/src/main/java/org/jfree/chart/needle/LineNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class LineNeedle extends MeterNeedle implements Cloneable, Serializable {, +     * @throws CloneNotSupportedException if the {@code LineNeedle}, +++ b/src/main/java/org/jfree/chart/needle/ArrowNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class ArrowNeedle extends MeterNeedle implements Cloneable, , +        Serializable {, +        } else {, +        } else {, +        } else {, +     * @throws CloneNotSupportedException if the {@code ArrowNeedle}, +++ b/src/main/java/org/jfree/chart/needle/LineNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class LineNeedle extends MeterNeedle implements Cloneable, Serializable {, +     * @throws CloneNotSupportedException if the {@code LineNeedle}, +++ b/src/main/java/org/jfree/chart/needle/LongNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class LongNeedle extends MeterNeedle implements Cloneable, Serializable {, +     * @throws CloneNotSupportedException if the {@code LongNeedle}, +++ b/src/main/java/org/jfree/chart/needle/ArrowNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class ArrowNeedle extends MeterNeedle implements Cloneable, , +        Serializable {, +        } else {, +        } else {, +        } else {, +     * @throws CloneNotSupportedException if the {@code ArrowNeedle}, +++ b/src/main/java/org/jfree/chart/needle/LineNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class LineNeedle extends MeterNeedle implements Cloneable, Serializable {, +     * @throws CloneNotSupportedException if the {@code LineNeedle}, +++ b/src/main/java/org/jfree/chart/needle/LongNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class LongNeedle extends MeterNeedle implements Cloneable, Serializable {, +     * @throws CloneNotSupportedException if the {@code LongNeedle}, +++ b/src/main/java/org/jfree/chart/needle/MeterNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +    /** Scalar to apply to locate the rotation x point. */, +    /** Scalar to apply to locate the rotation y point. */, +        pt.setLocation(plotArea.getMinX() + this.rotateX * plotArea.getWidth(),, +                plotArea.getMinY() + this.rotateY * plotArea.getHeight());, +    protected abstract void drawNeedle(Graphics2D g2, Rectangle2D plotArea, , +            Point2D rotate, double angle);, +++ b/src/main/java/org/jfree/chart/needle/ArrowNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class ArrowNeedle extends MeterNeedle implements Cloneable, , +        Serializable {, +        } else {, +        } else {, +        } else {, +     * @throws CloneNotSupportedException if the {@code ArrowNeedle}, +++ b/src/main/java/org/jfree/chart/needle/LineNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class LineNeedle extends MeterNeedle implements Cloneable, Serializable {, +     * @throws CloneNotSupportedException if the {@code LineNeedle}, +++ b/src/main/java/org/jfree/chart/needle/LongNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class LongNeedle extends MeterNeedle implements Cloneable, Serializable {, +     * @throws CloneNotSupportedException if the {@code LongNeedle}, +++ b/src/main/java/org/jfree/chart/needle/MeterNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +    /** Scalar to apply to locate the rotation x point. */, +    /** Scalar to apply to locate the rotation y point. */, +        pt.setLocation(plotArea.getMinX() + this.rotateX * plotArea.getWidth(),, +                plotArea.getMinY() + this.rotateY * plotArea.getHeight());, +    protected abstract void drawNeedle(Graphics2D g2, Rectangle2D plotArea, , +            Point2D rotate, double angle);, +++ b/src/main/java/org/jfree/chart/needle/MiddlePinNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class MiddlePinNeedle extends MeterNeedle implements Cloneable, , +        Serializable {, +     * @throws CloneNotSupportedException if the {@code MiddlePinNeedle}, +++ b/src/main/java/org/jfree/chart/needle/ArrowNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class ArrowNeedle extends MeterNeedle implements Cloneable, , +        Serializable {, +        } else {, +        } else {, +        } else {, +     * @throws CloneNotSupportedException if the {@code ArrowNeedle}, +++ b/src/main/java/org/jfree/chart/needle/LineNeedle.java, + * (C) Copyright 2002-2016, by the Australian Antarctic Division and, +public class LineNeedle extends MeterNeedle implements Cloneable, Serializable {]
[+++ b/pom.xml, +    <version>1.0.16-SNAPSHOT</version>]
[+++ b/ant/build-swt.xml, +    <!-- Generate the JFreeChart SWT source code jar -->, +    <target name="source-jar-swt" depends="initialise", +            description="Package the JFreeChart SWT source code in a jar">, +        <!-- create a temp build directory -->, +        <mkdir dir="${basedir}/source-jar-swt"/>, +        <!-- copy source code -->, +        <copy todir="${basedir}/source-jar-swt/">, +            <fileset dir="${basedir}/swt"/>, +        </copy>, +        <!-- make the jar -->, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-swt-src.jar", +             basedir="${basedir}/source-jar-swt">, +        </jar>, +        <!-- delete the temp directory -->, +        <delete dir="${basedir}/source-jar-swt"/>, +    </target>, +, +            depends="compile-swtgraphics,compile-swt,source-jar-swt", +++ b/ant/build-swt.xml, +    <!-- Generate the JFreeChart SWT source code jar -->, +    <target name="source-jar-swt" depends="initialise", +            description="Package the JFreeChart SWT source code in a jar">, +        <!-- create a temp build directory -->, +        <mkdir dir="${basedir}/source-jar-swt"/>, +        <!-- copy source code -->, +        <copy todir="${basedir}/source-jar-swt/">, +            <fileset dir="${basedir}/swt"/>, +        </copy>, +        <!-- make the jar -->, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-swt-src.jar", +             basedir="${basedir}/source-jar-swt">, +        </jar>, +        <!-- delete the temp directory -->, +        <delete dir="${basedir}/source-jar-swt"/>, +    </target>, +, +            depends="compile-swtgraphics,compile-swt,source-jar-swt", +++ b/ant/build.xml, +    <!-- Generate the JFreeChart source code jar -->, +    <target name="source-jar" depends="initialise", +            description="Package the JFreeChart source code in a jar">, +, +        <!-- create a temp build directory -->, +        <mkdir dir="${basedir}/source-jar"/>, +, +        <!-- copy source code -->, +        <copy todir="${basedir}/source-jar/">, +            <fileset dir="${basedir}/source"/>, +        </copy>, +, +        <!-- make the jar -->, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-src.jar", +             basedir="${basedir}/source-jar">, +        </jar>, +, +        <!-- delete the temp directory -->, +        <delete dir="${basedir}/source-jar"/>, +, +    </target>, +            depends="compile,compile-experimental,zip-javadocs,zip,targz,maven-bundle,source-jar"]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/src/main/java/org/jfree/chart/ChartFactory.java, +import org.jfree.chart.util.Args;, +        Args.nullNotPermitted(theme, "theme");, +        Args.nullNotPermitted(order, "order");, +        Args.nullNotPermitted(locale, "locale");, +        Args.nullNotPermitted(order, "order");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +import org.jfree.chart.util.Args;, +        Args.nullNotPermitted(theme, "theme");, +        Args.nullNotPermitted(order, "order");, +        Args.nullNotPermitted(locale, "locale");, +        Args.nullNotPermitted(order, "order");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +import org.jfree.chart.util.Args;, +        Args.nullNotPermitted(paint, "paint");, +        Args.nullNotPermitted(overlay, "overlay");, +        Args.nullNotPermitted(overlay, "overlay");, +        Args.nullNotPermitted(file, "file");, +        Args.nullNotPermitted(listener, "listener");, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +import org.jfree.chart.util.Args;, +        Args.nullNotPermitted(theme, "theme");, +        Args.nullNotPermitted(order, "order");, +        Args.nullNotPermitted(locale, "locale");, +        Args.nullNotPermitted(order, "order");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +        Args.nullNotPermitted(orientation, "orientation");, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +import org.jfree.chart.util.Args;, +        Args.nullNotPermitted(paint, "paint");, +        Args.nullNotPermitted(overlay, "overlay");, +        Args.nullNotPermitted(overlay, "overlay");, +        Args.nullNotPermitted(file, "file");, +        Args.nullNotPermitted(listener, "listener");, +++ b/src/main/java/org/jfree/chart/ChartUtils.java, +import org.jfree.chart.util.Args;, +        Args.nullNotPermitted(chart, "chart");, +        Args.nullNotPermitted(out, "out");, +        Args.nullNotPermitted(chart, "chart");, +        Args.nullNotPermitted(out, "out");, +        Args.nullNotPermitted(chart, "chart");, +        Args.nullNotPermitted(file, "file");, +        Args.nullNotPermitted(file, "file");, +        Args.nullNotPermitted(chart, "chart");, +        Args.nullNotPermitted(out, "out");, +        Args.nullNotPermitted(chart, "chart");, +        Args.nullNotPermitted(out, "out");, +        Args.nullNotPermitted(chart, "chart");, +        Args.nullNotPermitted(file, "file");, +        Args.nullNotPermitted(chart, "chart");, +        Args.nullNotPermitted(file, "file");, +        Args.nullNotPermitted(chart, "chart");, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +import org.jfree.chart.util.Args;]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, +                block.getCenterX(), block.getCenterY(), orientation);]
[+++ /dev/null, +++ /dev/null, +++ b/lib/jcommon-1.0.21.jar]
[+++ b/ChangeLog, +	* source/org/jfree/chart/renderer/category/MultiValueRenderer.java:, +	Renamed ScatterRenderer.java;, +	* tests/org/jfree/chart/renderer/category/junit/MultiValueRendererTests.java:, +	Renamed ScatterRendererTests.java., +, +2007-10-11  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +	* source/org/jfree/chart/renderer/category/MultiValueRenderer.java:, +	Renamed ScatterRenderer.java;, +	* tests/org/jfree/chart/renderer/category/junit/MultiValueRendererTests.java:, +	Renamed ScatterRendererTests.java., +, +2007-10-11  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ b/ChangeLog, +	* source/org/jfree/chart/renderer/category/MultiValueRenderer.java:, +	Renamed ScatterRenderer.java;, +	* tests/org/jfree/chart/renderer/category/junit/MultiValueRendererTests.java:, +	Renamed ScatterRendererTests.java., +, +2007-10-11  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ b/source/org/jfree/chart/renderer/category/ScatterRenderer.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it , + * under the terms of the GNU Lesser General Public License as published by , + * the Free Software Foundation; either version 2.1 of the License, or , + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but , + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY , + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public , + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, , + * USA.  , + *, + * [Java is a trademark or registered trademark of Sun Microsystems, Inc. , + * in the United States and other countries.], + *, + * --------------------, + * ScatterRenderer.java, + * --------------------, + * (C) Copyright 2007, by Object Refinery Limited and Contributors., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   David Forslund;, + *, + * Changes, + * -------, + * 08-Oct-2007 : Version 1, based on patch 1780779 by David Forslund (DG);, + * 11-Oct-2007 : Renamed ScatterRenderer (DG);, + *, + */, +, +package org.jfree.chart.renderer.category;, +, +import java.awt.Graphics2D;, +import java.awt.Paint;, +import java.awt.Shape;, +import java.awt.Stroke;, +import java.awt.geom.Line2D;, +import java.awt.geom.Rectangle2D;, +import java.io.IOException;, +import java.io.ObjectInputStream;, +import java.io.ObjectOutputStream;, +import java.io.Serializable;, +import java.util.List;, +, +import org.jfree.chart.LegendItem;, +import org.jfree.chart.axis.CategoryAxis;, +import org.jfree.chart.axis.ValueAxis;, +import org.jfree.chart.event.RendererChangeEvent;, +import org.jfree.chart.plot.CategoryPlot;, +import org.jfree.chart.plot.PlotOrientation;, +import org.jfree.data.category.CategoryDataset;, +import org.jfree.data.statistics.MultiValueCategoryDataset;, +import org.jfree.util.BooleanList;, +import org.jfree.util.BooleanUtilities;, +import org.jfree.util.ObjectUtilities;, +import org.jfree.util.PublicCloneable;, +import org.jfree.util.ShapeUtilities;, +, +/**, + * A renderer that handles the multiple values from a , + * {@link MultiValueCategoryDataset} by plotting a shape for each value for , + * each given item in the dataset.]
[+++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/NEWS, +3561093 : Rendering anomaly for XYPlots;, +++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/NEWS, +3561093 : Rendering anomaly for XYPlots;, +++ b/README.txt, +?? August 2012 (NOT YET RELEASED), +1.0.15 : (??-Aug-2012), +++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/NEWS, +3561093 : Rendering anomaly for XYPlots;, +++ b/README.txt, +?? August 2012 (NOT YET RELEASED), +1.0.15 : (??-Aug-2012), +++ b/source/org/jfree/chart/renderer/RendererUtilities.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2007-2012, by Object Refinery Limited., + * 23-Aug-2012 : Fixed rendering anomaly bug 3561093 (DG);, +            while (index < itemCount && x < xLow) {, +            while (index >= 0 && x > xHigh) {, +++ b/ChangeLog, +2012-08-23  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3561093:, +    * org/jfree/chart/renderer/RendererUtilities.java, +    (findLiveItemsLowerBound): changed while loop expression,, +    (findLiveItemsUpperBound): likewise., +, +++ b/NEWS, +3561093 : Rendering anomaly for XYPlots;, +++ b/README.txt, +?? August 2012 (NOT YET RELEASED), +1.0.15 : (??-Aug-2012), +++ b/source/org/jfree/chart/renderer/RendererUtilities.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2007-2012, by Object Refinery Limited., + * 23-Aug-2012 : Fixed rendering anomaly bug 3561093 (DG);, +            while (index < itemCount && x < xLow) {, +            while (index >= 0 && x > xHigh) {, +++ b/tests/org/jfree/chart/renderer/junit/RendererUtilitiesTests.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2007-2012, by Object Refinery Limited and Contributors., + * 23-Aug-2012 : Added test3561093() (DG);, +import org.jfree.data.xy.XYSeries;, +import org.jfree.data.xy.XYSeriesCollection;, +        assertEquals(1, RendererUtilities.findLiveItemsUpperBound(d, 2, 3.0,, +        assertEquals(2, RendererUtilities.findLiveItemsUpperBound(d, 3, 2.0,, +        assertEquals(2, RendererUtilities.findLiveItemsUpperBound(d, 3, 3.0,, +        assertEquals(3, RendererUtilities.findLiveItemsUpperBound(d, 4, 2.0,, +        assertEquals(3, RendererUtilities.findLiveItemsUpperBound(d, 4, 3.0,, +        assertEquals(3, RendererUtilities.findLiveItemsUpperBound(d, 4, 4.0,, +    /**, +     * Checks the bounds calculation for a series where the x-ordering is not, +     * known.  See bug 3561093., +     */, +    public void test3561093() {, +        XYSeries s = new XYSeries("S1", false);, +        s.add(0.0, 0.0);, +        s.add(21.0, 0.0);, +        s.add(2.0, 0.0);, +        s.add(23.0, 0.0);, +        XYSeriesCollection dataset = new XYSeriesCollection();, +        dataset.addSeries(s);, +        , +        assertEquals(1, RendererUtilities.findLiveItemsLowerBound(dataset, 0, , +                10.0, 20.0));, +        assertEquals(2, RendererUtilities.findLiveItemsUpperBound(dataset, 0, , +                10.0, 20.0));, +        , +        int[] bounds = RendererUtilities.findLiveItems(dataset, 0, 10.0, 20.0);]
[+++ b/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java, + * (C) Copyright 2002-2017, by Object Refinery Limited., +        this.shadowPaint = Color.GRAY;, +                new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java, + * (C) Copyright 2002-2017, by Object Refinery Limited., +        this.shadowPaint = Color.GRAY;, +                new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java, + * (C) Copyright 2003-2017, by David Browning and Contributors., +        this.artifactPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java, + * (C) Copyright 2002-2017, by Object Refinery Limited., +        this.shadowPaint = Color.GRAY;, +                new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java, + * (C) Copyright 2003-2017, by David Browning and Contributors., +        this.artifactPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    private transient Paint groupPaint = Color.BLACK;, +            360, Arc2D.OPEN), null, Color.BLACK);, +            360, Arc2D.OPEN), null, Color.BLACK);, +                Arc2D.OPEN), null, Color.BLACK);, +                Arc2D.OPEN), null, Color.BLACK);]
[+++ /dev/null, +++ /dev/null, +++ b/lib/orsonpdf-1.4-eval.jar]
[+++ /dev/null, +++ /dev/null, +++ b/maven/pom-javafx.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<project xmlns="http://maven.apache.org/POM/4.0.0", +         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0, +                             http://maven.apache.org/maven-v4_0_0.xsd">, +, +    <modelVersion>4.0.0</modelVersion>, +, +    <name>JFreeChart</name>, +, +    <artifactId>jfreechart</artifactId>, +    <groupId>org.jfree</groupId>, +    <version>1.5.0-SNAPSHOT</version>, +    <packaging>jar</packaging>, +, +    <!-- this is required to host it on Sonatype's OSSRH -->, +    <parent>, +        <groupId>org.sonatype.oss</groupId>, +        <artifactId>oss-parent</artifactId>, +        <version>9</version>, +    </parent>, +, +    <organization>, +        <name>JFree.org</name>, +        <url>http://www.jfree.org/</url>, +    </organization>, +    <inceptionYear>2001</inceptionYear>, +, +    <description>, +        JFreeChart is a class library, written in Java, for generating charts. , +        Utilising the Java2D APIs, it currently supports bar charts, pie charts, , +        line charts, XY-plots and time series plots., +    </description>, +, +    <url>http://www.jfree.org/jfreechart/</url>, +    <issueManagement>, +        <url>https://github.com/jfree/jfreechart/issues</url>, +        <system>GitHub Issues</system>, +    </issueManagement>, +    <scm>, +        <connection>scm:git:git:https://github.com/jfree/jfreechart.git</connection>, +        <url>https://github.com/jfree/jfreechart</url>, +    </scm>, +, +    <licenses>, +        <license>, +            <name>GNU Lesser General Public Licence</name>, +            <url>http://www.gnu.org/licenses/lgpl.txt</url>, +            <distribution>repo</distribution>, +        </license>, +    </licenses>, +, +    <dependencies>, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jcommon</artifactId>, +            <version>1.0.23</version>, +        </dependency>, +, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +        <!-- JFreeSVG enables SVG export -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jfreesvg</artifactId>, +            <version>3.0</version>, +        </dependency>, +        , +        <!-- OrsonPDF enables PDF export -->, +        <dependency>, +            <groupId>com.orsonpdf</groupId>, +            <artifactId>orsonpdf</artifactId>, +            <version>1.7</version>, +        </dependency>, +, +        <dependency>, +            <groupId>javax.servlet</groupId>, +            <artifactId>servlet-api</artifactId>, +            <version>2.5</version>, +            <scope>provided</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>junit</groupId>, +            <artifactId>junit</artifactId>, +            <version>4.11</version>, +            <scope>test</scope>, +        </dependency>, +, +    </dependencies>, +, +    <distributionManagement>]
[+++ b/src/main/java/org/jfree/chart/util/SerialUtils.java, +     * Returns {@code true} if a class implements {@code Serializable}, +     * and {@code false} otherwise., +    public static boolean isSerializable(Class c) {, +     * @param stream  the input stream ({@code null} not permitted)., +     * @return The paint object (possibly {@code null})., +    public static Paint readPaint(ObjectInputStream stream), +        boolean isNull = stream.readBoolean();, +                float x1 = stream.readFloat();, +                float y1 = stream.readFloat();, +                Color c1 = (Color) stream.readObject();, +                float x2 = stream.readFloat();, +                float y2 = stream.readFloat();, +                Color c2 = (Color) stream.readObject();, +                boolean isCyclic = stream.readBoolean();, +     * Serialises a {@code Paint} object., +     * @param paint  the paint object ({@code null} permitted)., +     * @param stream  the output stream ({@code null} not permitted)., +    public static void writePaint(Paint paint, ObjectOutputStream stream), +    public static Stroke readStroke(ObjectInputStream stream), +        boolean isNull = stream.readBoolean();, +            Class c = (Class) stream.readObject();, +                float width = stream.readFloat();, +                int cap = stream.readInt();, +                int join = stream.readInt();, +                float miterLimit = stream.readFloat();, +                float[] dash = (float[]) stream.readObject();, +                float dashPhase = stream.readFloat();, +                result = new BasicStroke(width, cap, join, miterLimit, dash, , +                        dashPhase);, +     * Serialises a {@code Stroke} object.  This code handles the, +     * {@code BasicStroke} class which is the only {@code Stroke}, +     * {@code Serializable})., +     * @param stroke  the stroke object ({@code null} permitted)., +     * @param stream  the output stream ({@code null} not permitted)., +    public static void writeStroke(Stroke stroke, ObjectOutputStream stream), +                BasicStroke s = (BasicStroke) stroke;, +            } else {, +        } else {, +    public static Composite readComposite(ObjectInputStream stream), +        boolean isNull = stream.readBoolean();, +            Class c = (Class) stream.readObject();, +                int rule = stream.readInt();, +                float alpha = stream.readFloat();, +     * Serialises a {@code Composite} object., +     * @param composite  the composite object ({@code null} permitted)., +     * @param stream  the output stream ({@code null} not permitted)., +    public static void writeComposite(Composite composite, , +            ObjectOutputStream stream) throws IOException {, +                AlphaComposite ac = (AlphaComposite) composite;, +        } else {, +     * Reads a {@code Shape} object that has been serialised by the, +     * @param stream  the input stream ({@code null} not permitted)., +     * @return The shape object (possibly {@code null})., +    public static Shape readShape(ObjectInputStream stream), +        boolean isNull = stream.readBoolean();, +            Class c = (Class) stream.readObject();, +                double x1 = stream.readDouble();, +                double y1 = stream.readDouble();, +                double x2 = stream.readDouble();, +                double y2 = stream.readDouble();, +                double x = stream.readDouble();, +                double y = stream.readDouble();, +                double w = stream.readDouble();, +                double h = stream.readDouble();, +                double x = stream.readDouble();, +                double y = stream.readDouble();, +                double w = stream.readDouble();, +                double h = stream.readDouble();, +                double x = stream.readDouble();, +                double y = stream.readDouble();, +                double w = stream.readDouble();, +                double h = stream.readDouble();, +                double as = stream.readDouble(); // Angle Start, +                double ae = stream.readDouble(); // Angle Extent, +                int at = stream.readInt();       // Arc type, +                GeneralPath gp = new GeneralPath();, +                float[] args = new float[6];, +                    int type = stream.readInt();, +     * Serialises a {@code Shape} object., +     * @param shape  the shape object ({@code null} permitted)., +     * @param stream  the output stream ({@code null} not permitted)., +    public static void writeShape(Shape shape, ObjectOutputStream stream), +     * Reads a {@code Point2D} object that has been serialised by the, +     * @param stream  the input stream ({@code null} not permitted)., +     * @return The point object (possibly {@code null})., +    public static Point2D readPoint2D(ObjectInputStream stream), +        boolean isNull = stream.readBoolean();, +            double x = stream.readDouble();, +            double y = stream.readDouble();, +     * Serialises a {@code Point2D} object., +     * @param p  the point object ({@code null} permitted)., +     * @param stream  the output stream ({@code null} not permitted)., +    public static void writePoint2D(Point2D p, ObjectOutputStream stream), +     * Serialises an {@code AttributedString} object., +     * @param as  the attributed string object ({@code null} permitted)., +     * @param stream  the output stream ({@code null} not permitted).]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +        Boolean flag = getSeriesShapesFilled(series);, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +        Boolean flag = getSeriesShapesFilled(series);, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +        Boolean flag = getSeriesShapesFilled(series);, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +++ b/src/main/java/org/jfree/data/time/TimeSeriesCollection.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +        Boolean flag = getSeriesShapesFilled(series);, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +++ b/src/main/java/org/jfree/data/time/TimeSeriesCollection.java, +++ b/src/main/java/org/jfree/data/time/Year.java, +        this(time, TimeZone.getDefault(), Locale.getDefault());, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +        Boolean flag = getSeriesShapesFilled(series);, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +++ b/src/main/java/org/jfree/data/time/TimeSeriesCollection.java, +++ b/src/main/java/org/jfree/data/time/Year.java, +        this(time, TimeZone.getDefault(), Locale.getDefault());, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +        Boolean flag = getSeriesShapesFilled(series);, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +++ b/src/main/java/org/jfree/data/time/TimeSeriesCollection.java, +++ b/src/main/java/org/jfree/data/time/Year.java, +        this(time, TimeZone.getDefault(), Locale.getDefault());, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java, +++ b/src/test/java/org/jfree/data/time/DayTest.java, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(1078099199999L, d1.getLastMillisecond(cal));, +        assertEquals(1078099200000L, d2.getFirstMillisecond(cal));, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(1078091999999L, d1.getLastMillisecond(cal));, +        assertEquals(1078092000000L, d2.getFirstMillisecond(cal));, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(-621187200000L, d.getFirstMillisecond(cal));, +            d.getFirstMillisecond((Calendar) null);, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(-628358400001L, d.getLastMillisecond(cal));, +            d.getLastMillisecond((Calendar) null);, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);, +        Boolean flag = getSeriesShapesVisible(series);, +        Boolean flag = getSeriesShapesFilled(series);, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +++ b/src/main/java/org/jfree/data/time/TimeSeriesCollection.java, +++ b/src/main/java/org/jfree/data/time/Year.java, +        this(time, TimeZone.getDefault(), Locale.getDefault());, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java, +++ b/src/test/java/org/jfree/data/time/DayTest.java, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(1078099199999L, d1.getLastMillisecond(cal));, +        assertEquals(1078099200000L, d2.getFirstMillisecond(cal));, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(1078091999999L, d1.getLastMillisecond(cal));, +        assertEquals(1078092000000L, d2.getFirstMillisecond(cal));, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(-621187200000L, d.getFirstMillisecond(cal));, +            d.getFirstMillisecond((Calendar) null);, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(-628358400001L, d.getLastMillisecond(cal));, +            d.getLastMillisecond((Calendar) null);, +++ b/src/test/java/org/jfree/data/time/HourTest.java, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(1014307199999L, h1.getLastMillisecond(cal));, +        assertEquals(1014307200000L, h2.getFirstMillisecond(cal));, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(1014267599999L, h1.getLastMillisecond(cal));, +        assertEquals(1014267600000L, h2.getFirstMillisecond(cal));, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(-623293200000L, h.getFirstMillisecond(cal));, +            h.getFirstMillisecond((Calendar) null);, +        Calendar cal = Calendar.getInstance(zone);, +        assertEquals(-614959200001L, h.getLastMillisecond(cal));, +            h.getLastMillisecond((Calendar) null);, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        Boolean flag = getSeriesLinesVisible(series);]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., + * 20-Feb-2017 : Add update for crosshairs (DG);, +        int datasetIndex = plot.indexOf(dataset);, +        updateCrosshairValues(crosshairState, x, y, datasetIndex,, +                block.getCenterX(), block.getCenterX(), orientation);, +]
[+++ b/maven/pom-1.6.xml, +++ b/maven/pom-1.6.xml, +++ b/pom.xml]
[+++ b/src/main/java/org/jfree/data/DomainInfo.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited., + * {@link org.jfree.data.general.DatasetUtils} will iterate over all the ]
[+++ b/src/main/java/org/jfree/chart/demo/PieChartDemo1.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        plot.setSectionPaint("Others", , +                createGradientPaint(new Color(200, 200, 255), Color.BLUE));, +        plot.setSectionPaint("Samsung", , +                createGradientPaint(new Color(255, 200, 200), Color.RED));, +        plot.setSectionPaint("Apple", , +                createGradientPaint(new Color(200, 255, 200), Color.GREEN));, +        plot.setSectionPaint("Nokia", , +                createGradientPaint(new Color(200, 255, 200), Color.YELLOW));, +        plot.setDefaultSectionOutlinePaint(Color.WHITE);, +        plot.setDefaultSectionOutlineStroke(new BasicStroke(2.0f));, +++ b/src/main/java/org/jfree/chart/demo/PieChartDemo1.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        plot.setSectionPaint("Others", , +                createGradientPaint(new Color(200, 200, 255), Color.BLUE));, +        plot.setSectionPaint("Samsung", , +                createGradientPaint(new Color(255, 200, 200), Color.RED));, +        plot.setSectionPaint("Apple", , +                createGradientPaint(new Color(200, 255, 200), Color.GREEN));, +        plot.setSectionPaint("Nokia", , +                createGradientPaint(new Color(200, 255, 200), Color.YELLOW));, +        plot.setDefaultSectionOutlinePaint(Color.WHITE);, +        plot.setDefaultSectionOutlineStroke(new BasicStroke(2.0f));, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    /** The default section paint (fallback). */, +    private transient Paint defaultSectionPaint;, +    /** The default section outline paint (fallback). */, +    private transient Paint defaultSectionOutlinePaint;, +    /** The default section outline stroke (fallback). */, +    private transient Stroke defaultSectionOutlineStroke;, +        this.defaultSectionPaint = Color.gray;, +        this.defaultSectionOutlinePaint = DEFAULT_OUTLINE_PAINT;, +        this.defaultSectionOutlineStroke = DEFAULT_OUTLINE_STROKE;, +     * <li>if {@link #getSectionPaint(Comparable)} is non-{@code null} return, +     * <li>if {@link #getSectionPaint(Comparable)} is {@code null} but, +     * <li>if all else fails, return {@link #getDefaultSectionPaint()}., +                result = this.defaultSectionPaint;, +            result = this.defaultSectionPaint;, +     * Returns the default section paint.  This is used when no other paint is, +     * @see #setDefaultSectionPaint(Paint), +    public Paint getDefaultSectionPaint() {, +        return this.defaultSectionPaint;, +     * Sets the default section paint and sends a {@link PlotChangeEvent} to all, +     * @see #getDefaultSectionPaint(), +    public void setDefaultSectionPaint(Paint paint) {, +        this.defaultSectionPaint = paint;, +     * <li>if {@link #getSectionOutlinePaint(Comparable)} is, +     * <li>if {@link #getSectionOutlinePaint(Comparable)} is {@code null} but, +     * <li>if all else fails, return {@link #getDefaultSectionOutlinePaint()}., +                result = this.defaultSectionOutlinePaint;, +            result = this.defaultSectionOutlinePaint;, +     * Returns the default section paint.  This is used when no other paint is, +     * @see #setDefaultSectionOutlinePaint(Paint), +    public Paint getDefaultSectionOutlinePaint() {, +        return this.defaultSectionOutlinePaint;, +     * Sets the default section paint., +     * @see #getDefaultSectionOutlinePaint(), +    public void setDefaultSectionOutlinePaint(Paint paint) {, +        this.defaultSectionOutlinePaint = paint;, +     * <li>if {@link #getSectionOutlineStroke(Comparable)} is, +     * <li>if {@link #getSectionOutlineStroke(Comparable)} is {@code null} but, +     * <li>if all else fails, return {@link #getDefaultSectionOutlineStroke()}., +                result = this.defaultSectionOutlineStroke;, +            result = this.defaultSectionOutlineStroke;, +     * Returns the default section stroke.  This is used when no other stroke is, +     * @see #setDefaultSectionOutlineStroke(Stroke), +    public Stroke getDefaultSectionOutlineStroke() {, +        return this.defaultSectionOutlineStroke;, +     * Sets the default section stroke., +     * @see #getDefaultSectionOutlineStroke(), +    public void setDefaultSectionOutlineStroke(Stroke stroke) {, +        this.defaultSectionOutlineStroke = stroke;, +        if (!PaintUtils.equal(this.defaultSectionPaint,, +                that.defaultSectionPaint)) {, +        if (!PaintUtils.equal(this.defaultSectionOutlinePaint,, +                that.defaultSectionOutlinePaint)) {, +        if (!ObjectUtils.equal(this.defaultSectionOutlineStroke,, +                that.defaultSectionOutlineStroke)) {, +        SerialUtils.writePaint(this.defaultSectionPaint, stream);, +        SerialUtils.writePaint(this.defaultSectionOutlinePaint, stream);, +        SerialUtils.writeStroke(this.defaultSectionOutlineStroke, stream);, +        this.defaultSectionPaint = SerialUtils.readPaint(stream);, +        this.defaultSectionOutlinePaint = SerialUtils.readPaint(stream);, +        this.defaultSectionOutlineStroke = SerialUtils.readStroke(stream);]
[+++ /dev/null, +++ /dev/null, +++ b/ant/build.xml, +<!-- An ANT build file for JFreeChart -->, +        <property name="jfreechart.version" value="1.0.20" />, +        <property name="jcommon.version" value="1.0.24" />, +        <property name="src.version" value="1.6"/>, +        <property name="target.version" value="1.6"/>, +            <exclude name="org/jfree/chart/fx/**"/>, +    <!-- Generate the JFreeChart source code jar -->, +    <target name="source-jar" depends="initialise", +            description="Package the JFreeChart source code in a jar">, +, +        <!-- create a temp build directory -->, +        <mkdir dir="${basedir}/source-jar"/>, +, +        <!-- copy source code -->, +        <copy todir="${basedir}/source-jar/">, +            <fileset dir="${basedir}/src/main/java"/>, +        </copy>, +, +        <!-- make the jar -->, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-src.jar", +             basedir="${basedir}/source-jar">, +        </jar>, +, +        <!-- delete the temp directory -->, +        <delete dir="${basedir}/source-jar"/>, +, +    </target>, +                <exclude name="org/jfree/chart/fx/**"/>, +               source="1.6", +               target="1.6", +            depends="compile,zip-javadocs,zip,source-jar", +++ /dev/null, +++ b/ant/build.xml, +<!-- An ANT build file for JFreeChart -->, +        <property name="jfreechart.version" value="1.0.20" />, +        <property name="jcommon.version" value="1.0.24" />, +        <property name="src.version" value="1.6"/>, +        <property name="target.version" value="1.6"/>, +            <exclude name="org/jfree/chart/fx/**"/>, +    <!-- Generate the JFreeChart source code jar -->, +    <target name="source-jar" depends="initialise", +            description="Package the JFreeChart source code in a jar">, +, +        <!-- create a temp build directory -->, +        <mkdir dir="${basedir}/source-jar"/>, +, +        <!-- copy source code -->, +        <copy todir="${basedir}/source-jar/">, +            <fileset dir="${basedir}/src/main/java"/>, +        </copy>, +, +        <!-- make the jar -->, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-src.jar", +             basedir="${basedir}/source-jar">, +        </jar>, +, +        <!-- delete the temp directory -->, +        <delete dir="${basedir}/source-jar"/>, +, +    </target>, +                <exclude name="org/jfree/chart/fx/**"/>, +               source="1.6", +               target="1.6", +            depends="compile,zip-javadocs,zip,source-jar", +++ /dev/null, +++ /dev/null, +++ b/ant/build.xml, +<!-- An ANT build file for JFreeChart -->, +        <property name="jfreechart.version" value="1.0.20" />, +        <property name="jcommon.version" value="1.0.24" />, +        <property name="src.version" value="1.6"/>, +        <property name="target.version" value="1.6"/>, +            <exclude name="org/jfree/chart/fx/**"/>, +    <!-- Generate the JFreeChart source code jar -->, +    <target name="source-jar" depends="initialise", +            description="Package the JFreeChart source code in a jar">, +, +        <!-- create a temp build directory -->, +        <mkdir dir="${basedir}/source-jar"/>, +, +        <!-- copy source code -->, +        <copy todir="${basedir}/source-jar/">, +            <fileset dir="${basedir}/src/main/java"/>, +        </copy>, +, +        <!-- make the jar -->, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-src.jar", +             basedir="${basedir}/source-jar">, +        </jar>, +, +        <!-- delete the temp directory -->, +        <delete dir="${basedir}/source-jar"/>, +, +    </target>, +                <exclude name="org/jfree/chart/fx/**"/>, +               source="1.6", +               target="1.6"]
[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/HashUtils.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it , + * under the terms of the GNU Lesser General Public License as published by , + * the Free Software Foundation; either version 2.1 of the License, or , + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but , + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY , + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public , + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, , + * USA.  , + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ------------------, + * HashUtilities.java, + * ------------------, + * (C) Copyright 2006-2016, by Object Refinery Limited;, + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 03-Oct-2006 : Version 1 (DG);, + * 06-Mar-2007 : Fix for hashCodeForDoubleArray() method (DG);, + * 13-Nov-2007 : Added new utility methods (DG);, + * 22-Nov-2007 : Added hashCode() method for 'int' (DG);, + * 05-Dec-2007 : Added special methods to handle BooleanList, PaintList,, + *               and StrokeList (DG);, + *, + */, +, +package org.jfree.chart;, +, +import java.awt.GradientPaint;, +import java.awt.Paint;, +import java.awt.Stroke;, +import org.jfree.chart.util.BooleanList;, +import org.jfree.chart.util.PaintList;, +import org.jfree.chart.util.StrokeList;, +, +/**, + * Some utility methods for calculating hash codes.  , + * , + * @since 1.0.3, + */, +public class HashUtils {, +    , +    /**, +     * Returns a hash code for a {@code Paint} instance.  If , +     * {@code p} is {@code null}, this method returns zero., +     * , +     * @param p  the paint ({@code null} permitted)., +     * , +     * @return The hash code., +     */, +    public static int hashCodeForPaint(Paint p) {, +        if (p == null) {, +            return 0;, +        }, +        int result;, +        // handle GradientPaint as a special case, +        if (p instanceof GradientPaint) {, +            GradientPaint gp = (GradientPaint) p;, +            result = 193;, +            result = 37 * result + gp.getColor1().hashCode();, +            result = 37 * result + gp.getPoint1().hashCode();, +            result = 37 * result + gp.getColor2().hashCode();, +            result = 37 * result + gp.getPoint2().hashCode();, +        }, +        else {, +            // we assume that all other Paint instances implement equals() and, +            // hashCode()...of course that might not be true, but what can we, +            // do about it?, +            result = p.hashCode();, +        }, +        return result;, +    }, +    , +    /**, +     * Returns a hash code for a {@code double[]} instance.  If the array, +     * is {@code null}, this method returns zero., +     * , +     * @param a  the array ({@code null} permitted).]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java, + * (C) Copyright 2003-2017, by David Browning and Contributors., +    private transient Paint artifactPaint = Color.BLACK;, +        this.boxPaint = Color.GREEN;]
[+++ b/.gitignore, +++ b/.gitignore, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * 06-Feb-2017 : Add dispose() call for graphics object, see issue #38 (DG);, +                bufferG2.dispose();]
[+++ b/NEWS, +JFreeChart 1.0.16, +-----------------, +Not yet released, +, +Bug Fixes:, +1107 : Fixed TimeZone issue in PeriodAxis., +, +Also fixed a memory leak in the SWT ChartComposite class., +, +, +++ b/NEWS, +JFreeChart 1.0.16, +-----------------, +Not yet released, +, +Bug Fixes:, +1107 : Fixed TimeZone issue in PeriodAxis., +, +Also fixed a memory leak in the SWT ChartComposite class., +, +, +++ b/README.txt, +*  JFREECHART: Version 1.0.16  *, +?? ??? 2013, +on the Java 2 Platform (JRE 1.6.0 or later) and uses the Java 2D API for, +(jfreechart-1.0.16-install.pdf) from the JFreeChart home, +(a)  JRE/JDK 1.6.0 or higher - note that the previous release of JFreeChart, +worked with JRE/JDK 1.4.2 or later.  It may be possible to get JFreeChart , +working on these older versions, but we are no longer actively checking., +demo (using JDK 1.6.0 or later), use the following command:, +    java -jar jfreechart-1.0.16-demo.jar, +1.0.16 : (?-???-2013), +        - see the NEWS and ChangeLog files for details., +]
[+++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, + * (C) Copyright 2002-2017, by Object Refinery Limited., +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, + * (C) Copyright 2002-2017, by Object Refinery Limited., +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +++ b/src/main/java/org/jfree/data/KeyedValues2DItemKey.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2017, by Object Refinery Limited., + * @param <R> the row key type., + * @param <C> the column key type., +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, + * (C) Copyright 2002-2017, by Object Refinery Limited., +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +     * @param notify  notify listeners?, +++ b/src/main/java/org/jfree/data/KeyedValues2DItemKey.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2017, by Object Refinery Limited., + * @param <R> the row key type., + * @param <C> the column key type., +++ b/src/main/java/org/jfree/data/time/ohlc/OHLCSeries.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +     * @return The item removed., +     *]
[+++ b/README.txt, +?? July 2014, +Orson Charts, a new 3D chart library by Object Refinery Limited.  You can find , +out more about Orson Charts at:, +1.0.18 : (??-Jul-2014), +        - added JavaFX support;]
[+++ b/.gitignore, +, +# Eclipse files #, +/.classpath, +/.project, +/.settings]
[+++ b/.gitignore, +/javadoc/]
[+++ b/ChangeLog, +	* experimental/org/jfree/experimental/chart/plot/dial/StandardDialFrame.java:, +	Removed and renamed ArcDialFrame.java,, +	* experimental/org/jfree/experimental/chart/plot/dial/ArcDialFrame.java:, +	New file., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +	* experimental/org/jfree/experimental/chart/plot/dial/StandardDialFrame.java:, +	Removed and renamed ArcDialFrame.java,, +	* experimental/org/jfree/experimental/chart/plot/dial/ArcDialFrame.java:, +	New file., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/experimental/org/jfree/experimental/chart/plot/dial/ArcDialFrame.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it , + * under the terms of the GNU Lesser General Public License as published by , + * the Free Software Foundation; either version 2.1 of the License, or , + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but , + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY , + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public , + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, , + * USA.  , + *, + * [Java is a trademark or registered trademark of Sun Microsystems, Inc. , + * in the United States and other countries.], + *, + * -----------------, + * ArcDialFrame.java, + * -----------------, + * (C) Copyright 2006, 2007, by Object Refinery Limited., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 03-Nov-2006 : Version 1 (DG);, + * 08-Mar-2007 : Fix in hashCode() (DG);, + * 17-Oct-2007 : Updated equals() (DG);, + * 24-Oct-2007 : Added argument checks and API docs, and renamed , + *               StandardDialFrame --> ArcDialFrame (DG);, + * , + */, +, +package org.jfree.experimental.chart.plot.dial;, +, +import java.awt.BasicStroke;, +import java.awt.Color;, +import java.awt.Graphics2D;, +import java.awt.Paint;, +import java.awt.Shape;, +import java.awt.Stroke;, +import java.awt.geom.Arc2D;, +import java.awt.geom.Area;, +import java.awt.geom.GeneralPath;, +import java.awt.geom.Point2D;, +import java.awt.geom.Rectangle2D;, +import java.io.IOException;, +import java.io.ObjectInputStream;, +import java.io.ObjectOutputStream;, +import java.io.Serializable;, +, +import org.jfree.chart.HashUtilities;, +import org.jfree.io.SerialUtilities;, +import org.jfree.util.PaintUtilities;, +import org.jfree.util.PublicCloneable;, +, +/**, + * A standard frame for the {@link DialPlot} class., + */, +public class ArcDialFrame extends AbstractDialLayer implements DialFrame, , +        Cloneable, PublicCloneable, Serializable {, +    , +    /**, +     * The color used for the front of the panel.  This field is transient, +     * because it requires special handling for serialization., +     */, +    private transient Paint backgroundPaint;, +    , +    /**, +     * The color used for the border around the window. This field is transient, +     * because it requires special handling for serialization., +     */]
[+++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, +    private List<Crosshair> xCrosshairs;, +    private List<Crosshair> yCrosshairs;, +        this.xCrosshairs = new java.util.ArrayList<Crosshair>();, +        this.yCrosshairs = new java.util.ArrayList<Crosshair>();, +        List<Crosshair> crosshairs = getDomainCrosshairs();, +        for (Crosshair c : crosshairs) {, +    public List<Crosshair> getDomainCrosshairs() {, +        return new ArrayList<Crosshair>(this.xCrosshairs);, +        List<Crosshair> crosshairs = getRangeCrosshairs();, +        for (Crosshair c : crosshairs) {, +    public List<Crosshair> getRangeCrosshairs() {, +        return new ArrayList<Crosshair>(this.yCrosshairs);, +        Iterator<Crosshair> iterator = this.xCrosshairs.iterator();, +            Crosshair ch = iterator.next();, +            Crosshair ch = iterator.next();]
[+++ b/ant/build-fx.xml, +        <property name="fxgraphics2d.version" value="1.3" />]
[+++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +, +        ValueAxis xAxis = getDomainAxisForDataset(datasetIndex);]
[+++ b/ChangeLog, +2014-07-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/axis/NumberTickUnitSource.java, +    (integers): New field,, +    (formatter): New field,, +    (NumberTickUnitSource(boolean)): New constructor,, +    (NumberTickUnitSource(boolean, NumberFormatter): Likewise,, +    (getCeilingTickUnit): Update for factors and integer setting,, +    (next): Add factor 2 and limits,, +    (previous): Likewise,, +    (getTickLabelFormat): Add override,, +    (equals): Take account of new fields, , +    * org/jfree/chart/axis/LogAxis.java, +    (java2DToValue): Use minimum value if required,, +    (selectHorizontalAutoTickUnit): Likewise,, +    (selectVerticalAutoTickUnit): Likewise,, +    * org/jfree/chart/axis/NumberAxis.java, +    (createStandardTickUnits): Return a NumberTickUnitSource,, +    (createIntegerTickUnits): Likewise,, +    * org/jfree/chart/axis/ValueAxis.java, +    (zoomRange): Handle limits. , +, +++ b/ChangeLog, +2014-07-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/axis/NumberTickUnitSource.java, +    (integers): New field,, +    (formatter): New field,, +    (NumberTickUnitSource(boolean)): New constructor,, +    (NumberTickUnitSource(boolean, NumberFormatter): Likewise,, +    (getCeilingTickUnit): Update for factors and integer setting,, +    (next): Add factor 2 and limits,, +    (previous): Likewise,, +    (getTickLabelFormat): Add override,, +    (equals): Take account of new fields, , +    * org/jfree/chart/axis/LogAxis.java, +    (java2DToValue): Use minimum value if required,, +    (selectHorizontalAutoTickUnit): Likewise,, +    (selectVerticalAutoTickUnit): Likewise,, +    * org/jfree/chart/axis/NumberAxis.java, +    (createStandardTickUnits): Return a NumberTickUnitSource,, +    (createIntegerTickUnits): Likewise,, +    * org/jfree/chart/axis/ValueAxis.java, +    (zoomRange): Handle limits. , +, +++ b/NEWS, +3 July 2014, +support super-scripted labels, improved the tick label generation for, +NumberAxis, added a new ProbabilityAxis (patch from John St. Ledger), , +enhanced XYStepAreaRenderer to support a 'stepPoint' attribute (patch from , +Lukasz Rzeszotarski), provided configurable direction labels in , +CompassFormat (patch from Simon Legner), added methods to add data item , +objects to VectorSeries, XIntervalSeries, YIntervalSeries and , +XYIntervalSeries (for consistency with other data series objects), , +improved the TimeSeries range calculations, provided center text support , +for the RingPlot class, and updated JCommon to version 1.0.22 (this fixes , +a bug in pie label rendering)., +++ b/ChangeLog, +2014-07-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/axis/NumberTickUnitSource.java, +    (integers): New field,, +    (formatter): New field,, +    (NumberTickUnitSource(boolean)): New constructor,, +    (NumberTickUnitSource(boolean, NumberFormatter): Likewise,, +    (getCeilingTickUnit): Update for factors and integer setting,, +    (next): Add factor 2 and limits,, +    (previous): Likewise,, +    (getTickLabelFormat): Add override,, +    (equals): Take account of new fields, , +    * org/jfree/chart/axis/LogAxis.java, +    (java2DToValue): Use minimum value if required,, +    (selectHorizontalAutoTickUnit): Likewise,, +    (selectVerticalAutoTickUnit): Likewise,, +    * org/jfree/chart/axis/NumberAxis.java, +    (createStandardTickUnits): Return a NumberTickUnitSource,, +    (createIntegerTickUnits): Likewise,, +    * org/jfree/chart/axis/ValueAxis.java, +    (zoomRange): Handle limits. , +, +++ b/NEWS, +3 July 2014, +support super-scripted labels, improved the tick label generation for, +NumberAxis, added a new ProbabilityAxis (patch from John St. Ledger), , +enhanced XYStepAreaRenderer to support a 'stepPoint' attribute (patch from , +Lukasz Rzeszotarski), provided configurable direction labels in , +CompassFormat (patch from Simon Legner), added methods to add data item , +objects to VectorSeries, XIntervalSeries, YIntervalSeries and , +XYIntervalSeries (for consistency with other data series objects), , +improved the TimeSeries range calculations, provided center text support , +for the RingPlot class, and updated JCommon to version 1.0.22 (this fixes , +a bug in pie label rendering)., +++ b/README.txt, +3 July 2014, +1.0.18 : (3-Jul-2014), +        - added JavaFX support via FXGraphics2D;, +        - improved numeric tick labelling;]
[+++ b/ChangeLog, +2014-07-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/axis/Axis.java, +    (drawAxisLine): Add rendering hint,, +    * org/jfree/chart/axis/CategoryAxis.java, +    (drawTickMarks): Add rendering hint,, +    * org/jfree/chart/axis/ValueAxis.java, +    (drawAxisLine): Add rendering hint,, +    (drawTickMarksAndLabels): Likewise,, +    * org/jfree/chart/block/LineBorder.java, +    (draw): Add rendering hint,, +    * org/jfree/chart/plot/FastScatterPlot.java, +    (drawDomainGridlines): Add rendering hint,, +    (drawRangeGridlines): Likewise,, +    * org/jfree/chart/plot/Plot.java, +    (drawOutline): Add rendering hint,, +    * org/jfree/chart/plot/XYPlot.java, +    (drawDomainCrosshair): Add rendering hint,, +    (drawRangeCrosshair): Likewise,, +    * org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +    (drawRangeLine): Add rendering hint,, +    * org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +    (drawDomainLine): Add rendering hint,, +    (drawRangeLine): Likewise., +, +++ b/ChangeLog, +2014-07-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/axis/Axis.java, +    (drawAxisLine): Add rendering hint,, +    * org/jfree/chart/axis/CategoryAxis.java, +    (drawTickMarks): Add rendering hint,, +    * org/jfree/chart/axis/ValueAxis.java, +    (drawAxisLine): Add rendering hint,, +    (drawTickMarksAndLabels): Likewise,, +    * org/jfree/chart/block/LineBorder.java, +    (draw): Add rendering hint,, +    * org/jfree/chart/plot/FastScatterPlot.java, +    (drawDomainGridlines): Add rendering hint,, +    (drawRangeGridlines): Likewise,, +    * org/jfree/chart/plot/Plot.java, +    (drawOutline): Add rendering hint,, +    * org/jfree/chart/plot/XYPlot.java, +    (drawDomainCrosshair): Add rendering hint,, +    (drawRangeCrosshair): Likewise,, +    * org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +    (drawRangeLine): Add rendering hint,, +    * org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +    (drawDomainLine): Add rendering hint,, +    (drawRangeLine): Likewise., +, +++ b/NEWS, +JFreeChart 1.0.19, +-----------------, +31 July 2014, +, +This maintenance release corrects some issues in the new JavaFX support that, +was added in the 1.0.18 release, as well as some general issues., +, +Bug Fixes:, +, +- fixed clipping issues for combined plots in JavaFX;, +- fix a memory leak in the new JavaFX ChartCanvas class;, +- CombinedDomainXYPlot and CombinedRangeXYPlot now take into account the, +  pannable flags in the subplots;, +- FastScatterPlot panning direction is corrected;, +- added rendering hints to sharpen gridlines and borders in most output formats;, +- JFreeSVG updated to version 2.0., +, +, +++ b/ChangeLog, +2014-07-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/axis/Axis.java, +    (drawAxisLine): Add rendering hint,, +    * org/jfree/chart/axis/CategoryAxis.java, +    (drawTickMarks): Add rendering hint,, +    * org/jfree/chart/axis/ValueAxis.java, +    (drawAxisLine): Add rendering hint,, +    (drawTickMarksAndLabels): Likewise,, +    * org/jfree/chart/block/LineBorder.java, +    (draw): Add rendering hint,, +    * org/jfree/chart/plot/FastScatterPlot.java, +    (drawDomainGridlines): Add rendering hint,, +    (drawRangeGridlines): Likewise,, +    * org/jfree/chart/plot/Plot.java, +    (drawOutline): Add rendering hint,, +    * org/jfree/chart/plot/XYPlot.java, +    (drawDomainCrosshair): Add rendering hint,, +    (drawRangeCrosshair): Likewise,, +    * org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +    (drawRangeLine): Add rendering hint,, +    * org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +    (drawDomainLine): Add rendering hint,, +    (drawRangeLine): Likewise., +, +++ b/NEWS, +JFreeChart 1.0.19, +-----------------]
[+++ b/src/main/java/org/jfree/data/xml/CategorySeriesHandler.java, +    public void addItem(Comparable key, Number value) {]
[+++ b/src/main/java/org/jfree/chart/util/PaintUtils.java, +            return Color.BLACK;, +                return Color.BLACK;, +++ b/src/main/java/org/jfree/chart/util/PaintUtils.java, +            return Color.BLACK;, +                return Color.BLACK;, +++ b/src/test/java/org/jfree/chart/axis/AxisTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        a1.setAxisLinePaint(Color.RED);, +        a1.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.BLACK));, +        a2.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.BLACK));, +        a1.setAxisLinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLACK));, +        a2.setAxisLinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLACK));, +        a1.setTickLabelPaint(new GradientPaint(1.0f, 2.0f, Color.YELLOW,, +                3.0f, 4.0f, Color.BLACK));, +        a2.setTickLabelPaint(new GradientPaint(1.0f, 2.0f, Color.YELLOW,, +                3.0f, 4.0f, Color.BLACK));, +        a1.setTickMarkPaint(new GradientPaint(1.0f, 2.0f, Color.CYAN,, +                3.0f, 4.0f, Color.BLACK));, +        a2.setTickMarkPaint(new GradientPaint(1.0f, 2.0f, Color.CYAN,, +                3.0f, 4.0f, Color.BLACK));]
[+++ b/README.txt, +    - Darshan Shah, +++ b/README.txt, +    - Darshan Shah, +++ b/source/org/jfree/chart/JFreeChart.java, + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors., +                new Contributor("Darshan Shah", "-"),]
[+++ b/src/main/java/org/jfree/chart/plot/MultiplePiePlot.java, +     * aggregated items.  The default value is {code Color.lightGray}., +     * For each key in the dataset, check the {@code sectionPaints}, +++ b/src/main/java/org/jfree/chart/plot/MultiplePiePlot.java, +     * aggregated items.  The default value is {code Color.lightGray}., +     * For each key in the dataset, check the {@code sectionPaints}, +++ b/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java, + * {@code StackedXYAreaRendererDemo1.java} program included in the, +     * @throws ClassCastException if {@code state} is not an instance of, +     *         {@code StackedXYAreaRendererState} or {@code dataset}, +     *         {@code series} for {@code index}., +++ b/src/main/java/org/jfree/chart/plot/MultiplePiePlot.java, +     * aggregated items.  The default value is {code Color.lightGray}., +     * For each key in the dataset, check the {@code sectionPaints}, +++ b/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java, + * {@code StackedXYAreaRendererDemo1.java} program included in the, +     * @throws ClassCastException if {@code state} is not an instance of, +     *         {@code StackedXYAreaRendererState} or {@code dataset}, +     *         {@code series} for {@code index}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, + * generated by the {@code XYAreaRenderer2Demo1.java} program included in, +++ b/src/main/java/org/jfree/chart/plot/MultiplePiePlot.java, +     * aggregated items.  The default value is {code Color.lightGray}., +     * For each key in the dataset, check the {@code sectionPaints}, +++ b/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java, + * {@code StackedXYAreaRendererDemo1.java} program included in the, +     * @throws ClassCastException if {@code state} is not an instance of, +     *         {@code StackedXYAreaRendererState} or {@code dataset}, +     *         {@code series} for {@code index}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java, + * generated by the {@code XYAreaRenderer2Demo1.java} program included in, +++ b/src/main/java/org/jfree/data/category/DefaultCategoryDataset.java, +     * @throws UnknownKeyException if {@code columnKey} is not defined]
[+++ b/README.txt, +*  JFREECHART: Version 1.0.13  *, +? March 2009, +(C)opyright 2000-2009, by Object Refinery Limited and Contributors., +(jfreechart-1.0.13-install.pdf) from the JFreeChart home, +    java -jar jfreechart-1.0.13-demo.jar, +1.0.13 : (??-Mar-2009), +        - see the NEWS and ChangeLog files for details., +, +1.0.12 : (31-Dec-2008)]
[+++ b/src/main/java/org/jfree/chart/block/LabelBlock.java, +     * Tests this {@code LabelBlock} for equality with an arbitrary object., +     * Returns a clone of this {@code LabelBlock} instance.]
[+++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +, +            this.datasets.put(0, dataset);, +            this.renderers.put(0, renderer);, +            this.domainAxes.put(0, domainAxis);, +            mapDatasetToDomainAxis(0, 0);, +, +            this.rangeAxes.put(0, rangeAxis);, +            mapDatasetToRangeAxis(0, 0);]
[+++ b/ChangeLog, +2011-10-07  Martin Hoeller  <martin.hoeller@xss.co.at>, +, +    * source/org/jfree/chart/renderer/PolarItemRenderer.java, +      (useFillPaint): New field,, +      (legendLine): Likewise;, +      (connectFirstAndLastPoint): New method,, +      (toolTipGeneratorList): Likewise,, +      (baseToolTipGenerator): Likewise,, +      (urlGenerator): Likewise,, +      (legendItemToolTipGenerator): Likewise,, +      (legendItemURLGenerator): Likewise,, +      (getConnectFirstAndLastPoint): Likewise,, +      (setConnectFirstAndLastPoint): Likewise,, +      (getUseFillPaint): Likewise,, +      (setUseFillPaint): Likewise,, +      (getLegendLine): Likewise,, +      (setLegendLine): Likewise,, +      (getToolTipGenerator): Likewise,, +      (getSeriesToolTipGenerator): Likewise,, +      (setSeriesToolTipGenerator): Likewise,, +      (getBaseToolTipGenerator): Likewise,, +      (setBaseToolTipGenerator): Likewise,, +      (getURLGenerator): Likewise,, +      (setURLGenerator): Likewise,, +      (getLegendItemToolTipGenerator): Likewise,, +      (setLegendItemToolTipGenerator): Likewise,, +      (getLegendItemURLGenerator): Likewise,, +      (setLegendItemURLGenerator): Likewise., +    * source/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, +      (getToolTipGenerator): New method,, +      (getSeriesToolTipGenerator): Likewise,, +      (setSeriesToolTipGenerator): Likewise,, +      (getBaseToolTipGenerator): Likewise,, +      (setBaseToolTipGenerator): Likewise,, +      (getURLGenerator): Likewise,, +      (setURLGenerator): Likewise., +    * source/org/jfree/chart/plot/PolarPlot.java, +      (angleOffset): New field,, +      (counterClockwise): Likewise;, +      (getAxisCount): New method,, +      (getDatasetCount): Likewise,, +      (getAngleOffset): Likewise,, +      (setAngleOffset): Likewise,, +      (isCounterClockwise): Likewise,, +      (setCounterClockwise): Likewise,, +      (getAxisIndex): Likewise,, +, +++ b/ChangeLog, +2011-10-07  Martin Hoeller  <martin.hoeller@xss.co.at>, +, +    * source/org/jfree/chart/renderer/PolarItemRenderer.java, +      (useFillPaint): New field,, +      (legendLine): Likewise;, +      (connectFirstAndLastPoint): New method,, +      (toolTipGeneratorList): Likewise,, +      (baseToolTipGenerator): Likewise,, +      (urlGenerator): Likewise,, +      (legendItemToolTipGenerator): Likewise,, +      (legendItemURLGenerator): Likewise,, +      (getConnectFirstAndLastPoint): Likewise,, +      (setConnectFirstAndLastPoint): Likewise,, +      (getUseFillPaint): Likewise,, +      (setUseFillPaint): Likewise,, +      (getLegendLine): Likewise,, +      (setLegendLine): Likewise,, +      (getToolTipGenerator): Likewise,, +      (getSeriesToolTipGenerator): Likewise,, +      (setSeriesToolTipGenerator): Likewise,, +      (getBaseToolTipGenerator): Likewise,, +      (setBaseToolTipGenerator): Likewise,, +      (getURLGenerator): Likewise,, +      (setURLGenerator): Likewise,, +      (getLegendItemToolTipGenerator): Likewise,, +      (setLegendItemToolTipGenerator): Likewise,, +      (getLegendItemURLGenerator): Likewise,, +      (setLegendItemURLGenerator): Likewise., +    * source/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, +      (getToolTipGenerator): New method,, +      (getSeriesToolTipGenerator): Likewise,, +      (setSeriesToolTipGenerator): Likewise,, +      (getBaseToolTipGenerator): Likewise,, +      (setBaseToolTipGenerator): Likewise,, +      (getURLGenerator): Likewise,, +      (setURLGenerator): Likewise., +    * source/org/jfree/chart/plot/PolarPlot.java, +      (angleOffset): New field,, +      (counterClockwise): Likewise;, +      (getAxisCount): New method,, +      (getDatasetCount): Likewise,, +      (getAngleOffset): Likewise,, +      (setAngleOffset): Likewise,, +      (isCounterClockwise): Likewise,, +      (setCounterClockwise): Likewise,, +      (getAxisIndex): Likewise,, +, +++ b/README.txt, +    - Martin Hoeller (xS+S), +++ b/ChangeLog, +2011-10-07  Martin Hoeller  <martin.hoeller@xss.co.at>]
[+++ b/ant/build-fx.xml, +        <property name="jfreechart.version" value="1.0.20-fx-pre" />, +        <property name="jfreesvg.version" value="2.1" />, +++ b/ant/build-fx.xml, +        <property name="jfreechart.version" value="1.0.20-fx-pre" />, +        <property name="jfreesvg.version" value="2.1" />, +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.20-pre" />, +++ b/ant/build-fx.xml, +        <property name="jfreechart.version" value="1.0.20-fx-pre" />, +        <property name="jfreesvg.version" value="2.1" />, +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.20-pre" />, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.20-pre" />, +        <property name="jfreesvg.version" value="2.1" />, +        <copy todir="${basedir}/distribution/svg">, +            <fileset dir="${basedir}/svg">, +            </fileset>, +        </copy>, +]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the, +     * {@code getSeriesShapesVisible()} method. You can override this method, +     * {@code getSeriesShapesFilled} method. You can override this method, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * draws the shapes which mark the item positions. If {@code entities}, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the, +     * {@code getSeriesShapesVisible()} method. You can override this method, +     * {@code getSeriesShapesFilled} method. You can override this method, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * draws the shapes which mark the item positions. If {@code entities}, +++ b/src/main/java/org/jfree/chart/servlet/ServletUtilities.java, +     * populates the {@code ChartRenderingInfo} object which can be used, +     * {@code RuntimeException} if the temporary directory is, +     * {@code null}.  Uses the system property {@code java.io.tmpdir}, +     * {@code JFreeChart_Deleter} if there is not already one bound to the, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the, +     * {@code getSeriesShapesVisible()} method. You can override this method, +     * {@code getSeriesShapesFilled} method. You can override this method, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * draws the shapes which mark the item positions. If {@code entities}, +++ b/src/main/java/org/jfree/chart/servlet/ServletUtilities.java, +     * populates the {@code ChartRenderingInfo} object which can be used, +     * {@code RuntimeException} if the temporary directory is, +     * {@code null}.  Uses the system property {@code java.io.tmpdir}, +     * {@code JFreeChart_Deleter} if there is not already one bound to the, +++ b/src/main/java/org/jfree/chart/title/LegendGraphic.java, +     * Tests this {@code LegendGraphic} instance for equality with an, +     * Returns a clone of this {@code LegendGraphic} instance., +     * @return A clone of this {@code LegendGraphic} instance., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the, +     * {@code getSeriesShapesVisible()} method. You can override this method, +     * {@code getSeriesShapesFilled} method. You can override this method, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * draws the shapes which mark the item positions. If {@code entities}, +++ b/src/main/java/org/jfree/chart/servlet/ServletUtilities.java, +     * populates the {@code ChartRenderingInfo} object which can be used, +     * {@code RuntimeException} if the temporary directory is, +     * {@code null}.  Uses the system property {@code java.io.tmpdir}, +     * {@code JFreeChart_Deleter} if there is not already one bound to the, +++ b/src/main/java/org/jfree/chart/title/LegendGraphic.java, +     * Tests this {@code LegendGraphic} instance for equality with an, +     * Returns a clone of this {@code LegendGraphic} instance., +     * @return A clone of this {@code LegendGraphic} instance., +++ b/src/main/java/org/jfree/chart/util/AttrStringUtils.java, + * Some {@code AttributedString} utilities., +     * Draws the attributed string at {@code (textX, textY)}, rotated by , +     * the specified angle about {@code (rotateX, rotateY)}., +     * specified angle about {@code (rotationX, rotationY)}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the]
[+++ /dev/null, +++ /dev/null, +++ b/src/test/java/org/jfree/chart/HashUtilsTest.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ------------------, + * HashUtilsTest.java, + * ------------------, + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 06-Mar-2007 : Version 1 (DG);, + *, + */, +, +package org.jfree.chart;, +, +import org.junit.Test;, +, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +, +/**, + * Tests for the {@link HashUtils} class., + */, +public class HashUtilsTest  {, +, +    /**, +     * Some sanity checks for the hashCodeForDoubleArray() method., +     */, +    @Test, +    public void testHashCodeForDoubleArray() {, +        double[] a1 = new double[] {1.0};, +        double[] a2 = new double[] {1.0};, +        int h1 = HashUtils.hashCodeForDoubleArray(a1);, +        int h2 = HashUtils.hashCodeForDoubleArray(a2);, +        assertEquals(h1, h2);, +, +        double[] a3 = new double[] {0.5, 1.0};, +        int h3 = HashUtils.hashCodeForDoubleArray(a3);, +        assertFalse(h1 == h3);, +    }, +}]
[+++ /dev/null, +++ /dev/null, +++ b/README_old.txt, +********************************, +*  JFREECHART: Version 1.0.19  *, +********************************, +, +31 July 2014, +, +(C)opyright 2000-2014, by Object Refinery Limited and Contributors., +, +-----------------, +1.  INTRODUCTION, +-----------------, +JFreeChart is a free chart library for the Java(tm) platform.  It runs, +on the Java 2 Platform (JRE 1.6.0 or later) and uses the Java 2D API for, +drawing.  There is also JavaFX support available, but requiring JDK 1.8.0 or , +later., +, +JFreeChart is licensed under the terms of the GNU Lesser General, +Public Licence (LGPL).  A copy of the licence is included in the, +distribution., +, +Please note that JFreeChart is distributed WITHOUT ANY WARRANTY;, +without even the implied warranty of MERCHANTABILITY or FITNESS FOR A, +PARTICULAR PURPOSE.  Please refer to the licence for details., +, +We are grateful to the many developers that have contributed to JFreeChart., +The contributors are listed below in section 10., +, +-------------------, +2.  LATEST VERSION, +-------------------, +The latest version of this class library can be obtained from:, +, +    http://www.jfree.org/jfreechart/, +, +If you have any comments, suggestions or bugs to report, please post a, +message in the JFreeChart forum., +, +-----------------, +3.  DOCUMENTATION, +-----------------, +You can download installation instructions, +(jfreechart-1.0.19-install.pdf) from the JFreeChart home page or the project , +page on SourceForge., +, +Further documentation for JFreeChart (the JFreeChart Developer Guide) is, +available to purchase from by Object Refinery Limited, a company owned and, +operated by David Gilbert (the original author of JFreeChart).  For more, +information, please see:, +, +    http://www.object-refinery.com/jfreechart/guide.html, +, +Sales of the JFreeChart Developer Guide are an important source of funding for, +the project.  Please help us to continue developing free software., +, +API documentation files in HTML format are available on-line.  If you wish, +to keep a local copy of the API files, you can regenerate them directly, +from the source code.  You can do this using the 'javadoc' utility directly,, +or with the Ant script (build.xml) included in the distribution., +, +-----------------, +4.  DEPENDENCIES, +-----------------, +JFreeChart has the following dependencies:, +, +(a)  JRE/JDK 1.6.0 or higher.  Note that JRE/JDK 1.8 is required to use the new , +JavaFX support (and you will need to rebuild the library using the , +ant/build-fx.xml script)., +, +(b)  JCommon - the runtime jar file (version 1.0.23) is included in the , +JFreeChart distribution.  You can obtain the complete source code for JCommon , +from:, +, +    http://www.jfree.org/jcommon/, +, +JCommon is licensed under the terms of the GNU Lesser General Public Licence., +, +(c)  servlet.jar - classes in the org.jfree.chart.servlet, +package require this file.  The JFreeChart distribution includes the, +servlet.jar file distributed with Tomcat 4.1.31.  Applicable license, +terms are published at:, +, +    http://java.sun.com/products/servlet/LICENSE, +, +(d)  JUnit - a unit testing framework (the junit.jar runtime file is, +included in the distribution).  JUnit is licensed under the terms, +of the IBM Common Public License.  You can find out more about JUnit, +and/or download the latest version from:, +, +    http://www.junit.org, +, +The JUnit tests included with JFreeChart have been created using JUnit, +4.3.1., +, +-----------, +5.  SUPPORT, +-----------, +Support questions can be posted in the free support forum at]
[+++ b/src/main/java/org/jfree/data/time/TimeTableXYDataset.java, + * automatically get a new item {@code (x, null)} unless a non-null item, +++ b/src/main/java/org/jfree/data/time/TimeTableXYDataset.java, + * automatically get a new item {@code (x, null)} unless a non-null item, +++ b/src/main/java/org/jfree/data/time/Year.java, +     * Creates a new {@code Year}, based on the current system date/time., +     * Creates a new {@code Year}, based on a particular instant in time,, +     * Creates a new {@code Year} instance, for the specified time zone, +     * Tests the equality of this {@code Year} object to an arbitrary, +     * object.  Returns {@code true} if the target is a {@code Year}, +     * {@code http://developer.java.sun.com/developer/Books/effectivejava, +     *     /Chapter3.pdf}, +     * Returns an integer indicating the order of this {@code Year} object]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/maven/pom-1.6.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<project xmlns="http://maven.apache.org/POM/4.0.0", +         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0, +                             http://maven.apache.org/maven-v4_0_0.xsd">, +, +    <modelVersion>4.0.0</modelVersion>, +, +    <name>JFreeChart</name>, +, +    <artifactId>jfreechart</artifactId>, +    <groupId>org.jfree</groupId>, +    <version>1.0.19</version>, +    <packaging>jar</packaging>, +, +    <!-- this is required to host it on Sonatype's OSSRH -->, +    <parent>, +        <groupId>org.sonatype.oss</groupId>, +        <artifactId>oss-parent</artifactId>, +        <version>9</version>, +    </parent>, +, +    <organization>, +        <name>JFree.org</name>, +        <url>http://www.jfree.org/</url>, +    </organization>, +    <inceptionYear>2001</inceptionYear>, +, +    <description>, +    JFreeChart is a class library, written in Java, for generating charts. , +    Utilising the Java2D APIs, it currently supports bar charts, pie charts, , +    line charts, XY-plots and time series plots., +    </description>, +, +    <url>http://www.jfree.org/jfreechart/</url>, +    <issueManagement>, +        <url>http://sourceforge.net/tracker/?group_id=15494</url>, +    </issueManagement>, +    <scm>, +        <connection>scm:svn:https://jfreechart.svn.sourceforge.net/svnroot/jfreechart jfreechart</connection>, +        <url>http://jfreechart.svn.sourceforge.net/viewvc/jfreechart/</url>, +    </scm>, +, +    <mailingLists>, +        <mailingList>, +            <name>JFreeChart Developer List</name>, +            <subscribe>, +        jfreechart-dev-request@lists.sourceforge.net?subject=subscribe, +            </subscribe>, +            <unsubscribe>, +        jfreechart-dev-request@lists.sourceforge.net?subject=unsubscribe, +            </unsubscribe>, +            <archive>, +        http://sourceforge.net/mailarchive/forum.php?forum=jfreechart-dev, +            </archive>, +        </mailingList>, +    </mailingLists>, +, +    <developers>, +    <!--, +    For an up to date list of developers and contributors have a look at, +    the project info implementations., +    -->, +    </developers>, +    <licenses>, +        <license>, +            <name>GNU Lesser General Public Licence</name>, +            <url>http://www.gnu.org/licenses/lgpl.txt</url>, +            <distribution>repo</distribution>, +        </license>, +    </licenses>, +, +    <dependencies>, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jcommon</artifactId>, +            <version>1.0.23</version>, +        </dependency>, +, +        <dependency>, +            <groupId>javax.servlet</groupId>, +            <artifactId>servlet-api</artifactId>, +            <version>2.5</version>, +            <scope>provided</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>junit</groupId>, +            <artifactId>junit</artifactId>, +            <version>4.11</version>, +            <scope>test</scope>, +        </dependency>, +, +    </dependencies>, +, +    <distributionManagement>, +      <snapshotRepository>, +        <id>ossrh</id>, +        <url>https://oss.sonatype.org/content/repositories/snapshots</url>]
[+++ b/nbbuild.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<!-- You may freely edit this file. See commented blocks below for -->, +<!-- some examples of how to customize the build. -->, +<!-- (If you delete it and reopen the project it will be recreated.) -->, +<!-- By default, only the Clean and Build commands use this build script. -->, +<!-- Commands such as Run, Debug, and Test only use this build script if -->, +<!-- the Compile on Save feature is turned off for the project. -->, +<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->, +<!-- in the project's Project Properties dialog box.-->, +<project name="jfreechart-1.0.x" default="default" basedir=".">, +    <description>Builds, tests, and runs the project jfreechart-1.0.x.</description>, +    <import file="nbproject/build-impl.xml"/>, +    <!--, +, +    There exist several targets which are by default empty and which can be , +    used for execution of your tasks. These targets are usually executed , +    before and after some main targets. They are: , +, +      -pre-init:                 called before initialization of project properties, +      -post-init:                called after initialization of project properties, +      -pre-compile:              called before javac compilation, +      -post-compile:             called after javac compilation, +      -pre-compile-single:       called before javac compilation of single file, +      -post-compile-single:      called after javac compilation of single file, +      -pre-compile-test:         called before javac compilation of JUnit tests, +      -post-compile-test:        called after javac compilation of JUnit tests, +      -pre-compile-test-single:  called before javac compilation of single JUnit test, +      -post-compile-test-single: called after javac compilation of single JUunit test, +      -pre-jar:                  called before JAR building, +      -post-jar:                 called after JAR building, +      -post-clean:               called after cleaning build products, +, +    (Targets beginning with '-' are not intended to be called on their own.), +, +    Example of inserting an obfuscator after compilation could look like this:, +, +        <target name="-post-compile">, +            <obfuscate>, +                <fileset dir="${build.classes.dir}"/>, +            </obfuscate>, +        </target>, +, +    For list of available properties check the imported , +    nbproject/build-impl.xml file. , +, +, +    Another way to customize the build is by overriding existing main targets., +    The targets of interest are: , +, +      -init-macrodef-javac:     defines macro for javac compilation, +      -init-macrodef-junit:     defines macro for junit execution, +      -init-macrodef-debug:     defines macro for class debugging, +      -init-macrodef-java:      defines macro for class execution, +      -do-jar-with-manifest:    JAR building (if you are using a manifest), +      -do-jar-without-manifest: JAR building (if you are not using a manifest), +      run:                      execution of project , +      -javadoc-build:           Javadoc generation, +      test-report:              JUnit report generation, +, +    An example of overriding the target for project execution could look like this:, +, +        <target name="run" depends="jfreechart-1.0.x-impl.jar">, +            <exec dir="bin" executable="launcher.exe">, +                <arg file="${dist.jar}"/>, +            </exec>, +        </target>, +, +    Notice that the overridden target depends on the jar target and not only on , +    the compile target as the regular run target does. Again, for a list of available , +    properties which you can use, check the target you are overriding in the, +    nbproject/build-impl.xml file. , +, +    -->, +</project>, +++ b/nbbuild.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<!-- You may freely edit this file. See commented blocks below for -->, +<!-- some examples of how to customize the build. -->, +<!-- (If you delete it and reopen the project it will be recreated.) -->, +<!-- By default, only the Clean and Build commands use this build script. -->, +<!-- Commands such as Run, Debug, and Test only use this build script if -->, +<!-- the Compile on Save feature is turned off for the project. -->, +<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->, +<!-- in the project's Project Properties dialog box.-->, +<project name="jfreechart-1.0.x" default="default" basedir=".">, +    <description>Builds, tests, and runs the project jfreechart-1.0.x.</description>, +    <import file="nbproject/build-impl.xml"/>, +    <!--, +, +    There exist several targets which are by default empty and which can be , +    used for execution of your tasks. These targets are usually executed , +    before and after some main targets. They are: , +, +      -pre-init:                 called before initialization of project properties, +      -post-init:                called after initialization of project properties, +      -pre-compile:              called before javac compilation, +      -post-compile:             called after javac compilation, +      -pre-compile-single:       called before javac compilation of single file, +      -post-compile-single:      called after javac compilation of single file]
[+++ b/src/main/java/org/jfree/chart/util/PaintList.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public Paint getPaint(int index) {, +    public void setPaint(int index, Paint paint) {, +     * @param obj  the other object ({@code null} permitted)., +    @Override, +    public boolean equals(Object obj) {, +    @Override, +    private void writeObject(ObjectOutputStream stream) throws IOException {, +        int count = size();, +            Paint paint = getPaint(i);, +    private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {, +        int count = stream.readInt();, +            int index = stream.readInt();]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java, +     * @param dataArea  the area for plotting data.]
[+++ b/ant/build.xml, +        <property name="orsoncharts.version" value="1.0-eval" />, +        <copy file="${basedir}/lib/orsoncharts-${orsoncharts.version}.jar" tofile="${basedir}/distribution/lib/orsoncharts-${orsoncharts.version}.jar" />]
[+++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/block/AbstractBlock.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/test/java/org/jfree/chart/title/CompositeTitleTest.java, +        // frame, +        t1.setFrame(new BlockBorder(Color.red));, +        t2.setFrame(new BlockBorder(Color.red));]
[+++ b/src/main/java/org/jfree/chart/date/SerialDate.java, +    public SerialDate getEndOfCurrentMonth(SerialDate base) {, +        int last = SerialDate.lastDayOfMonth(base.getMonth(), base.getYYYY());, +    public static String weekInMonthToString(int count) {, +    public static String relativeToString(int relative) {, +    public static SerialDate createInstance(int day, int month, int yyyy) {, +    public static SerialDate createInstance(int serial) {, +    public static SerialDate createInstance(java.util.Date date) {, +        GregorianCalendar calendar = new GregorianCalendar();, +                calendar.get(Calendar.MONTH) + 1, calendar.get(Calendar.YEAR));, +    public SerialDate getPreviousDayOfWeek(int targetDOW) {, +    public SerialDate getFollowingDayOfWeek(int targetDOW) {, +    public SerialDate getNearestDayOfWeek(int targetDOW) {]
[+++ b/src/main/java/org/jfree/data/time/Day.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2018, by Object Refinery Limited., +    /** , +     * A date formatter - used for parsing, therefore we fix the locale , +     * so we get dependable results. , +     */, +            = new SimpleDateFormat("yyyy-MM-dd", Locale.UK);]
[+++ b/README.txt, +An Ant build script (build.xml) is included in the distribution.  This builds, +JFreeChart for JDK/JRE 1.6 or later and *excludes* the JavaFX support classes., +This is the same script that is used to create the JFreeChart distribution., +You can rebuild JFreechart including JavaFX support, for JDK/JRE 1.8 or later, , +using the build-fx.xml script., +, +support classes, you'll need to modify the pom.xml file accordingly (update, +the source level to 1.8 and remove the exclude from the maven-compiler-plugin).]
[+++ b/ChangeLog, +    Patch 2006826:, +    * source/org/jfree/chart/title/CompositeTitle.java, +    (draw(Graphics2D, Rectangle2D)): Delegate to other draw method,, +    (draw(Graphics2D, Rectangle2D, Parameters)): Modified implementation to , +    return result from BlockContainer., +, +2008-07-02  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +    Patch 2006826:, +    * source/org/jfree/chart/title/CompositeTitle.java, +    (draw(Graphics2D, Rectangle2D)): Delegate to other draw method,, +    (draw(Graphics2D, Rectangle2D, Parameters)): Modified implementation to , +    return result from BlockContainer., +, +2008-07-02  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/README.txt, +    - Eric Penfold, +++ b/ChangeLog, +    Patch 2006826:, +    * source/org/jfree/chart/title/CompositeTitle.java, +    (draw(Graphics2D, Rectangle2D)): Delegate to other draw method,, +    (draw(Graphics2D, Rectangle2D, Parameters)): Modified implementation to , +    return result from BlockContainer., +, +2008-07-02  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/README.txt, +    - Eric Penfold, +++ b/source/org/jfree/chart/title/CompositeTitle.java, + * Contributor(s):   Eric Penfold (patch 2006826);, + * 02-Jul-2008 : Applied patch 2006826 by Eric Penfold, to enable chart, + *               entities to be generated (DG);, +    	draw(g2, area, null);, +        area = trimMargin(area);, +        drawBorder(g2, area);, +        area = trimBorder(area);, +        area = trimPadding(area);, +        return this.container.draw(g2, area, params);]
[+++ b/ant/build.xml]
[+++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +     * @param dataArea  the area for plotting data.]
[+++ b/src/main/java/org/jfree/chart/util/BooleanList.java, + * A list of {@code Boolean} objects.]
[+++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +import org.jfree.chart.util.SortOrder;]
[+++ b/src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java, +import org.jfree.data.general.DatasetUtils;, +        double total = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java, +import org.jfree.data.general.DatasetUtils;, +        double total = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +import org.jfree.data.general.DatasetUtils;, +        boolean hasData = !DatasetUtils.isEmptyOrNull(currentDataset);, +++ b/src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java, +import org.jfree.data.general.DatasetUtils;, +        double total = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +import org.jfree.data.general.DatasetUtils;, +        boolean hasData = !DatasetUtils.isEmptyOrNull(currentDataset);, +++ b/src/main/java/org/jfree/chart/plot/MultiplePiePlot.java, +import org.jfree.data.general.DatasetUtils;, +        if (DatasetUtils.isEmptyOrNull(this.dataset)) {, +                piedataset = DatasetUtils.createConsolidatedPieDataset(, +++ b/src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java, +import org.jfree.data.general.DatasetUtils;, +        double total = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +import org.jfree.data.general.DatasetUtils;, +        boolean hasData = !DatasetUtils.isEmptyOrNull(currentDataset);, +++ b/src/main/java/org/jfree/chart/plot/MultiplePiePlot.java, +import org.jfree.data.general.DatasetUtils;, +        if (DatasetUtils.isEmptyOrNull(this.dataset)) {, +                piedataset = DatasetUtils.createConsolidatedPieDataset(, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, +import org.jfree.data.general.DatasetUtils;, +            state.setTotal(DatasetUtils.calculatePieDatasetTotal(, +        if (!DatasetUtils.isEmptyOrNull(this.dataset)) {, +            double totalValue = DatasetUtils.calculatePieDatasetTotal(, +++ b/src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java, +import org.jfree.data.general.DatasetUtils;, +        double total = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +import org.jfree.data.general.DatasetUtils;, +        boolean hasData = !DatasetUtils.isEmptyOrNull(currentDataset);, +++ b/src/main/java/org/jfree/chart/plot/MultiplePiePlot.java, +import org.jfree.data.general.DatasetUtils;, +        if (DatasetUtils.isEmptyOrNull(this.dataset)) {, +                piedataset = DatasetUtils.createConsolidatedPieDataset(, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, +import org.jfree.data.general.DatasetUtils;, +            state.setTotal(DatasetUtils.calculatePieDatasetTotal(, +        if (!DatasetUtils.isEmptyOrNull(this.dataset)) {, +            double totalValue = DatasetUtils.calculatePieDatasetTotal(, +++ b/src/main/java/org/jfree/chart/plot/PiePlot3D.java, +import org.jfree.data.general.DatasetUtils;, +        if (DatasetUtils.isEmptyOrNull(getDataset())) {, +        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java, +import org.jfree.data.general.DatasetUtils;, +        double total = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +import org.jfree.data.general.DatasetUtils;, +        boolean hasData = !DatasetUtils.isEmptyOrNull(currentDataset);, +++ b/src/main/java/org/jfree/chart/plot/MultiplePiePlot.java, +import org.jfree.data.general.DatasetUtils;, +        if (DatasetUtils.isEmptyOrNull(this.dataset)) {, +                piedataset = DatasetUtils.createConsolidatedPieDataset(, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, +import org.jfree.data.general.DatasetUtils;, +            state.setTotal(DatasetUtils.calculatePieDatasetTotal(, +        if (!DatasetUtils.isEmptyOrNull(this.dataset)) {, +            double totalValue = DatasetUtils.calculatePieDatasetTotal(, +++ b/src/main/java/org/jfree/chart/plot/PiePlot3D.java, +import org.jfree.data.general.DatasetUtils;, +        if (DatasetUtils.isEmptyOrNull(getDataset())) {, +        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/plot/PlotUtilities.java, +import org.jfree.data.general.DatasetUtils;, +                if (!DatasetUtils.isEmptyOrNull(dataset)) {, +++ b/src/main/java/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java, +import org.jfree.data.general.DatasetUtils;, +        double total = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +import org.jfree.data.general.DatasetUtils;, +        boolean hasData = !DatasetUtils.isEmptyOrNull(currentDataset);, +++ b/src/main/java/org/jfree/chart/plot/MultiplePiePlot.java, +import org.jfree.data.general.DatasetUtils;, +        if (DatasetUtils.isEmptyOrNull(this.dataset)) {, +                piedataset = DatasetUtils.createConsolidatedPieDataset(, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, +import org.jfree.data.general.DatasetUtils;, +            state.setTotal(DatasetUtils.calculatePieDatasetTotal(, +        if (!DatasetUtils.isEmptyOrNull(this.dataset)) {, +            double totalValue = DatasetUtils.calculatePieDatasetTotal(, +++ b/src/main/java/org/jfree/chart/plot/PiePlot3D.java, +import org.jfree.data.general.DatasetUtils;, +        if (DatasetUtils.isEmptyOrNull(getDataset())) {, +        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);, +++ b/src/main/java/org/jfree/chart/plot/PlotUtilities.java, +import org.jfree.data.general.DatasetUtils;, +                if (!DatasetUtils.isEmptyOrNull(dataset)) {, +++ b/src/main/java/org/jfree/chart/plot/PolarPlot.java, +import org.jfree.data.general.DatasetUtils;, +            if (!DatasetUtils.isEmptyOrNull(dataset)) {]
[+++ b/pom.xml, +            <version>4.11</version>]
[+++ b/src/main/java/org/jfree/chart/renderer/AbstractRenderer.java, + * (C) Copyright 2000-2019, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2019, by Object Refinery Limited., + * , + * <b>Subclassing</b>, + * If you create your own renderer that is a subclass of this, you should take, + * care to ensure that the renderer implements cloning correctly, to ensure, + * that {@link JFreeChart} instances that use your renderer are also, + * cloneable.  It is recommended that you also implement the , + * {@link PublicCloneable} interface to provide simple access to the clone , + * method.]
[+++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * (C) Copyright 2000-2017, by Andrzej Porebski and Contributors., +    public static final Paint DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.BLACK;, +    private transient Paint shadowPaint = Color.GRAY;, +    private transient Paint labelLinkPaint = Color.BLACK;, +        this.defaultSectionPaint = Color.GRAY;, +            g2.setPaint(Color.GRAY);, +            g2.setPaint(Color.BLUE);, +            g2.setPaint(Color.YELLOW);, +            g2.setPaint(Color.GREEN);, +                            new Line2D.Float(), new BasicStroke(), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * (C) Copyright 2000-2017, by Andrzej Porebski and Contributors., +    public static final Paint DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.BLACK;, +    private transient Paint shadowPaint = Color.GRAY;, +    private transient Paint labelLinkPaint = Color.BLACK;, +        this.defaultSectionPaint = Color.GRAY;, +            g2.setPaint(Color.GRAY);, +            g2.setPaint(Color.BLUE);, +            g2.setPaint(Color.YELLOW);, +            g2.setPaint(Color.GREEN);, +                            new Line2D.Float(), new BasicStroke(), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/plot/PolarPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Solution Engineering, Inc. and Contributors., +    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.GRAY;, +    private transient Paint angleLabelPaint = Color.BLACK;, +        g2.setColor(Color.BLACK);]
[+++ b/ChangeLog, +2011-10-13  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    * pom.xml added, +, +2011-10-11  Martin Hoeller  <martin.hoeller@xss.co.at>, +++ b/ChangeLog, +2011-10-13  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    * pom.xml added, +, +2011-10-11  Martin Hoeller  <martin.hoeller@xss.co.at>, +++ b/pom.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<project xmlns="http://maven.apache.org/POM/4.0.0", +         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0, +                             http://maven.apache.org/maven-v4_0_0.xsd">, +, +    <modelVersion>4.0.0</modelVersion>, +, +    <name>JFreeChart</name>, +, +    <artifactId>jfreechart</artifactId>, +    <groupId>jfree</groupId>, +    <version>1.0.14-SNAPSHOT</version>, +, +    <organization>, +        <name>JFree.org</name>, +        <url>http://www.jfree.org/</url>, +    </organization>, +    <inceptionYear>2001</inceptionYear>, +, +    <description>, +    JFreeChart is a class library, written in Java, for generating charts. , +    Utilising the Java2D APIs, it currently supports bar charts, pie charts, , +    line charts, XY-plots and time series plots., +    </description>, +, +    <url>http://www.jfree.org/jfreechart/</url>, +    <issueManagement>, +        <url>http://sourceforge.net/tracker/?group_id=15494</url>, +    </issueManagement>, +    <scm>, +        <connection>scm:svn:https://jfreechart.svn.sourceforge.net/svnroot/jfreechart jfreechart</connection>, +        <url>http://jfreechart.svn.sourceforge.net/viewvc/jfreechart/</url>, +    </scm>, +, +    <mailingLists>, +        <mailingList>, +            <name>JFreeChart Developer List</name>, +            <subscribe>, +        jfreechart-dev-request@lists.sourceforge.net?subject=subscribe, +            </subscribe>, +            <unsubscribe>, +        jfreechart-dev-request@lists.sourceforge.net?subject=unsubscribe, +            </unsubscribe>, +            <archive>, +        http://sourceforge.net/mailarchive/forum.php?forum=jfreechart-dev, +            </archive>, +        </mailingList>, +    </mailingLists>, +, +    <developers>, +    <!--, +    For an up to date list of developers and contributors have a look at, +    the project info implementations., +    -->, +    </developers>, +    <licenses>, +        <license>, +            <name>GNU Lesser General Public Licence</name>, +            <url>http://www.gnu.org/licenses/lgpl.txt</url>, +            <distribution>repo</distribution>, +        </license>, +    </licenses>, +, +    <dependencies>, +        <dependency>, +            <groupId>jfree</groupId>, +            <artifactId>jcommon</artifactId>, +            <version>1.0.16</version>, +        </dependency>, +, +        <dependency>, +            <groupId>junit</groupId>, +            <artifactId>junit</artifactId>, +            <version>3.8.2</version>, +            <scope>test</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>xml-apis</groupId>, +            <artifactId>xml-apis</artifactId>, +            <version>1.3.04</version>, +        </dependency>, +, +        <dependency>, +            <groupId>javax.servlet</groupId>, +            <artifactId>servlet-api</artifactId>]
[+++ b/ant/build-fx.xml, +        <property name="jfreechart.version" value="1.5.0" />, +        <property name="orsoncharts.version" value="1.5" />, +        <javac srcdir="${basedir}/src/main/java", +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart/fx/">, +        <copy file="${basedir}/src/main/resources/org/jfree/chart/gorilla.jpg" tofile="${basedir}/build/org/jfree/chart/gorilla.jpg" />, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart/plot">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart/editor">, +                 overview="${basedir}/src/main/javadoc/overview.html", +            <packageset dir="${basedir}/src/main/java" defaultexcludes="yes">, +        <copy todir="${basedir}/distribution/src">, +            <fileset dir="${basedir}/src">, +        <copy todir="${basedir}/distribution/maven">, +            <fileset dir="${basedir}/maven">, +            </fileset>, +        </copy>, +, +        <fixcrlf srcdir="${basedir}/distribution/src", +        <javac srcdir="${basedir}/src/test/java", +            depends="compile,compile-experimental,zip-javadocs,zip"]
[+++ b/pom.xml, +    <version>1.5.0</version>, +    <developers>, +      <developer>, +        <name>David Gilbert</name>, +        <email>dave@jfree.org</email>, +        <organization>Object Refinery Limited</organization>, +        <organizationUrl>http://www.object-refinery.com</organizationUrl>, +      </developer>, +    </developers>, +, +            <version>1.0.24</version>, +            <plugin>, +]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.19" />]
[+++ b/src/main/java/org/jfree/chart/panel/AbstractOverlay.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2009-2018, by Object Refinery Limited., +++ b/src/main/java/org/jfree/chart/panel/AbstractOverlay.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2009-2018, by Object Refinery Limited., +++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, + * An overlay for a {@link ChartPanel} that draws crosshairs on a chart.  If , + * you are using the JavaFX extensions for JFreeChart, then you should use, + * the {@code CrosshairOverlayFX} class., +     * Creates a new overlay that initially contains no crosshairs., +     * Adds a crosshair against the domain axis (x-axis) and sends an, +     * Renders the crosshairs in the overlay on top of the chart that has just, +     * been rendered in the specified {@code chartPanel}.  This method is, +     * called by the JFreeChart framework, you won't normally call it from, +     * user code., +++ b/src/main/java/org/jfree/chart/panel/AbstractOverlay.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2009-2018, by Object Refinery Limited., +++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, + * An overlay for a {@link ChartPanel} that draws crosshairs on a chart.  If , + * you are using the JavaFX extensions for JFreeChart, then you should use, + * the {@code CrosshairOverlayFX} class., +     * Creates a new overlay that initially contains no crosshairs., +     * Adds a crosshair against the domain axis (x-axis) and sends an, +     * Renders the crosshairs in the overlay on top of the chart that has just, +     * been rendered in the specified {@code chartPanel}.  This method is, +     * called by the JFreeChart framework, you won't normally call it from, +     * user code., +++ b/src/main/java/org/jfree/chart/panel/Overlay.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2009-2018, by Object Refinery Limited., +, + * An {@code Overlay} is anything that can be drawn over top of a chart to add, + * additional information to the chart.  This interface defines the operations, + * that must be supported for an overlay that can be added to a , + * {@link ChartPanel} in Swing., + * <br><br>, + * Note: if you are using JavaFX rather than Swing, then you need to look at , + * the {@code OverlayFX} interface in the <b>JFreeChart-FX</b> project., +     * Paints the visual representation of the overlay.  This method will be, +     * called by the {@link ChartPanel} after the underlying chart has been , +     * fully rendered.  When implementing this method, the {@code chartPanel} , +     * argument can be used to get state information from the chart (you can, , +     * for example, extract the axis ranges for the chart)., +     * @param g2  the graphics target (never {@code null})., +     * @param chartPanel  the chart panel (never {@code null})., +     * Registers a change listener with the overlay.  Typically this method, +     * not be called by user code, it exists so that the {@link ChartPanel}, +     * can register and receive notification of changes to the overlay (such, +     * changes will trigger an automatic repaint of the chart)., +     * @param listener  the listener ({@code null} not permitted)., +     * , +     * @see #removeChangeListener(org.jfree.chart.event.OverlayChangeListener) , +     * @param listener  the listener ({@code null} not permitted)., +     * , +     * @see #addChangeListener(org.jfree.chart.event.OverlayChangeListener) , +++ b/src/main/java/org/jfree/chart/panel/AbstractOverlay.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2009-2018, by Object Refinery Limited., +++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, + * An overlay for a {@link ChartPanel} that draws crosshairs on a chart.  If , + * you are using the JavaFX extensions for JFreeChart, then you should use, + * the {@code CrosshairOverlayFX} class., +     * Creates a new overlay that initially contains no crosshairs., +     * Adds a crosshair against the domain axis (x-axis) and sends an, +     * Renders the crosshairs in the overlay on top of the chart that has just, +     * been rendered in the specified {@code chartPanel}.  This method is, +     * called by the JFreeChart framework, you won't normally call it from, +     * user code., +++ b/src/main/java/org/jfree/chart/panel/Overlay.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2009-2018, by Object Refinery Limited., +, + * An {@code Overlay} is anything that can be drawn over top of a chart to add, + * additional information to the chart.  This interface defines the operations, + * that must be supported for an overlay that can be added to a , + * {@link ChartPanel} in Swing., + * <br><br>, + * Note: if you are using JavaFX rather than Swing, then you need to look at , + * the {@code OverlayFX} interface in the <b>JFreeChart-FX</b> project., +     * Paints the visual representation of the overlay.  This method will be, +     * called by the {@link ChartPanel} after the underlying chart has been , +     * fully rendered.  When implementing this method, the {@code chartPanel} , +     * argument can be used to get state information from the chart (you can, , +     * for example, extract the axis ranges for the chart)., +     * @param g2  the graphics target (never {@code null})., +     * @param chartPanel  the chart panel (never {@code null})., +     * Registers a change listener with the overlay.  Typically this method, +     * not be called by user code, it exists so that the {@link ChartPanel}, +     * can register and receive notification of changes to the overlay (such, +     * changes will trigger an automatic repaint of the chart)., +     * @param listener  the listener ({@code null} not permitted)., +     * , +     * @see #removeChangeListener(org.jfree.chart.event.OverlayChangeListener) , +     * @param listener  the listener ({@code null} not permitted)., +     * , +     * @see #addChangeListener(org.jfree.chart.event.OverlayChangeListener) , +++ b/src/main/java/org/jfree/chart/panel/package.html, +Classes that provide Swing-specific support related to the ]
[+++ b/pom.xml, +    <version>1.0.17-SNAPSHOT</version>]
[+++ b/ant/build-fx.xml, +<!-- An ANT build file for JFreeChart -->, +, +<!-- Written by David Gilbert. -->, +, +<!-- Tested recently with Ant 1.8.2 -->, +<!-- To run this script, you need to make sure the libraries used by -->, +<!-- JFreeChart are copied to the ../lib directory (or edit the -->, +<!-- initialise task to point to the appropriate jar files). -->, +, +<!-- This script will create temporary directories ../build and -->, +<!-- ../distribution, as working areas.  A ../javadoc directory will -->, +<!-- be created for the Javadoc HTML pages. -->, +, +<!-- If you have comments about this script, please post a message -->, +<!-- on the JFreeChart developers mailing list. -->, +, +<project name="jfreechart" default="all" basedir="..">, +, +    <!-- Initialisation. -->, +    <target name="initialise" description="Initialise required settings.">, +        <tstamp />, +        <property name="jfreechart.name" value="jfreechart" />, +        <property name="jfreechart.version" value="1.0.18-pre-fx" />, +        <property name="jfreechart-bundle-file" value="${jfreechart.name}-${jfreechart.version}-bundle.jar" />, +        <property name="jcommon.name" value="jcommon" />, +        <property name="jcommon.version" value="1.0.22" />, +        <property name="jcommon.jar" value="${basedir}/lib/${jcommon.name}-${jcommon.version}.jar"/>, +        <property name="jfreesvg.name" value="jfreesvg" />, +        <property name="jfreesvg.version" value="1.9" />, +        <property name="orsonpdf.name" value="orsonpdf" />, +        <property name="orsonpdf.version" value="1.6-eval" />, +        <property name="orsoncharts.version" value="1.4-eval" />, +        <property name="builddir" value="${basedir}/build" />, +        <property name="servlet.jar" value="${basedir}/lib/servlet.jar"/>, +        <property name="junit.jar" value="${basedir}/lib/junit-4.11.jar"/>, +        <property name="hamcrest.jar" value="${basedir}/lib/hamcrest-core-1.3.jar"/>, +        <property name="src.version" value="1.8"/>, +        <property name="target.version" value="1.8"/>, +        <path id="build.classpath">, +            <fileset dir="${basedir}/lib/">, +                <include name="${jcommon.name}-${jcommon.version}.jar"/>, +                <include name="servlet.jar"/>, +            </fileset>, +        </path>, +, +    </target>, +, +    <!-- Compile the JFreeChart classes -->, +    <target name="compile" depends="initialise", +            description="Compile the JFreeChart source code.">, +, +        <!-- create a temp build directory -->, +        <mkdir dir="${basedir}/build" />, +, +        <!-- compile the source -->, +        <javac srcdir="${basedir}/source", +               destdir="${basedir}/build", +               debug="on", +               deprecation="false", +               source="${src.version}", +               target="${target.version}">, +            <classpath refid="build.classpath" />, +            <include name="org/jfree/**"/>, +            <exclude name="org/jfree/chart/xml/**"/>, +        </javac>, +, +        <!-- copy across gorilla.jpg -->, +        <copy file="${basedir}/source/org/jfree/chart/gorilla.jpg" tofile="${basedir}/build/org/jfree/chart/gorilla.jpg" />, +, +        <!-- copy across .properties files -->, +        <copy todir="${basedir}/build/org/jfree/chart/">, +            <fileset dir="${basedir}/source/org/jfree/chart">, +                <include name="*.properties" />, +            </fileset>, +        </copy>, +        <copy todir="${basedir}/build/org/jfree/chart/plot">, +            <fileset dir="${basedir}/source/org/jfree/chart/plot">, +                <include name="*.properties" />, +            </fileset>, +        </copy>, +        <copy todir="${basedir}/build/org/jfree/chart/editor">, +            <fileset dir="${basedir}/source/org/jfree/chart/editor">, +                <include name="*.properties" />, +            </fileset>, +        </copy>, +, +        <!-- make the jar -->, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}.jar", +             basedir="${basedir}/build" >, +            <manifest>, +                <attribute name="Specification-Title" value="JFreeChart" />, +                <attribute name="Specification-Version" value="${jfreechart.version}" />, +                <attribute name="Specification-Vendor" value="jfree.org" />, +                <attribute name="Implementation-Title" value="JFreeChart" />, +                <attribute name="Implementation-Version" value="${jfreechart.version}" />, +                <attribute name="Implementation-Vendor" value="jfree.org" />, +            </manifest>, +        </jar>, +]
[+++ b/ChangeLog, +2012-02-08  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3484408, +    * ant/build.xml: fixed maven-bundle task., +, +++ b/ChangeLog, +2012-02-08  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3484408, +    * ant/build.xml: fixed maven-bundle task., +, +++ b/ant/build.xml, +    <copy file="pom.xml" tofile="distribution/pom.xml">]
[+++ b/src/main/java/org/jfree/chart/util/AbstractObjectList.java, +    protected AbstractObjectList(int initialCapacity) {, +    protected AbstractObjectList(int initialCapacity, int increment) {, +     * {@code null}., +     * @return The object or {@code null}., +    protected Object get(int index) {, +     * @param object  the object ({@code null} permitted)., +    protected void set(int index, Object object) {, +            Object[] enlarged = new Object[index + this.increment];, +    protected int indexOf(Object object) {, +    @Override, +    public boolean equals(Object obj) {, +    private void writeObject(ObjectOutputStream stream) , +    private void readObject(ObjectInputStream stream) ]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.19" />, +        <property name="jcommon.version" value="1.0.22" />]
[+++ /dev/null, +++ /dev/null, +++ b/src/main/javadoc/overview.html, +<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">, +<html>, +<body bgcolor="white">, +<b>JFreeChart</b> is a free chart library for Java that can generate a, +wide variety of charts for use in both client (Swing and JavaFX) and server , +(web) applications., +<p>, +Please visit <a href="http://www.jfree.org/jfreechart/index.html" target="_blank">, +  http://www.jfree.org/jfreechart/index.html, +</a>, +for the latest information about JFreeChart., +</body>, +</html>]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, +            addEntity(entities, block, dataset, series, item, transX, transY);]
[+++ /dev/null, +++ /dev/null, +++ b/lib/jcommon-1.0.20.jar]
[+++ b/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, +                if (entities != null && ShapeUtils.isPointInRect(dataArea, x, , +                        y)) {, +++ b/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, +                if (entities != null && ShapeUtils.isPointInRect(dataArea, x, , +                        y)) {, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, +                if (entities != null && ShapeUtils.isPointInRect(dataArea, x, , +                        y)) {, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java, +        if (entities != null && ShapeUtils.isPointInRect(dataArea, xx, yy)) {, +++ b/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, +                if (entities != null && ShapeUtils.isPointInRect(dataArea, x, , +                        y)) {, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java, +        if (entities != null && ShapeUtils.isPointInRect(dataArea, xx, yy)) {, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        if (entities != null && ShapeUtils.isPointInRect(dataArea, xx, yy)) {, +++ b/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, +                if (entities != null && ShapeUtils.isPointInRect(dataArea, x, , +                        y)) {, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java, +        if (entities != null && ShapeUtils.isPointInRect(dataArea, xx, yy)) {, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        if (entities != null && ShapeUtils.isPointInRect(dataArea, xx, yy)) {, +++ b/src/main/java/org/jfree/chart/util/ShapeList.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public void setShape(int index, Shape shape) {, +    @Override, +    private void writeObject(ObjectOutputStream stream) throws IOException {, +    private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {, +++ b/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, +                if (entities != null && ShapeUtils.isPointInRect(dataArea, x, , +                        y)) {, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java, +        if (entities != null && ShapeUtils.isPointInRect(dataArea, xx, yy)) {, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +        if (entities != null && ShapeUtils.isPointInRect(dataArea, xx, yy)) {, +++ b/src/main/java/org/jfree/chart/util/ShapeList.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public void setShape(int index, Shape shape) {]
[+++ b/src/test/java/org/jfree/chart/renderer/LookupPaintScaleTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited and Contributors., +        g1 = new LookupPaintScale(1.0, 2.0, Color.RED);, +        g2 = new LookupPaintScale(1.0, 2.0, Color.RED);, +        g1.add(1.5, new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.BLUE));, +        g2.add(1.5, new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.BLUE));, +        g1.add(0.5, Color.RED);, +        g2.add(0.5, Color.RED);, +                Color.RED, 3.0f, 4.0f, Color.GREEN));, +        g1.add(1.5, new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.BLUE));, +                Color.RED, 3.0f, 4.0f, Color.YELLOW));, +        g1.add(1.5, new GradientPaint(1.1f, 2.2f, Color.RED, 3.3f, 4.4f,, +                Color.BLUE));, +        LookupPaintScale s = new LookupPaintScale(1.0, 2.0, Color.RED);, +        assertEquals(Color.RED, s.getDefaultPaint());, +        LookupPaintScale s = new LookupPaintScale(0.0, 100.0, Color.BLACK);, +        assertEquals(Color.BLACK, s.getPaint(-1.0));, +        assertEquals(Color.BLACK, s.getPaint(0.0));, +        assertEquals(Color.BLACK, s.getPaint(50.0));, +        assertEquals(Color.BLACK, s.getPaint(100.0));, +        assertEquals(Color.BLACK, s.getPaint(101.0));, +        s.add(50.0, Color.BLUE);, +        assertEquals(Color.BLACK, s.getPaint(-1.0));, +        assertEquals(Color.BLACK, s.getPaint(0.0));, +        assertEquals(Color.BLUE, s.getPaint(50.0));, +        assertEquals(Color.BLUE, s.getPaint(100.0));, +        assertEquals(Color.BLACK, s.getPaint(101.0));, +        s.add(50.0, Color.RED);, +        assertEquals(Color.BLACK, s.getPaint(-1.0));, +        assertEquals(Color.BLACK, s.getPaint(0.0));, +        assertEquals(Color.RED, s.getPaint(50.0));, +        assertEquals(Color.RED, s.getPaint(100.0));, +        assertEquals(Color.BLACK, s.getPaint(101.0));, +        s.add(25.0, Color.GREEN);, +        assertEquals(Color.BLACK, s.getPaint(-1.0));, +        assertEquals(Color.BLACK, s.getPaint(0.0));, +        assertEquals(Color.GREEN, s.getPaint(25.0));, +        assertEquals(Color.RED, s.getPaint(50.0));, +        assertEquals(Color.RED, s.getPaint(100.0));, +        assertEquals(Color.BLACK, s.getPaint(101.0));, +        s.add(75.0, Color.YELLOW);, +        assertEquals(Color.BLACK, s.getPaint(-1.0));, +        assertEquals(Color.BLACK, s.getPaint(0.0));, +        assertEquals(Color.GREEN, s.getPaint(25.0));, +        assertEquals(Color.RED, s.getPaint(50.0));, +        assertEquals(Color.YELLOW, s.getPaint(75.0));, +        assertEquals(Color.YELLOW, s.getPaint(100.0));, +        assertEquals(Color.BLACK, s.getPaint(101.0));]
[+++ b/ant/build-fx.xml]
[+++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +    @Test, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +    @Test, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +    @Test, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/util/LogFormatTest.java, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +    @Test, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/util/LogFormatTest.java, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/util/RelativeDateFormatTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +    @Test, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/util/LogFormatTest.java, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/chart/util/RelativeDateFormatTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +++ b/src/test/java/org/jfree/data/category/DefaultCategoryDatasetTest.java, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test, +    @Test]
[+++ b/ant/build.xml, +            depends="compile,compile-experimental,zip-javadocs,zip,targz,source-jar"]
[+++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +     * @throws java.lang.CloneNotSupportedException, +++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +     * @throws java.lang.CloneNotSupportedException, +++ b/src/test/java/org/jfree/chart/LegendItemCollectionTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +     * @throws java.lang.CloneNotSupportedException]
[+++ b/src/main/java/org/jfree/chart/ChartFrame.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2018, by Object Refinery Limited and Contributors., +        this.chartPanel = new ChartPanel(chart, false);, +++ b/src/main/java/org/jfree/chart/ChartFrame.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2018, by Object Refinery Limited and Contributors., +        this.chartPanel = new ChartPanel(chart, false);, +++ b/src/main/java/org/jfree/chart/ui/Layer.java, +    FOREGROUND("Layer.FOREGROUND"),, +    BACKGROUND("Layer.BACKGROUND");, +, +    /** The name. */, +    private String name;, +, +    /**, +     * Private constructor., +     *, +     * @param name  the name., +     */, +    private Layer(final String name) {, +        this.name = name;, +    }, +, +    /**, +     * Returns a string representing the object., +     *, +     * @return The string., +     */, +    @Override, +    public String toString() {, +        return this.name;, +    }, +, +, +++ b/src/main/java/org/jfree/chart/ChartFrame.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2018, by Object Refinery Limited and Contributors., +        this.chartPanel = new ChartPanel(chart, false);, +++ b/src/main/java/org/jfree/chart/ui/Layer.java, +    FOREGROUND("Layer.FOREGROUND"),, +    BACKGROUND("Layer.BACKGROUND");, +, +    /** The name. */, +    private String name;, +, +    /**, +     * Private constructor., +     *, +     * @param name  the name., +     */, +    private Layer(final String name) {, +        this.name = name;, +    }, +, +    /**, +     * Returns a string representing the object., +     *, +     * @return The string., +     */, +    @Override, +    public String toString() {, +        return this.name;, +    }, +, +, +++ b/src/main/java/org/jfree/chart/ui/RectangleAnchor.java, +    CENTER("RectangleAnchor.CENTER"),, +    TOP("RectangleAnchor.TOP"),, +    TOP_LEFT("RectangleAnchor.TOP_LEFT"),, +    TOP_RIGHT("RectangleAnchor.TOP_RIGHT"),, +    BOTTOM("RectangleAnchor.BOTTOM"),, +    BOTTOM_LEFT("RectangleAnchor.BOTTOM_LEFT"),, +    BOTTOM_RIGHT("RectangleAnchor.BOTTOM_RIGHT"),, +    LEFT("RectangleAnchor.LEFT"),, +    RIGHT("RectangleAnchor.RIGHT");, +, +    /** The name. */, +    private final String name;, +, +    /**, +     * Private constructor., +     *, +     * @param name  the name., +     */, +    private RectangleAnchor(String name) {, +        this.name = name;, +    }, +     * Returns a string representing the object., +     *, +     * @return The string., +     */, +    @Override, +    public String toString() {, +        return this.name;, +    }, +    , +    /**, +++ b/src/main/java/org/jfree/chart/ChartFrame.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors.]
[+++ b/.gitignore, +, +# Eclipse files #, +/.classpath, +/.project, +/.settings]
[+++ b/src/main/java/org/jfree/chart/block/BlockBorder.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited., +            RectangleInsets.ZERO_INSETS, Color.WHITE);, +        this(Color.BLACK);, +        this(new RectangleInsets(top, left, bottom, right), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/block/BlockBorder.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited., +            RectangleInsets.ZERO_INSETS, Color.WHITE);, +        this(Color.BLACK);, +        this(new RectangleInsets(top, left, bottom, right), Color.BLACK);, +++ b/src/test/java/org/jfree/chart/plot/PiePlotTest.java, + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        plot1.setSectionPaint("A", new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setSectionPaint("A", new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setDefaultSectionPaint(new GradientPaint(1.0f, 2.0f, Color.BLACK,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setDefaultSectionPaint(new GradientPaint(1.0f, 2.0f, Color.BLACK,, +                3.0f, 4.0f, Color.WHITE));, +                Color.GREEN, 3.0f, 4.0f, Color.WHITE));, +                Color.GREEN, 3.0f, 4.0f, Color.WHITE));, +                Color.GRAY, 3.0f, 4.0f, Color.WHITE));, +                Color.GRAY, 3.0f, 4.0f, Color.WHITE));, +        plot1.setShadowPaint(new GradientPaint(1.0f, 2.0f, Color.ORANGE,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setShadowPaint(new GradientPaint(1.0f, 2.0f, Color.ORANGE,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.DARK_GRAY,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.DARK_GRAY,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setLabelBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setLabelBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setLabelOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setLabelOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setLabelShadowPaint(new GradientPaint(1.0f, 2.0f, Color.YELLOW,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setLabelShadowPaint(new GradientPaint(1.0f, 2.0f, Color.YELLOW,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.MAGENTA,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setLabelPaint(new GradientPaint(1.0f, 2.0f, Color.MAGENTA,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setLabelLinkPaint(new GradientPaint(1.0f, 2.0f, Color.MAGENTA,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setLabelLinkPaint(new GradientPaint(1.0f, 2.0f, Color.MAGENTA,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setShadowGenerator(new DefaultShadowGenerator(5, Color.GRAY,, +        plot2.setShadowGenerator(new DefaultShadowGenerator(5, Color.GRAY,]
[+++ b/ant/build.xml, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}.jar", +            <pathelement location="${basedir}/lib/${jfreechart.name}-${jfreechart.version}.jar"/>, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-experimental.jar", +        <copy file="${basedir}/lib/${jfreechart.name}-${jfreechart.version}.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}.jar" />, +        <copy file="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-experimental.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-experimental.jar" />, +    <copy file="lib/${jfreechart.name}-${jfreechart.version}.jar" tofile="distribution/${jfreechart.name}-${jfreechart.version}.jar"/>]
[+++ b/maven/pom-1.6.xml, +    <version>1.0.20</version>, +    <developers>, +      <developer>, +        <name>David Gilbert</name>, +        <email>dave@jfree.org</email>, +        <organization>Object Refinery Limited</organization>, +        <organizationUrl>http://www.object-refinery.com</organizationUrl>, +      </developer>, +    </developers>, +, +            <version>1.0.24</version>, +            <version>3.2</version>, +            <plugin>, +, +++ b/maven/pom-1.6.xml, +    <version>1.0.20</version>, +    <developers>, +      <developer>, +        <name>David Gilbert</name>, +        <email>dave@jfree.org</email>, +        <organization>Object Refinery Limited</organization>, +        <organizationUrl>http://www.object-refinery.com</organizationUrl>, +      </developer>, +    </developers>, +, +            <version>1.0.24</version>, +            <version>3.2</version>, +            <plugin>, +, +++ b/maven/pom-dev.xml, +    <version>1.5.0</version>, +    <developers>, +      <developer>, +        <name>David Gilbert</name>, +        <email>dave@jfree.org</email>, +        <organization>Object Refinery Limited</organization>, +        <organizationUrl>http://www.object-refinery.com</organizationUrl>, +      </developer>, +    </developers>, +, +            <version>1.0.24</version>, +            <version>1.5</version>, +            <version>3.2</version>]
[+++ b/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/ant/build-1.6.xml, +<!-- An ANT build file for JFreeChart -->, +, +<!-- Written by David Gilbert. -->, +, +<!-- Tested recently with Ant 1.8.2 -->, +<!-- To run this script, you need to make sure the libraries used by -->, +<!-- JFreeChart are copied to the ../lib directory (or edit the -->, +<!-- initialise task to point to the appropriate jar files). -->, +, +<!-- This script will create temporary directories ../build and -->, +<!-- ../distribution, as working areas.  A ../javadoc directory will -->, +<!-- be created for the Javadoc HTML pages. -->, +, +<!-- If you have comments about this script, please post a message -->, +<!-- on the JFreeChart developers mailing list. -->, +, +<project name="jfreechart" default="all" basedir="..">, +, +    <!-- Initialisation. -->, +    <target name="initialise" description="Initialise required settings.">, +        <tstamp />, +        <property name="jfreechart.name" value="jfreechart" />, +        <property name="jfreechart.version" value="1.0.20" />, +        <property name="jcommon.name" value="jcommon" />, +        <property name="jcommon.version" value="1.0.24" />, +        <property name="jcommon.jar" value="${basedir}/lib/${jcommon.name}-${jcommon.version}.jar"/>, +        <property name="fxgraphics2d.name" value="fxgraphics2d" />, +        <property name="fxgraphics2d.version" value="1.5" />, +        <property name="fxgraphics2d.jar" value="${basedir}/lib/${fxgraphics2d.name}-${fxgraphics2d.version}.jar" />, +        <property name="jfreesvg.name" value="jfreesvg" />, +        <property name="jfreesvg.version" value="3.2" />, +        <property name="orsonpdf.name" value="orsonpdf" />, +        <property name="orsonpdf.version" value="1.7" />, +        <property name="orsoncharts.version" value="1.6" />, +        <property name="builddir" value="${basedir}/build" />, +        <property name="servlet.jar" value="${basedir}/lib/servlet.jar"/>, +        <property name="junit.jar" value="${basedir}/lib/junit-4.11.jar"/>, +        <property name="hamcrest.jar" value="${basedir}/lib/hamcrest-core-1.3.jar"/>, +        <property name="src.version" value="1.6"/>, +        <property name="target.version" value="1.6"/>, +        <path id="build.classpath">, +            <fileset dir="${basedir}/lib/">, +                <include name="${jcommon.name}-${jcommon.version}.jar"/>, +                <include name="servlet.jar"/>, +            </fileset>, +        </path>, +    </target>, +, +    <!-- Compile the JFreeChart classes -->, +    <target name="compile" depends="initialise", +            description="Compile the JFreeChart source code.">, +, +        <!-- create a temp build directory -->, +        <mkdir dir="${basedir}/build" />, +, +        <!-- compile the source -->, +        <javac srcdir="${basedir}/src/main/java", +               destdir="${basedir}/build", +               debug="on", +               deprecation="false", +               source="${src.version}", +               target="${target.version}", +               includeantruntime="false">, +            <classpath refid="build.classpath" />, +            <include name="org/jfree/**"/>, +            <exclude name="org/jfree/chart/fx/**"/>, +        </javac>, +, +        <!-- copy across gorilla.jpg -->, +        <copy file="${basedir}/src/main/resources/org/jfree/chart/gorilla.jpg" tofile="${basedir}/build/org/jfree/chart/gorilla.jpg" />, +, +        <!-- copy across .properties files -->, +        <copy todir="${basedir}/build/org/jfree/chart/">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart">, +                <include name="*.properties" />, +            </fileset>, +        </copy>, +        <copy todir="${basedir}/build/org/jfree/chart/plot">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart/plot">, +                <include name="*.properties" />, +            </fileset>, +        </copy>, +        <copy todir="${basedir}/build/org/jfree/chart/editor">, +            <fileset dir="${basedir}/src/main/resources/org/jfree/chart/editor">, +                <include name="*.properties" />, +            </fileset>, +        </copy>, +, +        <!-- make the jar -->, +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}.jar", +             basedir="${basedir}/build" >, +            <manifest>, +                <attribute name="Specification-Title" value="JFreeChart" />, +                <attribute name="Specification-Version" value="${jfreechart.version}" />, +                <attribute name="Specification-Vendor" value="jfree.org" />, +                <attribute name="Implementation-Title" value="JFreeChart" />, +                <attribute name="Implementation-Version" value="${jfreechart.version}" />, +                <attribute name="Implementation-Vendor" value="jfree.org" />, +            </manifest>]
[+++ b/src/main/java/org/jfree/chart/ChartPanel.java]
[+++ b/ant/build.xml]
[+++ b/src/main/java/org/jfree/chart/util/StrokeList.java, +    public Stroke getStroke(int index) {, +    public void setStroke(int index, Stroke stroke) {, +    @Override, +    public boolean equals(Object o) {, +    private void writeObject(ObjectOutputStream stream) throws IOException {, +    private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {, +        int count = stream.readInt();, +            int index = stream.readInt();]
[+++ b/nbbuild.xml, +, +    <!--, +    The following "link" to the JFreeChart test target makes NetBeans IDE, +    integration work. Without the link running tests from within NB will do, +    nothing (no tests run, no "Test Results" window, etc.), +    NOTE(mkrauskopf): likely there is better solution which I did not found., +    -->, +    <target name="test">, +        <ant antfile="${basedir}/ant/build.xml" target="test" />, +    </target>, +, +, +++ b/nbbuild.xml, +, +    <!--, +    The following "link" to the JFreeChart test target makes NetBeans IDE, +    integration work. Without the link running tests from within NB will do, +    nothing (no tests run, no "Test Results" window, etc.), +    NOTE(mkrauskopf): likely there is better solution which I did not found., +    -->, +    <target name="test">, +        <ant antfile="${basedir}/ant/build.xml" target="test" />, +    </target>, +, +, +++ b/nbproject/build-impl.xml, +    <fail message="Please build using Ant 1.7.1 or higher.">, +        <condition>, +            <not>, +                <antversion atleast="1.7.1"/>, +            </not>, +        </condition>, +    </fail>, +        <j2seproject1:property name="platform.home" value="platforms.${platform.active}.home"/>, +        <j2seproject1:property name="platform.bootcp" value="platforms.${platform.active}.bootclasspath"/>, +        <j2seproject1:property name="platform.compiler" value="platforms.${platform.active}.compile"/>, +        <j2seproject1:property name="platform.javac.tmp" value="platforms.${platform.active}.javac"/>, +        <condition property="platform.javac" value="${platform.home}/bin/javac">, +            <equals arg1="${platform.javac.tmp}" arg2="$${platforms.${platform.active}.javac}"/>, +        </condition>, +        <property name="platform.javac" value="${platform.javac.tmp}"/>, +        <j2seproject1:property name="platform.java.tmp" value="platforms.${platform.active}.java"/>, +        <condition property="platform.java" value="${platform.home}/bin/java">, +            <equals arg1="${platform.java.tmp}" arg2="$${platforms.${platform.active}.java}"/>, +        </condition>, +        <property name="platform.java" value="${platform.java.tmp}"/>, +        <j2seproject1:property name="platform.javadoc.tmp" value="platforms.${platform.active}.javadoc"/>, +        <condition property="platform.javadoc" value="${platform.home}/bin/javadoc">, +            <equals arg1="${platform.javadoc.tmp}" arg2="$${platforms.${platform.active}.javadoc}"/>, +        </condition>, +        <property name="platform.javadoc" value="${platform.javadoc.tmp}"/>, +        <condition property="platform.invalid" value="true">, +            <or>, +                <contains string="${platform.javac}" substring="$${platforms."/>, +                <contains string="${platform.java}" substring="$${platforms."/>, +                <contains string="${platform.javadoc}" substring="$${platforms."/>, +            </or>, +        </condition>, +        <fail unless="platform.home">Must set platform.home</fail>, +        <fail unless="platform.bootcp">Must set platform.bootcp</fail>, +        <fail unless="platform.java">Must set platform.java</fail>, +        <fail unless="platform.javac">Must set platform.javac</fail>, +        <fail if="platform.invalid">, + The J2SE Platform is not correctly set up., + Your active platform is: ${platform.active}, but the corresponding property "platforms.${platform.active}.home" is not found in the project's properties files. , + Either open the project in the IDE and setup the Platform with the same name or add it manually., + For example like this:, +     ant -Duser.properties.file=&lt;path_to_property_file&gt; jar (where you put the property "platforms.${platform.active}.home" in a .properties file), +  or ant -Dplatforms.${platform.active}.home=&lt;path_to_JDK_home&gt; jar (where no properties file is used) , +  </fail>, +        <condition property="splashscreen.available">, +                <not>, +                    <equals arg1="${application.splash}" arg2="" trim="true"/>, +                </not>, +                <available file="${application.splash}"/>, +            </and>, +        </condition>, +        <condition property="main.class.available">, +            <and>, +        <condition property="manifest.available+main.class">, +            <and>, +                <isset property="manifest.available"/>, +                <isset property="main.class.available"/>, +            </and>, +        </condition>, +        <condition property="do.archive">, +            <not>, +                <istrue value="${jar.archive.disabled}"/>, +            </not>, +        </condition>, +        <condition property="do.mkdist">, +            <and>, +                <isset property="do.archive"/>, +                <isset property="libs.CopyLibs.classpath"/>, +                <not>, +                    <istrue value="${mkdist.disabled}"/>, +                </not>, +            </and>, +        </condition>]
[+++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +     * is {@code SortOrder.ASCENDING}., +     * value is {@code SortOrder.ASCENDING}., +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +     * is {@code SortOrder.ASCENDING}., +     * value is {@code SortOrder.ASCENDING}., +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * The example shown here is generated by the {@code PieChartDemo2.java}, +     * {@code lookupSectionPaint(section, getAutoPopulateSectionPaint())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * if the {@code autoPopulateSectionPaint} flag is set, the section, +     * defined, which is rare.  The default value is {@code Color.GRAY}., +     * to {@code lookupSectionPaint(section, , +     * getAutoPopulateSectionOutlinePaint())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * Be aware that if the {@code autoPopulateSectionPaint} flag is set,, +     * equivalent to {@code lookupSectionOutlineStroke(section,, +     * getAutoPopulateSectionOutlineStroke())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * Be aware that if the {@code autoPopulateSectionPaint} flag is set,, +     * @return {@code 0.10}., +     * {@code lookupSectionPaint(section)}.  Checks to see if the user set the , +     * {@code Paint} to be of type {@code RadialGradientPaint} and if so it , +     * adjusts the center and radius to match the Pie., +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +     * is {@code SortOrder.ASCENDING}., +     * value is {@code SortOrder.ASCENDING}., +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * The example shown here is generated by the {@code PieChartDemo2.java}, +     * {@code lookupSectionPaint(section, getAutoPopulateSectionPaint())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * if the {@code autoPopulateSectionPaint} flag is set, the section, +     * defined, which is rare.  The default value is {@code Color.GRAY}., +     * to {@code lookupSectionPaint(section, , +     * getAutoPopulateSectionOutlinePaint())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * Be aware that if the {@code autoPopulateSectionPaint} flag is set,, +     * equivalent to {@code lookupSectionOutlineStroke(section,, +     * getAutoPopulateSectionOutlineStroke())}., +     *         {@code autoPopulate} is {@code true}, attempt to fetch, +     * Be aware that if the {@code autoPopulateSectionPaint} flag is set,, +     * @return {@code 0.10}., +     * {@code lookupSectionPaint(section)}.  Checks to see if the user set the , +     * {@code Paint} to be of type {@code RadialGradientPaint} and if so it , +     * adjusts the center and radius to match the Pie., +++ b/src/main/java/org/jfree/chart/plot/Plot.java, +     * {@code Shape} objects that the plot's renderer(s) can use to, +     * {@code Shape} objects that the plot's renderer(s) can use to, +     * in the {@code org.jfree.ui.Align} class in the JCommon class library., +     * @throws IllegalArgumentException if {@code alpha} is not within, +++ b/src/main/java/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java, + * section, e.g. {@code "{0} = {1} ({2})"} will display as, + * {@code apple = 120 (5%)}., +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +     * is {@code SortOrder.ASCENDING}., +     * value is {@code SortOrder.ASCENDING}., +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +     * This method does nothing, because {@code CategoryPlot} doesn't, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, + * The example shown here is generated by the {@code PieChartDemo2.java}]
[+++ b/ant/build.xml]
[+++ b/src/main/java/org/jfree/chart/util/ParamChecks.java, +     * Throws an {@code IllegalArgumentException} if the supplied , +     * {@code param} is {@code null}., +     *     if {@code param} is {@code null})., +++ b/src/main/java/org/jfree/chart/util/ParamChecks.java, +     * Throws an {@code IllegalArgumentException} if the supplied , +     * {@code param} is {@code null}., +     *     if {@code param} is {@code null})., +++ b/src/main/java/org/jfree/data/time/ohlc/OHLCItem.java, + * An item representing data in the form {@code (time-period, open, high, low, , + * close)}., +     * Creates a new instance of {@code OHLCItem}., +++ b/src/main/java/org/jfree/chart/util/ParamChecks.java, +     * Throws an {@code IllegalArgumentException} if the supplied , +     * {@code param} is {@code null}., +     *     if {@code param} is {@code null})., +++ b/src/main/java/org/jfree/data/time/ohlc/OHLCItem.java, + * An item representing data in the form {@code (time-period, open, high, low, , + * close)}., +     * Creates a new instance of {@code OHLCItem}., +++ b/src/main/java/org/jfree/data/xy/DefaultHighLowDataset.java, +     * {@code Long} instance generated from the underlying, +     * {@code Date} object.  To avoid generating a new object instance,, +++ b/src/main/java/org/jfree/chart/util/ParamChecks.java, +     * Throws an {@code IllegalArgumentException} if the supplied , +     * {@code param} is {@code null}., +     *     if {@code param} is {@code null})., +++ b/src/main/java/org/jfree/data/time/ohlc/OHLCItem.java, + * An item representing data in the form {@code (time-period, open, high, low, , + * close)}., +     * Creates a new instance of {@code OHLCItem}., +++ b/src/main/java/org/jfree/data/xy/DefaultHighLowDataset.java, +     * {@code Long} instance generated from the underlying, +     * {@code Date} object.  To avoid generating a new object instance,, +++ b/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java, +     * Creates a new {@code DefaultIntervalXYDataset} instance, initially, +     * Tests this {@code DefaultIntervalXYDataset} instance for equality, +     * <li>{@code obj} is an instance of {@code DefaultIntervalXYDataset};</li>, +++ b/src/main/java/org/jfree/chart/util/ParamChecks.java, +     * Throws an {@code IllegalArgumentException} if the supplied , +     * {@code param} is {@code null}., +     *     if {@code param} is {@code null})., +++ b/src/main/java/org/jfree/data/time/ohlc/OHLCItem.java, + * An item representing data in the form {@code (time-period, open, high, low, , + * close)}., +     * Creates a new instance of {@code OHLCItem}., +++ b/src/main/java/org/jfree/data/xy/DefaultHighLowDataset.java, +     * {@code Long} instance generated from the underlying, +     * {@code Date} object.  To avoid generating a new object instance,, +++ b/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java, +     * Creates a new {@code DefaultIntervalXYDataset} instance, initially, +     * Tests this {@code DefaultIntervalXYDataset} instance for equality, +     * <li>{@code obj} is an instance of {@code DefaultIntervalXYDataset};</li>, +++ b/src/main/java/org/jfree/data/xy/DefaultXYDataset.java, +     * Creates a new {@code DefaultXYDataset} instance, initially, +     * Tests this {@code DefaultXYDataset} instance for equality with an, +     * <li>{@code obj} is an instance of {@code DefaultXYDataset};</li>, +++ b/src/main/java/org/jfree/chart/util/ParamChecks.java, +     * Throws an {@code IllegalArgumentException} if the supplied , +     * {@code param} is {@code null}., +     *     if {@code param} is {@code null})., +++ b/src/main/java/org/jfree/data/time/ohlc/OHLCItem.java, + * An item representing data in the form {@code (time-period, open, high, low, , + * close)}., +     * Creates a new instance of {@code OHLCItem}., +++ b/src/main/java/org/jfree/data/xy/DefaultHighLowDataset.java, +     * {@code Long} instance generated from the underlying, +     * {@code Date} object.  To avoid generating a new object instance,, +++ b/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java, +     * Creates a new {@code DefaultIntervalXYDataset} instance, initially, +     * Tests this {@code DefaultIntervalXYDataset} instance for equality, +     * <li>{@code obj} is an instance of {@code DefaultIntervalXYDataset};</li>, +++ b/src/main/java/org/jfree/data/xy/DefaultXYDataset.java, +     * Creates a new {@code DefaultXYDataset} instance, initially, +     * Tests this {@code DefaultXYDataset} instance for equality with an, +     * <li>{@code obj} is an instance of {@code DefaultXYDataset};</li>, +++ b/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java, +     * Creates a new {@code DefaultXYZDataset} instance, initially, +     * Tests this {@code DefaultXYZDataset} instance for equality with an, +     * <li>{@code obj} is an instance of {@code DefaultXYDataset};</li>]
[+++ b/pom.xml]
[+++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +, +            this.datasets.put(0, dataset);, +            this.renderers.put(0, renderer);, +            this.domainAxes.put(0, domainAxis);, +            mapDatasetToDomainAxis(0, 0);, +, +            this.rangeAxes.put(0, rangeAxis);, +            mapDatasetToRangeAxis(0, 0);]
[+++ b/README.txt, +*  JFREECHART: Version 1.0.14  *, +x November 2011, +(C)opyright 2000-2011, by Object Refinery Limited and Contributors.]
[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        this(label, TimeZone.getDefault(), Locale.getDefault());, +        if (DateTickUnitType.MILLISECOND.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.SECOND.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.MINUTE.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.HOUR.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.DAY.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.MONTH.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.YEAR.equals(unit.getUnitType())) {, +        return null;, +        if (unit.getUnitType().equals(DateTickUnitType.MONTH)) {, +            result = calculateDateForPosition(new Month(time, this.timeZone,, +                    this.locale), position);, +        } else if (unit.getUnitType().equals(DateTickUnitType.YEAR)) {, +            result = calculateDateForPosition(new Year(time, this.timeZone,, +                    this.locale), position);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        this(label, TimeZone.getDefault(), Locale.getDefault());, +        if (DateTickUnitType.MILLISECOND.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.SECOND.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.MINUTE.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.HOUR.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.DAY.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.MONTH.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.YEAR.equals(unit.getUnitType())) {, +        return null;, +        if (unit.getUnitType().equals(DateTickUnitType.MONTH)) {, +            result = calculateDateForPosition(new Month(time, this.timeZone,, +                    this.locale), position);, +        } else if (unit.getUnitType().equals(DateTickUnitType.YEAR)) {, +            result = calculateDateForPosition(new Year(time, this.timeZone,, +                    this.locale), position);, +++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        this(label, TimeZone.getDefault(), Locale.getDefault());, +        if (DateTickUnitType.MILLISECOND.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.SECOND.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.MINUTE.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.HOUR.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.DAY.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.MONTH.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.YEAR.equals(unit.getUnitType())) {, +        return null;, +        if (unit.getUnitType().equals(DateTickUnitType.MONTH)) {, +            result = calculateDateForPosition(new Month(time, this.timeZone,, +                    this.locale), position);, +        } else if (unit.getUnitType().equals(DateTickUnitType.YEAR)) {, +            result = calculateDateForPosition(new Year(time, this.timeZone,, +                    this.locale), position);, +++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        this(label, TimeZone.getDefault(), Locale.getDefault());, +        if (DateTickUnitType.MILLISECOND.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.SECOND.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.MINUTE.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.HOUR.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.DAY.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.MONTH.equals(unit.getUnitType())) {, +        }, +        else if (DateTickUnitType.YEAR.equals(unit.getUnitType())) {, +        return null;, +        if (unit.getUnitType().equals(DateTickUnitType.MONTH)) {, +            result = calculateDateForPosition(new Month(time, this.timeZone,, +                    this.locale), position);, +        } else if (unit.getUnitType().equals(DateTickUnitType.YEAR)) {, +            result = calculateDateForPosition(new Year(time, this.timeZone,, +                    this.locale), position);, +++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +++ b/src/main/java/org/jfree/chart/plot/PiePlot.java, +        Paint result = this.sectionPaintMap.getPaint(key);]
[+++ b/ChangeLog, +2011-11-20  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3440237:, +    * org/jfree/chart/plot/CategoryPlot.java, +    (CategoryPlot): initialise shadow generator as null;, +    (PiePlot): likewise;, +, +++ b/ChangeLog, +2011-11-20  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3440237:, +    * org/jfree/chart/plot/CategoryPlot.java, +    (CategoryPlot): initialise shadow generator as null;, +    (PiePlot): likewise;, +, +++ b/NEWS, +20 November 2011, +3440237 : Shadows always visible;, +++ b/ChangeLog, +2011-11-20  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3440237:, +    * org/jfree/chart/plot/CategoryPlot.java, +    (CategoryPlot): initialise shadow generator as null;, +    (PiePlot): likewise;, +, +++ b/NEWS, +20 November 2011, +3440237 : Shadows always visible;, +++ b/README.txt, +20 November 2011, +++ b/ChangeLog, +2011-11-20  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3440237:, +    * org/jfree/chart/plot/CategoryPlot.java, +    (CategoryPlot): initialise shadow generator as null;, +    (PiePlot): likewise;, +, +++ b/NEWS, +20 November 2011, +3440237 : Shadows always visible;, +++ b/README.txt, +20 November 2011, +++ b/source/org/jfree/chart/plot/CategoryPlot.java, + * 20-Nov-2011 : Initialise shadow generator as null (DG);, +        this.shadowGenerator = null;, +++ b/ChangeLog, +2011-11-20  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3440237:, +    * org/jfree/chart/plot/CategoryPlot.java, +    (CategoryPlot): initialise shadow generator as null;, +    (PiePlot): likewise;, +, +++ b/NEWS, +20 November 2011, +3440237 : Shadows always visible;, +++ b/README.txt, +20 November 2011, +++ b/source/org/jfree/chart/plot/CategoryPlot.java, + * 20-Nov-2011 : Initialise shadow generator as null (DG);, +        this.shadowGenerator = null;, +++ b/source/org/jfree/chart/plot/PiePlot.java, + * 20-Nov-2011 : Initialise shadow generator as null (DG);, +        this.shadowGenerator = null;]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.8" />, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.8" />, +++ b/source/org/jfree/chart/resources/JFreeChartResources.java, +        {"project.version",   "1.0.8"},]
[+++ b/src/main/java/org/jfree/chart/util/ShapeList.java, +     * @param obj  the other object ({@code null} permitted).]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.17" />, +        <property name="jcommon.version" value="1.0.21" />, +        <property name="jfreesvg.version" value="1.4" />, +        <property name="orsonpdf.version" value="1.3-eval" />]
[+++ b/NEWS, +20 April 2009, +, +******************************************************************************, +* SPECIAL NOTICE:  There will be a birds-of-a-feather session for JFreeChart *, +* at this year's JavaOne conference in San Francisco.  The session is        *, +* scheduled for 6.45pm to 7.35pm on Wednesday 3 June.                        *, +******************************************************************************, +++ b/NEWS, +20 April 2009, +, +******************************************************************************, +* SPECIAL NOTICE:  There will be a birds-of-a-feather session for JFreeChart *, +* at this year's JavaOne conference in San Francisco.  The session is        *, +* scheduled for 6.45pm to 7.35pm on Wednesday 3 June.                        *, +******************************************************************************, +++ b/README.txt, +20 April 2009]
[+++ b/README.txt, +If you have any comments, suggestions or bugs to report, please post a, +The demo application also links to the JFreeSVG and OrsonPDF libraries, to , +provide export facilities to the SVG and PDF formats.  These fast, lightweight , +libraries are not free, licenses can be purchased from Object Refinery Limited. , +]
[+++ b/ant/build-fx.xml, +        <property name="fxgraphics2d.version" value="1.5" />, +        <property name="jfreesvg.version" value="3.2" />, +        <property name="orsoncharts.version" value="1.6" />, +++ b/ant/build-fx.xml, +        <property name="fxgraphics2d.version" value="1.5" />, +        <property name="jfreesvg.version" value="3.2" />, +        <property name="orsoncharts.version" value="1.6" />, +++ b/ant/build.xml, +        <property name="fxgraphics2d.version" value="1.5" />, +        <property name="jfreesvg.version" value="3.2" />, +        <property name="orsoncharts.version" value="1.6" />]
[+++ b/nbproject/project.properties, +file.reference.jxlayer.jar=lib/jxlayer.jar, +    ${file.reference.servlet.jar}:\, +    ${file.reference.jxlayer.jar}]
[+++ b/src/main/java/org/jfree/chart/util/ObjectUtils.java, + * (C) Copyright 2000-2019, by Object Refinery Limited and Contributors., +     * , +     * @deprecated Use CloneUtils#clone(Object)., +        return CloneUtils.clone(object);, +            result.add(CloneUtils.clone(item));]
[+++ b/src/main/java/org/jfree/chart/date/SerialDate.java, +        if (yy < MINIMUM_YEAR_SUPPORTED || yy > MAXIMUM_YEAR_SUPPORTED) {, +            throw new IllegalArgumentException("Call to addMonths resulted in unsupported year");, +        }, +        if (targetY < MINIMUM_YEAR_SUPPORTED || targetY > MAXIMUM_YEAR_SUPPORTED) {, +            throw new IllegalArgumentException("Call to addYears resulted in unsupported year");, +        }]
[+++ b/src/main/java/org/jfree/chart/ChartFactory.java, +            renderer.setDefaultPositiveItemLabelPosition(position1);, +            renderer.setDefaultNegativeItemLabelPosition(position2);, +            renderer.setDefaultPositiveItemLabelPosition(position1);, +            renderer.setDefaultNegativeItemLabelPosition(position2);, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultPositiveItemLabelPosition(position);, +            renderer.setDefaultNegativeItemLabelPosition(position);, +            renderer.setDefaultPositiveItemLabelPosition(position);, +            renderer.setDefaultNegativeItemLabelPosition(position);, +            renderer.setDefaultToolTipGenerator(generator);, +            renderer.setDefaultItemURLGenerator(, +        renderer.setDefaultToolTipGenerator(toolTipGenerator);, +            renderer.setDefaultToolTipGenerator(tt);, +            renderer.setDefaultToolTipGenerator(new StandardXYToolTipGenerator());, +        renderer.setDefaultToolTipGenerator(toolTipGenerator);, +        renderer.setDefaultToolTipGenerator(new HighLowItemLabelGenerator());, +        renderer.setDefaultToolTipGenerator(new HighLowItemLabelGenerator());, +            renderer.setDefaultToolTipGenerator(new StandardXYZToolTipGenerator());, +            renderer.setDefaultToolTipGenerator(new StandardXYToolTipGenerator());, +        renderer.setDefaultToolTipGenerator(new BoxAndWhiskerToolTipGenerator());, +            renderer.setDefaultToolTipGenerator(new StandardXYToolTipGenerator());, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +            renderer.setDefaultPositiveItemLabelPosition(position1);, +            renderer.setDefaultNegativeItemLabelPosition(position2);, +            renderer.setDefaultPositiveItemLabelPosition(position1);, +            renderer.setDefaultNegativeItemLabelPosition(position2);, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultPositiveItemLabelPosition(position);, +            renderer.setDefaultNegativeItemLabelPosition(position);, +            renderer.setDefaultPositiveItemLabelPosition(position);, +            renderer.setDefaultNegativeItemLabelPosition(position);, +            renderer.setDefaultToolTipGenerator(generator);, +            renderer.setDefaultItemURLGenerator(, +        renderer.setDefaultToolTipGenerator(toolTipGenerator);, +            renderer.setDefaultToolTipGenerator(tt);, +            renderer.setDefaultToolTipGenerator(new StandardXYToolTipGenerator());, +        renderer.setDefaultToolTipGenerator(toolTipGenerator);, +        renderer.setDefaultToolTipGenerator(new HighLowItemLabelGenerator());, +        renderer.setDefaultToolTipGenerator(new HighLowItemLabelGenerator());, +            renderer.setDefaultToolTipGenerator(new StandardXYZToolTipGenerator());, +            renderer.setDefaultToolTipGenerator(new StandardXYToolTipGenerator());, +        renderer.setDefaultToolTipGenerator(new BoxAndWhiskerToolTipGenerator());, +            renderer.setDefaultToolTipGenerator(new StandardXYToolTipGenerator());, +++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        renderer.setDefaultItemLabelFont(this.regularFont);, +        renderer.setDefaultItemLabelPaint(this.itemLabelPaint);, +        renderer.setDefaultItemLabelFont(this.regularFont);, +        renderer.setDefaultItemLabelPaint(this.itemLabelPaint);, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +            renderer.setDefaultPositiveItemLabelPosition(position1);, +            renderer.setDefaultNegativeItemLabelPosition(position2);, +            renderer.setDefaultPositiveItemLabelPosition(position1);, +            renderer.setDefaultNegativeItemLabelPosition(position2);, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultToolTipGenerator(, +            renderer.setDefaultItemURLGenerator(, +            renderer.setDefaultPositiveItemLabelPosition(position);, +            renderer.setDefaultNegativeItemLabelPosition(position);, +            renderer.setDefaultPositiveItemLabelPosition(position);, +            renderer.setDefaultNegativeItemLabelPosition(position);, +            renderer.setDefaultToolTipGenerator(generator);, +            renderer.setDefaultItemURLGenerator(, +        renderer.setDefaultToolTipGenerator(toolTipGenerator);, +            renderer.setDefaultToolTipGenerator(tt);, +            renderer.setDefaultToolTipGenerator(new StandardXYToolTipGenerator());, +        renderer.setDefaultToolTipGenerator(toolTipGenerator);, +        renderer.setDefaultToolTipGenerator(new HighLowItemLabelGenerator());]
[+++ b/ChangeLog, +2012-07-02  David Gilbert <david.gilbert@object-refinery.com>, +, +    Translations by Leo Leung:, +    * org/jfree/chart/LocalisationBundle_ja.properties: New translation file;, +    * org/jfree/chart/editor/LocalisationBundle_ja.properties: Likewise;, +    * org/jfree/chart/plot/LocalisationBundle_ja.properties: Likewise., +, +++ b/ChangeLog, +2012-07-02  David Gilbert <david.gilbert@object-refinery.com>, +, +    Translations by Leo Leung:, +    * org/jfree/chart/LocalisationBundle_ja.properties: New translation file;, +    * org/jfree/chart/editor/LocalisationBundle_ja.properties: Likewise;, +    * org/jfree/chart/plot/LocalisationBundle_ja.properties: Likewise., +, +++ b/NEWS, +Added localisation files for Japanese.  This release also fixes a minor , +security flaw in the DisplayChart class, detected and reported by OSI Security:, +++ b/ChangeLog, +2012-07-02  David Gilbert <david.gilbert@object-refinery.com>, +, +    Translations by Leo Leung:, +    * org/jfree/chart/LocalisationBundle_ja.properties: New translation file;, +    * org/jfree/chart/editor/LocalisationBundle_ja.properties: Likewise;, +    * org/jfree/chart/plot/LocalisationBundle_ja.properties: Likewise., +, +++ b/NEWS, +Added localisation files for Japanese.  This release also fixes a minor , +security flaw in the DisplayChart class, detected and reported by OSI Security:, +++ b/README.txt, +    - Leo Leung, +++ b/ChangeLog, +2012-07-02  David Gilbert <david.gilbert@object-refinery.com>, +, +    Translations by Leo Leung:, +    * org/jfree/chart/LocalisationBundle_ja.properties: New translation file;, +    * org/jfree/chart/editor/LocalisationBundle_ja.properties: Likewise;, +    * org/jfree/chart/plot/LocalisationBundle_ja.properties: Likewise., +, +++ b/NEWS, +Added localisation files for Japanese.  This release also fixes a minor , +security flaw in the DisplayChart class, detected and reported by OSI Security:, +++ b/README.txt, +    - Leo Leung, +++ b/source/org/jfree/chart/LocalizationBundle_ja.properties, +, +All_Axes=\u4e21\u65b9\u306e\u8ef8, +Auto_Range=\u30aa\u30fc\u30c8\u30ec\u30f3\u30b8, +Chart=\u30c1\u30e3\u30fc\u30c8, +Chart_Properties=\u30c1\u30e3\u30fc\u30c8 \u30d7\u30ed\u30d1\u30c6\u30a3, +Copy=\u30b3\u30d4\u30fc, +Domain_Axis=\u5206\u985e\u8ef8, +PNG_Image_Files=PNG \u30a4\u30e1\u30fc\u30b8\u30d5\u30a1\u30a4\u30eb, +Print...=\u5370\u5237..., +Properties...=\u30d7\u30ed\u30d1\u30c6\u30a3..., +Range_Axis=\u6570\u5024\u8ef8, +Save_as...=\u540d\u524d\u3092\u4ed8\u3051\u3066\u4fdd\u5b58..., +Zoom_In=\u30ba\u30fc\u30e0\u30a4\u30f3, +Zoom_Out=\u30ba\u30fc\u30e0\u30a2\u30a6\u30c8, +++ b/ChangeLog, +2012-07-02  David Gilbert <david.gilbert@object-refinery.com>, +, +    Translations by Leo Leung:, +    * org/jfree/chart/LocalisationBundle_ja.properties: New translation file;, +    * org/jfree/chart/editor/LocalisationBundle_ja.properties: Likewise;, +    * org/jfree/chart/plot/LocalisationBundle_ja.properties: Likewise., +, +++ b/NEWS, +Added localisation files for Japanese.  This release also fixes a minor , +security flaw in the DisplayChart class, detected and reported by OSI Security:, +++ b/README.txt, +    - Leo Leung, +++ b/source/org/jfree/chart/LocalizationBundle_ja.properties, +, +All_Axes=\u4e21\u65b9\u306e\u8ef8, +Auto_Range=\u30aa\u30fc\u30c8\u30ec\u30f3\u30b8, +Chart=\u30c1\u30e3\u30fc\u30c8, +Chart_Properties=\u30c1\u30e3\u30fc\u30c8 \u30d7\u30ed\u30d1\u30c6\u30a3, +Copy=\u30b3\u30d4\u30fc, +Domain_Axis=\u5206\u985e\u8ef8, +PNG_Image_Files=PNG \u30a4\u30e1\u30fc\u30b8\u30d5\u30a1\u30a4\u30eb, +Print...=\u5370\u5237..., +Properties...=\u30d7\u30ed\u30d1\u30c6\u30a3..., +Range_Axis=\u6570\u5024\u8ef8, +Save_as...=\u540d\u524d\u3092\u4ed8\u3051\u3066\u4fdd\u5b58..., +Zoom_In=\u30ba\u30fc\u30e0\u30a4\u30f3, +Zoom_Out=\u30ba\u30fc\u30e0\u30a2\u30a6\u30c8, +++ b/source/org/jfree/chart/editor/LocalizationBundle_ja.properties, +, +\:=:, +Appearance=\u5916\u89b3, +Auto-adjust_range=\u81ea\u52d5\u8abf\u6574\u7bc4\u56f2:, +Background=\u80cc\u666f:, +Background_Color=\u80cc\u666f\u8272, +Background_paint=\u80cc\u666f\u306e\u5857\u88c5:, +Color=\u8272:, +Color_Bar=\u30ab\u30e9\u30fc\u30d0\u30fc, +Domain_Axis=\u5206\u985e\u8ef8, +Draw_anti-aliased=\u30c9\u30ed\u30fc\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9]
[+++ b/src/main/java/org/jfree/chart/text/TextMeasurer.java, +     * Calculates the width of a {@code String} in the current , +     * {@code Graphics} context.]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +     * Adds an entity to the collection.  Note the the {@code entityX} and, +     * {@code entityY} coordinates are in Java2D space, should already be , +     * adjusted for the plot orientation, and will only be used if , +     * {@code hotspot} is {@code null}., +     * @param hotspot  the entity area (if {@code null} a default will be, +     * @param entityX  the entity x-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +     * @param entityY  the entity y-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +    protected void addEntity(EntityCollection entities, Shape hotspot,, +            XYDataset dataset, int series, int item, double entityX, , +            double entityY) {, +        , +, +        // if not hotspot is provided, we create a default based on the , +        // provided data coordinates (which are already in Java2D space), +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +     * Adds an entity to the collection.  Note the the {@code entityX} and, +     * {@code entityY} coordinates are in Java2D space, should already be , +     * adjusted for the plot orientation, and will only be used if , +     * {@code hotspot} is {@code null}., +     * @param hotspot  the entity area (if {@code null} a default will be, +     * @param entityX  the entity x-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +     * @param entityY  the entity y-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +    protected void addEntity(EntityCollection entities, Shape hotspot,, +            XYDataset dataset, int series, int item, double entityX, , +            double entityY) {, +        , +, +        // if not hotspot is provided, we create a default based on the , +        // provided data coordinates (which are already in Java2D space), +++ b/src/main/java/org/jfree/chart/renderer/xy/CandlestickRenderer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited., +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +     * Adds an entity to the collection.  Note the the {@code entityX} and, +     * {@code entityY} coordinates are in Java2D space, should already be , +     * adjusted for the plot orientation, and will only be used if , +     * {@code hotspot} is {@code null}., +     * @param hotspot  the entity area (if {@code null} a default will be, +     * @param entityX  the entity x-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +     * @param entityY  the entity y-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +    protected void addEntity(EntityCollection entities, Shape hotspot,, +            XYDataset dataset, int series, int item, double entityX, , +            double entityY) {, +        , +, +        // if not hotspot is provided, we create a default based on the , +        // provided data coordinates (which are already in Java2D space), +++ b/src/main/java/org/jfree/chart/renderer/xy/CandlestickRenderer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited., +++ b/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +                     0.0, 0.0);, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +     * Adds an entity to the collection.  Note the the {@code entityX} and, +     * {@code entityY} coordinates are in Java2D space, should already be , +     * adjusted for the plot orientation, and will only be used if , +     * {@code hotspot} is {@code null}., +     * @param hotspot  the entity area (if {@code null} a default will be, +     * @param entityX  the entity x-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +     * @param entityY  the entity y-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +    protected void addEntity(EntityCollection entities, Shape hotspot,, +            XYDataset dataset, int series, int item, double entityX, , +            double entityY) {, +        , +, +        // if not hotspot is provided, we create a default based on the , +        // provided data coordinates (which are already in Java2D space), +++ b/src/main/java/org/jfree/chart/renderer/xy/CandlestickRenderer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited., +++ b/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +                     0.0, 0.0);, +++ b/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Andreas Schroeder and Contributors., +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +     * Adds an entity to the collection.  Note the the {@code entityX} and, +     * {@code entityY} coordinates are in Java2D space, should already be , +     * adjusted for the plot orientation, and will only be used if , +     * {@code hotspot} is {@code null}., +     * @param hotspot  the entity area (if {@code null} a default will be, +     * @param entityX  the entity x-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +     * @param entityY  the entity y-coordinate (in Java2D space, only used if , +     *         {@code hotspot} is {@code null})., +    protected void addEntity(EntityCollection entities, Shape hotspot,, +            XYDataset dataset, int series, int item, double entityX, ]
[+++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        if (isDomainZeroBaselineVisible() && getRenderer() != null) {, +            getRenderer().drawDomainLine(g2, this, getDomainAxis(), area, 0.0,, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        if (isDomainZeroBaselineVisible() && getRenderer() != null) {, +            getRenderer().drawDomainLine(g2, this, getDomainAxis(), area, 0.0,, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        if (isDomainZeroBaselineVisible() && getRenderer() != null) {, +            getRenderer().drawDomainLine(g2, this, getDomainAxis(), area, 0.0,, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java, +     * @param paint  the paint ({@code null} not permitted)., +     * @param stroke  the stroke ({@code null} not permitted)., +            Rectangle2D dataArea, double value, Paint paint, Stroke stroke);]
[+++ b/src/main/java/org/jfree/data/time/Hour.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Hour(Date, TimeZone, Locale)]
[+++ b/ant/build-fx.xml, +        <property name="jcommon.version" value="1.0.23" />, +        <property name="jfreesvg.version" value="2.0" />, +               target="${target.version}", +               includeantruntime="false">, +               target="${target.version}", +               includeantruntime="false">, +               optimize="false", +               includeantruntime="false">, +++ b/ant/build-fx.xml, +        <property name="jcommon.version" value="1.0.23" />, +        <property name="jfreesvg.version" value="2.0" />, +               target="${target.version}", +               includeantruntime="false">, +               target="${target.version}", +               includeantruntime="false">, +               optimize="false", +               includeantruntime="false">, +++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.23" />, +               target="1.6", +               includeantruntime="false">, +               target="1.6", +               includeantruntime="false">, +++ b/ant/build-fx.xml, +        <property name="jcommon.version" value="1.0.23" />, +        <property name="jfreesvg.version" value="2.0" />, +               target="${target.version}", +               includeantruntime="false">, +               target="${target.version}", +               includeantruntime="false">, +               optimize="false", +               includeantruntime="false">, +++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.23" />, +               target="1.6", +               includeantruntime="false">, +               target="1.6", +               includeantruntime="false">, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.23" />, +        <property name="jfreesvg.version" value="2.0" />, +               target="${target.version}", +               includeantruntime="false">, +               target="${target.version}", +               includeantruntime="false">, +               optimize="false", +               includeantruntime="false">]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2018, by Object Refinery Limited., +    /** A flag that controls whether outlines are drawn for blocks. */, +    private boolean drawOutlines;, +, +    /**, +     * A flag that controls whether the outline paint is used for drawing block, +     * outlines., +     */, +    private boolean useOutlinePaint;, +, +        this.drawOutlines = true;, +        this.useOutlinePaint = false; // use item paint by default, +     * Returns {@code true} if outlines should be drawn for blocks, and, +     * {@code false} otherwise.  The default value is {@code true}., +     *, +     * @return A boolean., +     *, +     * @see #setDrawOutlines(boolean), +     */, +    public boolean getDrawOutlines() {, +        return this.drawOutlines;, +    }, +, +    /**, +     * Sets the flag that controls whether outlines are drawn for, +     * blocks, and sends a {@link RendererChangeEvent} to all registered, +     * listeners., +     *, +     * @param flag  the flag., +     *, +     * @see #getDrawOutlines(), +     */, +    public void setDrawOutlines(boolean flag) {, +        this.drawOutlines = flag;, +        fireChangeEvent();, +    }, +, +    /**, +     * Returns {@code true} if the renderer should use the outline paint, +     * setting to draw block outlines, and {@code false} if it should just, +     * use the regular item paint., +     *, +     * @return A boolean., +     *, +     * @see #setUseOutlinePaint(boolean), +     */, +    public boolean getUseOutlinePaint() {, +        return this.useOutlinePaint;, +    }, +, +    /**, +     * Sets the flag that controls whether the outline paint is used to draw, +     * block outlines, and sends a {@link RendererChangeEvent} to all, +     * registered listeners., +     *, +     * @param flag  the flag., +     *, +     * @see #getUseOutlinePaint(), +     */, +    public void setUseOutlinePaint(boolean flag) {, +        this.useOutlinePaint = flag;, +        fireChangeEvent();, +    }, +, +    /**, +        if (getDrawOutlines()) {, +            if (getUseOutlinePaint()) {, +                g2.setPaint(getItemOutlinePaint(series, item));, +            }, +            g2.setStroke(lookupSeriesOutlineStroke(series));, +        }, +        if (this.drawOutlines != that.drawOutlines) {, +            return false;, +        }, +        if (this.useOutlinePaint != that.useOutlinePaint) {, +            return false;, +        }]
[+++ b/src/main/java/org/jfree/chart/ui/NumberCellRenderer.java, +    @Override, +    public Component getTableCellRendererComponent(JTable table, , +            Object value, boolean isSelected, , +            boolean hasFocus, int row, int column) {, +        NumberFormat nf = NumberFormat.getNumberInstance();, +        } else {, +        } else {]
[+++ b/pom.xml]
[+++ b/ChangeLog, +	* source/org/jfree/chart/renderer/xy/XYSplineAndShapeRenderer.java:, +	Renamed XYSplineRenderer., +, +2007-10-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +	* source/org/jfree/chart/renderer/xy/XYSplineAndShapeRenderer.java:, +	Renamed XYSplineRenderer., +, +2007-10-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ b/ChangeLog, +	* source/org/jfree/chart/renderer/xy/XYSplineAndShapeRenderer.java:, +	Renamed XYSplineRenderer., +, +2007-10-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ b/source/org/jfree/chart/renderer/xy/XYSplineRenderer.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it , + * under the terms of the GNU Lesser General Public License as published by , + * the Free Software Foundation; either version 2.1 of the License, or , + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but , + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY , + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public , + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, , + * USA.  , + *, + * [Java is a trademark or registered trademark of Sun Microsystems, Inc. , + * in the United States and other countries.], + *, + * ---------------------, + * XYSplineRenderer.java, + * ---------------------, + * (C) Copyright 2007, by Klaus Rheinwald and Contributors., + *, + * Original Author:  Klaus Rheinwald;, + * Contributor(s):   Tobias von Petersdorff (tvp@math.umd.edu, , + *                       http://www.wam.umd.edu/~petersd/);, + *                   David Gilbert (for Object Refinery Limited);, + *, + * Changes:, + * --------, + * 25-Jul-2007 : Version 1, contributed by Klaus Rheinwald (DG);, + * 03-Aug-2007 : Added new constructor (KR);, + * 25-Oct-2007 : Prevent duplicate control points (KR);, + *, + */, +, +, +package org.jfree.chart.renderer.xy;, +, +import java.awt.Graphics2D;, +import java.awt.geom.Rectangle2D;, +import java.util.Vector;, +, +import org.jfree.chart.axis.ValueAxis;, +import org.jfree.chart.event.RendererChangeEvent;, +import org.jfree.chart.plot.PlotOrientation;, +import org.jfree.chart.plot.PlotRenderingInfo;, +import org.jfree.chart.plot.XYPlot;, +import org.jfree.data.xy.XYDataset;, +import org.jfree.ui.RectangleEdge;, +, +, +/**, + * A renderer that connects data points with natural cubic splines and/or , + * draws shapes at each data point.  This renderer is designed for use with , + * the {@link XYPlot} class., + * , + * @since 1.0.7, + */, +public class XYSplineRenderer extends XYLineAndShapeRenderer {, +, +    /**, +     * To collect data points for later splining., +     */, +    private Vector points;, +, +    /**, +     * Resolution of splines (number of line segments between points), +     */, +    private int precision;, +]
[+++ /dev/null, +++ /dev/null, +++ b/src/test/java/org/jfree/chart/util/LineUtilsTest.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates., + * Other names may be trademarks of their respective owners.], + *, + * ------------------, + * LineUtilsTest.java, + * ------------------, + * (C) Copyright 2008-2017, by Object Refinery Limited and Contributors., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 05-Nov-2008 : Version 1 (DG);, + *, + */, +, +package org.jfree.chart.util;, +, +import java.awt.geom.Line2D;, +import java.awt.geom.Rectangle2D;, +import org.junit.Test;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.assertFalse;, +/**, + * Tests for the {@link LineUtils} class., + */, +public class LineUtilsTest {, +, +    private boolean lineEquals(Line2D line, double x1, double y1, double x2,, +            double y2) {, +        boolean result = true;, +        double epsilon = 0.0000000001;, +        if (Math.abs(line.getX1() - x1) > epsilon) { result = false; }, +        if (Math.abs(line.getY1() - y1) > epsilon) { result = false; }, +        if (Math.abs(line.getX2() - x2) > epsilon) { result = false; }, +        if (Math.abs(line.getY2() - y2) > epsilon) { result = false; }, +        return result;, +    }, +, +    @Test, +    public void testClipLine() {, +        Rectangle2D rect = new Rectangle2D.Double(1.0, 1.0, 1.0, 1.0);, +        Line2D line = new Line2D.Double();, +, +        assertFalse(LineUtils.clipLine(line, rect));, +        assertTrue(lineEquals(line, 0.0, 0.0, 0.0, 0.0));, +, +        line.setLine(0.5, 0.5, 0.6, 0.6);, +        assertFalse(LineUtils.clipLine(line, rect));, +        assertTrue(lineEquals(line, 0.5, 0.5, 0.6, 0.6));, +, +        line.setLine(0.5, 0.5, 1.6, 0.6);, +        assertFalse(LineUtils.clipLine(line, rect));, +        assertTrue(lineEquals(line, 0.5, 0.5, 1.6, 0.6));, +, +        line.setLine(0.5, 0.5, 2.6, 0.6);, +        assertFalse(LineUtils.clipLine(line, rect));, +        assertTrue(lineEquals(line, 0.5, 0.5, 2.6, 0.6));, +, +        line.setLine(0.5, 0.5, 0.6, 1.6);, +        assertFalse(LineUtils.clipLine(line, rect));, +        assertTrue(lineEquals(line, 0.5, 0.5, 0.6, 1.6));, +, +        line.setLine(0.5, 0.5, 1.6, 1.6);, +        assertTrue(LineUtils.clipLine(line, rect));, +        assertTrue(lineEquals(line, 1.0, 1.0, 1.6, 1.6));, +, +        line.setLine(0.5, 0.5, 2.6, 1.6);, +        assertTrue(LineUtils.clipLine(line, rect));, +        assertTrue(lineEquals(line, 1.4545454545454546, 1.0, 2.0,, +                1.2857142857142858));, +, +        line.setLine(0.5, 0.5, 0.5, 2.6);]
[+++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, + * using the {@code double} primitive.  The two key subclasses are, +     * Sets the auto range attribute.  If the {@code notify} flag is set,, +     * all registered listeners.  Furthermore, if {@code turnOffAutoRange}, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, + * using the {@code double} primitive.  The two key subclasses are, +     * Sets the auto range attribute.  If the {@code notify} flag is set,, +     * all registered listeners.  Furthermore, if {@code turnOffAutoRange}, +++ b/src/main/java/org/jfree/chart/encoders/SunJPEGEncoderAdapter.java, +     * Creates a new {@code SunJPEGEncoderAdapter} instance., +     * @throws NullPointerException if {@code bufferedImage} is, +     * @throws NullPointerException if {@code bufferedImage} is {@code null}., +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, + * using the {@code double} primitive.  The two key subclasses are, +     * Sets the auto range attribute.  If the {@code notify} flag is set,, +     * all registered listeners.  Furthermore, if {@code turnOffAutoRange}, +++ b/src/main/java/org/jfree/chart/encoders/SunJPEGEncoderAdapter.java, +     * Creates a new {@code SunJPEGEncoderAdapter} instance., +     * @throws NullPointerException if {@code bufferedImage} is, +     * @throws NullPointerException if {@code bufferedImage} is {@code null}., +++ b/src/main/java/org/jfree/chart/labels/StandardXYSeriesLabelGenerator.java, + * This class implements {@code PublicCloneable} by mistake but we retain, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, + * using the {@code double} primitive.  The two key subclasses are, +     * Sets the auto range attribute.  If the {@code notify} flag is set,, +     * all registered listeners.  Furthermore, if {@code turnOffAutoRange}, +++ b/src/main/java/org/jfree/chart/encoders/SunJPEGEncoderAdapter.java, +     * Creates a new {@code SunJPEGEncoderAdapter} instance., +     * @throws NullPointerException if {@code bufferedImage} is, +     * @throws NullPointerException if {@code bufferedImage} is {@code null}., +++ b/src/main/java/org/jfree/chart/labels/StandardXYSeriesLabelGenerator.java, + * This class implements {@code PublicCloneable} by mistake but we retain, +++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, + * using the {@code double} primitive.  The two key subclasses are, +     * Sets the auto range attribute.  If the {@code notify} flag is set,, +     * all registered listeners.  Furthermore, if {@code turnOffAutoRange}, +++ b/src/main/java/org/jfree/chart/encoders/SunJPEGEncoderAdapter.java, +     * Creates a new {@code SunJPEGEncoderAdapter} instance., +     * @throws NullPointerException if {@code bufferedImage} is, +     * @throws NullPointerException if {@code bufferedImage} is {@code null}., +++ b/src/main/java/org/jfree/chart/labels/StandardXYSeriesLabelGenerator.java, + * This class implements {@code PublicCloneable} by mistake but we retain, +++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/MeterPlot.java, +     * Creates a new plot with a default range of {@code 0} to {@code 100} and , +     * no value to display., +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, + * using the {@code double} primitive.  The two key subclasses are, +     * Sets the auto range attribute.  If the {@code notify} flag is set,, +     * all registered listeners.  Furthermore, if {@code turnOffAutoRange}, +++ b/src/main/java/org/jfree/chart/encoders/SunJPEGEncoderAdapter.java, +     * Creates a new {@code SunJPEGEncoderAdapter} instance., +     * @throws NullPointerException if {@code bufferedImage} is, +     * @throws NullPointerException if {@code bufferedImage} is {@code null}., +++ b/src/main/java/org/jfree/chart/labels/StandardXYSeriesLabelGenerator.java, + * This class implements {@code PublicCloneable} by mistake but we retain, +++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/MeterPlot.java, +     * Creates a new plot with a default range of {@code 0} to {@code 100} and , +     * no value to display., +++ b/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java, + * {@code StackedXYAreaChartDemo2.java} program included in the, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, + * using the {@code double} primitive.  The two key subclasses are, +     * Sets the auto range attribute.  If the {@code notify} flag is set,, +     * all registered listeners.  Furthermore, if {@code turnOffAutoRange}, +++ b/src/main/java/org/jfree/chart/encoders/SunJPEGEncoderAdapter.java, +     * Creates a new {@code SunJPEGEncoderAdapter} instance., +     * @throws NullPointerException if {@code bufferedImage} is, +     * @throws NullPointerException if {@code bufferedImage} is {@code null}., +++ b/src/main/java/org/jfree/chart/labels/StandardXYSeriesLabelGenerator.java, + * This class implements {@code PublicCloneable} by mistake but we retain, +++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/MeterPlot.java, +     * Creates a new plot with a default range of {@code 0} to {@code 100} and , +     * no value to display., +++ b/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java, + * {@code StackedXYAreaChartDemo2.java} program included in the, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java, + * {@code XYStepAreaRendererDemo1.java} program included in the JFreeChart, +     * @return {@code double} the value on the range axis which defines, +     * @return {@code double} value inside the data area., +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, + * using the {@code double} primitive.  The two key subclasses are, +     * Sets the auto range attribute.  If the {@code notify} flag is set,, +     * all registered listeners.  Furthermore, if {@code turnOffAutoRange}, +++ b/src/main/java/org/jfree/chart/encoders/SunJPEGEncoderAdapter.java, +     * Creates a new {@code SunJPEGEncoderAdapter} instance., +     * @throws NullPointerException if {@code bufferedImage} is, +     * @throws NullPointerException if {@code bufferedImage} is {@code null}., +++ b/src/main/java/org/jfree/chart/labels/StandardXYSeriesLabelGenerator.java, + * This class implements {@code PublicCloneable} by mistake but we retain, +++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/MeterPlot.java]
[+++ b/ant/build.xml, +        <property name="orsonpdf.version" value="1.7" />]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, +        if (isItemLabelVisible(series, item)) {, +            drawItemLabel(g2, orientation, dataset, series, item, , +                    block.getCenterX(), block.getCenterY(), y < 0.0);, +        }, +]
[+++ b/maven/README.txt, +pom-dev.xml - a pom file for use in Maven-enabled IDEs such as NetBeans.  , +              Defines the dependencies required by the demo files, and includes , +              the demo source files in the build.  This build includes JavaFX , +              support, and so requires JDK 1.8.0_40 or later., +++ b/maven/README.txt, +pom-dev.xml - a pom file for use in Maven-enabled IDEs such as NetBeans.  , +              Defines the dependencies required by the demo files, and includes , +              the demo source files in the build.  This build includes JavaFX , +              support, and so requires JDK 1.8.0_40 or later., +++ b/maven/pom-dev.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<project xmlns="http://maven.apache.org/POM/4.0.0", +         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0, +                             http://maven.apache.org/maven-v4_0_0.xsd">, +, +    <modelVersion>4.0.0</modelVersion>, +, +    <name>JFreeChart</name>, +, +    <artifactId>jfreechart</artifactId>, +    <groupId>org.jfree</groupId>, +    <version>1.5.0-SNAPSHOT</version>, +    <packaging>jar</packaging>, +, +    <!-- this is required to host it on Sonatype's OSSRH -->, +    <parent>, +        <groupId>org.sonatype.oss</groupId>, +        <artifactId>oss-parent</artifactId>, +        <version>9</version>, +    </parent>, +, +    <organization>, +        <name>JFree.org</name>, +        <url>http://www.jfree.org/</url>, +    </organization>, +    <inceptionYear>2001</inceptionYear>, +, +    <description>, +        JFreeChart is a class library, written in Java, for generating charts. , +        Utilising the Java2D APIs, it currently supports bar charts, pie charts, , +        line charts, XY-plots and time series plots., +    </description>, +, +    <url>http://www.jfree.org/jfreechart/</url>, +    <issueManagement>, +        <url>https://github.com/jfree/jfreechart/issues</url>, +        <system>GitHub Issues</system>, +    </issueManagement>, +    <scm>, +        <connection>scm:git:git:https://github.com/jfree/jfreechart.git</connection>, +        <url>https://github.com/jfree/jfreechart</url>, +    </scm>, +, +    <licenses>, +        <license>, +            <name>GNU Lesser General Public Licence</name>, +            <url>http://www.gnu.org/licenses/lgpl.txt</url>, +            <distribution>repo</distribution>, +        </license>, +    </licenses>, +, +    <dependencies>, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jcommon</artifactId>, +            <version>1.0.23</version>, +        </dependency>, +, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +        <!-- JFreeSVG enables SVG export -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jfreesvg</artifactId>, +            <version>3.0</version>, +        </dependency>, +        , +        <!-- OrsonPDF enables PDF export -->, +        <dependency>, +            <groupId>com.orsonpdf</groupId>, +            <artifactId>orsonpdf</artifactId>, +            <version>1.7</version>, +        </dependency>, +, +        <dependency>, +            <groupId>javax.servlet</groupId>, +            <artifactId>servlet-api</artifactId>, +            <version>2.5</version>, +            <scope>provided</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>junit</groupId>]
[+++ b/.gitignore, +, +# Intellij Idea, +.idea, +++ b/.gitignore, +, +# Intellij Idea, +.idea, +++ b/README.md, +### Status, +, +[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.jfree/jfreechart/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.postgresql/postgresql), +]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.7" />, +        <property name="itext.version" value="2.0.6" />]
[+++ b/src/test/java/org/jfree/chart/plot/MeterPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        plot1.setDialOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        plot2.setDialOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        plot1.setDialBackgroundPaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        plot2.setDialBackgroundPaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        plot1.setDialOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.GREEN,, +                3.0f, 4.0f, Color.RED));, +        plot2.setDialOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.GREEN,, +                3.0f, 4.0f, Color.RED));, +        plot1.setNeedlePaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        plot2.setNeedlePaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        plot1.setValuePaint(new GradientPaint(1.0f, 2.0f, Color.BLACK,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setValuePaint(new GradientPaint(1.0f, 2.0f, Color.BLACK,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setTickLabelPaint(Color.RED);, +        plot2.setTickLabelPaint(Color.RED);, +        plot1.setTickPaint(Color.GREEN);, +        plot2.setTickPaint(Color.GREEN);, +        p1.setDialBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p1.setDialOutlinePaint(new GradientPaint(4.0f, 3.0f, Color.RED,, +                2.0f, 1.0f, Color.BLUE));, +        p1.setNeedlePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p1.setTickLabelPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p1.setTickPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +++ b/src/test/java/org/jfree/chart/plot/MeterPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        plot1.setDialOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        plot2.setDialOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        plot1.setDialBackgroundPaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        plot2.setDialBackgroundPaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        plot1.setDialOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.GREEN,, +                3.0f, 4.0f, Color.RED));, +        plot2.setDialOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.GREEN,, +                3.0f, 4.0f, Color.RED));, +        plot1.setNeedlePaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        plot2.setNeedlePaint(new GradientPaint(9.0f, 8.0f, Color.RED,, +                7.0f, 6.0f, Color.BLUE));, +        plot1.setValuePaint(new GradientPaint(1.0f, 2.0f, Color.BLACK,, +                3.0f, 4.0f, Color.WHITE));, +        plot2.setValuePaint(new GradientPaint(1.0f, 2.0f, Color.BLACK,, +                3.0f, 4.0f, Color.WHITE));, +        plot1.setTickLabelPaint(Color.RED);, +        plot2.setTickLabelPaint(Color.RED);, +        plot1.setTickPaint(Color.GREEN);, +        plot2.setTickPaint(Color.GREEN);, +        p1.setDialBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p1.setDialOutlinePaint(new GradientPaint(4.0f, 3.0f, Color.RED,, +                2.0f, 1.0f, Color.BLUE));, +        p1.setNeedlePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p1.setTickLabelPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        p1.setTickPaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +++ b/src/test/java/org/jfree/chart/plot/PolarPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        plot1.setAngleGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        plot2.setAngleGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED,, +                3.0f, 4.0f, Color.BLUE));, +        plot1.setAngleLabelPaint(new GradientPaint(9.0f, 8.0f, Color.BLUE,, +                7.0f, 6.0f, Color.RED));, +        plot2.setAngleLabelPaint(new GradientPaint(9.0f, 8.0f, Color.BLUE,, +                7.0f, 6.0f, Color.RED));, +        plot1.setRadiusGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.BLACK));, +        plot2.setRadiusGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.WHITE,, +                3.0f, 4.0f, Color.BLACK));, +        lic1.add(new LegendItem("XYZ", Color.RED));, +        lic2.add(new LegendItem("XYZ", Color.RED));, +        p1.setAngleGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,, +                4.0f, Color.BLUE));, +        p1.setAngleLabelPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,, +                4.0f, Color.BLUE));, +        p1.setRadiusGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,, +                4.0f, Color.BLUE));, +++ b/src/test/java/org/jfree/chart/plot/MeterPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors.]
[+++ b/src/main/java/org/jfree/chart/util/PaintAlpha.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/util/PaintAlpha.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/util/SerialUtils.java, +     * Reads a {@code Paint} object that has been serialised by the, +     * {@link #writePaint(Paint, ObjectOutputStream)} method., +     * Reads a {@code Stroke} object that has been serialised by the, +     * {@link #writeStroke(Stroke, ObjectOutputStream)} method., +     * @param stream  the input stream ({@code null} not permitted)., +     * @return The stroke object (possibly {@code null})., +     * Reads a {@code Composite} object that has been serialised by the, +     * {@link #writeComposite(Composite, ObjectOutputStream)}, +     * @param stream  the input stream ({@code null} not permitted)., +     * @return The composite object (possibly {@code null})., +     * Reads a {@code AttributedString} object that has been serialised by, +     * the {@link #writeAttributedString(AttributedString,, +     * @param stream  the input stream ({@code null} not permitted)., +     * @return The attributed string object (possibly {@code null})., +++ b/src/main/java/org/jfree/chart/util/PaintAlpha.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/util/SerialUtils.java, +     * Reads a {@code Paint} object that has been serialised by the, +     * {@link #writePaint(Paint, ObjectOutputStream)} method., +     * Reads a {@code Stroke} object that has been serialised by the, +     * {@link #writeStroke(Stroke, ObjectOutputStream)} method., +     * @param stream  the input stream ({@code null} not permitted)., +     * @return The stroke object (possibly {@code null})., +     * Reads a {@code Composite} object that has been serialised by the, +     * {@link #writeComposite(Composite, ObjectOutputStream)}, +     * @param stream  the input stream ({@code null} not permitted)., +     * @return The composite object (possibly {@code null})., +     * Reads a {@code AttributedString} object that has been serialised by, +     * the {@link #writeAttributedString(AttributedString,, +     * @param stream  the input stream ({@code null} not permitted)., +     * @return The attributed string object (possibly {@code null})., +++ b/src/main/java/org/jfree/data/time/Quarter.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Quarter(Date, TimeZone, Locale)]
[+++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, +     *         index from the {@code rowKey} field., +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, +     *         index from the {@code rowKey} field., +++ b/src/main/java/org/jfree/chart/entity/ChartEntity.java, +     * should be {@code XHTML 1.0} compliant.]
[+++ b/maven/README.txt, +INFO ABOUT MAVEN POM FILES, +--------------------------, +, +To make use of a particular file, copy its contents to the pom.xml file in the , +root directory., +pom-1.6.xml - builds JFreeChart without JavaFX support (jfreechart-1.0.x.jar). , +              This requires JDK 1.6 or later, and is the default., +pom-javafx.xml - builds JFreeChart including JavaFX support , +                 (jfreechart-1.5.x.jar).  This requires JDK 1.8.0_40 or later., +             This build includes JavaFX support, and so requires JDK 1.8.0_40 , +             or later.]
[+++ b/maven/README.txt, +This folder contains Maven POM files that can be used for different purposes. , +To make use of a particular file, copy it to the pom.xml file in the root directory., +, +pom-1.6.xml - builds jfreechart-1.0.x.jar using JDK 1.6 (excludes JavaFX):, +, +pom-1.8.xml - builds jfreechart-fx-1.0.x.jar using JDK 1.8.0_40 or later., +, +pom-nb.xml - a pom file for use in NetBeans.  Defines the dependencies required, +by the demo files, and includes the demo source files in the build.]
[+++ b/README.txt, +10 April 2009, +you can probably get it to compile and run with JDK 1.2).  If you are using, +JFreeChart to create applets, this means that you cannot rely on the JVM, +integrated with Microsoft's Internet Explorer - your users will need to have, +the Java 2 plug-in installed.  Most other browsers (e.g. Firefox, Mozilla,, +Netscape, Konqueror) support JRE 1.4, 1.5 or 1.6., +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.16), +Priority support is offered (in a separate forum at www.object-refinery.com) to, +companies and institutions that have purchased a site licence for the, +JFreeChart Developer Guide., +If you want to rebuild the JFreeChart jar file, we highly recommend that you, +use this script as it includes certain files (for example, .properties files), +that you MUST have in the jar file for JFreeChart to function correctly., +      use PNG format;, +    - copying charts to the clipboard (supported by the ChartPanel class) will, +      not work if you are running on a very old version of the Java runtime, +      (version 1.3.1)., +1.0.13 : (10-Apr-2009), +        - there are some significant new features in this release, as well, +          as performance enhancements and bug fixes - see the NEWS and, +          ChangeLog files for details.]
[+++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(imageRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(imageRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYTitleAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(titleRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(imageRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYTitleAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(titleRect);, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +            Point2D anchorPoint = position.getCategoryAnchor().getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(imageRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYTitleAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(titleRect);, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +            Point2D anchorPoint = position.getCategoryAnchor().getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/block/LabelBlock.java, +        Point2D pt = this.textAnchor.getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(imageRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYTitleAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(titleRect);, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +            Point2D anchorPoint = position.getCategoryAnchor().getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/block/LabelBlock.java, +        Point2D pt = this.textAnchor.getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java, +        Point2D pt2 = this.valueAnchor.getAnchorPoint(bounds);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(imageRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYTitleAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(titleRect);, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +            Point2D anchorPoint = position.getCategoryAnchor().getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/block/LabelBlock.java, +        Point2D pt = this.textAnchor.getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java, +        Point2D pt2 = this.valueAnchor.getAnchorPoint(bounds);, +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +        return anchor.getAnchorPoint(anchorRect);, +        return anchor.getAnchorPoint(anchorRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(imageRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYTitleAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(titleRect);, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +            Point2D anchorPoint = position.getCategoryAnchor().getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/block/LabelBlock.java, +        Point2D pt = this.textAnchor.getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java, +        Point2D pt2 = this.valueAnchor.getAnchorPoint(bounds);, +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +        return anchor.getAnchorPoint(anchorRect);, +        return anchor.getAnchorPoint(anchorRect);, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +        return anchor.getAnchorPoint(anchorRect);, +        return anchor.getAnchorPoint(anchorRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(imageRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYTitleAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(titleRect);, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +            Point2D anchorPoint = position.getCategoryAnchor().getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/block/LabelBlock.java, +        Point2D pt = this.textAnchor.getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java, +        Point2D pt2 = this.valueAnchor.getAnchorPoint(bounds);, +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +        return anchor.getAnchorPoint(anchorRect);, +        return anchor.getAnchorPoint(anchorRect);, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +        return anchor.getAnchorPoint(anchorRect);, +        return anchor.getAnchorPoint(anchorRect);, +++ b/src/main/java/org/jfree/chart/title/LegendGraphic.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +            Point2D location = this.shapeLocation.getAnchorPoint(area);, +            Point2D location = this.shapeLocation.getAnchorPoint(area);, +++ b/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(imageRect);, +++ b/src/main/java/org/jfree/chart/annotations/XYTitleAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Point2D anchorPoint = this.anchor.getAnchorPoint(titleRect);]
[+++ b/src/main/java/org/jfree/chart/ChartFactory.java, +                    plot.setSectionPaint(key, Color.GREEN);, +                    plot.setSectionPaint(key, Color.RED);, +                    plot.setSectionPaint(key, Color.GREEN);, +                    plot.setSectionPaint(key, Color.RED);, +        baseline.setPaint(Color.BLACK);, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +                    plot.setSectionPaint(key, Color.GREEN);, +                    plot.setSectionPaint(key, Color.RED);, +                    plot.setSectionPaint(key, Color.GREEN);, +                    plot.setSectionPaint(key, Color.RED);, +        baseline.setPaint(Color.BLACK);, +++ b/src/main/java/org/jfree/chart/LegendItem.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        this(label, Color.BLACK);, +                /* shape outlined */ false, Color.BLACK, UNUSED_STROKE,, +                Color.BLACK);, +                Color.BLACK);, +                /* shape filled = */ false, Color.BLACK,, +                /* shape outlined = */ false, Color.BLACK, UNUSED_STROKE,, +                /* shape outlined = */ false, Color.BLACK, UNUSED_STROKE,, +                Color.BLACK);, +                Color.BLACK);, +                /* shape filled = */ false, Color.BLACK,, +                /* shape outlined = */ false, Color.BLACK, UNUSED_STROKE,, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +                    plot.setSectionPaint(key, Color.GREEN);, +                    plot.setSectionPaint(key, Color.RED);, +                    plot.setSectionPaint(key, Color.GREEN);, +                    plot.setSectionPaint(key, Color.RED);, +        baseline.setPaint(Color.BLACK);, +++ b/src/main/java/org/jfree/chart/LegendItem.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        this(label, Color.BLACK);, +                /* shape outlined */ false, Color.BLACK, UNUSED_STROKE,, +                Color.BLACK);, +                Color.BLACK);, +                /* shape filled = */ false, Color.BLACK,, +                /* shape outlined = */ false, Color.BLACK, UNUSED_STROKE,, +                /* shape outlined = */ false, Color.BLACK, UNUSED_STROKE,, +                Color.BLACK);, +                Color.BLACK);, +                /* shape filled = */ false, Color.BLACK,, +                /* shape outlined = */ false, Color.BLACK, UNUSED_STROKE,, +++ b/src/main/java/org/jfree/chart/annotations/CategoryLineAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited., +    private transient Paint paint = Color.BLACK;]
[+++ b/ant/build.xml, +                <pathelement location="${basedir}/lib/${jfreechart.name}-${jfreechart.version}.jar"/>, +                <pathelement location="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-experimental.jar"/>, +                <pathelement location="${basedir}/lib/${jfreechart.name}-${jfreechart.version}.jar"/>, +                <pathelement location="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-experimental.jar"/>]
[+++ b/src/main/java/org/jfree/chart/ui/RectangleInsets.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +     * Creates a new instance with all insets initialised to {@code 1.0}., +    public RectangleInsets(double top, double left, double bottom, , +            double right) {, +     * @param unitType  absolute or relative units ({@code null} not , +    public RectangleInsets(UnitType unitType, double top, double left, , +            double bottom, double right) {, +     * @return The unit type (never {@code null})., +     * @param obj  the object ({@code null} permitted)., +    @Override, +    public boolean equals(Object obj) {, +    @Override, +    @Override, +     * @param base  the base rectangle ({@code null} not permitted)., +     * @param horizontal  the horizontal adjustment type ({@code null} not, +     * @param vertical  the vertical adjustment type ({@code null} not , +    public Rectangle2D createAdjustedRectangle(Rectangle2D base,, +            LengthAdjustmentType horizontal, LengthAdjustmentType vertical) {, +     * @param base  the base rectangle ({@code null} not permitted)., +    public Rectangle2D createInsetRectangle(Rectangle2D base) {, +     * @param base  the base rectangle ({@code null} not permitted)., +    public Rectangle2D createInsetRectangle(Rectangle2D base,, +            boolean horizontal, boolean vertical) {, +        return new Rectangle2D.Double(base.getX() + leftMargin, , +                base.getHeight() - topMargin - bottomMargin);, +     * @param base  the base rectangle ({@code null} not permitted)., +    public Rectangle2D createOutsetRectangle(Rectangle2D base) {, +     * @param base  the base rectangle ({@code null} not permitted)., +    public Rectangle2D createOutsetRectangle(Rectangle2D base,, +            boolean horizontal, boolean vertical) {, +        return new Rectangle2D.Double(base.getX() - leftMargin, , +                base.getHeight() + topMargin + bottomMargin);, +    public double calculateTopInset(double height) {, +    public double calculateTopOutset(double height) {, +    public double calculateBottomInset(double height) {, +    public double calculateBottomOutset(double height) {, +    public double calculateLeftInset(double width) {, +    public double calculateLeftOutset(double width) {, +    public double calculateRightInset(double width) {, +    public double calculateRightOutset(double width) {, +    public double trimWidth(double width) {, +    public double extendWidth(double width) {, +    public double trimHeight(double height) {, +        return height - calculateTopInset(height) , +                - calculateBottomInset(height);   , +    public double extendHeight(double height) {, +        return height + calculateTopOutset(height) , +                + calculateBottomOutset(height);   , +     * @param area  the area ({@code null} not permitted)., +    public void trim(Rectangle2D area) {, +        double w = area.getWidth();, +        double h = area.getHeight();, +        double l = calculateLeftInset(w);, +        double r = calculateRightInset(w);, +        double t = calculateTopInset(h);, +        double b = calculateBottomInset(h);]
[+++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.19" />, +++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.19" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.19" />]
[+++ b/src/main/java/org/jfree/chart/imagemap/ToolTipTagFragmentGenerator.java, + * The fragment should be {@code XHTML 1.0} compliant., +     * Note that the {@code toolTipText} may have been generated from, +++ b/src/main/java/org/jfree/chart/imagemap/ToolTipTagFragmentGenerator.java, + * The fragment should be {@code XHTML 1.0} compliant., +     * Note that the {@code toolTipText} may have been generated from, +++ b/src/main/java/org/jfree/chart/imagemap/URLTagFragmentGenerator.java, +     * Note that the {@code urlText} will be created by a URL generator, +++ b/src/main/java/org/jfree/chart/imagemap/ToolTipTagFragmentGenerator.java, + * The fragment should be {@code XHTML 1.0} compliant., +     * Note that the {@code toolTipText} may have been generated from, +++ b/src/main/java/org/jfree/chart/imagemap/URLTagFragmentGenerator.java, +     * Note that the {@code urlText} will be created by a URL generator, +++ b/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java, + * {@code LayeredBarChartDemo1.java} program included in the JFreeChart, +++ b/src/main/java/org/jfree/chart/imagemap/ToolTipTagFragmentGenerator.java, + * The fragment should be {@code XHTML 1.0} compliant., +     * Note that the {@code toolTipText} may have been generated from, +++ b/src/main/java/org/jfree/chart/imagemap/URLTagFragmentGenerator.java, +     * Note that the {@code urlText} will be created by a URL generator, +++ b/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java, + * {@code LayeredBarChartDemo1.java} program included in the JFreeChart, +++ b/src/main/java/org/jfree/data/xy/YisSymbolic.java, +     * {@code series} and {@code item} parameters., +     * Returns the symbolic value linked with the specified {@code Integer}.]
[+++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/entity/LegendItemEntity.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/entity/LegendItemEntity.java, +++ b/src/main/java/org/jfree/chart/plot/PolarPlot.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/entity/LegendItemEntity.java, +++ b/src/main/java/org/jfree/chart/plot/PolarPlot.java, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/entity/LegendItemEntity.java, +++ b/src/main/java/org/jfree/chart/plot/PolarPlot.java, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +++ b/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java, +        return this.maxItemWidth;, +        this.maxItemWidth = percent;, +        fireChangeEvent();, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/entity/LegendItemEntity.java, +++ b/src/main/java/org/jfree/chart/plot/PolarPlot.java, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +++ b/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java, +        return this.maxItemWidth;, +        this.maxItemWidth = percent;, +        fireChangeEvent();, +++ b/src/main/java/org/jfree/chart/title/LegendItemBlockContainer.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/entity/LegendItemEntity.java, +++ b/src/main/java/org/jfree/chart/plot/PolarPlot.java, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +++ b/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java, +        return this.maxItemWidth;, +        this.maxItemWidth = percent;, +        fireChangeEvent();, +++ b/src/main/java/org/jfree/chart/title/LegendItemBlockContainer.java, +++ b/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/entity/LegendItemEntity.java, +++ b/src/main/java/org/jfree/chart/plot/PolarPlot.java, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +++ b/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java, +        return this.maxItemWidth;, +        this.maxItemWidth = percent;, +        fireChangeEvent();, +++ b/src/main/java/org/jfree/chart/title/LegendItemBlockContainer.java, +++ b/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +        double zero = valueToJava2D(0.0, dataArea, edge);, +        double x1 = valueToJava2D(unit1.getSize(), dataArea, edge);, +        double x2 = valueToJava2D(unit2.getSize(), dataArea, edge);, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/entity/LegendItemEntity.java, +++ b/src/main/java/org/jfree/chart/plot/PolarPlot.java, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +++ b/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java, +        return this.maxItemWidth;, +        this.maxItemWidth = percent;, +        fireChangeEvent();, +++ b/src/main/java/org/jfree/chart/title/LegendItemBlockContainer.java, +++ b/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java, +++ /dev/null, +++ /dev/null]
[+++ b/README.txt]
[+++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.17), +++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.17), +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.14" />, +        <property name="jcommon.version" value="1.0.17" />, +++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.17), +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.14" />, +        <property name="jcommon.version" value="1.0.17" />, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.14" />, +        <property name="jcommon.version" value="1.0.17" />, +++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.17), +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.14" />, +        <property name="jcommon.version" value="1.0.17" />, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.14" />, +        <property name="jcommon.version" value="1.0.17" />, +++ /dev/null, +++ b/README.txt, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.17), +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.14" />, +        <property name="jcommon.version" value="1.0.17" />, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.14" />, +        <property name="jcommon.version" value="1.0.17" />, +++ /dev/null, +++ b/lib/jcommon-1.0.17.jar]
[+++ b/ant/build.xml, +        <copy file="${basedir}/lib/orsoncharts-${orsoncharts.version}.jar" tofile="${basedir}/distribution/lib/orsoncharts-${orsoncharts.version}.jar" failonerror="false" />]
[+++ b/NEWS, +24 November 2013, +> Orson Charts in action.  Orson Charts is not free, but provides a superb, +> complement to the extensive 2D charting capabilities of JFreeChart., +++ b/NEWS, +24 November 2013, +> Orson Charts in action.  Orson Charts is not free, but provides a superb, +> complement to the extensive 2D charting capabilities of JFreeChart., +++ b/README.txt, +24 November 2013, +An additional tab added to the demo application in version 1.0.17 showcases, +Orson Charts 3D, a new library by Object Refinery Limited.  You can find out, +more about Orson Charts at:, +, +    http://www.object-refinery.com/orsoncharts/, +]
[+++ b/pom.xml, +<!--            <plugin>, +            </plugin> -->, +++ b/pom.xml, +<!--            <plugin>, +            </plugin> -->, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., +++ b/pom.xml, +<!--            <plugin>, +            </plugin> -->, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., +++ /dev/null, +++ b/pom.xml, +<!--            <plugin>, +            </plugin> -->, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +<!--            <plugin>, +            </plugin> -->, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +<!--            <plugin>, +            </plugin> -->, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +<!--            <plugin>, +            </plugin> -->, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +<!--            <plugin>, +            </plugin> -->, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +<!--            <plugin>, +            </plugin> -->, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/README.txt, +*  JFREECHART: Version 1.0.8  *, +23 November 2007, +(jfreechart-1.0.8-install.pdf) from the JFreeChart home, +    java -jar jfreechart-1.0.8-demo.jar, +1.0.8 : (23-Nov-2007), +        - primarily a bug fix release.  See the NEWS and ChangeLog files for a , +          more detailed description of the changes in this release., +]
[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jfree/data/general/HeatMapUtils.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * -----------------, + * HeatMapUtils.java, + * -----------------, + * (C) Copyright 2009-2017, by Object Refinery Limited., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes:, + * --------, + * 28-Jan-2009 : Version 1 (DG);, + * 03-Jul-2013 : Use ParamChecks (DG);, + *, + */, +, +package org.jfree.data.general;, +, +import java.awt.Graphics2D;, +import java.awt.Paint;, +import java.awt.image.BufferedImage;, +import org.jfree.chart.renderer.PaintScale;, +import org.jfree.chart.util.ParamChecks;, +import org.jfree.data.xy.XYDataset;, +import org.jfree.data.xy.XYSeries;, +import org.jfree.data.xy.XYSeriesCollection;, +, +/**, + * A utility class for the {@link HeatMapDataset}., + *, + * @since 1.0.13, + */, +public abstract class HeatMapUtils {, +, +    /**, +     * Returns a dataset containing one series that holds a copy of the (x, z), +     * data from one row (y-index) of the specified dataset., +     *, +     * @param dataset  the dataset ({@code null} not permitted)., +     * @param row  the row (y) index., +     * @param seriesName  the series name/key ({@code null} not permitted)., +     *, +     * @return The dataset., +     */, +    public static XYDataset extractRowFromHeatMapDataset(HeatMapDataset dataset,, +            int row, Comparable seriesName) {, +        XYSeries series = new XYSeries(seriesName);, +        int cols = dataset.getXSampleCount();, +        for (int c = 0; c < cols; c++) {, +            series.add(dataset.getXValue(c), dataset.getZValue(c, row));, +        }, +        XYSeriesCollection result = new XYSeriesCollection(series);, +        return result;, +    }, +, +    /**, +     * Returns a dataset containing one series that holds a copy of the (y, z), +     * data from one column (x-index) of the specified dataset., +     *, +     * @param dataset  the dataset ({@code null} not permitted)., +     * @param column  the column (x) index., +     * @param seriesName  the series name ({@code null} not permitted)., +     *, +     * @return The dataset., +     */, +    public static XYDataset extractColumnFromHeatMapDataset(, +            HeatMapDataset dataset, int column, Comparable seriesName) {, +        XYSeries series = new XYSeries(seriesName);, +        int rows = dataset.getYSampleCount();, +        for (int r = 0; r < rows; r++) {, +            series.add(dataset.getYValue(r), dataset.getZValue(column, r));, +        }]
[+++ b/NEWS, +19 December 2008, +, +This release adds support for minor tick marks, mapping datasets to more than, +one axis, an important fix for the XYSeries class (relating to the, +addOrUpdate() method) plus numerous other bug fixes., +, +This release passes 1996 JUnit test (0 failures) on JRE 1.6.0_10., +, +API Adjustments:, +- CategoryPlot : added mapDatasetToDomainAxes() and mapDatasetToRangeAxes() , +    methods;, +- Month : added a new constructor Month(Date, TimeZone, Locale) and deprecated , +    Month(Date, TimeZone);, +- Quarter : added a new constructor Quarter(Date, TimeZone, Locale) and , +    deprecated Quarter(Date, TimeZone);, +- XYPlot : added mapDatasetToDomainAxes() and mapDatasetToRangeAxes() methods;, +- Year : added a new constructor Year(Date, TimeZone, Locale) and deprecated, +    Year(Date, TimeZone);, +2201869 : DateAxis tick label position error;, +++ b/NEWS, +19 December 2008, +, +This release adds support for minor tick marks, mapping datasets to more than, +one axis, an important fix for the XYSeries class (relating to the, +addOrUpdate() method) plus numerous other bug fixes., +, +This release passes 1996 JUnit test (0 failures) on JRE 1.6.0_10., +, +API Adjustments:, +- CategoryPlot : added mapDatasetToDomainAxes() and mapDatasetToRangeAxes() , +    methods;, +- Month : added a new constructor Month(Date, TimeZone, Locale) and deprecated , +    Month(Date, TimeZone);, +- Quarter : added a new constructor Quarter(Date, TimeZone, Locale) and , +    deprecated Quarter(Date, TimeZone);, +- XYPlot : added mapDatasetToDomainAxes() and mapDatasetToRangeAxes() methods;, +- Year : added a new constructor Year(Date, TimeZone, Locale) and deprecated, +    Year(Date, TimeZone);, +2201869 : DateAxis tick label position error;, +++ b/README.txt, +*  JFREECHART: Version 1.0.12  *, +19 December 2008, +We are grateful to the many developers that have contributed to JFreeChart., +The contributors are listed below in section 10., +, +(jfreechart-1.0.12-install.pdf) from the JFreeChart home, +Previously we offered commercial support options, but this has been , +discontinued as there wasn't sufficient uptake to meet the cost of , +providing this service., +    java -jar jfreechart-1.0.12-demo.jar, +--------------, +9.  WHAT's NEW, +--------------, +1.0.12 : (19-Dec-2008), +        - added support for minor tick marks, mapping datasets to more than, +          one axis, and numerous bug fixes - see the NEWS and ChangeLog files, +          for details., +]
[+++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialFrame.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this.backgroundPaint = Color.GRAY;, +        this.foregroundPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialFrame.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this.backgroundPaint = Color.GRAY;, +        this.foregroundPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this.tickLabelPaint = Color.BLUE;, +        this.majorTickPaint = Color.BLACK;, +        this.minorTickPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialFrame.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this.backgroundPaint = Color.GRAY;, +        this.foregroundPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this.tickLabelPaint = Color.BLUE;, +        this.majorTickPaint = Color.BLACK;, +        this.minorTickPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/renderer/WaferMapRenderer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +                    Paint outlinePaint = Color.BLACK;, +                        Paint outlinePaint = Color.BLACK;]
[+++ b/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java, +import org.jfree.data.UnknownKeyException;, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +, +    @Rule, +    public ExpectedException exceptions = ExpectedException.none();, +, +    /**, +     * Check that methods taking row keys and column keys throw reasonable exceptions., +     */, +    @Test, +    public void testKeys() {, +        TaskSeries s1 = new TaskSeries("Series");, +        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));, +        s1.add(new Task("Task 2", new Date(10L), new Date(11L)));, +        s1.add(new Task("Task 3", new Date(20L), new Date(21L)));, +        TaskSeriesCollection u1 = new TaskSeriesCollection();, +        u1.add(s1);, +        SlidingGanttCategoryDataset d1 = new SlidingGanttCategoryDataset(, +                u1, 0, 5);, +, +        exceptions.expect(UnknownKeyException.class);, +        exceptions.expectMessage("Unknown columnKey");, +        d1.getValue(100, 700);, +, +        exceptions.expect(UnknownKeyException.class);, +        exceptions.expectMessage("Unknown rowKey");, +        d1.getValue(0, 700);, +    }, +]
[+++ b/src/main/java/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java, +    private Icon getIcon(Shape shape, final Paint fillPaint, final Paint outlinePaint) {, +    private Icon getIcon(Shape shape, final boolean fill, final boolean outline) {]
[+++ b/src/main/java/org/jfree/chart/ui/Align.java, +     * Aligns one rectangle ({@code rect}) relative to another rectangle ({@code frame})., +     * @param rect  the rectangle to be aligned ({@code null} not permitted)., +     * @param frame  the reference frame ({@code null} not permitted).]
[+++ b/ChangeLog, +2012-07-12  David Gilbert <david.gilbert@object-refinery.com>, +, +    (from Leo Leung), +    * org/jfree/chart/LocalisationBundle_ja.properties:, +    Updated translations., +, +++ b/ChangeLog, +2012-07-12  David Gilbert <david.gilbert@object-refinery.com>, +, +    (from Leo Leung), +    * org/jfree/chart/LocalisationBundle_ja.properties:, +    Updated translations., +, +++ b/source/org/jfree/chart/LocalizationBundle_ja.properties, +All_Axes=\u4e21\u8ef8, +Auto_Range=\u81ea\u52d5\u30b5\u30a4\u30b8\u30f3\u30b0, +Save_as...=\u5225\u540d\u3067\u4fdd\u5b58...]
[+++ b/pom.xml, +        <dependency>, +            <groupId>junit</groupId>, +            <artifactId>junit</artifactId>, +            <version>4.11</version>, +            <scope>test</scope>, +        </dependency>, +        , +        <dependency>, +            <groupId>org.hamcrest</groupId>, +            <artifactId>hamcrest-core</artifactId>, +            <version>1.3</version>, +            <scope>test</scope>, +        </dependency>, +]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, + * (C) Copyright 2000-2019, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2019, by Object Refinery Limited and Contributors., + * , + * <b>Subclassing</b>, + * If you create your own subclass of this renderer, please refer to the , + * Javadocs for {@link AbstractRenderer} for important information about, + * cloning., +        clone.defaultItemLabelGenerator = (XYItemLabelGenerator) , +                CloneUtils.clone(this.defaultItemLabelGenerator);, +        clone.defaultToolTipGenerator = (XYToolTipGenerator) CloneUtils.clone(, +                this.defaultToolTipGenerator);, +, +                CloneUtils.clone(this.legendItemLabelGenerator);, +        clone.legendItemToolTipGenerator = (XYSeriesLabelGenerator), +                CloneUtils.clone(this.legendItemToolTipGenerator);, +, +        clone.legendItemURLGenerator = (XYSeriesLabelGenerator), +                CloneUtils.clone(this.legendItemURLGenerator);, +        , +        clone.foregroundAnnotations = (List) CloneUtils.cloneList(, +        clone.backgroundAnnotations = (List) CloneUtils.cloneList(]
[+++ b/ant/build-fx.xml, +++ b/ant/build-fx.xml, +++ b/ant/build.xml]
[+++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +     * Creates a date axis., +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, +     * Creates a date axis., +++ b/src/main/java/org/jfree/chart/axis/Timeline.java, + * timeline values. In theory many transformations are possible., + * supports.]
[+++ b/ant/build.xml, +        <copy file="${basedir}/lib/swtgraphics2d.jar" tofile="${basedir}/distribution/lib/swtgraphics2d.jar" failonerror="false" />]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java, + * {@code DeviationRendererDemo1.java} program included in the JFreeChart demo , + * collection:, +     * A state object that is passed to each call to {@code drawItem()}., +     * @return {@code 3}., +++ b/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java, + * {@code DeviationRendererDemo1.java} program included in the JFreeChart demo , + * collection:, +     * A state object that is passed to each call to {@code drawItem()}., +     * @return {@code 3}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYErrorRenderer.java, + * the {@code XYErrorRendererDemo1.java} program included in the, +     * Creates a new {@code XYErrorRenderer} instance., +++ b/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java, + * {@code DeviationRendererDemo1.java} program included in the JFreeChart demo , + * collection:, +     * A state object that is passed to each call to {@code drawItem()}., +     * @return {@code 3}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYErrorRenderer.java, + * the {@code XYErrorRendererDemo1.java} program included in the, +     * Creates a new {@code XYErrorRenderer} instance., +++ b/src/main/java/org/jfree/data/KeyedValues2D.java, +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +++ b/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java, + * {@code DeviationRendererDemo1.java} program included in the JFreeChart demo , + * collection:, +     * A state object that is passed to each call to {@code drawItem()}., +     * @return {@code 3}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYErrorRenderer.java, + * the {@code XYErrorRendererDemo1.java} program included in the, +     * Creates a new {@code XYErrorRenderer} instance., +++ b/src/main/java/org/jfree/data/KeyedValues2D.java, +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +++ b/src/main/java/org/jfree/data/time/TimePeriodAnchor.java, + * {@code START}, {@code MIDDLE} and {@code END}., +++ b/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java, + * {@code DeviationRendererDemo1.java} program included in the JFreeChart demo , + * collection:, +     * A state object that is passed to each call to {@code drawItem()}., +     * @return {@code 3}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYErrorRenderer.java, + * the {@code XYErrorRendererDemo1.java} program included in the, +     * Creates a new {@code XYErrorRenderer} instance., +++ b/src/main/java/org/jfree/data/KeyedValues2D.java, +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +++ b/src/main/java/org/jfree/data/time/TimePeriodAnchor.java, + * {@code START}, {@code MIDDLE} and {@code END}., +++ b/src/main/java/org/jfree/data/xy/VectorSeriesCollection.java, +     * Creates a new {@code VectorSeriesCollection} instance., +++ b/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java, + * {@code DeviationRendererDemo1.java} program included in the JFreeChart demo , + * collection:, +     * A state object that is passed to each call to {@code drawItem()}., +     * @return {@code 3}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYErrorRenderer.java, + * the {@code XYErrorRendererDemo1.java} program included in the, +     * Creates a new {@code XYErrorRenderer} instance., +++ b/src/main/java/org/jfree/data/KeyedValues2D.java, +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +++ b/src/main/java/org/jfree/data/time/TimePeriodAnchor.java, + * {@code START}, {@code MIDDLE} and {@code END}., +++ b/src/main/java/org/jfree/data/xy/VectorSeriesCollection.java, +     * Creates a new {@code VectorSeriesCollection} instance., +++ b/src/main/java/org/jfree/data/xy/WindDataset.java, +     *     {@code getItemCount(series) - 1})., +     *     {@code getItemCount(series) - 1})., +++ b/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java, + * {@code DeviationRendererDemo1.java} program included in the JFreeChart demo , + * collection:, +     * A state object that is passed to each call to {@code drawItem()}., +     * @return {@code 3}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYErrorRenderer.java, + * the {@code XYErrorRendererDemo1.java} program included in the, +     * Creates a new {@code XYErrorRenderer} instance., +++ b/src/main/java/org/jfree/data/KeyedValues2D.java, +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +     * @throws IndexOutOfBoundsException if {@code row} is out of bounds., +++ b/src/main/java/org/jfree/data/time/TimePeriodAnchor.java, + * {@code START}, {@code MIDDLE} and {@code END}., +++ b/src/main/java/org/jfree/data/xy/VectorSeriesCollection.java, +     * Creates a new {@code VectorSeriesCollection} instance., +++ b/src/main/java/org/jfree/data/xy/WindDataset.java, +     *     {@code getItemCount(series) - 1})., +     *     {@code getItemCount(series) - 1})., +++ b/src/main/java/org/jfree/data/xy/XYIntervalDataItem.java, +     * Creates a new instance of {@code XYIntervalItem}.]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/src/main/java/org/jfree/chart/util/ShapeList.java, +    public Shape getShape(int index) {]
[+++ b/source/org/jfree/chart/editor/LocalizationBundle_es.properties, +# 14-Oct-2004 : Revised by: Leopoldo Federico P\u00ef\u00bf\u00bdrtile (Grupo de Procesamiento Digital de Im\u00ef\u00bf\u00bdgenes), +#               Universidad Tecnol\u00ef\u00bf\u00bdgica Nacional - Facultad Regional Resistencia, Argentina, +Edit_Insets=Regular la posici\u00f3n, +Font_Selection=Selecci\u00f3n de fuente, +Insets=Posici\u00f3n :, +Label_Insets=Posici\u00f3n de la etiqueta :, +Maximum_range_value=Valor m\u00e3ximo del eje :, +Minimum_range_value=Valor m\u00ednimo del eje :, +Orientation=Orientaci\u00f3n:, +Palette_Selection=Selecci\u00f3n de la paleta, +Pen_Stroke_Selection=Selecci\u00f3n del trazo, +Show_tick_labels=Visualizar etiquetas de graduaci\u00f3n de escala, +Show_tick_marks=Visualizar marcas de graduaci\u00f3n de escala, +Show_Title=Mostrar t\u00edtulo, +Stroke_Selection=Selecci\u00f3n del trazo, +Tick_label_font=Fuente de las etiquetas de graduaci\u00f3n de escala :, +Tick_Label_Insets=Posici\u00f3n de las etiquetas de graduaci\u00f3n de escala :, +Ticks=Etiquetas de graduaci\u00f3n de escala, +Title=T\u00edtulo, +Title_Color=Color del t\u00edtulo]
[+++ b/pom.xml, +    <version>1.6.0-snapshot</version>, +++ b/pom.xml, +    <version>1.6.0-snapshot</version>, +++ /dev/null, +++ b/pom.xml, +    <version>1.6.0-snapshot</version>, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +    <version>1.6.0-snapshot</version>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +    <version>1.6.0-snapshot</version>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/ant/build-swt.xml, +        <jar jarfile="${basedir}/lib/swtgraphics2d.jar", +        <jar jarfile="${basedir}/lib/${jfreechart.name}-${jfreechart.version}-swt.jar"]
[+++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +import org.jfree.data.DataUtils;, +            double total = DataUtils.calculateColumnTotal(dataset, column);, +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +import org.jfree.data.DataUtils;, +            double total = DataUtils.calculateColumnTotal(dataset, column);, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +import org.jfree.data.DataUtils;, +                double total = DataUtils.calculateColumnTotal(dataset,, +                double total = DataUtils.calculateColumnTotal(dataset,, +                double total = DataUtils.calculateColumnTotal(dataset,, +            total = DataUtils.calculateColumnTotal(dataset, index, , +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +import org.jfree.data.DataUtils;, +            double total = DataUtils.calculateColumnTotal(dataset, column);, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +import org.jfree.data.DataUtils;, +                double total = DataUtils.calculateColumnTotal(dataset,, +                double total = DataUtils.calculateColumnTotal(dataset,, +                double total = DataUtils.calculateColumnTotal(dataset,, +            total = DataUtils.calculateColumnTotal(dataset, index, , +++ b/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java, +import org.jfree.data.DataUtils;, +            total = DataUtils.calculateColumnTotal(dataset, column,, +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +import org.jfree.data.DataUtils;, +            double total = DataUtils.calculateColumnTotal(dataset, column);, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +import org.jfree.data.DataUtils;, +                double total = DataUtils.calculateColumnTotal(dataset,, +                double total = DataUtils.calculateColumnTotal(dataset,, +                double total = DataUtils.calculateColumnTotal(dataset,, +            total = DataUtils.calculateColumnTotal(dataset, index, , +++ b/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java, +import org.jfree.data.DataUtils;, +            total = DataUtils.calculateColumnTotal(dataset, column,, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +import org.jfree.data.DataUtils;, +            double total = DataUtils.calculateColumnTotal(dataset, column);, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +import org.jfree.data.DataUtils;, +                double total = DataUtils.calculateColumnTotal(dataset,, +                double total = DataUtils.calculateColumnTotal(dataset,, +                double total = DataUtils.calculateColumnTotal(dataset,, +            total = DataUtils.calculateColumnTotal(dataset, index, , +++ b/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java, +import org.jfree.data.DataUtils;, +            total = DataUtils.calculateColumnTotal(dataset, column,, +++ /dev/null, +++ b/src/main/java/org/jfree/data/DataUtils.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * --------------, + * DataUtils.java, + * --------------, + * (C) Copyright 2003-2017, by Object Refinery Limited and contributors., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   Peter Kolb (patch 2511330);, + *, + * Changes, + * -------, + * 05-Mar-2003 : Version 1 (DG);, + * 03-Mar-2005 : Moved createNumberArray() and createNumberArray2D() methods, + *               from the DatasetUtilities class (DG);, + * 17-May-2005 : Added calculateColumnTotal() and calculateRowTotal(), + *               methods (DG);, + * 28-Jan-2009 : Added equal(double[][], double[][]) method (DG);, + * 28-Jan-2009 : Added clone(double[][]) method (DG);, + * 04-Feb-2009 : Added calculateColumnTotal/RowTotal variants (PK);, + * 03-Jul-2013 : Use ParamChecks (DG);, + *, + */, +, +package org.jfree.data;]
[+++ b/src/main/java/org/jfree/data/json/JSONUtils.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2016, by Object Refinery Limited., +++ b/src/main/java/org/jfree/data/json/JSONUtils.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2016, by Object Refinery Limited., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * This class is for internal use by JFreeChart, it is not , +++ b/src/main/java/org/jfree/data/json/JSONUtils.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2016, by Object Refinery Limited., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * This class is for internal use by JFreeChart, it is not , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * <br><br>, + * This class is for internal use by JFreeChart, it is not , + * part of the supported API and you should not call it directly.  If you need, + * JSON support in your project you should include JSON.simple , + * (https://code.google.com/p/json-simple/) or some other JSON library directly, + * in your project., +++ b/src/main/java/org/jfree/data/json/JSONUtils.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2016, by Object Refinery Limited., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * This class is for internal use by JFreeChart, it is not , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * <br><br>, + * This class is for internal use by JFreeChart, it is not , + * part of the supported API and you should not call it directly.  If you need, + * JSON support in your project you should include JSON.simple , + * (https://code.google.com/p/json-simple/) or some other JSON library directly, + * in your project., +++ b/src/main/java/org/jfree/data/json/impl/JSONStreamAware.java, + * Beans that support customized output of JSON text to a writer shall , + * implement this interface.  , + * <br><br>, + * This class is for internal use by JFreeChart, it is not , + * part of the supported API and you should not call it directly.  If you need, + * JSON support in your project you should include JSON.simple , + * (https://code.google.com/p/json-simple/) or some other JSON library directly, + * in your project., +++ b/src/main/java/org/jfree/data/json/JSONUtils.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2016, by Object Refinery Limited., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * This class is for internal use by JFreeChart, it is not , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * <br><br>, + * This class is for internal use by JFreeChart, it is not , + * part of the supported API and you should not call it directly.  If you need, + * JSON support in your project you should include JSON.simple , + * (https://code.google.com/p/json-simple/) or some other JSON library directly, + * in your project., +++ b/src/main/java/org/jfree/data/json/impl/JSONStreamAware.java, + * Beans that support customized output of JSON text to a writer shall , + * implement this interface.  , + * <br><br>, + * This class is for internal use by JFreeChart, it is not , + * part of the supported API and you should not call it directly.  If you need, + * JSON support in your project you should include JSON.simple , + * (https://code.google.com/p/json-simple/) or some other JSON library directly, + * in your project., +++ b/src/main/java/org/jfree/data/json/impl/JSONValue.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * <br><br>, + * This class is for internal use by JFreeChart, it is not , + * part of the supported API and you should not call it directly.  If you need, + * JSON support in your project you should include JSON.simple , + * (https://code.google.com/p/json-simple/) or some other JSON library directly, + * in your project., +++ b/src/main/java/org/jfree/data/json/JSONUtils.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2016, by Object Refinery Limited., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * This class is for internal use by JFreeChart, it is not , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, + * (C) Copyright 2000-2016, by Object Refinery Limited and Contributors., + * <br><br>, + * This class is for internal use by JFreeChart, it is not , + * part of the supported API and you should not call it directly.  If you need, + * JSON support in your project you should include JSON.simple , + * (https://code.google.com/p/json-simple/) or some other JSON library directly, + * in your project., +++ b/src/main/java/org/jfree/data/json/impl/JSONStreamAware.java, + * Beans that support customized output of JSON text to a writer shall , + * implement this interface.  , + * <br><br>, + * This class is for internal use by JFreeChart, it is not , + * part of the supported API and you should not call it directly.  If you need, + * JSON support in your project you should include JSON.simple , + * (https://code.google.com/p/json-simple/) or some other JSON library directly, + * in your project.]
[+++ b/src/main/java/org/jfree/chart/JFreeChart.java, +        this.borderPaint = Color.BLACK;, +            legend.setBackgroundPaint(Color.WHITE);, +     * in the {@link Align} class., +++ b/src/main/java/org/jfree/chart/JFreeChart.java, +        this.borderPaint = Color.BLACK;, +            legend.setBackgroundPaint(Color.WHITE);, +     * in the {@link Align} class., +++ b/src/main/java/org/jfree/chart/plot/Plot.java, +     * in the {@code Align} class., +++ b/src/main/java/org/jfree/chart/JFreeChart.java, +        this.borderPaint = Color.BLACK;, +            legend.setBackgroundPaint(Color.WHITE);, +     * in the {@link Align} class., +++ b/src/main/java/org/jfree/chart/plot/Plot.java, +     * in the {@code Align} class., +++ b/src/main/java/org/jfree/chart/ui/FontChooserPanel.java, +        ResourceBundleWrapper.getBundle("org.jfree.chart.ui.LocalizationBundle");, +++ b/src/main/java/org/jfree/chart/JFreeChart.java, +        this.borderPaint = Color.BLACK;, +            legend.setBackgroundPaint(Color.WHITE);, +     * in the {@link Align} class., +++ b/src/main/java/org/jfree/chart/plot/Plot.java, +     * in the {@code Align} class., +++ b/src/main/java/org/jfree/chart/ui/FontChooserPanel.java, +        ResourceBundleWrapper.getBundle("org.jfree.chart.ui.LocalizationBundle");, +++ b/src/main/java/org/jfree/chart/ui/FontDisplayField.java, +            ResourceBundleWrapper.getBundle("org.jfree.chart.ui.LocalizationBundle");, +++ b/src/main/java/org/jfree/chart/JFreeChart.java, +        this.borderPaint = Color.BLACK;, +            legend.setBackgroundPaint(Color.WHITE);, +     * in the {@link Align} class., +++ b/src/main/java/org/jfree/chart/plot/Plot.java, +     * in the {@code Align} class., +++ b/src/main/java/org/jfree/chart/ui/FontChooserPanel.java, +        ResourceBundleWrapper.getBundle("org.jfree.chart.ui.LocalizationBundle");, +++ b/src/main/java/org/jfree/chart/ui/FontDisplayField.java, +            ResourceBundleWrapper.getBundle("org.jfree.chart.ui.LocalizationBundle");, +++ b/src/main/resources/org/jfree/chart/ui/LocalizationBundle.properties, +# org.jfree.ui.ui ResourceBundle properties file, +# , +# Changes (from 31-Aug-2003), +# --------------------------, +# 31-Aug-2003 : Initial version (AL);, +#, +, +Attributes=Attributes:, +B=B:, +Bold=Bold, +Bottom=Bottom, +Font=Font:, +Insets=Insets:, +Italic=Italic, +L=L: , +Left=Left, +No_Font_Selected=No font selected., +R=R: , +Right=Right, +Size=Size:, +T=T: , +Top=Top, +Help=Help, +OK=OK, +Cancel=Cancel, +++ b/src/main/java/org/jfree/chart/JFreeChart.java, +        this.borderPaint = Color.BLACK;, +            legend.setBackgroundPaint(Color.WHITE);, +     * in the {@link Align} class., +++ b/src/main/java/org/jfree/chart/plot/Plot.java, +     * in the {@code Align} class., +++ b/src/main/java/org/jfree/chart/ui/FontChooserPanel.java, +        ResourceBundleWrapper.getBundle("org.jfree.chart.ui.LocalizationBundle");, +++ b/src/main/java/org/jfree/chart/ui/FontDisplayField.java, +            ResourceBundleWrapper.getBundle("org.jfree.chart.ui.LocalizationBundle");, +++ b/src/main/resources/org/jfree/chart/ui/LocalizationBundle.properties, +# org.jfree.ui.ui ResourceBundle properties file, +# , +# Changes (from 31-Aug-2003), +# --------------------------, +# 31-Aug-2003 : Initial version (AL);, +#, +, +Attributes=Attributes:, +B=B:, +Bold=Bold, +Bottom=Bottom, +Font=Font:, +Insets=Insets:, +Italic=Italic, +L=L: , +Left=Left, +No_Font_Selected=No font selected., +R=R: , +Right=Right, +Size=Size:, +T=T: , +Top=Top, +Help=Help, +OK=OK, +Cancel=Cancel]
[+++ b/src/test/java/org/jfree/chart/plot/XYPlotTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +import org.jfree.data.Range;, +    /** , +     * Some tests for the getDataRange() method., +     */, +    @Test, +    public void testGetDataRange() {, +        XYSeriesCollection dataset = new XYSeriesCollection();, +        NumberAxis xAxis = new NumberAxis("X");, +        NumberAxis yAxis = new NumberAxis("Y");, +        XYItemRenderer renderer = new DefaultXYItemRenderer();, +        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);, +        assertEquals(null, plot.getDataRange(xAxis));, +        assertEquals(null, plot.getDataRange(yAxis));, +        , +        XYSeries s1 = new XYSeries("S1");, +        s1.add(1.0, 2.0);, +        dataset.addSeries(s1);, +        assertEquals(new Range(1.0, 1.0), plot.getDataRange(xAxis));, +        assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis));, +        , +        s1.add(5.0, null);, +        assertEquals(new Range(1.0, 5.0), plot.getDataRange(xAxis));, +        assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis));, +        , +        s1.add(6.0, Double.NaN);, +        assertEquals(new Range(1.0, 6.0), plot.getDataRange(xAxis));, +        assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis));, +    }, +    , +    /** , +     * Some tests for the getDataRange() method., +     */, +    @Test, +    public void testGetDataRangeWithMultipleDatasets() {, +        XYSeriesCollection dataset1 = new XYSeriesCollection();, +        XYSeriesCollection dataset2 = new XYSeriesCollection();, +        NumberAxis xAxis = new NumberAxis("X");, +        NumberAxis yAxis = new NumberAxis("Y");, +        XYItemRenderer renderer = new DefaultXYItemRenderer();, +        XYPlot plot = new XYPlot(dataset1, xAxis, yAxis, renderer);, +        plot.setDataset(1, dataset2);, +        plot.mapDatasetToDomainAxis(1, 0);, +        plot.mapDatasetToRangeAxis(1, 0);, +        assertEquals(null, plot.getDataRange(xAxis));, +        assertEquals(null, plot.getDataRange(yAxis));, +        , +        XYSeries s1 = new XYSeries("S1");, +        s1.add(1.0, 2.0);, +        dataset1.addSeries(s1);, +        assertEquals(new Range(1.0, 1.0), plot.getDataRange(xAxis));, +        assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis));, +        , +        XYSeries s2 = new XYSeries("S2");, +        s2.add(5.0, 10.0);, +        dataset2.addSeries(s2);, +        assertEquals(new Range(1.0, 5.0), plot.getDataRange(xAxis));, +        assertEquals(new Range(2.0, 10.0), plot.getDataRange(yAxis));, +        , +        s2.add(6.0, Double.NaN);, +        assertEquals(new Range(1.0, 6.0), plot.getDataRange(xAxis));, +        assertEquals(new Range(2.0, 10.0), plot.getDataRange(yAxis));, +        , +        s2.add(Double.NaN, 0.5); , +        assertEquals(new Range(1.0, 6.0), plot.getDataRange(xAxis));, +        assertEquals(new Range(2.0, 10.0), plot.getDataRange(yAxis)); // only y-values for items in the x-range        , +    }    ]
[+++ b/src/main/java/org/jfree/chart/JFreeChart.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., +    private List<Title> subtitles;, +        this.subtitles = new ArrayList<Title>();, +        for (Title subtitle : this.subtitles) {, +     * Returns a new list containing all the subtitles for the chart., +    public List<Title> getSubtitles() {, +    public void setSubtitles(List<Title> subtitles) {, +        Args.nullNotPermitted(subtitles, "subtitles");, +        for (Title t: subtitles) {, +        return this.subtitles.get(index);, +        for (Title t : this.subtitles) {, +        for (Title currentTitle : this.subtitles) {, +        chart.subtitles = new ArrayList<Title>();]
[+++ b/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +++ b/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +++ b/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getPercentComplete(r,, +                    c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getPercentComplete(r,, +                    c + this.firstCategoryIndex, subinterval);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getEndValue(r,, +                    c + this.firstCategoryIndex, subinterval);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getStartValue(r,, +                    c + this.firstCategoryIndex, subinterval);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        } else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getSubIntervalCount(r,, +                    c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        } else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getStartValue(r,, +                    c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        } else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getEndValue(r, c + this.firstCategoryIndex);]
[+++ b/source/org/jfree/chart/ChartPanel.java, + * 12-Sep-2013 : Provide auto-detection for JFreeSVG and OrsonPDF , + *               libraries (no compile time dependencies) (DG);, +import java.io.BufferedWriter;, +import java.io.FileWriter;, +import java.lang.reflect.Constructor;, +import java.lang.reflect.InvocationTargetException;, +import java.lang.reflect.Method;, +import javax.swing.filechooser.FileNameExtensionFilter;, +    /** Action command to save as PNG. */, +    private static final String SAVE_AS_PNG_COMMAND = "SAVE_AS_PNG";, +    , +    /** Action command to save as SVG. */, +    private static final String SAVE_AS_SVG_COMMAND = "SAVE_AS_SVG";, +    , +    /** Action command to save as PDF. */, +    private static final String SAVE_AS_PDF_COMMAND = "SAVE_AS_PDF";, +    , +    @Override, +    @Override, +        else if (command.equals(SAVE_AS_PNG_COMMAND)) {, +                JOptionPane.showMessageDialog(this, "I/O error occurred.", , +                        "Save As PNG", JOptionPane.WARNING_MESSAGE);, +        else if (command.equals(SAVE_AS_SVG_COMMAND)) {, +            try {, +                saveAsSVG(null);, +            } catch (IOException e) {, +                JOptionPane.showMessageDialog(this, "I/O error occurred.", , +                        "Save As SVG", JOptionPane.WARNING_MESSAGE);, +            }, +        }, +        else if (command.equals(SAVE_AS_PDF_COMMAND)) {, +            saveAsPDF(null);, +        }, +        FileNameExtensionFilter filter = new FileNameExtensionFilter(, +                    localizationResources.getString("PNG_Image_Files"), "png");, +        fileChooser.setFileFilter(filter);, +    }, +    /**, +     * Saves the chart in SVG format (a filechooser will be displayed so that, +     * the user can specify the filename).  Note that this method only works, +     * if the JFreeSVG library is on the classpath...if this library is not , +     * present, the method will fail., +     */, +    private void saveAsSVG(File f) throws IOException {, +        File file = f;, +        if (file == null) {, +            JFileChooser fileChooser = new JFileChooser();, +            fileChooser.setCurrentDirectory(this.defaultDirectoryForSaveAs);, +            FileNameExtensionFilter filter = new FileNameExtensionFilter(, +                    localizationResources.getString("SVG_Files"), "svg");, +            fileChooser.addChoosableFileFilter(filter);, +            fileChooser.setFileFilter(filter);, +, +            int option = fileChooser.showSaveDialog(this);, +            if (option == JFileChooser.APPROVE_OPTION) {, +                String filename = fileChooser.getSelectedFile().getPath();, +                if (isEnforceFileExtensions()) {, +                    if (!filename.endsWith(".svg")) {, +                        filename = filename + ".svg";, +                    }, +                }, +                file = new File(filename);, +                if (file.exists()) {, +                    String fileExists = localizationResources.getString(, +                            "FILE_EXISTS_CONFIRM_OVERWRITE");, +                    int response = JOptionPane.showConfirmDialog(this, , +                            fileExists, "Save As SVG", , +                            JOptionPane.OK_CANCEL_OPTION);, +                    if (response == JOptionPane.CANCEL_OPTION) {, +                        file = null;, +                    }, +                }, +            }, +        }, +        , +        if (file != null) {, +            // use reflection to get the SVG string, +            String svg = generateSVG(getWidth(), getHeight());, +            BufferedWriter writer = null;, +            try {, +                writer = new BufferedWriter(new FileWriter(file));, +                writer.write("<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n");, +                writer.write(svg + "\n");, +                writer.flush();, +            } finally {, +                try {, +                    if (writer != null) {, +                        writer.close();, +                    }, +                } catch (IOException ex) {, +                    throw new RuntimeException(ex);, +                }, +            } , +, +        }, +    }, +    , +    /**, +     * Generates a string containing a rendering of the chart in SVG format.]
[+++ b/pom.xml, +    <version>1.5.0-SNAPSHOT</version>, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +, +        <project.source.level>1.8</project.source.level>, +        <project.target.level>1.8</project.target.level>, +                        <!--        <exclude>org/jfree/chart/fx/**</exclude> -->, +++ b/pom.xml, +    <version>1.5.0-SNAPSHOT</version>, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +, +        <project.source.level>1.8</project.source.level>, +        <project.target.level>1.8</project.target.level>, +                        <!--        <exclude>org/jfree/chart/fx/**</exclude> -->, +++ b/src/main/java/org/jfree/chart/annotations/XYDrawableAnnotation.java, +     * specify a {@code drawScaleFactor} of 2.0, the {@code drawable}, +++ b/pom.xml, +    <version>1.5.0-SNAPSHOT</version>, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +, +        <project.source.level>1.8</project.source.level>, +        <project.target.level>1.8</project.target.level>, +                        <!--        <exclude>org/jfree/chart/fx/**</exclude> -->, +++ b/src/main/java/org/jfree/chart/annotations/XYDrawableAnnotation.java, +     * specify a {@code drawScaleFactor} of 2.0, the {@code drawable}, +++ b/src/main/java/org/jfree/chart/labels/IntervalCategoryItemLabelGenerator.java, +     * {@code MessageFormat} class for creating labels., +++ b/pom.xml, +    <version>1.5.0-SNAPSHOT</version>, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +, +        <project.source.level>1.8</project.source.level>, +        <project.target.level>1.8</project.target.level>, +                        <!--        <exclude>org/jfree/chart/fx/**</exclude> -->, +++ b/src/main/java/org/jfree/chart/annotations/XYDrawableAnnotation.java, +     * specify a {@code drawScaleFactor} of 2.0, the {@code drawable}, +++ b/src/main/java/org/jfree/chart/labels/IntervalCategoryItemLabelGenerator.java, +     * {@code MessageFormat} class for creating labels., +++ b/src/main/java/org/jfree/chart/labels/IntervalCategoryToolTipGenerator.java, +     * {@code MessageFormat} class for creating labels., +++ b/pom.xml, +    <version>1.5.0-SNAPSHOT</version>, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +, +        <project.source.level>1.8</project.source.level>, +        <project.target.level>1.8</project.target.level>, +                        <!--        <exclude>org/jfree/chart/fx/**</exclude> -->, +++ b/src/main/java/org/jfree/chart/annotations/XYDrawableAnnotation.java, +     * specify a {@code drawScaleFactor} of 2.0, the {@code drawable}, +++ b/src/main/java/org/jfree/chart/labels/IntervalCategoryItemLabelGenerator.java, +     * {@code MessageFormat} class for creating labels., +++ b/src/main/java/org/jfree/chart/labels/IntervalCategoryToolTipGenerator.java, +     * {@code MessageFormat} class for creating labels., +++ b/src/main/java/org/jfree/chart/labels/XYSeriesLabelGenerator.java, + * (b) cloneable via the {@code PublicCloneable} interface (defined in, +++ b/pom.xml, +    <version>1.5.0-SNAPSHOT</version>, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +, +        <project.source.level>1.8</project.source.level>, +        <project.target.level>1.8</project.target.level>, +                        <!--        <exclude>org/jfree/chart/fx/**</exclude> -->, +++ b/src/main/java/org/jfree/chart/annotations/XYDrawableAnnotation.java, +     * specify a {@code drawScaleFactor} of 2.0, the {@code drawable}]
[+++ b/src/main/java/org/jfree/chart/text/TextBlock.java, +     * @return The alignment (never {@code null})., +     * @param alignment  the alignment ({@code null} not permitted)., +    public void addLine(String text, Font font, Paint paint) {, +    public void addLine(TextLine line) {, +    public Size2D calculateDimensions(Graphics2D g2) {, +        Iterator iterator = this.lines.iterator();, +     * @param g2  the graphics device ({@code null} not permitted)., +     * @param anchor  the text block anchor ({@code null} not permitted)., +    public Shape calculateBounds(Graphics2D g2, float anchorX, float anchorY, , +            TextBlockAnchor anchor, float rotateX, float rotateY, double angle) {, +        Size2D d = calculateDimensions(g2);, +        float[] offsets = calculateOffsets(anchor, d.getWidth(), d.getHeight());, +        Rectangle2D bounds = new Rectangle2D.Double(anchorX + offsets[0], , +                anchorY + offsets[1], d.getWidth(), d.getHeight());, +        Shape rotatedBounds = ShapeUtils.rotateShape(bounds, angle, rotateX, , +                rotateY);, +    public void draw(Graphics2D g2, float x, float y, TextBlockAnchor anchor) {, +    public void draw(Graphics2D g2, float anchorX, float anchorY, , +            TextBlockAnchor anchor, float rotateX, float rotateY, double angle) {, +        Size2D d = calculateDimensions(g2);, +        float[] offsets = calculateOffsets(anchor, d.getWidth(), , +        Iterator iterator = this.lines.iterator();, +            line.draw(g2, anchorX + offsets[0] + lineOffset, , +                    anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, , +                    rotateX, rotateY, angle);, +    private float[] calculateOffsets(TextBlockAnchor anchor, double width, , +            double height) {, +        float[] result = new float[2];, +     * @param obj  the object to test against ({@code null} permitted)., +    @Override, +    public boolean equals(Object obj) {, +            TextBlock block = (TextBlock) obj;, +    @Override]
[+++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2011-2018, by Object Refinery Limited., +    protected List<Crosshair> xCrosshairs;, +    protected List<Crosshair> yCrosshairs;, +        for (Crosshair c : getDomainCrosshairs()) {, +        for (Crosshair c : getRangeCrosshairs()) {, +        for (Crosshair ch : getDomainCrosshairs()) {, +        for (Crosshair ch : getRangeCrosshairs()) {]
[+++ /dev/null, +++ /dev/null, +++ b/lib/fxgraphics2d-1.3.jar]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.18-pre" />, +        <property name="jfreesvg.version" value="1.7" />, +        <property name="orsonpdf.version" value="1.4-eval" />]
[+++ b/README.txt, +*  JFREECHART: Version 1.0.17  *, +22 November 2013, +(jfreechart-1.0.17-install.pdf) from the JFreeChart home, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.21), +    java -jar jfreechart-1.0.17-demo.jar, +1.0.17 : (22-Nov-2013), +1.0.16 : (13-Sep-2013), +        - bumped the required JRE to 1.6, enhanced axis labelling, provided, +          integration with JFreeSVG and OrsonPDF for vector output, and fixed , +          bugs., +, +        - various minor feature enhancements and a range of bug fixes, see the , +          NEWS and ChangeLog files for details.]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.17" />, +        <property name="jcommon.version" value="1.0.21" />]
[+++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +    /** , +     * Storage for keys that map each dataset to one or more domain axes., +     * Typically a dataset is rendered using the scale of a single axis, but, +     * a dataset can contribute to the "auto-range" of any number of axes., +     */, +    private TreeMap<Integer, List<Integer>> datasetToDomainAxesMap;, +    /** , +     * Storage for keys that map each dataset to one or more range axes. , +     * Typically a dataset is rendered using the scale of a single axis, but, +     * a dataset can contribute to the "auto-range" of any number of axes., +     */, +    private TreeMap<Integer, List<Integer>> datasetToRangeAxesMap;, +        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {, +            CategoryDataset dataset = entry.getValue();, +            Integer datasetIndex = entry.getKey();, +                    datasetIndex);, +                if (axisIndex == 0) {, +                if (mappedAxes.contains(axisIndex)) {, +     * @param axisIndex  the axis index., +     * @return The list (possibly empty, but never {@code null})., +    private List<CategoryDataset> datasetsMappedToRangeAxis(int axisIndex) {, +        List<CategoryDataset> result = new ArrayList<CategoryDataset>();, +        for (Entry<Integer, CategoryDataset> entry : this.datasets.entrySet()) {, +            Integer datasetIndex = entry.getKey();, +            CategoryDataset dataset = entry.getValue();, +                    datasetIndex);, +                if (axisIndex == 0) {, +                    result.add(dataset);, +                if (mappedAxes.contains(axisIndex)) {, +                    result.add(dataset);]
[+++ b/NEWS, +restyled conveniently, a new BarPainter mechanism to enhance the appearance of , +bar charts, a new XYShapeRenderer class, a scaling facility for the , +This release passes 1,961 JUnit tests (0 failures) on JRE 1.6.0_07., +, +++ b/NEWS, +restyled conveniently, a new BarPainter mechanism to enhance the appearance of , +bar charts, a new XYShapeRenderer class, a scaling facility for the , +This release passes 1,961 JUnit tests (0 failures) on JRE 1.6.0_07., +, +++ b/README.txt, +*  JFREECHART: Version 1.0.11  *, +18 September 2008, +(jfreechart-1.0.11-install.pdf) from the JFreeChart home, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.14) , +    java -jar jfreechart-1.0.11-demo.jar, +1.0.11 : (18-Sep-2008), +        - this release includes a new chart theming mechanism, and numerous , +          other feature enhancements and bug fixes - see the NEWS and ChangeLog, +          files for details., +          , +1.0.10 : (8-Jun-2008)]
[+++ b/src/main/java/org/jfree/chart/ui/Align.java, +    public static void align(Rectangle2D rect, Rectangle2D frame, int align) {]
[+++ b/README.txt, +5 May 2008, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.13) , +1.0.10 : (5-May-2008), +++ b/README.txt, +5 May 2008, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.13) , +1.0.10 : (5-May-2008), +++ b/ant/build.xml, +        <property name="itext.name" value="iText" />, +        <property name="itext.version" value="2.1.1" />, +++ b/README.txt, +5 May 2008, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.13) , +1.0.10 : (5-May-2008), +++ b/ant/build.xml, +        <property name="itext.name" value="iText" />, +        <property name="itext.version" value="2.1.1" />, +++ b/lib/iText-2.1.1.jar, +<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN", +        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">, +<!-- Server: sf-web23 -->, +<!--, +  ~ SourceForge.net: Create, Participate, Evaluate, +  ~ Copyright (c) 1999-2008 SourceForge, Inc. All rights reserved., +  -->, +, +<html xmlns="http://www.w3.org/1999/xhtml" lang="en">, +<head>, +        <meta http-equiv="content-type" content="text/html; charset=utf-8" />, +        <meta name="description" content="The world's largest development and download repository of Open Source code and applications" />, +        <meta name="keywords" content="Open Source, Development, Developers, Projects, Downloads, OSTG, VA Software, SF.net, SourceForge" />, +        <link rel="alternate" type="application/rss+xml" title="SourceForge.net Project News" href="/export/rss2_sfnews.php?group_id=1&amp;rss_fulltext=1" />, +        <link rel="alternate" type="application/rss+xml" title="SourceForge.net News" href="/export/rss2_projnews.php?group_id=141424&amp;rss_fulltext=1" />, +        <title>SourceForge.net: Downloading ...</title>, +       <link rel="stylesheet" type="text/css" href="http://static.sourceforge.net/css/sfx.php?secure=0&amp;20080417-0957" media="screen" title="SFx" />, +, +        <script type="text/javascript">, +	//<![CDATA[, +                var link = document.createElement('link');, +                link.setAttribute('rel', 'stylesheet');, +                link.setAttribute('type', 'text/css');, +                link.setAttribute('href', 'http://static.sourceforge.net/css/sfxjs.php?secure=0&amp;20080417-0957');, +                document.getElementsByTagName('head')[0].appendChild(link);, +, +                function help_window(helpurl) {, +                        HelpWin = window.open( 'http://sourceforge.net' + helpurl,'HelpWindow','scrollbars=yes,resizable=yes,toolbar=no,height=400,width=400');, +                }, +	//]]>, +        </script>, +        <script type="text/javascript" src="http://static.sourceforge.net/include/thickbox/jquery.js"></script>, +        <script type="text/javascript">, +        //<![CDATA[, +            jQuery.noConflict();, +        //]]>, +        </script>, +        <script type="text/javascript" src="http://static.sourceforge.net/include/thickbox/goods.js"></script>, +        <script type="text/javascript", +        src="http://static.sourceforge.net/include/js/Util.js"></script>, +<!--pageid post_download -->, +        <script type="text/javascript">, +	//<![CDATA[, +                jQuery(document).ready(function(){, +                        if(jQuery.browser.msie || jQuery.browser.mozilla ){, +                        jQuery('div.firstwave li ul').append("<iframe src=\"javascript:false\"></iframe>");, +                        jQuery('#fad36 li ul').append('<iframe src=\"javascript:false\"></iframe>');, +                        };, +                });, +	//]]>, +        </script>, +		<script type="text/javascript" src="http://static.sourceforge.net/include/thickbox/thickbox.js"></script>, +	<script type="text/javascript" src="http://static.sourceforge.net/include/thickbox/dialog.js"></script>, +	<link rel="stylesheet" type="text/css" href="http://static.sourceforge.net/include/thickbox/thickbox.php?secure=0&amp;20080417-0957" media="screen" title="SFx" />, +        <!--[if IE]><link rel="stylesheet" type="text/css" media="screen" href="http://static.sourceforge.net/css/iestyles.php?secure=0&amp;20080417-0957"  /><![endif]-->, +        <script type="text/javascript" src="http://static.sourceforge.net/sfx.js"></script>, +<!-- BEGIN: AdSolution-Tag 4.2: Global-Code [PLACE IN HTML-HEAD-AREA!] -->, +<!-- DoubleClick Random Number -->, +<script language="JavaScript" type="text/javascript">, +   dfp_ord=Math.random()*10000000000000000;, +   dfp_tile = 1;, +</script>, +<!-- End DoubleClick Random Number -->, +, +<script type="text/javascript">, +	var google_page_url = 'http://sourceforge.net/projects/itext';, +	var sourceforge_project_name = 'itext';, +	var sourceforge_project_description = 'This library contains classes that generate documents in the Portable Document Format (PDF) and/or HTML.';, +</script>, +<!-- END: AdSolution-Tag 4.2: Global-Code -->, +<!-- after META tags -->, +, +<script type="text/javascript">, +var sf_net_pageid = "post_download";, +var krugle_elements = new Object;, +var krugleLinks = "";, +</script>, +<script type="text/javascript">, +var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");, +document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));, +</script>]
[+++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.13" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.13" />, +++ /dev/null, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.13" />, +++ /dev/null, +++ b/lib/jcommon-1.0.13.jar]
[+++ b/src/main/java/org/jfree/chart/ChartMouseEvent.java, +++ b/src/main/java/org/jfree/chart/ChartMouseEvent.java, +++ b/src/main/java/org/jfree/chart/axis/AxisLabelLocation.java, + * 26-Nov-2018 : Made AxisLabelLocation an enum (TH);, +public enum AxisLabelLocation {, +    HIGH_END,, +    MIDDLE,, +    LOW_END, +++ b/src/main/java/org/jfree/chart/ChartMouseEvent.java, +++ b/src/main/java/org/jfree/chart/axis/AxisLabelLocation.java, + * 26-Nov-2018 : Made AxisLabelLocation an enum (TH);, +public enum AxisLabelLocation {, +    HIGH_END,, +    MIDDLE,, +    LOW_END, +++ b/src/main/java/org/jfree/chart/axis/AxisLocation.java, + * 26-Nov-2018 : Made AxisLocation an enum (TH);, +public enum AxisLocation {, +    TOP_OR_LEFT,, +    TOP_OR_RIGHT,, +    BOTTOM_OR_LEFT,, +    BOTTOM_OR_RIGHT;, +++ b/src/main/java/org/jfree/chart/ChartMouseEvent.java, +++ b/src/main/java/org/jfree/chart/axis/AxisLabelLocation.java, + * 26-Nov-2018 : Made AxisLabelLocation an enum (TH);, +public enum AxisLabelLocation {, +    HIGH_END,, +    MIDDLE,, +    LOW_END, +++ b/src/main/java/org/jfree/chart/axis/AxisLocation.java, + * 26-Nov-2018 : Made AxisLocation an enum (TH);, +public enum AxisLocation {, +    TOP_OR_LEFT,, +    TOP_OR_RIGHT,, +    BOTTOM_OR_LEFT,, +    BOTTOM_OR_RIGHT;, +++ b/src/main/java/org/jfree/chart/axis/CategoryLabelWidthType.java, + * 26-Nov-2018 : Made CategoryLabelWidthType an enum (TH);, +public enum CategoryLabelWidthType {, +    CATEGORY, , +    RANGE , +++ b/src/main/java/org/jfree/chart/ChartMouseEvent.java, +++ b/src/main/java/org/jfree/chart/axis/AxisLabelLocation.java, + * 26-Nov-2018 : Made AxisLabelLocation an enum (TH);, +public enum AxisLabelLocation {, +    HIGH_END,, +    MIDDLE,, +    LOW_END, +++ b/src/main/java/org/jfree/chart/axis/AxisLocation.java, + * 26-Nov-2018 : Made AxisLocation an enum (TH);, +public enum AxisLocation {, +    TOP_OR_LEFT,, +    TOP_OR_RIGHT,, +    BOTTOM_OR_LEFT,, +    BOTTOM_OR_RIGHT;, +++ b/src/main/java/org/jfree/chart/axis/CategoryLabelWidthType.java, + * 26-Nov-2018 : Made CategoryLabelWidthType an enum (TH);, +public enum CategoryLabelWidthType {, +    CATEGORY, , +    RANGE , +++ b/src/main/java/org/jfree/chart/plot/PlotOrientation.java, + * 26-Nov-2018 : Made PlotOrientation an enum (TH);, +public enum PlotOrientation {, +    HORIZONTAL,, +    VERTICAL;, +++ b/src/main/java/org/jfree/chart/ChartMouseEvent.java, +++ b/src/main/java/org/jfree/chart/axis/AxisLabelLocation.java, + * 26-Nov-2018 : Made AxisLabelLocation an enum (TH);, +public enum AxisLabelLocation {, +    HIGH_END,, +    MIDDLE,, +    LOW_END, +++ b/src/main/java/org/jfree/chart/axis/AxisLocation.java, + * 26-Nov-2018 : Made AxisLocation an enum (TH);, +public enum AxisLocation {, +    TOP_OR_LEFT,, +    TOP_OR_RIGHT,, +    BOTTOM_OR_LEFT,, +    BOTTOM_OR_RIGHT;, +++ b/src/main/java/org/jfree/chart/axis/CategoryLabelWidthType.java, + * 26-Nov-2018 : Made CategoryLabelWidthType an enum (TH);, +public enum CategoryLabelWidthType {, +    CATEGORY, , +    RANGE , +++ b/src/main/java/org/jfree/chart/plot/PlotOrientation.java, + * 26-Nov-2018 : Made PlotOrientation an enum (TH);, +public enum PlotOrientation {, +    HORIZONTAL,, +    VERTICAL;, +++ b/src/main/java/org/jfree/chart/ui/RectangleEdge.java, + * Changes:, + * --------, + * 26-Nov-2018 : Made RectangleEdge an enum (TH);, + *, +public enum RectangleEdge {, +    TOP,, +    BOTTOM, , +    LEFT,, +    RIGHT;, +++ b/src/main/java/org/jfree/chart/ChartMouseEvent.java]
[+++ /dev/null, +++ /dev/null, +++ b/lib/jcommon-1.0.22.jar]
[+++ b/pom.xml, +                        <configuration>, +                            <docfilessubdirs/>, +                            <linksource>true</linksource>, +                        </configuration>, +++ b/pom.xml, +                        <configuration>, +                            <docfilessubdirs/>, +                            <linksource>true</linksource>, +                        </configuration>, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/pom.xml, +                        <configuration>, +                            <docfilessubdirs/>, +                            <linksource>true</linksource>, +                        </configuration>, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java, +        if (c != -1) {, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +++ b/pom.xml, +                        <configuration>, +                            <docfilessubdirs/>, +                            <linksource>true</linksource>, +                        </configuration>, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java, +        if (c != -1) {, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +++ b/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java, +        if (c != -1) {, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        if (c != -1) {, +        else {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        if (c != -1) {, +        else {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        if (c != -1) {, +        else {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        if (c != -1) {, +        else {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        if (c != -1) {, +        else {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        if (c != -1) {, +        else {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        if (c != -1) {, +            return this.underlying.getEndValue(r, c + this.firstCategoryIndex);, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +++ b/pom.xml, +                        <configuration>, +                            <docfilessubdirs/>, +                            <linksource>true</linksource>, +                        </configuration>, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +        this.datasets.put(0, dataset);, +        this.renderers.put(0, renderer);, +        this.domainAxes.put(0, domainAxis);, +        mapDatasetToDomainAxis(0, 0);, +        this.rangeAxes.put(0, rangeAxis);, +        mapDatasetToRangeAxis(0, 0);, +++ b/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java, +        if (c != -1) {, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +++ b/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java, +        if (c != -1) {, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);]
[+++ b/src/main/java/org/jfree/chart/imagemap/ImageMapUtils.java, + * Functionality was originally in {@link org.jfree.chart.ChartUtils}.]
[+++ b/src/main/java/org/jfree/chart/labels/StandardPieToolTipGenerator.java]
[+++ b/pom.xml, +++ b/pom.xml, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +import org.jfree.chart.ui.Layer;, +import org.jfree.chart.ui.RectangleEdge;, +import org.jfree.chart.ui.RectangleInsets;, +import org.jfree.chart.ui.TextAnchor;, +import org.jfree.chart.util.SortOrder;, +import org.jfree.chart.util.TableOrder;, +++ b/pom.xml, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +import org.jfree.chart.ui.Layer;, +import org.jfree.chart.ui.RectangleEdge;, +import org.jfree.chart.ui.RectangleInsets;, +import org.jfree.chart.ui.TextAnchor;, +import org.jfree.chart.util.SortOrder;, +import org.jfree.chart.util.TableOrder;, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +import org.jfree.chart.util.SerialUtils;, +        SerialUtils.writePaint(this.zoomFillPaint, stream);, +        SerialUtils.writePaint(this.zoomOutlinePaint, stream);, +        this.zoomFillPaint = SerialUtils.readPaint(stream);, +        this.zoomOutlinePaint = SerialUtils.readPaint(stream);, +++ b/pom.xml, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +import org.jfree.chart.ui.Layer;, +import org.jfree.chart.ui.RectangleEdge;, +import org.jfree.chart.ui.RectangleInsets;, +import org.jfree.chart.ui.TextAnchor;, +import org.jfree.chart.util.SortOrder;, +import org.jfree.chart.util.TableOrder;, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +import org.jfree.chart.util.SerialUtils;, +        SerialUtils.writePaint(this.zoomFillPaint, stream);, +        SerialUtils.writePaint(this.zoomOutlinePaint, stream);, +        this.zoomFillPaint = SerialUtils.readPaint(stream);, +        this.zoomOutlinePaint = SerialUtils.readPaint(stream);, +++ b/src/main/java/org/jfree/chart/ChartRenderingInfo.java, +import org.jfree.chart.util.ObjectUtils;, +import org.jfree.chart.util.PublicCloneable;, +import org.jfree.chart.util.SerialUtils;, +        if (!ObjectUtils.equal(this.chartArea, that.chartArea)) {, +        if (!ObjectUtils.equal(this.plotInfo, that.plotInfo)) {, +        if (!ObjectUtils.equal(this.entities, that.entities)) {, +        SerialUtils.writeShape(this.chartArea, stream);, +        this.chartArea = (Rectangle2D) SerialUtils.readShape(stream);, +++ b/pom.xml, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +import org.jfree.chart.ui.Layer;, +import org.jfree.chart.ui.RectangleEdge;, +import org.jfree.chart.ui.RectangleInsets;, +import org.jfree.chart.ui.TextAnchor;, +import org.jfree.chart.util.SortOrder;, +import org.jfree.chart.util.TableOrder;, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +import org.jfree.chart.util.SerialUtils;, +        SerialUtils.writePaint(this.zoomFillPaint, stream);, +        SerialUtils.writePaint(this.zoomOutlinePaint, stream);, +        this.zoomFillPaint = SerialUtils.readPaint(stream);, +        this.zoomOutlinePaint = SerialUtils.readPaint(stream);, +++ b/src/main/java/org/jfree/chart/ChartRenderingInfo.java, +import org.jfree.chart.util.ObjectUtils;, +import org.jfree.chart.util.PublicCloneable;, +import org.jfree.chart.util.SerialUtils;, +        if (!ObjectUtils.equal(this.chartArea, that.chartArea)) {, +        if (!ObjectUtils.equal(this.plotInfo, that.plotInfo)) {, +        if (!ObjectUtils.equal(this.entities, that.entities)) {, +        SerialUtils.writeShape(this.chartArea, stream);, +        this.chartArea = (Rectangle2D) SerialUtils.readShape(stream);, +++ b/src/main/java/org/jfree/chart/ClipPath.java, +import org.jfree.chart.ui.RectangleEdge;, +++ b/pom.xml, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +import org.jfree.chart.ui.Layer;, +import org.jfree.chart.ui.RectangleEdge;, +import org.jfree.chart.ui.RectangleInsets;, +import org.jfree.chart.ui.TextAnchor;, +import org.jfree.chart.util.SortOrder;, +import org.jfree.chart.util.TableOrder;, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, +import org.jfree.chart.util.SerialUtils;, +        SerialUtils.writePaint(this.zoomFillPaint, stream);, +        SerialUtils.writePaint(this.zoomOutlinePaint, stream);, +        this.zoomFillPaint = SerialUtils.readPaint(stream);, +        this.zoomOutlinePaint = SerialUtils.readPaint(stream);, +++ b/src/main/java/org/jfree/chart/ChartRenderingInfo.java, +import org.jfree.chart.util.ObjectUtils;, +import org.jfree.chart.util.PublicCloneable;, +import org.jfree.chart.util.SerialUtils;, +        if (!ObjectUtils.equal(this.chartArea, that.chartArea)) {, +        if (!ObjectUtils.equal(this.plotInfo, that.plotInfo)) {, +        if (!ObjectUtils.equal(this.entities, that.entities)) {, +        SerialUtils.writeShape(this.chartArea, stream);, +        this.chartArea = (Rectangle2D) SerialUtils.readShape(stream);, +++ b/src/main/java/org/jfree/chart/ClipPath.java, +import org.jfree.chart.ui.RectangleEdge;, +++ b/src/main/java/org/jfree/chart/HashUtilities.java, +import org.jfree.chart.util.BooleanList;, +import org.jfree.chart.util.PaintList;, +import org.jfree.chart.util.StrokeList;]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the, +     * {@code getSeriesShapesVisible()} method. You can override this method, +     * {@code getSeriesShapesFilled} method. You can override this method, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * draws the shapes which mark the item positions. If {@code entities}, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the, +     * {@code getSeriesShapesVisible()} method. You can override this method, +     * {@code getSeriesShapesFilled} method. You can override this method, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * draws the shapes which mark the item positions. If {@code entities}, +++ b/src/main/java/org/jfree/chart/servlet/ServletUtilities.java, +     * populates the {@code ChartRenderingInfo} object which can be used, +     * {@code RuntimeException} if the temporary directory is, +     * {@code null}.  Uses the system property {@code java.io.tmpdir}, +     * {@code JFreeChart_Deleter} if there is not already one bound to the, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the, +     * {@code getSeriesShapesVisible()} method. You can override this method, +     * {@code getSeriesShapesFilled} method. You can override this method, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * draws the shapes which mark the item positions. If {@code entities}, +++ b/src/main/java/org/jfree/chart/servlet/ServletUtilities.java, +     * populates the {@code ChartRenderingInfo} object which can be used, +     * {@code RuntimeException} if the temporary directory is, +     * {@code null}.  Uses the system property {@code java.io.tmpdir}, +     * {@code JFreeChart_Deleter} if there is not already one bound to the, +++ b/src/main/java/org/jfree/chart/title/LegendGraphic.java, +     * Tests this {@code LegendGraphic} instance for equality with an, +     * Returns a clone of this {@code LegendGraphic} instance., +     * @return A clone of this {@code LegendGraphic} instance., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the, +     * {@code getSeriesShapesVisible()} method. You can override this method, +     * {@code getSeriesShapesFilled} method. You can override this method, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the, +     * draws the shapes which mark the item positions. If {@code entities}, +++ b/src/main/java/org/jfree/chart/servlet/ServletUtilities.java, +     * populates the {@code ChartRenderingInfo} object which can be used, +     * {@code RuntimeException} if the temporary directory is, +     * {@code null}.  Uses the system property {@code java.io.tmpdir}, +     * {@code JFreeChart_Deleter} if there is not already one bound to the, +++ b/src/main/java/org/jfree/chart/title/LegendGraphic.java, +     * Tests this {@code LegendGraphic} instance for equality with an, +     * Returns a clone of this {@code LegendGraphic} instance., +     * @return A clone of this {@code LegendGraphic} instance., +++ b/src/main/java/org/jfree/chart/util/AttrStringUtils.java, + * Some {@code AttributedString} utilities., +     * Draws the attributed string at {@code (textX, textY)}, rotated by , +     * the specified angle about {@code (rotateX, rotateY)}., +     * specified angle about {@code (rotationX, rotationY)}., +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, + * {@code XYBlockChartDemo1.java} program included in the JFreeChart, +     * default value is {@code RectangleAnchor.CENTER}., +     * Creates a new {@code XYBlockRenderer} instance with default, +     * Tests this {@code XYBlockRenderer} for equality with an arbitrary, +     * <li>{@code obj} is an instance of {@code XYBlockRenderer} (not, +     *     {@code XYBlockRenderer};</li>, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, + * the {@code XYLineAndShapeRendererDemo2.java} program included in the]
[+++ b/ant/build-swt.xml]
[+++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.15" />, +++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.15" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.15" />]
[+++ b/src/main/java/org/jfree/chart/axis/ExtendedCategoryAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        this.sublabelPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/ExtendedCategoryAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        this.sublabelPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/MarkerAxisBand.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +            g2.setPaint(Color.BLACK);]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/src/main/java/org/jfree/chart/text/TextLine.java, +     * @param text  the text ({@code null} not permitted)., +     * @param text  the text ({@code null} not permitted)., +     * @param font  the text font ({@code null} not permitted)., +     * @param text  the text ({@code null} not permitted)., +     * @param font  the text font ({@code null} not permitted)., +     * @param paint  the text color ({@code null} not permitted)., +     * @param fragment  the text fragment ({@code null} not permitted)., +     * @param obj  the object to test against ({@code null} permitted).]
[+++ b/src/main/java/org/jfree/chart/util/PaintUtils.java, +    public static String colorToString(Color c) {, +            Field[] fields = Color.class.getFields();, +                Field f = fields[i];]
[+++ b/src/main/java/org/jfree/chart/ChartPanel.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., +        if (!ChartUtils.isOrsonPDFAvailable()) {, +     * , +     * @deprecated Use #createPopupMenu(boolean, boolean, boolean, boolean, boolean) , +     *     as this includes an explicit flag for the {@code copy} menu item. , +     * Creates a popup menu for the panel.  This method includes code that, +     * auto-detects JFreeSVG and OrsonPDF (via reflection) and, if they are, +     * present (and the {@code save} argument is {@code true}, adds a menu item, +     * for each., +     * @param save  include one or more menu items for saving the chart to , +     *     supported image formats., +            if (ChartUtils.isJFreeSVGAvailable()) {, +            if (ChartUtils.isOrsonPDFAvailable()) {, +++ b/src/main/java/org/jfree/chart/ChartPanel.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., +        if (!ChartUtils.isOrsonPDFAvailable()) {, +     * , +     * @deprecated Use #createPopupMenu(boolean, boolean, boolean, boolean, boolean) , +     *     as this includes an explicit flag for the {@code copy} menu item. , +     * Creates a popup menu for the panel.  This method includes code that, +     * auto-detects JFreeSVG and OrsonPDF (via reflection) and, if they are, +     * present (and the {@code save} argument is {@code true}, adds a menu item, +     * for each., +     * @param save  include one or more menu items for saving the chart to , +     *     supported image formats., +            if (ChartUtils.isJFreeSVGAvailable()) {, +            if (ChartUtils.isOrsonPDFAvailable()) {, +++ b/src/main/java/org/jfree/chart/ChartUtils.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2018, by Object Refinery Limited and Contributors., +     * Returns {@code true} if JFreeSVG is on the classpath, and , +     * {@code false} otherwise.  The JFreeSVG library can be found at, +     * http://www.jfree.org/jfreesvg/, +     * , +     * @return A boolean., +     * , +     * @since 1.6.0, +     */, +    public static boolean isJFreeSVGAvailable() {, +        Class svgGraphics2DClass = null;, +        try {, +            svgGraphics2DClass =  Class.forName("org.jfree.graphics2d.svg.SVGGraphics2D");, +        } catch (ClassNotFoundException e) {, +            // svgGraphics2DClass will be null so the function will return false, +        }, +        return svgGraphics2DClass != null;, +    }, +    , +    /**, +     * Returns {@code true} if OrsonPDF is on the classpath, and , +     * {@code false} otherwise.  The OrsonPDF library can be found at, +     * http://www.object-refinery.com/orsonpdf/, +     * , +     * @return A boolean., +     * , +     * @since 1.6.0, +     */, +    public static boolean isOrsonPDFAvailable() {, +        Class pdfDocumentClass = null;, +        try {, +            pdfDocumentClass = Class.forName("com.orsonpdf.PDFDocument");, +        } catch (ClassNotFoundException e) {, +            // pdfDocument class will be null so the function will return false, +        }, +        return (pdfDocumentClass != null);, +    }, +, +    /**]
[+++ b/src/main/java/org/jfree/chart/ui/LCBLayout.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +    public LCBLayout(int maxrows) {, +    @Override, +    public Dimension preferredLayoutSize(Container parent) {, +            Insets insets = parent.getInsets();, +            int ncomponents = parent.getComponentCount();, +            int nrows = ncomponents / COLUMNS;, +                    Component component = parent.getComponent(r * COLUMNS + c);, +                    Dimension d = component.getPreferredSize();, +            int totalWidth = this.colWidth[0] + this.labelGap , +    @Override, +    public Dimension minimumLayoutSize(Container parent) {, +            Insets insets = parent.getInsets();, +            int ncomponents = parent.getComponentCount();, +            int nrows = ncomponents / COLUMNS;, +                    Component component = parent.getComponent(r * COLUMNS + c);, +                    Dimension d = component.getMinimumSize();, +            int totalWidth = this.colWidth[0] + this.labelGap , +    @Override, +    public void layoutContainer(Container parent) {, +            Insets insets = parent.getInsets();, +            int ncomponents = parent.getComponentCount();, +            int nrows = ncomponents / COLUMNS;, +                    Component component = parent.getComponent(r * COLUMNS + c);, +                    Dimension d = component.getPreferredSize();, +            int totalWidth = this.colWidth[0] + this.colWidth[1] , +            int available = parent.getWidth() - insets.left , +                    int i = r * COLUMNS + c;, +                        Component component = parent.getComponent(i);, +                        Dimension d = component.getPreferredSize();, +                        int h = d.height;, +                        int adjust = (this.rowHeight[r] - h) / 2;, +    public void addLayoutComponent(Component comp) {, +    @Override, +    public void removeLayoutComponent(Component comp) {, +    @Override, +    public void addLayoutComponent(String name, Component comp) {, +    public void removeLayoutComponent(String name, Component comp) {]
[+++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, +     * @throws IllegalArgumentException if {@code order} is, +     * Returns the value to be plotted at the intersection of the, +     * {@code BY_ROW} or {@code BY_COLUMN} which basically is just, +++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, +     * @throws IllegalArgumentException if {@code order} is, +     * Returns the value to be plotted at the intersection of the, +     * {@code BY_ROW} or {@code BY_COLUMN} which basically is just, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +     * The location can be one of the constants: {@code NONE}, {@code RIGHT},, +     * {@code LEFT} and {@code BULB}., +++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, +     * @throws IllegalArgumentException if {@code order} is, +     * Returns the value to be plotted at the intersection of the, +     * {@code BY_ROW} or {@code BY_COLUMN} which basically is just, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +     * The location can be one of the constants: {@code NONE}, {@code RIGHT},, +     * {@code LEFT} and {@code BULB}., +++ b/src/main/java/org/jfree/chart/plot/ValueMarker.java, +     * <li>{@code obj} is an instance of {@code ValueMarker};</li>, +     * <li>{@code super.equals(obj)} returns {@code true}.</li>, +++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, +     * @throws IllegalArgumentException if {@code order} is, +     * Returns the value to be plotted at the intersection of the, +     * {@code BY_ROW} or {@code BY_COLUMN} which basically is just, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +     * The location can be one of the constants: {@code NONE}, {@code RIGHT},, +     * {@code LEFT} and {@code BULB}., +++ b/src/main/java/org/jfree/chart/plot/ValueMarker.java, +     * <li>{@code obj} is an instance of {@code ValueMarker};</li>, +     * <li>{@code super.equals(obj)} returns {@code true}.</li>, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +     *     for {@code index}., +++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, +     * @throws IllegalArgumentException if {@code order} is, +     * Returns the value to be plotted at the intersection of the, +     * {@code BY_ROW} or {@code BY_COLUMN} which basically is just, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +     * The location can be one of the constants: {@code NONE}, {@code RIGHT},, +     * {@code LEFT} and {@code BULB}., +++ b/src/main/java/org/jfree/chart/plot/ValueMarker.java, +     * <li>{@code obj} is an instance of {@code ValueMarker};</li>, +     * <li>{@code super.equals(obj)} returns {@code true}.</li>, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +     *     for {@code index}., +++ b/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java, + * here is generated by the {@code StatisticalBarChartDemo1.java} program, +++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, +     * @throws IllegalArgumentException if {@code order} is, +     * Returns the value to be plotted at the intersection of the, +     * {@code BY_ROW} or {@code BY_COLUMN} which basically is just, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +     * The location can be one of the constants: {@code NONE}, {@code RIGHT},, +     * {@code LEFT} and {@code BULB}., +++ b/src/main/java/org/jfree/chart/plot/ValueMarker.java, +     * <li>{@code obj} is an instance of {@code ValueMarker};</li>, +     * <li>{@code super.equals(obj)} returns {@code true}.</li>, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +     *     for {@code index}., +++ b/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java, + * here is generated by the {@code StatisticalBarChartDemo1.java} program, +++ b/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java, + * here is generated by the {@code StatisticalLineChartDemo1.java} program, +++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, +     * @throws IllegalArgumentException if {@code order} is, +     * Returns the value to be plotted at the intersection of the, +     * {@code BY_ROW} or {@code BY_COLUMN} which basically is just, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +     * The location can be one of the constants: {@code NONE}, {@code RIGHT},, +     * {@code LEFT} and {@code BULB}., +++ b/src/main/java/org/jfree/chart/plot/ValueMarker.java, +     * <li>{@code obj} is an instance of {@code ValueMarker};</li>, +     * <li>{@code super.equals(obj)} returns {@code true}.</li>, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +     *     for {@code index}., +++ b/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java, + * here is generated by the {@code StatisticalBarChartDemo1.java} program, +++ b/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java, + * here is generated by the {@code StatisticalLineChartDemo1.java} program, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java, + * is generated by the {@code XYBubbleChartDemo1.java} program, +++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, +     * @throws IllegalArgumentException if {@code order} is, +     * Returns the value to be plotted at the intersection of the, +     * {@code BY_ROW} or {@code BY_COLUMN} which basically is just, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, +     * The location can be one of the constants: {@code NONE}, {@code RIGHT},, +     * {@code LEFT} and {@code BULB}., +++ b/src/main/java/org/jfree/chart/plot/ValueMarker.java, +     * <li>{@code obj} is an instance of {@code ValueMarker};</li>, +     * <li>{@code super.equals(obj)} returns {@code true}.</li>, +++ b/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java, +     *     for {@code index}., +++ b/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java, + * here is generated by the {@code StatisticalBarChartDemo1.java} program, +++ b/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java, + * here is generated by the {@code StatisticalLineChartDemo1.java} program, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java, + * is generated by the {@code XYBubbleChartDemo1.java} program, +++ b/src/main/java/org/jfree/data/ComparableObjectSeries.java]
[+++ b/src/main/java/org/jfree/chart/plot/dial/DialBackground.java, +     * Creates a new instance of {@code DialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +     * Creates a new instance of {@code DialBackground}., +++ b/src/main/java/org/jfree/chart/plot/dial/DialBackground.java, +     * Creates a new instance of {@code DialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +     * Creates a new instance of {@code DialBackground}., +++ b/src/main/java/org/jfree/chart/plot/dial/DialPlot.java, + * The example shown here is generated by the {@code DialDemo2.java}, +     * Creates a new instance of {@code DialPlot}., +     * Creates a new instance of {@code DialPlot}., +     * Tests this {@code DialPlot} instance for equality with an, +     * @return {@code "DialPlot"}, +++ b/src/main/java/org/jfree/chart/plot/dial/DialBackground.java, +     * Creates a new instance of {@code DialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +     * Creates a new instance of {@code DialBackground}., +++ b/src/main/java/org/jfree/chart/plot/dial/DialPlot.java, + * The example shown here is generated by the {@code DialDemo2.java}, +     * Creates a new instance of {@code DialPlot}., +     * Creates a new instance of {@code DialPlot}., +     * Tests this {@code DialPlot} instance for equality with an, +     * @return {@code "DialPlot"}, +++ b/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java, +     * Creates a new instance of {@code DialValueIndicator}., +     * Creates a new instance of {@code DialValueIndicator}., +     * degrees using the same orientation as Java's {@code Arc2D} class., +++ b/src/main/java/org/jfree/chart/plot/dial/DialBackground.java, +     * Creates a new instance of {@code DialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +     * Creates a new instance of {@code DialBackground}., +++ b/src/main/java/org/jfree/chart/plot/dial/DialPlot.java, + * The example shown here is generated by the {@code DialDemo2.java}, +     * Creates a new instance of {@code DialPlot}., +     * Creates a new instance of {@code DialPlot}., +     * Tests this {@code DialPlot} instance for equality with an, +     * @return {@code "DialPlot"}, +++ b/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java, +     * Creates a new instance of {@code DialValueIndicator}., +     * Creates a new instance of {@code DialValueIndicator}., +     * degrees using the same orientation as Java's {@code Arc2D} class., +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java, +     * Creates a new {@code StandardDialRange} instance., +     * Creates a new {@code StandardDialRange} instance., +++ b/src/main/java/org/jfree/chart/plot/dial/DialBackground.java, +     * Creates a new instance of {@code DialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +     * Creates a new instance of {@code DialBackground}., +++ b/src/main/java/org/jfree/chart/plot/dial/DialPlot.java, + * The example shown here is generated by the {@code DialDemo2.java}, +     * Creates a new instance of {@code DialPlot}., +     * Creates a new instance of {@code DialPlot}., +     * Tests this {@code DialPlot} instance for equality with an, +     * @return {@code "DialPlot"}, +++ b/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java, +     * Creates a new instance of {@code DialValueIndicator}., +     * Creates a new instance of {@code DialValueIndicator}., +     * degrees using the same orientation as Java's {@code Arc2D} class., +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java, +     * Creates a new {@code StandardDialRange} instance., +     * Creates a new {@code StandardDialRange} instance., +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java, +     *     orientation as Java's {@code Arc2D} class)., +     * orientation as Java's {@code Arc2D} class)., +     * Tests this {@code StandardDialScale} for equality with an arbitrary, +++ b/src/main/java/org/jfree/chart/plot/dial/DialBackground.java, +     * Creates a new instance of {@code DialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +     * Creates a new instance of {@code DialBackground}., +++ b/src/main/java/org/jfree/chart/plot/dial/DialPlot.java, + * The example shown here is generated by the {@code DialDemo2.java}, +     * Creates a new instance of {@code DialPlot}., +     * Creates a new instance of {@code DialPlot}., +     * Tests this {@code DialPlot} instance for equality with an, +     * @return {@code "DialPlot"}, +++ b/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java, +     * Creates a new instance of {@code DialValueIndicator}., +     * Creates a new instance of {@code DialValueIndicator}., +     * degrees using the same orientation as Java's {@code Arc2D} class., +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java, +     * Creates a new {@code StandardDialRange} instance., +     * Creates a new {@code StandardDialRange} instance., +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java, +     *     orientation as Java's {@code Arc2D} class)., +     * orientation as Java's {@code Arc2D} class)., +     * Tests this {@code StandardDialScale} for equality with an arbitrary, +++ b/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java, +     *                 used if {@code area} is {@code null})., +     *                 used if {@code area} is {@code null})., +++ b/src/main/java/org/jfree/chart/plot/dial/DialBackground.java, +     * Creates a new instance of {@code DialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +     * Creates a new instance of {@code DialBackground}., +++ b/src/main/java/org/jfree/chart/plot/dial/DialPlot.java, + * The example shown here is generated by the {@code DialDemo2.java}, +     * Creates a new instance of {@code DialPlot}., +     * Creates a new instance of {@code DialPlot}., +     * Tests this {@code DialPlot} instance for equality with an, +     * @return {@code "DialPlot"}]
[+++ b/pom.xml, +                <groupId>org.codehaus.mojo</groupId>, +                <artifactId>animal-sniffer-maven-plugin</artifactId>, +                <version>1.7</version>, +                <configuration>, +                    <signature>, +                        <groupId>org.codehaus.mojo.signature</groupId>, +                        <artifactId>java14</artifactId>, +                        <version>1.0</version>, +                    </signature>, +                </configuration>, +            </plugin>, +          , +            <plugin>]
[+++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +                r .drawRangeLine(g2, this, axis, dataArea,, +        r.drawRangeLine(g2, this, getRangeAxis(), area, 0.0,, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +                r .drawRangeLine(g2, this, axis, dataArea,, +        r.drawRangeLine(g2, this, getRangeAxis(), area, 0.0,, +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, , +                RenderingHints.VALUE_STROKE_NORMALIZE);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);, +    @Override, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, +                r .drawRangeLine(g2, this, axis, dataArea,, +        r.drawRangeLine(g2, this, getRangeAxis(), area, 0.0,, +++ b/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, , +                RenderingHints.VALUE_STROKE_NORMALIZE);, +        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);, +    @Override, +++ b/src/main/java/org/jfree/chart/renderer/category/CategoryItemRenderer.java, + * (C) Copyright 2001-2017, by Object Refinery Limited and Contributors., +     * @param paint  the paint ({@code null} not permitted)., +     * @param stroke  the line stroke ({@code null} not permitted)., +    public void drawRangeLine(Graphics2D g2, CategoryPlot plot, ValueAxis axis,, +            Rectangle2D dataArea, double value, Paint paint, Stroke stroke);]
[+++ b/src/main/java/org/jfree/chart/ChartPanel.java, +    public static final int DEFAULT_WIDTH = 1024;, +    public static final int DEFAULT_HEIGHT = 768;, +    private List<Overlay> overlays;, +        this(chart, DEFAULT_WIDTH, DEFAULT_HEIGHT,, +            DEFAULT_MINIMUM_DRAW_WIDTH, DEFAULT_MINIMUM_DRAW_HEIGHT,, +            DEFAULT_MAXIMUM_DRAW_WIDTH, DEFAULT_MAXIMUM_DRAW_HEIGHT,, +    public ChartPanel(JFreeChart chart, boolean properties, boolean save,, +            boolean print, boolean zoom, boolean tooltips) {, +        this(chart, DEFAULT_WIDTH, DEFAULT_HEIGHT,, +             DEFAULT_MINIMUM_DRAW_WIDTH, DEFAULT_MINIMUM_DRAW_HEIGHT,, +             DEFAULT_MAXIMUM_DRAW_WIDTH, DEFAULT_MAXIMUM_DRAW_HEIGHT,, +             DEFAULT_BUFFER_USED, properties, save, print, zoom, tooltips);, +        this.overlays = new java.util.ArrayList<Overlay>();, +        for (Overlay overlay : this.overlays) {, +                g2.setXORMode(Color.GRAY);, +        g2.setXORMode(Color.ORANGE);, +        g2.setXORMode(Color.ORANGE);]
[+++ b/ChangeLog, +	* experimenta/org/jfree/experimental/chart/plot/dial/*.java:, +	Moved this package to org.jfree.chart.plot.dial.*,, +	* experimenta/org/jfree/experimental/chart/plot/dial/junit/*.java:, +	Moved this package to org.jfree.chart.plot.dial.junit.*., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ b/ChangeLog, +	* experimenta/org/jfree/experimental/chart/plot/dial/*.java:, +	Moved this package to org.jfree.chart.plot.dial.*,, +	* experimenta/org/jfree/experimental/chart/plot/dial/junit/*.java:, +	Moved this package to org.jfree.chart.plot.dial.junit.*., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ b/ChangeLog, +	* experimenta/org/jfree/experimental/chart/plot/dial/*.java:, +	Moved this package to org.jfree.chart.plot.dial.*,, +	* experimenta/org/jfree/experimental/chart/plot/dial/junit/*.java:, +	Moved this package to org.jfree.chart.plot.dial.junit.*., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ /dev/null, +++ b/ChangeLog, +	* experimenta/org/jfree/experimental/chart/plot/dial/*.java:, +	Moved this package to org.jfree.chart.plot.dial.*,, +	* experimenta/org/jfree/experimental/chart/plot/dial/junit/*.java:, +	Moved this package to org.jfree.chart.plot.dial.junit.*., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/ChangeLog, +	* experimenta/org/jfree/experimental/chart/plot/dial/*.java:, +	Moved this package to org.jfree.chart.plot.dial.*,, +	* experimenta/org/jfree/experimental/chart/plot/dial/junit/*.java:, +	Moved this package to org.jfree.chart.plot.dial.junit.*., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/ChangeLog, +	* experimenta/org/jfree/experimental/chart/plot/dial/*.java:, +	Moved this package to org.jfree.chart.plot.dial.*,, +	* experimenta/org/jfree/experimental/chart/plot/dial/junit/*.java:, +	Moved this package to org.jfree.chart.plot.dial.junit.*., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/ChangeLog, +	* experimenta/org/jfree/experimental/chart/plot/dial/*.java:, +	Moved this package to org.jfree.chart.plot.dial.*,, +	* experimenta/org/jfree/experimental/chart/plot/dial/junit/*.java:, +	Moved this package to org.jfree.chart.plot.dial.junit.*., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/ChangeLog, +	* experimenta/org/jfree/experimental/chart/plot/dial/*.java:, +	Moved this package to org.jfree.chart.plot.dial.*,, +	* experimenta/org/jfree/experimental/chart/plot/dial/junit/*.java:, +	Moved this package to org.jfree.chart.plot.dial.junit.*., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/ChangeLog, +	* experimenta/org/jfree/experimental/chart/plot/dial/*.java:, +	Moved this package to org.jfree.chart.plot.dial.*,, +	* experimenta/org/jfree/experimental/chart/plot/dial/junit/*.java:, +	Moved this package to org.jfree.chart.plot.dial.junit.*., +, +2007-10-24  David Gilbert  <david.gilbert@object-refinery.com>, +]
[+++ b/src/main/java/org/jfree/chart/plot/CrosshairState.java, +     * @see #updateCrosshairPoint(double, double, int, double, double,, +     * @see #updateCrosshairPoint(double, double, int, double, double,, +++ b/src/main/java/org/jfree/chart/plot/CrosshairState.java, +     * @see #updateCrosshairPoint(double, double, int, double, double,, +     * @see #updateCrosshairPoint(double, double, int, double, double,, +++ b/src/main/java/org/jfree/data/time/Minute.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Minute(Date, TimeZone, Locale)]
[+++ b/pom.xml, +            <version>1.0.23</version>]
[+++ b/ChangeLog, +2012-09-04  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3555275:, +    * org/jfree/chart/axis/ValueAxis.java, +    (reserveSpace): Return correct value for axes with a fixed dimension, +    specified.  , +, +++ b/ChangeLog, +2012-09-04  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3555275:, +    * org/jfree/chart/axis/ValueAxis.java, +    (reserveSpace): Return correct value for axes with a fixed dimension, +    specified.  , +, +++ b/NEWS, +3555275 : ValueAxis.reserveSpace() problem for axes with fixed dimension;, +++ b/ChangeLog, +2012-09-04  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3555275:, +    * org/jfree/chart/axis/ValueAxis.java, +    (reserveSpace): Return correct value for axes with a fixed dimension, +    specified.  , +, +++ b/NEWS, +3555275 : ValueAxis.reserveSpace() problem for axes with fixed dimension;, +++ b/README.txt, +?? September 2012 (NOT YET RELEASED), +1.0.15 : (??-Sep-2012), +    - Nina Jeliazkova, +++ b/ChangeLog, +2012-09-04  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3555275:, +    * org/jfree/chart/axis/ValueAxis.java, +    (reserveSpace): Return correct value for axes with a fixed dimension, +    specified.  , +, +++ b/NEWS, +3555275 : ValueAxis.reserveSpace() problem for axes with fixed dimension;, +++ b/README.txt, +?? September 2012 (NOT YET RELEASED), +1.0.15 : (??-Sep-2012), +    - Nina Jeliazkova, +++ b/source/org/jfree/chart/axis/ValueAxis.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * 03-Sep-2012 : Fix reserveSpace() method, bug 3555275 (DG);, +            space.add(dimension, edge);, +            return space;, +++ b/ChangeLog, +2012-09-04  David Gilbert <david.gilbert@object-refinery.com>, +, +    Bug 3555275:, +    * org/jfree/chart/axis/ValueAxis.java, +    (reserveSpace): Return correct value for axes with a fixed dimension, +    specified.  , +, +++ b/NEWS, +3555275 : ValueAxis.reserveSpace() problem for axes with fixed dimension;, +++ b/README.txt, +?? September 2012 (NOT YET RELEASED), +1.0.15 : (??-Sep-2012), +    - Nina Jeliazkova, +++ b/source/org/jfree/chart/axis/ValueAxis.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * 03-Sep-2012 : Fix reserveSpace() method, bug 3555275 (DG);, +            space.add(dimension, edge);, +            return space;, +++ b/tests/org/jfree/chart/axis/junit/ValueAxisTests.java, + * (C) Copyright 2000-2012, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2012, by Object Refinery Limited and Contributors., + * 04-Sep-2012 : Added test3555275() (DG);, +import java.awt.Graphics2D;, +import java.awt.geom.Rectangle2D;, +import java.awt.image.BufferedImage;, +import org.jfree.chart.ChartRenderingInfo;, +import org.jfree.chart.plot.CategoryPlot;, +import org.jfree.data.category.DefaultCategoryDataset;, +import org.jfree.ui.RectangleInsets;, +    /**, +     * A test for bug 3555275 (where the fixed axis space is calculated , +     * incorrectly)., +     */, +    public void test3555275() {, +        DefaultCategoryDataset dataset = new DefaultCategoryDataset();, +        JFreeChart chart = ChartFactory.createLineChart("Title", "X", "Y",, +                dataset, PlotOrientation.VERTICAL, true, false, false);, +        CategoryPlot plot = (CategoryPlot) chart.getPlot();, +        plot.setInsets(RectangleInsets.ZERO_INSETS);, +        plot.setAxisOffset(RectangleInsets.ZERO_INSETS);, +        ValueAxis yAxis = plot.getRangeAxis();, +        yAxis.setFixedDimension(100.0);, +        BufferedImage image = new BufferedImage(500, 300, , +                BufferedImage.TYPE_INT_RGB);, +        Graphics2D g2 = image.createGraphics();, +        ChartRenderingInfo info = new ChartRenderingInfo();]
[+++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +     * The {@code rollUnitType} and {@code rollCount} are intended to roll the date forward when it falls on a "hidden" part of the DateAxis. For example, if the tick size is 1 week (7 days), but Saturday and Sunday are hidden, if the ticks happen to fall on Saturday, none of them will be visible. A sensible {@code rollUnitType}/{@code rollCount} would be 1 day, so that the date would roll forward to the following Monday, which is visible., +     *]
[+++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.LIGHT_GRAY;, +    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.BLUE;, +        this.rangeZeroBaselinePaint = Color.BLACK;, +        this.rangeMinorGridlinePaint = Color.WHITE;, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.LIGHT_GRAY;, +    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.BLUE;, +        this.rangeZeroBaselinePaint = Color.BLACK;, +        this.rangeMinorGridlinePaint = Color.WHITE;, +++ b/src/main/java/org/jfree/chart/plot/CompassPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by the Australian Antarctic Division and, +    private transient Paint roseHighlightPaint = Color.BLACK;, +    private transient Paint rosePaint = Color.YELLOW;, +    private transient Paint roseCenterPaint = Color.WHITE;, +                setSeriesPaint(index, Color.RED);, +                this.seriesNeedle[index].setHighlightPaint(Color.WHITE);, +                setSeriesPaint(index, Color.BLUE);, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.LIGHT_GRAY;, +    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.BLUE;, +        this.rangeZeroBaselinePaint = Color.BLACK;, +        this.rangeMinorGridlinePaint = Color.WHITE;, +++ b/src/main/java/org/jfree/chart/plot/CompassPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by the Australian Antarctic Division and, +    private transient Paint roseHighlightPaint = Color.BLACK;, +    private transient Paint rosePaint = Color.YELLOW;, +    private transient Paint roseCenterPaint = Color.WHITE;, +                setSeriesPaint(index, Color.RED);, +                this.seriesNeedle[index].setHighlightPaint(Color.WHITE);, +                setSeriesPaint(index, Color.BLUE);, +++ b/src/main/java/org/jfree/chart/plot/Plot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_OUTLINE_PAINT = Color.GRAY;, +    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.WHITE;, +        this.noDataMessagePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.LIGHT_GRAY;, +    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.BLUE;, +        this.rangeZeroBaselinePaint = Color.BLACK;, +        this.rangeMinorGridlinePaint = Color.WHITE;, +++ b/src/main/java/org/jfree/chart/plot/CompassPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by the Australian Antarctic Division and, +    private transient Paint roseHighlightPaint = Color.BLACK;, +    private transient Paint rosePaint = Color.YELLOW;, +    private transient Paint roseCenterPaint = Color.WHITE;, +                setSeriesPaint(index, Color.RED);, +                this.seriesNeedle[index].setHighlightPaint(Color.WHITE);, +                setSeriesPaint(index, Color.BLUE);, +++ b/src/main/java/org/jfree/chart/plot/Plot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_OUTLINE_PAINT = Color.GRAY;, +    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.WHITE;, +        this.noDataMessagePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Bryan Scott and Contributors., +    private transient Paint thermometerPaint = Color.BLACK;, +    private transient Paint valuePaint = Color.WHITE;, +    private transient Paint mercuryPaint = Color.LIGHT_GRAY;, +    private transient Paint[] subrangePaint = {Color.GREEN, Color.ORANGE,, +            Color.RED};, +++ b/src/main/java/org/jfree/chart/plot/CategoryPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.LIGHT_GRAY;, +    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.BLUE;, +        this.rangeZeroBaselinePaint = Color.BLACK;, +        this.rangeMinorGridlinePaint = Color.WHITE;, +++ b/src/main/java/org/jfree/chart/plot/CompassPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by the Australian Antarctic Division and, +    private transient Paint roseHighlightPaint = Color.BLACK;, +    private transient Paint rosePaint = Color.YELLOW;, +    private transient Paint roseCenterPaint = Color.WHITE;, +                setSeriesPaint(index, Color.RED);, +                this.seriesNeedle[index].setHighlightPaint(Color.WHITE);, +                setSeriesPaint(index, Color.BLUE);, +++ b/src/main/java/org/jfree/chart/plot/Plot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_OUTLINE_PAINT = Color.GRAY;, +    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.WHITE;, +        this.noDataMessagePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/ThermometerPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Bryan Scott and Contributors., +    private transient Paint thermometerPaint = Color.BLACK;, +    private transient Paint valuePaint = Color.WHITE;, +    private transient Paint mercuryPaint = Color.LIGHT_GRAY;]
[+++ b/source/org/jfree/chart/LocalizationBundle_nl.properties, +Copy=Kopi\u00EBren]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java, + * 29-Feb-2016 : Improved performance by only drawing visible lines (MN);, +        if (visible) {]
[+++ b/ChangeLog, +    Translations provided by Petr Kopac:, +    * org/jfree/chart/LocalizationBundle_cs.properties: New file;, +    * org/jfree/chart/plot/LocalizationBundle_cs.properties: New file;, +    * org/jfree/chart/editor/LocalizationBundle_cs.properties: New file;, +, +2011-11-09  Martin Hoeller <martin.hoeller@xss.co.at>, +, +++ b/ChangeLog, +    Translations provided by Petr Kopac:, +    * org/jfree/chart/LocalizationBundle_cs.properties: New file;, +    * org/jfree/chart/plot/LocalizationBundle_cs.properties: New file;, +    * org/jfree/chart/editor/LocalizationBundle_cs.properties: New file;, +, +2011-11-09  Martin Hoeller <martin.hoeller@xss.co.at>, +, +++ b/README.txt, +    - Petr Kopac, +++ b/ChangeLog, +    Translations provided by Petr Kopac:, +    * org/jfree/chart/LocalizationBundle_cs.properties: New file;, +    * org/jfree/chart/plot/LocalizationBundle_cs.properties: New file;, +    * org/jfree/chart/editor/LocalizationBundle_cs.properties: New file;, +, +2011-11-09  Martin Hoeller <martin.hoeller@xss.co.at>, +, +++ b/README.txt, +    - Petr Kopac, +++ b/source/org/jfree/chart/LocalizationBundle_cs.properties, +# org.jfree.chart.ChartPanel ResourceBundle properties file, +# , +# Changes (from 31-Aug-2003), +# --------------------------, +# 31-Aug-2003 : Initial version (AL);, +# 20-Mar-2010 : Czech translation;, +#, +, +Auto_Range=Auto rozm\u011br, +All_Axes=Ob\u011b osy, +Chart=Chart, +Chart_Properties=Vlastnosti grafu, +Copy=Kop\u00edrovat, +Domain_Axis=Osa oblasti, +PNG_Image_Files=Obr\u00e1zky PNG, +Print...=Tisk..., +Properties...=Vlastnosti..., +Save_as...=Ulo\u017eit jako..., +Range_Axis=Osa rozsahu, +Zoom_In=P\u0159ibl\u00ed\u017eit, +Zoom_Out=Odd\u00e1lit, +++ b/ChangeLog, +    Translations provided by Petr Kopac:, +    * org/jfree/chart/LocalizationBundle_cs.properties: New file;, +    * org/jfree/chart/plot/LocalizationBundle_cs.properties: New file;, +    * org/jfree/chart/editor/LocalizationBundle_cs.properties: New file;, +, +2011-11-09  Martin Hoeller <martin.hoeller@xss.co.at>, +, +++ b/README.txt, +    - Petr Kopac, +++ b/source/org/jfree/chart/LocalizationBundle_cs.properties, +# org.jfree.chart.ChartPanel ResourceBundle properties file, +# , +# Changes (from 31-Aug-2003), +# --------------------------, +# 31-Aug-2003 : Initial version (AL);, +# 20-Mar-2010 : Czech translation;, +#, +, +Auto_Range=Auto rozm\u011br, +All_Axes=Ob\u011b osy, +Chart=Chart, +Chart_Properties=Vlastnosti grafu, +Copy=Kop\u00edrovat, +Domain_Axis=Osa oblasti, +PNG_Image_Files=Obr\u00e1zky PNG, +Print...=Tisk..., +Properties...=Vlastnosti..., +Save_as...=Ulo\u017eit jako..., +Range_Axis=Osa rozsahu, +Zoom_In=P\u0159ibl\u00ed\u017eit, +Zoom_Out=Odd\u00e1lit, +++ b/source/org/jfree/chart/editor/LocalizationBundle_cs.properties, +# org.jfree.chart.ui.ui ResourceBundle properties file, +# , +# Changes (from 31-Aug-2003), +# --------------------------, +# 31-Aug-2003 : Initial version (AL);, +# 20-Mar-2010 : Czech translation;, +#, +, +\:=:, +Appearance=Vzhled, +Auto-adjust_range=Automatick\u00fd rozsah:, +Background=Pozad\u00ed:, +Background_Color=Barva pozad\u00ed, +Background_paint=V\u00fdpl\u0148 pozad\u00ed:, +Color=Barva:, +Color_Bar=Barevn\u00fd pruh, +Domain_Axis=Osa oblasti]
[+++ b/src/main/java/org/jfree/chart/ui/FontDisplayField.java, +    public FontDisplayField(Font font) {, +    public void setDisplayFont(Font font) {, +    private String fontToString(Font font) {]
[+++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +++ b/src/main/java/org/jfree/chart/fx/interaction/ZoomHandlerFX.java, + * Contributor(s):   Tomas Pluskal (Whitehead Institute for Biomedical Research);, + * 03-Mar-2016 : Added single-axis zooming (TP); , +, +, +import javafx.scene.input.MouseEvent;, +    /** X axis and Y axis zoom indicators */, +    private boolean hZoom, vZoom;, +, +    , +            this.startPoint = new Point2D.Double(e.getX(), e.getY());, +        , +        // if the user clicked started dragging from an axis, let's zoom , +        // only that axis , +        if (y >= dataArea.getHeight()) , +            vZoom = false;, +        if (x <= dataArea.getX()) , +            hZoom = false;, +        , +                if (hZoom) , +                p.setNotify(saved);, +                p.setNotify(false);, +                if (vZoom) ]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +    public void drawDomainLine(Graphics2D g2, XYPlot plot, ValueAxis axis,, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +    public void drawDomainLine(Graphics2D g2, XYPlot plot, ValueAxis axis,, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java, +    public void drawDomainLine(Graphics2D g2, XYPlot plot, ValueAxis axis,]
[+++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ b/src/main/java/org/jfree/chart/ui/Layer.java, +    FOREGROUND,, +    BACKGROUND, +++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ b/src/main/java/org/jfree/chart/ui/Layer.java, +    FOREGROUND,, +    BACKGROUND, +++ b/src/main/java/org/jfree/chart/ui/RectangleAnchor.java, +    CENTER,, +    TOP,, +    TOP_LEFT,, +    TOP_RIGHT,, +    BOTTOM,, +    BOTTOM_LEFT,, +    BOTTOM_RIGHT,, +    LEFT,, +    RIGHT;, +++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ b/src/main/java/org/jfree/chart/ui/Layer.java, +    FOREGROUND,, +    BACKGROUND, +++ b/src/main/java/org/jfree/chart/ui/RectangleAnchor.java, +    CENTER,, +    TOP,, +    TOP_LEFT,, +    TOP_RIGHT,, +    BOTTOM,, +    BOTTOM_LEFT,, +    BOTTOM_RIGHT,, +    LEFT,, +    RIGHT;, +++ b/src/main/java/org/jfree/chart/util/Rotation.java, +    CLOCKWISE(-1.0),, +    ANTICLOCKWISE(1.0);, +    Rotation(double factor) {, +++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ b/src/main/java/org/jfree/chart/ui/Layer.java, +    FOREGROUND,, +    BACKGROUND, +++ b/src/main/java/org/jfree/chart/ui/RectangleAnchor.java, +    CENTER,, +    TOP,, +    TOP_LEFT,, +    TOP_RIGHT,, +    BOTTOM,, +    BOTTOM_LEFT,, +    BOTTOM_RIGHT,, +    LEFT,, +    RIGHT;, +++ b/src/main/java/org/jfree/chart/util/Rotation.java, +    CLOCKWISE(-1.0),, +    ANTICLOCKWISE(1.0);, +    Rotation(double factor) {, +++ b/src/main/java/org/jfree/chart/util/SortOrder.java, +    ASCENDING,, +    DESCENDING, +++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ b/src/main/java/org/jfree/chart/ui/Layer.java, +    FOREGROUND,, +    BACKGROUND, +++ b/src/main/java/org/jfree/chart/ui/RectangleAnchor.java, +    CENTER,, +    TOP,, +    TOP_LEFT,, +    TOP_RIGHT,, +    BOTTOM,, +    BOTTOM_LEFT,, +    BOTTOM_RIGHT,, +    LEFT,, +    RIGHT;, +++ b/src/main/java/org/jfree/chart/util/Rotation.java, +    CLOCKWISE(-1.0),, +    ANTICLOCKWISE(1.0);, +    Rotation(double factor) {, +++ b/src/main/java/org/jfree/chart/util/SortOrder.java, +    ASCENDING,, +    DESCENDING, +++ b/src/main/java/org/jfree/chart/util/TableOrder.java, +    BY_ROW,, +    BY_COLUMN, +++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +++ b/src/main/java/org/jfree/chart/ui/Layer.java, +    FOREGROUND,, +    BACKGROUND, +++ b/src/main/java/org/jfree/chart/ui/RectangleAnchor.java, +    CENTER,, +    TOP,, +    TOP_LEFT,, +    TOP_RIGHT,, +    BOTTOM,, +    BOTTOM_LEFT,, +    BOTTOM_RIGHT,, +    LEFT,, +    RIGHT;, +++ b/src/main/java/org/jfree/chart/util/Rotation.java, +    CLOCKWISE(-1.0),, +    ANTICLOCKWISE(1.0);, +    Rotation(double factor) {]
[+++ b/src/main/java/org/jfree/chart/ui/StrokeSample.java, +     * @param stroke  the sample stroke ({@code null} permitted)., +    public StrokeSample(Stroke stroke) {, +     * @return The stroke (possibly {@code null})., +     * @param stroke  the stroke ({@code null} permitted)., +    public void setStroke(Stroke stroke) {, +    @Override, +    @Override, +    public void paintComponent(Graphics g) {, +        Graphics2D g2 = (Graphics2D) g;, +        Dimension size = getSize();, +        Insets insets = getInsets();, +        double xx = insets.left;, +        double yy = insets.top;, +        double ww = size.getWidth() - insets.left - insets.right;, +        double hh = size.getHeight() - insets.top - insets.bottom;, +        Point2D one =  new Point2D.Double(xx + 6, yy + hh / 2);, +        Point2D two =  new Point2D.Double(xx + ww - 6, yy + hh / 2);, +        Ellipse2D circle1 = new Ellipse2D.Double(one.getX() - 5,, +        Ellipse2D circle2 = new Ellipse2D.Double(two.getX() - 6,, +        Line2D line = new Line2D.Double(one, two);, +    @Override]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.12" />, +    <target name="javadoc" , +    	    description="Generate the Javadoc HTML pages.", +	        depends="initialise">, +    <target name="zip-javadocs" , +    	    description="Create ZIP file containing Javadoc HTML pages.", +	        depends="javadoc">]
[+++ b/src/main/java/org/jfree/chart/annotations/TextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/annotations/TextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        this(x0, y0, x1, y1, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/TextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        this(x0, y0, x1, y1, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited., +        this(x1, y1, x2, y2, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/TextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Object Refinery Limited and Contributors., +        this(x0, y0, x1, y1, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited., +        this(x1, y1, x2, y2, new BasicStroke(1.0f), Color.BLACK);, +++ b/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited., +        this.arrowPaint = Color.BLACK;]
[+++ b/src/main/java/org/jfree/chart/PolarChartPanel.java, + * {@code PolarChartPanel} is the top level object for using the, + * {@link PolarPlot}. Since this class has a {@code JPanel} in the, + * The main modification to {@code ChartPanel} is the popup menu.  It, + * removes {@code ChartPanel}'s versions of:, + *    <li>{@code Zoom In}</li>, + *    <li>{@code Zoom Out}</li>, + *    <li>{@code Auto Range}</li>, +++ b/src/main/java/org/jfree/chart/PolarChartPanel.java, + * {@code PolarChartPanel} is the top level object for using the, + * {@link PolarPlot}. Since this class has a {@code JPanel} in the, + * The main modification to {@code ChartPanel} is the popup menu.  It, + * removes {@code ChartPanel}'s versions of:, + *    <li>{@code Zoom In}</li>, + *    <li>{@code Zoom Out}</li>, + *    <li>{@code Auto Range}</li>, +++ b/src/main/java/org/jfree/chart/plot/dial/DialCap.java, +     * Creates a new instance of {@code StandardDialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +++ b/src/main/java/org/jfree/chart/PolarChartPanel.java, + * {@code PolarChartPanel} is the top level object for using the, + * {@link PolarPlot}. Since this class has a {@code JPanel} in the, + * The main modification to {@code ChartPanel} is the popup menu.  It, + * removes {@code ChartPanel}'s versions of:, + *    <li>{@code Zoom In}</li>, + *    <li>{@code Zoom Out}</li>, + *    <li>{@code Auto Range}</li>, +++ b/src/main/java/org/jfree/chart/plot/dial/DialCap.java, +     * Creates a new instance of {@code StandardDialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +++ b/src/main/java/org/jfree/chart/plot/dial/DialPointer.java, +     * Creates a new {@code DialPointer} instance., +++ b/src/main/java/org/jfree/chart/PolarChartPanel.java, + * {@code PolarChartPanel} is the top level object for using the, + * {@link PolarPlot}. Since this class has a {@code JPanel} in the, + * The main modification to {@code ChartPanel} is the popup menu.  It, + * removes {@code ChartPanel}'s versions of:, + *    <li>{@code Zoom In}</li>, + *    <li>{@code Zoom Out}</li>, + *    <li>{@code Auto Range}</li>, +++ b/src/main/java/org/jfree/chart/plot/dial/DialCap.java, +     * Creates a new instance of {@code StandardDialBackground}.  The, +     * default background paint is {@code Color.WHITE}., +++ b/src/main/java/org/jfree/chart/plot/dial/DialPointer.java, +     * Creates a new {@code DialPointer} instance., +++ b/src/main/java/org/jfree/data/contour/DefaultContourDataset.java, +     * @return An array of {@code double} objects., +     * @return An array of {@code double} objects.]
[+++ b/ant/build.xml]
[+++ /dev/null, +++ /dev/null, +++ b/README.md, +JFreeChart, +==========, +, +Version 1.5.0 (and 1.0.20), not yet released., +, +, +Overview, +--------, +JFreeChart is a comprehensive free chart library for the Java(tm) platform that , +can be used on the client-side (JavaFX and Swing) or the server side (with, +export to multiple formats including SVG, PNG and PDF)., +, +The home page for the project is:, +, +http://www.jfree.org/jfreechart, +, +JFreeChart requires JDK 1.8.0_40 or later and is licensed under the terms of the, +GNU Lesser General Public License (LGPL) version 2.1 or later., +, +, +History, +-------, +, +1.0.19 : (31-Jul-2014), +        - fixed clipping issues for combined plots in JavaFX;, +        - fix a memory leak in the new JavaFX ChartCanvas class;, +        - CombinedDomainXYPlot and CombinedRangeXYPlot now take into account the, +          pannable flags in the subplots;, +        - FastScatterPlot panning direction is corrected;, +        - added rendering hints to sharpen gridlines and borders in most output , +          formats;        , +        - JFreeSVG updated to version 2.0;, +        - included a preview of JSFreeChart, a 2D chart library written in, +          JavaScript that is conceptually similar to JFreeChart but runs , +          directly in a web browser., +, +1.0.18 : (3-Jul-2014), +        - added JavaFX support via FXGraphics2D;, +        - improved LogAxis labelling;, +        - improved numeric tick labelling;, +        - center text support in RingPlot;, +        - 'stepPoint' attribute in the XYStepAreaRenderer;, +        - other minor improvements and bug fixes, see the NEWS and ChangeLog , +          files for further details., +, +1.0.17 : (22-Nov-2013), +        - see the NEWS and ChangeLog files for details., +, +1.0.16 : (13-Sep-2013), +        - bumped the required JRE to 1.6, enhanced axis labelling, provided, +          integration with JFreeSVG and OrsonPDF for vector output, and fixed , +          bugs., +, +1.0.15 : (4-Jul-2013), +        - various minor feature enhancements and a range of bug fixes, see the , +          NEWS and ChangeLog files for details., +, +1.0.14 : (20-Nov-2011), +        - added support for multiple axes in PolarPlot, performance, +          improvements in the TimeSeriesCollection class, mouse wheel rotation, +          in the PiePlot class, improved Maven support, a range of other, +          minor functional enhancements and numerous bug fixes - see the NEWS, +          and ChangeLog files for details., +, +1.0.13 : (17-Apr-2009), +        - there are some significant new features in this release, as well, +          as performance enhancements and bug fixes - see the NEWS and, +          ChangeLog files for details., +, +1.0.12 : (31-Dec-2008), +        - added support for minor tick marks, mapping datasets to more than, +          one axis, and numerous bug fixes - see the NEWS and ChangeLog files, +          for details., +, +1.0.11 : (18-Sep-2008), +        - this release includes a new chart theming mechanism, and numerous, +          other feature enhancements and bug fixes - see the NEWS and ChangeLog, +          files for details., +, +1.0.10 : (8-Jun-2008), +        - another general maintenance release - see the NEWS and ChangeLog, +          files for more details., +, +1.0.9 : (4-Jan-2008), +        - this release fixes a security advisory with respect to the HTML, +          image maps generated by JFreeChart - see the NEWS file for more, +          information.  In addition, a number of bugs have been fixed., +, +1.0.8 : (23-Nov-2007), +        - primarily a bug fix release.  See the NEWS and ChangeLog files for a, +          more detailed description of the changes in this release., +, +1.0.7 : (14-Nov-2007), +        - See the NEWS and ChangeLog files for a more detailed description of, +          the changes in this release., +, +1.0.6 : (15-Jun-2007)]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2018, by Object Refinery Limited and Contributors., +    private List<XYAnnotation> backgroundAnnotations;, +    private List<XYAnnotation> foregroundAnnotations;, +        this.backgroundAnnotations = new ArrayList<XYAnnotation>();, +        this.foregroundAnnotations = new ArrayList<XYAnnotation>();, +     * Sets the default tool tip generator and sends a , +     * {@link RendererChangeEvent} to all registered listeners., +        for (XYAnnotation annotation : this.foregroundAnnotations) {, +        for (XYAnnotation annotation : this.backgroundAnnotations) {, +    public Collection<XYAnnotation> getAnnotations() {, +        List<XYAnnotation> result , +                = new ArrayList<XYAnnotation>(this.foregroundAnnotations);, +        List<XYAnnotation> toDraw = new ArrayList<XYAnnotation>();, +            toDraw.addAll(this.foregroundAnnotations);, +            toDraw.addAll(this.backgroundAnnotations);, +        for (XYAnnotation annotation : toDraw) {]
[+++ b/pom.xml, +    <version>1.0.19-SNAPSHOT</version>, +        <version>9</version>, +            <version>1.0.21</version>, +    <distributionManagement>, +      <snapshotRepository>, +        <id>ossrh</id>, +        <url>https://oss.sonatype.org/content/repositories/snapshots</url>, +      </snapshotRepository>, +    </distributionManagement>    , +    , +                <version>3.1</version>, +                    <excludes>, +                      <exclude>org/jfree/chart/fx/**</exclude>, +                    </excludes>                , +                <version>2.6</version>, +              <groupId>org.apache.maven.plugins</groupId>, +              <artifactId>maven-gpg-plugin</artifactId>, +              <version>1.5</version>, +              <executions>, +                <execution>, +                  <id>sign-artifacts</id>, +                  <phase>verify</phase>, +                  <goals>, +                    <goal>sign</goal>, +                  </goals>, +                </execution>, +              </executions>, +            </plugin>, +, +            <plugin>, +              <groupId>org.sonatype.plugins</groupId>, +              <artifactId>nexus-staging-maven-plugin</artifactId>, +              <version>1.6.2</version>, +              <extensions>true</extensions>, +              <configuration>, +                <serverId>ossrh</serverId>, +                <nexusUrl>https://oss.sonatype.org/</nexusUrl>, +                <autoReleaseAfterClose>false</autoReleaseAfterClose>, +              </configuration>, +            </plugin>            , +      , +            <plugin>, +                <groupId>org.codehaus.mojo</groupId>, +                <artifactId>animal-sniffer-maven-plugin</artifactId>, +                <version>1.7</version>, +                <configuration>, +                    <signature>, +                        <groupId>org.codehaus.mojo.signature</groupId>, +                        <artifactId>java16</artifactId>, +                        <version>1.0</version>, +                    </signature>, +                </configuration>, +            </plugin>, +          , +            <plugin>, +                <version>3.4</version>, +                <version>2.9.1</version>, +, +  <profiles>, +    <profile> , +      <id>release</id>, +      <build>, +        <plugins>, +          <plugin>, +            <inherited>true</inherited>, +            <groupId>org.apache.maven.plugins</groupId>, +            <artifactId>maven-javadoc-plugin</artifactId>, +            <version>2.9.1</version>, +            <executions>, +              <execution>, +                <id>attach-javadoc</id>, +                <goals>, +                  <goal>jar</goal>, +                </goals>, +              </execution>, +            </executions>, +            <configuration>, +              <sourceFileExcludes>, +                <exclude>org/jfree/chart/fx/**</exclude>, +              </sourceFileExcludes>, +            </configuration>, +          </plugin>, +, +          <plugin>, +            <groupId>org.apache.maven.plugins</groupId>, +            <artifactId>maven-source-plugin</artifactId>, +            <version>2.2.1</version>, +            <executions>, +              <execution>, +                <id>attach-sources</id>, +                <goals>, +                  <goal>jar-no-fork</goal>, +                </goals>, +              </execution>, +            </executions>, +          </plugin>, +        </plugins>, +      </build>, +    </profile>]
[+++ b/pom.xml, +++ b/pom.xml, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/ChangeLog, +2007-11-05  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/CategoryPlot.java, +	(removeDomainMarker(Marker)): New method,, +	(removeDomainMarker(Marker, Layer)): Likewise,, +	(removeDomainMarker(int, Marker, Layer)): Likewise,, +	(removeRangeMarker(Marker)): New method,, +	(removeRangeMarker(Marker, Layer)): Likewise,, +	(removeRangeMarker(int, Marker, Layer)): Likewise., +, +++ b/ChangeLog, +2007-11-05  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/CategoryPlot.java, +	(removeDomainMarker(Marker)): New method,, +	(removeDomainMarker(Marker, Layer)): Likewise,, +	(removeDomainMarker(int, Marker, Layer)): Likewise,, +	(removeRangeMarker(Marker)): New method,, +	(removeRangeMarker(Marker, Layer)): Likewise,, +	(removeRangeMarker(int, Marker, Layer)): Likewise., +, +++ b/NEWS, +- CategoryPlot - added methods to remove markers;, +++ b/ChangeLog, +2007-11-05  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/CategoryPlot.java, +	(removeDomainMarker(Marker)): New method,, +	(removeDomainMarker(Marker, Layer)): Likewise,, +	(removeDomainMarker(int, Marker, Layer)): Likewise,, +	(removeRangeMarker(Marker)): New method,, +	(removeRangeMarker(Marker, Layer)): Likewise,, +	(removeRangeMarker(int, Marker, Layer)): Likewise., +, +++ b/NEWS, +- CategoryPlot - added methods to remove markers;, +++ b/README.txt, +?? November 2007, +++ b/ChangeLog, +2007-11-05  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/CategoryPlot.java, +	(removeDomainMarker(Marker)): New method,, +	(removeDomainMarker(Marker, Layer)): Likewise,, +	(removeDomainMarker(int, Marker, Layer)): Likewise,, +	(removeRangeMarker(Marker)): New method,, +	(removeRangeMarker(Marker, Layer)): Likewise,, +	(removeRangeMarker(int, Marker, Layer)): Likewise., +, +++ b/NEWS, +- CategoryPlot - added methods to remove markers;, +++ b/README.txt, +?? November 2007, +++ b/source/org/jfree/chart/plot/CategoryPlot.java, + *                   Richard West;, + * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain, + *               and range markers (DG);, +     * Removes a marker for the domain axis and sends a {@link PlotChangeEvent} , +     * to all registered listeners., +     *, +     * @param marker  the marker., +     *, +     * @return A boolean indicating whether or not the marker was actually , +     *         removed., +     *, +     * @since 1.0.7, +     */, +    public boolean removeDomainMarker(Marker marker) {, +        return removeDomainMarker(marker, Layer.FOREGROUND);, +    }, +, +    /**, +     * Removes a marker for the domain axis in the specified layer and sends a, +     * {@link PlotChangeEvent} to all registered listeners., +     *, +     * @param marker the marker (<code>null</code> not permitted)., +     * @param layer the layer (foreground or background)., +     *, +     * @return A boolean indicating whether or not the marker was actually , +     *         removed., +     *, +     * @since 1.0.7, +     */, +    public boolean removeDomainMarker(Marker marker, Layer layer) {, +        return removeDomainMarker(0, marker, layer);, +    }, +, +    /**, +     * Removes a marker for a specific dataset/renderer and sends a, +     * {@link PlotChangeEvent} to all registered listeners., +     *, +     * @param index the dataset/renderer index., +     * @param marker the marker., +     * @param layer the layer (foreground or background)., +     *, +     * @return A boolean indicating whether or not the marker was actually , +     *         removed., +     *, +     * @since 1.0.7]
[+++ b/.gitignore, +++ b/.gitignore, +++ b/README.md, +++ b/.gitignore, +++ b/README.md, +++ b/src/test/java/org/jfree/data/time/MonthTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2017, by Object Refinery Limited., +import org.jfree.chart.date.SerialDate;, +            String monthName = SerialDate.DATE_FORMAT_SYMBOLS.getMonths()[2];, +            month = Month.parseMonth(monthName + " 1993");]
[+++ b/README.txt, +31 December 2008, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.15) ]
[+++ b/ant/build.xml, +            <manifest>, +                <attribute name="Specification-Title" value="JFreeChart" />, +                <attribute name="Specification-Version" value="${jfreechart.version}" />, +                <attribute name="Specification-Vendor" value="jfree.org" />, +                <attribute name="Implementation-Title" value="JFreeChart" />, +                <attribute name="Implementation-Version" value="${jfreechart.version}" />, +                <attribute name="Implementation-Vendor" value="jfree.org" />, +            </manifest>]
[+++ b/src/test/java/org/jfree/chart/renderer/xy/CandlestickRendererTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        assertEquals(Color.GREEN, r1.getUpPaint());, +        assertEquals(Color.RED, r1.getDownPaint());, +        assertEquals(Color.GRAY, r1.getVolumePaint());, +        r1.setUpPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.WHITE));, +        r2.setUpPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.WHITE));, +        r1.setDownPaint(new GradientPaint(5.0f, 6.0f, Color.GREEN, 7.0f, 8.0f,, +                Color.YELLOW));, +        r2.setDownPaint(new GradientPaint(5.0f, 6.0f, Color.GREEN, 7.0f, 8.0f,, +                Color.YELLOW));, +        r1.setVolumePaint(Color.BLUE);, +        r2.setVolumePaint(Color.BLUE);, +++ b/src/test/java/org/jfree/chart/renderer/xy/CandlestickRendererTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        assertEquals(Color.GREEN, r1.getUpPaint());, +        assertEquals(Color.RED, r1.getDownPaint());, +        assertEquals(Color.GRAY, r1.getVolumePaint());, +        r1.setUpPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.WHITE));, +        r2.setUpPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.WHITE));, +        r1.setDownPaint(new GradientPaint(5.0f, 6.0f, Color.GREEN, 7.0f, 8.0f,, +                Color.YELLOW));, +        r2.setDownPaint(new GradientPaint(5.0f, 6.0f, Color.GREEN, 7.0f, 8.0f,, +                Color.YELLOW));, +        r1.setVolumePaint(Color.BLUE);, +        r2.setVolumePaint(Color.BLUE);, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYErrorRendererTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited and Contributors., +        r1.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.GREEN));, +        r2.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.GREEN));, +        r1.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.WHITE));, +        r1.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,, +                Color.WHITE));]
[+++ b/ant/build-fx.xml, +        <property name="jfreechart.version" value="1.0.19-fx" />, +        <!-- copy across .css files (chart-viewer.css) -->, +        <copy todir="${basedir}/build/org/jfree/chart/fx/">, +            <fileset dir="${basedir}/source/org/jfree/chart/fx/">, +                <include name="*.css" />, +            </fileset>, +        </copy>, +]
[+++ b/src/main/java/org/jfree/chart/ChartUtils.java, +     * {@link ImageMapUtils#getImageMap(String, ChartRenderingInfo,, +     * {@link ImageMapUtils#getImageMap(String, ChartRenderingInfo,]
[+++ /dev/null, +++ /dev/null, +++ b/lib/jfreesvg-2.1.jar]
[+++ b/README.txt, +17 April 2009, +1.0.13 : (17-Apr-2009)]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.13" />, +        <property name="swt.jar" value="/home/dgilbert/swt-3.4-gtk-linux-x86/swt.jar"/>]
[+++ b/ant/build-fx.xml, +        <copy file="${basedir}/ChangeLog" tofile="${basedir}/distribution/ChangeLog" />, +        <copy todir="${basedir}/distribution/swt">, +            <fileset dir="${basedir}/swt">, +            </fileset>, +        </copy>, +, +        <copy file="${basedir}/lib/swtgraphics2d.jar" tofile="${basedir}/distribution/lib/swtgraphics2d.jar" failonerror="false" />, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar" failonerror="false" />, +        <copy file="${basedir}/ant/build-swt.xml" tofile="${basedir}/distribution/ant/build-swt.xml" />, +, +        <fixcrlf srcdir="${basedir}/distribution/swt", +                 eol="lf" eof="remove", +                 excludes="**/*.jpg" />, +++ b/ant/build-fx.xml, +        <copy file="${basedir}/ChangeLog" tofile="${basedir}/distribution/ChangeLog" />, +        <copy todir="${basedir}/distribution/swt">, +            <fileset dir="${basedir}/swt">, +            </fileset>, +        </copy>, +, +        <copy file="${basedir}/lib/swtgraphics2d.jar" tofile="${basedir}/distribution/lib/swtgraphics2d.jar" failonerror="false" />, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar" failonerror="false" />, +        <copy file="${basedir}/ant/build-swt.xml" tofile="${basedir}/distribution/ant/build-swt.xml" />, +, +        <fixcrlf srcdir="${basedir}/distribution/swt", +                 eol="lf" eof="remove", +                 excludes="**/*.jpg" />, +++ b/ant/build.xml, +        <copy file="${basedir}/ChangeLog" tofile="${basedir}/distribution/ChangeLog" />, +        <copy todir="${basedir}/distribution/swt">, +            <fileset dir="${basedir}/swt">, +            </fileset>, +        </copy>, +, +        <copy file="${basedir}/lib/swtgraphics2d.jar" tofile="${basedir}/distribution/lib/swtgraphics2d.jar" failonerror="false" />, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar" failonerror="false" />, +        <copy file="${basedir}/ant/build-swt.xml" tofile="${basedir}/distribution/ant/build-swt.xml" />, +, +        <fixcrlf srcdir="${basedir}/distribution/swt", +                 eol="lf" eof="remove", +                 excludes="**/*.jpg" />, +++ b/ant/build-fx.xml, +        <copy file="${basedir}/ChangeLog" tofile="${basedir}/distribution/ChangeLog" />, +        <copy todir="${basedir}/distribution/swt">, +            <fileset dir="${basedir}/swt">, +            </fileset>, +        </copy>, +, +        <copy file="${basedir}/lib/swtgraphics2d.jar" tofile="${basedir}/distribution/lib/swtgraphics2d.jar" failonerror="false" />, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar" failonerror="false" />, +        <copy file="${basedir}/ant/build-swt.xml" tofile="${basedir}/distribution/ant/build-swt.xml" />, +, +        <fixcrlf srcdir="${basedir}/distribution/swt", +                 eol="lf" eof="remove", +                 excludes="**/*.jpg" />, +++ b/ant/build.xml, +        <copy file="${basedir}/ChangeLog" tofile="${basedir}/distribution/ChangeLog" />, +        <copy todir="${basedir}/distribution/swt">, +            <fileset dir="${basedir}/swt">, +            </fileset>, +        </copy>, +, +        <copy file="${basedir}/lib/swtgraphics2d.jar" tofile="${basedir}/distribution/lib/swtgraphics2d.jar" failonerror="false" />, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar" failonerror="false" />, +        <copy file="${basedir}/ant/build-swt.xml" tofile="${basedir}/distribution/ant/build-swt.xml" />, +, +        <fixcrlf srcdir="${basedir}/distribution/swt", +                 eol="lf" eof="remove", +                 excludes="**/*.jpg" />, +++ b/src/main/java/org/jfree/chart/fx/demo/CrosshairOverlayFXDemo1.java, +/* ----------------------------, + * CrosshairOverlayFXDemo1.java, + * ----------------------------, +++ b/ant/build-fx.xml, +        <copy file="${basedir}/ChangeLog" tofile="${basedir}/distribution/ChangeLog" />, +        <copy todir="${basedir}/distribution/swt">, +            <fileset dir="${basedir}/swt">, +            </fileset>, +        </copy>, +, +        <copy file="${basedir}/lib/swtgraphics2d.jar" tofile="${basedir}/distribution/lib/swtgraphics2d.jar" failonerror="false" />, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar" failonerror="false" />, +        <copy file="${basedir}/ant/build-swt.xml" tofile="${basedir}/distribution/ant/build-swt.xml" />, +, +        <fixcrlf srcdir="${basedir}/distribution/swt", +                 eol="lf" eof="remove", +                 excludes="**/*.jpg" />, +++ b/ant/build.xml, +        <copy file="${basedir}/ChangeLog" tofile="${basedir}/distribution/ChangeLog" />, +        <copy todir="${basedir}/distribution/swt">, +            <fileset dir="${basedir}/swt">, +            </fileset>, +        </copy>, +, +        <copy file="${basedir}/lib/swtgraphics2d.jar" tofile="${basedir}/distribution/lib/swtgraphics2d.jar" failonerror="false" />, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar" failonerror="false" />, +        <copy file="${basedir}/ant/build-swt.xml" tofile="${basedir}/distribution/ant/build-swt.xml" />, +, +        <fixcrlf srcdir="${basedir}/distribution/swt"]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.9" />, +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.9" />, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.9" />]
[+++ /dev/null, +++ /dev/null, +++ b/lib/fxgraphics2d-1.5.jar, +++ /dev/null, +++ b/lib/fxgraphics2d-1.5.jar, +++ /dev/null, +++ /dev/null, +++ b/lib/fxgraphics2d-1.5.jar, +++ /dev/null, +++ b/lib/jfreesvg-3.2.jar, +++ /dev/null, +++ b/lib/fxgraphics2d-1.5.jar, +++ /dev/null, +++ b/lib/jfreesvg-3.2.jar, +++ b/pom.xml, +            <version>1.5</version>, +            <version>3.2</version>]
[+++ b/ChangeLog, +2008-06-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/axis/DateTickUnit.java, +    (addToDate(Date)): Deprecated., +, +++ b/ChangeLog, +2008-06-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/axis/DateTickUnit.java, +    (addToDate(Date)): Deprecated., +, +++ b/NEWS, +9 June 2008, +has new options.  There are new dataset classes (SlidingCategoryDataset and , +SlidingGanttDataset) that permit a subset of categories to be plotted, and , +allow charts based on these datasets to simulate scrolling.  There is a new , +ShortTextTitle class., +, +This release passes 1,929 JUnit tests (0 failures) on JRE 1.6.0_03., +, +- ChartPanel - the zoomPoint attribute has been changed from Point to Point2D;, +- ShortTextTitle - a new title class;, +- SlidingCategoryDataset - new class;, +- SlidingGanttDataset - new class;, +PublicCloneable is now implemented by a number of classes that didn't , +previously implement the interface - this should improve the reliability of, +chart cloning., +, +1943021 : Fix for MultiplePiePlot [Brian Cabana];, +1925366 : Speed improvement for DatasetUtilities [Rafal Skalny];, +1918209 : LogAxis createTickLabel() changed from private to , +          protected [Andrew Mickish];, +1914411 : Simplification of plot event notification [Richard West];, +1913751 : XYPlot and CategoryPlot addMarker() methods with , +          optional notification [Richard West];, +1902418 : Bug fix for LogAxis vertical labels [Andrew Mickish];, +1901599 : Fixes for XYTitleAnnotation [Andrew Mickish];, +1891849 : New curve option for pie chart label links [Martin Hilpert];, +1874890 : Added step point to XYStepRenderer [Ulrich Voigt];, +1873328 : Enhancements to RelativeDateFormat [Michael Siemer];, +1871902 : PolarPlot now has angleTickUnit attribute [Martin Hoeller];, +1868745 : Fix label anchor points on LogAxis [Andrew Mickish];, +1866446 : Added maximumBarWidth to BoxAndWhiskerRenderer [Rob Van der Sanden];, +Fixes were applied to the clone() methods in the TaskSeries and , +TaskSeriesCollection classes., +, +New Experimental Features:, +, +Two new classes CombinedCategoryPlot and CombinedXYPlot have been added to the, +'experimental' source tree - these were contributed by Richard West (see, +patch 1924543)., +++ b/ChangeLog, +2008-06-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/axis/DateTickUnit.java, +    (addToDate(Date)): Deprecated., +, +++ b/NEWS, +9 June 2008, +has new options.  There are new dataset classes (SlidingCategoryDataset and , +SlidingGanttDataset) that permit a subset of categories to be plotted, and , +allow charts based on these datasets to simulate scrolling.  There is a new , +ShortTextTitle class., +, +This release passes 1,929 JUnit tests (0 failures) on JRE 1.6.0_03., +, +- ChartPanel - the zoomPoint attribute has been changed from Point to Point2D;, +- ShortTextTitle - a new title class;, +- SlidingCategoryDataset - new class;, +- SlidingGanttDataset - new class;, +PublicCloneable is now implemented by a number of classes that didn't , +previously implement the interface - this should improve the reliability of, +chart cloning., +, +1943021 : Fix for MultiplePiePlot [Brian Cabana];, +1925366 : Speed improvement for DatasetUtilities [Rafal Skalny];, +1918209 : LogAxis createTickLabel() changed from private to , +          protected [Andrew Mickish];, +1914411 : Simplification of plot event notification [Richard West];, +1913751 : XYPlot and CategoryPlot addMarker() methods with , +          optional notification [Richard West];, +1902418 : Bug fix for LogAxis vertical labels [Andrew Mickish];, +1901599 : Fixes for XYTitleAnnotation [Andrew Mickish];, +1891849 : New curve option for pie chart label links [Martin Hilpert];, +1874890 : Added step point to XYStepRenderer [Ulrich Voigt];, +1873328 : Enhancements to RelativeDateFormat [Michael Siemer];, +1871902 : PolarPlot now has angleTickUnit attribute [Martin Hoeller];, +1868745 : Fix label anchor points on LogAxis [Andrew Mickish];, +1866446 : Added maximumBarWidth to BoxAndWhiskerRenderer [Rob Van der Sanden];, +Fixes were applied to the clone() methods in the TaskSeries and , +TaskSeriesCollection classes., +, +New Experimental Features:, +, +Two new classes CombinedCategoryPlot and CombinedXYPlot have been added to the, +'experimental' source tree - these were contributed by Richard West (see, +patch 1924543)., +++ b/README.txt, +9 June 2008]
[+++ b/NEWS, +14 November 2007, +++ b/NEWS, +14 November 2007, +++ b/README.txt, +14 November 2007, +1.0.7 : (14-Nov-2007)]
[+++ b/src/main/java/org/jfree/chart/ui/ApplicationFrame.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, + * A base class for creating the main frame for simple applications.  The frame , + * listens for window closing events, and responds by shutting down the JVM.  , + * This is OK for small demo applications...for more serious applications, , + * you'll want to use something more robust., +    public ApplicationFrame(String title) {, +    @Override, +    public void windowClosing(WindowEvent event) {, +    @Override, +    public void windowClosed(WindowEvent event) {, +    @Override, +    public void windowActivated(WindowEvent event) {, +    @Override, +    public void windowDeactivated(WindowEvent event) {, +    @Override, +    public void windowDeiconified(WindowEvent event) {, +    @Override, +    public void windowIconified(WindowEvent event) {, +    @Override, +    public void windowOpened(WindowEvent event) {]
[+++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.12" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.12" />, +++ /dev/null, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.12" />, +++ /dev/null, +++ b/lib/jcommon-1.0.12.jar]
[+++ b/ant/build.xml, +               haltonerror="false", +               haltonfailure="false", +               fork="false", +                <pathelement location="${hamcrest.jar}"/>, +                    <include name="**/*Test.java"/>]
[+++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +        if (this.autoRange != auto) {, +    }, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +        if (this.autoRange != auto) {, +    }, +++ b/src/main/java/org/jfree/chart/fx/interaction/ZoomHandlerFX.java, + * Contributor(s):   -;, +import javafx.scene.input.MouseEvent;, +import org.jfree.util.ShapeUtilities;, +            this.startPoint = ShapeUtilities.getPointInRectangle(e.getX(),, +                    e.getY(), dataArea);, +        boolean hZoom, vZoom;, +        , +        boolean hZoom, vZoom;, +        if (z.getOrientation().isHorizontal()) {, +            hZoom = z.isRangeZoomable();, +            vZoom = z.isDomainZoomable();, +        } else {, +            hZoom = z.isDomainZoomable();, +            vZoom = z.isRangeZoomable();, +        }, +                Rectangle2D zoomArea = new Rectangle2D.Double(x, y, w, h);, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +        if (this.autoRange != auto) {, +    }, +++ b/src/main/java/org/jfree/chart/fx/interaction/ZoomHandlerFX.java, + * Contributor(s):   -;, +import javafx.scene.input.MouseEvent;, +import org.jfree.util.ShapeUtilities;, +            this.startPoint = ShapeUtilities.getPointInRectangle(e.getX(),, +                    e.getY(), dataArea);, +        boolean hZoom, vZoom;, +        , +        boolean hZoom, vZoom;, +        if (z.getOrientation().isHorizontal()) {, +            hZoom = z.isRangeZoomable();, +            vZoom = z.isDomainZoomable();, +        } else {, +            hZoom = z.isDomainZoomable();, +            vZoom = z.isRangeZoomable();, +        }, +                Rectangle2D zoomArea = new Rectangle2D.Double(x, y, w, h);, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java, + *                   Matthias Noebl (for Cropster GmbH);, + * 29-Feb-2015 : Improved performance by only drawing visible lines, +import org.jfree.chart.util.LineUtilities;, +                            transX1, dataArea);, +                            transXs, dataArea);, +                            transXs, dataArea);, +                            transX1, dataArea);, +                            transY1, dataArea);, +                            transY0, dataArea);, +                            transY1, dataArea);, +                            transY1, dataArea);, +            double x1, double y1, Rectangle2D dataArea) {, +        boolean visible = LineUtilities.clipLine(line, dataArea);, +        if (visible), +        {, +    }]
[+++ b/svg/EQTBarChartDemo1.html, +<!DOCTYPE html>, +<html>, +<head>, +<title>EQTBarChartDemo1</title>, +<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />, +<script src="lib/opentip-native.js"></script><link href="css/opentip.css" rel="stylesheet" type="text/css" /><script src="lib/jfreechart_utils.js"></script></head>, +<body>, +<h1>EQTBarChartDemo1</h1>, +<p>Click on an item in the chart or just hover and look at the tooltip (the reference is a string in JSON format that should contain enough information to identify the chart element):</p>, +  <script type="application/javascript">, +    function barChartData() {, +      return {"columnKeys": ["Warm-up", "Test"], "rows": [["JFreeSVG", [7445.0, 4297.0]], ["Batik", [24448.0, 21022.0]]]}, +    }, +  </script>, +  <script type="application/javascript">, +    // wait until all the resources are loaded, +    window.addEventListener("load", initialise, false);, +    function initialise() {, +      var barSVG = document.getElementById("chart1");, +      barSVG.onclick = handleClick;, +    }, +    function handleClick(evt) {, +      var element = evt.target;, +      var ref = jfc.Utils.findChartRef(element);, +      var chartId = jfc.Utils.findChartId(element);, +      alert('You clicked on the item ' + ref + ' for the chart [' + chartId + ']');, +    }, +</script>, +<p>, +<svg id="chart1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:jfreesvg="http://www.jfree.org/jfreesvg/svg" width="600" height="370" text-rendering="auto" shape-rendering="auto">, +<defs><linearGradient id="defs2_gp0" x1="107.3" y1="0" x2="114" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,85,85);"/><stop offset="100%" style="stop-color: rgb(255,255,255);"/></linearGradient>, +<linearGradient id="defs2_gp13" x1="506" y1="0" x2="512" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,255,255);"/><stop offset="100%" style="stop-color: rgb(85,85,255);"/></linearGradient>, +<linearGradient id="defs2_gp14" x1="512" y1="0" x2="550" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(85,85,255);"/><stop offset="100%" style="stop-color: rgb(121,121,255);"/></linearGradient>, +<linearGradient id="defs2_gp8" x1="385.6" y1="0" x2="392" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,85,85);"/><stop offset="100%" style="stop-color: rgb(255,255,255);"/></linearGradient>, +<linearGradient id="defs2_gp6" x1="234" y1="0" x2="272" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(85,85,255);"/><stop offset="100%" style="stop-color: rgb(121,121,255);"/></linearGradient>, +<linearGradient id="defs2_gp10" x1="398" y1="0" x2="436" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,85,85);"/><stop offset="100%" style="stop-color: rgb(255,121,121);"/></linearGradient>, +<linearGradient id="defs2_gp2" x1="120" y1="0" x2="158" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,85,85);"/><stop offset="100%" style="stop-color: rgb(255,121,121);"/></linearGradient>, +<linearGradient id="defs2_gp9" x1="392" y1="0" x2="398" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,255,255);"/><stop offset="100%" style="stop-color: rgb(255,85,85);"/></linearGradient>, +<linearGradient id="defs2_gp7" x1="272" y1="0" x2="284.4" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(121,121,255);"/><stop offset="100%" style="stop-color: rgb(85,85,255);"/></linearGradient>, +<linearGradient id="defs2_gp11" x1="436" y1="0" x2="448.85" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,121,121);"/><stop offset="100%" style="stop-color: rgb(255,85,85);"/></linearGradient>, +<linearGradient id="defs2_gp3" x1="158" y1="0" x2="170.55" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,121,121);"/><stop offset="100%" style="stop-color: rgb(255,85,85);"/></linearGradient>, +<linearGradient id="defs2_gp15" x1="550" y1="0" x2="562.7" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(121,121,255);"/><stop offset="100%" style="stop-color: rgb(85,85,255);"/></linearGradient>, +<linearGradient id="defs2_gp12" x1="499.45" y1="0" x2="506" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(85,85,255);"/><stop offset="100%" style="stop-color: rgb(255,255,255);"/></linearGradient>, +<linearGradient id="defs2_gp1" x1="114" y1="0" x2="120" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,255,255);"/><stop offset="100%" style="stop-color: rgb(255,85,85);"/></linearGradient>, +<linearGradient id="defs2_gp4" x1="221.15" y1="0" x2="227" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(85,85,255);"/><stop offset="100%" style="stop-color: rgb(255,255,255);"/></linearGradient>, +<linearGradient id="defs2_gp5" x1="227" y1="0" x2="234" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,255,255);"/><stop offset="100%" style="stop-color: rgb(85,85,255);"/></linearGradient>, +<clipPath id="defs2_clip-0"><path d="M 0 0 L 600 0 L 600 370 L 0 370 L 0 0 M 0 0"/></clipPath>, +<clipPath id="defs2_clip-1"><path d="M 203.55 164.45 L 203.55 764.45 L -166.45 764.45 L -166.45 164.45 L 203.55 164.45 M 203.55 164.45"/></clipPath>, +<clipPath id="defs2_clip-2"><path d="M 82 51 L 82 317 L 588 317 L 588 51 M 82 51"/></clipPath>, +</defs>, +<g id="chart1" jfreesvg:ref="JFREECHART_TOP_LEVEL"><rect x="0" y="0" width="600" height="370" style="fill: rgb(255,255,255); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="137.5" y="21.01" style="fill: rgb(0,0,0); fill-opacity: 1.0; font-family: Tahoma; font-size: 20px; font-weight: bold; " clip-path="url(#defs2_clip-0)">Performance: JFreeSVG vs Batik</text></g><rect x="244.5" y="348.52" width="111" height="20.48" style="fill: rgb(255,255,255); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g style="fill: rgb(255,85,85); fill-opacity: 1.0; stroke: none" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"><path d="M 247.5 354.76 L 255.5 354.76 L 255.5 362.76 L 247.5 362.76 L 247.5 354.76 M 247.5 354.76"/></g><g transform="matrix(1,0,0,1,0,0)"><text x="259.5" y="363.52" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">JFreeSVG</text></g><g style="fill: rgb(85,85,255); fill-opacity: 1.0; stroke: none" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"><path d="M 314.5 354.76 L 322.5 354.76 L 322.5 362.76 L 314.5 362.76 L 314.5 354.76 M 314.5 354.76"/></g><g transform="matrix(1,0,0,1,0,0)"><text x="326.5" y="363.52" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">Batik</text></g><g transform="matrix(1,0,0,1,0,0)"><text x="56" y="38.74" style="fill: rgb(0,0,0); fill-opacity: 1.0; font-family: sans-serif; font-size: 12px; font-weight: bold; " clip-path="url(#defs2_clip-0)">Time to generate 1000 charts in SVG format (lower bars = better performance)</text></g><rect x="82" y="51" width="506" height="266" style="fill: rgb(192,192,192); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><line x1="82" y1="321" x2="588" y2="321" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><line x1="195.85" y1="321" x2="195.85" y2="321" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><line x1="195.85" y1="321" x2="195.85" y2="323" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><line x1="474.15" y1="321" x2="474.15" y2="321" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><line x1="474.15" y1="321" x2="474.15" y2="323" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="171.35" y="339.01" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">Warm-up</text></g><g transform="matrix(1,0,0,1,0,0)"><text x="463.15" y="339.01" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">Test</text></g><line x1="78" y1="51" x2="78" y2="317" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="65" y="321.76" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">0</text></g><line x1="76" y1="317" x2="78" y2="317" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="40" y="301.04" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">2,000</text></g><line x1="76" y1="296.28" x2="78" y2="296.28" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="40" y="280.32" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">4,000</text></g><line x1="76" y1="275.55" x2="78" y2="275.55" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="40" y="259.59" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">6,000</text></g><line x1="76" y1="254.83" x2="78" y2="254.83" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="40" y="238.87" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">8,000</text></g><line x1="76" y1="234.1" x2="78" y2="234.1" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="33" y="218.14" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">10,000</text></g><line x1="76" y1="213.38" x2="78" y2="213.38" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="33" y="197.42" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">12,000</text></g><line x1="76" y1="192.65" x2="78" y2="192.65" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="33" y="176.69" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">14,000</text></g><line x1="76" y1="171.93" x2="78" y2="171.93" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="33" y="155.97" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">16,000</text></g><line x1="76" y1="151.21" x2="78" y2="151.21" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="33" y="135.25" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">18,000</text></g><line x1="76" y1="130.48" x2="78" y2="130.48" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="33" y="114.52" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">20,000</text></g><line x1="76" y1="109.76" x2="78" y2="109.76" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="33" y="93.8" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">22,000</text></g><line x1="76" y1="89.03" x2="78" y2="89.03" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(1,0,0,1,0,0)"><text x="33" y="73.07" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 12px; " clip-path="url(#defs2_clip-0)">24,000</text></g><line x1="76" y1="68.31" x2="78" y2="68.31" style="stroke-width: 0.5;stroke: rgb(128,128,128);stroke-opacity: 1.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/><g transform="matrix(0,-1,1,0,-164.449219,203.550781)"><text x="-22.95" y="189.56" style="fill: rgb(64,64,64); fill-opacity: 1.0; font-family: Tahoma; font-size: 14px; font-weight: bold; " clip-path="url(#defs2_clip-1)">Milliseconds</text></g><line x1="82" y1="317" x2="588" y2="317" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="296.28" x2="588" y2="296.28" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="275.55" x2="588" y2="275.55" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="254.83" x2="588" y2="254.83" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="234.1" x2="588" y2="234.1" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="213.38" x2="588" y2="213.38" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="192.65" x2="588" y2="192.65" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="171.93" x2="588" y2="171.93" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="151.21" x2="588" y2="151.21" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="130.48" x2="588" y2="130.48" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="109.76" x2="588" y2="109.76" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="89.03" x2="588" y2="89.03" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><line x1="82" y1="68.31" x2="588" y2="68.31" style="stroke-width: 0.5;stroke: rgb(255,255,255);stroke-opacity: 1.0;stroke-dasharray: 2.0, 2.0;shape-rendering:crispEdges;" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><g jfreesvg:ref="{&quot;rowKey&quot;: &quot;JFreeSVG&quot;, &quot;columnKey&quot;: &quot;Warm-up&quot;}"><rect x="107.3" y="239.85" width="6.7" height="77.15" style="fill: url(#defs2_gp0); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="114" y="239.85" width="6" height="77.15" style="fill: url(#defs2_gp1); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="120" y="239.85" width="38" height="77.15" style="fill: url(#defs2_gp2); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="158" y="239.85" width="12.55" height="77.15" style="fill: url(#defs2_gp3); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/></g>, +<g jfreesvg:ref="{&quot;rowKey&quot;: &quot;Batik&quot;, &quot;columnKey&quot;: &quot;Warm-up&quot;}"><rect x="221.15" y="63.67" width="5.85" height="253.33" style="fill: url(#defs2_gp4); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="227" y="63.67" width="7" height="253.33" style="fill: url(#defs2_gp5); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="234" y="63.67" width="38" height="253.33" style="fill: url(#defs2_gp6); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="272" y="63.67" width="12.4" height="253.33" style="fill: url(#defs2_gp7); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/></g>, +<g jfreesvg:ref="{&quot;rowKey&quot;: &quot;JFreeSVG&quot;, &quot;columnKey&quot;: &quot;Test&quot;}"><rect x="385.6" y="272.47" width="6.4" height="44.53" style="fill: url(#defs2_gp8); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="392" y="272.47" width="6" height="44.53" style="fill: url(#defs2_gp9); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="398" y="272.47" width="38" height="44.53" style="fill: url(#defs2_gp10); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="436" y="272.47" width="12.85" height="44.53" style="fill: url(#defs2_gp11); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/></g>, +<g jfreesvg:ref="{&quot;rowKey&quot;: &quot;Batik&quot;, &quot;columnKey&quot;: &quot;Test&quot;}"><rect x="499.45" y="99.17" width="6.55" height="217.83" style="fill: url(#defs2_gp12); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="506" y="99.17" width="6" height="217.83" style="fill: url(#defs2_gp13); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="512" y="99.17" width="38" height="217.83" style="fill: url(#defs2_gp14); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/><rect x="550" y="99.17" width="12.7" height="217.83" style="fill: url(#defs2_gp15); fill-opacity: 1.0" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-2)"/></g>, +<rect x="82" y="51" width="506" height="266" style="stroke-width: 0.5;stroke: rgb(0,0,0);stroke-opacity: 1.0;shape-rendering:crispEdges;; fill: none" transform="matrix(1,0,0,1,0,0)" clip-path="url(#defs2_clip-0)"/></g>, +</svg>, +</p>, +</body>, +</html>, +++ b/svg/EQTBarChartDemo1.html, +<!DOCTYPE html>, +<html>, +<head>, +<title>EQTBarChartDemo1</title>, +<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />, +<script src="lib/opentip-native.js"></script><link href="css/opentip.css" rel="stylesheet" type="text/css" /><script src="lib/jfreechart_utils.js"></script></head>, +<body>, +<h1>EQTBarChartDemo1</h1>, +<p>Click on an item in the chart or just hover and look at the tooltip (the reference is a string in JSON format that should contain enough information to identify the chart element):</p>, +  <script type="application/javascript">, +    function barChartData() {, +      return {"columnKeys": ["Warm-up", "Test"], "rows": [["JFreeSVG", [7445.0, 4297.0]], ["Batik", [24448.0, 21022.0]]]}, +    }, +  </script>, +  <script type="application/javascript">, +    // wait until all the resources are loaded, +    window.addEventListener("load", initialise, false);, +    function initialise() {, +      var barSVG = document.getElementById("chart1");, +      barSVG.onclick = handleClick;, +    }, +    function handleClick(evt) {, +      var element = evt.target;, +      var ref = jfc.Utils.findChartRef(element);, +      var chartId = jfc.Utils.findChartId(element);, +      alert('You clicked on the item ' + ref + ' for the chart [' + chartId + ']');, +    }, +</script>, +<p>, +<svg id="chart1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:jfreesvg="http://www.jfree.org/jfreesvg/svg" width="600" height="370" text-rendering="auto" shape-rendering="auto">, +<defs><linearGradient id="defs2_gp0" x1="107.3" y1="0" x2="114" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,85,85);"/><stop offset="100%" style="stop-color: rgb(255,255,255);"/></linearGradient>, +<linearGradient id="defs2_gp13" x1="506" y1="0" x2="512" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,255,255);"/><stop offset="100%" style="stop-color: rgb(85,85,255);"/></linearGradient>, +<linearGradient id="defs2_gp14" x1="512" y1="0" x2="550" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(85,85,255);"/><stop offset="100%" style="stop-color: rgb(121,121,255);"/></linearGradient>, +<linearGradient id="defs2_gp8" x1="385.6" y1="0" x2="392" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,85,85);"/><stop offset="100%" style="stop-color: rgb(255,255,255);"/></linearGradient>, +<linearGradient id="defs2_gp6" x1="234" y1="0" x2="272" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(85,85,255);"/><stop offset="100%" style="stop-color: rgb(121,121,255);"/></linearGradient>, +<linearGradient id="defs2_gp10" x1="398" y1="0" x2="436" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,85,85);"/><stop offset="100%" style="stop-color: rgb(255,121,121);"/></linearGradient>, +<linearGradient id="defs2_gp2" x1="120" y1="0" x2="158" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,85,85);"/><stop offset="100%" style="stop-color: rgb(255,121,121);"/></linearGradient>, +<linearGradient id="defs2_gp9" x1="392" y1="0" x2="398" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(255,255,255);"/><stop offset="100%" style="stop-color: rgb(255,85,85);"/></linearGradient>, +<linearGradient id="defs2_gp7" x1="272" y1="0" x2="284.4" y2="0" gradientUnits="userSpaceOnUse"><stop offset="0%" style="stop-color: rgb(121,121,255);"/><stop offset="100%" style="stop-color: rgb(85,85,255);"/></linearGradient>]
[+++ b/src/main/java/org/jfree/chart/axis/TickUnit.java, +     * @return {@code 1} if the size of the other object is less than this,]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java, +    // FILL PAINT, +     * @param series  the series index (zero-based)., +     * @param paint  the paint ({@code null} permitted)., +     */, +    public void setSeriesFillPaint(int series, Paint paint);, +, +    public void setSeriesFillPaint(int series, Paint paint, boolean notify);, +, +    /**, +     * Returns the default paint., +     *, +     * @return The default paint (never {@code null})., +     */, +    public Paint getDefaultFillPaint();, +, +    /**, +     * Sets the default paint and sends a {@link RendererChangeEvent} to all, +     * registered listeners., +     *, +     * @param paint  the paint ({@code null} not permitted)., +     */, +    public void setDefaultFillPaint(Paint paint);, +, +    public void setDefaultFillPaint(Paint paint, boolean notify);, +     * @see #setDefaultItemLabelsVisible(boolean), +            ItemLabelPosition position, boolean notify);, +            ItemLabelPosition position, boolean notify);]
[+++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    private transient Paint minorTickMarkPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    private transient Paint minorTickMarkPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint DEFAULT_DIVIDER_PAINT = Color.GRAY;, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    private transient Paint minorTickMarkPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint DEFAULT_DIVIDER_PAINT = Color.GRAY;, +++ b/src/main/java/org/jfree/chart/axis/SubCategoryAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited., +    private transient Paint subLabelPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    private transient Paint minorTickMarkPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint DEFAULT_DIVIDER_PAINT = Color.GRAY;, +++ b/src/main/java/org/jfree/chart/axis/SubCategoryAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited., +    private transient Paint subLabelPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/block/LabelBlock.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    private transient Paint minorTickMarkPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint DEFAULT_DIVIDER_PAINT = Color.GRAY;, +++ b/src/main/java/org/jfree/chart/axis/SubCategoryAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited., +    private transient Paint subLabelPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/block/LabelBlock.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/block/LineBorder.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        this(Color.BLACK, new BasicStroke(1.0f), new RectangleInsets(1.0, 1.0,, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    private transient Paint minorTickMarkPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint DEFAULT_DIVIDER_PAINT = Color.GRAY;, +++ b/src/main/java/org/jfree/chart/axis/SubCategoryAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited., +    private transient Paint subLabelPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/block/LabelBlock.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/block/LineBorder.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        this(Color.BLACK, new BasicStroke(1.0f), new RectangleInsets(1.0, 1.0,, +++ b/src/main/java/org/jfree/chart/needle/MeterNeedle.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by the Australian Antarctic Division and, +    private transient Paint outlinePaint = Color.BLACK;]
[+++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +++ b/src/main/java/org/jfree/chart/fx/interaction/ZoomHandlerFX.java, +, +, +import javafx.scene.input.MouseEvent;, +    /** X axis and Y axis zoom indicators */, +    private boolean hZoom, vZoom;, +, +    , +            this.startPoint = new Point2D.Double(e.getX(), e.getY());, +        , +        // if the user clicked started dragging from an axis, let's zoom , +        // only that axis , +        if (y >= dataArea.getHeight()) , +            vZoom = false;, +        if (x <= dataArea.getX()) , +            hZoom = false;, +        , +                if (hZoom) , +                p.setNotify(saved);, +                p.setNotify(false);, +                if (vZoom) , +++ b/src/main/java/org/jfree/chart/axis/ValueAxis.java, +++ b/src/main/java/org/jfree/chart/fx/interaction/ZoomHandlerFX.java, +, +, +import javafx.scene.input.MouseEvent;, +    /** X axis and Y axis zoom indicators */, +    private boolean hZoom, vZoom;, +, +    , +            this.startPoint = new Point2D.Double(e.getX(), e.getY());, +        , +        // if the user clicked started dragging from an axis, let's zoom , +        // only that axis , +        if (y >= dataArea.getHeight()) , +            vZoom = false;, +        if (x <= dataArea.getX()) , +            hZoom = false;, +        , +                if (hZoom) , +                p.setNotify(saved);, +                p.setNotify(false);, +                if (vZoom) , +++ b/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java, +                            transX1);, +                            transXs);, +                            transXs);, +                            transX1);, +                            transY1);, +                            transY0);, +                            transY1);, +                            transY1);, +            double x1, double y1) {]
[+++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +import org.jfree.chart.renderer.RendererUtils;, +                            int[] itemBounds = RendererUtils.findLiveItems(, +                            int[] itemBounds = RendererUtils.findLiveItems(, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +import org.jfree.chart.renderer.RendererUtils;, +                            int[] itemBounds = RendererUtils.findLiveItems(, +                            int[] itemBounds = RendererUtils.findLiveItems(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +import org.jfree.chart.renderer.RendererUtils;, +                            int[] itemBounds = RendererUtils.findLiveItems(, +                            int[] itemBounds = RendererUtils.findLiveItems(, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/renderer/RendererUtils.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ------------------, + * RendererUtils.java, + * ------------------, + * (C) Copyright 2007-2017, by Object Refinery Limited., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 19-Apr-2007 : Version 1 (DG);, + * 27-Mar-2009 : Fixed results for unsorted datasets (DG);, + * 19-May-2009 : Fixed FindBugs warnings, patch by Michal Wozniak (DG);, + * 23-Aug-2012 : Fixed rendering anomaly bug 3561093 (DG);, + * 03-Jul-2013 : Use ParamChecks (DG);, + *, + */, +, +package org.jfree.chart.renderer;, +, +import org.jfree.chart.util.ParamChecks;, +import org.jfree.data.DomainOrder;, +import org.jfree.data.xy.XYDataset;, +, +/**, + * Utility methods related to the rendering process., + *, + * @since 1.0.6, + */, +public class RendererUtils {, +, +    /**, +     * Finds the lower index of the range of live items in the specified data, +     * series., +     *, +     * @param dataset  the dataset ({@code null} not permitted)., +     * @param series  the series index., +     * @param xLow  the lowest x-value in the live range., +     * @param xHigh  the highest x-value in the live range., +     *, +     * @return The index of the required item., +     *, +     * @since 1.0.6, +     *, +     * @see #findLiveItemsUpperBound(XYDataset, int, double, double), +     */, +    public static int findLiveItemsLowerBound(XYDataset dataset, int series,, +            double xLow, double xHigh) {, +        ParamChecks.nullNotPermitted(dataset, "dataset");, +        if (xLow >= xHigh) {, +            throw new IllegalArgumentException("Requires xLow < xHigh.");, +        }, +        int itemCount = dataset.getItemCount(series);, +        if (itemCount <= 1) {, +            return 0;, +        }, +        if (dataset.getDomainOrder() == DomainOrder.ASCENDING) {, +            // for data in ascending order by x-value, we are (broadly) looking, +            // for the index of the highest x-value that is less than xLow]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited., +            c0 = Color.BLUE;, +            c1 = Color.BLUE.brighter();, +                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.WHITE);, +                    Color.WHITE, (float) regions[1].getMaxX(), 0.0f, c0);, +                    (float) regions[0].getMaxX(), Color.WHITE);, +                    Color.WHITE, 0.0f, (float) regions[1].getMaxY(), c0);, +        g2.setPaint(Color.GRAY);, +++ b/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited., +            c0 = Color.BLUE;, +            c1 = Color.BLUE.brighter();, +                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.WHITE);, +                    Color.WHITE, (float) regions[1].getMaxX(), 0.0f, c0);, +                    (float) regions[0].getMaxX(), Color.WHITE);, +                    Color.WHITE, 0.0f, (float) regions[1].getMaxY(), c0);, +        g2.setPaint(Color.GRAY);, +++ b/src/main/java/org/jfree/chart/title/PaintScaleLegend.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        this.stripOutlinePaint = Color.GRAY;, +        this.backgroundPaint = Color.WHITE;, +++ b/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2017, by Object Refinery Limited., +            c0 = Color.BLUE;, +            c1 = Color.BLUE.brighter();, +                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.WHITE);, +                    Color.WHITE, (float) regions[1].getMaxX(), 0.0f, c0);, +                    (float) regions[0].getMaxX(), Color.WHITE);, +                    Color.WHITE, 0.0f, (float) regions[1].getMaxY(), c0);, +        g2.setPaint(Color.GRAY);, +++ b/src/main/java/org/jfree/chart/title/PaintScaleLegend.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        this.stripOutlinePaint = Color.GRAY;, +        this.backgroundPaint = Color.WHITE;, +++ b/src/test/java/org/jfree/chart/LegendItemTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true, Color.RED,, +                true, Color.BLUE, new BasicStroke(1.2f), true,, +                new BasicStroke(2.1f), Color.GREEN);, +                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),, +                new BasicStroke(2.1f), Color.GREEN);, +                Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,, +                Color.GREEN);, +                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,, +                Color.GREEN);, +                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,, +                Color.GREEN);, +                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),, +                new BasicStroke(2.1f), Color.GREEN);, +                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),, +                new BasicStroke(2.1f), Color.GREEN);, +                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),, +                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),, +                new BasicStroke(2.1f), Color.GREEN);, +                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),, +                new BasicStroke(3.3f), Color.GREEN);, +                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),, +                new BasicStroke(3.3f), Color.GREEN);, +                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), false,, +            Color.WHITE, +                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),, +                Color.WHITE);, +        item1.setLabelPaint(Color.RED);, +        item2.setLabelPaint(Color.RED);, +        item1.setFillPaint(new GradientPaint(1.0f, 2.0f, Color.GREEN, 3.0f,]
[+++ b/pom-1.6.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<project xmlns="http://maven.apache.org/POM/4.0.0", +         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0, +                             http://maven.apache.org/maven-v4_0_0.xsd">, +, +    <modelVersion>4.0.0</modelVersion>, +, +    <name>JFreeChart</name>, +, +    <artifactId>jfreechart</artifactId>, +    <groupId>org.jfree</groupId>, +    <version>1.0.19</version>, +    <packaging>jar</packaging>, +, +    <!-- this is required to host it on Sonatype's OSSRH -->, +    <parent>, +        <groupId>org.sonatype.oss</groupId>, +        <artifactId>oss-parent</artifactId>, +        <version>9</version>, +    </parent>, +, +    <organization>, +        <name>JFree.org</name>, +        <url>http://www.jfree.org/</url>, +    </organization>, +    <inceptionYear>2001</inceptionYear>, +, +    <description>, +    JFreeChart is a class library, written in Java, for generating charts. , +    Utilising the Java2D APIs, it currently supports bar charts, pie charts, , +    line charts, XY-plots and time series plots., +    </description>, +, +    <url>http://www.jfree.org/jfreechart/</url>, +    <issueManagement>, +        <url>http://sourceforge.net/tracker/?group_id=15494</url>, +    </issueManagement>, +    <scm>, +        <connection>scm:svn:https://jfreechart.svn.sourceforge.net/svnroot/jfreechart jfreechart</connection>, +        <url>http://jfreechart.svn.sourceforge.net/viewvc/jfreechart/</url>, +    </scm>, +, +    <mailingLists>, +        <mailingList>, +            <name>JFreeChart Developer List</name>, +            <subscribe>, +        jfreechart-dev-request@lists.sourceforge.net?subject=subscribe, +            </subscribe>, +            <unsubscribe>, +        jfreechart-dev-request@lists.sourceforge.net?subject=unsubscribe, +            </unsubscribe>, +            <archive>, +        http://sourceforge.net/mailarchive/forum.php?forum=jfreechart-dev, +            </archive>, +        </mailingList>, +    </mailingLists>, +, +    <developers>, +    <!--, +    For an up to date list of developers and contributors have a look at, +    the project info implementations., +    -->, +    </developers>, +    <licenses>, +        <license>, +            <name>GNU Lesser General Public Licence</name>, +            <url>http://www.gnu.org/licenses/lgpl.txt</url>, +            <distribution>repo</distribution>, +        </license>, +    </licenses>, +, +    <dependencies>, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jcommon</artifactId>, +            <version>1.0.23</version>, +        </dependency>, +, +        <dependency>, +            <groupId>javax.servlet</groupId>, +            <artifactId>servlet-api</artifactId>, +            <version>2.5</version>, +            <scope>provided</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>junit</groupId>, +            <artifactId>junit</artifactId>, +            <version>4.11</version>, +            <scope>test</scope>, +        </dependency>, +, +    </dependencies>, +, +    <distributionManagement>, +      <snapshotRepository>, +        <id>ossrh</id>, +        <url>https://oss.sonatype.org/content/repositories/snapshots</url>]
[+++ b/tests/org/jfree/chart/labels/junit/IntervalCategoryItemLabelGeneratorTests.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Java is a trademark or registered trademark of Sun Microsystems, Inc., + * in the United States and other countries.], + *, + * ----------------------------------------, + * IntervalCategoryLabelGeneratorTests.java, + * ----------------------------------------, + * (C) Copyright 2003-2008, by Object Refinery Limited and Contributors., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 21-Mar-2003 : Version 1 (DG);, + * 13-Aug-2003 : Added cloning tests, and renamed class (DG);, + * 23-Apr-2008 : Added testPublicCloneble() (DG);, + *, + */, +, +package org.jfree.chart.labels.junit;, +, +import java.io.ByteArrayInputStream;, +import java.io.ByteArrayOutputStream;, +import java.io.ObjectInput;, +import java.io.ObjectInputStream;, +import java.io.ObjectOutput;, +import java.io.ObjectOutputStream;, +import java.text.DateFormat;, +import java.text.DecimalFormat;, +import java.text.SimpleDateFormat;, +, +import junit.framework.Test;, +import junit.framework.TestCase;, +import junit.framework.TestSuite;, +, +import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;, +import org.jfree.util.PublicCloneable;, +, +/**, + * Tests for the {@link IntervalCategoryItemLabelGenerator} class., + */, +public class IntervalCategoryItemLabelGeneratorTests extends TestCase {, +, +    /**, +     * Returns the tests as a test suite., +     *, +     * @return The test suite., +     */, +    public static Test suite() {, +        return new TestSuite(IntervalCategoryItemLabelGeneratorTests.class);, +    }, +, +    /**, +     * Constructs a new set of tests., +     *, +     * @param name  the name of the tests., +     */, +    public IntervalCategoryItemLabelGeneratorTests(String name) {, +        super(name);, +    }, +, +    /**, +     * Tests the equals() method., +     */, +    public void testEquals() {, +        IntervalCategoryItemLabelGenerator g1, +                = new IntervalCategoryItemLabelGenerator();, +        IntervalCategoryItemLabelGenerator g2, +                = new IntervalCategoryItemLabelGenerator();, +        assertTrue(g1.equals(g2));, +        assertTrue(g2.equals(g1));, +, +        g1 = new IntervalCategoryItemLabelGenerator("{3} - {4}",, +                new DecimalFormat("0.000"));, +        assertFalse(g1.equals(g2));, +        g2 = new IntervalCategoryItemLabelGenerator("{3} - {4}",]
[+++ b/pom.xml, +                      <exclude>org/jfree/chart/demo/**</exclude>]
[+++ b/README.txt, +    - Rune Fauske]
[+++ b/pom.xml, +    <artifactId>jfreechart</artifactId>, +        <url>https://github.com/jfree/jfreechart/issues</url>, +        <system>GitHub Issues</system>, +        <connection>scm:git:git:https://github.com/jfree/jfreechart.git</connection>, +        <url>https://github.com/jfree/jfreechart</url>, +        <testSourceDirectory>src/test/java</testSourceDirectory>, + <!--           <plugin>, +-->, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +                                <exclude>org/jfree/chart/fx/**</exclude>]
[+++ b/pom.xml, +    <version>1.0.19</version>]
[+++ b/src/main/java/org/jfree/chart/axis/CategoryAnchor.java, +import java.io.ObjectStreamException;, +import java.io.Serializable;, +, +public final class CategoryAnchor implements Serializable {, +, +    /** For serialization. */, +    private static final long serialVersionUID = -2604142742210173810L;, +    public static final CategoryAnchor START, +        = new CategoryAnchor("CategoryAnchor.START");, +    public static final CategoryAnchor MIDDLE, +        = new CategoryAnchor("CategoryAnchor.MIDDLE");, +    public static final CategoryAnchor END, +        = new CategoryAnchor("CategoryAnchor.END");, +, +    /** The name. */, +    private String name;, +, +    /**, +     * Private constructor., +     *, +     * @param name  the name., +     */, +    private CategoryAnchor(String name) {, +        this.name = name;, +    }, +, +    /**, +     * Returns a string representing the object., +     *, +     * @return The string., +     */, +    @Override, +    public String toString() {, +        return this.name;, +    }, +, +    /**, +     * Returns {@code true} if this object is equal to the specified, +     * object, and {@code false} otherwise., +     *, +     * @param obj  the other object., +     *, +     * @return A boolean., +     */, +    @Override, +    public boolean equals(Object obj) {, +        if (this == obj) {, +            return true;, +        }, +        if (!(obj instanceof CategoryAnchor)) {, +            return false;, +        }, +        CategoryAnchor position = (CategoryAnchor) obj;, +        if (!this.name.equals(position.toString())) {, +            return false;, +        }, +        return true;, +    }, +, +    /**, +     * Ensures that serialization returns the unique instances., +     *, +     * @return The object., +     *, +     * @throws ObjectStreamException if there is a problem., +     */, +    private Object readResolve() throws ObjectStreamException {, +        if (this.equals(CategoryAnchor.START)) {, +            return CategoryAnchor.START;, +        }, +        else if (this.equals(CategoryAnchor.MIDDLE)) {, +            return CategoryAnchor.MIDDLE;, +        }, +        else if (this.equals(CategoryAnchor.END)) {, +            return CategoryAnchor.END;, +        }, +        return null;, +    }, +, +++ b/src/main/java/org/jfree/chart/axis/CategoryAnchor.java, +import java.io.ObjectStreamException;, +import java.io.Serializable;, +, +public final class CategoryAnchor implements Serializable {, +, +    /** For serialization. */, +    private static final long serialVersionUID = -2604142742210173810L;, +    public static final CategoryAnchor START, +        = new CategoryAnchor("CategoryAnchor.START");, +    public static final CategoryAnchor MIDDLE, +        = new CategoryAnchor("CategoryAnchor.MIDDLE");, +    public static final CategoryAnchor END, +        = new CategoryAnchor("CategoryAnchor.END");, +, +    /** The name. */, +    private String name;, +, +    /**, +     * Private constructor.]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.16" />, +        <property name="swt.jar" value="/Users/dgilbert/swt-4/swt.jar"/>, +               source="1.6", +               target="1.6">, +               source="1.6", +               target="1.6">]
[+++ b/src/main/java/org/jfree/chart/renderer/AbstractRenderer.java, + * 25-Apr-2016 : Fix cloning test failuer (DG);, +                    = new HashMap<Integer, Font>(this.itemLabelFontMap);, +            // Font objects are immutable so just shallow copy the map, +            clone.legendTextFontMap = new HashMap<Integer, Font>(]
[+++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.16" />, +++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.16" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.16" />, +        <property name="itext.version" value="2.1.5" />, +            <exclude name="org/jfree/chart/encoders/SunPNGEncoderAdapter.java" unless="JDK1.4+"/>, +            <exclude name="org/jfree/chart/encoders/SunJPEGEncoderAdapter.java" unless="JDK1.4+"/>, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar"  failonerror="false" />, +++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.16" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.16" />, +        <property name="itext.version" value="2.1.5" />, +            <exclude name="org/jfree/chart/encoders/SunPNGEncoderAdapter.java" unless="JDK1.4+"/>, +            <exclude name="org/jfree/chart/encoders/SunJPEGEncoderAdapter.java" unless="JDK1.4+"/>, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar"  failonerror="false" />, +++ /dev/null, +++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.16" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.16" />, +        <property name="itext.version" value="2.1.5" />, +            <exclude name="org/jfree/chart/encoders/SunPNGEncoderAdapter.java" unless="JDK1.4+"/>, +            <exclude name="org/jfree/chart/encoders/SunJPEGEncoderAdapter.java" unless="JDK1.4+"/>, +        <copy file="${basedir}/lib/jfreechart-${jfreechart.version}-swt.jar" tofile="${basedir}/distribution/lib/${jfreechart.name}-${jfreechart.version}-swt.jar"  failonerror="false" />, +++ /dev/null, +++ b/lib/iText-2.1.5.jar]
[+++ b/src/main/java/org/jfree/chart/util/ObjectUtils.java]
[+++ b/README.txt, +*  JFREECHART: Version 1.0.15  *, +?? July 2012 (NOT YET RELEASED), +(C)opyright 2000-2012, by Object Refinery Limited and Contributors., +on the Java 2 Platform (JRE 1.4.2 or later) and uses the Java 2D API for , +******************************************************************************** , +* IMPORTANT NOTICE:                                                            *, +* The next release of JFreeChart (1.0.16) will require JRE/JDK 1.6.0 or later. * , +********************************************************************************, +, +(jfreechart-1.0.15-install.pdf) from the JFreeChart home, +(a)  JRE/JDK 1.4.2 or higher - JFreeChart requires the Java2D and Collections, +you can probably get it to compile and run with JDK 1.2 or 1.3).  If you are , +using JFreeChart to create applets, this means that you cannot rely on the JVM, +(c)  servlet.jar - classes in the org.jfree.chart.servlet, +(d)  JUnit - a unit testing framework (the junit.jar runtime file is, +In the distribution, we also include iText-2.1.5.jar.  This is only required by, +the JFreeChart demo applications, and is not a direct dependency for , +JFreeChart., +, +demo (using JDK 1.4.2 or later), use the following command:, +    java -jar jfreechart-1.0.15-demo.jar, +1.0.15 : (??-Jul-2012), +        - see the NEWS and ChangeLog files for details., +]
[+++ b/src/main/java/org/jfree/chart/ui/FontChooserPanel.java, +    public FontChooserPanel(Font font) {, +    public void setSelectedFont (Font font) {]
[+++ /dev/null]
[+++ b/ant/build-fx.xml, +            depends="compile,compile-experimental,zip-javadocs,zip,targz"]
[+++ b/src/main/java/org/jfree/chart/plot/Crosshair.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #setLabelAnchor(org.jfree.chart.ui.RectangleAnchor), +++ b/src/main/java/org/jfree/chart/plot/Crosshair.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #setLabelAnchor(org.jfree.chart.ui.RectangleAnchor), +++ b/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java, +     * @see #getDefaultSeriesVisible(), +     * @see #getDefaultOutlineStroke(), +++ b/src/main/java/org/jfree/chart/plot/Crosshair.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #setLabelAnchor(org.jfree.chart.ui.RectangleAnchor), +++ b/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java, +     * @see #getDefaultSeriesVisible(), +     * @see #getDefaultOutlineStroke(), +++ b/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java, +     * @see #getDefaultLinesVisible()]
[+++ b/ChangeLog, +2007-10-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/dial/SimpleDialFrame.java: , +	Renamed StandardDialFrame.java., +, +++ b/ChangeLog, +2007-10-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/dial/SimpleDialFrame.java: , +	Renamed StandardDialFrame.java., +, +++ b/source/org/jfree/chart/plot/dial/DialFrame.java, + * ({@link StandardDialFrame} and {@link ArcDialFrame})., +++ b/ChangeLog, +2007-10-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/dial/SimpleDialFrame.java: , +	Renamed StandardDialFrame.java., +, +++ b/source/org/jfree/chart/plot/dial/DialFrame.java, + * ({@link StandardDialFrame} and {@link ArcDialFrame})., +++ /dev/null, +++ b/ChangeLog, +2007-10-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/plot/dial/SimpleDialFrame.java: , +	Renamed StandardDialFrame.java., +, +++ b/source/org/jfree/chart/plot/dial/DialFrame.java, + * ({@link StandardDialFrame} and {@link ArcDialFrame})., +++ /dev/null, +++ b/source/org/jfree/chart/plot/dial/StandardDialFrame.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it , + * under the terms of the GNU Lesser General Public License as published by , + * the Free Software Foundation; either version 2.1 of the License, or , + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but , + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY , + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public , + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, , + * USA.  , + *, + * [Java is a trademark or registered trademark of Sun Microsystems, Inc. , + * in the United States and other countries.], + *, + * ----------------------, + * StandardDialFrame.java, + * ----------------------, + * (C) Copyright 2006, 2007, by Object Refinery Limited., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 03-Nov-2006 : Version 1 (DG);, + * 08-Mar-2007 : Fix in hashCode() (DG);, + * 29-Oct-2007 : Renamed StandardDialFrame (DG);, + * , + */, +, +package org.jfree.chart.plot.dial;, +, +import java.awt.BasicStroke;, +import java.awt.Color;, +import java.awt.Graphics2D;, +import java.awt.Paint;, +import java.awt.Shape;, +import java.awt.Stroke;, +import java.awt.geom.Area;, +import java.awt.geom.Ellipse2D;, +import java.awt.geom.Rectangle2D;, +import java.io.IOException;, +import java.io.ObjectInputStream;, +import java.io.ObjectOutputStream;, +import java.io.Serializable;, +, +import org.jfree.chart.HashUtilities;, +import org.jfree.io.SerialUtilities;, +import org.jfree.util.PaintUtilities;, +import org.jfree.util.PublicCloneable;, +, +/**, + * A simple circular frame for the {@link DialPlot} class., + */, +public class StandardDialFrame extends AbstractDialLayer implements DialFrame, ]
[+++ b/maven/README.txt, +pom-nb.xml - a pom file for use in NetBeans.  Defines the dependencies required, +             by the demo files, and includes the demo source files in the build., +             This build includes JavaFX support, and so requires JDK 1.8.0_40 , +             or later., +++ b/maven/README.txt, +pom-nb.xml - a pom file for use in NetBeans.  Defines the dependencies required, +             by the demo files, and includes the demo source files in the build., +             This build includes JavaFX support, and so requires JDK 1.8.0_40 , +             or later., +++ /dev/null, +++ b/maven/README.txt, +pom-nb.xml - a pom file for use in NetBeans.  Defines the dependencies required, +             by the demo files, and includes the demo source files in the build., +             This build includes JavaFX support, and so requires JDK 1.8.0_40 , +             or later., +++ /dev/null, +++ b/maven/pom-nb.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<project xmlns="http://maven.apache.org/POM/4.0.0", +         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0, +                             http://maven.apache.org/maven-v4_0_0.xsd">, +, +    <modelVersion>4.0.0</modelVersion>, +, +    <name>JFreeChart</name>, +, +    <artifactId>jfreechart</artifactId>, +    <groupId>org.jfree</groupId>, +    <version>1.5.0-SNAPSHOT</version>, +    <packaging>jar</packaging>, +, +    <!-- this is required to host it on Sonatype's OSSRH -->, +    <parent>, +        <groupId>org.sonatype.oss</groupId>, +        <artifactId>oss-parent</artifactId>, +        <version>9</version>, +    </parent>, +, +    <organization>, +        <name>JFree.org</name>, +        <url>http://www.jfree.org/</url>, +    </organization>, +    <inceptionYear>2001</inceptionYear>, +, +    <description>, +        JFreeChart is a class library, written in Java, for generating charts. , +        Utilising the Java2D APIs, it currently supports bar charts, pie charts, , +        line charts, XY-plots and time series plots., +    </description>, +, +    <url>http://www.jfree.org/jfreechart/</url>, +    <issueManagement>, +        <url>https://github.com/jfree/jfreechart/issues</url>, +        <system>GitHub Issues</system>, +    </issueManagement>, +    <scm>, +        <connection>scm:git:git:https://github.com/jfree/jfreechart.git</connection>, +        <url>https://github.com/jfree/jfreechart</url>, +    </scm>, +, +    <licenses>, +        <license>, +            <name>GNU Lesser General Public Licence</name>, +            <url>http://www.gnu.org/licenses/lgpl.txt</url>, +            <distribution>repo</distribution>, +        </license>, +    </licenses>, +, +    <dependencies>, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jcommon</artifactId>, +            <version>1.0.23</version>, +        </dependency>, +, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +        <!-- JFreeSVG enables SVG export -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jfreesvg</artifactId>, +            <version>3.0</version>, +        </dependency>, +        , +        <!-- OrsonPDF enables PDF export -->, +        <dependency>, +            <groupId>com.orsonpdf</groupId>, +            <artifactId>orsonpdf</artifactId>, +            <version>1.7</version>, +        </dependency>, +, +        <dependency>, +            <groupId>javax.servlet</groupId>]
[+++ b/src/main/java/org/jfree/chart/renderer/AbstractRenderer.java, + * 25-Apr-2016 : Fix cloning test failure (DG);, +            clone.positiveItemLabelPositionMap , +                    = new HashMap<Integer, ItemLabelPosition>(, +            clone.negativeItemLabelPositionMap , +                    = new HashMap<Integer, ItemLabelPosition>(]
[+++ b/NEWS, +Added support for non-visible series in XYBarRenderer, minor gridlines in , +PolarPlot, legend item ordering, chart editor enhancements; updates to , +StandardDialScale, localisation files for Japanese.  , +, +This release also fixes a minor security flaw in the DisplayChart class, , +detected and reported by OSI Security:, +3500621 : LegendTitle order attribute (by Simon Kaczor);, +3204823 : PaintAlpha for 3D effects (by Dave Law);, +3521736 : DeviationRenderer optimisation (by Milan Ramaiya); , +3484408 : Maven fixes (Martin Hoeller);, +3484403 : DateAxis endless loop (by Martin Hoeller);, +3425881 : XYDifferenceRenderer fix (by Patrick Schlott/Christoph Schroeder);, +++ b/NEWS, +Added support for non-visible series in XYBarRenderer, minor gridlines in , +PolarPlot, legend item ordering, chart editor enhancements; updates to , +StandardDialScale, localisation files for Japanese.  , +, +This release also fixes a minor security flaw in the DisplayChart class, , +detected and reported by OSI Security:, +3500621 : LegendTitle order attribute (by Simon Kaczor);, +3204823 : PaintAlpha for 3D effects (by Dave Law);, +3521736 : DeviationRenderer optimisation (by Milan Ramaiya); , +3484408 : Maven fixes (Martin Hoeller);, +3484403 : DateAxis endless loop (by Martin Hoeller);, +3425881 : XYDifferenceRenderer fix (by Patrick Schlott/Christoph Schroeder);, +++ b/README.txt, +    - Petr Kopac, +    - Dave Law;, +    - Patrick Schlott, +    - Christoph Schroeder]
[+++ b/ant/build-fx.xml, +++ b/ant/build-fx.xml, +++ b/ant/build.xml]
[+++ b/ChangeLog, +2012-02-13  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3425881/Patch 3450234 by Patrick Schlott/Christoph Schroeder,, +    reviewed by Richard West, +    * org/jfree/chart/rendered/xy/XYDifferenceRenderer, +    (drawItemPass0): Fix problems with identical x-values., +, +++ b/ChangeLog, +2012-02-13  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3425881/Patch 3450234 by Patrick Schlott/Christoph Schroeder,, +    reviewed by Richard West, +    * org/jfree/chart/rendered/xy/XYDifferenceRenderer, +    (drawItemPass0): Fix problems with identical x-values., +, +++ b/README.txt, +    - Patrick Schlott, +    - Christoph Schroeder, +++ b/ChangeLog, +2012-02-13  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3425881/Patch 3450234 by Patrick Schlott/Christoph Schroeder,, +    reviewed by Richard West, +    * org/jfree/chart/rendered/xy/XYDifferenceRenderer, +    (drawItemPass0): Fix problems with identical x-values., +, +++ b/README.txt, +    - Patrick Schlott, +    - Christoph Schroeder, +++ b/source/org/jfree/chart/JFreeChart.java, +                new Contributor("Patrick Schlott", "-"),, +                new Contributor("Christoph Schroeder", "-"), +++ b/ChangeLog, +2012-02-13  Martin Hoeller <martin.hoeller@xss.co.at>, +, +    Bug 3425881/Patch 3450234 by Patrick Schlott/Christoph Schroeder,, +    reviewed by Richard West, +    * org/jfree/chart/rendered/xy/XYDifferenceRenderer, +    (drawItemPass0): Fix problems with identical x-values., +, +++ b/README.txt, +    - Patrick Schlott, +    - Christoph Schroeder, +++ b/source/org/jfree/chart/JFreeChart.java, +                new Contributor("Patrick Schlott", "-"),, +                new Contributor("Christoph Schroeder", "-"), +++ b/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java, + *                   Patrick Schlott, + *                   Christoph Schroeder, + *                   Martin Hoeller, + * 13-Feb-2012 : Applied patch 3450234 for bug 3425881 by Patrick Schlott and, + *               Christoph Schroeder (MH);, +                }, +                // test if both grahphs have a vertical rise at the same x-value, +                boolean b_vertical = (l_x1 == l_x2) && (l_x3 == l_x4) && (l_x2 == l_x4);, +                , +                if (((0 < l_slopeA) && (l_slopeA <= 1) && (0 < l_slopeB), +                        && (l_slopeB <= 1))|| b_vertical) {, +                	, +                    double l_xi;, +                    double l_yi;, +                    if(b_vertical){, +                        b_colinear = false;, +                        l_xi = l_x2;, +                        l_yi = l_x4;, +                    }, +                    else{, +                        l_xi = l_x1 + (l_slopeA * (l_x2 - l_x1));, +                        l_yi = l_y1 + (l_slopeA * (l_y2 - l_y1));                    		, +                    }]
[+++ b/src/main/java/org/jfree/chart/axis/DateTickUnit.java, +     * The {@code rollUnitType} and {@code rollCount} are intended to roll the date forward when it falls on a "hidden" part of the DateAxis. For example, if the tick size is 1 week (7 days), but Saturday and Sunday are hidden, if the ticks happen to fall on Saturday, none of them will be visible. A sensible {@code rollUnitType}/{@code rollCount} would be 1 day, so that the date would roll forward to the following Monday, which is visible., +     *]
[+++ b/pom.xml, +                <artifactId>maven-jar-plugin</artifactId>, +		<version>3.1.0</version>, +                <configuration>, +                    <archive>, +                        <manifestEntries>, +                            <Automatic-Module-Name>org.jfree.jfreechart</Automatic-Module-Name>, +                        </manifestEntries>, +                    </archive>, +                </configuration>, +            </plugin>, +, +            <plugin>, +                <groupId>org.apache.maven.plugins</groupId>]
[+++ b/ant/build.xml, +        <property name="junit.jar" value="${basedir}/lib/junit-4.11.jar"/>, +        <property name="hamcrest.jar" value="${basedir}/lib/hamcrest-core-1.3.jar"/>, +        <property name="src.version" value="1.6"/>, +        <property name="target.version" value="1.6"/>, +               source="1.6", +               target="1.6", +                <pathelement location="${hamcrest.jar}"/>]
[+++ b/src/main/java/org/jfree/chart/plot/Zoomable.java, + * (C) Copyright 2004-2016, by Object Refinery Limited and Contributors., +     * Returns {@code true} if the plot's domain is zoomable, and {@code false}, +     * otherwise., +     * Returns {@code true} if the plot's range is zoomable, and {@code false} , +     * otherwise., +     * @return The orientation (never {@code null})., +     * The {@code source} point can be used in some cases to identify a, +     * The {@code source} point can be used in some cases to identify a, +     * Zooms in on the domain axes.  The {@code source} point can be used, +     * The {@code source} point can be used in some cases to identify a, +     * The {@code source} point can be used in some cases to identify a, +     * Zooms in on the range axes.  The {@code source} point can be used]
[+++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.14" />, +        <property name="itext.version" value="2.1.3" />]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.18" />, +        <property name="orsoncharts.version" value="1.4-eval-nofx" />, +            <exclude name="org/jfree/chart/xml/**"/>, +                <exclude name="org/jfree/chart/fx/**"/>]
[+++ b/src/main/java/org/jfree/chart/date/MonthConstants.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +++ b/src/main/java/org/jfree/chart/date/MonthConstants.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +++ b/src/main/java/org/jfree/chart/date/package-info.java, +/**, + * Date-related classes formerly in the JCommon class library., + */, +package org.jfree.chart.date;]
[+++ b/src/main/java/org/jfree/chart/ChartFactory.java, +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +++ b/src/main/java/org/jfree/chart/ChartUtils.java, +import org.jfree.chart.imagemap.ImageMapUtils;, + * @see ImageMapUtils, +        ImageMapUtils.writeImageMap(writer, name, info,, +        writer.println(ImageMapUtils.getImageMap(name, info,, +        return ImageMapUtils.getImageMap(name, info,, +        return ImageMapUtils.getImageMap(name, info,, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +++ b/src/main/java/org/jfree/chart/ChartUtils.java, +import org.jfree.chart.imagemap.ImageMapUtils;, + * @see ImageMapUtils, +        ImageMapUtils.writeImageMap(writer, name, info,, +        writer.println(ImageMapUtils.getImageMap(name, info,, +        return ImageMapUtils.getImageMap(name, info,, +        return ImageMapUtils.getImageMap(name, info,, +++ b/src/main/java/org/jfree/chart/imagemap/DynamicDriveToolTipTagFragmentGenerator.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Richard Atkinson and Contributors., +            + ImageMapUtils.javascriptEscape(this.title) + "','", +            + ImageMapUtils.javascriptEscape(toolTipText) + "'],Style[", +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +++ b/src/main/java/org/jfree/chart/ChartUtils.java, +import org.jfree.chart.imagemap.ImageMapUtils;, + * @see ImageMapUtils, +        ImageMapUtils.writeImageMap(writer, name, info,, +        writer.println(ImageMapUtils.getImageMap(name, info,, +        return ImageMapUtils.getImageMap(name, info,, +        return ImageMapUtils.getImageMap(name, info,, +++ b/src/main/java/org/jfree/chart/imagemap/DynamicDriveToolTipTagFragmentGenerator.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Richard Atkinson and Contributors., +            + ImageMapUtils.javascriptEscape(this.title) + "','", +            + ImageMapUtils.javascriptEscape(toolTipText) + "'],Style[", +++ /dev/null, +++ b/src/main/java/org/jfree/chart/ChartFactory.java, +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +     * @see ChartUtils#applyCurrentTheme(JFreeChart), +++ b/src/main/java/org/jfree/chart/ChartUtils.java, +import org.jfree.chart.imagemap.ImageMapUtils;, + * @see ImageMapUtils, +        ImageMapUtils.writeImageMap(writer, name, info,, +        writer.println(ImageMapUtils.getImageMap(name, info,, +        return ImageMapUtils.getImageMap(name, info,, +        return ImageMapUtils.getImageMap(name, info,, +++ b/src/main/java/org/jfree/chart/imagemap/DynamicDriveToolTipTagFragmentGenerator.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Richard Atkinson and Contributors., +            + ImageMapUtils.javascriptEscape(this.title) + "','", +            + ImageMapUtils.javascriptEscape(toolTipText) + "'],Style[", +++ /dev/null, +++ b/src/main/java/org/jfree/chart/imagemap/ImageMapUtils.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ------------------, + * ImageMapUtils.java, + * ------------------, + * (C) Copyright 2004-2017, by Richard Atkinson and Contributors., + *, + * Original Author:  Richard Atkinson;, + * Contributor(s):   David Gilbert (for Object Refinery Limited);, + *                   Fawad Halim - bug 2690293;, + *, + * Changes, + * -------, + * 02-Aug-2004 : Initial version (RA);, + * 13-Jan-2005 : Renamed ImageMapUtilities (DG);]
[+++ b/tests/org/jfree/chart/axis/SegmentedTimelineAdditionalTest.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ---------------------------, + * SegmentedTimelineTest2.java, + * ---------------------------, + * (C) Copyright 2004-2013, by Object Refinery Limited and Contributors., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 02-Aug-2004 : Added standard header (DG);, + * 02-Feb-2007 : Removed author tags all over JFreeChart sources (DG);, + *, + */, +, +package org.jfree.chart.axis;, +, +import static org.junit.Assert.assertTrue;, +, +import java.util.Calendar;, +import java.util.Date;, +import java.util.Locale;, +import java.util.TimeZone;, +import org.junit.Test;, +, +/**, + * Some tests for the {@link SegmentedTimeline} class., + */, +public class SegmentedTimelineAdditionalTest {, +, +    /**, +     * Constructor, +     */, +    public SegmentedTimelineAdditionalTest() {, +        super();, +    }, +, +    /**, +     * Test 1 checks 9am Friday 26 March 2004 converts to a timeline value and, +     * back again correctly.  This is prior to Daylight Saving., +     */, +    @Test, +    public void test1() {, +        TimeZone savedZone = TimeZone.getDefault();, +        TimeZone.setDefault(TimeZone.getTimeZone("Europe/London"));, +        Locale savedLocale = Locale.getDefault();, +        Locale.setDefault(Locale.UK);, +        Calendar cal = Calendar.getInstance(Locale.UK);, +        cal.set(Calendar.YEAR, 2004);, +        cal.set(Calendar.MONTH, Calendar.MARCH);, +        cal.set(Calendar.DAY_OF_MONTH, 26);, +        cal.set(Calendar.HOUR_OF_DAY, 9);, +        cal.set(Calendar.MINUTE, 0);, +        cal.set(Calendar.SECOND, 0);, +        cal.set(Calendar.MILLISECOND, 0);, +        Date date = cal.getTime();, +, +        SegmentedTimeline timeline = getTimeline();, +        long value = timeline.toTimelineValue(date);, +        long ms = timeline.toMillisecond(value);, +        Calendar cal2 = Calendar.getInstance(Locale.UK);, +        cal2.setTime(new Date(ms));, +        Date reverted = cal2.getTime();, +        assertTrue("test1", value == (900000 * 34), +                && date.getTime() == reverted.getTime());, +        TimeZone.setDefault(savedZone);, +        Locale.setDefault(savedLocale);, +    }, +, +    /**, +     * Test 2 checks 9.15am Friday 26 March 2004 converts to a timeline value, +     * and back again correctly.  This is prior to Daylight Saving., +     */]
[+++ b/src/main/java/org/jfree/data/time/Day.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Day(Date, TimeZone, Locale), +++ b/src/main/java/org/jfree/data/time/Day.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Day(Date, TimeZone, Locale), +++ b/src/main/java/org/jfree/data/time/Month.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Month(Date, TimeZone, Locale), +++ b/src/main/java/org/jfree/data/time/Day.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Day(Date, TimeZone, Locale), +++ b/src/main/java/org/jfree/data/time/Month.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Month(Date, TimeZone, Locale), +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @param locale  the locale.]
[+++ b/ant/build-fx.xml, +            <fileset dir="${basedir}/src/main/javadoc/images">, +++ b/ant/build-fx.xml, +            <fileset dir="${basedir}/src/main/javadoc/images">, +++ b/ant/build.xml, +            <fileset dir="${basedir}/src/main/javadoc/images">]
[+++ b/src/main/java/org/jfree/chart/util/ExportUtils.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2014, 2017 by Object Refinery Limited and Contributors., +     * http://www.object-refinery.com/orsonpdf/, +            // pdfDocumentClass will be null so the function will return false]
[+++ b/pom.xml, +                        <artifactId>java16</artifactId>]
[+++ b/maven/README.txt, +pom-dev.xml - a pom file for use in Maven-enabled IDEs such as NetBeans.  , +              Defines the dependencies required by the demo files, and includes , +              the demo source files in the build.  This build includes JavaFX , +              support, and so requires JDK 1.8.0_40 or later., +++ b/maven/README.txt, +pom-dev.xml - a pom file for use in Maven-enabled IDEs such as NetBeans.  , +              Defines the dependencies required by the demo files, and includes , +              the demo source files in the build.  This build includes JavaFX , +              support, and so requires JDK 1.8.0_40 or later., +++ b/maven/pom-dev.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<project xmlns="http://maven.apache.org/POM/4.0.0", +         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0, +                             http://maven.apache.org/maven-v4_0_0.xsd">, +, +    <modelVersion>4.0.0</modelVersion>, +, +    <name>JFreeChart</name>, +, +    <artifactId>jfreechart</artifactId>, +    <groupId>org.jfree</groupId>, +    <version>1.5.0-SNAPSHOT</version>, +    <packaging>jar</packaging>, +, +    <!-- this is required to host it on Sonatype's OSSRH -->, +    <parent>, +        <groupId>org.sonatype.oss</groupId>, +        <artifactId>oss-parent</artifactId>, +        <version>9</version>, +    </parent>, +, +    <organization>, +        <name>JFree.org</name>, +        <url>http://www.jfree.org/</url>, +    </organization>, +    <inceptionYear>2001</inceptionYear>, +, +    <description>, +        JFreeChart is a class library, written in Java, for generating charts. , +        Utilising the Java2D APIs, it currently supports bar charts, pie charts, , +        line charts, XY-plots and time series plots., +    </description>, +, +    <url>http://www.jfree.org/jfreechart/</url>, +    <issueManagement>, +        <url>https://github.com/jfree/jfreechart/issues</url>, +        <system>GitHub Issues</system>, +    </issueManagement>, +    <scm>, +        <connection>scm:git:git:https://github.com/jfree/jfreechart.git</connection>, +        <url>https://github.com/jfree/jfreechart</url>, +    </scm>, +, +    <licenses>, +        <license>, +            <name>GNU Lesser General Public Licence</name>, +            <url>http://www.gnu.org/licenses/lgpl.txt</url>, +            <distribution>repo</distribution>, +        </license>, +    </licenses>, +, +    <dependencies>, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jcommon</artifactId>, +            <version>1.0.23</version>, +        </dependency>, +, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.3</version>, +        </dependency>, +, +        <!-- JFreeSVG enables SVG export -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jfreesvg</artifactId>, +            <version>3.0</version>, +        </dependency>, +        , +        <!-- OrsonPDF enables PDF export -->, +        <dependency>, +            <groupId>com.orsonpdf</groupId>, +            <artifactId>orsonpdf</artifactId>, +            <version>1.7</version>, +        </dependency>, +, +        <dependency>, +            <groupId>javax.servlet</groupId>, +            <artifactId>servlet-api</artifactId>, +            <version>2.5</version>, +            <scope>provided</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>junit</groupId>]
[+++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Heaps of Flavour Pty Ltd and Contributors., +    public static final Paint  DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint  DEFAULT_LABEL_OUTLINE_PAINT = Color.BLACK;, +    public static final Paint  DEFAULT_LABEL_SHADOW_PAINT = Color.LIGHT_GRAY;, +        this.axisLinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Heaps of Flavour Pty Ltd and Contributors., +    public static final Paint  DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint  DEFAULT_LABEL_OUTLINE_PAINT = Color.BLACK;, +    public static final Paint  DEFAULT_LABEL_SHADOW_PAINT = Color.LIGHT_GRAY;, +        this.axisLinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/dial/DialPointer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +            this.paint = Color.RED;, +            this.fillPaint = Color.GRAY;, +            this.outlinePaint = Color.BLACK;, +            g2.setPaint(Color.BLUE);, +++ b/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2005-2017, by Heaps of Flavour Pty Ltd and Contributors., +    public static final Paint  DEFAULT_LABEL_PAINT = Color.BLACK;, +    public static final Paint  DEFAULT_LABEL_OUTLINE_PAINT = Color.BLACK;, +    public static final Paint  DEFAULT_LABEL_SHADOW_PAINT = Color.LIGHT_GRAY;, +        this.axisLinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/dial/DialPointer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +            this.paint = Color.RED;, +            this.fillPaint = Color.GRAY;, +            this.outlinePaint = Color.BLACK;, +            g2.setPaint(Color.BLUE);, +++ b/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this.paint = Color.BLACK;]
[+++ b/ChangeLog, +2016-02-19  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/fx/ChartCanvas.java, +    (ChartCanvas): Change default font smoothing., +, +2016-02-15  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/fx/ChartViewer.java, +    (getCanvas): New method,, +    (setCanvas): Likewise,, +    * org/jfree/chart/fx/ChartViewerSkin.java, +    (createNode): Set reference to canvas., +, +2016-01-25  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/fx/FXGraphics2D.java: Deleted,, +    * org/jfree/chart/fx/FXGraphicsConfiguration.java: Likewise,, +    * org/jfree/chart/fx/FXGraphicsDevice.java: Likewise., +, +2015-11-23  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/util/ParamChecks.java, +    (requireInRange): New method,, +    * org/jfree/data/time/Second.java, +    (Second(int, Minute)) : Check argument is in range., +, +2015-09-22  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/data/general/DatasetUtilities.java, +    (iterateToFindDomainBounds): Check for x-value outside interval,, +    (iterateToFindRangeBounds): Check for y-value outside interval., +, +2015-09-11  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/fx/FXGraphics2D.java, +    Updated to match latest code on GitHub,, +    * org/jfree/chart/fx/FXGraphicsConfiguration.java, +    New file,, +    * org/jfree/chart/fx/FXGraphicsDevice.java, +    New file., +, +2015-09-10  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/labels/IntervalXYToolTipGenerator.java, +    New file., +, +2015-09-10  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/renderer/xy/YIntervalRenderer.java, +    (drawItem): Check item visibility and enlarge entity bounds., +, +2015-09-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/renderer/xy/XYShapeRenderer.java, +    (drawItem): Update crosshair state., +, +2015-09-06  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/data/time/TimeSeries.java, +    (findValueRange): Check for Double.NaN., +, +2014-08-31  David Gilbert  <david.gilbert@object-refinery.com>, +, +    (Bug 986 fix from Vladimir Shirokov):, +    * org/jfree/chart/plot/CombinedDomainXYPlot.java, +    (datasetChanged): New method override., +, +2014-08-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +    (Patch from Simon Legner attached to bug 1129), +    * org/jfree/chart/ChartPanel.java, +    (actionPerformed): Localise error messages,, +    (saveAsSVG): Likewise,, +    (saveAsPDF): Likewise., +, +2014-08-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/renderer/BarRenderer3D.java, +    (drawItem): Add element hinting,, +    * org/jfree/chart/renderer/IntervalBarRenderer.java, +    (drawInterval): Add element hinting,, +    * org/jfree/chart/renderer/LayeredBarRenderer.java, +    (drawHorizontalItem): Add element hinting,, +    (drawVerticalItem): Likewise,, +    * org/jfree/chart/renderer/LevelRenderer.java, +    (drawItem): Add element hinting., +, +2014-08-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/renderer/AbstractRenderer.java, +    (beginElementGroup): New method,, +    (endElementGroup): Likewise,, +    * org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java, +    (beginElementGroup): Call superclass,, +    (endElementGroup): Moved to superclass,, +    * org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, +    (beginElementGroup): New method,, +    * org/jfree/chart/renderer/xy/XYBarRenderer.java, +    (drawItem): Add element hinting,]
[+++ b/pom.xml, +    <artifactId>jfreechart-fx</artifactId>, +    <version>1.0.20-SNAPSHOT</version>, +            <subscribe>jfreechart-dev-request@lists.sourceforge.net?subject=subscribe</subscribe>, +            <unsubscribe>jfreechart-dev-request@lists.sourceforge.net?subject=unsubscribe</unsubscribe>, +            <archive>http://sourceforge.net/mailarchive/forum.php?forum=jfreechart-dev</archive>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.2.1</version>, +        </dependency>, +, +        <dependency>, +        <project.source.level>1.8</project.source.level>, +        <project.target.level>1.8</project.target.level>, +                        <!--        <exclude>org/jfree/chart/fx/**</exclude> -->]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.11" />, +        <property name="jcommon.version" value="1.0.14" />]
[+++ b/ChangeLog, +2014-08-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +    (Patch from Simon Legner attached to bug 1129), +    * org/jfree/chart/ChartPanel.java, +    (actionPerformed): Localise error messages,, +    (saveAsSVG): Likewise,, +    (saveAsPDF): Likewise., +, +2014-08-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/renderer/BarRenderer3D.java, +    (drawItem): Add element hinting,, +    * org/jfree/chart/renderer/IntervalBarRenderer.java, +    (drawInterval): Add element hinting,, +    * org/jfree/chart/renderer/LayeredBarRenderer.java, +    (drawHorizontalItem): Add element hinting,, +    (drawVerticalItem): Likewise,, +    * org/jfree/chart/renderer/LevelRenderer.java, +    (drawItem): Add element hinting., +, +++ b/ChangeLog, +2014-08-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +    (Patch from Simon Legner attached to bug 1129), +    * org/jfree/chart/ChartPanel.java, +    (actionPerformed): Localise error messages,, +    (saveAsSVG): Likewise,, +    (saveAsPDF): Likewise., +, +2014-08-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/renderer/BarRenderer3D.java, +    (drawItem): Add element hinting,, +    * org/jfree/chart/renderer/IntervalBarRenderer.java, +    (drawInterval): Add element hinting,, +    * org/jfree/chart/renderer/LayeredBarRenderer.java, +    (drawHorizontalItem): Add element hinting,, +    (drawVerticalItem): Likewise,, +    * org/jfree/chart/renderer/LevelRenderer.java, +    (drawItem): Add element hinting., +, +++ b/source/org/jfree/chart/ChartPanel.java, + *                   Simon Legner - patch from bug 1129;, + * 29-Aug-2014 : Localisation updates from patch attached to bug 1129 (SL);, +                        localizationResources.getString("Save_as_PNG"),, +                        JOptionPane.WARNING_MESSAGE);, +                        localizationResources.getString("Save_as_SVG"),, +                        JOptionPane.WARNING_MESSAGE);, +                            fileExists,, +                            localizationResources.getString("Save_as_SVG"),, +                            fileExists,, +                            localizationResources.getString("Save_as_PDF"),, +++ b/ChangeLog, +2014-08-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +    (Patch from Simon Legner attached to bug 1129), +    * org/jfree/chart/ChartPanel.java, +    (actionPerformed): Localise error messages,, +    (saveAsSVG): Likewise,, +    (saveAsPDF): Likewise., +, +2014-08-24  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/renderer/BarRenderer3D.java, +    (drawItem): Add element hinting,, +    * org/jfree/chart/renderer/IntervalBarRenderer.java, +    (drawInterval): Add element hinting,, +    * org/jfree/chart/renderer/LayeredBarRenderer.java, +    (drawHorizontalItem): Add element hinting,, +    (drawVerticalItem): Likewise,, +    * org/jfree/chart/renderer/LevelRenderer.java, +    (drawItem): Add element hinting., +, +++ b/source/org/jfree/chart/ChartPanel.java, + *                   Simon Legner - patch from bug 1129;, + * 29-Aug-2014 : Localisation updates from patch attached to bug 1129 (SL);, +                        localizationResources.getString("Save_as_PNG"),, +                        JOptionPane.WARNING_MESSAGE);, +                        localizationResources.getString("Save_as_SVG"),, +                        JOptionPane.WARNING_MESSAGE);, +                            fileExists,, +                            localizationResources.getString("Save_as_SVG"),, +                            fileExists,, +                            localizationResources.getString("Save_as_PDF"),, +++ b/source/org/jfree/chart/LocalizationBundle.properties, +# 29-Aug-2014 : Applied patch from Simon04 for bug 1129;, +Save_as_PDF=Save as PDF, +Save_as_PNG=Save as PNG, +Save_as_SVG=Save as SVG, +++ b/ChangeLog, +2014-08-29  David Gilbert  <david.gilbert@object-refinery.com>, +, +    (Patch from Simon Legner attached to bug 1129), +    * org/jfree/chart/ChartPanel.java, +    (actionPerformed): Localise error messages,, +    (saveAsSVG): Likewise,, +    (saveAsPDF): Likewise., +, +2014-08-24  David Gilbert  <david.gilbert@object-refinery.com>]
[+++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.LIGHT_GRAY;, +    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.BLUE;, +        this.domainMinorGridlinePaint = Color.WHITE;, +        this.domainZeroBaselinePaint = Color.BLACK;, +        this.rangeMinorGridlinePaint = Color.WHITE;, +        this.rangeZeroBaselinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.LIGHT_GRAY;, +    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.BLUE;, +        this.domainMinorGridlinePaint = Color.WHITE;, +        this.domainZeroBaselinePaint = Color.BLACK;, +        this.rangeMinorGridlinePaint = Color.WHITE;, +        this.rangeZeroBaselinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/dial/DialBackground.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this(Color.WHITE);, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, +    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.LIGHT_GRAY;, +    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.BLUE;, +        this.domainMinorGridlinePaint = Color.WHITE;, +        this.domainZeroBaselinePaint = Color.BLACK;, +        this.rangeMinorGridlinePaint = Color.WHITE;, +        this.rangeZeroBaselinePaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/dial/DialBackground.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this(Color.WHITE);, +++ b/src/main/java/org/jfree/chart/plot/dial/DialCap.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this.fillPaint = Color.WHITE;, +        this.outlinePaint = Color.BLACK;]
[+++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.13" />, +        <property name="swt.jar" value="${basedir}/libswt/swt-M20070212-1330-win32-win32-x86/swt.jar"/>]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +                <version>3.7.0</version>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +                <version>3.7.0</version>, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +                <version>3.7.0</version>, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +                <version>3.7.0</version>, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +                <version>3.7.0</version>, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +++ b/src/test/java/org/jfree/chart/util/LogFormatTest.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +                <version>3.7.0</version>, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +++ b/src/test/java/org/jfree/chart/util/LogFormatTest.java, +++ b/src/test/java/org/jfree/chart/util/RelativeDateFormatTest.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +                <version>3.7.0</version>, +++ b/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java, +++ b/src/test/java/org/jfree/chart/block/BorderArrangementTest.java, +++ b/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java, +++ b/src/test/java/org/jfree/chart/util/LogFormatTest.java, +++ b/src/test/java/org/jfree/chart/util/RelativeDateFormatTest.java, +++ b/src/test/java/org/jfree/data/category/DefaultCategoryDatasetTest.java, +++ /dev/null, +++ /dev/null]
[+++ b/src/main/java/org/jfree/chart/util/CloneUtils.java, + * (C) Copyright 2000-2019, by Object Refinery Limited and Contributors., + * (C) Copyright 2014-2019, by Object Refinery Limited., +import java.lang.reflect.InvocationTargetException;, +import java.lang.reflect.Method;, +import java.lang.reflect.Modifier;, +     * Returns a clone of the specified object, if it can be cloned, otherwise, +     * throws a {@code CloneNotSupportedException}.  If the object is , +     * {@code null} this method returns {@code null}., +     *, +     * @param object the object to clone ({@code null} permitted)., +     * , +     * @return A clone of the specified object, or {@code null}., +     * , +     * @throws CloneNotSupportedException if the object cannot be cloned., +     */, +    public static Object clone(Object object), +        throws CloneNotSupportedException {, +        if (object == null) {, +            return null;, +        }, +        if (object instanceof PublicCloneable) {, +            PublicCloneable pc = (PublicCloneable) object;, +            return pc.clone();, +        } else {, +            try {, +                Method method = object.getClass().getMethod("clone",, +                        (Class[]) null);, +                if (Modifier.isPublic(method.getModifiers())) {, +                    return method.invoke(object, (Object[]) null);, +                }, +            } catch (NoSuchMethodException e) {, +                throw new CloneNotSupportedException("Object without clone() method is impossible.");, +            } catch (IllegalAccessException e) {, +                throw new CloneNotSupportedException("Object.clone(): unable to call method.");, +            } catch (InvocationTargetException e) {, +                throw new CloneNotSupportedException("Object without clone() method is impossible.");, +            }, +        }, +        throw new CloneNotSupportedException("Failed to clone.");, +    }, +, +    /**, +                result.add(CloneUtils.clone(obj));]
[+++ b/NEWS, +4-July-2013, +PolarPlot, legend item ordering, chart editor enhancements, updates to , +StandardDialScale, localisation files for Japanese and refactored parameter, +checks.  , +Also fixed a rendering issue for polar charts using an inverted axis., +, +++ b/NEWS, +4-July-2013, +PolarPlot, legend item ordering, chart editor enhancements, updates to , +StandardDialScale, localisation files for Japanese and refactored parameter, +checks.  , +Also fixed a rendering issue for polar charts using an inverted axis., +, +++ b/README.txt, +4 July 2013, +(C)opyright 2000-2013, by Object Refinery Limited and Contributors., +1.0.15 : (4-Jul-2013)]
[+++ b/pom.xml, +    <groupId>org.jfree</groupId>, +    <packaging>jar</packaging>, +, +    <!-- this is required to host it on Sonatype's OSSRH -->, +    <parent>, +        <groupId>org.sonatype.oss</groupId>, +        <artifactId>oss-parent</artifactId>, +        <version>7</version>, +    </parent>, +            <groupId>org.jfree</groupId>, +            <version>1.0.17</version>]
[+++ b/src/main/java/org/jfree/data/xy/XYSeries.java, + * (C) Copyright 2000-2019, by Object Refinery Limited and Contributors., + * (C) Copyright 2001-2019, Object Refinery Limited and Contributors., +     * Returns a copy of the data item with the specified index.]
[+++ b/ChangeLog, +2009-03-18  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java, +    (mouseWheelHandler): New field,, +    (isMouseWheelEnabled): New method,, +    (setMouseWheelEnabled): Likewise,, +    * source/org/jfree/chart/MouseWheelHandler.java: New class,, +    * source/org/jfree/chart/axis/ValueAxis.java, +    (resizeRange2): New method,, +    * source/org/jfree/chart/demo/BarChartDemo1.java, +    (BarChartDemo1): Enable mouse wheel,, +    * source/org/jfree/chart/demo/TimeSeriesChartDemo1.java, +    (createDemoPanel): Enable mouse wheel,, +    * source/org/jfree/chart/plot/CategoryPlot.java, +    (zoomRangeAxes): Modify anchored zoom behaviour,, +    * source/org/jfree/chart/plot/XYPlot.java, +    (zoomDomainAxes): Likewise,, +    (zoomRangeAxes): Likewise., +, +++ b/ChangeLog, +2009-03-18  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java, +    (mouseWheelHandler): New field,, +    (isMouseWheelEnabled): New method,, +    (setMouseWheelEnabled): Likewise,, +    * source/org/jfree/chart/MouseWheelHandler.java: New class,, +    * source/org/jfree/chart/axis/ValueAxis.java, +    (resizeRange2): New method,, +    * source/org/jfree/chart/demo/BarChartDemo1.java, +    (BarChartDemo1): Enable mouse wheel,, +    * source/org/jfree/chart/demo/TimeSeriesChartDemo1.java, +    (createDemoPanel): Enable mouse wheel,, +    * source/org/jfree/chart/plot/CategoryPlot.java, +    (zoomRangeAxes): Modify anchored zoom behaviour,, +    * source/org/jfree/chart/plot/XYPlot.java, +    (zoomDomainAxes): Likewise,, +    (zoomRangeAxes): Likewise., +, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.13" />, +            <exclude name="org/jfree/chart/MouseWheelHandler.java" unless="JDK1.4+"/>, +++ b/ChangeLog, +2009-03-18  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java, +    (mouseWheelHandler): New field,, +    (isMouseWheelEnabled): New method,, +    (setMouseWheelEnabled): Likewise,, +    * source/org/jfree/chart/MouseWheelHandler.java: New class,, +    * source/org/jfree/chart/axis/ValueAxis.java, +    (resizeRange2): New method,, +    * source/org/jfree/chart/demo/BarChartDemo1.java, +    (BarChartDemo1): Enable mouse wheel,, +    * source/org/jfree/chart/demo/TimeSeriesChartDemo1.java, +    (createDemoPanel): Enable mouse wheel,, +    * source/org/jfree/chart/plot/CategoryPlot.java, +    (zoomRangeAxes): Modify anchored zoom behaviour,, +    * source/org/jfree/chart/plot/XYPlot.java, +    (zoomDomainAxes): Likewise,, +    (zoomRangeAxes): Likewise., +, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.13" />, +            <exclude name="org/jfree/chart/MouseWheelHandler.java" unless="JDK1.4+"/>, +++ b/source/org/jfree/chart/ChartPanel.java, + * 18-Mar-2009 : Added mouse wheel support (DG);, +import java.lang.reflect.Constructor;, +import java.lang.reflect.InvocationTargetException;, +import java.lang.reflect.Method;, +     * The mouse wheel handler.  This will be an instance of MouseWheelHandler, +     * but we can't reference that class directly because it depends on JRE 1.4, +     * and we still want to support JRE 1.3.1., +     */, +    private Object mouseWheelHandler;, +, +    /**, +     * Returns <code>true</code> if the mouse wheel handler is enabled, and, +     * <code>false</code> otherwise., +     *, +     * @return A boolean., +     *, +     * @since 1.0.13, +     */, +    public boolean isMouseWheelEnabled() {, +        return this.mouseWheelHandler != null;, +    }, +, +    /**, +     * Enables or disables mouse wheel support for the panel., +     * Note that this method does nothing when running JFreeChart on JRE 1.3.1,, +     * because that older version of the Java runtime does not support, +     * mouse wheel events., +     *, +     * @param flag  a boolean., +     *, +     * @since 1.0.13, +     */, +    public void setMouseWheelEnabled(boolean flag) {]
[+++ b/src/main/java/org/jfree/chart/StandardChartTheme.java, + * (C) Copyright 2008-2017, by Object Refinery Limited., +        theme.titlePaint = Color.WHITE;, +        theme.subtitlePaint = Color.WHITE;, +        theme.legendBackgroundPaint = Color.BLACK;, +        theme.legendItemPaint = Color.WHITE;, +        theme.chartBackgroundPaint = Color.BLACK;, +        theme.plotBackgroundPaint = Color.BLACK;, +        theme.plotOutlinePaint = Color.YELLOW;, +        theme.baselinePaint = Color.WHITE;, +        theme.crosshairPaint = Color.RED;, +        theme.labelLinkPaint = Color.LIGHT_GRAY;, +        theme.tickLabelPaint = Color.WHITE;, +        theme.axisLabelPaint = Color.WHITE;, +        theme.shadowPaint = Color.DARK_GRAY;, +        theme.itemLabelPaint = Color.WHITE;, +        theme.errorIndicatorPaint = Color.LIGHT_GRAY;, +        this.titlePaint = Color.BLACK;, +        this.subtitlePaint = Color.BLACK;, +        this.legendBackgroundPaint = Color.WHITE;, +        this.legendItemPaint = Color.DARK_GRAY;, +        this.chartBackgroundPaint = Color.WHITE;, +        this.plotBackgroundPaint = Color.LIGHT_GRAY;, +        this.plotOutlinePaint = Color.BLACK;, +        this.labelLinkPaint = Color.BLACK;, +        this.domainGridlinePaint = Color.WHITE;, +        this.rangeGridlinePaint = Color.WHITE;, +        this.baselinePaint = Color.BLACK;, +        this.crosshairPaint = Color.BLUE;, +        this.axisLabelPaint = Color.DARK_GRAY;, +        this.tickLabelPaint = Color.DARK_GRAY;, +        this.shadowPaint = Color.GRAY;, +        this.itemLabelPaint = Color.BLACK;, +        this.thermometerPaint = Color.WHITE;, +        this.errorIndicatorPaint = Color.BLACK;]
[+++ b/src/main/java/org/jfree/chart/date/SerialDate.java, +     * @return {@code -1} if the string is not convertable, the day of , +     * @return {@code -1} if the string is not parseable, the month of the, +     * @return this as {@code java.util.Date}., +     * @return The description (possibly {@code null})., +     * @param description  the description for this date ({@code null}, +    public void setDescription(String description) {, +     * @return {@code true} if this SerialDate represents the same date as , +     * @return {@code true} if this SerialDate represents an earlier date , +     * @return {@code true} if this SerialDate represents the same date, +     * @return {@code true} if this SerialDate represents the same date, +     * @return {@code true} if this SerialDate represents the same date, +     * Returns {@code true} if this {@link SerialDate} is within the , +     * Returns {@code true} if this {@link SerialDate} is within the ]
[+++ b/README.txt, +*  JFREECHART: Version 1.0.18  *, +11 April 2014, +(C)opyright 2000-2014, by Object Refinery Limited and Contributors., +(jfreechart-1.0.18-install.pdf) from the JFreeChart home, +(b)  JCommon - version 1.0.0 or later.  The runtime jar file (version 1.0.22), +    java -jar jfreechart-1.0.18-demo.jar, +An additional tab added to the demo application in version 1.0.18 showcases, +1.0.18 : (11-Apr-2014), +        - improved LogAxis labelling;, +        - center text support in RingPlot;, +        - 'stepPoint' attribute in the XYStepAreaRenderer;, +        - other minor improvements and bug fixes, see the NEWS and ChangeLog , +          files for further details., +, +    - Simon Legner, +    - Cameron Riley, +    - Lukasz Rzeszotarski]
[+++ b/ChangeLog, +2008-09-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * experimental/org/jfree/experimental/chart/annotations/XYTitleAnnotation.java:, +    Moved to main,, +    * experimental/org/jfree/experimental/chart/annotations/junit/XYTitleAnnotationTests.java, +    Likewise,, +    * experimental/org/jfree/experimental/chart/util/XYCoordinateType.java, +    Likewise,, +    * source/org/jfree/chart/annotation/XYTitleAnnotation.java:, +    Transferred from experimental,, +    * source/org/jfree/chart/util/XYCoordinateType.java: Likewise,, +    * tests/org/jfree/chart/annotations/junit/AnnotationsPackageTests.java, +    (suite): Added tests for XYTitleAnnotation,, +    * tests/org/jfree/chart/annotations/junit/XYTitleAnnotationTests.java:, +    New file., +, +++ b/ChangeLog, +2008-09-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * experimental/org/jfree/experimental/chart/annotations/XYTitleAnnotation.java:, +    Moved to main,, +    * experimental/org/jfree/experimental/chart/annotations/junit/XYTitleAnnotationTests.java, +    Likewise,, +    * experimental/org/jfree/experimental/chart/util/XYCoordinateType.java, +    Likewise,, +    * source/org/jfree/chart/annotation/XYTitleAnnotation.java:, +    Transferred from experimental,, +    * source/org/jfree/chart/util/XYCoordinateType.java: Likewise,, +    * tests/org/jfree/chart/annotations/junit/AnnotationsPackageTests.java, +    (suite): Added tests for XYTitleAnnotation,, +    * tests/org/jfree/chart/annotations/junit/XYTitleAnnotationTests.java:, +    New file., +, +++ /dev/null, +++ b/ChangeLog, +2008-09-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * experimental/org/jfree/experimental/chart/annotations/XYTitleAnnotation.java:, +    Moved to main,, +    * experimental/org/jfree/experimental/chart/annotations/junit/XYTitleAnnotationTests.java, +    Likewise,, +    * experimental/org/jfree/experimental/chart/util/XYCoordinateType.java, +    Likewise,, +    * source/org/jfree/chart/annotation/XYTitleAnnotation.java:, +    Transferred from experimental,, +    * source/org/jfree/chart/util/XYCoordinateType.java: Likewise,, +    * tests/org/jfree/chart/annotations/junit/AnnotationsPackageTests.java, +    (suite): Added tests for XYTitleAnnotation,, +    * tests/org/jfree/chart/annotations/junit/XYTitleAnnotationTests.java:, +    New file., +, +++ /dev/null, +++ /dev/null, +++ b/ChangeLog, +2008-09-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * experimental/org/jfree/experimental/chart/annotations/XYTitleAnnotation.java:, +    Moved to main,, +    * experimental/org/jfree/experimental/chart/annotations/junit/XYTitleAnnotationTests.java, +    Likewise,, +    * experimental/org/jfree/experimental/chart/util/XYCoordinateType.java, +    Likewise,, +    * source/org/jfree/chart/annotation/XYTitleAnnotation.java:, +    Transferred from experimental,, +    * source/org/jfree/chart/util/XYCoordinateType.java: Likewise,, +    * tests/org/jfree/chart/annotations/junit/AnnotationsPackageTests.java, +    (suite): Added tests for XYTitleAnnotation,, +    * tests/org/jfree/chart/annotations/junit/XYTitleAnnotationTests.java:, +    New file., +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/ChangeLog, +2008-09-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * experimental/org/jfree/experimental/chart/annotations/XYTitleAnnotation.java:, +    Moved to main,, +    * experimental/org/jfree/experimental/chart/annotations/junit/XYTitleAnnotationTests.java, +    Likewise,, +    * experimental/org/jfree/experimental/chart/util/XYCoordinateType.java, +    Likewise,, +    * source/org/jfree/chart/annotation/XYTitleAnnotation.java:, +    Transferred from experimental,, +    * source/org/jfree/chart/util/XYCoordinateType.java: Likewise,, +    * tests/org/jfree/chart/annotations/junit/AnnotationsPackageTests.java, +    (suite): Added tests for XYTitleAnnotation,, +    * tests/org/jfree/chart/annotations/junit/XYTitleAnnotationTests.java:, +    New file., +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/ChangeLog, +2008-09-03  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * experimental/org/jfree/experimental/chart/annotations/XYTitleAnnotation.java:, +    Moved to main,]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.7" />, +        <property name="jcommon.version" value="1.0.11" />, +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.7" />, +        <property name="jcommon.version" value="1.0.11" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.11" />]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYShapeRenderer.java, + * (C) Copyright 2000-2019, by Object Refinery Limited and Contributors., + * (C) Copyright 2008-2019 by Andreas Haumer, xS+S and Contributors., +import org.jfree.chart.util.CloneUtils;, +        implements XYItemRenderer, Cloneable, PublicCloneable, Serializable {, +        clone.paintScale = (PaintScale) CloneUtils.clone(this.paintScale);]
[+++ b/maven/pom-nb.xml, +    <artifactId>jfreechart</artifactId>, +    <version>1.5.0-SNAPSHOT</version>, +        <url>https://github.com/jfree/jfreechart/issues</url>, +        <system>GitHub Issues</system>, +        <connection>scm:git:git:https://github.com/jfree/jfreechart.git</connection>, +        <url>https://github.com/jfree/jfreechart</url>, +            <version>1.3</version>, +        <testSourceDirectory>src/test/java</testSourceDirectory>, + <!--           <plugin>, +-->]
[+++ b/ant/build-fx.xml, +        <copy todir="${basedir}/distribution/jsfreechart">, +            <fileset dir="${basedir}/jsfreechart">, +            </fileset>, +        </copy>, +, +++ b/ant/build-fx.xml, +        <copy todir="${basedir}/distribution/jsfreechart">, +            <fileset dir="${basedir}/jsfreechart">, +            </fileset>, +        </copy>, +, +++ b/ant/build.xml, +        <copy todir="${basedir}/distribution/jsfreechart">, +            <fileset dir="${basedir}/jsfreechart">, +            </fileset>, +        </copy>, +]
[+++ b/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +++ b/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +++ b/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getPercentComplete(r,, +                    c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getPercentComplete(r,, +                    c + this.firstCategoryIndex, subinterval);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getEndValue(r,, +                    c + this.firstCategoryIndex, subinterval);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getStartValue(r,, +                    c + this.firstCategoryIndex, subinterval);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        } else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getSubIntervalCount(r,, +                    c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        } else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getStartValue(r,, +                    c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        } else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getEndValue(r, c + this.firstCategoryIndex);, +++ b/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +++ b/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getValue(r, c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getPercentComplete(r,, +                    c + this.firstCategoryIndex);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getPercentComplete(r,, +                    c + this.firstCategoryIndex, subinterval);, +        if (c == -1) {, +            throw new UnknownKeyException("Unknown columnKey: " + columnKey);, +        }, +        else if (r == -1) {, +            throw new UnknownKeyException("Unknown rowKey: " + rowKey);, +            return this.underlying.getEndValue(r,]
[+++ b/src/main/java/org/jfree/chart/util/StringUtils.java, +    public static boolean startsWithIgnoreCase(String base, String start) {, +    public static boolean endsWithIgnoreCase(String base, String end) {]
[+++ b/src/main/java/org/jfree/chart/JFreeChart.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * {@link org.jfree.chart.ui.Align} class., +++ b/src/main/java/org/jfree/chart/JFreeChart.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * {@link org.jfree.chart.ui.Align} class., +++ b/src/main/java/org/jfree/data/time/Millisecond.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +     * @see #Millisecond(Date, TimeZone, Locale)]
[+++ b/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java, +, +        double transX = domainAxis.valueToJava2D(x, dataArea,, +                plot.getDomainAxisEdge());, +        double transY = rangeAxis.valueToJava2D(y, dataArea,, +                plot.getRangeAxisEdge());        , +                transX, transY, orientation);]
[+++ b/maven-jfreechart-project.xml, +      <groupId>xml-apis</groupId>, +      <artifactId>xml-apis</artifactId>, +      <version>1.3.02</version>, +      <jar>xml-apis-1.3.02.jar</jar>, +      <url>http://xml.apache.org/commons/#external</url>]
[+++ b/ChangeLog, +2007-11-30  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/LocalizationBundle_it.properties:, +	Fixed errors., +, +++ b/ChangeLog, +2007-11-30  David Gilbert  <david.gilbert@object-refinery.com>, +, +	* source/org/jfree/chart/LocalizationBundle_it.properties:, +	Fixed errors., +, +++ b/source/org/jfree/chart/LocalizationBundle_it.properties, +Chart_Properties=Propriet\u00E0 del Grafico, +Domain_Axis=Asse Orizzontale, +Properties...=Propriet\u00E0...]
[+++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +++ b/src/main/java/org/jfree/chart/plot/CrosshairState.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited., + * 18-Feb-2017 : Fix for crosshairs with multiple datasets / axes - see , + *               bug #36 (DG);, +     * Creates a new {@code crosshairState} instance.  Determination of the, +     * data point nearest the anchor point can be calculated in either, +     * dataspace or Java2D space.  The former should only be used for charts, +     * with a single set of axes., +     * @since 1.0.20, +    public void updateCrosshairPoint(double x, double y, int datasetIndex,, +            double transX, double transY, PlotOrientation orientation) {, +                // anchor point is in Java2D coordinates, +                this.datasetIndex = datasetIndex;, +     * @param x, +     * @param transX, +     * @param datasetIndex , +     * @since 1.0.20, +    public void updateCrosshairX(double x, double transX, int datasetIndex) {, +        if (this.anchor == null) {, +            return;, +        double d = Math.abs(transX - this.anchor.getX());, +            this.crosshairX = x;, +            this.datasetIndex = datasetIndex;, +     * @since 1.0.20, +    public void updateCrosshairY(double candidateY, double transY, int datasetIndex) {, +        if (this.anchor == null) {, +            return;, +        }, +        double d = Math.abs(transY - this.anchor.getY());, +            this.datasetIndex = datasetIndex;, +++ b/src/main/java/org/jfree/chart/plot/ContourPlot.java, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +                    crosshairState.updateCrosshairPoint(x[k], y[k], 0, transX,, +                    crosshairState.updateCrosshairX(x[k], transX, 0);, +                    crosshairState.updateCrosshairY(y[k], transY, 0);, +++ b/src/main/java/org/jfree/chart/plot/CrosshairState.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited., + * 18-Feb-2017 : Fix for crosshairs with multiple datasets / axes - see , + *               bug #36 (DG);, +     * Creates a new {@code crosshairState} instance.  Determination of the, +     * data point nearest the anchor point can be calculated in either, +     * dataspace or Java2D space.  The former should only be used for charts, +     * with a single set of axes., +     * @since 1.0.20, +    public void updateCrosshairPoint(double x, double y, int datasetIndex,, +            double transX, double transY, PlotOrientation orientation) {, +                // anchor point is in Java2D coordinates, +                this.datasetIndex = datasetIndex;, +     * @param x, +     * @param transX, +     * @param datasetIndex , +     * @since 1.0.20, +    public void updateCrosshairX(double x, double transX, int datasetIndex) {, +        if (this.anchor == null) {, +            return;, +        double d = Math.abs(transX - this.anchor.getX());, +            this.crosshairX = x;, +            this.datasetIndex = datasetIndex;, +     * @since 1.0.20, +    public void updateCrosshairY(double candidateY, double transY, int datasetIndex) {, +        if (this.anchor == null) {, +            return;, +        }, +        double d = Math.abs(transY - this.anchor.getY());, +            this.datasetIndex = datasetIndex;, +++ b/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited and Contributors., + * 18-Feb-2017 : Fix for crosshairs with multiple datasets / axes - see , + *               bug #36 (DG);, +     * @param datasetIndex  the index of the dataset for the point., +     * @since 1.0.20, +            double x, double y, int datasetIndex,, +                    crosshairState.updateCrosshairPoint(x, y, datasetIndex,, +                            transX, transY, orientation);, +                    crosshairState.updateCrosshairX(x, transX, datasetIndex);, +                    crosshairState.updateCrosshairY(y, transY, datasetIndex);, +//    /**, +//     * Considers the current (x, y) coordinate and updates the crosshair point, +//     * if it meets the criteria (usually means the (x, y) coordinate is the, +//     * closest to the anchor point so far)., +//     *]
[+++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * millisecond values are converted back to dates using a {@code DateFormat} , + * instance., +     * {@code java.util.Date}) in the real time line., +         * {@code java.util.Date})., +     * Note: if the {@code autoTickUnitSelection} flag is, +     * {@code date} is on or after the current maximum date for, +     * {@code maximumDate} is on or before the current minimum date for, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * millisecond values are converted back to dates using a {@code DateFormat} , + * instance., +     * {@code java.util.Date}) in the real time line., +         * {@code java.util.Date})., +     * Note: if the {@code autoTickUnitSelection} flag is, +     * {@code date} is on or after the current maximum date for, +     * {@code maximumDate} is on or before the current minimum date for, +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, +     *         {@code columnKey} field., +     *         index from the {@code columnKey} field., +     *         {@code Comparable}, so it has been deprecated as of, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * millisecond values are converted back to dates using a {@code DateFormat} , + * instance., +     * {@code java.util.Date}) in the real time line., +         * {@code java.util.Date})., +     * Note: if the {@code autoTickUnitSelection} flag is, +     * {@code date} is on or after the current maximum date for, +     * {@code maximumDate} is on or before the current minimum date for, +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, +     *         {@code columnKey} field., +     *         index from the {@code columnKey} field., +     *         {@code Comparable}, so it has been deprecated as of, +++ b/src/main/java/org/jfree/chart/labels/CategorySeriesLabelGenerator.java, + * (b) cloneable via the {@code PublicCloneable} interface (defined in, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * millisecond values are converted back to dates using a {@code DateFormat} , + * instance., +     * {@code java.util.Date}) in the real time line., +         * {@code java.util.Date})., +     * Note: if the {@code autoTickUnitSelection} flag is, +     * {@code date} is on or after the current maximum date for, +     * {@code maximumDate} is on or before the current minimum date for, +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, +     *         {@code columnKey} field., +     *         index from the {@code columnKey} field., +     *         {@code Comparable}, so it has been deprecated as of, +++ b/src/main/java/org/jfree/chart/labels/CategorySeriesLabelGenerator.java, + * (b) cloneable via the {@code PublicCloneable} interface (defined in, +++ b/src/main/java/org/jfree/chart/labels/CategoryToolTipGenerator.java, + * also implement the {@code org.jfree.util.PublicCloneable} interface (in, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * millisecond values are converted back to dates using a {@code DateFormat} , + * instance., +     * {@code java.util.Date}) in the real time line., +         * {@code java.util.Date})., +     * Note: if the {@code autoTickUnitSelection} flag is, +     * {@code date} is on or after the current maximum date for, +     * {@code maximumDate} is on or before the current minimum date for, +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, +     *         {@code columnKey} field., +     *         index from the {@code columnKey} field., +     *         {@code Comparable}, so it has been deprecated as of, +++ b/src/main/java/org/jfree/chart/labels/CategorySeriesLabelGenerator.java, + * (b) cloneable via the {@code PublicCloneable} interface (defined in, +++ b/src/main/java/org/jfree/chart/labels/CategoryToolTipGenerator.java, + * also implement the {@code org.jfree.util.PublicCloneable} interface (in, +++ b/src/main/java/org/jfree/chart/plot/DrawingSupplier.java, + * A supplier of {@code Paint}, {@code Stroke} and {@code Shape}, + * should also implement {@code PublicCloneable}., +     * Returns the next {@code Shape} object in a sequence maintained by, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * millisecond values are converted back to dates using a {@code DateFormat} , + * instance., +     * {@code java.util.Date}) in the real time line., +         * {@code java.util.Date})., +     * Note: if the {@code autoTickUnitSelection} flag is, +     * {@code date} is on or after the current maximum date for, +     * {@code maximumDate} is on or before the current minimum date for, +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, +     *         {@code columnKey} field., +     *         index from the {@code columnKey} field., +     *         {@code Comparable}, so it has been deprecated as of, +++ b/src/main/java/org/jfree/chart/labels/CategorySeriesLabelGenerator.java, + * (b) cloneable via the {@code PublicCloneable} interface (defined in, +++ b/src/main/java/org/jfree/chart/labels/CategoryToolTipGenerator.java, + * also implement the {@code org.jfree.util.PublicCloneable} interface (in, +++ b/src/main/java/org/jfree/chart/plot/DrawingSupplier.java, + * A supplier of {@code Paint}, {@code Stroke} and {@code Shape}, + * should also implement {@code PublicCloneable}., +     * Returns the next {@code Shape} object in a sequence maintained by, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java, + * the {@link Cloneable} and {@code PublicCloneable} interfaces., +     * @return The font (never {@code null})., +    public XYItemRendererState initialise(Graphics2D g2, Rectangle2D dataArea,, +            XYPlot plot, XYDataset dataset, PlotRenderingInfo info);, +    public void drawItem(Graphics2D g2, XYItemRendererState state,, +            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,, +            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,, +            int series, int item, CrosshairState crosshairState, int pass);, +    public void fillDomainGridBand(Graphics2D g2, XYPlot plot, ValueAxis axis,]
[+++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.20" />, +++ b/ant/build-swt.xml, +        <property name="jcommon.version" value="1.0.20" />, +++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.20" />]
[+++ b/src/main/java/org/jfree/chart/ui/Size2D.java, +    public Size2D(double width, double height) {, +    public void setWidth(double width) {, +    public void setHeight(double height) {, +    public boolean equals(Object obj) {, +        Size2D that = (Size2D) obj;]
[+++ b/maven/pom-1.6.xml, +    <version>1.0.20-SNAPSHOT</version>, +        <url>https://github.com/jfree/jfreechart/issues</url>, +        <system>GitHub Issues</system>, +        <connection>scm:git:git:https://github.com/jfree/jfreechart.git</connection>, +        <url>https://github.com/jfree/jfreechart</url>, +        <!-- JFreeSVG enables SVG export -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jfreesvg</artifactId>, +            <version>3.0</version>, +        </dependency>, +        , +        <!-- OrsonPDF enables PDF export -->, +        <dependency>, +            <groupId>com.orsonpdf</groupId>, +            <artifactId>orsonpdf</artifactId>, +            <version>1.7</version>, +        </dependency>, +, +        <testSourceDirectory>src/test/java</testSourceDirectory>, + <!--           <plugin>, +-->]
[+++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                this.drawLines = Boolean.valueOf(r.getDefaultLinesVisible());, +                this.drawShapes = Boolean.valueOf(r.getDefaultShapesVisible());, +                    ((LineAndShapeRenderer) r).setDefaultLinesVisible(, +                    ((LineAndShapeRenderer) r).setDefaultShapesVisible(, +                        this.drawShapes);, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                this.drawLines = Boolean.valueOf(r.getDefaultLinesVisible());, +                this.drawShapes = Boolean.valueOf(r.getDefaultShapesVisible());, +                    ((LineAndShapeRenderer) r).setDefaultLinesVisible(, +                    ((LineAndShapeRenderer) r).setDefaultShapesVisible(, +                        this.drawShapes);, +++ b/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java, +    private boolean defaultLinesVisible;, +    private boolean defaultShapesVisible;, +    private boolean defaultShapesFilled;, +        this.defaultLinesVisible = lines;, +        this.defaultShapesVisible = shapes;, +        this.defaultShapesFilled = true;, +            return flag;, +        return this.defaultLinesVisible;, +     * Returns the default 'lines visible' attribute., +     * @return The default flag., +     * @see #getDefaultLinesVisible(), +    public boolean getDefaultLinesVisible() {, +        return this.defaultLinesVisible;, +     * Sets the default 'lines visible' flag and sends a, +     * @see #getDefaultLinesVisible(), +    public void setDefaultLinesVisible(boolean flag) {, +        this.defaultLinesVisible = flag;, +            return flag;, +        return this.defaultShapesVisible;, +     * Returns the default 'shape visible' attribute., +     * @see #setDefaultShapesVisible(boolean), +    public boolean getDefaultShapesVisible() {, +        return this.defaultShapesVisible;, +     * Sets the default 'shapes visible' flag and sends a, +     * @see #getDefaultShapesVisible(), +    public void setDefaultShapesVisible(boolean flag) {, +        this.defaultShapesVisible = flag;, +            return flag;, +        return this.defaultShapesFilled;, +     * Returns the default 'shape filled' attribute., +     * @see #setDefaultShapesFilled(boolean), +    public boolean getDefaultShapesFilled() {, +        return this.defaultShapesFilled;, +     * Sets the default 'shapes filled' flag and sends a, +     * @see #getDefaultShapesFilled(), +    public void setDefaultShapesFilled(boolean flag) {, +        this.defaultShapesFilled = flag;, +        if (this.defaultLinesVisible != that.defaultLinesVisible) {, +        if (this.defaultShapesVisible != that.defaultShapesVisible) {, +        if (this.defaultShapesFilled != that.defaultShapesFilled) {, +++ b/src/main/java/org/jfree/chart/editor/DefaultPlotEditor.java, +                this.drawLines = Boolean.valueOf(r.getDefaultLinesVisible());, +                this.drawShapes = Boolean.valueOf(r.getDefaultShapesVisible());, +                    ((LineAndShapeRenderer) r).setDefaultLinesVisible(, +                    ((LineAndShapeRenderer) r).setDefaultShapesVisible(, +                        this.drawShapes);, +++ b/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java, +    private boolean defaultLinesVisible;, +    private boolean defaultShapesVisible;, +    private boolean defaultShapesFilled;, +        this.defaultLinesVisible = lines;, +        this.defaultShapesVisible = shapes;, +        this.defaultShapesFilled = true;, +            return flag;, +        return this.defaultLinesVisible;, +     * Returns the default 'lines visible' attribute., +     * @return The default flag., +     * @see #getDefaultLinesVisible(), +    public boolean getDefaultLinesVisible() {, +        return this.defaultLinesVisible;, +     * Sets the default 'lines visible' flag and sends a, +     * @see #getDefaultLinesVisible(), +    public void setDefaultLinesVisible(boolean flag) {, +        this.defaultLinesVisible = flag;, +            return flag;, +        return this.defaultShapesVisible;, +     * Returns the default 'shape visible' attribute., +     * @see #setDefaultShapesVisible(boolean), +    public boolean getDefaultShapesVisible() {, +        return this.defaultShapesVisible;, +     * Sets the default 'shapes visible' flag and sends a, +     * @see #getDefaultShapesVisible(), +    public void setDefaultShapesVisible(boolean flag) {, +        this.defaultShapesVisible = flag;, +            return flag;, +        return this.defaultShapesFilled;, +     * Returns the default 'shape filled' attribute., +     * @see #setDefaultShapesFilled(boolean), +    public boolean getDefaultShapesFilled() {, +        return this.defaultShapesFilled;, +     * Sets the default 'shapes filled' flag and sends a, +     * @see #getDefaultShapesFilled(), +    public void setDefaultShapesFilled(boolean flag) {, +        this.defaultShapesFilled = flag;, +        if (this.defaultLinesVisible != that.defaultLinesVisible) {, +        if (this.defaultShapesVisible != that.defaultShapesVisible) {, +        if (this.defaultShapesFilled != that.defaultShapesFilled) {]
[+++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>]
[+++ b/README.txt, +1.0.14 : (20-Nov-2011), +++ b/README.txt, +1.0.14 : (20-Nov-2011), +++ b/ant/build.xml, +        <copy file="${basedir}/pom.xml" tofile="${basedir}/distribution/pom.xml" />, +++ b/README.txt, +1.0.14 : (20-Nov-2011), +++ b/ant/build.xml, +        <copy file="${basedir}/pom.xml" tofile="${basedir}/distribution/pom.xml" />, +++ b/pom.xml, +    <version>1.0.14</version>]
[+++ b/src/main/java/org/jfree/chart/util/ShapeUtils.java, +     * Returns a clone of the specified shape, or {@code null}.  At the, +     * {@code Line2D}, {@code RectangularShape}, {@code Area}, +     * and {@code GeneralPath}., +     * {@code RectangularShape} includes {@code Arc2D},, +     * {@code Ellipse2D}, {@code Rectangle2D},, +     * {@code RoundRectangle2D}., +     * @param shape  the shape to clone ({@code null} permitted,, +     *               returns {@code null})., +     * @return A clone or {@code null}., +     * Tests two shapes for equality.  If both shapes are {@code null},, +     * this method will return {@code true}., +     * {@code Ellipse2D}, {@code Line2D} and {@code Rectangle2D}, +     * @param s1  the first shape ({@code null} permitted)., +     * @param s2  the second shape ({@code null} permitted)., +     * Compares two lines are returns {@code true} if they are equal or, +     * both {@code null}., +     * @param l1  the first line ({@code null} permitted)., +     * @param l2  the second line ({@code null} permitted)., +     * Compares two ellipses and returns {@code true} if they are equal or, +     * both {@code null}., +     * @param e1  the first ellipse ({@code null} permitted)., +     * @param e2  the second ellipse ({@code null} permitted)., +     * Compares two arcs and returns {@code true} if they are equal or, +     * both {@code null}., +     * @param a1  the first arc ({@code null} permitted)., +     * @param a2  the second arc ({@code null} permitted)., +     * Tests two polygons for equality.  If both are {@code null} this, +     * method returns {@code true}., +     * @param p1  polygon 1 ({@code null} permitted)., +     * @param p2  polygon 2 ({@code null} permitted)., +     * Tests two polygons for equality.  If both are {@code null} this, +     * method returns {@code true}., +     * @param p1  path 1 ({@code null} permitted)., +     * @param p2  path 2 ({@code null} permitted)., +     * @param shape  the shape ({@code null} not permitted)., +     * @param shape  the shape ({@code null} not permitted)., +     * @param anchor  the anchor ({@code null} not permitted)., +     * @param base  the shape ({@code null} permitted, returns, +     *              {@code null})., +     * Draws a shape with the specified rotation about {@code (x, y)}., +     * @param g2  the graphics device ({@code null} not permitted)., +     * @param shape  the shape ({@code null} not permitted)., +     * @param line  the line ({@code null} not permitted)., +     * @param area  the constraining rectangle ({@code null} not, +     * @throws NullPointerException if {@code area} is {@code null}.]
[+++ b/ant/build-fx.xml, +            depends="compile", +            depends="compile,zip-javadocs,zip", +++ b/ant/build-fx.xml, +            depends="compile", +            depends="compile,zip-javadocs,zip", +++ b/ant/build.xml, +            depends="compile", +            depends="compile,zip-javadocs,zip,source-jar"]
[+++ b/src/main/java/org/jfree/chart/axis/TickUnitSource.java, +     * than {@code unit} or, if there is no larger unit, returns {@code unit}., +++ b/src/main/java/org/jfree/chart/axis/TickUnitSource.java, +     * than {@code unit} or, if there is no larger unit, returns {@code unit}., +++ b/src/main/java/org/jfree/chart/event/AnnotationChangeEvent.java, +     * Creates a new {@code AnnotationChangeEvent} instance., +++ b/src/main/java/org/jfree/chart/axis/TickUnitSource.java, +     * than {@code unit} or, if there is no larger unit, returns {@code unit}., +++ b/src/main/java/org/jfree/chart/event/AnnotationChangeEvent.java, +     * Creates a new {@code AnnotationChangeEvent} instance., +++ b/src/main/java/org/jfree/chart/event/MarkerChangeEvent.java, +     * Creates a new {@code MarkerChangeEvent} instance.]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null]
[+++ b/pom.xml, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <!-- JFreeSVG enables SVG export -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jfreesvg</artifactId>, +            <version>3.0</version>, +        </dependency>, +        , +        <!-- OrsonPDF enables PDF export -->, +        <dependency>, +            <groupId>com.orsonpdf</groupId>, +            <artifactId>orsonpdf</artifactId>, +            <version>1.7</version>, +        </dependency>, +]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.10" />, +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.10" />, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.10" />, +++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.10" />, +++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.10" />, +++ b/source/org/jfree/chart/resources/JFreeChartResources.java, +        {"project.version",   "1.0.10"},]
[+++ b/src/test/java/org/jfree/chart/axis/PeriodAxisLabelInfoTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +        Paint lp1 = Color.BLACK;, +        Paint lp2 = Color.BLUE;, +        Paint dp1 = Color.RED;, +        Paint dp2 = Color.GREEN;, +++ b/src/test/java/org/jfree/chart/axis/PeriodAxisLabelInfoTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +        Paint lp1 = Color.BLACK;, +        Paint lp2 = Color.BLUE;, +        Paint dp1 = Color.RED;, +        Paint dp2 = Color.GREEN;, +++ b/src/test/java/org/jfree/chart/axis/SymbolAxisTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        a1.setGridBandPaint(Color.BLACK);, +        a2.setGridBandPaint(Color.BLACK);, +        a1.setGridBandAlternatePaint(Color.RED);, +        a2.setGridBandAlternatePaint(Color.RED);, +++ b/src/test/java/org/jfree/chart/axis/PeriodAxisLabelInfoTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +        Paint lp1 = Color.BLACK;, +        Paint lp2 = Color.BLUE;, +        Paint dp1 = Color.RED;, +        Paint dp2 = Color.GREEN;, +++ b/src/test/java/org/jfree/chart/axis/SymbolAxisTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        a1.setGridBandPaint(Color.BLACK);, +        a2.setGridBandPaint(Color.BLACK);, +        a1.setGridBandAlternatePaint(Color.RED);, +        a2.setGridBandAlternatePaint(Color.RED);, +++ b/src/test/java/org/jfree/chart/plot/DefaultDrawingSupplierTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Paint[] ps1A = new Paint[] {Color.RED, Color.BLUE};, +        Paint[] ps2A = new Paint[] {Color.GREEN, Color.YELLOW, Color.WHITE};, +        Paint[] ops1A = new Paint[] {Color.LIGHT_GRAY, Color.BLUE};, +        Paint[] ops2A = new Paint[] {Color.BLACK, Color.YELLOW, Color.CYAN};, +        Paint[] ps1B = new Paint[] {Color.RED, Color.BLUE};, +        Paint[] ps2B = new Paint[] {Color.GREEN, Color.YELLOW, Color.WHITE};, +        Paint[] ops1B = new Paint[] {Color.LIGHT_GRAY, Color.BLUE};, +        Paint[] ops2B = new Paint[] {Color.BLACK, Color.YELLOW, Color.CYAN};, +++ b/src/test/java/org/jfree/chart/axis/PeriodAxisLabelInfoTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2004-2017, by Object Refinery Limited and Contributors., +        Paint lp1 = Color.BLACK;, +        Paint lp2 = Color.BLUE;, +        Paint dp1 = Color.RED;, +        Paint dp2 = Color.GREEN;, +++ b/src/test/java/org/jfree/chart/axis/SymbolAxisTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +        a1.setGridBandPaint(Color.BLACK);, +        a2.setGridBandPaint(Color.BLACK);, +        a1.setGridBandAlternatePaint(Color.RED);, +        a2.setGridBandAlternatePaint(Color.RED);, +++ b/src/test/java/org/jfree/chart/plot/DefaultDrawingSupplierTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +        Paint[] ps1A = new Paint[] {Color.RED, Color.BLUE};, +        Paint[] ps2A = new Paint[] {Color.GREEN, Color.YELLOW, Color.WHITE};, +        Paint[] ops1A = new Paint[] {Color.LIGHT_GRAY, Color.BLUE};, +        Paint[] ops2A = new Paint[] {Color.BLACK, Color.YELLOW, Color.CYAN};, +        Paint[] ps1B = new Paint[] {Color.RED, Color.BLUE};, +        Paint[] ps2B = new Paint[] {Color.GREEN, Color.YELLOW, Color.WHITE};, +        Paint[] ops1B = new Paint[] {Color.LIGHT_GRAY, Color.BLUE};, +        Paint[] ops2B = new Paint[] {Color.BLACK, Color.YELLOW, Color.CYAN};, +++ b/src/test/java/org/jfree/chart/plot/MarkerTest.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited and Contributors., +        assertEquals(Color.GRAY, m.getPaint());, +        m.setPaint(Color.BLUE);, +        assertEquals(Color.BLUE, m.getPaint());, +        assertEquals(Color.GRAY, m.getOutlinePaint());, +        m.setOutlinePaint(Color.YELLOW);, +        assertEquals(Color.YELLOW, m.getOutlinePaint());, +        assertEquals(Color.BLACK, m.getLabelPaint());, +        m.setLabelPaint(Color.RED);, +        assertEquals(Color.RED, m.getLabelPaint());]
[+++ b/src/main/java/org/jfree/chart/ui/PaintSample.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public PaintSample(Paint paint) {, +    public void setPaint(Paint paint) {, +    @Override, +    @Override, +    public void paintComponent(Graphics g) {, +        g2.setPaint(Color.BLACK);, +++ b/src/main/java/org/jfree/chart/ui/PaintSample.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public PaintSample(Paint paint) {, +    public void setPaint(Paint paint) {, +    @Override, +    @Override, +    public void paintComponent(Graphics g) {, +        g2.setPaint(Color.BLACK);, +++ b/src/main/java/org/jfree/chart/util/DefaultShadowGenerator.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2009-2017 by Object Refinery Limited and Contributors., +        this(5, Color.BLACK, 0.5f, 5, -Math.PI / 4);, +++ b/src/main/java/org/jfree/chart/ui/PaintSample.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.]]
[+++ b/ChangeLog, +2009-04-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java: Implemented OverlayChangeListener,, +    (overlays): New field,, +    (ChartPanel): Initialise new field,, +    (addOverlay): New method,, +    (removeOverlay): New method,, +    (overlayChanged): New method,, +    (paintComponent): Draw overlays,, +    * source/org/jfree/chart/event/OverlayChangeEvent.java: New file,, +    * source/org/jfree/chart/event/OverlayChangeListener.java: New file,, +    * source/org/jfree/chart/panel/AbstractOverlay.java: New file,, +    * source/org/jfree/chart/panel/CrosshairOverlay.java: New file,, +    * source/org/jfree/chart/panel/Overlay.java: New file,, +    * source/org/jfree/chart/labels/CrosshairLabelGenerator.java: New file,, +    * source/org/jfree/chart/labels/StandardCrosshairLabelGenerator.java:, +    New file,, +    * source/org/jfree/chart/jxlayer/CrosshairLayerUI.java: Refactored class, +    locations., +, +++ b/ChangeLog, +2009-04-09  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * source/org/jfree/chart/ChartPanel.java: Implemented OverlayChangeListener,, +    (overlays): New field,, +    (ChartPanel): Initialise new field,, +    (addOverlay): New method,, +    (removeOverlay): New method,, +    (overlayChanged): New method,, +    (paintComponent): Draw overlays,, +    * source/org/jfree/chart/event/OverlayChangeEvent.java: New file,, +    * source/org/jfree/chart/event/OverlayChangeListener.java: New file,, +    * source/org/jfree/chart/panel/AbstractOverlay.java: New file,, +    * source/org/jfree/chart/panel/CrosshairOverlay.java: New file,, +    * source/org/jfree/chart/panel/Overlay.java: New file,, +    * source/org/jfree/chart/labels/CrosshairLabelGenerator.java: New file,, +    * source/org/jfree/chart/labels/StandardCrosshairLabelGenerator.java:, +    New file,, +    * source/org/jfree/chart/jxlayer/CrosshairLayerUI.java: Refactored class, +    locations., +, +++ b/source/org/jfree/chart/ChartPanel.java, + * 09-Apr-2009 : Added overlay support (DG);, +import java.util.Iterator;, +import java.util.List;, +import org.jfree.chart.panel.Overlay;, +import org.jfree.chart.event.OverlayChangeEvent;, +import org.jfree.chart.event.OverlayChangeListener;, +        MouseMotionListener, OverlayChangeListener, Printable, Serializable {, +     * A list of overlays for the panel., +     *, +     * @since 1.0.13, +     */, +    private List overlays;, +, +    /**, +, +        this.overlays = new java.util.ArrayList();, +     * Add an overlay to the panel., +     *, +     * @param overlay  the overlay (<code>null</code> not permitted)., +     *, +     * @since 1.0.13, +     */, +    public void addOverlay(Overlay overlay) {, +        if (overlay == null) {, +            throw new IllegalArgumentException("Null 'overlay' argument.");, +        }, +        this.overlays.add(overlay);, +        overlay.addChangeListener(this);, +        repaint();, +    }, +, +    /**, +     * Removes an overlay from the panel., +     *, +     * @param overlay  the overlay to remove (<code>null</code> not permitted)., +     *, +     * @since 1.0.13, +     */, +    public void removeOverlay(Overlay overlay) {, +        if (overlay == null) {, +            throw new IllegalArgumentException("Null 'overlay' argument.");, +        }, +        boolean removed = this.overlays.remove(overlay);, +        if (removed) {, +            overlay.removeChangeListener(this);, +            repaint();, +        }, +    }, +, +    /**, +     * Handles a change to an overlay by repainting the panel., +     *, +     * @param event  the event., +     *, +     * @since 1.0.13, +     */, +    public void overlayChanged(OverlayChangeEvent event) {]
[+++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/axis/LogAxis.java, +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/axis/LogAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/axis/LogAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/axis/LogAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/axis/LogAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/renderer/LookupPaintScale.java, +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/axis/LogAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/renderer/LookupPaintScale.java, +++ b/src/main/java/org/jfree/data/time/Second.java, +++ b/pom.xml, +        <project.source.level>1.6</project.source.level>, +        <project.target.level>1.6</project.target.level>, +++ /dev/null, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, +++ b/src/main/java/org/jfree/chart/axis/DateAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/axis/LogAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxis.java, +++ b/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java, +++ b/src/main/java/org/jfree/chart/entity/CategoryItemEntity.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +++ b/src/main/java/org/jfree/chart/renderer/LookupPaintScale.java, +++ b/src/main/java/org/jfree/data/time/Second.java, +++ b/src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java]
[+++ b/src/main/java/org/jfree/chart/date/SerialDate.java, +     * Returns {@code true} if the supplied integer code represents a , +     * valid day-of-the-week, and {@code false} otherwise., +     * @return {@code true} if the supplied integer code represents a , +     *         valid day-of-the-week, and {@code false} otherwise., +    public static boolean isValidWeekdayCode(int code) {, +    public static String weekdayCodeToString(int weekday) {, +    public static String[] getMonths(boolean shortened) {, +     * @return {@code true} if the supplied integer code represents a , +    public static boolean isValidMonthCode(int code) {, +    public static int monthCodeToQuarter(int code) {, +    public static String monthCodeToString(int month) {, +     * @param shortened  if {@code true} return the abbreviation of the month., +    public static String monthCodeToString(int month, boolean shortened) {, +     * @return {@code true} if the supplied integer code represents a , +    public static boolean isValidWeekInMonthCode(int code) {, +     * @return {@code true} if the specified year is a leap year., +    public static boolean isLeapYear(int yyyy) {, +    public static int leapYearCount(int yyyy) {, +        int leap4 = (yyyy - 1896) / 4;, +        int leap100 = (yyyy - 1800) / 100;, +        int leap400 = (yyyy - 1600) / 400;, +    public static int lastDayOfMonth(int month, int yyyy) {, +    public static SerialDate addDays(int days, SerialDate base) {, +        int serialDayNumber = base.toSerial() + days;, +    public static SerialDate addMonths(int months, SerialDate base) {, +        int yy = (12 * base.getYYYY() + base.getMonth() + months - 1) / 12;, +        int mm = (12 * base.getYYYY() + base.getMonth() + months - 1) % 12 + 1;, +        int dd = Math.min(base.getDayOfMonth(), , +                SerialDate.lastDayOfMonth(mm, yy));, +    public static SerialDate addYears(int years, SerialDate base) {, +        int baseY = base.getYYYY();, +        int baseM = base.getMonth();, +        int baseD = base.getDayOfMonth();, +        int targetY = baseY + years;, +        int targetD = Math.min(baseD, SerialDate.lastDayOfMonth(baseM, targetY));, +    public static SerialDate getPreviousDayOfWeek(int targetWeekday, , +            SerialDate base) {, +            throw new IllegalArgumentException("Invalid day-of-the-week code.");, +        int adjust;, +        int baseDOW = base.getDayOfWeek();, +        } else {, +    public static SerialDate getFollowingDayOfWeek(int targetWeekday, , +            SerialDate base) {, +        int adjust;, +        int baseDOW = base.getDayOfWeek();, +        } else {, +    public static SerialDate getNearestDayOfWeek(int targetDOW, SerialDate base) {, +            throw new IllegalArgumentException("Invalid day-of-the-week code.");]
[+++ b/pom-1.8.xml, +    <artifactId>jfreechart-fx</artifactId>, +    <version>1.0.20-SNAPSHOT</version>, +            <subscribe>jfreechart-dev-request@lists.sourceforge.net?subject=subscribe</subscribe>, +            <unsubscribe>jfreechart-dev-request@lists.sourceforge.net?subject=unsubscribe</unsubscribe>, +            <archive>http://sourceforge.net/mailarchive/forum.php?forum=jfreechart-dev</archive>, +        <!-- FXGraphics2D is used for JavaFX support. -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>fxgraphics2d</artifactId>, +            <version>1.2.1</version>, +        </dependency>, +, +        <!-- JFreeSVG enables SVG export -->, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jfreesvg</artifactId>, +            <version>3.0</version>, +        </dependency>, +        , +        <!-- OrsonPDF enables PDF export -->, +        <dependency>, +            <groupId>com.orsonpdf</groupId>, +            <artifactId>orsonpdf</artifactId>, +            <version>1.7</version>, +        </dependency>, +, +        <project.source.level>1.8</project.source.level>, +        <project.target.level>1.8</project.target.level>, +                        <!--        <exclude>org/jfree/chart/fx/**</exclude> -->]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.16" />, +        <copy file="${junit.jar}" tofile="${basedir}/distribution/lib/junit-4.11.jar" />, +        <copy file="${hamcrest.jar}" tofile="${basedir}/distribution/lib/hamcrest-core-1.3.jar" />]
[+++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, + * 05-Mar-2016 : Fix label outline stroke (DG);, +                g2.setStroke(crosshair.getLabelOutlineStroke());, +                g2.setStroke(crosshair.getLabelOutlineStroke());, +++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, + * 05-Mar-2016 : Fix label outline stroke (DG);, +                g2.setStroke(crosshair.getLabelOutlineStroke());, +                g2.setStroke(crosshair.getLabelOutlineStroke());, +++ b/src/main/java/org/jfree/chart/plot/Crosshair.java, +     * Returns the label outline stroke. The default value is , +     * {@code BasicStroke(0.5)}.]
[+++ b/ant/build-swt.xml, +        <property name="jfreechart.version" value="1.0.12" />]
[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/resources/org/jfree/chart/editor/LocalizationBundle.properties, +# org.jfree.chart.ui.ui ResourceBundle properties file, +# , +# Changes (from 31-Aug-2003), +# --------------------------, +# 31-Aug-2003 : Initial version (AL);, +#, +, +\:=:, +AngleOffset=Angle Offset]
[+++ b/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        /* Rectangle2D hotspot = */ TextUtils.drawAlignedString(getText(),, +++ b/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        /* Rectangle2D hotspot = */ TextUtils.drawAlignedString(getText(),, +++ b/src/main/java/org/jfree/chart/annotations/CategoryTextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +import org.jfree.chart.text.TextUtils;, +        TextUtils.drawRotatedString(getText(), g2, anchorX, anchorY,, +++ b/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        /* Rectangle2D hotspot = */ TextUtils.drawAlignedString(getText(),, +++ b/src/main/java/org/jfree/chart/annotations/CategoryTextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +import org.jfree.chart.text.TextUtils;, +        TextUtils.drawRotatedString(getText(), g2, anchorX, anchorY,, +++ b/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        Shape hotspot = TextUtils.calculateRotatedStringBounds(, +        TextUtils.drawRotatedString(getText(), g2, (float) labelX,, +++ b/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        /* Rectangle2D hotspot = */ TextUtils.drawAlignedString(getText(),, +++ b/src/main/java/org/jfree/chart/annotations/CategoryTextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +import org.jfree.chart.text.TextUtils;, +        TextUtils.drawRotatedString(getText(), g2, anchorX, anchorY,, +++ b/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        Shape hotspot = TextUtils.calculateRotatedStringBounds(, +        TextUtils.drawRotatedString(getText(), g2, (float) labelX,, +++ b/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        Shape hotspot = TextUtils.calculateRotatedStringBounds(, +        TextUtils.drawRotatedString(getText(), g2, anchorX, anchorY,, +++ b/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        /* Rectangle2D hotspot = */ TextUtils.drawAlignedString(getText(),, +++ b/src/main/java/org/jfree/chart/annotations/CategoryTextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +import org.jfree.chart.text.TextUtils;, +        TextUtils.drawRotatedString(getText(), g2, anchorX, anchorY,, +++ b/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        Shape hotspot = TextUtils.calculateRotatedStringBounds(, +        TextUtils.drawRotatedString(getText(), g2, (float) labelX,, +++ b/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        Shape hotspot = TextUtils.calculateRotatedStringBounds(, +        TextUtils.drawRotatedString(getText(), g2, anchorX, anchorY,, +++ b/src/main/java/org/jfree/chart/axis/Axis.java, +import org.jfree.chart.text.TextUtils;, +                bounds = TextUtils.getTextBounds(axisLabel, g2, fm);, +        Rectangle2D labelBounds = TextUtils.getTextBounds(label, g2, fm);, +            TextUtils.drawRotatedString(label, g2, (float) labelx,, +            TextUtils.drawRotatedString(label, g2, (float) labelx,, +            TextUtils.drawRotatedString(label, g2, (float) labelx,, +            TextUtils.drawRotatedString(label, g2, (float) labelx,, +++ b/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        /* Rectangle2D hotspot = */ TextUtils.drawAlignedString(getText(),, +++ b/src/main/java/org/jfree/chart/annotations/CategoryTextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +import org.jfree.chart.text.TextUtils;, +        TextUtils.drawRotatedString(getText(), g2, anchorX, anchorY,, +++ b/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        Shape hotspot = TextUtils.calculateRotatedStringBounds(, +        TextUtils.drawRotatedString(getText(), g2, (float) labelX,, +++ b/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        Shape hotspot = TextUtils.calculateRotatedStringBounds(, +        TextUtils.drawRotatedString(getText(), g2, anchorX, anchorY,, +++ b/src/main/java/org/jfree/chart/axis/Axis.java, +import org.jfree.chart.text.TextUtils;, +                bounds = TextUtils.getTextBounds(axisLabel, g2, fm);, +        Rectangle2D labelBounds = TextUtils.getTextBounds(label, g2, fm);, +            TextUtils.drawRotatedString(label, g2, (float) labelx,, +            TextUtils.drawRotatedString(label, g2, (float) labelx,, +            TextUtils.drawRotatedString(label, g2, (float) labelx,, +            TextUtils.drawRotatedString(label, g2, (float) labelx,, +++ b/src/main/java/org/jfree/chart/axis/CategoryAxis.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., +import org.jfree.chart.text.TextUtils;, +        TextBlock label = TextUtils.createTextBlock(category.toString(),, +++ b/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java, +import org.jfree.chart.text.TextUtils;, +        /* Rectangle2D hotspot = */ TextUtils.drawAlignedString(getText(),, +++ b/src/main/java/org/jfree/chart/annotations/CategoryTextAnnotation.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited and Contributors., +import org.jfree.chart.text.TextUtils;, +        TextUtils.drawRotatedString(getText(), g2, anchorX, anchorY,]
[+++ b/ant/build.xml, +        <property name="jfreechart.version" value="1.0.11" />]
[+++ b/src/main/java/org/jfree/chart/util/ObjectList.java, +    public ObjectList(int initialCapacity) {, +    @Override, +    public Object get(int index) {         , +    @Override, +    public void set(int index, Object object) {      , +    @Override, +    public int indexOf(Object object) {    ]
[+++ b/ant/build-fx.xml, +++ b/ant/build-fx.xml, +++ b/ant/build.xml, +++ b/ant/build-fx.xml, +++ b/ant/build.xml, +++ b/src/main/java/org/jfree/chart/fx/demo/CrosshairOverlayFXDemo1.java, +/* --------------------------, + * CrosshairOverlayDemo1.java, + * --------------------------, +++ b/ant/build-fx.xml, +++ b/ant/build.xml, +++ b/src/main/java/org/jfree/chart/fx/demo/CrosshairOverlayFXDemo1.java, +/* --------------------------, + * CrosshairOverlayDemo1.java, + * --------------------------, +++ b/src/main/java/org/jfree/chart/fx/demo/TimeSeriesChartFXDemo1.java, +        ]
[+++ b/NEWS, +19 September 2008, +++ b/NEWS, +19 September 2008, +++ b/README.txt, +19 September 2008, +    - Greg Darke]
[+++ b/src/main/java/org/jfree/chart/ui/StrokeChooserPanel.java, +            @Override, +            public void actionPerformed(ActionEvent evt) {, +     * @return The selected stroke (possibly {@code null}).]
[+++ b/ChangeLog, +2013-09-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/LocalizationBundle.properties, +    (FILE_EXISTS_CONFIRM_OVERWRITE): New entry,, +    (PDF_Files): Likewise,, +    (SVG_Files): Likewise,, +    * org/jfree/chart/ChartPanel.java, +    (SAVE_AS_PNG_COMMAND): New field,, +    (SAVE_AS_SVG_COMMAND): Likewise,, +    (SAVE_AS_PDF_COMMAND): Likewise,, +    (actionPerformed): Handle SVG and PDF options,, +    (saveAsSVG): New private method,, +    (generateSVG): New method,, +    (createSVGGraphics2D): New private method,, +    (saveAsPDF): Likewise,, +    (isOrsonPDFAvailable): Likewise,, +    (writeAsPDF): Likewise,, +    (createPopupMenu): Add SVG and PDF options when available,, +    * org/jfree/chart/plot/PiePlot.java, +    (draw): Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint,, +    * org/jfree/chart/plot/CategoryPlot.java, +    (draw): Likewise,, +    * org/jfree/chart/plot/XYPlot.java, +    (draw): Likewise., +, +2013-09-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/JFreeChart.java, +    (KEY_SUPPRESS_SHADOW_GENERATION): new field., +, +2013-09-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/axis/DateAxis.java, +    (zoomRange): Prevent axis range from falling below 1 millisecond., +, +++ b/ChangeLog, +2013-09-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/LocalizationBundle.properties, +    (FILE_EXISTS_CONFIRM_OVERWRITE): New entry,, +    (PDF_Files): Likewise,, +    (SVG_Files): Likewise,, +    * org/jfree/chart/ChartPanel.java, +    (SAVE_AS_PNG_COMMAND): New field,, +    (SAVE_AS_SVG_COMMAND): Likewise,, +    (SAVE_AS_PDF_COMMAND): Likewise,, +    (actionPerformed): Handle SVG and PDF options,, +    (saveAsSVG): New private method,, +    (generateSVG): New method,, +    (createSVGGraphics2D): New private method,, +    (saveAsPDF): Likewise,, +    (isOrsonPDFAvailable): Likewise,, +    (writeAsPDF): Likewise,, +    (createPopupMenu): Add SVG and PDF options when available,, +    * org/jfree/chart/plot/PiePlot.java, +    (draw): Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint,, +    * org/jfree/chart/plot/CategoryPlot.java, +    (draw): Likewise,, +    * org/jfree/chart/plot/XYPlot.java, +    (draw): Likewise., +, +2013-09-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/JFreeChart.java, +    (KEY_SUPPRESS_SHADOW_GENERATION): new field., +, +2013-09-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/axis/DateAxis.java, +    (zoomRange): Prevent axis range from falling below 1 millisecond., +, +++ b/NEWS, +13 September 2013, +*** THIS RELEASE REQUIRES JDK/JRE 1.6.0 OR LATER. ***, +added URLs to labels on CategoryAxis, seamless integration with , +JFreeSVG (http://www.jfree.org/jfreesvg/) and OrsonPDF , +(http://www.object-refinery.com/pdf/), improved the consistency of the , +IMPORTANT: Funding is vital to the continued success of the JFreeChart project., +Please ask/persuade/beg your company to support us buy purchasing the, +JFreeChart Developer Guide and demo source code (site license options are , +available for big companies)...and also please take a look at JFreeSVG and, +OrsonPDF, useful products that we are charging money for!, +, +++ b/ChangeLog, +2013-09-12  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/chart/LocalizationBundle.properties, +    (FILE_EXISTS_CONFIRM_OVERWRITE): New entry,, +    (PDF_Files): Likewise,, +    (SVG_Files): Likewise,, +    * org/jfree/chart/ChartPanel.java, +    (SAVE_AS_PNG_COMMAND): New field,, +    (SAVE_AS_SVG_COMMAND): Likewise,, +    (SAVE_AS_PDF_COMMAND): Likewise,, +    (actionPerformed): Handle SVG and PDF options,, +    (saveAsSVG): New private method,, +    (generateSVG): New method,, +    (createSVGGraphics2D): New private method,, +    (saveAsPDF): Likewise,]
[+++ b/ant/build-fx.xml]
[+++ b/pom-1.8.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<project xmlns="http://maven.apache.org/POM/4.0.0", +         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0, +                             http://maven.apache.org/maven-v4_0_0.xsd">, +, +    <modelVersion>4.0.0</modelVersion>, +, +    <name>JFreeChart</name>, +, +    <artifactId>jfreechart</artifactId>, +    <groupId>org.jfree</groupId>, +    <version>1.0.19</version>, +    <packaging>jar</packaging>, +, +    <!-- this is required to host it on Sonatype's OSSRH -->, +    <parent>, +        <groupId>org.sonatype.oss</groupId>, +        <artifactId>oss-parent</artifactId>, +        <version>9</version>, +    </parent>, +, +    <organization>, +        <name>JFree.org</name>, +        <url>http://www.jfree.org/</url>, +    </organization>, +    <inceptionYear>2001</inceptionYear>, +, +    <description>, +    JFreeChart is a class library, written in Java, for generating charts. , +    Utilising the Java2D APIs, it currently supports bar charts, pie charts, , +    line charts, XY-plots and time series plots., +    </description>, +, +    <url>http://www.jfree.org/jfreechart/</url>, +    <issueManagement>, +        <url>http://sourceforge.net/tracker/?group_id=15494</url>, +    </issueManagement>, +    <scm>, +        <connection>scm:svn:https://jfreechart.svn.sourceforge.net/svnroot/jfreechart jfreechart</connection>, +        <url>http://jfreechart.svn.sourceforge.net/viewvc/jfreechart/</url>, +    </scm>, +, +    <mailingLists>, +        <mailingList>, +            <name>JFreeChart Developer List</name>, +            <subscribe>, +        jfreechart-dev-request@lists.sourceforge.net?subject=subscribe, +            </subscribe>, +            <unsubscribe>, +        jfreechart-dev-request@lists.sourceforge.net?subject=unsubscribe, +            </unsubscribe>, +            <archive>, +        http://sourceforge.net/mailarchive/forum.php?forum=jfreechart-dev, +            </archive>, +        </mailingList>, +    </mailingLists>, +, +    <developers>, +    <!--, +    For an up to date list of developers and contributors have a look at, +    the project info implementations., +    -->, +    </developers>, +    <licenses>, +        <license>, +            <name>GNU Lesser General Public Licence</name>, +            <url>http://www.gnu.org/licenses/lgpl.txt</url>, +            <distribution>repo</distribution>, +        </license>, +    </licenses>, +, +    <dependencies>, +        <dependency>, +            <groupId>org.jfree</groupId>, +            <artifactId>jcommon</artifactId>, +            <version>1.0.23</version>, +        </dependency>, +, +        <dependency>, +            <groupId>javax.servlet</groupId>, +            <artifactId>servlet-api</artifactId>, +            <version>2.5</version>, +            <scope>provided</scope>, +        </dependency>, +, +        <dependency>, +            <groupId>junit</groupId>, +            <artifactId>junit</artifactId>, +            <version>4.11</version>, +            <scope>test</scope>, +        </dependency>, +, +    </dependencies>, +, +    <distributionManagement>, +      <snapshotRepository>, +        <id>ossrh</id>, +        <url>https://oss.sonatype.org/content/repositories/snapshots</url>]
[+++ b/src/main/java/org/jfree/chart/util/ArrayUtils.java, +    public static float[][] clone(float[][] array) {, +        float[][] result = new float[array.length][];, +            float[] child = array[i];, +            float[] copychild = new float[child.length];, +    public static boolean equalReferencesInArrays(Object[] array1, , +            Object[] array2) {, +    public static boolean equal(float[][] array1, float[][] array2) {, +    public static boolean hasDuplicateItems(Object[] array) {, +                Object o1 = array[i];, +                Object o2 = array[j];]
[+++ b/NEWS, +This release contains support for multiple axes with PolarPlot, fitting, +polynomial functions to a data series, some performance improvements in the, +TimeSeriesCollection class, mouse wheel rotation of pie charts, and numerous, +bug fixes., +2902842 : HistogramDataset.addSeries() fires change change event (by, +          Thomas A Caswell);, +++ b/NEWS, +This release contains support for multiple axes with PolarPlot, fitting, +polynomial functions to a data series, some performance improvements in the, +TimeSeriesCollection class, mouse wheel rotation of pie charts, and numerous, +bug fixes., +2902842 : HistogramDataset.addSeries() fires change change event (by, +          Thomas A Caswell);, +++ b/README.txt, +    - Thomas A Caswell]
[+++ b/README.txt, +(a)  JRE/JDK 1.6.0 or higher.  Note that JRE/JDK 1.8 is required to use the new , +JavaFX support (and you will need to rebuild the library using the , +ant/build-fx.xml script).]
[+++ b/src/main/java/org/jfree/chart/text/TextFragment.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public static final Paint DEFAULT_PAINT = Color.BLACK;, +     * @param text  the text ({@code null} not permitted)., +    public TextFragment(String text) {, +     * @param text  the text ({@code null} not permitted)., +     * @param font  the font ({@code null} not permitted)., +    public TextFragment(String text, Font font) {, +     * @param text  the text ({@code null} not permitted)., +     * @param font  the font ({@code null} not permitted)., +     * @param paint  the text color ({@code null} not permitted)., +    public TextFragment(String text, Font font, Paint paint) {, +     * @param text  the text ({@code null} not permitted)., +     * @param font  the font ({@code null} not permitted)., +     * @param paint  the text color ({@code null} not permitted)., +    public TextFragment(String text, Font font, Paint paint,, +            float baselineOffset) {, +     * @return The text (possibly {@code null})., +     * @return The font (never {@code null})., +     * @return The text paint (never {@code null})., +    public void draw(Graphics2D g2, float anchorX, float anchorY, , +            TextAnchor anchor, float rotateX, float rotateY, double angle) {, +    public Size2D calculateDimensions(Graphics2D g2) {, +        FontMetrics fm = g2.getFontMetrics(this.font);, +        Rectangle2D bounds = TextUtilities.getTextBounds(this.text, g2, fm);, +        Size2D result = new Size2D(bounds.getWidth(), bounds.getHeight());, +        FontMetrics fm = g2.getFontMetrics(this.font);, +        LineMetrics lm = fm.getLineMetrics("ABCxyz", g2);, +     * @param obj  the object to test against ({@code null} permitted)., +    public boolean equals(Object obj) {, +            TextFragment tf = (TextFragment) obj;, +    private void writeObject(ObjectOutputStream stream) throws IOException {, +    private void readObject(ObjectInputStream stream) throws IOException, , +            ClassNotFoundException {]
[+++ b/src/main/java/org/jfree/chart/util/ObjectUtils.java, +    public static void setClassLoaderSource(String classLoaderSource) {, +    public static boolean equal(Object o1, Object o2) {, +    public static int hashCode(Object object) {, +    public static Object clone(Object object), +            PublicCloneable pc = (PublicCloneable) object;, +                Method method = object.getClass().getMethod("clone",, +    public static Collection deepClone(Collection collection), +        Collection result = (Collection) ObjectUtils.clone(collection);, +        Iterator iterator = collection.iterator();, +            Object item = iterator.next();, +    public static ClassLoader getClassLoader(Class c) {, +        String localClassLoaderSource;, +        synchronized(ObjectUtils.class) {, +            ClassLoader threadLoader = Thread.currentThread().getContextClassLoader();, +    public static URL getResource(String name, Class c) {, +    public static URL getResourceRelative(String name, Class c) {, +        ClassLoader cl = getClassLoader(c);, +        String cname = convertName(name, c);, +    private static String convertName(String name, Class c) {, +    public static InputStream getResourceAsStream(String name, Class context) {, +        URL url = getResource(name, context);, +    public static InputStream getResourceRelativeAsStream(String name, , +            Class context) {, +        URL url = getResourceRelative(name, context);]
[+++ b/src/main/java/org/jfree/chart/text/AttributedStringUtils.java, + * Some utility methods for working with {@code AttributedString} objects., +     * @param s1  string 1 ({@code null} permitted)., +     * @param s2  string 2 ({@code null} permitted)., +     * @return {@code true} if {@code s1} and {@code s2} are, +     *         equal or both {@code null}, and {@code false} ]
[+++ b/src/main/java/org/jfree/chart/text/TextLine.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public TextLine(String text) {, +    public TextLine(String text, Font font) {, +    public TextLine(String text, Font font, Paint paint) {, +    public void addFragment(TextFragment fragment) {, +    public void removeFragment(TextFragment fragment) {, +    public Size2D calculateDimensions(Graphics2D g2) {, +    private float calculateBaselineOffset(Graphics2D g2, TextAnchor anchor) {, +    @Override, +    public boolean equals(Object obj) {, +    @Override, +++ b/src/main/java/org/jfree/chart/text/TextLine.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public TextLine(String text) {, +    public TextLine(String text, Font font) {, +    public TextLine(String text, Font font, Paint paint) {, +    public void addFragment(TextFragment fragment) {, +    public void removeFragment(TextFragment fragment) {, +    public Size2D calculateDimensions(Graphics2D g2) {, +    private float calculateBaselineOffset(Graphics2D g2, TextAnchor anchor) {, +    @Override, +    public boolean equals(Object obj) {, +    @Override, +++ b/src/main/java/org/jfree/chart/text/package-info.java, +/**, + * Text-related classes formerly in the JCommon class library., + */, +package org.jfree.chart.text;]
[+++ b/tests/org/jfree/chart/renderer/xy/junit/RendererXYPackageTests.java, +        suite.addTestSuite(XYSplineRendererTests.class);, +++ b/tests/org/jfree/chart/renderer/xy/junit/RendererXYPackageTests.java, +        suite.addTestSuite(XYSplineRendererTests.class);, +++ /dev/null, +++ b/tests/org/jfree/chart/renderer/xy/junit/RendererXYPackageTests.java, +        suite.addTestSuite(XYSplineRendererTests.class);, +++ /dev/null, +++ b/tests/org/jfree/chart/renderer/xy/junit/XYSplineRendererTests.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it , + * under the terms of the GNU Lesser General Public License as published by , + * the Free Software Foundation; either version 2.1 of the License, or , + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but , + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY , + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public , + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, , + * USA.  , + *, + * [Java is a trademark or registered trademark of Sun Microsystems, Inc. , + * in the United States and other countries.], + *, + * --------------------------, + * XYSplineRendererTests.java, + * --------------------------, + * (C) Copyright 2007, by Object Refinery Limited and Contributors., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes, + * -------, + * 25-Jul-2007 : Version 1 (DG);, + * , + */, +, +package org.jfree.chart.renderer.xy.junit;, +, +import java.awt.geom.Rectangle2D;, +import java.io.ByteArrayInputStream;, +import java.io.ByteArrayOutputStream;, +import java.io.ObjectInput;, +import java.io.ObjectInputStream;, +import java.io.ObjectOutput;, +import java.io.ObjectOutputStream;, +, +import junit.framework.Test;, +import junit.framework.TestCase;, +import junit.framework.TestSuite;, +, +import org.jfree.chart.renderer.xy.XYSplineRenderer;, +, +/**, + * Tests for the {@link XYSplineRenderer} class., + */, +public class XYSplineRendererTests extends TestCase {, +, +    /**, +     * Returns the tests as a test suite., +     *, +     * @return The test suite., +     */, +    public static Test suite() {, +        return new TestSuite(XYSplineRendererTests.class);, +    }, +, +    /**, +     * Constructs a new set of tests., +     *, +     * @param name  the name of the tests., +     */, +    public XYSplineRendererTests(String name) {, +        super(name);, +    }, +, +    /**, +     * Test that the equals() method distinguishes all fields., +     */, +    public void testEquals() {, +        , +        XYSplineRenderer r1 = new XYSplineRenderer();, +        XYSplineRenderer r2 = new XYSplineRenderer();, +        assertEquals(r1, r2);, +        assertEquals(r2, r1);, +    , +        r1.setPrecision(9);, +        assertFalse(r1.equals(r2));]
[+++ b/src/main/java/org/jfree/chart/plot/DefaultDrawingSupplier.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited., +            Color.LIGHT_GRAY};, +            Color.WHITE};, +++ b/src/main/java/org/jfree/chart/plot/DefaultDrawingSupplier.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited., +            Color.LIGHT_GRAY};, +            Color.WHITE};, +++ b/src/main/java/org/jfree/chart/plot/MeterPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Hari and Contributors., +    static final Paint DEFAULT_DIAL_BACKGROUND_PAINT = Color.BLACK;, +    static final Paint DEFAULT_NEEDLE_PAINT = Color.GREEN;, +    static final Paint DEFAULT_VALUE_PAINT = Color.YELLOW;, +        this.tickPaint = Color.WHITE;, +        this.tickLabelPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/DefaultDrawingSupplier.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2017, by Object Refinery Limited., +            Color.LIGHT_GRAY};, +            Color.WHITE};, +++ b/src/main/java/org/jfree/chart/plot/MeterPlot.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by Hari and Contributors., +    static final Paint DEFAULT_DIAL_BACKGROUND_PAINT = Color.BLACK;, +    static final Paint DEFAULT_NEEDLE_PAINT = Color.GREEN;, +    static final Paint DEFAULT_VALUE_PAINT = Color.YELLOW;, +        this.tickPaint = Color.WHITE;, +        this.tickLabelPaint = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2006-2017, by Object Refinery Limited., +        this(0.0, 100.0, Color.WHITE);]
[+++ b/pom.xml, +                        <include>**/*Test.java</include>]
[+++ b/src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java, + * (C) Copyright 2000-2018, by Object Refinery Limited and Contributors., + * (C) Copyright 2003-2018, by Object Refinery Limited., +        // store the current time zone, +        TimeZone saved = TimeZone.getDefault();, +        TimeZone.setDefault(TimeZone.getTimeZone("Europe/Paris"));, +]
[+++ b/ant/build-swt.xml, +        <property name="swt.jar" value="your/path/to/swt-3.4/swt.jar"/>]
[+++ b/src/main/java/org/jfree/data/general/SubSeriesDataset.java, +     * {@code parent}.  The series to use are passed as an array of int., +     * Creates a SubSeriesDataset using one series from {@code parent}., +++ b/src/main/java/org/jfree/data/general/SubSeriesDataset.java, +     * {@code parent}.  The series to use are passed as an array of int., +     * Creates a SubSeriesDataset using one series from {@code parent}., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, +     * {@code JSONStreamAware} and {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/general/SubSeriesDataset.java, +     * {@code parent}.  The series to use are passed as an array of int., +     * Creates a SubSeriesDataset using one series from {@code parent}., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, +     * {@code JSONStreamAware} and {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, +     * {@code JSONAware} or {@code JSONStreamAware} specific , +     * If this map is also a {@link JSONAware}, {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/general/SubSeriesDataset.java, +     * {@code parent}.  The series to use are passed as an array of int., +     * Creates a SubSeriesDataset using one series from {@code parent}., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, +     * {@code JSONStreamAware} and {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, +     * {@code JSONAware} or {@code JSONStreamAware} specific , +     * If this map is also a {@link JSONAware}, {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONValue.java, +     * If this object is a {@code Map} or a {@code List}, and it's , +     * {@code JSONStreamAware} or {@code JSONAware} will be , +++ b/src/main/java/org/jfree/data/general/SubSeriesDataset.java, +     * {@code parent}.  The series to use are passed as an array of int., +     * Creates a SubSeriesDataset using one series from {@code parent}., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, +     * {@code JSONStreamAware} and {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, +     * {@code JSONAware} or {@code JSONStreamAware} specific , +     * If this map is also a {@link JSONAware}, {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONValue.java, +     * If this object is a {@code Map} or a {@code List}, and it's , +     * {@code JSONStreamAware} or {@code JSONAware} will be , +++ b/src/main/java/org/jfree/data/time/Quarter.java, +     * Creates a new {@code Quarter} instance, using the specified, +     * {@code http://developer.java.sun.com/developer/Books/effectivejava, +     * /Chapter3.pdf}, +++ b/src/main/java/org/jfree/data/general/SubSeriesDataset.java, +     * {@code parent}.  The series to use are passed as an array of int., +     * Creates a SubSeriesDataset using one series from {@code parent}., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, +     * {@code JSONStreamAware} and {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, +     * {@code JSONAware} or {@code JSONStreamAware} specific , +     * If this map is also a {@link JSONAware}, {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONValue.java, +     * If this object is a {@code Map} or a {@code List}, and it's , +     * {@code JSONStreamAware} or {@code JSONAware} will be , +++ b/src/main/java/org/jfree/data/time/Quarter.java, +     * Creates a new {@code Quarter} instance, using the specified, +     * {@code http://developer.java.sun.com/developer/Books/effectivejava, +     * /Chapter3.pdf}, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +     * method returns a new {@code Date} instance every time it is called., +     * method returns a new {@code Date} instance every time it is called., +     * specified {@code anchor} using the supplied {@code calendar} , +++ b/src/main/java/org/jfree/data/general/SubSeriesDataset.java, +     * {@code parent}.  The series to use are passed as an array of int., +     * Creates a SubSeriesDataset using one series from {@code parent}., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, +     * {@code JSONStreamAware} and {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, +     * {@code JSONAware} or {@code JSONStreamAware} specific , +     * If this map is also a {@link JSONAware}, {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONValue.java, +     * If this object is a {@code Map} or a {@code List}, and it's , +     * {@code JSONStreamAware} or {@code JSONAware} will be , +++ b/src/main/java/org/jfree/data/time/Quarter.java, +     * Creates a new {@code Quarter} instance, using the specified, +     * {@code http://developer.java.sun.com/developer/Books/effectivejava, +     * /Chapter3.pdf}, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java, +     * method returns a new {@code Date} instance every time it is called., +     * method returns a new {@code Date} instance every time it is called., +     * specified {@code anchor} using the supplied {@code calendar} , +++ b/src/main/java/org/jfree/data/time/SimpleTimePeriod.java, + * {@code java.util.Date}., +     * {@code http://developer.java.sun.com/, +     * developer/Books/effectivejava/Chapter3.pdf}, +++ b/src/main/java/org/jfree/data/general/SubSeriesDataset.java, +     * {@code parent}.  The series to use are passed as an array of int., +     * Creates a SubSeriesDataset using one series from {@code parent}., +++ b/src/main/java/org/jfree/data/json/impl/JSONArray.java, +     * {@code JSONStreamAware} and {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONObject.java, +     * {@code JSONAware} or {@code JSONStreamAware} specific , +     * If this map is also a {@link JSONAware}, {@code JSONAware} specific , +++ b/src/main/java/org/jfree/data/json/impl/JSONValue.java, +     * If this object is a {@code Map} or a {@code List}, and it's , +     * {@code JSONStreamAware} or {@code JSONAware} will be , +++ b/src/main/java/org/jfree/data/time/Quarter.java, +     * Creates a new {@code Quarter} instance, using the specified, +     * {@code http://developer.java.sun.com/developer/Books/effectivejava, +     * /Chapter3.pdf}, +++ b/src/main/java/org/jfree/data/time/RegularTimePeriod.java]
[+++ b/ChangeLog, +2013-08-01  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/experimental/swt/SWTGraphics2D.java, +    (SWTGraphics2D): Set default stroke,, +    (setPaint): Do nothing for null,, +    (setColor): Likewise,, +    (setBackground): Store color for later, don't update GC now,, +    (getBackground): Return stored color,, +    (setComposite): Throw IllegalArgumentException for null,, +    (setStroke): Likewise,, +    (clipRect): Fix to apply intersect operation,, +    (rotate(double)): Reimplemented,, +    (rotate(double, double, double)): Implemented,, +    (shear): Reimplemented,, +    (clearRect): Do nothing if background color is null,, +    (drawGlyphVector): Implemented,, +    (drawString(String, int, int)): Delegate,, +    (drawString(String, float, float)): Check for null string,, +    (hit): Implemented., +, +++ b/ChangeLog, +2013-08-01  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/experimental/swt/SWTGraphics2D.java, +    (SWTGraphics2D): Set default stroke,, +    (setPaint): Do nothing for null,, +    (setColor): Likewise,, +    (setBackground): Store color for later, don't update GC now,, +    (getBackground): Return stored color,, +    (setComposite): Throw IllegalArgumentException for null,, +    (setStroke): Likewise,, +    (clipRect): Fix to apply intersect operation,, +    (rotate(double)): Reimplemented,, +    (rotate(double, double, double)): Implemented,, +    (shear): Reimplemented,, +    (clearRect): Do nothing if background color is null,, +    (drawGlyphVector): Implemented,, +    (drawString(String, int, int)): Delegate,, +    (drawString(String, float, float)): Check for null string,, +    (hit): Implemented., +, +++ b/NEWS, +Improved the consistency of the SWTGraphics2D implementation, plus various, +bug fixes., +, +++ b/ChangeLog, +2013-08-01  David Gilbert  <david.gilbert@object-refinery.com>, +, +    * org/jfree/experimental/swt/SWTGraphics2D.java, +    (SWTGraphics2D): Set default stroke,, +    (setPaint): Do nothing for null,, +    (setColor): Likewise,, +    (setBackground): Store color for later, don't update GC now,, +    (getBackground): Return stored color,, +    (setComposite): Throw IllegalArgumentException for null,, +    (setStroke): Likewise,, +    (clipRect): Fix to apply intersect operation,, +    (rotate(double)): Reimplemented,, +    (rotate(double, double, double)): Implemented,, +    (shear): Reimplemented,, +    (clearRect): Do nothing if background color is null,, +    (drawGlyphVector): Implemented,, +    (drawString(String, int, int)): Delegate,, +    (drawString(String, float, float)): Check for null string,, +    (hit): Implemented., +, +++ b/NEWS, +Improved the consistency of the SWTGraphics2D implementation, plus various, +bug fixes., +, +++ b/README.txt]
[+++ b/src/main/java/org/jfree/chart/util/BooleanList.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, +    public Boolean getBoolean(int index) {, +    public void setBoolean(int index, Boolean b) {, +    @Override, +    public boolean equals(Object o) {, +    @Override]
[+++ b/src/main/java/org/jfree/chart/ui/Size2D.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + */, +, + * better to use {@code Dimension2D}, but this class is broken on various, +     * @param obj  the object ({@code null} permitted).]
[+++ b/src/test/java/org/jfree/chart/TestUtils.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * --------------, + * TestUtils.java, + * --------------, + * (C) Copyright 2007-2017, by Object Refinery Limited., +++ b/src/test/java/org/jfree/chart/TestUtils.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * --------------, + * TestUtils.java, + * --------------, + * (C) Copyright 2007-2017, by Object Refinery Limited., +++ b/src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java, +     * {@link DatasetUtils#findDomainBounds(org.jfree.data.xy.XYDataset,]
[+++ b/source/org/jfree/chart/ChartPanel.java, +            JMenu saveSubMenu = new JMenu(localizationResources.getString(, +                    "Save_as"));, +            JMenuItem pngItem = new JMenuItem(localizationResources.getString(, +                    "PNG..."));, +                JMenuItem svgItem = new JMenuItem(localizationResources.getString(, +                        "SVG..."));, +                JMenuItem pdfItem = new JMenuItem(, +                        localizationResources.getString("PDF..."));, +++ b/source/org/jfree/chart/ChartPanel.java, +            JMenu saveSubMenu = new JMenu(localizationResources.getString(, +                    "Save_as"));, +            JMenuItem pngItem = new JMenuItem(localizationResources.getString(, +                    "PNG..."));, +                JMenuItem svgItem = new JMenuItem(localizationResources.getString(, +                        "SVG..."));, +                JMenuItem pdfItem = new JMenuItem(, +                        localizationResources.getString("PDF..."));, +++ b/source/org/jfree/chart/LocalizationBundle.properties, +# 27-Nov-2013 : Added PNG..., PDF..., Save_as and SVG... (DG), +PNG...=PNG..., +PDF...=PDF..., +Save_as=Save as, +SVG...=SVG...]
[+++ b/ChangeLog, +2011-11-13  David Gilbert <david.gilbert@object-refinery.com>, +, +    Patch 3435734 by Martin Hoeller:, +    * org/jfree/chart/renderer/category/LineRenderer3D.java, +    (drawItem): Draw lines in pass 0 and item labels in pass 1;, +, +++ b/ChangeLog, +2011-11-13  David Gilbert <david.gilbert@object-refinery.com>, +, +    Patch 3435734 by Martin Hoeller:, +    * org/jfree/chart/renderer/category/LineRenderer3D.java, +    (drawItem): Draw lines in pass 0 and item labels in pass 1;, +, +++ b/NEWS, +13 November 2011, +3435734 : Fix lines overlapping item labels (by Martin Hoeller);, +++ b/ChangeLog, +2011-11-13  David Gilbert <david.gilbert@object-refinery.com>, +, +    Patch 3435734 by Martin Hoeller:, +    * org/jfree/chart/renderer/category/LineRenderer3D.java, +    (drawItem): Draw lines in pass 0 and item labels in pass 1;, +, +++ b/NEWS, +13 November 2011, +3435734 : Fix lines overlapping item labels (by Martin Hoeller);, +++ b/README.txt, +13 November 2011, +1.0.14 : (13-Nov-2011), +++ b/ChangeLog, +2011-11-13  David Gilbert <david.gilbert@object-refinery.com>, +, +    Patch 3435734 by Martin Hoeller:, +    * org/jfree/chart/renderer/category/LineRenderer3D.java, +    (drawItem): Draw lines in pass 0 and item labels in pass 1;, +, +++ b/NEWS, +13 November 2011, +3435734 : Fix lines overlapping item labels (by Martin Hoeller);, +++ b/README.txt, +13 November 2011, +1.0.14 : (13-Nov-2011), +++ b/source/org/jfree/chart/renderer/category/LineRenderer3D.java, + * (C) Copyright 2004-2011, by Tobias Selb and Contributors., + *                   Martin Hoeller (patch 3435374);, + * 13-Nov-2011 : Fixed item labels overlapped by line - patch 3435374 (MH);, +        super(true, false);  // create a line renderer only, +     * Sets the paint used to highlight the left and bottom walls in the plot, +        if (pass == 0 && getItemLineVisible(row, column)) {, +        if (pass == 1 && isItemLabelVisible(row, column)) {]
[+++ b/.gitignore, +, +# Intellij Idea, +.idea, +++ b/.gitignore, +, +# Intellij Idea, +.idea, +++ b/README.md, +[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.jfree/jfreechart/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.jfree/jfreechart)]
[+++ b/jsfreechart/BarChartDemo.html, +<!DOCTYPE html>, +<html>, +    <head>, +        <title>Bar Chart Demo</title>, +        <meta charset="UTF-8">, +        <meta name="viewport" content="width=device-width, initial-scale=1.0">  , +        <script type="text/javascript" src="lib/jsfreechart.js"></script>, +        <style>       , +            .chart_container { height: 100%; width: 100%; }, +            body { margin: 0; border: 2px; padding: 5px; }, +            .row, .col { overflow: hidden; position: absolute; }, +            .row { left: 0; right: 0; }, +            .col { top: 0; bottom: 0; }, +            .scroll-x { overflow-x: none; }, +            .scroll-y { overflow-y: none; }, +, +            .header.row { height: 105px; top: 0; }, +            .body.row { top: 105px; bottom: 50px; }, +            .footer.row { height: 50px; bottom: 0; }, +        </style>, +    </head>, +    <body onload="installChart();">, +        <script type="application/javascript">, +            function installChart() {, +                var dataset = new jsfc.KeyedValues2DDataset();, +                dataset.add("Warm-up", "JFreeSVG", 7445);, +                dataset.add("Warm-up", "Batik", 24448);, +                dataset.add("Test", "JFreeSVG", 4297);, +                dataset.add("Test", "Batik", 21022);, +                var chart = jsfc.Charts.createBarChart("Performance: JFreeSVG vs Batik", , +                        "Time to generate 1000 charts in SVG (lower bars = better performance)",, +                        dataset, null, "Milliseconds");, +                chart.setSize(600, 400);, +                var svg = document.getElementById("chart_svg");, +                document.chartManager = new jsfc.ChartManager(svg, chart);, +                document.chartManager.refreshDisplay();                , +                var win = document.defaultView || document.parentWindow;, +                win.onresize = resize;, +            };, +            function resize(evt) {, +                var element = document.getElementById("bar_chart_1");, +                var w = Math.max(300, element.clientWidth);, +                var h = Math.max(200, element.clientHeight);, +                document.chartManager.getChart().setSize(w, h);, +                document.chartManager.refreshDisplay();, +            }, +            , +        </script>   , +        <div class="header row">, +            <h4>Resizing Chart Demo:</h4>, +            <p>In this demo we have a chart that resizes according to the resizing, +                of its container.</p>, +        </div>, +        <div class="body row scroll-x scroll-y">, +            <div id="bar_chart_1" class="chart_container">, +                <svg id="chart_svg" width="100%" height="100%"></svg>                , +            </div>, +        </div>, +        <div class="footer row">, +            <p id="debug">This is a footer, part of the HTML not the chart.</p>, +        </div>, +    </body>, +</html>, +++ b/jsfreechart/BarChartDemo.html, +<!DOCTYPE html>, +<html>, +    <head>, +        <title>Bar Chart Demo</title>, +        <meta charset="UTF-8">, +        <meta name="viewport" content="width=device-width, initial-scale=1.0">  , +        <script type="text/javascript" src="lib/jsfreechart.js"></script>, +        <style>       , +            .chart_container { height: 100%; width: 100%; }, +            body { margin: 0; border: 2px; padding: 5px; }, +            .row, .col { overflow: hidden; position: absolute; }, +            .row { left: 0; right: 0; }, +            .col { top: 0; bottom: 0; }, +            .scroll-x { overflow-x: none; }, +            .scroll-y { overflow-y: none; }, +, +            .header.row { height: 105px; top: 0; }, +            .body.row { top: 105px; bottom: 50px; }, +            .footer.row { height: 50px; bottom: 0; }, +        </style>, +    </head>, +    <body onload="installChart();">, +        <script type="application/javascript">, +            function installChart() {, +                var dataset = new jsfc.KeyedValues2DDataset();, +                dataset.add("Warm-up", "JFreeSVG", 7445);, +                dataset.add("Warm-up", "Batik", 24448);, +                dataset.add("Test", "JFreeSVG", 4297);, +                dataset.add("Test", "Batik", 21022);, +                var chart = jsfc.Charts.createBarChart("Performance: JFreeSVG vs Batik", , +                        "Time to generate 1000 charts in SVG (lower bars = better performance)",, +                        dataset, null, "Milliseconds");, +                chart.setSize(600, 400);, +                var svg = document.getElementById("chart_svg");, +                document.chartManager = new jsfc.ChartManager(svg, chart);]
[+++ b/src/main/java/org/jfree/chart/util/ObjectList.java, +     * Returns the object at the specified index, if there is one, or {@code null}.         , +     * @return The object or {@code null}.          , +     * @param object  the object ({@code null} permitted).          ]
[+++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +     * The label format string used by a {@code MessageFormat} object to, +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +     * The label format string used by a {@code MessageFormat} object to, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, + * {@code XYPlot} makes use of an {@link XYItemRenderer} to draw each point, +     * Creates a new {@code XYPlot} instance with no dataset, no axes and, +     * {@code NullPointerException} may be thrown)., +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +     * The label format string used by a {@code MessageFormat} object to, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, + * {@code XYPlot} makes use of an {@link XYItemRenderer} to draw each point, +     * Creates a new {@code XYPlot} instance with no dataset, no axes and, +     * {@code NullPointerException} may be thrown)., +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java, +     * Creates a new instance of {@code DialTextAnnotation}., +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +     * The label format string used by a {@code MessageFormat} object to, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, + * {@code XYPlot} makes use of an {@link XYItemRenderer} to draw each point, +     * Creates a new {@code XYPlot} instance with no dataset, no axes and, +     * {@code NullPointerException} may be thrown)., +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java, +     * Creates a new instance of {@code DialTextAnnotation}., +++ b/src/main/java/org/jfree/chart/renderer/PaintScale.java, + * {@code PublicCloneable} and {@code Serializable}, so, +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +     * The label format string used by a {@code MessageFormat} object to, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, + * {@code XYPlot} makes use of an {@link XYItemRenderer} to draw each point, +     * Creates a new {@code XYPlot} instance with no dataset, no axes and, +     * {@code NullPointerException} may be thrown)., +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java, +     * Creates a new instance of {@code DialTextAnnotation}., +++ b/src/main/java/org/jfree/chart/renderer/PaintScale.java, + * {@code PublicCloneable} and {@code Serializable}, so, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBarPainter.java, + * <li>the {@code equals(Object)} method should be overridden;</li>, + *     {@code PublicCloneable} interface, so that a renderer using the, + * <li>the class should be {@code Serializable}, otherwise chart, +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +     * The label format string used by a {@code MessageFormat} object to, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, + * {@code XYPlot} makes use of an {@link XYItemRenderer} to draw each point, +     * Creates a new {@code XYPlot} instance with no dataset, no axes and, +     * {@code NullPointerException} may be thrown)., +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java, +     * Creates a new instance of {@code DialTextAnnotation}., +++ b/src/main/java/org/jfree/chart/renderer/PaintScale.java, + * {@code PublicCloneable} and {@code Serializable}, so, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBarPainter.java, + * <li>the {@code equals(Object)} method should be overridden;</li>, + *     {@code PublicCloneable} interface, so that a renderer using the, + * <li>the class should be {@code Serializable}, otherwise chart, +++ b/src/main/java/org/jfree/chart/urls/CustomPieURLGenerator.java, +     * Creates a new {@code CustomPieURLGenerator} instance, initially, +     * Adds a map containing {@code (key, URL)} mappings where each, +     * {@code key} is an instance of {@code Comparable}, +     * {@code URL} is a {@code String} representing a URL fragment., +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +     * The label format string used by a {@code MessageFormat} object to, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, + * {@code XYPlot} makes use of an {@link XYItemRenderer} to draw each point, +     * Creates a new {@code XYPlot} instance with no dataset, no axes and, +     * {@code NullPointerException} may be thrown)., +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java, +     * Creates a new instance of {@code DialTextAnnotation}., +++ b/src/main/java/org/jfree/chart/renderer/PaintScale.java, + * {@code PublicCloneable} and {@code Serializable}, so, +++ b/src/main/java/org/jfree/chart/renderer/xy/XYBarPainter.java, + * <li>the {@code equals(Object)} method should be overridden;</li>, + *     {@code PublicCloneable} interface, so that a renderer using the, + * <li>the class should be {@code Serializable}, otherwise chart, +++ b/src/main/java/org/jfree/chart/urls/CustomPieURLGenerator.java, +     * Creates a new {@code CustomPieURLGenerator} instance, initially, +     * Adds a map containing {@code (key, URL)} mappings where each, +     * {@code key} is an instance of {@code Comparable}, +     * {@code URL} is a {@code String} representing a URL fragment., +++ b/src/main/java/org/jfree/data/DataUtilities.java, +     * {@code double} primitives., +     * @return An array of {@code double}., +     * corresponding structure containing {@code double} primitives., +     * @return An array of {@code double}., +++ b/src/main/java/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java, +     * The label format string used by a {@code MessageFormat} object to, +++ b/src/main/java/org/jfree/chart/plot/XYPlot.java, + * {@code XYPlot} makes use of an {@link XYItemRenderer} to draw each point, +     * Creates a new {@code XYPlot} instance with no dataset, no axes and, +     * {@code NullPointerException} may be thrown)., +     * The {@code info} and {@code crosshairState} arguments may be, +++ b/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java, +     * Creates a new instance of {@code DialTextAnnotation}., +++ b/src/main/java/org/jfree/chart/renderer/PaintScale.java, + * {@code PublicCloneable} and {@code Serializable}, so]
[+++ b/maven-jfreechart-project.xml]
[+++ b/ant/build.xml, +        <property name="jfreesvg.name" value="jfreesvg" />, +        <property name="jfreesvg.version" value="1.2" />, +        <property name="orsonpdf.name" value="orsonpdf" />, +        <property name="orsonpdf.version" value="1.2-eval" />, +        <copy file="${basedir}/lib/${jfreesvg.name}-${jfreesvg.version}.jar" tofile="${basedir}/distribution/lib/${jfreesvg.name}-${jfreesvg.version}.jar" />, +        <copy file="${basedir}/lib/${orsonpdf.name}-${orsonpdf.version}.jar" tofile="${basedir}/distribution/lib/${orsonpdf.name}-${orsonpdf.version}.jar" />]
[+++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, +import java.awt.Font;, +                Font savedFont = g2.getFont();, +                g2.setFont(crosshair.getLabelFont());, +                if (crosshair.isLabelOutlineVisible()) {, +                }, +                g2.setPaint(crosshair.getLabelPaint());, +                g2.setFont(savedFont);, +                Font savedFont = g2.getFont();, +                g2.setFont(crosshair.getLabelFont());, +                if (crosshair.isLabelOutlineVisible()) {, +                }, +                g2.setPaint(crosshair.getLabelPaint());, +                g2.setFont(savedFont);, +++ b/src/main/java/org/jfree/chart/panel/CrosshairOverlay.java, +import java.awt.Font;, +                Font savedFont = g2.getFont();, +                g2.setFont(crosshair.getLabelFont());, +                if (crosshair.isLabelOutlineVisible()) {, +                }, +                g2.setPaint(crosshair.getLabelPaint());, +                g2.setFont(savedFont);, +                Font savedFont = g2.getFont();, +                g2.setFont(crosshair.getLabelFont());, +                if (crosshair.isLabelOutlineVisible()) {, +                }, +                g2.setPaint(crosshair.getLabelPaint());, +                g2.setFont(savedFont);, +++ b/src/main/java/org/jfree/chart/plot/Crosshair.java, +        Double old = this.labelXOffset;, +        this.pcs.firePropertyChange("labelXOffset", old, offset);, +        Double old = this.labelYOffset;, +        this.pcs.firePropertyChange("labelYOffset", old, offset);, +     * Returns the label paint.  The default value is {@code Color.BLACK}., +     * The default value is {@code true}.]
[+++ b/tests/org/jfree/chart/AreaChartTest.java, +/* ===========================================================, + * JFreeChart : a free chart library for the Java(tm) platform, + * ===========================================================, + *, + * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors., + *, + * Project Info:  http://www.jfree.org/jfreechart/index.html, + *, + * This library is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as published by, + * the Free Software Foundation; either version 2.1 of the License, or, + * (at your option) any later version., + *, + * This library is distributed in the hope that it will be useful, but, + * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY, + * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public, + * License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this library; if not, write to the Free Software, + * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,, + * USA., + *, + * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. , + * Other names may be trademarks of their respective owners.], + *, + * ------------------, + * AreaChartTest.java, + * ------------------, + * (C) Copyright 2005-2013, by Object Refinery Limited., + *, + * Original Author:  David Gilbert (for Object Refinery Limited);, + * Contributor(s):   -;, + *, + * Changes:, + * --------, + * 12-Apr-2005 : Version 1 (DG);, + *, + */, +, +package org.jfree.chart;, +, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +, +import java.awt.Graphics2D;, +import java.awt.geom.Rectangle2D;, +import java.awt.image.BufferedImage;, +, +import org.jfree.chart.axis.ValueAxis;, +import org.jfree.chart.event.ChartChangeEvent;, +import org.jfree.chart.event.ChartChangeListener;, +import org.jfree.chart.labels.CategoryToolTipGenerator;, +import org.jfree.chart.labels.StandardCategoryToolTipGenerator;, +import org.jfree.chart.plot.CategoryPlot;, +import org.jfree.chart.plot.PlotOrientation;, +import org.jfree.chart.renderer.category.CategoryItemRenderer;, +import org.jfree.chart.urls.CategoryURLGenerator;, +import org.jfree.chart.urls.StandardCategoryURLGenerator;, +import org.jfree.data.Range;, +import org.jfree.data.category.CategoryDataset;, +import org.jfree.data.general.DatasetUtilities;, +import org.junit.Before;, +import org.junit.Test;, +, +/**, + * Tests for an area chart., + */, +public class AreaChartTest {, +, +    /** A chart. */, +    private JFreeChart chart;, +, +    /**, +     * Common test setup., +     */, +    @Before, +    public void setUp() {, +        this.chart = createAreaChart();, +    }, +, +    /**, +     * Check that setting a tool tip generator for a series does override the, +     * default generator., +     */, +    @Test, +    public void testSetSeriesToolTipGenerator() {, +        CategoryPlot plot = (CategoryPlot) this.chart.getPlot();, +        CategoryItemRenderer renderer = plot.getRenderer();, +        StandardCategoryToolTipGenerator tt, +                = new StandardCategoryToolTipGenerator();, +        renderer.setSeriesToolTipGenerator(0, tt);, +        CategoryToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);, +        assertTrue(tt2 == tt);, +    }, +, +    /**, +     * Check that setting a URL generator for a series does override the]
[+++ b/src/main/java/org/jfree/chart/title/DateTitle.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by David Berry and Contributors., +                Color.BLACK);, +++ b/src/main/java/org/jfree/chart/title/DateTitle.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by David Berry and Contributors., +                Color.BLACK);, +++ b/src/main/java/org/jfree/chart/title/LegendTitle.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited., +    public static final Paint DEFAULT_ITEM_PAINT = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/title/DateTitle.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2000-2017, by David Berry and Contributors., +                Color.BLACK);, +++ b/src/main/java/org/jfree/chart/title/LegendTitle.java, + * (C) Copyright 2000-2017, by Object Refinery Limited and Contributors., + * (C) Copyright 2002-2017, by Object Refinery Limited., +    public static final Paint DEFAULT_ITEM_PAINT = Color.BLACK;, +++ b/src/main/java/org/jfree/chart/title/TextTitle.java, +    public static final Paint DEFAULT_TEXT_PAINT = Color.BLACK;]
[+++ b/ant/build.xml, +        <property name="jcommon.version" value="1.0.22" />, +        <property name="jfreesvg.version" value="1.9" />, +        <property name="orsonpdf.version" value="1.6-eval" />, +        <property name="orsoncharts.version" value="1.4-eval" />, +            <exclude name="org/jfree/chart/fx/**"/>]
[+++ b/src/main/java/org/jfree/chart/util/ArrayUtils.java, +     * Returns {@code true} if all the references in {@code array1}, +     * are equal to all the references in {@code array2} (two, +     * {@code null} references are considered equal for this test)., +     * @param array1  the first array ({@code null} permitted)., +     * @param array2  the second array ({@code null} permitted)., +     * @param array1  the first array ({@code null} permitted)., +     * @param array2  the second arrray ({@code null} permitted)., +     * Returns {@code true} if any two items in the array are equal to, +     * one another.  Any {@code null} values in the array are ignored.]
[+++ b/ant/build.xml, +        <!-- copy across .png files -->, +        <copy todir="${basedir}/javadoc/images">, +            <fileset dir="${basedir}/docfiles">, +                <include name="*.png" />, +            </fileset>, +        </copy>, +        <copy todir="${basedir}/distribution/docfiles">, +            <fileset dir="${basedir}/docfiles">, +            </fileset>, +        </copy>     , +]
[+++ b/pom.xml, +    <version>1.5.0</version>, +                        <groupId>org.apache.maven.plugins</groupId>, +                        <artifactId>maven-gpg-plugin</artifactId>, +                        <version>1.5</version>, +                        <executions>, +                            <execution>, +                                <id>sign-artifacts</id>, +                                <phase>verify</phase>, +                                <goals>, +                                    <goal>sign</goal>, +                                </goals>, +                            </execution>, +                        </executions>, +                    </plugin> , +, +                    <plugin>, +                        <groupId>org.sonatype.plugins</groupId>, +                        <artifactId>nexus-staging-maven-plugin</artifactId>, +                        <version>1.6.7</version>, +                        <extensions>true</extensions>, +                        <configuration>, +                            <serverId>ossrh</serverId>, +                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>, +                            <autoReleaseAfterClose>false</autoReleaseAfterClose>, +                        </configuration>, +                    </plugin>, +, +                    <plugin>, +, +]
[+++ b/src/main/java/org/jfree/chart/date/SpreadsheetDate.java, +    public SpreadsheetDate(int day, int month, int year) {, +                "The 'year' argument must be in range 1900 to 9999.");, +                "The 'month' argument must be in the range 1 to 12.");, +        } else {, +    public SpreadsheetDate(int serial) {, +        } else {, +    @Override, +     * Returns a {@code java.util.Date} equivalent to this date., +    @Override, +        Calendar calendar = Calendar.getInstance();, +    @Override, +    @Override, +    @Override, +     * {@code SUNDAY}, {@code MONDAY}, {@code TUESDAY}, , +     * {@code WEDNESDAY}, {@code THURSDAY}, {@code FRIDAY}, and , +     * {@code SATURDAY}., +    @Override, +     * @param object  the object to compare ({@code null} permitted)., +    public boolean equals(Object object) {, +            SerialDate s = (SerialDate) object;, +        } else {, +    @Override, +    @Override, +    public int compare(SerialDate other) {, +    @Override, +    public int compareTo(Object other) {, +     * @return {@code true} if this SerialDate represents the same date as, +    @Override, +    public boolean isOn(SerialDate other) {, +     * @return {@code true} if this SerialDate represents an earlier date, +    @Override, +    public boolean isBefore(SerialDate other) {, +     * @return {@code true} if this SerialDate represents the same date, +    public boolean isOnOrBefore(SerialDate other) {, +     * @return {@code true} if this SerialDate represents the same date, +    @Override, +    public boolean isAfter(SerialDate other) {, +     * @return {@code true} if this SerialDate represents the same date as, +    @Override, +    public boolean isOnOrAfter(SerialDate other) {, +     * Returns {@code true} if this {@link SerialDate} is within the , +    @Override, +    public boolean isInRange(SerialDate d1, SerialDate d2) {, +     * @return {@code true} if this SerialDate is within the specified , +    @Override, +    public boolean isInRange(SerialDate d1, SerialDate d2, int include) {, +        int s1 = d1.toSerial();, +        int s2 = d2.toSerial();, +        int start = Math.min(s1, s2);, +        int end = Math.max(s1, s2);, +        int s = toSerial();, +    private int calcSerial(int d, final int m, final int y) {]
[+++ b/NEWS, +JFreeChart 1.0.10, +-----------------, +11 April 2008, +, +This release contains various bug fixes and minor enhancements to JFreeChart., +PiePlot labelling has been enhanced (new curve options, and more robust bounds, +checking).  The BoxAndWhiskerRenderer now has a maximumBarWidth attribute, the , +XYStepRenderer has a new stepPoint attribute.  The RelativeDateFormat class , +has new options., +, +API Adjustments:, +, +- BoxAndWhiskerRenderer - added maximumBarWidth attribute (see patch 1866446);, +- DatasetUtilities - iterateCategoryRangeBounds() is deprecated, the method, +    has been renamed iterateRangeBounds(CategoryDataset) for consistency;, +- DefaultKeyedValue - the constructor now prevents a null key;, +- LogFormat - now has a 'powerLabel' attribute;, +- TimeSeriesCollection - getSeries(String) changed to getSeries(Comparable);, +- XIntervalSeriesCollection - added series removal methods;, +- YIntervalSeriesCollection - added series removal methods;, +- XYIntervalSeriesCollection - added series removal methods;, +, +Patches:, +, +1918209 : LogAxis createTickLabel() changed from private to protected;, +1914411 : Simplify plot event notification;, +1913751 : XYPlot and CategoryPlot addMarker() methods with optional , +          notification;, +1902418 : Bug fix for LogAxis vertical labels;, +1901599 : Fixes for XYTitleAnnotation;, +1891849 by Martin Hilpert : new curve option for pie chart label links;, +1874890 by Ulrich Voigt : added step point to XYStepRenderer;, +1873328 : Enhancements to RelativeDateFormat;, +1871902 by Martin Hoeller : PolarPlot now has angleTickUnit attribute;, +1868745 : Fix label anchor points on LogAxis;, +1866446 by Rob Van der Sanden : added maximumBarWidth to BoxAndWhiskerRenderer;, +, +Bug Fixes:, +, +1932146 - PeriodAxis.setRange() doesn't notify listeners;, +1927239 - Fix calculation of cumulative range;, +1926517 - Bugs in data range calculation for combined plots;, +1920854 - PiePlot3D labels drawn multiple times;, +1897580 - Fix for DefaultIntervalCategoryDataset;, +1892419 - Wrong default for minor tick count in LogAxis;, +1880114 - VectorRenderer doesn't work for horizontal plot orientation;, +1873160 - DialPlot clipping issues;, +1868521 - Problem saving charts to JPEG format;, +1864222 - Error on TimeSeries createCopy() method;, +, +The DatasetUtilities.sampleFunction2D() has been changed to sample the correct , +number of points - you should check any code that calls this method.  The, +XYBlockRenderer class now generates entities.  Bugs in the removeDomainMarker(), +and removeRangeMarker() methods in the CategoryPlot and XYPlot classes have , +been fixed.  A bug in the TimePeriodValues range calculation has been fixed., +, +, +++ b/NEWS, +JFreeChart 1.0.10, +-----------------, +11 April 2008, +, +This release contains various bug fixes and minor enhancements to JFreeChart., +PiePlot labelling has been enhanced (new curve options, and more robust bounds, +checking).  The BoxAndWhiskerRenderer now has a maximumBarWidth attribute, the , +XYStepRenderer has a new stepPoint attribute.  The RelativeDateFormat class , +has new options., +, +API Adjustments:, +, +- BoxAndWhiskerRenderer - added maximumBarWidth attribute (see patch 1866446);, +- DatasetUtilities - iterateCategoryRangeBounds() is deprecated, the method, +    has been renamed iterateRangeBounds(CategoryDataset) for consistency;, +- DefaultKeyedValue - the constructor now prevents a null key;, +- LogFormat - now has a 'powerLabel' attribute;, +- TimeSeriesCollection - getSeries(String) changed to getSeries(Comparable);, +- XIntervalSeriesCollection - added series removal methods;, +- YIntervalSeriesCollection - added series removal methods;, +- XYIntervalSeriesCollection - added series removal methods;, +, +Patches:, +, +1918209 : LogAxis createTickLabel() changed from private to protected;, +1914411 : Simplify plot event notification;, +1913751 : XYPlot and CategoryPlot addMarker() methods with optional , +          notification;, +1902418 : Bug fix for LogAxis vertical labels;, +1901599 : Fixes for XYTitleAnnotation;, +1891849 by Martin Hilpert : new curve option for pie chart label links;, +1874890 by Ulrich Voigt : added step point to XYStepRenderer;, +1873328 : Enhancements to RelativeDateFormat;, +1871902 by Martin Hoeller : PolarPlot now has angleTickUnit attribute;, +1868745 : Fix label anchor points on LogAxis;, +1866446 by Rob Van der Sanden : added maximumBarWidth to BoxAndWhiskerRenderer;, +, +Bug Fixes:, +, +1932146 - PeriodAxis.setRange() doesn't notify listeners;, +1927239 - Fix calculation of cumulative range;]
[+++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +++ b/src/test/java/org/jfree/chart/JFreeChartTest.java, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +++ b/src/test/java/org/jfree/chart/JFreeChartTest.java, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemCollectionTest.java, +        LegendItemCollection c2 = (LegendItemCollection) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +++ b/src/test/java/org/jfree/chart/JFreeChartTest.java, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemCollectionTest.java, +        LegendItemCollection c2 = (LegendItemCollection) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemTest.java, +        item2 = (LegendItem) TestUtils.serialised(item1);, +        LegendItem item2 = (LegendItem) TestUtils.serialised(item1);, +++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +++ b/src/test/java/org/jfree/chart/JFreeChartTest.java, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemCollectionTest.java, +        LegendItemCollection c2 = (LegendItemCollection) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemTest.java, +        item2 = (LegendItem) TestUtils.serialised(item1);, +        LegendItem item2 = (LegendItem) TestUtils.serialised(item1);, +++ b/src/test/java/org/jfree/chart/PaintMapTest.java, +        PaintMap m2 = (PaintMap) TestUtils.serialised(m1);, +        PaintMap m2 = (PaintMap) TestUtils.serialised(m1);, +++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +++ b/src/test/java/org/jfree/chart/JFreeChartTest.java, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemCollectionTest.java, +        LegendItemCollection c2 = (LegendItemCollection) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemTest.java, +        item2 = (LegendItem) TestUtils.serialised(item1);, +        LegendItem item2 = (LegendItem) TestUtils.serialised(item1);, +++ b/src/test/java/org/jfree/chart/PaintMapTest.java, +        PaintMap m2 = (PaintMap) TestUtils.serialised(m1);, +        PaintMap m2 = (PaintMap) TestUtils.serialised(m1);, +++ b/src/test/java/org/jfree/chart/StandardChartThemeTest.java, +        StandardChartTheme t2 = (StandardChartTheme) TestUtils.serialised(t1);, +++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +++ b/src/test/java/org/jfree/chart/JFreeChartTest.java, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemCollectionTest.java, +        LegendItemCollection c2 = (LegendItemCollection) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemTest.java, +        item2 = (LegendItem) TestUtils.serialised(item1);, +        LegendItem item2 = (LegendItem) TestUtils.serialised(item1);, +++ b/src/test/java/org/jfree/chart/PaintMapTest.java, +        PaintMap m2 = (PaintMap) TestUtils.serialised(m1);, +        PaintMap m2 = (PaintMap) TestUtils.serialised(m1);, +++ b/src/test/java/org/jfree/chart/StandardChartThemeTest.java, +        StandardChartTheme t2 = (StandardChartTheme) TestUtils.serialised(t1);, +++ b/src/test/java/org/jfree/chart/StrokeMapTest.java, +        StrokeMap m2 = (StrokeMap) TestUtils.serialised(m1);, +        StrokeMap m2 = (StrokeMap) TestUtils.serialised(m1);, +++ b/src/test/java/org/jfree/chart/ChartRenderingInfoTest.java, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +        ChartRenderingInfo i2 = (ChartRenderingInfo) TestUtils.serialised(i1);, +++ b/src/test/java/org/jfree/chart/JFreeChartTest.java, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +        JFreeChart c2 = (JFreeChart) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemCollectionTest.java, +        LegendItemCollection c2 = (LegendItemCollection) TestUtils.serialised(c1);, +++ b/src/test/java/org/jfree/chart/LegendItemTest.java]
